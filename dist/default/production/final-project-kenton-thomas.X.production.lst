

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 15 09:44:18 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 21/07/2023 GMT
    79                           ; 
    80                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F67K40 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	idataBANK0
   114   005622                     __pidataBANK0:
   115                           	callstack 0
   116                           
   117                           ;initializer for main@F14667
   118   005622  04                 	db	4
   119   005623  04                 	db	4
   120   005624  01                 	db	1
   121   005625  01                 	db	1
   122                           
   123                           ;initializer for _ambient
   124   005626  01F4               	dw	500
   125   000000                     _T0CON0bits	set	4053
   126   000000                     _T0CON1bits	set	4054
   127   000000                     _TRISCbits	set	3971
   128   000000                     _RC4STAbits	set	3815
   129   000000                     _SP4BRGH	set	3814
   130   000000                     _TRISBbits	set	3970
   131   000000                     _TRISAbits	set	3969
   132   000000                     _TRISEbits	set	3973
   133   000000                     _TRISGbits	set	3975
   134   000000                     _LATFbits	set	3966
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISHbits	set	3976
   137   000000                     _TRISDbits	set	3972
   138   000000                     _LATEbits	set	3965
   139   000000                     _LATGbits	set	3967
   140   000000                     _LATHbits	set	3968
   141   000000                     _SSP2CON2bits	set	3802
   142   000000                     _RX4PPS	set	3605
   143   000000                     _SSP2CLKPPS	set	3612
   144   000000                     _SSP2DATPPS	set	3613
   145   000000                     _PIE0bits	set	3625
   146   000000                     _CCPR4H	set	3873
   147   000000                     _CCPR3H	set	3877
   148   000000                     _CCPR2H	set	4006
   149   000000                     _CCPR1H	set	4010
   150   000000                     _CCP1CONbits	set	4011
   151   000000                     _CCPTMRS0bits	set	4013
   152   000000                     _T2PR	set	4028
   153   000000                     _T2CONbits	set	4029
   154   000000                     _TMR0L	set	4051
   155   000000                     _TMR0H	set	4052
   156   000000                     _INTCONbits	set	4082
   157   000000                     _CCP2CONbits	set	4007
   158   000000                     _CCP3CONbits	set	3878
   159   000000                     _ADREFbits	set	3928
   160   000000                     _LATAbits	set	3961
   161   000000                     _LATDbits	set	3964
   162   000000                     _PORTFbits	set	3982
   163   000000                     _CCP4CONbits	set	3874
   164   000000                     _PIE4bits	set	3629
   165   000000                     _PIR0bits	set	3635
   166   000000                     _RD5PPS	set	3695
   167   000000                     _ANSELDbits	set	3751
   168   000000                     _SSP2ADD	set	3798
   169   000000                     _SSP2CON1bits	set	3801
   170   000000                     _LATCbits	set	3963
   171   000000                     _SP4BRGL	set	3813
   172   000000                     _TX4STAbits	set	3816
   173   000000                     _BAUD4CONbits	set	3817
   174   000000                     _SSP2CON2	set	3802
   175   000000                     _SSP2STAT	set	3800
   176   000000                     _ANSELFbits	set	3764
   177   000000                     _SSP2BUF	set	3797
   178   000000                     _IPR0bits	set	3615
   179   000000                     _RE2PPS	set	3700
   180   000000                     _ANSELBbits	set	3738
   181   000000                     _RD6PPS	set	3696
   182   000000                     _RC0PPS	set	3682
   183   000000                     _RC7PPS	set	3689
   184   000000                     _ADPCH	set	3935
   185   000000                     _ADRESH	set	3940
   186   000000                     _ADCON0bits	set	3936
   187   000000                     _RE4PPS	set	3702
   188   000000                     _RG6PPS	set	3720
   189   000000                     _T2CLKCONbits	set	4031
   190   000000                     _T2HLTbits	set	4030
   191                           
   192                           ; #config settings
   193                           
   194                           	psect	cinit
   195   005252                     __pcinit:
   196                           	callstack 0
   197   005252                     start_initialization:
   198                           	callstack 0
   199   005252                     __initialization:
   200                           	callstack 0
   201                           
   202                           ; Initialize objects allocated to BANK0 (6 bytes)
   203                           ; load TBLPTR registers with __pidataBANK0
   204   005252  0E22               	movlw	low __pidataBANK0
   205   005254  6EF6               	movwf	tblptrl,c
   206   005256  0E56               	movlw	high __pidataBANK0
   207   005258  6EF7               	movwf	tblptrh,c
   208   00525A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   209   00525C  6EF8               	movwf	tblptru,c
   210   00525E  EE00  F0F6         	lfsr	0,__pdataBANK0
   211   005262  EE10 F006          	lfsr	1,6
   212   005266                     copy_data0:
   213   005266  0009               	tblrd		*+
   214   005268  CFF5 FFEE          	movff	tablat,postinc0
   215   00526C  50E5               	movf	postdec1,w,c
   216   00526E  50E1               	movf	fsr1l,w,c
   217   005270  E1FA               	bnz	copy_data0
   218                           
   219                           ; Clear objects allocated to BANK2 (142 bytes)
   220   005272  EE02  F000         	lfsr	0,__pbssBANK2
   221   005276  0E8E               	movlw	142
   222   005278                     clear_0:
   223   005278  6AEE               	clrf	postinc0,c
   224   00527A  06E8               	decf	wreg,f,c
   225   00527C  E1FD               	bnz	clear_0
   226                           
   227                           ; Clear objects allocated to BANK1 (40 bytes)
   228   00527E  EE01  F0D8         	lfsr	0,__pbssBANK1
   229   005282  0E28               	movlw	40
   230   005284                     clear_1:
   231   005284  6AEE               	clrf	postinc0,c
   232   005286  06E8               	decf	wreg,f,c
   233   005288  E1FD               	bnz	clear_1
   234                           
   235                           ; Clear objects allocated to BANK0 (62 bytes)
   236   00528A  EE00  F0B8         	lfsr	0,__pbssBANK0
   237   00528E  0E3E               	movlw	62
   238   005290                     clear_2:
   239   005290  6AEE               	clrf	postinc0,c
   240   005292  06E8               	decf	wreg,f,c
   241   005294  E1FD               	bnz	clear_2
   242                           
   243                           ; Clear objects allocated to COMRAM (4 bytes)
   244   005296  6A4E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   245   005298  6A4D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   246   00529A  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   247   00529C  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   248   00529E                     end_of_initialization:
   249                           	callstack 0
   250   00529E                     __end_of__initialization:
   251                           	callstack 0
   252   00529E  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   253   0052A0  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   254   0052A2  0100               	movlb	0
   255   0052A4  EFFF  F014         	goto	_main	;jump to C main() function
   256                           
   257                           	psect	bssCOMRAM
   258   00004B                     __pbssCOMRAM:
   259                           	callstack 0
   260   00004B                     _TxBufReadCnt:
   261                           	callstack 0
   262   00004B                     	ds	1
   263   00004C                     _TxBufWriteCnt:
   264                           	callstack 0
   265   00004C                     	ds	1
   266   00004D                     _RxBufReadCnt:
   267                           	callstack 0
   268   00004D                     	ds	1
   269   00004E                     _RxBufWriteCnt:
   270                           	callstack 0
   271   00004E                     	ds	1
   272                           
   273                           	psect	bssBANK0
   274   0000B8                     __pbssBANK0:
   275                           	callstack 0
   276   0000B8                     	ds	40
   277   0000E0                     _EUSART4RXbuf:
   278                           	callstack 0
   279   0000E0                     	ds	20
   280   0000F4                     _lost:
   281                           	callstack 0
   282   0000F4                     	ds	1
   283   0000F5                     _brightnessChange:
   284                           	callstack 0
   285   0000F5                     	ds	1
   286                           
   287                           	psect	dataBANK0
   288   0000F6                     __pdataBANK0:
   289                           	callstack 0
   290   0000F6                     main@F14667:
   291                           	callstack 0
   292   0000F6                     	ds	4
   293   0000FA                     _ambient:
   294                           	callstack 0
   295   0000FA                     	ds	2
   296                           
   297                           	psect	bssBANK1
   298   0001D8                     __pbssBANK1:
   299                           	callstack 0
   300   0001D8                     	ds	40
   301                           
   302                           	psect	bssBANK2
   303   000200                     __pbssBANK2:
   304                           	callstack 0
   305   000200                     	ds	82
   306   000252                     _EUSART4TXbuf:
   307                           	callstack 0
   308   000252                     	ds	60
   309                           
   310                           	psect	cstackBANK1
   311   000100                     __pcstackBANK1:
   312                           	callstack 0
   313   000100                     main@straightTime:
   314                           	callstack 0
   315                           
   316                           ; 82 bytes @ 0x0
   317   000100                     	ds	82
   318   000152                     main@moveSequence:
   319                           	callstack 0
   320                           
   321                           ; 40 bytes @ 0x52
   322   000152                     	ds	40
   323   00017A                     main@wall:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x7A
   327   00017A                     	ds	1
   328   00017B                     main@ambientNew:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x7B
   332   00017B                     	ds	2
   333   00017D                     main@reverseDuration:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x7D
   337   00017D                     	ds	2
   338   00017F                     main@red:
   339                           	callstack 0
   340                           
   341                           ; 6 bytes @ 0x7F
   342   00017F                     	ds	6
   343   000185                     main@green:
   344                           	callstack 0
   345                           
   346                           ; 6 bytes @ 0x85
   347   000185                     	ds	6
   348   00018B                     main@blue:
   349                           	callstack 0
   350                           
   351                           ; 6 bytes @ 0x8B
   352   00018B                     	ds	6
   353   000191                     main@yellow:
   354                           	callstack 0
   355                           
   356                           ; 6 bytes @ 0x91
   357   000191                     	ds	6
   358   000197                     main@pink:
   359                           	callstack 0
   360                           
   361                           ; 6 bytes @ 0x97
   362   000197                     	ds	6
   363   00019D                     main@orange:
   364                           	callstack 0
   365                           
   366                           ; 6 bytes @ 0x9D
   367   00019D                     	ds	6
   368   0001A3                     main@lightblue:
   369                           	callstack 0
   370                           
   371                           ; 6 bytes @ 0xA3
   372   0001A3                     	ds	6
   373   0001A9                     main@white:
   374                           	callstack 0
   375                           
   376                           ; 6 bytes @ 0xA9
   377   0001A9                     	ds	6
   378   0001AF                     main@turnSpeed:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0xAF
   382   0001AF                     	ds	1
   383   0001B0                     main@turnRamp:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0xB0
   387   0001B0                     	ds	1
   388   0001B1                     main@straightSpeed:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0xB1
   392   0001B1                     	ds	1
   393   0001B2                     main@color:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0xB2
   397   0001B2                     	ds	1
   398   0001B3                     main@curMove:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0xB3
   402   0001B3                     	ds	1
   403   0001B4                     main@straightRamp:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0xB4
   407   0001B4                     	ds	1
   408   0001B5                     main@turnDuration:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0xB5
   412   0001B5                     	ds	1
   413   0001B6                     main@HSV:
   414                           	callstack 0
   415                           
   416                           ; 6 bytes @ 0xB6
   417   0001B6                     	ds	6
   418   0001BC                     main@RGBC:
   419                           	callstack 0
   420                           
   421                           ; 8 bytes @ 0xBC
   422   0001BC                     	ds	8
   423   0001C4                     main@motorR:
   424                           	callstack 0
   425                           
   426                           ; 10 bytes @ 0xC4
   427   0001C4                     	ds	10
   428   0001CE                     main@motorL:
   429                           	callstack 0
   430                           
   431                           ; 10 bytes @ 0xCE
   432   0001CE                     	ds	10
   433                           
   434                           	psect	cstackBANK0
   435   000060                     __pcstackBANK0:
   436                           	callstack 0
   437   000060                     ??_color_detect:
   438   000060                     move@mL:
   439                           	callstack 0
   440   000060                     _rgb_2_hsv$3590:
   441                           	callstack 0
   442                           
   443                           ; 4 bytes @ 0x0
   444   000060                     	ds	2
   445   000062                     move@mR:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x2
   449   000062                     	ds	2
   450   000064                     move@color:
   451                           	callstack 0
   452   000064                     rgb_2_hsv@cmin:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x4
   456   000064                     	ds	1
   457   000065                     move@moveSequence:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x5
   461   000065                     	ds	1
   462   000066                     _rgb_2_hsv$3588:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x6
   466   000066                     	ds	1
   467   000067                     move@straightTime:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x7
   471   000067                     	ds	1
   472   000068                     _rgb_2_hsv$3589:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x8
   476   000068                     	ds	1
   477   000069                     move@curMove:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x9
   481   000069                     	ds	1
   482   00006A                     move@straightSpeed:
   483                           	callstack 0
   484   00006A                     rgb_2_hsv@r:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0xA
   488   00006A                     	ds	1
   489   00006B                     move@reverseDuration:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0xB
   493   00006B                     	ds	1
   494   00006C                     rgb_2_hsv@cmax:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0xC
   498   00006C                     	ds	1
   499   00006D                     move@straightRamp:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0xD
   503   00006D                     	ds	1
   504   00006E                     move@turnSpeed:
   505                           	callstack 0
   506   00006E                     rgb_2_hsv@diff:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0xE
   510   00006E                     	ds	1
   511   00006F                     move@turnDuration:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0xF
   515   00006F                     	ds	1
   516   000070                     move@turnRamp:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x10
   520   000070                     	ds	2
   521   000072                     rgb_2_hsv@g:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x12
   525   000072                     	ds	2
   526   000074                     rgb_2_hsv@b:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x14
   530   000074                     	ds	2
   531   000076                     color_calibration@RGBC:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x16
   535   000076                     	ds	2
   536   000078                     color_calibration@HSV:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x18
   540   000078                     	ds	2
   541   00007A                     color_calibration@red:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x1A
   545   00007A                     	ds	2
   546   00007C                     color_calibration@green:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x1C
   550   00007C                     	ds	2
   551   00007E                     color_calibration@blue:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x1E
   555   00007E                     	ds	2
   556   000080                     color_calibration@yellow:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x20
   560   000080                     	ds	2
   561   000082                     color_calibration@pink:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x22
   565   000082                     	ds	2
   566   000084                     color_calibration@orange:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x24
   570   000084                     	ds	2
   571   000086                     color_calibration@lightblue:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x26
   575   000086                     	ds	2
   576   000088                     color_calibration@white:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x28
   580   000088                     	ds	2
   581   00008A                     ??_main:
   582                           
   583                           ; 1 bytes @ 0x2A
   584   00008A                     	ds	2
   585   00008C                     main@buf:
   586                           	callstack 0
   587                           
   588                           ; 40 bytes @ 0x2C
   589   00008C                     	ds	40
   590   0000B4                     main@testSequence:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x54
   594   0000B4                     	ds	4
   595                           
   596                           	psect	cstackCOMRAM
   597   000001                     __pcstackCOMRAM:
   598                           	callstack 0
   599   000001                     ??i2_I2C_2_Master_Idle:
   600   000001                     ?i2___lwdiv:
   601                           	callstack 0
   602   000001                     i2___lwdiv@dividend:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x0
   606   000001                     	ds	1
   607   000002                     i2I2C_2_Master_Write@data_byte:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x1
   611   000002                     	ds	1
   612   000003                     i2color_writetoaddr@value:
   613                           	callstack 0
   614   000003                     i2___lwdiv@divisor:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x2
   618   000003                     	ds	1
   619   000004                     i2color_writetoaddr@address:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x3
   623   000004                     	ds	1
   624   000005                     i2___lwdiv@quotient:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x4
   628   000005                     	ds	2
   629   000007                     i2___lwdiv@counter:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x6
   633   000007                     	ds	1
   634   000008                     ??i2_color_clear_init_interrupts:
   635                           
   636                           ; 1 bytes @ 0x7
   637   000008                     	ds	1
   638   000009                     i2color_clear_init_interrupts@high_threshold:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x8
   642   000009                     	ds	2
   643   00000B                     i2color_clear_init_interrupts@low_threshold:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0xA
   647   00000B                     	ds	2
   648   00000D                     ??_LowISR:
   649                           
   650                           ; 1 bytes @ 0xC
   651   00000D                     	ds	3
   652   000010                     ??_I2C_2_Master_Idle:
   653   000010                     ?_get16bitTMR0val:
   654                           	callstack 0
   655   000010                     ?_min:
   656                           	callstack 0
   657   000010                     ?_max:
   658                           	callstack 0
   659   000010                     ?___wmul:
   660                           	callstack 0
   661   000010                     ?___awdiv:
   662                           	callstack 0
   663   000010                     ?___lmul:
   664                           	callstack 0
   665   000010                     white_Light@state:
   666                           	callstack 0
   667   000010                     ADC_getval@tmpval:
   668                           	callstack 0
   669   000010                     max@a:
   670                           	callstack 0
   671   000010                     min@a:
   672                           	callstack 0
   673   000010                     initDCmotorsPWM@PWMperiod:
   674                           	callstack 0
   675   000010                     ___wmul@multiplier:
   676                           	callstack 0
   677   000010                     ___awdiv@dividend:
   678                           	callstack 0
   679   000010                     ___lmul@multiplier:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0xF
   683   000010                     	ds	1
   684   000011                     ??_I2C_2_Master_Read:
   685   000011                     I2C_2_Master_Write@data_byte:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x10
   689   000011                     	ds	1
   690   000012                     ??_get16bitTMR0val:
   691   000012                     color_writetoaddr@value:
   692                           	callstack 0
   693   000012                     I2C_2_Master_Read@ack:
   694                           	callstack 0
   695   000012                     max@b:
   696                           	callstack 0
   697   000012                     min@b:
   698                           	callstack 0
   699   000012                     ___wmul@multiplicand:
   700                           	callstack 0
   701   000012                     ___awdiv@divisor:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x11
   705   000012                     	ds	1
   706   000013                     color_writetoaddr@address:
   707                           	callstack 0
   708   000013                     I2C_2_Master_Read@tmp:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x12
   712   000013                     	ds	1
   713   000014                     ___awdiv@counter:
   714                           	callstack 0
   715   000014                     color_read@RGBC:
   716                           	callstack 0
   717   000014                     get16bitTMR0val@timer_low:
   718                           	callstack 0
   719   000014                     ___wmul@product:
   720                           	callstack 0
   721   000014                     ___lmul@multiplicand:
   722                           	callstack 0
   723   000014                     color_detect@HSV:
   724                           	callstack 0
   725                           
   726                           ; 6 bytes @ 0x13
   727   000014                     	ds	1
   728   000015                     ___awdiv@sign:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x14
   732   000015                     	ds	1
   733   000016                     ??_color_read:
   734   000016                     ?___lwdiv:
   735                           	callstack 0
   736   000016                     get16bitTMR0val@timer_high:
   737                           	callstack 0
   738   000016                     ___awdiv@quotient:
   739                           	callstack 0
   740   000016                     ___lwdiv@dividend:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x15
   744   000016                     	ds	2
   745   000018                     batteryLevel@batteryVoltage:
   746                           	callstack 0
   747   000018                     get16bitTMR0val@timer_val:
   748                           	callstack 0
   749   000018                     ___lwdiv@divisor:
   750                           	callstack 0
   751   000018                     ___lmul@product:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x17
   755   000018                     	ds	1
   756   000019                     batteryLevel@batteryQuarter:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x18
   760   000019                     	ds	1
   761   00001A                     ___lwdiv@quotient:
   762                           	callstack 0
   763   00001A                     color_detect@red:
   764                           	callstack 0
   765                           
   766                           ; 6 bytes @ 0x19
   767   00001A                     	ds	2
   768   00001C                     ?___lldiv:
   769                           	callstack 0
   770   00001C                     ?___aldiv:
   771                           	callstack 0
   772   00001C                     ___lwdiv@counter:
   773                           	callstack 0
   774   00001C                     ___lldiv@dividend:
   775                           	callstack 0
   776   00001C                     ___aldiv@dividend:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x1B
   780   00001C                     	ds	1
   781   00001D                     ??_color_clear_init_interrupts:
   782   00001D                     setMotorPWM@m:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x1C
   786   00001D                     	ds	1
   787   00001E                     color_clear_init_interrupts@high_threshold:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x1D
   791   00001E                     	ds	1
   792   00001F                     ??_setMotorPWM:
   793                           
   794                           ; 1 bytes @ 0x1E
   795   00001F                     	ds	1
   796   000020                     color_clear_init_interrupts@low_threshold:
   797                           	callstack 0
   798   000020                     ___lldiv@divisor:
   799                           	callstack 0
   800   000020                     ___aldiv@divisor:
   801                           	callstack 0
   802   000020                     color_detect@green:
   803                           	callstack 0
   804                           
   805                           ; 6 bytes @ 0x1F
   806   000020                     	ds	1
   807   000021                     setMotorPWM@posDuty:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x20
   811   000021                     	ds	1
   812   000022                     ??_color_click_init:
   813   000022                     setMotorPWM@negDuty:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x21
   817   000022                     	ds	1
   818   000023                     stop@mL:
   819                           	callstack 0
   820   000023                     turnLeft@mL:
   821                           	callstack 0
   822   000023                     turnRight@mL:
   823                           	callstack 0
   824   000023                     fullSpeedAhead@mL:
   825                           	callstack 0
   826   000023                     reverseOneSquare@mL:
   827                           	callstack 0
   828   000023                     wallAdjust@mL:
   829                           	callstack 0
   830   000023                     reverseWallAdjust@mL:
   831                           	callstack 0
   832   000023                     reverseShort@mL:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x22
   836   000023                     	ds	1
   837   000024                     ___aldiv@counter:
   838                           	callstack 0
   839   000024                     ___lldiv@quotient:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x23
   843   000024                     	ds	1
   844   000025                     ___aldiv@sign:
   845                           	callstack 0
   846   000025                     stop@mR:
   847                           	callstack 0
   848   000025                     turnLeft@mR:
   849                           	callstack 0
   850   000025                     turnRight@mR:
   851                           	callstack 0
   852   000025                     fullSpeedAhead@mR:
   853                           	callstack 0
   854   000025                     reverseOneSquare@mR:
   855                           	callstack 0
   856   000025                     wallAdjust@mR:
   857                           	callstack 0
   858   000025                     reverseWallAdjust@mR:
   859                           	callstack 0
   860   000025                     reverseShort@mR:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x24
   864   000025                     	ds	1
   865   000026                     ___aldiv@quotient:
   866                           	callstack 0
   867   000026                     color_detect@blue:
   868                           	callstack 0
   869                           
   870                           ; 6 bytes @ 0x25
   871   000026                     	ds	1
   872   000027                     stop@straightRamp:
   873                           	callstack 0
   874   000027                     turnLeft@turnSpeed:
   875                           	callstack 0
   876   000027                     turnRight@turnSpeed:
   877                           	callstack 0
   878   000027                     fullSpeedAhead@straightSpeed:
   879                           	callstack 0
   880   000027                     reverseOneSquare@straightSpeed:
   881                           	callstack 0
   882   000027                     wallAdjust@straightSpeed:
   883                           	callstack 0
   884   000027                     reverseWallAdjust@straightSpeed:
   885                           	callstack 0
   886   000027                     reverseShort@straightSpeed:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x26
   890   000027                     	ds	1
   891   000028                     ??_stop:
   892   000028                     turnLeft@turnDuration:
   893                           	callstack 0
   894   000028                     turnRight@turnDuration:
   895                           	callstack 0
   896   000028                     fullSpeedAhead@straightRamp:
   897                           	callstack 0
   898   000028                     wallAdjust@straightRamp:
   899                           	callstack 0
   900   000028                     reverseWallAdjust@straightRamp:
   901                           	callstack 0
   902   000028                     reverseShort@straightRamp:
   903                           	callstack 0
   904   000028                     ___lldiv@counter:
   905                           	callstack 0
   906   000028                     reverseOneSquare@reverseDuration:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x27
   910   000028                     	ds	1
   911   000029                     ??_fullSpeedAhead:
   912   000029                     ??_wallAdjust:
   913   000029                     ??_reverseShort:
   914   000029                     ??_reverseWallAdjust:
   915   000029                     turnLeft@turnRamp:
   916                           	callstack 0
   917   000029                     turnRight@turnRamp:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x28
   921   000029                     	ds	1
   922   00002A                     ??_turnRight:
   923   00002A                     ??_turnLeft:
   924   00002A                     reverseOneSquare@straightRamp:
   925                           	callstack 0
   926   00002A                     rgb_2_hsv@RGBC:
   927                           	callstack 0
   928                           
   929                           ; 8 bytes @ 0x29
   930   00002A                     	ds	1
   931   00002B                     ??_reverseOneSquare:
   932   00002B                     stop@i:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x2A
   936   00002B                     	ds	1
   937   00002C                     wallAdjust@adjustDuration:
   938                           	callstack 0
   939   00002C                     reverseWallAdjust@reverseAdjustDuration:
   940                           	callstack 0
   941   00002C                     reverseShort@shortReverseDuration:
   942                           	callstack 0
   943   00002C                     fullSpeedAhead@i:
   944                           	callstack 0
   945   00002C                     color_detect@yellow:
   946                           	callstack 0
   947                           
   948                           ; 6 bytes @ 0x2B
   949   00002C                     	ds	1
   950   00002D                     wallAdjust@wallReverseDuration:
   951                           	callstack 0
   952   00002D                     reverseWallAdjust@reverseWallSpeed:
   953                           	callstack 0
   954   00002D                     stop@cur_power:
   955                           	callstack 0
   956   00002D                     turnLeft@i:
   957                           	callstack 0
   958   00002D                     turnRight@i:
   959                           	callstack 0
   960   00002D                     reverseShort@i:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x2C
   964   00002D                     	ds	1
   965   00002E                     wallAdjust@wallSpeed:
   966                           	callstack 0
   967   00002E                     fullSpeedAhead@cur_power:
   968                           	callstack 0
   969   00002E                     reverseOneSquare@i:
   970                           	callstack 0
   971   00002E                     reverseWallAdjust@i:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x2D
   975   00002E                     	ds	1
   976   00002F                     turnLeft@cur_power:
   977                           	callstack 0
   978   00002F                     turnRight@cur_power:
   979                           	callstack 0
   980   00002F                     wallAdjust@i:
   981                           	callstack 0
   982   00002F                     reverseShort@cur_power:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x2E
   986   00002F                     	ds	1
   987   000030                     reverseOneSquare@cur_power:
   988                           	callstack 0
   989   000030                     reverseWallAdjust@cur_power:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x2F
   993   000030                     	ds	1
   994   000031                     wallAdjust@cur_power:
   995                           	callstack 0
   996   000031                     calibration@mL:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x30
  1000   000031                     	ds	1
  1001   000032                     rgb_2_hsv@HSV:
  1002                           	callstack 0
  1003   000032                     returnHome@mL:
  1004                           	callstack 0
  1005   000032                     lostReturnHome@mL:
  1006                           	callstack 0
  1007   000032                     color_detect@pink:
  1008                           	callstack 0
  1009                           
  1010                           ; 6 bytes @ 0x31
  1011   000032                     	ds	1
  1012   000033                     calibration@mR:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x32
  1016   000033                     	ds	1
  1017   000034                     ??_rgb_2_hsv:
  1018   000034                     returnHome@mR:
  1019                           	callstack 0
  1020   000034                     lostReturnHome@mR:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x33
  1024   000034                     	ds	1
  1025   000035                     calibration@turnSpeed:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x34
  1029   000035                     	ds	1
  1030   000036                     returnHome@moveSequence:
  1031                           	callstack 0
  1032   000036                     lostReturnHome@moveSequence:
  1033                           	callstack 0
  1034   000036                     calibration@turnDuration:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x35
  1038   000036                     	ds	2
  1039   000038                     calibration@turnRamp:
  1040                           	callstack 0
  1041   000038                     returnHome@straightTime:
  1042                           	callstack 0
  1043   000038                     lostReturnHome@straightTime:
  1044                           	callstack 0
  1045   000038                     color_detect@orange:
  1046                           	callstack 0
  1047                           
  1048                           ; 6 bytes @ 0x37
  1049   000038                     	ds	1
  1050   000039                     ??_calibration:
  1051                           
  1052                           ; 1 bytes @ 0x38
  1053   000039                     	ds	1
  1054   00003A                     returnHome@curMove:
  1055                           	callstack 0
  1056   00003A                     lostReturnHome@curMove:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x39
  1060   00003A                     	ds	1
  1061   00003B                     returnHome@straightSpeed:
  1062                           	callstack 0
  1063   00003B                     lostReturnHome@straightSpeed:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x3A
  1067   00003B                     	ds	1
  1068   00003C                     returnHome@reverseDuration:
  1069                           	callstack 0
  1070   00003C                     lostReturnHome@reverseDuration:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x3B
  1074   00003C                     	ds	2
  1075   00003E                     returnHome@straightRamp:
  1076                           	callstack 0
  1077   00003E                     lostReturnHome@straightRamp:
  1078                           	callstack 0
  1079   00003E                     color_detect@lightblue:
  1080                           	callstack 0
  1081                           
  1082                           ; 6 bytes @ 0x3D
  1083   00003E                     	ds	1
  1084   00003F                     returnHome@turnSpeed:
  1085                           	callstack 0
  1086   00003F                     lostReturnHome@turnSpeed:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x3E
  1090   00003F                     	ds	1
  1091   000040                     ??_color_calibration:
  1092   000040                     returnHome@turnDuration:
  1093                           	callstack 0
  1094   000040                     lostReturnHome@turnDuration:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x3F
  1098   000040                     	ds	1
  1099   000041                     returnHome@turnRamp:
  1100                           	callstack 0
  1101   000041                     lostReturnHome@turnRamp:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x40
  1105   000041                     	ds	1
  1106   000042                     ??_lostReturnHome:
  1107   000042                     ??_returnHome:
  1108                           
  1109                           ; 1 bytes @ 0x41
  1110   000042                     	ds	2
  1111   000044                     color_detect@white:
  1112                           	callstack 0
  1113                           
  1114                           ; 6 bytes @ 0x43
  1115   000044                     	ds	2
  1116   000046                     lostReturnHome@i:
  1117                           	callstack 0
  1118                           
  1119                           ; 1 bytes @ 0x45
  1120   000046                     	ds	2
  1121   000048                     returnHome@i:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x47
  1125   000048                     	ds	1
  1126   000049                     ??_move:
  1127                           
  1128                           ; 1 bytes @ 0x48
  1129   000049                     	ds	1
  1130   00004A                     color_detect@color:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x49
  1134   00004A                     	ds	1
  1135                           
  1136 ;;
  1137 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1138 ;;
  1139 ;; *************** function _main *****************
  1140 ;; Defined at:
  1141 ;;		line 28 in file "main.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  straightTime   82    0[BANK1 ] unsigned int [41]
  1146 ;;  moveSequence   40   82[BANK1 ] unsigned char [40]
  1147 ;;  buf            40   44[BANK0 ] unsigned char [40]
  1148 ;;  motorL         10  206[BANK1 ] struct DC_motor
  1149 ;;  motorR         10  196[BANK1 ] struct DC_motor
  1150 ;;  RGBC            8  188[BANK1 ] struct RGBC_val
  1151 ;;  RGBC_n          8    0        struct RGBC_val
  1152 ;;  HSV             6  182[BANK1 ] struct HSV_val
  1153 ;;  white           6  169[BANK1 ] struct HSV_calib
  1154 ;;  lightblue       6  163[BANK1 ] struct HSV_calib
  1155 ;;  orange          6  157[BANK1 ] struct HSV_calib
  1156 ;;  pink            6  151[BANK1 ] struct HSV_calib
  1157 ;;  yellow          6  145[BANK1 ] struct HSV_calib
  1158 ;;  blue            6  139[BANK1 ] struct HSV_calib
  1159 ;;  green           6  133[BANK1 ] struct HSV_calib
  1160 ;;  red             6  127[BANK1 ] struct HSV_calib
  1161 ;;  testSequence    4   84[BANK0 ] unsigned char [4]
  1162 ;;  PWMcycle        2    0        unsigned int 
  1163 ;;  reverseDurat    2  125[BANK1 ] unsigned int 
  1164 ;;  ambientNew      2  123[BANK1 ] unsigned int 
  1165 ;;  turnDuration    1  181[BANK1 ] unsigned char 
  1166 ;;  straightRamp    1  180[BANK1 ] unsigned char 
  1167 ;;  curMove         1  179[BANK1 ] unsigned char 
  1168 ;;  color           1  178[BANK1 ] unsigned char 
  1169 ;;  straightSpee    1  177[BANK1 ] unsigned char 
  1170 ;;  turnRamp        1  176[BANK1 ] unsigned char 
  1171 ;;  turnSpeed       1  175[BANK1 ] unsigned char 
  1172 ;;  wall            1  122[BANK1 ] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1183 ;;      Locals:         0      44     216       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1184 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;      Totals:         0      46     216       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1186 ;;Total ram usage:      262 bytes
  1187 ;; Hardware stack levels required when called: 11
  1188 ;; This function calls:
  1189 ;;		_Buggy_init
  1190 ;;		_Interrupts_init
  1191 ;;		_Timer0_init
  1192 ;;		_batteryLevel
  1193 ;;		_calibration
  1194 ;;		_color_calibration
  1195 ;;		_color_clear_init_interrupts
  1196 ;;		_color_click_init
  1197 ;;		_color_detect
  1198 ;;		_color_read
  1199 ;;		_fullSpeedAhead
  1200 ;;		_get16bitTMR0val
  1201 ;;		_initDCmotorsPWM
  1202 ;;		_initUSART4
  1203 ;;		_lostReturnHome
  1204 ;;		_move
  1205 ;;		_resetTimer
  1206 ;;		_rgb_2_hsv
  1207 ;;		_stop
  1208 ;;		_wallAdjust
  1209 ;;		_white_Light
  1210 ;; This function is called by:
  1211 ;;		Startup code after reset
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text0
  1216   0029FE                     __ptext0:
  1217                           	callstack 0
  1218   0029FE                     _main:
  1219                           	callstack 20
  1220   0029FE                     
  1221                           ;main.c: 30:     char buf[40] = {0};
  1222   0029FE  EE20  F08C         	lfsr	2,main@buf
  1223   002A02  0E27               	movlw	39
  1224   002A04                     u3681:
  1225   002A04  6ADE               	clrf	postinc2,c
  1226   002A06  06E8               	decf	wreg,f,c
  1227   002A08  E2FD               	bc	u3681
  1228   002A0A                     
  1229                           ;main.c: 33:     unsigned int ambientNew;;main.c: 34:     char wall = 0;
  1230   002A0A  0E00               	movlw	0
  1231   002A0C  0101               	movlb	1	; () banked
  1232   002A0E  6F7A               	movwf	main@wall& (0+255),b
  1233   002A10                     
  1234                           ; BSR set to: 1
  1235                           ;main.c: 35:     unsigned char color = 0;
  1236   002A10  0E00               	movlw	0
  1237   002A12  6FB2               	movwf	main@color& (0+255),b
  1238   002A14                     
  1239                           ; BSR set to: 1
  1240                           ;main.c: 36:     unsigned char moveSequence[40] = {0};
  1241   002A14  EE21  F052         	lfsr	2,main@moveSequence
  1242   002A18  0E27               	movlw	39
  1243   002A1A                     u3691:
  1244   002A1A  6ADE               	clrf	postinc2,c
  1245   002A1C  06E8               	decf	wreg,f,c
  1246   002A1E  E2FD               	bc	u3691
  1247   002A20                     
  1248                           ; BSR set to: 1
  1249                           ;main.c: 37:     unsigned int straightTime[41] = {0};
  1250   002A20  EE21  F000         	lfsr	2,main@straightTime
  1251   002A24  0E51               	movlw	81
  1252   002A26                     u3701:
  1253   002A26  6ADE               	clrf	postinc2,c
  1254   002A28  06E8               	decf	wreg,f,c
  1255   002A2A  E2FD               	bc	u3701
  1256   002A2C                     
  1257                           ; BSR set to: 1
  1258                           ;main.c: 38:     char curMove = 0;
  1259   002A2C  0E00               	movlw	0
  1260   002A2E  6FB3               	movwf	main@curMove& (0+255),b
  1261   002A30                     
  1262                           ; BSR set to: 1
  1263                           ;main.c: 40:     unsigned char testSequence[4] = {4,4,1,1,8};
  1264   002A30  C0F6  F0B4         	movff	main@F14667,main@testSequence
  1265   002A34  C0F7  F0B5         	movff	main@F14667+1,main@testSequence+1
  1266   002A38  C0F8  F0B6         	movff	main@F14667+2,main@testSequence+2
  1267   002A3C  C0F9  F0B7         	movff	main@F14667+3,main@testSequence+3
  1268   002A40                     
  1269                           ; BSR set to: 1
  1270                           ;main.c: 43:     struct RGBC_val RGBC, RGBC_n;;main.c: 44:     struct HSV_val HSV;;main.
      +                          c: 45:     struct DC_motor motorL, motorR;;main.c: 48:     Buggy_init();
  1271   002A40  ECB8  F029         	call	_Buggy_init	;wreg free
  1272   002A44                     
  1273                           ;main.c: 49:     color_click_init();
  1274   002A44  EC9C  F029         	call	_color_click_init	;wreg free
  1275   002A48                     
  1276                           ;main.c: 50:     initUSART4();
  1277   002A48  ECB6  F02A         	call	_initUSART4	;wreg free
  1278   002A4C                     
  1279                           ;main.c: 51:     initDCmotorsPWM(PWMcycle);
  1280   002A4C  0E00               	movlw	0
  1281   002A4E  6E11               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1282   002A50  0EC7               	movlw	199
  1283   002A52  6E10               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1284   002A54  EC38  F028         	call	_initDCmotorsPWM	;wreg free
  1285   002A58                     
  1286                           ;main.c: 53:     motorL.power=0;
  1287   002A58  0E00               	movlw	0
  1288   002A5A  0101               	movlb	1	; () banked
  1289   002A5C  6FCE               	movwf	main@motorL& (0+255),b
  1290   002A5E                     
  1291                           ; BSR set to: 1
  1292                           ;main.c: 54:     motorL.direction=1;
  1293   002A5E  0E01               	movlw	1
  1294   002A60  6FCF               	movwf	(main@motorL+1)& (0+255),b
  1295   002A62                     
  1296                           ; BSR set to: 1
  1297                           ;main.c: 55:     motorL.brakemode=1;
  1298   002A62  0E01               	movlw	1
  1299   002A64  6FD0               	movwf	(main@motorL+2)& (0+255),b
  1300   002A66                     
  1301                           ; BSR set to: 1
  1302                           ;main.c: 56:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1303   002A66  0EAA               	movlw	170
  1304   002A68  6FD3               	movwf	(main@motorL+5)& (0+255),b
  1305   002A6A  0E0F               	movlw	15
  1306   002A6C  6FD4               	movwf	(main@motorL+6)& (0+255),b
  1307   002A6E                     
  1308                           ; BSR set to: 1
  1309                           ;main.c: 57:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1310   002A6E  0EA6               	movlw	166
  1311   002A70  6FD5               	movwf	(main@motorL+7)& (0+255),b
  1312   002A72  0E0F               	movlw	15
  1313   002A74  6FD6               	movwf	(main@motorL+8)& (0+255),b
  1314   002A76                     
  1315                           ; BSR set to: 1
  1316                           ;main.c: 58:     motorL.PWMperiod=PWMcycle;
  1317   002A76  0E00               	movlw	0
  1318   002A78  6FD2               	movwf	(main@motorL+4)& (0+255),b
  1319   002A7A  0EC7               	movlw	199
  1320   002A7C  6FD1               	movwf	(main@motorL+3)& (0+255),b
  1321   002A7E                     
  1322                           ; BSR set to: 1
  1323                           ;main.c: 59:     motorL.compensation=2;
  1324   002A7E  0E02               	movlw	2
  1325   002A80  6FD7               	movwf	(main@motorL+9)& (0+255),b
  1326   002A82                     
  1327                           ; BSR set to: 1
  1328                           ;main.c: 61:     motorR.power=0;
  1329   002A82  0E00               	movlw	0
  1330   002A84  6FC4               	movwf	main@motorR& (0+255),b
  1331   002A86                     
  1332                           ; BSR set to: 1
  1333                           ;main.c: 62:     motorR.direction=1;
  1334   002A86  0E01               	movlw	1
  1335   002A88  6FC5               	movwf	(main@motorR+1)& (0+255),b
  1336   002A8A                     
  1337                           ; BSR set to: 1
  1338                           ;main.c: 63:     motorR.brakemode=1;
  1339   002A8A  0E01               	movlw	1
  1340   002A8C  6FC6               	movwf	(main@motorR+2)& (0+255),b
  1341   002A8E                     
  1342                           ; BSR set to: 1
  1343                           ;main.c: 64:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1344   002A8E  0E25               	movlw	37
  1345   002A90  6FC9               	movwf	(main@motorR+5)& (0+255),b
  1346   002A92  0E0F               	movlw	15
  1347   002A94  6FCA               	movwf	(main@motorR+6)& (0+255),b
  1348   002A96                     
  1349                           ; BSR set to: 1
  1350                           ;main.c: 65:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1351   002A96  0E21               	movlw	33
  1352   002A98  6FCB               	movwf	(main@motorR+7)& (0+255),b
  1353   002A9A  0E0F               	movlw	15
  1354   002A9C  6FCC               	movwf	(main@motorR+8)& (0+255),b
  1355   002A9E                     
  1356                           ; BSR set to: 1
  1357                           ;main.c: 66:     motorR.PWMperiod=PWMcycle;
  1358   002A9E  0E00               	movlw	0
  1359   002AA0  6FC8               	movwf	(main@motorR+4)& (0+255),b
  1360   002AA2  0EC7               	movlw	199
  1361   002AA4  6FC7               	movwf	(main@motorR+3)& (0+255),b
  1362   002AA6                     
  1363                           ; BSR set to: 1
  1364                           ;main.c: 67:     motorR.compensation=0;
  1365   002AA6  0E00               	movlw	0
  1366   002AA8  6FCD               	movwf	(main@motorR+9)& (0+255),b
  1367   002AAA                     
  1368                           ; BSR set to: 1
  1369                           ;main.c: 70:     char straightSpeed=20;
  1370   002AAA  0E14               	movlw	20
  1371   002AAC  6FB1               	movwf	main@straightSpeed& (0+255),b
  1372   002AAE                     
  1373                           ; BSR set to: 1
  1374                           ;main.c: 71:     unsigned char straightRamp=2;
  1375   002AAE  0E02               	movlw	2
  1376   002AB0  6FB4               	movwf	main@straightRamp& (0+255),b
  1377   002AB2                     
  1378                           ; BSR set to: 1
  1379                           ;main.c: 73:     unsigned int reverseDuration=800;
  1380   002AB2  0E03               	movlw	3
  1381   002AB4  6F7E               	movwf	(main@reverseDuration+1)& (0+255),b
  1382   002AB6  0E20               	movlw	32
  1383   002AB8  6F7D               	movwf	main@reverseDuration& (0+255),b
  1384   002ABA                     
  1385                           ; BSR set to: 1
  1386                           ;main.c: 75:     char turnSpeed=40;
  1387   002ABA  0E28               	movlw	40
  1388   002ABC  6FAF               	movwf	main@turnSpeed& (0+255),b
  1389   002ABE                     
  1390                           ; BSR set to: 1
  1391                           ;main.c: 76:     unsigned char turnDuration=10;
  1392   002ABE  0E0A               	movlw	10
  1393   002AC0  6FB5               	movwf	main@turnDuration& (0+255),b
  1394   002AC2                     
  1395                           ; BSR set to: 1
  1396                           ;main.c: 77:     unsigned char turnRamp=1;
  1397   002AC2  0E01               	movlw	1
  1398   002AC4  6FB0               	movwf	main@turnRamp& (0+255),b
  1399   002AC6                     
  1400                           ; BSR set to: 1
  1401                           ;main.c: 80:     batteryLevel();
  1402   002AC6  EC54  F029         	call	_batteryLevel	;wreg free
  1403   002ACA                     l91:
  1404   002ACA  B48E               	btfsc	142,2,c	;volatile
  1405   002ACC  EF6A  F015         	goto	u3711
  1406   002AD0  EF6C  F015         	goto	u3710
  1407   002AD4                     u3711:
  1408   002AD4  EF65  F015         	goto	l91
  1409   002AD8                     u3710:
  1410   002AD8                     
  1411                           ;main.c: 93:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1412   002AD8  9680               	bcf	128,3,c	;volatile
  1413   002ADA  9E7C               	bcf	124,7,c	;volatile
  1414                           
  1415                           ;main.c: 96:     LATHbits.LATH1=LATDbits.LATD3=1;
  1416   002ADC  867C               	bsf	124,3,c	;volatile
  1417   002ADE  8280               	bsf	128,1,c	;volatile
  1418   002AE0                     
  1419                           ;main.c: 97:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1420   002AE0  0E29               	movlw	41
  1421   002AE2  0100               	movlb	0	; () banked
  1422   002AE4  6F8B               	movwf	(??_main+1)& (0+255),b
  1423   002AE6  0E96               	movlw	150
  1424   002AE8  6F8A               	movwf	??_main& (0+255),b
  1425   002AEA  0E7F               	movlw	127
  1426   002AEC                     u3887:
  1427   002AEC  2EE8               	decfsz	wreg,f,c
  1428   002AEE  D7FE               	bra	u3887
  1429   002AF0  2F8A               	decfsz	??_main& (0+255),f,b
  1430   002AF2  D7FC               	bra	u3887
  1431   002AF4  2F8B               	decfsz	(??_main+1)& (0+255),f,b
  1432   002AF6  D7FA               	bra	u3887
  1433   002AF8                     
  1434                           ;main.c: 100:     struct HSV_calib red, green, blue, yellow, pink, orange, lightblue, wh
      +                          ite;;main.c: 101:     color_calibration(&RGBC, &HSV, &red, &green, &blue, &yellow, &pink
      +                          , &orange, &lightblue, &white);
  1435   002AF8  0EBC               	movlw	low main@RGBC
  1436   002AFA  0100               	movlb	0	; () banked
  1437   002AFC  6F76               	movwf	color_calibration@RGBC& (0+255),b
  1438   002AFE  0E01               	movlw	high main@RGBC
  1439   002B00  6F77               	movwf	(color_calibration@RGBC+1)& (0+255),b
  1440   002B02  0EB6               	movlw	low main@HSV
  1441   002B04  6F78               	movwf	color_calibration@HSV& (0+255),b
  1442   002B06  0E01               	movlw	high main@HSV
  1443   002B08  6F79               	movwf	(color_calibration@HSV+1)& (0+255),b
  1444   002B0A  0E7F               	movlw	low main@red
  1445   002B0C  6F7A               	movwf	color_calibration@red& (0+255),b
  1446   002B0E  0E01               	movlw	high main@red
  1447   002B10  6F7B               	movwf	(color_calibration@red+1)& (0+255),b
  1448   002B12  0E85               	movlw	low main@green
  1449   002B14  6F7C               	movwf	color_calibration@green& (0+255),b
  1450   002B16  0E01               	movlw	high main@green
  1451   002B18  6F7D               	movwf	(color_calibration@green+1)& (0+255),b
  1452   002B1A  0E8B               	movlw	low main@blue
  1453   002B1C  6F7E               	movwf	color_calibration@blue& (0+255),b
  1454   002B1E  0E01               	movlw	high main@blue
  1455   002B20  6F7F               	movwf	(color_calibration@blue+1)& (0+255),b
  1456   002B22  0E91               	movlw	low main@yellow
  1457   002B24  6F80               	movwf	color_calibration@yellow& (0+255),b
  1458   002B26  0E01               	movlw	high main@yellow
  1459   002B28  6F81               	movwf	(color_calibration@yellow+1)& (0+255),b
  1460   002B2A  0E97               	movlw	low main@pink
  1461   002B2C  6F82               	movwf	color_calibration@pink& (0+255),b
  1462   002B2E  0E01               	movlw	high main@pink
  1463   002B30  6F83               	movwf	(color_calibration@pink+1)& (0+255),b
  1464   002B32  0E9D               	movlw	low main@orange
  1465   002B34  6F84               	movwf	color_calibration@orange& (0+255),b
  1466   002B36  0E01               	movlw	high main@orange
  1467   002B38  6F85               	movwf	(color_calibration@orange+1)& (0+255),b
  1468   002B3A  0EA3               	movlw	low main@lightblue
  1469   002B3C  6F86               	movwf	color_calibration@lightblue& (0+255),b
  1470   002B3E  0E01               	movlw	high main@lightblue
  1471   002B40  6F87               	movwf	(color_calibration@lightblue+1)& (0+255),b
  1472   002B42  0EA9               	movlw	low main@white
  1473   002B44  6F88               	movwf	color_calibration@white& (0+255),b
  1474   002B46  0E01               	movlw	high main@white
  1475   002B48  6F89               	movwf	(color_calibration@white+1)& (0+255),b
  1476   002B4A  EC21  F012         	call	_color_calibration	;wreg free
  1477   002B4E                     
  1478                           ;main.c: 104:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1479   002B4E  0ECE               	movlw	low main@motorL
  1480   002B50  6E31               	movwf	calibration@mL^0,c
  1481   002B52  0E01               	movlw	high main@motorL
  1482   002B54  6E32               	movwf	(calibration@mL+1)^0,c
  1483   002B56  0EC4               	movlw	low main@motorR
  1484   002B58  6E33               	movwf	calibration@mR^0,c
  1485   002B5A  0E01               	movlw	high main@motorR
  1486   002B5C  6E34               	movwf	(calibration@mR+1)^0,c
  1487   002B5E  0E28               	movlw	40
  1488   002B60  6E35               	movwf	calibration@turnSpeed^0,c
  1489   002B62  0EB5               	movlw	low main@turnDuration
  1490   002B64  6E36               	movwf	calibration@turnDuration^0,c
  1491   002B66  0E01               	movlw	high main@turnDuration
  1492   002B68  6E37               	movwf	(calibration@turnDuration+1)^0,c
  1493   002B6A  0E01               	movlw	1
  1494   002B6C  6E38               	movwf	calibration@turnRamp^0,c
  1495   002B6E  ECAC  F01D         	call	_calibration	;wreg free
  1496   002B72                     
  1497                           ;main.c: 114:     white_Light(1);
  1498   002B72  0E01               	movlw	1
  1499   002B74  EC63  F02A         	call	_white_Light
  1500   002B78                     
  1501                           ;main.c: 115:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1502   002B78  0E52               	movlw	82
  1503   002B7A  0100               	movlb	0	; () banked
  1504   002B7C  6F8B               	movwf	(??_main+1)& (0+255),b
  1505   002B7E  0E2B               	movlw	43
  1506   002B80  6F8A               	movwf	??_main& (0+255),b
  1507   002B82  0E00               	movlw	0
  1508   002B84                     u3897:
  1509   002B84  2EE8               	decfsz	wreg,f,c
  1510   002B86  D7FE               	bra	u3897
  1511   002B88  2F8A               	decfsz	??_main& (0+255),f,b
  1512   002B8A  D7FC               	bra	u3897
  1513   002B8C  2F8B               	decfsz	(??_main+1)& (0+255),f,b
  1514   002B8E  D7FA               	bra	u3897
  1515   002B90  0000               	nop	
  1516   002B92                     
  1517                           ;main.c: 118:     Timer0_init();
  1518   002B92  EC96  F02A         	call	_Timer0_init	;wreg free
  1519   002B96                     
  1520                           ;main.c: 119:     resetTimer();
  1521   002B96  ECF3  F02A         	call	_resetTimer	;wreg free
  1522   002B9A                     
  1523                           ;main.c: 120:     Interrupts_init();
  1524   002B9A  ECDE  F02A         	call	_Interrupts_init	;wreg free
  1525   002B9E                     
  1526                           ;main.c: 123:     color_read(&RGBC);
  1527   002B9E  0EBC               	movlw	low main@RGBC
  1528   002BA0  6E14               	movwf	color_read@RGBC^0,c
  1529   002BA2  0E01               	movlw	high main@RGBC
  1530   002BA4  6E15               	movwf	(color_read@RGBC+1)^0,c
  1531   002BA6  ECEB  F020         	call	_color_read	;wreg free
  1532   002BAA                     
  1533                           ;main.c: 124:     ambient=RGBC.C;
  1534   002BAA  C1C2  F0FA         	movff	main@RGBC+6,_ambient
  1535   002BAE  C1C3  F0FB         	movff	main@RGBC+7,_ambient+1
  1536   002BB2                     
  1537                           ;main.c: 125:     color_clear_init_interrupts();
  1538   002BB2  EC40  F027         	call	_color_clear_init_interrupts	;wreg free
  1539   002BB6                     
  1540                           ;main.c: 126:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1541   002BB6  0ED0               	movlw	208
  1542   002BB8  0100               	movlb	0	; () banked
  1543   002BBA  6F8A               	movwf	??_main& (0+255),b
  1544   002BBC  0EC9               	movlw	201
  1545   002BBE                     u3907:
  1546   002BBE  2EE8               	decfsz	wreg,f,c
  1547   002BC0  D7FE               	bra	u3907
  1548   002BC2  2F8A               	decfsz	??_main& (0+255),f,b
  1549   002BC4  D7FC               	bra	u3907
  1550   002BC6  D000               	nop2	
  1551   002BC8                     
  1552                           ;main.c: 129:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1553   002BC8  0ECE               	movlw	low main@motorL
  1554   002BCA  6E23               	movwf	fullSpeedAhead@mL^0,c
  1555   002BCC  0E01               	movlw	high main@motorL
  1556   002BCE  6E24               	movwf	(fullSpeedAhead@mL+1)^0,c
  1557   002BD0  0EC4               	movlw	low main@motorR
  1558   002BD2  6E25               	movwf	fullSpeedAhead@mR^0,c
  1559   002BD4  0E01               	movlw	high main@motorR
  1560   002BD6  6E26               	movwf	(fullSpeedAhead@mR+1)^0,c
  1561   002BD8  0E14               	movlw	20
  1562   002BDA  6E27               	movwf	fullSpeedAhead@straightSpeed^0,c
  1563   002BDC  0E02               	movlw	2
  1564   002BDE  6E28               	movwf	fullSpeedAhead@straightRamp^0,c
  1565   002BE0  EC6B  F026         	call	_fullSpeedAhead	;wreg free
  1566   002BE4                     
  1567                           ;main.c: 130:     resetTimer();
  1568   002BE4  ECF3  F02A         	call	_resetTimer	;wreg free
  1569   002BE8                     
  1570                           ;main.c: 133:     brightnessChange=0;
  1571   002BE8  0E00               	movlw	0
  1572   002BEA  0100               	movlb	0	; () banked
  1573   002BEC  6FF5               	movwf	_brightnessChange& (0+255),b
  1574   002BEE                     
  1575                           ; BSR set to: 0
  1576                           ;main.c: 134:     lost=0;
  1577   002BEE  0E00               	movlw	0
  1578   002BF0  6FF4               	movwf	_lost& (0+255),b
  1579   002BF2                     l4814:
  1580                           
  1581                           ;main.c: 137:         if (brightnessChange == 1) {
  1582   002BF2  0100               	movlb	0	; () banked
  1583   002BF4  05F5               	decf	_brightnessChange& (0+255),w,b
  1584   002BF6  A4D8               	btfss	status,2,c
  1585   002BF8  EF00  F016         	goto	u3721
  1586   002BFC  EF02  F016         	goto	u3720
  1587   002C00                     u3721:
  1588   002C00  EF35  F016         	goto	l4832
  1589   002C04                     u3720:
  1590   002C04                     
  1591                           ; BSR set to: 0
  1592                           ;main.c: 140:             color_read(&RGBC);
  1593   002C04  0EBC               	movlw	low main@RGBC
  1594   002C06  6E14               	movwf	color_read@RGBC^0,c
  1595   002C08  0E01               	movlw	high main@RGBC
  1596   002C0A  6E15               	movwf	(color_read@RGBC+1)^0,c
  1597   002C0C  ECEB  F020         	call	_color_read	;wreg free
  1598   002C10                     
  1599                           ;main.c: 141:             ambientNew=RGBC.C;
  1600   002C10  C1C2  F17B         	movff	main@RGBC+6,main@ambientNew
  1601   002C14  C1C3  F17C         	movff	main@RGBC+7,main@ambientNew+1
  1602   002C18                     
  1603                           ;main.c: 143:             if (ambientNew <= ambient) {
  1604   002C18  0101               	movlb	1	; () banked
  1605   002C1A  517B               	movf	main@ambientNew& (0+255),w,b
  1606   002C1C  0100               	movlb	0	; () banked
  1607   002C1E  5DFA               	subwf	_ambient& (0+255),w,b
  1608   002C20  0101               	movlb	1	; () banked
  1609   002C22  517C               	movf	(main@ambientNew+1)& (0+255),w,b
  1610   002C24  0100               	movlb	0	; () banked
  1611   002C26  59FB               	subwfb	(_ambient+1)& (0+255),w,b
  1612   002C28  A0D8               	btfss	status,0,c
  1613   002C2A  EF19  F016         	goto	u3731
  1614   002C2E  EF1B  F016         	goto	u3730
  1615   002C32                     u3731:
  1616   002C32  EF2F  F016         	goto	l4830
  1617   002C36                     u3730:
  1618   002C36                     
  1619                           ; BSR set to: 0
  1620                           ;main.c: 144:                 ambient = ambientNew;
  1621   002C36  C17B  F0FA         	movff	main@ambientNew,_ambient
  1622   002C3A  C17C  F0FB         	movff	main@ambientNew+1,_ambient+1
  1623   002C3E                     
  1624                           ; BSR set to: 0
  1625                           ;main.c: 145:                 color_clear_init_interrupts();
  1626   002C3E  EC40  F027         	call	_color_clear_init_interrupts	;wreg free
  1627   002C42                     
  1628                           ;main.c: 146:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  1629   002C42  0ED0               	movlw	208
  1630   002C44  0100               	movlb	0	; () banked
  1631   002C46  6F8A               	movwf	??_main& (0+255),b
  1632   002C48  0EC9               	movlw	201
  1633   002C4A                     u3917:
  1634   002C4A  2EE8               	decfsz	wreg,f,c
  1635   002C4C  D7FE               	bra	u3917
  1636   002C4E  2F8A               	decfsz	??_main& (0+255),f,b
  1637   002C50  D7FC               	bra	u3917
  1638   002C52  D000               	nop2	
  1639   002C54                     
  1640                           ;main.c: 147:                 brightnessChange = 0;
  1641   002C54  0E00               	movlw	0
  1642   002C56  0100               	movlb	0	; () banked
  1643   002C58  6FF5               	movwf	_brightnessChange& (0+255),b
  1644                           
  1645                           ;main.c: 148:             }
  1646   002C5A  EF35  F016         	goto	l4832
  1647   002C5E                     l4830:
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;main.c: 151:                 wall = 1;
  1651   002C5E  0E01               	movlw	1
  1652   002C60  0101               	movlb	1	; () banked
  1653   002C62  6F7A               	movwf	main@wall& (0+255),b
  1654                           
  1655                           ;main.c: 152:                 brightnessChange = 0;
  1656   002C64  0E00               	movlw	0
  1657   002C66  0100               	movlb	0	; () banked
  1658   002C68  6FF5               	movwf	_brightnessChange& (0+255),b
  1659   002C6A                     l4832:
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;main.c: 156:         if (wall == 1) {
  1663   002C6A  0101               	movlb	1	; () banked
  1664   002C6C  057A               	decf	main@wall& (0+255),w,b
  1665   002C6E  A4D8               	btfss	status,2,c
  1666   002C70  EF3C  F016         	goto	u3741
  1667   002C74  EF3E  F016         	goto	u3740
  1668   002C78                     u3741:
  1669   002C78  EF18  F017         	goto	l4864
  1670   002C7C                     u3740:
  1671   002C7C                     
  1672                           ; BSR set to: 1
  1673                           ;main.c: 158:             PIE0bits.INT0IE=0;
  1674   002C7C  010E               	movlb	14	; () banked
  1675   002C7E  9129               	bcf	41,0,b	;volatile
  1676   002C80                     
  1677                           ; BSR set to: 14
  1678                           ;main.c: 159:             straightTime[curMove] = get16bitTMR0val();
  1679   002C80  EC14  F02A         	call	_get16bitTMR0val	;wreg free
  1680   002C84  0101               	movlb	1	; () banked
  1681   002C86  51B3               	movf	main@curMove& (0+255),w,b
  1682   002C88  0D02               	mullw	2
  1683   002C8A  0E00               	movlw	low main@straightTime
  1684   002C8C  24F3               	addwf	243,w,c
  1685   002C8E  6ED9               	movwf	fsr2l,c
  1686   002C90  0E01               	movlw	high main@straightTime
  1687   002C92  20F4               	addwfc	prodh,w,c
  1688   002C94  6EDA               	movwf	fsr2h,c
  1689   002C96  C010  FFDE         	movff	?_get16bitTMR0val,postinc2
  1690   002C9A  C011  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1691                           
  1692                           ;main.c: 162:             stop(&motorL, &motorR, straightRamp);
  1693   002C9E  0ECE               	movlw	low main@motorL
  1694   002CA0  6E23               	movwf	stop@mL^0,c
  1695   002CA2  0E01               	movlw	high main@motorL
  1696   002CA4  6E24               	movwf	(stop@mL+1)^0,c
  1697   002CA6  0EC4               	movlw	low main@motorR
  1698   002CA8  6E25               	movwf	stop@mR^0,c
  1699   002CAA  0E01               	movlw	high main@motorR
  1700   002CAC  6E26               	movwf	(stop@mR+1)^0,c
  1701   002CAE  C1B4  F027         	movff	main@straightRamp,stop@straightRamp
  1702   002CB2  ECE7  F025         	call	_stop	;wreg free
  1703                           
  1704                           ;main.c: 163:             wallAdjust(&motorL, &motorR, straightSpeed, straightRamp);
  1705   002CB6  0ECE               	movlw	low main@motorL
  1706   002CB8  6E23               	movwf	wallAdjust@mL^0,c
  1707   002CBA  0E01               	movlw	high main@motorL
  1708   002CBC  6E24               	movwf	(wallAdjust@mL+1)^0,c
  1709   002CBE  0EC4               	movlw	low main@motorR
  1710   002CC0  6E25               	movwf	wallAdjust@mR^0,c
  1711   002CC2  0E01               	movlw	high main@motorR
  1712   002CC4  6E26               	movwf	(wallAdjust@mR+1)^0,c
  1713   002CC6  C1B1  F027         	movff	main@straightSpeed,wallAdjust@straightSpeed
  1714   002CCA  C1B4  F028         	movff	main@straightRamp,wallAdjust@straightRamp
  1715   002CCE  ECDB  F019         	call	_wallAdjust	;wreg free
  1716   002CD2                     
  1717                           ;main.c: 164:             color_read(&RGBC);
  1718   002CD2  0EBC               	movlw	low main@RGBC
  1719   002CD4  6E14               	movwf	color_read@RGBC^0,c
  1720   002CD6  0E01               	movlw	high main@RGBC
  1721   002CD8  6E15               	movwf	(color_read@RGBC+1)^0,c
  1722   002CDA  ECEB  F020         	call	_color_read	;wreg free
  1723   002CDE                     
  1724                           ;main.c: 166:             rgb_2_hsv(RGBC, &HSV);
  1725   002CDE  EE21  F0BC         	lfsr	2,main@RGBC
  1726   002CE2  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  1727   002CE6  0E07               	movlw	7
  1728   002CE8                     u3751:
  1729   002CE8  CFDB FFEB          	movff	plusw2,plusw0
  1730   002CEC  06E8               	decf	wreg,f,c
  1731   002CEE  E2FC               	bc	u3751
  1732   002CF0  0EB6               	movlw	low main@HSV
  1733   002CF2  6E32               	movwf	rgb_2_hsv@HSV^0,c
  1734   002CF4  0E01               	movlw	high main@HSV
  1735   002CF6  6E33               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1736   002CF8  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  1737   002CFC                     
  1738                           ;main.c: 167:             color = color_detect(HSV, red, green, blue, yellow, pink, oran
      +                          ge, lightblue, white);
  1739   002CFC  EE21  F0B6         	lfsr	2,main@HSV
  1740   002D00  EE00  F014         	lfsr	0,color_detect@HSV
  1741   002D04  0E05               	movlw	5
  1742   002D06                     u3761:
  1743   002D06  CFDB FFEB          	movff	plusw2,plusw0
  1744   002D0A  06E8               	decf	wreg,f,c
  1745   002D0C  E2FC               	bc	u3761
  1746   002D0E  EE21  F07F         	lfsr	2,main@red
  1747   002D12  EE00  F01A         	lfsr	0,color_detect@red
  1748   002D16  0E05               	movlw	5
  1749   002D18                     u3771:
  1750   002D18  CFDB FFEB          	movff	plusw2,plusw0
  1751   002D1C  06E8               	decf	wreg,f,c
  1752   002D1E  E2FC               	bc	u3771
  1753   002D20  EE21  F085         	lfsr	2,main@green
  1754   002D24  EE00  F020         	lfsr	0,color_detect@green
  1755   002D28  0E05               	movlw	5
  1756   002D2A                     u3781:
  1757   002D2A  CFDB FFEB          	movff	plusw2,plusw0
  1758   002D2E  06E8               	decf	wreg,f,c
  1759   002D30  E2FC               	bc	u3781
  1760   002D32  EE21  F08B         	lfsr	2,main@blue
  1761   002D36  EE00  F026         	lfsr	0,color_detect@blue
  1762   002D3A  0E05               	movlw	5
  1763   002D3C                     u3791:
  1764   002D3C  CFDB FFEB          	movff	plusw2,plusw0
  1765   002D40  06E8               	decf	wreg,f,c
  1766   002D42  E2FC               	bc	u3791
  1767   002D44  EE21  F091         	lfsr	2,main@yellow
  1768   002D48  EE00  F02C         	lfsr	0,color_detect@yellow
  1769   002D4C  0E05               	movlw	5
  1770   002D4E                     u3801:
  1771   002D4E  CFDB FFEB          	movff	plusw2,plusw0
  1772   002D52  06E8               	decf	wreg,f,c
  1773   002D54  E2FC               	bc	u3801
  1774   002D56  EE21  F097         	lfsr	2,main@pink
  1775   002D5A  EE00  F032         	lfsr	0,color_detect@pink
  1776   002D5E  0E05               	movlw	5
  1777   002D60                     u3811:
  1778   002D60  CFDB FFEB          	movff	plusw2,plusw0
  1779   002D64  06E8               	decf	wreg,f,c
  1780   002D66  E2FC               	bc	u3811
  1781   002D68  EE21  F09D         	lfsr	2,main@orange
  1782   002D6C  EE00  F038         	lfsr	0,color_detect@orange
  1783   002D70  0E05               	movlw	5
  1784   002D72                     u3821:
  1785   002D72  CFDB FFEB          	movff	plusw2,plusw0
  1786   002D76  06E8               	decf	wreg,f,c
  1787   002D78  E2FC               	bc	u3821
  1788   002D7A  EE21  F0A3         	lfsr	2,main@lightblue
  1789   002D7E  EE00  F03E         	lfsr	0,color_detect@lightblue
  1790   002D82  0E05               	movlw	5
  1791   002D84                     u3831:
  1792   002D84  CFDB FFEB          	movff	plusw2,plusw0
  1793   002D88  06E8               	decf	wreg,f,c
  1794   002D8A  E2FC               	bc	u3831
  1795   002D8C  EE21  F0A9         	lfsr	2,main@white
  1796   002D90  EE00  F044         	lfsr	0,color_detect@white
  1797   002D94  0E05               	movlw	5
  1798   002D96                     u3841:
  1799   002D96  CFDB FFEB          	movff	plusw2,plusw0
  1800   002D9A  06E8               	decf	wreg,f,c
  1801   002D9C  E2FC               	bc	u3841
  1802   002D9E  ECC4  F01B         	call	_color_detect	;wreg free
  1803   002DA2  0101               	movlb	1	; () banked
  1804   002DA4  6FB2               	movwf	main@color& (0+255),b
  1805   002DA6                     
  1806                           ; BSR set to: 1
  1807                           ;main.c: 169:             moveSequence[curMove] = color;
  1808   002DA6  0E52               	movlw	low main@moveSequence
  1809   002DA8  25B3               	addwf	main@curMove& (0+255),w,b
  1810   002DAA  6ED9               	movwf	fsr2l,c
  1811   002DAC  6ADA               	clrf	fsr2h,c
  1812   002DAE  0E01               	movlw	high main@moveSequence
  1813   002DB0  22DA               	addwfc	fsr2h,f,c
  1814   002DB2  C1B2  FFDF         	movff	main@color,indf2
  1815   002DB6                     
  1816                           ; BSR set to: 1
  1817                           ;main.c: 172:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1818   002DB6  0ECE               	movlw	low main@motorL
  1819   002DB8  0100               	movlb	0	; () banked
  1820   002DBA  6F60               	movwf	move@mL& (0+255),b
  1821   002DBC  0E01               	movlw	high main@motorL
  1822   002DBE  6F61               	movwf	(move@mL+1)& (0+255),b
  1823   002DC0  0EC4               	movlw	low main@motorR
  1824   002DC2  6F62               	movwf	move@mR& (0+255),b
  1825   002DC4  0E01               	movlw	high main@motorR
  1826   002DC6  6F63               	movwf	(move@mR+1)& (0+255),b
  1827   002DC8  C1B2  F064         	movff	main@color,move@color
  1828   002DCC  0E52               	movlw	low main@moveSequence
  1829   002DCE  6F65               	movwf	move@moveSequence& (0+255),b
  1830   002DD0  0E01               	movlw	high main@moveSequence
  1831   002DD2  6F66               	movwf	(move@moveSequence+1)& (0+255),b
  1832   002DD4  0E00               	movlw	low main@straightTime
  1833   002DD6  6F67               	movwf	move@straightTime& (0+255),b
  1834   002DD8  0E01               	movlw	high main@straightTime
  1835   002DDA  6F68               	movwf	(move@straightTime+1)& (0+255),b
  1836   002DDC  C1B3  F069         	movff	main@curMove,move@curMove
  1837   002DE0  C1B1  F06A         	movff	main@straightSpeed,move@straightSpeed
  1838   002DE4  C17D  F06B         	movff	main@reverseDuration,move@reverseDuration
  1839   002DE8  C17E  F06C         	movff	main@reverseDuration+1,move@reverseDuration+1
  1840   002DEC  C1B4  F06D         	movff	main@straightRamp,move@straightRamp
  1841   002DF0  C1AF  F06E         	movff	main@turnSpeed,move@turnSpeed
  1842   002DF4  C1B5  F06F         	movff	main@turnDuration,move@turnDuration
  1843   002DF8  C1B0  F070         	movff	main@turnRamp,move@turnRamp
  1844   002DFC  EC01  F007         	call	_move	;wreg free
  1845   002E00                     
  1846                           ;main.c: 175:             color_read(&RGBC);
  1847   002E00  0EBC               	movlw	low main@RGBC
  1848   002E02  6E14               	movwf	color_read@RGBC^0,c
  1849   002E04  0E01               	movlw	high main@RGBC
  1850   002E06  6E15               	movwf	(color_read@RGBC+1)^0,c
  1851   002E08  ECEB  F020         	call	_color_read	;wreg free
  1852   002E0C                     
  1853                           ;main.c: 176:             ambient=RGBC.C;
  1854   002E0C  C1C2  F0FA         	movff	main@RGBC+6,_ambient
  1855   002E10  C1C3  F0FB         	movff	main@RGBC+7,_ambient+1
  1856   002E14                     
  1857                           ;main.c: 177:             color_clear_init_interrupts();
  1858   002E14  EC40  F027         	call	_color_clear_init_interrupts	;wreg free
  1859   002E18                     
  1860                           ;main.c: 178:             brightnessChange = 0;
  1861   002E18  0E00               	movlw	0
  1862   002E1A  0100               	movlb	0	; () banked
  1863   002E1C  6FF5               	movwf	_brightnessChange& (0+255),b
  1864   002E1E                     
  1865                           ; BSR set to: 0
  1866                           ;main.c: 180:             curMove++;
  1867   002E1E  0101               	movlb	1	; () banked
  1868   002E20  2BB3               	incf	main@curMove& (0+255),f,b
  1869   002E22                     
  1870                           ; BSR set to: 1
  1871                           ;main.c: 181:             resetTimer();
  1872   002E22  ECF3  F02A         	call	_resetTimer	;wreg free
  1873   002E26                     
  1874                           ;main.c: 183:             PIE0bits.INT0IE=1;
  1875   002E26  010E               	movlb	14	; () banked
  1876   002E28  8129               	bsf	41,0,b	;volatile
  1877   002E2A                     
  1878                           ; BSR set to: 14
  1879                           ;main.c: 184:             wall = 0;
  1880   002E2A  0E00               	movlw	0
  1881   002E2C  0101               	movlb	1	; () banked
  1882   002E2E  6F7A               	movwf	main@wall& (0+255),b
  1883   002E30                     l4864:
  1884                           
  1885                           ; BSR set to: 1
  1886                           ;main.c: 188:         if (lost == 1) {
  1887   002E30  0100               	movlb	0	; () banked
  1888   002E32  05F4               	decf	_lost& (0+255),w,b
  1889   002E34  A4D8               	btfss	status,2,c
  1890   002E36  EF1F  F017         	goto	u3851
  1891   002E3A  EF21  F017         	goto	u3850
  1892   002E3E                     u3851:
  1893   002E3E  EF58  F017         	goto	l4874
  1894   002E42                     u3850:
  1895   002E42                     
  1896                           ; BSR set to: 0
  1897                           ;main.c: 189:             PIE0bits.INT0IE=0;
  1898   002E42  010E               	movlb	14	; () banked
  1899   002E44  9129               	bcf	41,0,b	;volatile
  1900   002E46                     
  1901                           ; BSR set to: 14
  1902                           ;main.c: 190:             stop(&motorL, &motorR, straightRamp);
  1903   002E46  0ECE               	movlw	low main@motorL
  1904   002E48  6E23               	movwf	stop@mL^0,c
  1905   002E4A  0E01               	movlw	high main@motorL
  1906   002E4C  6E24               	movwf	(stop@mL+1)^0,c
  1907   002E4E  0EC4               	movlw	low main@motorR
  1908   002E50  6E25               	movwf	stop@mR^0,c
  1909   002E52  0E01               	movlw	high main@motorR
  1910   002E54  6E26               	movwf	(stop@mR+1)^0,c
  1911   002E56  C1B4  F027         	movff	main@straightRamp,stop@straightRamp
  1912   002E5A  ECE7  F025         	call	_stop	;wreg free
  1913                           
  1914                           ;main.c: 191:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1915   002E5E  0ECE               	movlw	low main@motorL
  1916   002E60  6E32               	movwf	lostReturnHome@mL^0,c
  1917   002E62  0E01               	movlw	high main@motorL
  1918   002E64  6E33               	movwf	(lostReturnHome@mL+1)^0,c
  1919   002E66  0EC4               	movlw	low main@motorR
  1920   002E68  6E34               	movwf	lostReturnHome@mR^0,c
  1921   002E6A  0E01               	movlw	high main@motorR
  1922   002E6C  6E35               	movwf	(lostReturnHome@mR+1)^0,c
  1923   002E6E  0E52               	movlw	low main@moveSequence
  1924   002E70  6E36               	movwf	lostReturnHome@moveSequence^0,c
  1925   002E72  0E01               	movlw	high main@moveSequence
  1926   002E74  6E37               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1927   002E76  0E00               	movlw	low main@straightTime
  1928   002E78  6E38               	movwf	lostReturnHome@straightTime^0,c
  1929   002E7A  0E01               	movlw	high main@straightTime
  1930   002E7C  6E39               	movwf	(lostReturnHome@straightTime+1)^0,c
  1931   002E7E  C1B3  F03A         	movff	main@curMove,lostReturnHome@curMove
  1932   002E82  C1B1  F03B         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1933   002E86  C17D  F03C         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1934   002E8A  C17E  F03D         	movff	main@reverseDuration+1,lostReturnHome@reverseDuration+1
  1935   002E8E  C1B4  F03E         	movff	main@straightRamp,lostReturnHome@straightRamp
  1936   002E92  C1AF  F03F         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1937   002E96  C1B5  F040         	movff	main@turnDuration,lostReturnHome@turnDuration
  1938   002E9A  C1B0  F041         	movff	main@turnRamp,lostReturnHome@turnRamp
  1939   002E9E  ECCB  F00E         	call	_lostReturnHome	;wreg free
  1940   002EA2                     
  1941                           ;main.c: 192:             PIE0bits.INT0IE=1;
  1942   002EA2  010E               	movlb	14	; () banked
  1943   002EA4  8129               	bsf	41,0,b	;volatile
  1944   002EA6                     
  1945                           ; BSR set to: 14
  1946                           ;main.c: 193:             lost = 0;
  1947   002EA6  0E00               	movlw	0
  1948   002EA8  0100               	movlb	0	; () banked
  1949   002EAA  6FF4               	movwf	_lost& (0+255),b
  1950                           
  1951                           ;main.c: 194:             break;
  1952   002EAC  EF6B  F017         	goto	l105
  1953   002EB0                     l4874:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;main.c: 197:         if (color == 8 || color == 9) {break;}
  1957   002EB0  0E08               	movlw	8
  1958   002EB2  0101               	movlb	1	; () banked
  1959   002EB4  19B2               	xorwf	main@color& (0+255),w,b
  1960   002EB6  B4D8               	btfsc	status,2,c
  1961   002EB8  EF60  F017         	goto	u3861
  1962   002EBC  EF62  F017         	goto	u3860
  1963   002EC0                     u3861:
  1964   002EC0  EF6B  F017         	goto	l105
  1965   002EC4                     u3860:
  1966   002EC4                     
  1967                           ; BSR set to: 1
  1968   002EC4  0E09               	movlw	9
  1969   002EC6  19B2               	xorwf	main@color& (0+255),w,b
  1970   002EC8  A4D8               	btfss	status,2,c
  1971   002ECA  EF69  F017         	goto	u3871
  1972   002ECE  EF6B  F017         	goto	u3870
  1973   002ED2                     u3871:
  1974   002ED2  EFF9  F015         	goto	l4814
  1975   002ED6                     u3870:
  1976   002ED6                     l105:
  1977   002ED6  EF2C  F000         	goto	start
  1978   002EDA                     __end_of_main:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _wallAdjust *****************
  1982 ;; Defined at:
  1983 ;;		line 507 in file "dc_motor.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1986 ;;		 -> main@motorL(10), 
  1987 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1988 ;;		 -> main@motorR(10), 
  1989 ;;  straightSpee    1   38[COMRAM] unsigned char 
  1990 ;;  straightRamp    1   39[COMRAM] unsigned char 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  cur_power       2   48[COMRAM] int 
  1993 ;;  i               2   46[COMRAM] int 
  1994 ;;  wallSpeed       1   45[COMRAM] unsigned char 
  1995 ;;  wallReverseD    1   44[COMRAM] unsigned char 
  1996 ;;  adjustDurati    1   43[COMRAM] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2006 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2007 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2008 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2009 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2010 ;;Total ram usage:       16 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 8
  2013 ;; This function calls:
  2014 ;;		_setMotorPWM
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text1
  2021   0033B6                     __ptext1:
  2022                           	callstack 0
  2023   0033B6                     _wallAdjust:
  2024                           	callstack 22
  2025   0033B6                     
  2026                           ;dc_motor.c: 507: void wallAdjust(DC_motor *mL, DC_motor *mR, char straightSpeed, unsign
      +                          ed char straightRamp);dc_motor.c: 508: {;dc_motor.c: 509:     unsigned char adjustDurati
      +                          on = 120;
  2027   0033B6  0E78               	movlw	120
  2028   0033B8  6E2C               	movwf	wallAdjust@adjustDuration^0,c
  2029                           
  2030                           ;dc_motor.c: 510:     unsigned char wallReverseDuration = 20;
  2031   0033BA  0E14               	movlw	20
  2032   0033BC  6E2D               	movwf	wallAdjust@wallReverseDuration^0,c
  2033                           
  2034                           ;dc_motor.c: 511:     unsigned char wallSpeed = 40;
  2035   0033BE  0E28               	movlw	40
  2036   0033C0  6E2E               	movwf	wallAdjust@wallSpeed^0,c
  2037   0033C2                     
  2038                           ;dc_motor.c: 513:     mL->direction = 1;
  2039   0033C2  EE20 F001          	lfsr	2,1
  2040   0033C6  5023               	movf	wallAdjust@mL^0,w,c
  2041   0033C8  26D9               	addwf	fsr2l,f,c
  2042   0033CA  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2043   0033CC  22DA               	addwfc	fsr2h,f,c
  2044   0033CE  0E01               	movlw	1
  2045   0033D0  6EDF               	movwf	indf2,c
  2046   0033D2                     
  2047                           ;dc_motor.c: 514:     mR->direction = 1;
  2048   0033D2  EE20 F001          	lfsr	2,1
  2049   0033D6  5025               	movf	wallAdjust@mR^0,w,c
  2050   0033D8  26D9               	addwf	fsr2l,f,c
  2051   0033DA  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2052   0033DC  22DA               	addwfc	fsr2h,f,c
  2053   0033DE  0E01               	movlw	1
  2054   0033E0  6EDF               	movwf	indf2,c
  2055                           
  2056                           ;dc_motor.c: 515:     int i;;dc_motor.c: 516:     int cur_power;;dc_motor.c: 517:     fo
      +                          r (cur_power=1;cur_power<=wallSpeed;cur_power++) {
  2057   0033E2  0E00               	movlw	0
  2058   0033E4  6E32               	movwf	(wallAdjust@cur_power+1)^0,c
  2059   0033E6  0E01               	movlw	1
  2060   0033E8  6E31               	movwf	wallAdjust@cur_power^0,c
  2061   0033EA  EF41  F01A         	goto	l4106
  2062   0033EE                     l4092:
  2063                           
  2064                           ;dc_motor.c: 518:         mL->power = cur_power+mL->compensation;
  2065   0033EE  EE20 F009          	lfsr	2,9
  2066   0033F2  5023               	movf	wallAdjust@mL^0,w,c
  2067   0033F4  26D9               	addwf	fsr2l,f,c
  2068   0033F6  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2069   0033F8  22DA               	addwfc	fsr2h,f,c
  2070   0033FA  50DF               	movf	indf2,w,c
  2071   0033FC  2431               	addwf	wallAdjust@cur_power^0,w,c
  2072   0033FE  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2073   003402  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2074   003406  6EDF               	movwf	indf2,c
  2075                           
  2076                           ;dc_motor.c: 519:         mR->power = cur_power+mR->compensation;
  2077   003408  EE20 F009          	lfsr	2,9
  2078   00340C  5025               	movf	wallAdjust@mR^0,w,c
  2079   00340E  26D9               	addwf	fsr2l,f,c
  2080   003410  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2081   003412  22DA               	addwfc	fsr2h,f,c
  2082   003414  50DF               	movf	indf2,w,c
  2083   003416  2431               	addwf	wallAdjust@cur_power^0,w,c
  2084   003418  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2085   00341C  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2086   003420  6EDF               	movwf	indf2,c
  2087   003422                     
  2088                           ;dc_motor.c: 520:         setMotorPWM(mL);
  2089   003422  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2090   003426  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2091   00342A  ECAB  F024         	call	_setMotorPWM	;wreg free
  2092   00342E                     
  2093                           ;dc_motor.c: 521:         setMotorPWM(mR);
  2094   00342E  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2095   003432  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2096   003436  ECAB  F024         	call	_setMotorPWM	;wreg free
  2097   00343A                     
  2098                           ;dc_motor.c: 522:         for (i=0;i<straightRamp;i++) {
  2099   00343A  0E00               	movlw	0
  2100   00343C  6E30               	movwf	(wallAdjust@i+1)^0,c
  2101   00343E  0E00               	movlw	0
  2102   003440  6E2F               	movwf	wallAdjust@i^0,c
  2103   003442  EF2D  F01A         	goto	l694
  2104   003446                     l4100:
  2105                           
  2106                           ;dc_motor.c: 523:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2107   003446  0E68               	movlw	104
  2108   003448  6E29               	movwf	??_wallAdjust^0,c
  2109   00344A  0EE4               	movlw	228
  2110   00344C                     u3927:
  2111   00344C  2EE8               	decfsz	wreg,f,c
  2112   00344E  D7FE               	bra	u3927
  2113   003450  2E29               	decfsz	??_wallAdjust^0,f,c
  2114   003452  D7FC               	bra	u3927
  2115   003454  D000               	nop2	
  2116   003456                     
  2117                           ;dc_motor.c: 524:         }
  2118   003456  4A2F               	infsnz	wallAdjust@i^0,f,c
  2119   003458  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2120   00345A                     l694:
  2121   00345A  5028               	movf	wallAdjust@straightRamp^0,w,c
  2122   00345C  6E29               	movwf	??_wallAdjust^0,c
  2123   00345E  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2124   003460  5029               	movf	??_wallAdjust^0,w,c
  2125   003462  5C2F               	subwf	wallAdjust@i^0,w,c
  2126   003464  5030               	movf	(wallAdjust@i+1)^0,w,c
  2127   003466  0A80               	xorlw	128
  2128   003468  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2129   00346A  502A               	movf	(??_wallAdjust+1)^0,w,c
  2130   00346C  0A80               	xorlw	128
  2131   00346E  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2132   003470  A0D8               	btfss	status,0,c
  2133   003472  EF3D  F01A         	goto	u2911
  2134   003476  EF3F  F01A         	goto	u2910
  2135   00347A                     u2911:
  2136   00347A  EF23  F01A         	goto	l4100
  2137   00347E                     u2910:
  2138   00347E                     
  2139                           ;dc_motor.c: 525:     }
  2140   00347E  4A31               	infsnz	wallAdjust@cur_power^0,f,c
  2141   003480  2A32               	incf	(wallAdjust@cur_power+1)^0,f,c
  2142   003482                     l4106:
  2143   003482  502E               	movf	wallAdjust@wallSpeed^0,w,c
  2144   003484  6E29               	movwf	??_wallAdjust^0,c
  2145   003486  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2146   003488  5031               	movf	wallAdjust@cur_power^0,w,c
  2147   00348A  5C29               	subwf	??_wallAdjust^0,w,c
  2148   00348C  502A               	movf	(??_wallAdjust+1)^0,w,c
  2149   00348E  0A80               	xorlw	128
  2150   003490  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2151   003492  5032               	movf	(wallAdjust@cur_power+1)^0,w,c
  2152   003494  0A80               	xorlw	128
  2153   003496  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2154   003498  B0D8               	btfsc	status,0,c
  2155   00349A  EF51  F01A         	goto	u2921
  2156   00349E  EF53  F01A         	goto	u2920
  2157   0034A2                     u2921:
  2158   0034A2  EFF7  F019         	goto	l4092
  2159   0034A6                     u2920:
  2160   0034A6                     
  2161                           ;dc_motor.c: 527:     for (i=0;i<adjustDuration;i++) {
  2162   0034A6  0E00               	movlw	0
  2163   0034A8  6E30               	movwf	(wallAdjust@i+1)^0,c
  2164   0034AA  0E00               	movlw	0
  2165   0034AC  6E2F               	movwf	wallAdjust@i^0,c
  2166   0034AE  EF63  F01A         	goto	l698
  2167   0034B2                     l4110:
  2168                           
  2169                           ;dc_motor.c: 528:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2170   0034B2  0E68               	movlw	104
  2171   0034B4  6E29               	movwf	??_wallAdjust^0,c
  2172   0034B6  0EE4               	movlw	228
  2173   0034B8                     u3937:
  2174   0034B8  2EE8               	decfsz	wreg,f,c
  2175   0034BA  D7FE               	bra	u3937
  2176   0034BC  2E29               	decfsz	??_wallAdjust^0,f,c
  2177   0034BE  D7FC               	bra	u3937
  2178   0034C0  D000               	nop2	
  2179   0034C2                     
  2180                           ;dc_motor.c: 529:         }
  2181   0034C2  4A2F               	infsnz	wallAdjust@i^0,f,c
  2182   0034C4  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2183   0034C6                     l698:
  2184   0034C6  502C               	movf	wallAdjust@adjustDuration^0,w,c
  2185   0034C8  6E29               	movwf	??_wallAdjust^0,c
  2186   0034CA  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2187   0034CC  5029               	movf	??_wallAdjust^0,w,c
  2188   0034CE  5C2F               	subwf	wallAdjust@i^0,w,c
  2189   0034D0  5030               	movf	(wallAdjust@i+1)^0,w,c
  2190   0034D2  0A80               	xorlw	128
  2191   0034D4  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2192   0034D6  502A               	movf	(??_wallAdjust+1)^0,w,c
  2193   0034D8  0A80               	xorlw	128
  2194   0034DA  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2195   0034DC  A0D8               	btfss	status,0,c
  2196   0034DE  EF73  F01A         	goto	u2931
  2197   0034E2  EF75  F01A         	goto	u2930
  2198   0034E6                     u2931:
  2199   0034E6  EF59  F01A         	goto	l4110
  2200   0034EA                     u2930:
  2201   0034EA                     
  2202                           ;dc_motor.c: 531:     for (cur_power=wallSpeed;cur_power>=0;cur_power--) {
  2203   0034EA  C02E  F031         	movff	wallAdjust@wallSpeed,wallAdjust@cur_power
  2204   0034EE  6A32               	clrf	(wallAdjust@cur_power+1)^0,c
  2205   0034F0                     l4114:
  2206   0034F0  BE32               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2207   0034F2  EF7F  F01A         	goto	u2940
  2208   0034F6  EF7D  F01A         	goto	u2941
  2209   0034FA                     u2941:
  2210   0034FA  EF81  F01A         	goto	l4118
  2211   0034FE                     u2940:
  2212   0034FE  EFCE  F01A         	goto	l4134
  2213   003502                     l4118:
  2214                           
  2215                           ;dc_motor.c: 532:         mL->power = cur_power+mL->compensation;
  2216   003502  EE20 F009          	lfsr	2,9
  2217   003506  5023               	movf	wallAdjust@mL^0,w,c
  2218   003508  26D9               	addwf	fsr2l,f,c
  2219   00350A  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2220   00350C  22DA               	addwfc	fsr2h,f,c
  2221   00350E  50DF               	movf	indf2,w,c
  2222   003510  2431               	addwf	wallAdjust@cur_power^0,w,c
  2223   003512  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2224   003516  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2225   00351A  6EDF               	movwf	indf2,c
  2226                           
  2227                           ;dc_motor.c: 533:         mR->power = cur_power+mR->compensation;
  2228   00351C  EE20 F009          	lfsr	2,9
  2229   003520  5025               	movf	wallAdjust@mR^0,w,c
  2230   003522  26D9               	addwf	fsr2l,f,c
  2231   003524  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2232   003526  22DA               	addwfc	fsr2h,f,c
  2233   003528  50DF               	movf	indf2,w,c
  2234   00352A  2431               	addwf	wallAdjust@cur_power^0,w,c
  2235   00352C  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2236   003530  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2237   003534  6EDF               	movwf	indf2,c
  2238   003536                     
  2239                           ;dc_motor.c: 534:         setMotorPWM(mL);
  2240   003536  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2241   00353A  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2242   00353E  ECAB  F024         	call	_setMotorPWM	;wreg free
  2243   003542                     
  2244                           ;dc_motor.c: 535:         setMotorPWM(mR);
  2245   003542  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2246   003546  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2247   00354A  ECAB  F024         	call	_setMotorPWM	;wreg free
  2248   00354E                     
  2249                           ;dc_motor.c: 536:         for (i=0;i<straightRamp;i++) {
  2250   00354E  0E00               	movlw	0
  2251   003550  6E30               	movwf	(wallAdjust@i+1)^0,c
  2252   003552  0E00               	movlw	0
  2253   003554  6E2F               	movwf	wallAdjust@i^0,c
  2254   003556  EFB7  F01A         	goto	l703
  2255   00355A                     l4126:
  2256                           
  2257                           ;dc_motor.c: 537:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2258   00355A  0E68               	movlw	104
  2259   00355C  6E29               	movwf	??_wallAdjust^0,c
  2260   00355E  0EE4               	movlw	228
  2261   003560                     u3947:
  2262   003560  2EE8               	decfsz	wreg,f,c
  2263   003562  D7FE               	bra	u3947
  2264   003564  2E29               	decfsz	??_wallAdjust^0,f,c
  2265   003566  D7FC               	bra	u3947
  2266   003568  D000               	nop2	
  2267   00356A                     
  2268                           ;dc_motor.c: 538:         }
  2269   00356A  4A2F               	infsnz	wallAdjust@i^0,f,c
  2270   00356C  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2271   00356E                     l703:
  2272   00356E  5028               	movf	wallAdjust@straightRamp^0,w,c
  2273   003570  6E29               	movwf	??_wallAdjust^0,c
  2274   003572  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2275   003574  5029               	movf	??_wallAdjust^0,w,c
  2276   003576  5C2F               	subwf	wallAdjust@i^0,w,c
  2277   003578  5030               	movf	(wallAdjust@i+1)^0,w,c
  2278   00357A  0A80               	xorlw	128
  2279   00357C  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2280   00357E  502A               	movf	(??_wallAdjust+1)^0,w,c
  2281   003580  0A80               	xorlw	128
  2282   003582  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2283   003584  A0D8               	btfss	status,0,c
  2284   003586  EFC7  F01A         	goto	u2951
  2285   00358A  EFC9  F01A         	goto	u2950
  2286   00358E                     u2951:
  2287   00358E  EFAD  F01A         	goto	l4126
  2288   003592                     u2950:
  2289   003592                     
  2290                           ;dc_motor.c: 539:     }
  2291   003592  0631               	decf	wallAdjust@cur_power^0,f,c
  2292   003594  A0D8               	btfss	status,0,c
  2293   003596  0632               	decf	(wallAdjust@cur_power+1)^0,f,c
  2294   003598  EF78  F01A         	goto	l4114
  2295   00359C                     l4134:
  2296                           
  2297                           ;dc_motor.c: 541:     mL->direction = 0;
  2298   00359C  EE20 F001          	lfsr	2,1
  2299   0035A0  5023               	movf	wallAdjust@mL^0,w,c
  2300   0035A2  26D9               	addwf	fsr2l,f,c
  2301   0035A4  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2302   0035A6  22DA               	addwfc	fsr2h,f,c
  2303   0035A8  6ADF               	clrf	indf2,c
  2304                           
  2305                           ;dc_motor.c: 542:     mR->direction = 0;
  2306   0035AA  EE20 F001          	lfsr	2,1
  2307   0035AE  5025               	movf	wallAdjust@mR^0,w,c
  2308   0035B0  26D9               	addwf	fsr2l,f,c
  2309   0035B2  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2310   0035B4  22DA               	addwfc	fsr2h,f,c
  2311   0035B6  6ADF               	clrf	indf2,c
  2312   0035B8                     
  2313                           ;dc_motor.c: 543:     for (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  2314   0035B8  0E00               	movlw	0
  2315   0035BA  6E32               	movwf	(wallAdjust@cur_power+1)^0,c
  2316   0035BC  0E01               	movlw	1
  2317   0035BE  6E31               	movwf	wallAdjust@cur_power^0,c
  2318   0035C0  EF2C  F01B         	goto	l4152
  2319   0035C4                     l4138:
  2320                           
  2321                           ;dc_motor.c: 544:         mL->power = cur_power+mL->compensation;
  2322   0035C4  EE20 F009          	lfsr	2,9
  2323   0035C8  5023               	movf	wallAdjust@mL^0,w,c
  2324   0035CA  26D9               	addwf	fsr2l,f,c
  2325   0035CC  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2326   0035CE  22DA               	addwfc	fsr2h,f,c
  2327   0035D0  50DF               	movf	indf2,w,c
  2328   0035D2  2431               	addwf	wallAdjust@cur_power^0,w,c
  2329   0035D4  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2330   0035D8  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2331   0035DC  6EDF               	movwf	indf2,c
  2332                           
  2333                           ;dc_motor.c: 545:         mR->power = cur_power+mR->compensation;
  2334   0035DE  EE20 F009          	lfsr	2,9
  2335   0035E2  5025               	movf	wallAdjust@mR^0,w,c
  2336   0035E4  26D9               	addwf	fsr2l,f,c
  2337   0035E6  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2338   0035E8  22DA               	addwfc	fsr2h,f,c
  2339   0035EA  50DF               	movf	indf2,w,c
  2340   0035EC  2431               	addwf	wallAdjust@cur_power^0,w,c
  2341   0035EE  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2342   0035F2  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2343   0035F6  6EDF               	movwf	indf2,c
  2344   0035F8                     
  2345                           ;dc_motor.c: 546:         setMotorPWM(mL);
  2346   0035F8  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2347   0035FC  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2348   003600  ECAB  F024         	call	_setMotorPWM	;wreg free
  2349   003604                     
  2350                           ;dc_motor.c: 547:         setMotorPWM(mR);
  2351   003604  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2352   003608  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2353   00360C  ECAB  F024         	call	_setMotorPWM	;wreg free
  2354   003610                     
  2355                           ;dc_motor.c: 548:         for (i=0;i<straightRamp;i++) {
  2356   003610  0E00               	movlw	0
  2357   003612  6E30               	movwf	(wallAdjust@i+1)^0,c
  2358   003614  0E00               	movlw	0
  2359   003616  6E2F               	movwf	wallAdjust@i^0,c
  2360   003618  EF18  F01B         	goto	l708
  2361   00361C                     l4146:
  2362                           
  2363                           ;dc_motor.c: 549:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2364   00361C  0E68               	movlw	104
  2365   00361E  6E29               	movwf	??_wallAdjust^0,c
  2366   003620  0EE4               	movlw	228
  2367   003622                     u3957:
  2368   003622  2EE8               	decfsz	wreg,f,c
  2369   003624  D7FE               	bra	u3957
  2370   003626  2E29               	decfsz	??_wallAdjust^0,f,c
  2371   003628  D7FC               	bra	u3957
  2372   00362A  D000               	nop2	
  2373   00362C                     
  2374                           ;dc_motor.c: 550:         }
  2375   00362C  4A2F               	infsnz	wallAdjust@i^0,f,c
  2376   00362E  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2377   003630                     l708:
  2378   003630  5028               	movf	wallAdjust@straightRamp^0,w,c
  2379   003632  6E29               	movwf	??_wallAdjust^0,c
  2380   003634  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2381   003636  5029               	movf	??_wallAdjust^0,w,c
  2382   003638  5C2F               	subwf	wallAdjust@i^0,w,c
  2383   00363A  5030               	movf	(wallAdjust@i+1)^0,w,c
  2384   00363C  0A80               	xorlw	128
  2385   00363E  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2386   003640  502A               	movf	(??_wallAdjust+1)^0,w,c
  2387   003642  0A80               	xorlw	128
  2388   003644  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2389   003646  A0D8               	btfss	status,0,c
  2390   003648  EF28  F01B         	goto	u2961
  2391   00364C  EF2A  F01B         	goto	u2960
  2392   003650                     u2961:
  2393   003650  EF0E  F01B         	goto	l4146
  2394   003654                     u2960:
  2395   003654                     
  2396                           ;dc_motor.c: 551:     }
  2397   003654  4A31               	infsnz	wallAdjust@cur_power^0,f,c
  2398   003656  2A32               	incf	(wallAdjust@cur_power+1)^0,f,c
  2399   003658                     l4152:
  2400   003658  5027               	movf	wallAdjust@straightSpeed^0,w,c
  2401   00365A  6E29               	movwf	??_wallAdjust^0,c
  2402   00365C  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2403   00365E  5031               	movf	wallAdjust@cur_power^0,w,c
  2404   003660  5C29               	subwf	??_wallAdjust^0,w,c
  2405   003662  502A               	movf	(??_wallAdjust+1)^0,w,c
  2406   003664  0A80               	xorlw	128
  2407   003666  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2408   003668  5032               	movf	(wallAdjust@cur_power+1)^0,w,c
  2409   00366A  0A80               	xorlw	128
  2410   00366C  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2411   00366E  B0D8               	btfsc	status,0,c
  2412   003670  EF3C  F01B         	goto	u2971
  2413   003674  EF3E  F01B         	goto	u2970
  2414   003678                     u2971:
  2415   003678  EFE2  F01A         	goto	l4138
  2416   00367C                     u2970:
  2417   00367C                     
  2418                           ;dc_motor.c: 553:     for (i=0;i<wallReverseDuration;i++) {
  2419   00367C  0E00               	movlw	0
  2420   00367E  6E30               	movwf	(wallAdjust@i+1)^0,c
  2421   003680  0E00               	movlw	0
  2422   003682  6E2F               	movwf	wallAdjust@i^0,c
  2423   003684  EF4E  F01B         	goto	l712
  2424   003688                     l4156:
  2425                           
  2426                           ;dc_motor.c: 554:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2427   003688  0E68               	movlw	104
  2428   00368A  6E29               	movwf	??_wallAdjust^0,c
  2429   00368C  0EE4               	movlw	228
  2430   00368E                     u3967:
  2431   00368E  2EE8               	decfsz	wreg,f,c
  2432   003690  D7FE               	bra	u3967
  2433   003692  2E29               	decfsz	??_wallAdjust^0,f,c
  2434   003694  D7FC               	bra	u3967
  2435   003696  D000               	nop2	
  2436   003698                     
  2437                           ;dc_motor.c: 555:         }
  2438   003698  4A2F               	infsnz	wallAdjust@i^0,f,c
  2439   00369A  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2440   00369C                     l712:
  2441   00369C  502D               	movf	wallAdjust@wallReverseDuration^0,w,c
  2442   00369E  6E29               	movwf	??_wallAdjust^0,c
  2443   0036A0  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2444   0036A2  5029               	movf	??_wallAdjust^0,w,c
  2445   0036A4  5C2F               	subwf	wallAdjust@i^0,w,c
  2446   0036A6  5030               	movf	(wallAdjust@i+1)^0,w,c
  2447   0036A8  0A80               	xorlw	128
  2448   0036AA  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2449   0036AC  502A               	movf	(??_wallAdjust+1)^0,w,c
  2450   0036AE  0A80               	xorlw	128
  2451   0036B0  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2452   0036B2  A0D8               	btfss	status,0,c
  2453   0036B4  EF5E  F01B         	goto	u2981
  2454   0036B8  EF60  F01B         	goto	u2980
  2455   0036BC                     u2981:
  2456   0036BC  EF44  F01B         	goto	l4156
  2457   0036C0                     u2980:
  2458   0036C0                     
  2459                           ;dc_motor.c: 557:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  2460   0036C0  C027  F031         	movff	wallAdjust@straightSpeed,wallAdjust@cur_power
  2461   0036C4  6A32               	clrf	(wallAdjust@cur_power+1)^0,c
  2462   0036C6                     l4160:
  2463   0036C6  BE32               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2464   0036C8  EF6A  F01B         	goto	u2990
  2465   0036CC  EF68  F01B         	goto	u2991
  2466   0036D0                     u2991:
  2467   0036D0  EF6C  F01B         	goto	l4164
  2468   0036D4                     u2990:
  2469   0036D4  EFB9  F01B         	goto	l4180
  2470   0036D8                     l4164:
  2471                           
  2472                           ;dc_motor.c: 558:         mL->power = cur_power+mL->compensation;
  2473   0036D8  EE20 F009          	lfsr	2,9
  2474   0036DC  5023               	movf	wallAdjust@mL^0,w,c
  2475   0036DE  26D9               	addwf	fsr2l,f,c
  2476   0036E0  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2477   0036E2  22DA               	addwfc	fsr2h,f,c
  2478   0036E4  50DF               	movf	indf2,w,c
  2479   0036E6  2431               	addwf	wallAdjust@cur_power^0,w,c
  2480   0036E8  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2481   0036EC  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2482   0036F0  6EDF               	movwf	indf2,c
  2483                           
  2484                           ;dc_motor.c: 559:         mR->power = cur_power+mR->compensation;
  2485   0036F2  EE20 F009          	lfsr	2,9
  2486   0036F6  5025               	movf	wallAdjust@mR^0,w,c
  2487   0036F8  26D9               	addwf	fsr2l,f,c
  2488   0036FA  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2489   0036FC  22DA               	addwfc	fsr2h,f,c
  2490   0036FE  50DF               	movf	indf2,w,c
  2491   003700  2431               	addwf	wallAdjust@cur_power^0,w,c
  2492   003702  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2493   003706  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2494   00370A  6EDF               	movwf	indf2,c
  2495   00370C                     
  2496                           ;dc_motor.c: 560:         setMotorPWM(mL);
  2497   00370C  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2498   003710  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2499   003714  ECAB  F024         	call	_setMotorPWM	;wreg free
  2500   003718                     
  2501                           ;dc_motor.c: 561:         setMotorPWM(mR);
  2502   003718  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2503   00371C  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2504   003720  ECAB  F024         	call	_setMotorPWM	;wreg free
  2505   003724                     
  2506                           ;dc_motor.c: 562:         for (i=0;i<straightRamp;i++) {
  2507   003724  0E00               	movlw	0
  2508   003726  6E30               	movwf	(wallAdjust@i+1)^0,c
  2509   003728  0E00               	movlw	0
  2510   00372A  6E2F               	movwf	wallAdjust@i^0,c
  2511   00372C  EFA2  F01B         	goto	l717
  2512   003730                     l4172:
  2513                           
  2514                           ;dc_motor.c: 563:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2515   003730  0E68               	movlw	104
  2516   003732  6E29               	movwf	??_wallAdjust^0,c
  2517   003734  0EE4               	movlw	228
  2518   003736                     u3977:
  2519   003736  2EE8               	decfsz	wreg,f,c
  2520   003738  D7FE               	bra	u3977
  2521   00373A  2E29               	decfsz	??_wallAdjust^0,f,c
  2522   00373C  D7FC               	bra	u3977
  2523   00373E  D000               	nop2	
  2524   003740                     
  2525                           ;dc_motor.c: 564:         }
  2526   003740  4A2F               	infsnz	wallAdjust@i^0,f,c
  2527   003742  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2528   003744                     l717:
  2529   003744  5028               	movf	wallAdjust@straightRamp^0,w,c
  2530   003746  6E29               	movwf	??_wallAdjust^0,c
  2531   003748  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2532   00374A  5029               	movf	??_wallAdjust^0,w,c
  2533   00374C  5C2F               	subwf	wallAdjust@i^0,w,c
  2534   00374E  5030               	movf	(wallAdjust@i+1)^0,w,c
  2535   003750  0A80               	xorlw	128
  2536   003752  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2537   003754  502A               	movf	(??_wallAdjust+1)^0,w,c
  2538   003756  0A80               	xorlw	128
  2539   003758  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2540   00375A  A0D8               	btfss	status,0,c
  2541   00375C  EFB2  F01B         	goto	u3001
  2542   003760  EFB4  F01B         	goto	u3000
  2543   003764                     u3001:
  2544   003764  EF98  F01B         	goto	l4172
  2545   003768                     u3000:
  2546   003768                     
  2547                           ;dc_motor.c: 565:     }
  2548   003768  0631               	decf	wallAdjust@cur_power^0,f,c
  2549   00376A  A0D8               	btfss	status,0,c
  2550   00376C  0632               	decf	(wallAdjust@cur_power+1)^0,f,c
  2551   00376E  EF63  F01B         	goto	l4160
  2552   003772                     l4180:
  2553                           
  2554                           ;dc_motor.c: 566:     mL->power = 0;
  2555   003772  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2556   003776  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2557   00377A  6ADF               	clrf	indf2,c
  2558                           
  2559                           ;dc_motor.c: 567:     mR->power = 0;
  2560   00377C  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2561   003780  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2562   003784  6ADF               	clrf	indf2,c
  2563   003786  0012               	return		;funcret
  2564   003788                     __end_of_wallAdjust:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function _move *****************
  2568 ;; Defined at:
  2569 ;;		line 92 in file "dc_motor.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  2572 ;;		 -> main@motorL(10), 
  2573 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  2574 ;;		 -> main@motorR(10), 
  2575 ;;  color           1    4[BANK0 ] unsigned char 
  2576 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  2577 ;;		 -> main@moveSequence(40), 
  2578 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  2579 ;;		 -> main@straightTime(82), 
  2580 ;;  curMove         1    9[BANK0 ] unsigned char 
  2581 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  2582 ;;  reverseDurat    2   11[BANK0 ] unsigned int 
  2583 ;;  straightRamp    1   13[BANK0 ] unsigned char 
  2584 ;;  turnSpeed       1   14[BANK0 ] unsigned char 
  2585 ;;  turnDuration    1   15[BANK0 ] unsigned char 
  2586 ;;  turnRamp        1   16[BANK0 ] unsigned char 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2598 ;;      Params:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2601 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2602 ;;Total ram usage:       19 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 10
  2605 ;; This function calls:
  2606 ;;		_fullSpeedAhead
  2607 ;;		_returnHome
  2608 ;;		_reverseOneSquare
  2609 ;;		_reverseShort
  2610 ;;		_turnLeft
  2611 ;;		_turnRight
  2612 ;; This function is called by:
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text2
  2618   000E02                     __ptext2:
  2619                           	callstack 0
  2620   000E02                     _move:
  2621                           	callstack 20
  2622   000E02                     
  2623                           ;dc_motor.c: 92: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned int rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 93: {;dc_motor.c: 94:     if (color == 1) {
  2624   000E02  0100               	movlb	0	; () banked
  2625   000E04  0564               	decf	move@color& (0+255),w,b
  2626   000E06  A4D8               	btfss	status,2,c
  2627   000E08  EF08  F007         	goto	u3231
  2628   000E0C  EF0A  F007         	goto	u3230
  2629   000E10                     u3231:
  2630   000E10  EF6C  F007         	goto	l4260
  2631   000E14                     u3230:
  2632   000E14                     
  2633                           ; BSR set to: 0
  2634                           ;dc_motor.c: 95:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2635   000E14  C060  F023         	movff	move@mL,reverseShort@mL
  2636   000E18  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2637   000E1C  C062  F025         	movff	move@mR,reverseShort@mR
  2638   000E20  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2639   000E24  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2640   000E28  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2641   000E2C  ECF3  F01F         	call	_reverseShort	;wreg free
  2642   000E30                     
  2643                           ;dc_motor.c: 96:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2644   000E30  0E05               	movlw	5
  2645   000E32  6E4A               	movwf	(??_move+1)^0,c
  2646   000E34  0E0F               	movlw	15
  2647   000E36  6E49               	movwf	??_move^0,c
  2648   000E38  0EF1               	movlw	241
  2649   000E3A                     u3987:
  2650   000E3A  2EE8               	decfsz	wreg,f,c
  2651   000E3C  D7FE               	bra	u3987
  2652   000E3E  2E49               	decfsz	??_move^0,f,c
  2653   000E40  D7FC               	bra	u3987
  2654   000E42  2E4A               	decfsz	(??_move+1)^0,f,c
  2655   000E44  D7FA               	bra	u3987
  2656   000E46  0000               	nop	
  2657   000E48                     
  2658                           ;dc_motor.c: 97:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2659   000E48  C060  F023         	movff	move@mL,turnRight@mL
  2660   000E4C  C061  F024         	movff	move@mL+1,turnRight@mL+1
  2661   000E50  C062  F025         	movff	move@mR,turnRight@mR
  2662   000E54  C063  F026         	movff	move@mR+1,turnRight@mR+1
  2663   000E58  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  2664   000E5C  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  2665   000E60  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  2666   000E64  ECD1  F022         	call	_turnRight	;wreg free
  2667                           
  2668                           ;dc_motor.c: 98:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2669   000E68  0E05               	movlw	5
  2670   000E6A  6E4A               	movwf	(??_move+1)^0,c
  2671   000E6C  0E0F               	movlw	15
  2672   000E6E  6E49               	movwf	??_move^0,c
  2673   000E70  0EF1               	movlw	241
  2674   000E72                     u3997:
  2675   000E72  2EE8               	decfsz	wreg,f,c
  2676   000E74  D7FE               	bra	u3997
  2677   000E76  2E49               	decfsz	??_move^0,f,c
  2678   000E78  D7FC               	bra	u3997
  2679   000E7A  2E4A               	decfsz	(??_move+1)^0,f,c
  2680   000E7C  D7FA               	bra	u3997
  2681   000E7E  0000               	nop	
  2682   000E80                     
  2683                           ;dc_motor.c: 99:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2684   000E80  C060  F023         	movff	move@mL,turnRight@mL
  2685   000E84  C061  F024         	movff	move@mL+1,turnRight@mL+1
  2686   000E88  C062  F025         	movff	move@mR,turnRight@mR
  2687   000E8C  C063  F026         	movff	move@mR+1,turnRight@mR+1
  2688   000E90  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  2689   000E94  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  2690   000E98  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  2691   000E9C  ECD1  F022         	call	_turnRight	;wreg free
  2692   000EA0                     
  2693                           ;dc_motor.c: 100:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2694   000EA0  0E05               	movlw	5
  2695   000EA2  6E4A               	movwf	(??_move+1)^0,c
  2696   000EA4  0E0F               	movlw	15
  2697   000EA6  6E49               	movwf	??_move^0,c
  2698   000EA8  0EF1               	movlw	241
  2699   000EAA                     u4007:
  2700   000EAA  2EE8               	decfsz	wreg,f,c
  2701   000EAC  D7FE               	bra	u4007
  2702   000EAE  2E49               	decfsz	??_move^0,f,c
  2703   000EB0  D7FC               	bra	u4007
  2704   000EB2  2E4A               	decfsz	(??_move+1)^0,f,c
  2705   000EB4  D7FA               	bra	u4007
  2706   000EB6  0000               	nop	
  2707                           
  2708                           ;dc_motor.c: 101:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2709   000EB8  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  2710   000EBC  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  2711   000EC0  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  2712   000EC4  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  2713   000EC8  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2714   000ECC  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2715   000ED0  EC6B  F026         	call	_fullSpeedAhead	;wreg free
  2716                           
  2717                           ;dc_motor.c: 102:     }
  2718   000ED4  EF1D  F00B         	goto	l571
  2719   000ED8                     l4260:
  2720                           
  2721                           ; BSR set to: 0
  2722   000ED8  0E02               	movlw	2
  2723   000EDA  1964               	xorwf	move@color& (0+255),w,b
  2724   000EDC  A4D8               	btfss	status,2,c
  2725   000EDE  EF73  F007         	goto	u3241
  2726   000EE2  EF75  F007         	goto	u3240
  2727   000EE6                     u3241:
  2728   000EE6  EFD7  F007         	goto	l4272
  2729   000EEA                     u3240:
  2730   000EEA                     
  2731                           ; BSR set to: 0
  2732                           ;dc_motor.c: 105:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2733   000EEA  C060  F023         	movff	move@mL,reverseShort@mL
  2734   000EEE  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2735   000EF2  C062  F025         	movff	move@mR,reverseShort@mR
  2736   000EF6  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2737   000EFA  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2738   000EFE  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2739   000F02  ECF3  F01F         	call	_reverseShort	;wreg free
  2740   000F06                     
  2741                           ;dc_motor.c: 106:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2742   000F06  0E05               	movlw	5
  2743   000F08  6E4A               	movwf	(??_move+1)^0,c
  2744   000F0A  0E0F               	movlw	15
  2745   000F0C  6E49               	movwf	??_move^0,c
  2746   000F0E  0EF1               	movlw	241
  2747   000F10                     u4017:
  2748   000F10  2EE8               	decfsz	wreg,f,c
  2749   000F12  D7FE               	bra	u4017
  2750   000F14  2E49               	decfsz	??_move^0,f,c
  2751   000F16  D7FC               	bra	u4017
  2752   000F18  2E4A               	decfsz	(??_move+1)^0,f,c
  2753   000F1A  D7FA               	bra	u4017
  2754   000F1C  0000               	nop	
  2755   000F1E                     
  2756                           ;dc_motor.c: 107:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2757   000F1E  C060  F023         	movff	move@mL,turnLeft@mL
  2758   000F22  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2759   000F26  C062  F025         	movff	move@mR,turnLeft@mR
  2760   000F2A  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2761   000F2E  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2762   000F32  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2763   000F36  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2764   000F3A  ECBE  F023         	call	_turnLeft	;wreg free
  2765                           
  2766                           ;dc_motor.c: 108:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2767   000F3E  0E05               	movlw	5
  2768   000F40  6E4A               	movwf	(??_move+1)^0,c
  2769   000F42  0E0F               	movlw	15
  2770   000F44  6E49               	movwf	??_move^0,c
  2771   000F46  0EF1               	movlw	241
  2772   000F48                     u4027:
  2773   000F48  2EE8               	decfsz	wreg,f,c
  2774   000F4A  D7FE               	bra	u4027
  2775   000F4C  2E49               	decfsz	??_move^0,f,c
  2776   000F4E  D7FC               	bra	u4027
  2777   000F50  2E4A               	decfsz	(??_move+1)^0,f,c
  2778   000F52  D7FA               	bra	u4027
  2779   000F54  0000               	nop	
  2780   000F56                     
  2781                           ;dc_motor.c: 109:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2782   000F56  C060  F023         	movff	move@mL,turnLeft@mL
  2783   000F5A  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2784   000F5E  C062  F025         	movff	move@mR,turnLeft@mR
  2785   000F62  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2786   000F66  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2787   000F6A  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2788   000F6E  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2789   000F72  ECBE  F023         	call	_turnLeft	;wreg free
  2790   000F76                     
  2791                           ;dc_motor.c: 110:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2792   000F76  0E05               	movlw	5
  2793   000F78  6E4A               	movwf	(??_move+1)^0,c
  2794   000F7A  0E0F               	movlw	15
  2795   000F7C  6E49               	movwf	??_move^0,c
  2796   000F7E  0EF1               	movlw	241
  2797   000F80                     u4037:
  2798   000F80  2EE8               	decfsz	wreg,f,c
  2799   000F82  D7FE               	bra	u4037
  2800   000F84  2E49               	decfsz	??_move^0,f,c
  2801   000F86  D7FC               	bra	u4037
  2802   000F88  2E4A               	decfsz	(??_move+1)^0,f,c
  2803   000F8A  D7FA               	bra	u4037
  2804   000F8C  0000               	nop	
  2805                           
  2806                           ;dc_motor.c: 111:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2807   000F8E  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  2808   000F92  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  2809   000F96  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  2810   000F9A  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  2811   000F9E  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2812   000FA2  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2813   000FA6  EC6B  F026         	call	_fullSpeedAhead	;wreg free
  2814                           
  2815                           ;dc_motor.c: 112:     }
  2816   000FAA  EF1D  F00B         	goto	l571
  2817   000FAE                     l4272:
  2818                           
  2819                           ; BSR set to: 0
  2820   000FAE  0E03               	movlw	3
  2821   000FB0  1964               	xorwf	move@color& (0+255),w,b
  2822   000FB2  A4D8               	btfss	status,2,c
  2823   000FB4  EFDE  F007         	goto	u3251
  2824   000FB8  EFE0  F007         	goto	u3250
  2825   000FBC                     u3251:
  2826   000FBC  EF7A  F008         	goto	l4290
  2827   000FC0                     u3250:
  2828   000FC0                     
  2829                           ; BSR set to: 0
  2830                           ;dc_motor.c: 115:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2831   000FC0  C060  F023         	movff	move@mL,reverseShort@mL
  2832   000FC4  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2833   000FC8  C062  F025         	movff	move@mR,reverseShort@mR
  2834   000FCC  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2835   000FD0  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2836   000FD4  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2837   000FD8  ECF3  F01F         	call	_reverseShort	;wreg free
  2838   000FDC                     
  2839                           ;dc_motor.c: 116:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2840   000FDC  0E05               	movlw	5
  2841   000FDE  6E4A               	movwf	(??_move+1)^0,c
  2842   000FE0  0E0F               	movlw	15
  2843   000FE2  6E49               	movwf	??_move^0,c
  2844   000FE4  0EF1               	movlw	241
  2845   000FE6                     u4047:
  2846   000FE6  2EE8               	decfsz	wreg,f,c
  2847   000FE8  D7FE               	bra	u4047
  2848   000FEA  2E49               	decfsz	??_move^0,f,c
  2849   000FEC  D7FC               	bra	u4047
  2850   000FEE  2E4A               	decfsz	(??_move+1)^0,f,c
  2851   000FF0  D7FA               	bra	u4047
  2852   000FF2  0000               	nop	
  2853   000FF4                     
  2854                           ;dc_motor.c: 117:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2855   000FF4  C060  F023         	movff	move@mL,turnLeft@mL
  2856   000FF8  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2857   000FFC  C062  F025         	movff	move@mR,turnLeft@mR
  2858   001000  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2859   001004  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2860   001008  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2861   00100C  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2862   001010  ECBE  F023         	call	_turnLeft	;wreg free
  2863                           
  2864                           ;dc_motor.c: 118:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2865   001014  0E05               	movlw	5
  2866   001016  6E4A               	movwf	(??_move+1)^0,c
  2867   001018  0E0F               	movlw	15
  2868   00101A  6E49               	movwf	??_move^0,c
  2869   00101C  0EF1               	movlw	241
  2870   00101E                     u4057:
  2871   00101E  2EE8               	decfsz	wreg,f,c
  2872   001020  D7FE               	bra	u4057
  2873   001022  2E49               	decfsz	??_move^0,f,c
  2874   001024  D7FC               	bra	u4057
  2875   001026  2E4A               	decfsz	(??_move+1)^0,f,c
  2876   001028  D7FA               	bra	u4057
  2877   00102A  0000               	nop	
  2878   00102C                     
  2879                           ;dc_motor.c: 119:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2880   00102C  C060  F023         	movff	move@mL,turnLeft@mL
  2881   001030  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2882   001034  C062  F025         	movff	move@mR,turnLeft@mR
  2883   001038  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2884   00103C  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2885   001040  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2886   001044  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2887   001048  ECBE  F023         	call	_turnLeft	;wreg free
  2888   00104C                     
  2889                           ;dc_motor.c: 120:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2890   00104C  0E05               	movlw	5
  2891   00104E  6E4A               	movwf	(??_move+1)^0,c
  2892   001050  0E0F               	movlw	15
  2893   001052  6E49               	movwf	??_move^0,c
  2894   001054  0EF1               	movlw	241
  2895   001056                     u4067:
  2896   001056  2EE8               	decfsz	wreg,f,c
  2897   001058  D7FE               	bra	u4067
  2898   00105A  2E49               	decfsz	??_move^0,f,c
  2899   00105C  D7FC               	bra	u4067
  2900   00105E  2E4A               	decfsz	(??_move+1)^0,f,c
  2901   001060  D7FA               	bra	u4067
  2902   001062  0000               	nop	
  2903                           
  2904                           ;dc_motor.c: 121:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2905   001064  C060  F023         	movff	move@mL,turnLeft@mL
  2906   001068  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2907   00106C  C062  F025         	movff	move@mR,turnLeft@mR
  2908   001070  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2909   001074  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2910   001078  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2911   00107C  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2912   001080  ECBE  F023         	call	_turnLeft	;wreg free
  2913   001084                     
  2914                           ;dc_motor.c: 122:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2915   001084  0E05               	movlw	5
  2916   001086  6E4A               	movwf	(??_move+1)^0,c
  2917   001088  0E0F               	movlw	15
  2918   00108A  6E49               	movwf	??_move^0,c
  2919   00108C  0EF1               	movlw	241
  2920   00108E                     u4077:
  2921   00108E  2EE8               	decfsz	wreg,f,c
  2922   001090  D7FE               	bra	u4077
  2923   001092  2E49               	decfsz	??_move^0,f,c
  2924   001094  D7FC               	bra	u4077
  2925   001096  2E4A               	decfsz	(??_move+1)^0,f,c
  2926   001098  D7FA               	bra	u4077
  2927   00109A  0000               	nop	
  2928   00109C                     
  2929                           ;dc_motor.c: 123:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2930   00109C  C060  F023         	movff	move@mL,turnLeft@mL
  2931   0010A0  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2932   0010A4  C062  F025         	movff	move@mR,turnLeft@mR
  2933   0010A8  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2934   0010AC  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2935   0010B0  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2936   0010B4  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2937   0010B8  ECBE  F023         	call	_turnLeft	;wreg free
  2938                           
  2939                           ;dc_motor.c: 124:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2940   0010BC  0E05               	movlw	5
  2941   0010BE  6E4A               	movwf	(??_move+1)^0,c
  2942   0010C0  0E0F               	movlw	15
  2943   0010C2  6E49               	movwf	??_move^0,c
  2944   0010C4  0EF1               	movlw	241
  2945   0010C6                     u4087:
  2946   0010C6  2EE8               	decfsz	wreg,f,c
  2947   0010C8  D7FE               	bra	u4087
  2948   0010CA  2E49               	decfsz	??_move^0,f,c
  2949   0010CC  D7FC               	bra	u4087
  2950   0010CE  2E4A               	decfsz	(??_move+1)^0,f,c
  2951   0010D0  D7FA               	bra	u4087
  2952   0010D2  0000               	nop	
  2953   0010D4                     
  2954                           ;dc_motor.c: 125:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2955   0010D4  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  2956   0010D8  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  2957   0010DC  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  2958   0010E0  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  2959   0010E4  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2960   0010E8  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2961   0010EC  EC6B  F026         	call	_fullSpeedAhead	;wreg free
  2962                           
  2963                           ;dc_motor.c: 126:     }
  2964   0010F0  EF1D  F00B         	goto	l571
  2965   0010F4                     l4290:
  2966                           
  2967                           ; BSR set to: 0
  2968   0010F4  0E04               	movlw	4
  2969   0010F6  1964               	xorwf	move@color& (0+255),w,b
  2970   0010F8  A4D8               	btfss	status,2,c
  2971   0010FA  EF81  F008         	goto	u3261
  2972   0010FE  EF83  F008         	goto	u3260
  2973   001102                     u3261:
  2974   001102  EF03  F009         	goto	l4306
  2975   001106                     u3260:
  2976   001106                     
  2977                           ; BSR set to: 0
  2978                           ;dc_motor.c: 129:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2979   001106  C060  F023         	movff	move@mL,reverseShort@mL
  2980   00110A  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2981   00110E  C062  F025         	movff	move@mR,reverseShort@mR
  2982   001112  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2983   001116  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2984   00111A  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2985   00111E  ECF3  F01F         	call	_reverseShort	;wreg free
  2986   001122                     
  2987                           ;dc_motor.c: 130:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2988   001122  0E05               	movlw	5
  2989   001124  6E4A               	movwf	(??_move+1)^0,c
  2990   001126  0E0F               	movlw	15
  2991   001128  6E49               	movwf	??_move^0,c
  2992   00112A  0EF1               	movlw	241
  2993   00112C                     u4097:
  2994   00112C  2EE8               	decfsz	wreg,f,c
  2995   00112E  D7FE               	bra	u4097
  2996   001130  2E49               	decfsz	??_move^0,f,c
  2997   001132  D7FC               	bra	u4097
  2998   001134  2E4A               	decfsz	(??_move+1)^0,f,c
  2999   001136  D7FA               	bra	u4097
  3000   001138  0000               	nop	
  3001   00113A                     
  3002                           ;dc_motor.c: 131:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  3003   00113A  C060  F023         	movff	move@mL,reverseOneSquare@mL
  3004   00113E  C061  F024         	movff	move@mL+1,reverseOneSquare@mL+1
  3005   001142  C062  F025         	movff	move@mR,reverseOneSquare@mR
  3006   001146  C063  F026         	movff	move@mR+1,reverseOneSquare@mR+1
  3007   00114A  C06A  F027         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  3008   00114E  C06B  F028         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  3009   001152  C06C  F029         	movff	move@reverseDuration+1,reverseOneSquare@reverseDuration+1
  3010   001156  C06D  F02A         	movff	move@straightRamp,reverseOneSquare@straightRamp
  3011   00115A  ECE2  F021         	call	_reverseOneSquare	;wreg free
  3012                           
  3013                           ;dc_motor.c: 132:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3014   00115E  0E05               	movlw	5
  3015   001160  6E4A               	movwf	(??_move+1)^0,c
  3016   001162  0E0F               	movlw	15
  3017   001164  6E49               	movwf	??_move^0,c
  3018   001166  0EF1               	movlw	241
  3019   001168                     u4107:
  3020   001168  2EE8               	decfsz	wreg,f,c
  3021   00116A  D7FE               	bra	u4107
  3022   00116C  2E49               	decfsz	??_move^0,f,c
  3023   00116E  D7FC               	bra	u4107
  3024   001170  2E4A               	decfsz	(??_move+1)^0,f,c
  3025   001172  D7FA               	bra	u4107
  3026   001174  0000               	nop	
  3027   001176                     
  3028                           ;dc_motor.c: 133:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3029   001176  C060  F023         	movff	move@mL,turnRight@mL
  3030   00117A  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3031   00117E  C062  F025         	movff	move@mR,turnRight@mR
  3032   001182  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3033   001186  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3034   00118A  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3035   00118E  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3036   001192  ECD1  F022         	call	_turnRight	;wreg free
  3037   001196                     
  3038                           ;dc_motor.c: 134:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3039   001196  0E05               	movlw	5
  3040   001198  6E4A               	movwf	(??_move+1)^0,c
  3041   00119A  0E0F               	movlw	15
  3042   00119C  6E49               	movwf	??_move^0,c
  3043   00119E  0EF1               	movlw	241
  3044   0011A0                     u4117:
  3045   0011A0  2EE8               	decfsz	wreg,f,c
  3046   0011A2  D7FE               	bra	u4117
  3047   0011A4  2E49               	decfsz	??_move^0,f,c
  3048   0011A6  D7FC               	bra	u4117
  3049   0011A8  2E4A               	decfsz	(??_move+1)^0,f,c
  3050   0011AA  D7FA               	bra	u4117
  3051   0011AC  0000               	nop	
  3052                           
  3053                           ;dc_motor.c: 135:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3054   0011AE  C060  F023         	movff	move@mL,turnRight@mL
  3055   0011B2  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3056   0011B6  C062  F025         	movff	move@mR,turnRight@mR
  3057   0011BA  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3058   0011BE  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3059   0011C2  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3060   0011C6  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3061   0011CA  ECD1  F022         	call	_turnRight	;wreg free
  3062   0011CE                     
  3063                           ;dc_motor.c: 136:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3064   0011CE  0E05               	movlw	5
  3065   0011D0  6E4A               	movwf	(??_move+1)^0,c
  3066   0011D2  0E0F               	movlw	15
  3067   0011D4  6E49               	movwf	??_move^0,c
  3068   0011D6  0EF1               	movlw	241
  3069   0011D8                     u4127:
  3070   0011D8  2EE8               	decfsz	wreg,f,c
  3071   0011DA  D7FE               	bra	u4127
  3072   0011DC  2E49               	decfsz	??_move^0,f,c
  3073   0011DE  D7FC               	bra	u4127
  3074   0011E0  2E4A               	decfsz	(??_move+1)^0,f,c
  3075   0011E2  D7FA               	bra	u4127
  3076   0011E4  0000               	nop	
  3077   0011E6                     
  3078                           ;dc_motor.c: 137:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3079   0011E6  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3080   0011EA  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3081   0011EE  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3082   0011F2  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3083   0011F6  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3084   0011FA  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3085   0011FE  EC6B  F026         	call	_fullSpeedAhead	;wreg free
  3086                           
  3087                           ;dc_motor.c: 138:     }
  3088   001202  EF1D  F00B         	goto	l571
  3089   001206                     l4306:
  3090                           
  3091                           ; BSR set to: 0
  3092   001206  0E05               	movlw	5
  3093   001208  1964               	xorwf	move@color& (0+255),w,b
  3094   00120A  A4D8               	btfss	status,2,c
  3095   00120C  EF0A  F009         	goto	u3271
  3096   001210  EF0C  F009         	goto	u3270
  3097   001214                     u3271:
  3098   001214  EF8C  F009         	goto	l4322
  3099   001218                     u3270:
  3100   001218                     
  3101                           ; BSR set to: 0
  3102                           ;dc_motor.c: 141:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3103   001218  C060  F023         	movff	move@mL,reverseShort@mL
  3104   00121C  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3105   001220  C062  F025         	movff	move@mR,reverseShort@mR
  3106   001224  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3107   001228  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3108   00122C  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3109   001230  ECF3  F01F         	call	_reverseShort	;wreg free
  3110   001234                     
  3111                           ;dc_motor.c: 142:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3112   001234  0E05               	movlw	5
  3113   001236  6E4A               	movwf	(??_move+1)^0,c
  3114   001238  0E0F               	movlw	15
  3115   00123A  6E49               	movwf	??_move^0,c
  3116   00123C  0EF1               	movlw	241
  3117   00123E                     u4137:
  3118   00123E  2EE8               	decfsz	wreg,f,c
  3119   001240  D7FE               	bra	u4137
  3120   001242  2E49               	decfsz	??_move^0,f,c
  3121   001244  D7FC               	bra	u4137
  3122   001246  2E4A               	decfsz	(??_move+1)^0,f,c
  3123   001248  D7FA               	bra	u4137
  3124   00124A  0000               	nop	
  3125   00124C                     
  3126                           ;dc_motor.c: 143:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  3127   00124C  C060  F023         	movff	move@mL,reverseOneSquare@mL
  3128   001250  C061  F024         	movff	move@mL+1,reverseOneSquare@mL+1
  3129   001254  C062  F025         	movff	move@mR,reverseOneSquare@mR
  3130   001258  C063  F026         	movff	move@mR+1,reverseOneSquare@mR+1
  3131   00125C  C06A  F027         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  3132   001260  C06B  F028         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  3133   001264  C06C  F029         	movff	move@reverseDuration+1,reverseOneSquare@reverseDuration+1
  3134   001268  C06D  F02A         	movff	move@straightRamp,reverseOneSquare@straightRamp
  3135   00126C  ECE2  F021         	call	_reverseOneSquare	;wreg free
  3136                           
  3137                           ;dc_motor.c: 144:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3138   001270  0E05               	movlw	5
  3139   001272  6E4A               	movwf	(??_move+1)^0,c
  3140   001274  0E0F               	movlw	15
  3141   001276  6E49               	movwf	??_move^0,c
  3142   001278  0EF1               	movlw	241
  3143   00127A                     u4147:
  3144   00127A  2EE8               	decfsz	wreg,f,c
  3145   00127C  D7FE               	bra	u4147
  3146   00127E  2E49               	decfsz	??_move^0,f,c
  3147   001280  D7FC               	bra	u4147
  3148   001282  2E4A               	decfsz	(??_move+1)^0,f,c
  3149   001284  D7FA               	bra	u4147
  3150   001286  0000               	nop	
  3151   001288                     
  3152                           ;dc_motor.c: 145:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3153   001288  C060  F023         	movff	move@mL,turnLeft@mL
  3154   00128C  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3155   001290  C062  F025         	movff	move@mR,turnLeft@mR
  3156   001294  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3157   001298  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3158   00129C  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3159   0012A0  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3160   0012A4  ECBE  F023         	call	_turnLeft	;wreg free
  3161   0012A8                     
  3162                           ;dc_motor.c: 146:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3163   0012A8  0E05               	movlw	5
  3164   0012AA  6E4A               	movwf	(??_move+1)^0,c
  3165   0012AC  0E0F               	movlw	15
  3166   0012AE  6E49               	movwf	??_move^0,c
  3167   0012B0  0EF1               	movlw	241
  3168   0012B2                     u4157:
  3169   0012B2  2EE8               	decfsz	wreg,f,c
  3170   0012B4  D7FE               	bra	u4157
  3171   0012B6  2E49               	decfsz	??_move^0,f,c
  3172   0012B8  D7FC               	bra	u4157
  3173   0012BA  2E4A               	decfsz	(??_move+1)^0,f,c
  3174   0012BC  D7FA               	bra	u4157
  3175   0012BE  0000               	nop	
  3176                           
  3177                           ;dc_motor.c: 147:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3178   0012C0  C060  F023         	movff	move@mL,turnLeft@mL
  3179   0012C4  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3180   0012C8  C062  F025         	movff	move@mR,turnLeft@mR
  3181   0012CC  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3182   0012D0  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3183   0012D4  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3184   0012D8  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3185   0012DC  ECBE  F023         	call	_turnLeft	;wreg free
  3186   0012E0                     
  3187                           ;dc_motor.c: 148:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3188   0012E0  0E05               	movlw	5
  3189   0012E2  6E4A               	movwf	(??_move+1)^0,c
  3190   0012E4  0E0F               	movlw	15
  3191   0012E6  6E49               	movwf	??_move^0,c
  3192   0012E8  0EF1               	movlw	241
  3193   0012EA                     u4167:
  3194   0012EA  2EE8               	decfsz	wreg,f,c
  3195   0012EC  D7FE               	bra	u4167
  3196   0012EE  2E49               	decfsz	??_move^0,f,c
  3197   0012F0  D7FC               	bra	u4167
  3198   0012F2  2E4A               	decfsz	(??_move+1)^0,f,c
  3199   0012F4  D7FA               	bra	u4167
  3200   0012F6  0000               	nop	
  3201   0012F8                     
  3202                           ;dc_motor.c: 149:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3203   0012F8  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3204   0012FC  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3205   001300  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3206   001304  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3207   001308  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3208   00130C  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3209   001310  EC6B  F026         	call	_fullSpeedAhead	;wreg free
  3210                           
  3211                           ;dc_motor.c: 150:     }
  3212   001314  EF1D  F00B         	goto	l571
  3213   001318                     l4322:
  3214                           
  3215                           ; BSR set to: 0
  3216   001318  0E06               	movlw	6
  3217   00131A  1964               	xorwf	move@color& (0+255),w,b
  3218   00131C  A4D8               	btfss	status,2,c
  3219   00131E  EF93  F009         	goto	u3281
  3220   001322  EF95  F009         	goto	u3280
  3221   001326                     u3281:
  3222   001326  EF13  F00A         	goto	l4338
  3223   00132A                     u3280:
  3224   00132A                     
  3225                           ; BSR set to: 0
  3226                           ;dc_motor.c: 153:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3227   00132A  C060  F023         	movff	move@mL,reverseShort@mL
  3228   00132E  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3229   001332  C062  F025         	movff	move@mR,reverseShort@mR
  3230   001336  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3231   00133A  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3232   00133E  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3233   001342  ECF3  F01F         	call	_reverseShort	;wreg free
  3234   001346                     
  3235                           ;dc_motor.c: 154:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3236   001346  0E05               	movlw	5
  3237   001348  6E4A               	movwf	(??_move+1)^0,c
  3238   00134A  0E0F               	movlw	15
  3239   00134C  6E49               	movwf	??_move^0,c
  3240   00134E  0EF1               	movlw	241
  3241   001350                     u4177:
  3242   001350  2EE8               	decfsz	wreg,f,c
  3243   001352  D7FE               	bra	u4177
  3244   001354  2E49               	decfsz	??_move^0,f,c
  3245   001356  D7FC               	bra	u4177
  3246   001358  2E4A               	decfsz	(??_move+1)^0,f,c
  3247   00135A  D7FA               	bra	u4177
  3248   00135C  0000               	nop	
  3249   00135E                     
  3250                           ;dc_motor.c: 155:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3251   00135E  C060  F023         	movff	move@mL,turnRight@mL
  3252   001362  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3253   001366  C062  F025         	movff	move@mR,turnRight@mR
  3254   00136A  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3255   00136E  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3256   001372  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3257   001376  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3258   00137A  ECD1  F022         	call	_turnRight	;wreg free
  3259                           
  3260                           ;dc_motor.c: 156:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3261   00137E  0E05               	movlw	5
  3262   001380  6E4A               	movwf	(??_move+1)^0,c
  3263   001382  0E0F               	movlw	15
  3264   001384  6E49               	movwf	??_move^0,c
  3265   001386  0EF1               	movlw	241
  3266   001388                     u4187:
  3267   001388  2EE8               	decfsz	wreg,f,c
  3268   00138A  D7FE               	bra	u4187
  3269   00138C  2E49               	decfsz	??_move^0,f,c
  3270   00138E  D7FC               	bra	u4187
  3271   001390  2E4A               	decfsz	(??_move+1)^0,f,c
  3272   001392  D7FA               	bra	u4187
  3273   001394  0000               	nop	
  3274   001396                     
  3275                           ;dc_motor.c: 157:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3276   001396  C060  F023         	movff	move@mL,turnRight@mL
  3277   00139A  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3278   00139E  C062  F025         	movff	move@mR,turnRight@mR
  3279   0013A2  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3280   0013A6  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3281   0013AA  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3282   0013AE  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3283   0013B2  ECD1  F022         	call	_turnRight	;wreg free
  3284   0013B6                     
  3285                           ;dc_motor.c: 158:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3286   0013B6  0E05               	movlw	5
  3287   0013B8  6E4A               	movwf	(??_move+1)^0,c
  3288   0013BA  0E0F               	movlw	15
  3289   0013BC  6E49               	movwf	??_move^0,c
  3290   0013BE  0EF1               	movlw	241
  3291   0013C0                     u4197:
  3292   0013C0  2EE8               	decfsz	wreg,f,c
  3293   0013C2  D7FE               	bra	u4197
  3294   0013C4  2E49               	decfsz	??_move^0,f,c
  3295   0013C6  D7FC               	bra	u4197
  3296   0013C8  2E4A               	decfsz	(??_move+1)^0,f,c
  3297   0013CA  D7FA               	bra	u4197
  3298   0013CC  0000               	nop	
  3299                           
  3300                           ;dc_motor.c: 159:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3301   0013CE  C060  F023         	movff	move@mL,turnRight@mL
  3302   0013D2  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3303   0013D6  C062  F025         	movff	move@mR,turnRight@mR
  3304   0013DA  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3305   0013DE  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3306   0013E2  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3307   0013E6  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3308   0013EA  ECD1  F022         	call	_turnRight	;wreg free
  3309   0013EE                     
  3310                           ;dc_motor.c: 160:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3311   0013EE  0E05               	movlw	5
  3312   0013F0  6E4A               	movwf	(??_move+1)^0,c
  3313   0013F2  0E0F               	movlw	15
  3314   0013F4  6E49               	movwf	??_move^0,c
  3315   0013F6  0EF1               	movlw	241
  3316   0013F8                     u4207:
  3317   0013F8  2EE8               	decfsz	wreg,f,c
  3318   0013FA  D7FE               	bra	u4207
  3319   0013FC  2E49               	decfsz	??_move^0,f,c
  3320   0013FE  D7FC               	bra	u4207
  3321   001400  2E4A               	decfsz	(??_move+1)^0,f,c
  3322   001402  D7FA               	bra	u4207
  3323   001404  0000               	nop	
  3324   001406                     
  3325                           ;dc_motor.c: 161:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3326   001406  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3327   00140A  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3328   00140E  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3329   001412  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3330   001416  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3331   00141A  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3332   00141E  EC6B  F026         	call	_fullSpeedAhead	;wreg free
  3333                           
  3334                           ;dc_motor.c: 162:     }
  3335   001422  EF1D  F00B         	goto	l571
  3336   001426                     l4338:
  3337                           
  3338                           ; BSR set to: 0
  3339   001426  0E07               	movlw	7
  3340   001428  1964               	xorwf	move@color& (0+255),w,b
  3341   00142A  A4D8               	btfss	status,2,c
  3342   00142C  EF1A  F00A         	goto	u3291
  3343   001430  EF1C  F00A         	goto	u3290
  3344   001434                     u3291:
  3345   001434  EF9A  F00A         	goto	l4354
  3346   001438                     u3290:
  3347   001438                     
  3348                           ; BSR set to: 0
  3349                           ;dc_motor.c: 165:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3350   001438  C060  F023         	movff	move@mL,reverseShort@mL
  3351   00143C  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3352   001440  C062  F025         	movff	move@mR,reverseShort@mR
  3353   001444  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3354   001448  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3355   00144C  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3356   001450  ECF3  F01F         	call	_reverseShort	;wreg free
  3357   001454                     
  3358                           ;dc_motor.c: 166:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3359   001454  0E05               	movlw	5
  3360   001456  6E4A               	movwf	(??_move+1)^0,c
  3361   001458  0E0F               	movlw	15
  3362   00145A  6E49               	movwf	??_move^0,c
  3363   00145C  0EF1               	movlw	241
  3364   00145E                     u4217:
  3365   00145E  2EE8               	decfsz	wreg,f,c
  3366   001460  D7FE               	bra	u4217
  3367   001462  2E49               	decfsz	??_move^0,f,c
  3368   001464  D7FC               	bra	u4217
  3369   001466  2E4A               	decfsz	(??_move+1)^0,f,c
  3370   001468  D7FA               	bra	u4217
  3371   00146A  0000               	nop	
  3372   00146C                     
  3373                           ;dc_motor.c: 167:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3374   00146C  C060  F023         	movff	move@mL,turnLeft@mL
  3375   001470  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3376   001474  C062  F025         	movff	move@mR,turnLeft@mR
  3377   001478  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3378   00147C  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3379   001480  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3380   001484  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3381   001488  ECBE  F023         	call	_turnLeft	;wreg free
  3382                           
  3383                           ;dc_motor.c: 168:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3384   00148C  0E05               	movlw	5
  3385   00148E  6E4A               	movwf	(??_move+1)^0,c
  3386   001490  0E0F               	movlw	15
  3387   001492  6E49               	movwf	??_move^0,c
  3388   001494  0EF1               	movlw	241
  3389   001496                     u4227:
  3390   001496  2EE8               	decfsz	wreg,f,c
  3391   001498  D7FE               	bra	u4227
  3392   00149A  2E49               	decfsz	??_move^0,f,c
  3393   00149C  D7FC               	bra	u4227
  3394   00149E  2E4A               	decfsz	(??_move+1)^0,f,c
  3395   0014A0  D7FA               	bra	u4227
  3396   0014A2  0000               	nop	
  3397   0014A4                     
  3398                           ;dc_motor.c: 169:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3399   0014A4  C060  F023         	movff	move@mL,turnLeft@mL
  3400   0014A8  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3401   0014AC  C062  F025         	movff	move@mR,turnLeft@mR
  3402   0014B0  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3403   0014B4  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3404   0014B8  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3405   0014BC  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3406   0014C0  ECBE  F023         	call	_turnLeft	;wreg free
  3407   0014C4                     
  3408                           ;dc_motor.c: 170:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3409   0014C4  0E05               	movlw	5
  3410   0014C6  6E4A               	movwf	(??_move+1)^0,c
  3411   0014C8  0E0F               	movlw	15
  3412   0014CA  6E49               	movwf	??_move^0,c
  3413   0014CC  0EF1               	movlw	241
  3414   0014CE                     u4237:
  3415   0014CE  2EE8               	decfsz	wreg,f,c
  3416   0014D0  D7FE               	bra	u4237
  3417   0014D2  2E49               	decfsz	??_move^0,f,c
  3418   0014D4  D7FC               	bra	u4237
  3419   0014D6  2E4A               	decfsz	(??_move+1)^0,f,c
  3420   0014D8  D7FA               	bra	u4237
  3421   0014DA  0000               	nop	
  3422                           
  3423                           ;dc_motor.c: 171:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3424   0014DC  C060  F023         	movff	move@mL,turnLeft@mL
  3425   0014E0  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3426   0014E4  C062  F025         	movff	move@mR,turnLeft@mR
  3427   0014E8  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3428   0014EC  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3429   0014F0  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3430   0014F4  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3431   0014F8  ECBE  F023         	call	_turnLeft	;wreg free
  3432   0014FC                     
  3433                           ;dc_motor.c: 172:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3434   0014FC  0E05               	movlw	5
  3435   0014FE  6E4A               	movwf	(??_move+1)^0,c
  3436   001500  0E0F               	movlw	15
  3437   001502  6E49               	movwf	??_move^0,c
  3438   001504  0EF1               	movlw	241
  3439   001506                     u4247:
  3440   001506  2EE8               	decfsz	wreg,f,c
  3441   001508  D7FE               	bra	u4247
  3442   00150A  2E49               	decfsz	??_move^0,f,c
  3443   00150C  D7FC               	bra	u4247
  3444   00150E  2E4A               	decfsz	(??_move+1)^0,f,c
  3445   001510  D7FA               	bra	u4247
  3446   001512  0000               	nop	
  3447   001514                     
  3448                           ;dc_motor.c: 173:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3449   001514  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3450   001518  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3451   00151C  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3452   001520  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3453   001524  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3454   001528  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3455   00152C  EC6B  F026         	call	_fullSpeedAhead	;wreg free
  3456                           
  3457                           ;dc_motor.c: 174:     }
  3458   001530  EF1D  F00B         	goto	l571
  3459   001534                     l4354:
  3460                           
  3461                           ; BSR set to: 0
  3462   001534  0E08               	movlw	8
  3463   001536  1964               	xorwf	move@color& (0+255),w,b
  3464   001538  A4D8               	btfss	status,2,c
  3465   00153A  EFA1  F00A         	goto	u3301
  3466   00153E  EFA3  F00A         	goto	u3300
  3467   001542                     u3301:
  3468   001542  EFE1  F00A         	goto	l4362
  3469   001546                     u3300:
  3470   001546                     
  3471                           ; BSR set to: 0
  3472                           ;dc_motor.c: 177:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3473   001546  C060  F023         	movff	move@mL,reverseShort@mL
  3474   00154A  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3475   00154E  C062  F025         	movff	move@mR,reverseShort@mR
  3476   001552  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3477   001556  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3478   00155A  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3479   00155E  ECF3  F01F         	call	_reverseShort	;wreg free
  3480   001562                     
  3481                           ;dc_motor.c: 178:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3482   001562  0E05               	movlw	5
  3483   001564  6E4A               	movwf	(??_move+1)^0,c
  3484   001566  0E0F               	movlw	15
  3485   001568  6E49               	movwf	??_move^0,c
  3486   00156A  0EF1               	movlw	241
  3487   00156C                     u4257:
  3488   00156C  2EE8               	decfsz	wreg,f,c
  3489   00156E  D7FE               	bra	u4257
  3490   001570  2E49               	decfsz	??_move^0,f,c
  3491   001572  D7FC               	bra	u4257
  3492   001574  2E4A               	decfsz	(??_move+1)^0,f,c
  3493   001576  D7FA               	bra	u4257
  3494   001578  0000               	nop	
  3495   00157A                     
  3496                           ;dc_motor.c: 179:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3497   00157A  C060  F032         	movff	move@mL,returnHome@mL
  3498   00157E  C061  F033         	movff	move@mL+1,returnHome@mL+1
  3499   001582  C062  F034         	movff	move@mR,returnHome@mR
  3500   001586  C063  F035         	movff	move@mR+1,returnHome@mR+1
  3501   00158A  C065  F036         	movff	move@moveSequence,returnHome@moveSequence
  3502   00158E  C066  F037         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3503   001592  C067  F038         	movff	move@straightTime,returnHome@straightTime
  3504   001596  C068  F039         	movff	move@straightTime+1,returnHome@straightTime+1
  3505   00159A  C069  F03A         	movff	move@curMove,returnHome@curMove
  3506   00159E  C06A  F03B         	movff	move@straightSpeed,returnHome@straightSpeed
  3507   0015A2  C06B  F03C         	movff	move@reverseDuration,returnHome@reverseDuration
  3508   0015A6  C06C  F03D         	movff	move@reverseDuration+1,returnHome@reverseDuration+1
  3509   0015AA  C06D  F03E         	movff	move@straightRamp,returnHome@straightRamp
  3510   0015AE  C06E  F03F         	movff	move@turnSpeed,returnHome@turnSpeed
  3511   0015B2  C06F  F040         	movff	move@turnDuration,returnHome@turnDuration
  3512   0015B6  C070  F041         	movff	move@turnRamp,returnHome@turnRamp
  3513   0015BA  EC1E  F00B         	call	_returnHome	;wreg free
  3514                           
  3515                           ;dc_motor.c: 180:     }
  3516   0015BE  EF1D  F00B         	goto	l571
  3517   0015C2                     l4362:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;dc_motor.c: 183:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3521   0015C2  C060  F023         	movff	move@mL,reverseShort@mL
  3522   0015C6  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3523   0015CA  C062  F025         	movff	move@mR,reverseShort@mR
  3524   0015CE  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3525   0015D2  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3526   0015D6  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3527   0015DA  ECF3  F01F         	call	_reverseShort	;wreg free
  3528   0015DE                     
  3529                           ;dc_motor.c: 184:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3530   0015DE  0E05               	movlw	5
  3531   0015E0  6E4A               	movwf	(??_move+1)^0,c
  3532   0015E2  0E0F               	movlw	15
  3533   0015E4  6E49               	movwf	??_move^0,c
  3534   0015E6  0EF1               	movlw	241
  3535   0015E8                     u4267:
  3536   0015E8  2EE8               	decfsz	wreg,f,c
  3537   0015EA  D7FE               	bra	u4267
  3538   0015EC  2E49               	decfsz	??_move^0,f,c
  3539   0015EE  D7FC               	bra	u4267
  3540   0015F0  2E4A               	decfsz	(??_move+1)^0,f,c
  3541   0015F2  D7FA               	bra	u4267
  3542   0015F4  0000               	nop	
  3543   0015F6                     
  3544                           ;dc_motor.c: 185:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3545   0015F6  C060  F032         	movff	move@mL,returnHome@mL
  3546   0015FA  C061  F033         	movff	move@mL+1,returnHome@mL+1
  3547   0015FE  C062  F034         	movff	move@mR,returnHome@mR
  3548   001602  C063  F035         	movff	move@mR+1,returnHome@mR+1
  3549   001606  C065  F036         	movff	move@moveSequence,returnHome@moveSequence
  3550   00160A  C066  F037         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3551   00160E  C067  F038         	movff	move@straightTime,returnHome@straightTime
  3552   001612  C068  F039         	movff	move@straightTime+1,returnHome@straightTime+1
  3553   001616  C069  F03A         	movff	move@curMove,returnHome@curMove
  3554   00161A  C06A  F03B         	movff	move@straightSpeed,returnHome@straightSpeed
  3555   00161E  C06B  F03C         	movff	move@reverseDuration,returnHome@reverseDuration
  3556   001622  C06C  F03D         	movff	move@reverseDuration+1,returnHome@reverseDuration+1
  3557   001626  C06D  F03E         	movff	move@straightRamp,returnHome@straightRamp
  3558   00162A  C06E  F03F         	movff	move@turnSpeed,returnHome@turnSpeed
  3559   00162E  C06F  F040         	movff	move@turnDuration,returnHome@turnDuration
  3560   001632  C070  F041         	movff	move@turnRamp,returnHome@turnRamp
  3561   001636  EC1E  F00B         	call	_returnHome	;wreg free
  3562   00163A                     l571:
  3563   00163A  0012               	return		;funcret
  3564   00163C                     __end_of_move:
  3565                           	callstack 0
  3566                           
  3567 ;; *************** function _reverseShort *****************
  3568 ;; Defined at:
  3569 ;;		line 606 in file "dc_motor.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  3572 ;;		 -> main@motorL(10), 
  3573 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  3574 ;;		 -> main@motorR(10), 
  3575 ;;  straightSpee    1   38[COMRAM] unsigned char 
  3576 ;;  straightRamp    1   39[COMRAM] unsigned char 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  cur_power       2   46[COMRAM] int 
  3579 ;;  i               2   44[COMRAM] int 
  3580 ;;  shortReverse    1   43[COMRAM] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3590 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3594 ;;Total ram usage:       14 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 8
  3597 ;; This function calls:
  3598 ;;		_setMotorPWM
  3599 ;; This function is called by:
  3600 ;;		_move
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text3
  3605   003FE6                     __ptext3:
  3606                           	callstack 0
  3607   003FE6                     _reverseShort:
  3608                           	callstack 21
  3609   003FE6                     
  3610                           ;dc_motor.c: 606: void reverseShort(DC_motor *mL, DC_motor *mR, char straightSpeed, unsi
      +                          gned char straightRamp);dc_motor.c: 607: {;dc_motor.c: 608:     unsigned char shortRever
      +                          seDuration = 30;
  3611   003FE6  0E1E               	movlw	30
  3612   003FE8  6E2C               	movwf	reverseShort@shortReverseDuration^0,c
  3613   003FEA                     
  3614                           ;dc_motor.c: 610:     mL->direction = 0;
  3615   003FEA  EE20 F001          	lfsr	2,1
  3616   003FEE  5023               	movf	reverseShort@mL^0,w,c
  3617   003FF0  26D9               	addwf	fsr2l,f,c
  3618   003FF2  5024               	movf	(reverseShort@mL+1)^0,w,c
  3619   003FF4  22DA               	addwfc	fsr2h,f,c
  3620   003FF6  6ADF               	clrf	indf2,c
  3621   003FF8                     
  3622                           ;dc_motor.c: 611:     mR->direction = 0;
  3623   003FF8  EE20 F001          	lfsr	2,1
  3624   003FFC  5025               	movf	reverseShort@mR^0,w,c
  3625   003FFE  26D9               	addwf	fsr2l,f,c
  3626   004000  5026               	movf	(reverseShort@mR+1)^0,w,c
  3627   004002  22DA               	addwfc	fsr2h,f,c
  3628   004004  6ADF               	clrf	indf2,c
  3629                           
  3630                           ;dc_motor.c: 612:     int i;;dc_motor.c: 613:     int cur_power;;dc_motor.c: 614:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  3631   004006  0E00               	movlw	0
  3632   004008  6E30               	movwf	(reverseShort@cur_power+1)^0,c
  3633   00400A  0E01               	movlw	1
  3634   00400C  6E2F               	movwf	reverseShort@cur_power^0,c
  3635   00400E  EF53  F020         	goto	l3636
  3636   004012                     l3622:
  3637                           
  3638                           ;dc_motor.c: 615:         mL->power = cur_power+mL->compensation;
  3639   004012  EE20 F009          	lfsr	2,9
  3640   004016  5023               	movf	reverseShort@mL^0,w,c
  3641   004018  26D9               	addwf	fsr2l,f,c
  3642   00401A  5024               	movf	(reverseShort@mL+1)^0,w,c
  3643   00401C  22DA               	addwfc	fsr2h,f,c
  3644   00401E  50DF               	movf	indf2,w,c
  3645   004020  242F               	addwf	reverseShort@cur_power^0,w,c
  3646   004022  C023  FFD9         	movff	reverseShort@mL,fsr2l
  3647   004026  C024  FFDA         	movff	reverseShort@mL+1,fsr2h
  3648   00402A  6EDF               	movwf	indf2,c
  3649                           
  3650                           ;dc_motor.c: 616:         mR->power = cur_power+mR->compensation;
  3651   00402C  EE20 F009          	lfsr	2,9
  3652   004030  5025               	movf	reverseShort@mR^0,w,c
  3653   004032  26D9               	addwf	fsr2l,f,c
  3654   004034  5026               	movf	(reverseShort@mR+1)^0,w,c
  3655   004036  22DA               	addwfc	fsr2h,f,c
  3656   004038  50DF               	movf	indf2,w,c
  3657   00403A  242F               	addwf	reverseShort@cur_power^0,w,c
  3658   00403C  C025  FFD9         	movff	reverseShort@mR,fsr2l
  3659   004040  C026  FFDA         	movff	reverseShort@mR+1,fsr2h
  3660   004044  6EDF               	movwf	indf2,c
  3661   004046                     
  3662                           ;dc_motor.c: 617:         setMotorPWM(mL);
  3663   004046  C023  F01D         	movff	reverseShort@mL,setMotorPWM@m
  3664   00404A  C024  F01E         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3665   00404E  ECAB  F024         	call	_setMotorPWM	;wreg free
  3666   004052                     
  3667                           ;dc_motor.c: 618:         setMotorPWM(mR);
  3668   004052  C025  F01D         	movff	reverseShort@mR,setMotorPWM@m
  3669   004056  C026  F01E         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3670   00405A  ECAB  F024         	call	_setMotorPWM	;wreg free
  3671   00405E                     
  3672                           ;dc_motor.c: 619:         for (i=0;i<straightRamp;i++) {
  3673   00405E  0E00               	movlw	0
  3674   004060  6E2E               	movwf	(reverseShort@i+1)^0,c
  3675   004062  0E00               	movlw	0
  3676   004064  6E2D               	movwf	reverseShort@i^0,c
  3677   004066  EF3F  F020         	goto	l742
  3678   00406A                     l3630:
  3679                           
  3680                           ;dc_motor.c: 620:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3681   00406A  0E68               	movlw	104
  3682   00406C  6E29               	movwf	??_reverseShort^0,c
  3683   00406E  0EE4               	movlw	228
  3684   004070                     u4277:
  3685   004070  2EE8               	decfsz	wreg,f,c
  3686   004072  D7FE               	bra	u4277
  3687   004074  2E29               	decfsz	??_reverseShort^0,f,c
  3688   004076  D7FC               	bra	u4277
  3689   004078  D000               	nop2	
  3690   00407A                     
  3691                           ;dc_motor.c: 621:         }
  3692   00407A  4A2D               	infsnz	reverseShort@i^0,f,c
  3693   00407C  2A2E               	incf	(reverseShort@i+1)^0,f,c
  3694   00407E                     l742:
  3695   00407E  5028               	movf	reverseShort@straightRamp^0,w,c
  3696   004080  6E29               	movwf	??_reverseShort^0,c
  3697   004082  6A2A               	clrf	(??_reverseShort+1)^0,c
  3698   004084  5029               	movf	??_reverseShort^0,w,c
  3699   004086  5C2D               	subwf	reverseShort@i^0,w,c
  3700   004088  502E               	movf	(reverseShort@i+1)^0,w,c
  3701   00408A  0A80               	xorlw	128
  3702   00408C  6E2B               	movwf	(??_reverseShort+2)^0,c
  3703   00408E  502A               	movf	(??_reverseShort+1)^0,w,c
  3704   004090  0A80               	xorlw	128
  3705   004092  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3706   004094  A0D8               	btfss	status,0,c
  3707   004096  EF4F  F020         	goto	u2431
  3708   00409A  EF51  F020         	goto	u2430
  3709   00409E                     u2431:
  3710   00409E  EF35  F020         	goto	l3630
  3711   0040A2                     u2430:
  3712   0040A2                     
  3713                           ;dc_motor.c: 622:     }
  3714   0040A2  4A2F               	infsnz	reverseShort@cur_power^0,f,c
  3715   0040A4  2A30               	incf	(reverseShort@cur_power+1)^0,f,c
  3716   0040A6                     l3636:
  3717   0040A6  5027               	movf	reverseShort@straightSpeed^0,w,c
  3718   0040A8  6E29               	movwf	??_reverseShort^0,c
  3719   0040AA  6A2A               	clrf	(??_reverseShort+1)^0,c
  3720   0040AC  502F               	movf	reverseShort@cur_power^0,w,c
  3721   0040AE  5C29               	subwf	??_reverseShort^0,w,c
  3722   0040B0  502A               	movf	(??_reverseShort+1)^0,w,c
  3723   0040B2  0A80               	xorlw	128
  3724   0040B4  6E2B               	movwf	(??_reverseShort+2)^0,c
  3725   0040B6  5030               	movf	(reverseShort@cur_power+1)^0,w,c
  3726   0040B8  0A80               	xorlw	128
  3727   0040BA  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3728   0040BC  B0D8               	btfsc	status,0,c
  3729   0040BE  EF63  F020         	goto	u2441
  3730   0040C2  EF65  F020         	goto	u2440
  3731   0040C6                     u2441:
  3732   0040C6  EF09  F020         	goto	l3622
  3733   0040CA                     u2440:
  3734   0040CA                     
  3735                           ;dc_motor.c: 624:     for (i=0;i<shortReverseDuration;i++) {
  3736   0040CA  0E00               	movlw	0
  3737   0040CC  6E2E               	movwf	(reverseShort@i+1)^0,c
  3738   0040CE  0E00               	movlw	0
  3739   0040D0  6E2D               	movwf	reverseShort@i^0,c
  3740   0040D2  EF75  F020         	goto	l746
  3741   0040D6                     l3640:
  3742                           
  3743                           ;dc_motor.c: 625:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3744   0040D6  0E68               	movlw	104
  3745   0040D8  6E29               	movwf	??_reverseShort^0,c
  3746   0040DA  0EE4               	movlw	228
  3747   0040DC                     u4287:
  3748   0040DC  2EE8               	decfsz	wreg,f,c
  3749   0040DE  D7FE               	bra	u4287
  3750   0040E0  2E29               	decfsz	??_reverseShort^0,f,c
  3751   0040E2  D7FC               	bra	u4287
  3752   0040E4  D000               	nop2	
  3753   0040E6                     
  3754                           ;dc_motor.c: 626:         }
  3755   0040E6  4A2D               	infsnz	reverseShort@i^0,f,c
  3756   0040E8  2A2E               	incf	(reverseShort@i+1)^0,f,c
  3757   0040EA                     l746:
  3758   0040EA  502C               	movf	reverseShort@shortReverseDuration^0,w,c
  3759   0040EC  6E29               	movwf	??_reverseShort^0,c
  3760   0040EE  6A2A               	clrf	(??_reverseShort+1)^0,c
  3761   0040F0  5029               	movf	??_reverseShort^0,w,c
  3762   0040F2  5C2D               	subwf	reverseShort@i^0,w,c
  3763   0040F4  502E               	movf	(reverseShort@i+1)^0,w,c
  3764   0040F6  0A80               	xorlw	128
  3765   0040F8  6E2B               	movwf	(??_reverseShort+2)^0,c
  3766   0040FA  502A               	movf	(??_reverseShort+1)^0,w,c
  3767   0040FC  0A80               	xorlw	128
  3768   0040FE  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3769   004100  A0D8               	btfss	status,0,c
  3770   004102  EF85  F020         	goto	u2451
  3771   004106  EF87  F020         	goto	u2450
  3772   00410A                     u2451:
  3773   00410A  EF6B  F020         	goto	l3640
  3774   00410E                     u2450:
  3775   00410E                     
  3776                           ;dc_motor.c: 628:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  3777   00410E  C027  F02F         	movff	reverseShort@straightSpeed,reverseShort@cur_power
  3778   004112  6A30               	clrf	(reverseShort@cur_power+1)^0,c
  3779   004114                     l3644:
  3780   004114  BE30               	btfsc	(reverseShort@cur_power+1)^0,7,c
  3781   004116  EF91  F020         	goto	u2460
  3782   00411A  EF8F  F020         	goto	u2461
  3783   00411E                     u2461:
  3784   00411E  EF93  F020         	goto	l3648
  3785   004122                     u2460:
  3786   004122  EFE0  F020         	goto	l3664
  3787   004126                     l3648:
  3788                           
  3789                           ;dc_motor.c: 629:         mL->power = cur_power+mL->compensation;
  3790   004126  EE20 F009          	lfsr	2,9
  3791   00412A  5023               	movf	reverseShort@mL^0,w,c
  3792   00412C  26D9               	addwf	fsr2l,f,c
  3793   00412E  5024               	movf	(reverseShort@mL+1)^0,w,c
  3794   004130  22DA               	addwfc	fsr2h,f,c
  3795   004132  50DF               	movf	indf2,w,c
  3796   004134  242F               	addwf	reverseShort@cur_power^0,w,c
  3797   004136  C023  FFD9         	movff	reverseShort@mL,fsr2l
  3798   00413A  C024  FFDA         	movff	reverseShort@mL+1,fsr2h
  3799   00413E  6EDF               	movwf	indf2,c
  3800                           
  3801                           ;dc_motor.c: 630:         mR->power = cur_power+mR->compensation;
  3802   004140  EE20 F009          	lfsr	2,9
  3803   004144  5025               	movf	reverseShort@mR^0,w,c
  3804   004146  26D9               	addwf	fsr2l,f,c
  3805   004148  5026               	movf	(reverseShort@mR+1)^0,w,c
  3806   00414A  22DA               	addwfc	fsr2h,f,c
  3807   00414C  50DF               	movf	indf2,w,c
  3808   00414E  242F               	addwf	reverseShort@cur_power^0,w,c
  3809   004150  C025  FFD9         	movff	reverseShort@mR,fsr2l
  3810   004154  C026  FFDA         	movff	reverseShort@mR+1,fsr2h
  3811   004158  6EDF               	movwf	indf2,c
  3812   00415A                     
  3813                           ;dc_motor.c: 631:         setMotorPWM(mL);
  3814   00415A  C023  F01D         	movff	reverseShort@mL,setMotorPWM@m
  3815   00415E  C024  F01E         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3816   004162  ECAB  F024         	call	_setMotorPWM	;wreg free
  3817   004166                     
  3818                           ;dc_motor.c: 632:         setMotorPWM(mR);
  3819   004166  C025  F01D         	movff	reverseShort@mR,setMotorPWM@m
  3820   00416A  C026  F01E         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3821   00416E  ECAB  F024         	call	_setMotorPWM	;wreg free
  3822   004172                     
  3823                           ;dc_motor.c: 633:         for (i=0;i<straightRamp;i++) {
  3824   004172  0E00               	movlw	0
  3825   004174  6E2E               	movwf	(reverseShort@i+1)^0,c
  3826   004176  0E00               	movlw	0
  3827   004178  6E2D               	movwf	reverseShort@i^0,c
  3828   00417A  EFC9  F020         	goto	l751
  3829   00417E                     l3656:
  3830                           
  3831                           ;dc_motor.c: 634:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3832   00417E  0E68               	movlw	104
  3833   004180  6E29               	movwf	??_reverseShort^0,c
  3834   004182  0EE4               	movlw	228
  3835   004184                     u4297:
  3836   004184  2EE8               	decfsz	wreg,f,c
  3837   004186  D7FE               	bra	u4297
  3838   004188  2E29               	decfsz	??_reverseShort^0,f,c
  3839   00418A  D7FC               	bra	u4297
  3840   00418C  D000               	nop2	
  3841   00418E                     
  3842                           ;dc_motor.c: 635:         }
  3843   00418E  4A2D               	infsnz	reverseShort@i^0,f,c
  3844   004190  2A2E               	incf	(reverseShort@i+1)^0,f,c
  3845   004192                     l751:
  3846   004192  5028               	movf	reverseShort@straightRamp^0,w,c
  3847   004194  6E29               	movwf	??_reverseShort^0,c
  3848   004196  6A2A               	clrf	(??_reverseShort+1)^0,c
  3849   004198  5029               	movf	??_reverseShort^0,w,c
  3850   00419A  5C2D               	subwf	reverseShort@i^0,w,c
  3851   00419C  502E               	movf	(reverseShort@i+1)^0,w,c
  3852   00419E  0A80               	xorlw	128
  3853   0041A0  6E2B               	movwf	(??_reverseShort+2)^0,c
  3854   0041A2  502A               	movf	(??_reverseShort+1)^0,w,c
  3855   0041A4  0A80               	xorlw	128
  3856   0041A6  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3857   0041A8  A0D8               	btfss	status,0,c
  3858   0041AA  EFD9  F020         	goto	u2471
  3859   0041AE  EFDB  F020         	goto	u2470
  3860   0041B2                     u2471:
  3861   0041B2  EFBF  F020         	goto	l3656
  3862   0041B6                     u2470:
  3863   0041B6                     
  3864                           ;dc_motor.c: 636:     }
  3865   0041B6  062F               	decf	reverseShort@cur_power^0,f,c
  3866   0041B8  A0D8               	btfss	status,0,c
  3867   0041BA  0630               	decf	(reverseShort@cur_power+1)^0,f,c
  3868   0041BC  EF8A  F020         	goto	l3644
  3869   0041C0                     l3664:
  3870                           
  3871                           ;dc_motor.c: 637:     mL->power = 0;
  3872   0041C0  C023  FFD9         	movff	reverseShort@mL,fsr2l
  3873   0041C4  C024  FFDA         	movff	reverseShort@mL+1,fsr2h
  3874   0041C8  6ADF               	clrf	indf2,c
  3875                           
  3876                           ;dc_motor.c: 638:     mR->power = 0;
  3877   0041CA  C025  FFD9         	movff	reverseShort@mR,fsr2l
  3878   0041CE  C026  FFDA         	movff	reverseShort@mR+1,fsr2h
  3879   0041D2  6ADF               	clrf	indf2,c
  3880   0041D4  0012               	return		;funcret
  3881   0041D6                     __end_of_reverseShort:
  3882                           	callstack 0
  3883                           
  3884 ;; *************** function _returnHome *****************
  3885 ;; Defined at:
  3886 ;;		line 190 in file "dc_motor.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  mL              2   49[COMRAM] PTR struct DC_motor
  3889 ;;		 -> main@motorL(10), 
  3890 ;;  mR              2   51[COMRAM] PTR struct DC_motor
  3891 ;;		 -> main@motorR(10), 
  3892 ;;  moveSequence    2   53[COMRAM] PTR unsigned char 
  3893 ;;		 -> main@moveSequence(40), 
  3894 ;;  straightTime    2   55[COMRAM] PTR unsigned int 
  3895 ;;		 -> main@straightTime(82), 
  3896 ;;  curMove         1   57[COMRAM] unsigned char 
  3897 ;;  straightSpee    1   58[COMRAM] unsigned char 
  3898 ;;  reverseDurat    2   59[COMRAM] unsigned int 
  3899 ;;  straightRamp    1   61[COMRAM] unsigned char 
  3900 ;;  turnSpeed       1   62[COMRAM] unsigned char 
  3901 ;;  turnDuration    1   63[COMRAM] unsigned char 
  3902 ;;  turnRamp        1   64[COMRAM] unsigned char 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  i               1   71[COMRAM] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3914 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;Total ram usage:       23 bytes
  3919 ;; Hardware stack levels used: 1
  3920 ;; Hardware stack levels required when called: 9
  3921 ;; This function calls:
  3922 ;;		_fullSpeedAhead
  3923 ;;		_get16bitTMR0val
  3924 ;;		_resetTimer
  3925 ;;		_reverseOneSquare
  3926 ;;		_reverseWallAdjust
  3927 ;;		_stop
  3928 ;;		_turnLeft
  3929 ;;		_turnRight
  3930 ;;		_white_Light
  3931 ;; This function is called by:
  3932 ;;		_move
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text4
  3937   00163C                     __ptext4:
  3938                           	callstack 0
  3939   00163C                     _returnHome:
  3940                           	callstack 20
  3941   00163C                     
  3942                           ;dc_motor.c: 190: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned int reverseDur
      +                          ation, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned 
      +                          char turnRamp);dc_motor.c: 191: {;dc_motor.c: 192:     white_Light(0);
  3943   00163C  0E00               	movlw	0
  3944   00163E  EC63  F02A         	call	_white_Light
  3945   001642                     
  3946                           ;dc_motor.c: 193:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3947   001642  C032  F023         	movff	returnHome@mL,turnLeft@mL
  3948   001646  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  3949   00164A  C034  F025         	movff	returnHome@mR,turnLeft@mR
  3950   00164E  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  3951   001652  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3952   001656  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3953   00165A  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3954   00165E  ECBE  F023         	call	_turnLeft	;wreg free
  3955   001662                     
  3956                           ;dc_motor.c: 194:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3957   001662  0E05               	movlw	5
  3958   001664  6E43               	movwf	(??_returnHome+1)^0,c
  3959   001666  0E0F               	movlw	15
  3960   001668  6E42               	movwf	??_returnHome^0,c
  3961   00166A  0EF1               	movlw	241
  3962   00166C                     u4307:
  3963   00166C  2EE8               	decfsz	wreg,f,c
  3964   00166E  D7FE               	bra	u4307
  3965   001670  2E42               	decfsz	??_returnHome^0,f,c
  3966   001672  D7FC               	bra	u4307
  3967   001674  2E43               	decfsz	(??_returnHome+1)^0,f,c
  3968   001676  D7FA               	bra	u4307
  3969   001678  0000               	nop	
  3970   00167A                     
  3971                           ;dc_motor.c: 195:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3972   00167A  C032  F023         	movff	returnHome@mL,turnLeft@mL
  3973   00167E  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  3974   001682  C034  F025         	movff	returnHome@mR,turnLeft@mR
  3975   001686  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  3976   00168A  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3977   00168E  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3978   001692  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3979   001696  ECBE  F023         	call	_turnLeft	;wreg free
  3980   00169A                     
  3981                           ;dc_motor.c: 196:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3982   00169A  0E05               	movlw	5
  3983   00169C  6E43               	movwf	(??_returnHome+1)^0,c
  3984   00169E  0E0F               	movlw	15
  3985   0016A0  6E42               	movwf	??_returnHome^0,c
  3986   0016A2  0EF1               	movlw	241
  3987   0016A4                     u4317:
  3988   0016A4  2EE8               	decfsz	wreg,f,c
  3989   0016A6  D7FE               	bra	u4317
  3990   0016A8  2E42               	decfsz	??_returnHome^0,f,c
  3991   0016AA  D7FC               	bra	u4317
  3992   0016AC  2E43               	decfsz	(??_returnHome+1)^0,f,c
  3993   0016AE  D7FA               	bra	u4317
  3994   0016B0  0000               	nop	
  3995   0016B2                     
  3996                           ;dc_motor.c: 197:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3997   0016B2  C032  F023         	movff	returnHome@mL,turnLeft@mL
  3998   0016B6  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  3999   0016BA  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4000   0016BE  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4001   0016C2  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4002   0016C6  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4003   0016CA  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4004   0016CE  ECBE  F023         	call	_turnLeft	;wreg free
  4005   0016D2                     
  4006                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4007   0016D2  0E05               	movlw	5
  4008   0016D4  6E43               	movwf	(??_returnHome+1)^0,c
  4009   0016D6  0E0F               	movlw	15
  4010   0016D8  6E42               	movwf	??_returnHome^0,c
  4011   0016DA  0EF1               	movlw	241
  4012   0016DC                     u4327:
  4013   0016DC  2EE8               	decfsz	wreg,f,c
  4014   0016DE  D7FE               	bra	u4327
  4015   0016E0  2E42               	decfsz	??_returnHome^0,f,c
  4016   0016E2  D7FC               	bra	u4327
  4017   0016E4  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4018   0016E6  D7FA               	bra	u4327
  4019   0016E8  0000               	nop	
  4020   0016EA                     
  4021                           ;dc_motor.c: 199:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4022   0016EA  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4023   0016EE  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4024   0016F2  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4025   0016F6  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4026   0016FA  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4027   0016FE  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4028   001702  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4029   001706  ECBE  F023         	call	_turnLeft	;wreg free
  4030   00170A                     
  4031                           ;dc_motor.c: 200:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4032   00170A  0E05               	movlw	5
  4033   00170C  6E43               	movwf	(??_returnHome+1)^0,c
  4034   00170E  0E0F               	movlw	15
  4035   001710  6E42               	movwf	??_returnHome^0,c
  4036   001712  0EF1               	movlw	241
  4037   001714                     u4337:
  4038   001714  2EE8               	decfsz	wreg,f,c
  4039   001716  D7FE               	bra	u4337
  4040   001718  2E42               	decfsz	??_returnHome^0,f,c
  4041   00171A  D7FC               	bra	u4337
  4042   00171C  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4043   00171E  D7FA               	bra	u4337
  4044   001720  0000               	nop	
  4045   001722                     
  4046                           ;dc_motor.c: 201:     reverseWallAdjust(mL, mR, straightSpeed, straightRamp);
  4047   001722  C032  F023         	movff	returnHome@mL,reverseWallAdjust@mL
  4048   001726  C033  F024         	movff	returnHome@mL+1,reverseWallAdjust@mL+1
  4049   00172A  C034  F025         	movff	returnHome@mR,reverseWallAdjust@mR
  4050   00172E  C035  F026         	movff	returnHome@mR+1,reverseWallAdjust@mR+1
  4051   001732  C03B  F027         	movff	returnHome@straightSpeed,reverseWallAdjust@straightSpeed
  4052   001736  C03E  F028         	movff	returnHome@straightRamp,reverseWallAdjust@straightRamp
  4053   00173A  ECF9  F01E         	call	_reverseWallAdjust	;wreg free
  4054   00173E                     
  4055                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4056   00173E  0E05               	movlw	5
  4057   001740  6E43               	movwf	(??_returnHome+1)^0,c
  4058   001742  0E0F               	movlw	15
  4059   001744  6E42               	movwf	??_returnHome^0,c
  4060   001746  0EF1               	movlw	241
  4061   001748                     u4347:
  4062   001748  2EE8               	decfsz	wreg,f,c
  4063   00174A  D7FE               	bra	u4347
  4064   00174C  2E42               	decfsz	??_returnHome^0,f,c
  4065   00174E  D7FC               	bra	u4347
  4066   001750  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4067   001752  D7FA               	bra	u4347
  4068   001754  0000               	nop	
  4069   001756                     
  4070                           ;dc_motor.c: 203:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4071   001756  C032  F023         	movff	returnHome@mL,fullSpeedAhead@mL
  4072   00175A  C033  F024         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4073   00175E  C034  F025         	movff	returnHome@mR,fullSpeedAhead@mR
  4074   001762  C035  F026         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4075   001766  C03B  F027         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4076   00176A  C03E  F028         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4077   00176E  EC6B  F026         	call	_fullSpeedAhead	;wreg free
  4078   001772                     
  4079                           ;dc_motor.c: 204:     resetTimer();
  4080   001772  ECF3  F02A         	call	_resetTimer	;wreg free
  4081   001776                     l3692:
  4082   001776  503A               	movf	returnHome@curMove^0,w,c
  4083   001778  0D02               	mullw	2
  4084   00177A  CFF3 F042          	movff	prodl,??_returnHome
  4085   00177E  CFF4 F043          	movff	prodh,??_returnHome+1
  4086   001782  5042               	movf	??_returnHome^0,w,c
  4087   001784  2438               	addwf	returnHome@straightTime^0,w,c
  4088   001786  6ED9               	movwf	fsr2l,c
  4089   001788  5043               	movf	(??_returnHome+1)^0,w,c
  4090   00178A  2039               	addwfc	(returnHome@straightTime+1)^0,w,c
  4091   00178C  6EDA               	movwf	fsr2h,c
  4092   00178E  CFDE F044          	movff	postinc2,??_returnHome+2
  4093   001792  CFDD F045          	movff	postdec2,??_returnHome+3
  4094   001796  0EAC               	movlw	172
  4095   001798  2444               	addwf	(??_returnHome+2)^0,w,c
  4096   00179A  6E46               	movwf	(??_returnHome+4)^0,c
  4097   00179C  0E0D               	movlw	13
  4098   00179E  2045               	addwfc	(??_returnHome+3)^0,w,c
  4099   0017A0  6E47               	movwf	(??_returnHome+5)^0,c
  4100   0017A2  EC14  F02A         	call	_get16bitTMR0val	;wreg free
  4101   0017A6  5046               	movf	(??_returnHome+4)^0,w,c
  4102   0017A8  5C10               	subwf	?_get16bitTMR0val^0,w,c
  4103   0017AA  5047               	movf	(??_returnHome+5)^0,w,c
  4104   0017AC  5811               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4105   0017AE  A0D8               	btfss	status,0,c
  4106   0017B0  EFDC  F00B         	goto	u2481
  4107   0017B4  EFDE  F00B         	goto	u2480
  4108   0017B8                     u2481:
  4109   0017B8  EFBB  F00B         	goto	l3692
  4110   0017BC                     u2480:
  4111   0017BC                     
  4112                           ;dc_motor.c: 206:     stop(mL, mR, straightRamp);
  4113   0017BC  C032  F023         	movff	returnHome@mL,stop@mL
  4114   0017C0  C033  F024         	movff	returnHome@mL+1,stop@mL+1
  4115   0017C4  C034  F025         	movff	returnHome@mR,stop@mR
  4116   0017C8  C035  F026         	movff	returnHome@mR+1,stop@mR+1
  4117   0017CC  C03E  F027         	movff	returnHome@straightRamp,stop@straightRamp
  4118   0017D0  ECE7  F025         	call	_stop	;wreg free
  4119   0017D4                     
  4120                           ;dc_motor.c: 208:     char i=curMove;
  4121   0017D4  C03A  F048         	movff	returnHome@curMove,returnHome@i
  4122                           
  4123                           ;dc_motor.c: 209:     while (i>0) {
  4124   0017D8  EFC2  F00E         	goto	l3788
  4125   0017DC                     l3698:
  4126                           
  4127                           ;dc_motor.c: 210:         i--;
  4128   0017DC  0648               	decf	returnHome@i^0,f,c
  4129   0017DE                     
  4130                           ;dc_motor.c: 212:         if (moveSequence[i] == 1) {
  4131   0017DE  5048               	movf	returnHome@i^0,w,c
  4132   0017E0  2436               	addwf	returnHome@moveSequence^0,w,c
  4133   0017E2  6ED9               	movwf	fsr2l,c
  4134   0017E4  0E00               	movlw	0
  4135   0017E6  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4136   0017E8  6EDA               	movwf	fsr2h,c
  4137   0017EA  04DE               	decf	postinc2,w,c
  4138   0017EC  A4D8               	btfss	status,2,c
  4139   0017EE  EFFB  F00B         	goto	u2491
  4140   0017F2  EFFD  F00B         	goto	u2490
  4141   0017F6                     u2491:
  4142   0017F6  EF37  F00C         	goto	l3708
  4143   0017FA                     u2490:
  4144   0017FA                     
  4145                           ;dc_motor.c: 213:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4146   0017FA  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4147   0017FE  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4148   001802  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4149   001806  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4150   00180A  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4151   00180E  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4152   001812  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4153   001816  ECBE  F023         	call	_turnLeft	;wreg free
  4154   00181A                     
  4155                           ;dc_motor.c: 214:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4156   00181A  0E05               	movlw	5
  4157   00181C  6E43               	movwf	(??_returnHome+1)^0,c
  4158   00181E  0E0F               	movlw	15
  4159   001820  6E42               	movwf	??_returnHome^0,c
  4160   001822  0EF1               	movlw	241
  4161   001824                     u4357:
  4162   001824  2EE8               	decfsz	wreg,f,c
  4163   001826  D7FE               	bra	u4357
  4164   001828  2E42               	decfsz	??_returnHome^0,f,c
  4165   00182A  D7FC               	bra	u4357
  4166   00182C  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4167   00182E  D7FA               	bra	u4357
  4168   001830  0000               	nop	
  4169   001832                     
  4170                           ;dc_motor.c: 215:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4171   001832  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4172   001836  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4173   00183A  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4174   00183E  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4175   001842  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4176   001846  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4177   00184A  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4178   00184E  ECBE  F023         	call	_turnLeft	;wreg free
  4179                           
  4180                           ;dc_motor.c: 216:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4181   001852  0E05               	movlw	5
  4182   001854  6E43               	movwf	(??_returnHome+1)^0,c
  4183   001856  0E0F               	movlw	15
  4184   001858  6E42               	movwf	??_returnHome^0,c
  4185   00185A  0EF1               	movlw	241
  4186   00185C                     u4367:
  4187   00185C  2EE8               	decfsz	wreg,f,c
  4188   00185E  D7FE               	bra	u4367
  4189   001860  2E42               	decfsz	??_returnHome^0,f,c
  4190   001862  D7FC               	bra	u4367
  4191   001864  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4192   001866  D7FA               	bra	u4367
  4193   001868  0000               	nop	
  4194                           
  4195                           ;dc_motor.c: 217:         }
  4196   00186A  EF69  F00E         	goto	l580
  4197   00186E                     l3708:
  4198   00186E  5048               	movf	returnHome@i^0,w,c
  4199   001870  2436               	addwf	returnHome@moveSequence^0,w,c
  4200   001872  6ED9               	movwf	fsr2l,c
  4201   001874  0E00               	movlw	0
  4202   001876  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4203   001878  6EDA               	movwf	fsr2h,c
  4204   00187A  0E02               	movlw	2
  4205   00187C  18DE               	xorwf	postinc2,w,c
  4206   00187E  A4D8               	btfss	status,2,c
  4207   001880  EF44  F00C         	goto	u2501
  4208   001884  EF46  F00C         	goto	u2500
  4209   001888                     u2501:
  4210   001888  EF80  F00C         	goto	l3716
  4211   00188C                     u2500:
  4212   00188C                     
  4213                           ;dc_motor.c: 220:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4214   00188C  C032  F023         	movff	returnHome@mL,turnRight@mL
  4215   001890  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4216   001894  C034  F025         	movff	returnHome@mR,turnRight@mR
  4217   001898  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4218   00189C  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4219   0018A0  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4220   0018A4  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4221   0018A8  ECD1  F022         	call	_turnRight	;wreg free
  4222   0018AC                     
  4223                           ;dc_motor.c: 221:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4224   0018AC  0E05               	movlw	5
  4225   0018AE  6E43               	movwf	(??_returnHome+1)^0,c
  4226   0018B0  0E0F               	movlw	15
  4227   0018B2  6E42               	movwf	??_returnHome^0,c
  4228   0018B4  0EF1               	movlw	241
  4229   0018B6                     u4377:
  4230   0018B6  2EE8               	decfsz	wreg,f,c
  4231   0018B8  D7FE               	bra	u4377
  4232   0018BA  2E42               	decfsz	??_returnHome^0,f,c
  4233   0018BC  D7FC               	bra	u4377
  4234   0018BE  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4235   0018C0  D7FA               	bra	u4377
  4236   0018C2  0000               	nop	
  4237   0018C4                     
  4238                           ;dc_motor.c: 222:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4239   0018C4  C032  F023         	movff	returnHome@mL,turnRight@mL
  4240   0018C8  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4241   0018CC  C034  F025         	movff	returnHome@mR,turnRight@mR
  4242   0018D0  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4243   0018D4  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4244   0018D8  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4245   0018DC  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4246   0018E0  ECD1  F022         	call	_turnRight	;wreg free
  4247                           
  4248                           ;dc_motor.c: 223:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4249   0018E4  0E05               	movlw	5
  4250   0018E6  6E43               	movwf	(??_returnHome+1)^0,c
  4251   0018E8  0E0F               	movlw	15
  4252   0018EA  6E42               	movwf	??_returnHome^0,c
  4253   0018EC  0EF1               	movlw	241
  4254   0018EE                     u4387:
  4255   0018EE  2EE8               	decfsz	wreg,f,c
  4256   0018F0  D7FE               	bra	u4387
  4257   0018F2  2E42               	decfsz	??_returnHome^0,f,c
  4258   0018F4  D7FC               	bra	u4387
  4259   0018F6  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4260   0018F8  D7FA               	bra	u4387
  4261   0018FA  0000               	nop	
  4262                           
  4263                           ;dc_motor.c: 224:         }
  4264   0018FC  EF69  F00E         	goto	l580
  4265   001900                     l3716:
  4266   001900  5048               	movf	returnHome@i^0,w,c
  4267   001902  2436               	addwf	returnHome@moveSequence^0,w,c
  4268   001904  6ED9               	movwf	fsr2l,c
  4269   001906  0E00               	movlw	0
  4270   001908  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4271   00190A  6EDA               	movwf	fsr2h,c
  4272   00190C  0E03               	movlw	3
  4273   00190E  18DE               	xorwf	postinc2,w,c
  4274   001910  A4D8               	btfss	status,2,c
  4275   001912  EF8D  F00C         	goto	u2511
  4276   001916  EF8F  F00C         	goto	u2510
  4277   00191A                     u2511:
  4278   00191A  EF01  F00D         	goto	l3730
  4279   00191E                     u2510:
  4280   00191E                     
  4281                           ;dc_motor.c: 227:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4282   00191E  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4283   001922  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4284   001926  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4285   00192A  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4286   00192E  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4287   001932  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4288   001936  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4289   00193A  ECBE  F023         	call	_turnLeft	;wreg free
  4290   00193E                     
  4291                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4292   00193E  0E05               	movlw	5
  4293   001940  6E43               	movwf	(??_returnHome+1)^0,c
  4294   001942  0E0F               	movlw	15
  4295   001944  6E42               	movwf	??_returnHome^0,c
  4296   001946  0EF1               	movlw	241
  4297   001948                     u4397:
  4298   001948  2EE8               	decfsz	wreg,f,c
  4299   00194A  D7FE               	bra	u4397
  4300   00194C  2E42               	decfsz	??_returnHome^0,f,c
  4301   00194E  D7FC               	bra	u4397
  4302   001950  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4303   001952  D7FA               	bra	u4397
  4304   001954  0000               	nop	
  4305   001956                     
  4306                           ;dc_motor.c: 229:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4307   001956  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4308   00195A  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4309   00195E  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4310   001962  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4311   001966  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4312   00196A  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4313   00196E  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4314   001972  ECBE  F023         	call	_turnLeft	;wreg free
  4315                           
  4316                           ;dc_motor.c: 230:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4317   001976  0E05               	movlw	5
  4318   001978  6E43               	movwf	(??_returnHome+1)^0,c
  4319   00197A  0E0F               	movlw	15
  4320   00197C  6E42               	movwf	??_returnHome^0,c
  4321   00197E  0EF1               	movlw	241
  4322   001980                     u4407:
  4323   001980  2EE8               	decfsz	wreg,f,c
  4324   001982  D7FE               	bra	u4407
  4325   001984  2E42               	decfsz	??_returnHome^0,f,c
  4326   001986  D7FC               	bra	u4407
  4327   001988  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4328   00198A  D7FA               	bra	u4407
  4329   00198C  0000               	nop	
  4330   00198E                     
  4331                           ;dc_motor.c: 231:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4332   00198E  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4333   001992  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4334   001996  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4335   00199A  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4336   00199E  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4337   0019A2  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4338   0019A6  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4339   0019AA  ECBE  F023         	call	_turnLeft	;wreg free
  4340   0019AE                     
  4341                           ;dc_motor.c: 232:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4342   0019AE  0E05               	movlw	5
  4343   0019B0  6E43               	movwf	(??_returnHome+1)^0,c
  4344   0019B2  0E0F               	movlw	15
  4345   0019B4  6E42               	movwf	??_returnHome^0,c
  4346   0019B6  0EF1               	movlw	241
  4347   0019B8                     u4417:
  4348   0019B8  2EE8               	decfsz	wreg,f,c
  4349   0019BA  D7FE               	bra	u4417
  4350   0019BC  2E42               	decfsz	??_returnHome^0,f,c
  4351   0019BE  D7FC               	bra	u4417
  4352   0019C0  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4353   0019C2  D7FA               	bra	u4417
  4354   0019C4  0000               	nop	
  4355                           
  4356                           ;dc_motor.c: 233:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4357   0019C6  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4358   0019CA  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4359   0019CE  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4360   0019D2  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4361   0019D6  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4362   0019DA  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4363   0019DE  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4364   0019E2  ECBE  F023         	call	_turnLeft	;wreg free
  4365   0019E6                     l3728:
  4366                           
  4367                           ;dc_motor.c: 234:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4368   0019E6  0E05               	movlw	5
  4369   0019E8  6E43               	movwf	(??_returnHome+1)^0,c
  4370   0019EA  0E0F               	movlw	15
  4371   0019EC  6E42               	movwf	??_returnHome^0,c
  4372   0019EE  0EF1               	movlw	241
  4373   0019F0                     u4427:
  4374   0019F0  2EE8               	decfsz	wreg,f,c
  4375   0019F2  D7FE               	bra	u4427
  4376   0019F4  2E42               	decfsz	??_returnHome^0,f,c
  4377   0019F6  D7FC               	bra	u4427
  4378   0019F8  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4379   0019FA  D7FA               	bra	u4427
  4380   0019FC  0000               	nop	
  4381                           
  4382                           ;dc_motor.c: 235:         }
  4383   0019FE  EF69  F00E         	goto	l580
  4384   001A02                     l3730:
  4385   001A02  5048               	movf	returnHome@i^0,w,c
  4386   001A04  2436               	addwf	returnHome@moveSequence^0,w,c
  4387   001A06  6ED9               	movwf	fsr2l,c
  4388   001A08  0E00               	movlw	0
  4389   001A0A  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4390   001A0C  6EDA               	movwf	fsr2h,c
  4391   001A0E  0E04               	movlw	4
  4392   001A10  18DE               	xorwf	postinc2,w,c
  4393   001A12  A4D8               	btfss	status,2,c
  4394   001A14  EF0E  F00D         	goto	u2521
  4395   001A18  EF10  F00D         	goto	u2520
  4396   001A1C                     u2521:
  4397   001A1C  EF5C  F00D         	goto	l3742
  4398   001A20                     u2520:
  4399   001A20                     
  4400                           ;dc_motor.c: 238:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4401   001A20  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4402   001A24  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4403   001A28  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4404   001A2C  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4405   001A30  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4406   001A34  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4407   001A38  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4408   001A3C  ECBE  F023         	call	_turnLeft	;wreg free
  4409   001A40                     
  4410                           ;dc_motor.c: 239:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4411   001A40  0E05               	movlw	5
  4412   001A42  6E43               	movwf	(??_returnHome+1)^0,c
  4413   001A44  0E0F               	movlw	15
  4414   001A46  6E42               	movwf	??_returnHome^0,c
  4415   001A48  0EF1               	movlw	241
  4416   001A4A                     u4437:
  4417   001A4A  2EE8               	decfsz	wreg,f,c
  4418   001A4C  D7FE               	bra	u4437
  4419   001A4E  2E42               	decfsz	??_returnHome^0,f,c
  4420   001A50  D7FC               	bra	u4437
  4421   001A52  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4422   001A54  D7FA               	bra	u4437
  4423   001A56  0000               	nop	
  4424   001A58                     
  4425                           ;dc_motor.c: 240:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4426   001A58  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4427   001A5C  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4428   001A60  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4429   001A64  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4430   001A68  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4431   001A6C  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4432   001A70  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4433   001A74  ECBE  F023         	call	_turnLeft	;wreg free
  4434                           
  4435                           ;dc_motor.c: 241:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4436   001A78  0E05               	movlw	5
  4437   001A7A  6E43               	movwf	(??_returnHome+1)^0,c
  4438   001A7C  0E0F               	movlw	15
  4439   001A7E  6E42               	movwf	??_returnHome^0,c
  4440   001A80  0EF1               	movlw	241
  4441   001A82                     u4447:
  4442   001A82  2EE8               	decfsz	wreg,f,c
  4443   001A84  D7FE               	bra	u4447
  4444   001A86  2E42               	decfsz	??_returnHome^0,f,c
  4445   001A88  D7FC               	bra	u4447
  4446   001A8A  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4447   001A8C  D7FA               	bra	u4447
  4448   001A8E  0000               	nop	
  4449   001A90                     
  4450                           ;dc_motor.c: 242:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4451   001A90  C032  F023         	movff	returnHome@mL,reverseOneSquare@mL
  4452   001A94  C033  F024         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4453   001A98  C034  F025         	movff	returnHome@mR,reverseOneSquare@mR
  4454   001A9C  C035  F026         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4455   001AA0  C03B  F027         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4456   001AA4  C03C  F028         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4457   001AA8  C03D  F029         	movff	returnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  4458   001AAC  C03E  F02A         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4459   001AB0  ECE2  F021         	call	_reverseOneSquare	;wreg free
  4460   001AB4  EFF3  F00C         	goto	l3728
  4461   001AB8                     l3742:
  4462   001AB8  5048               	movf	returnHome@i^0,w,c
  4463   001ABA  2436               	addwf	returnHome@moveSequence^0,w,c
  4464   001ABC  6ED9               	movwf	fsr2l,c
  4465   001ABE  0E00               	movlw	0
  4466   001AC0  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4467   001AC2  6EDA               	movwf	fsr2h,c
  4468   001AC4  0E05               	movlw	5
  4469   001AC6  18DE               	xorwf	postinc2,w,c
  4470   001AC8  A4D8               	btfss	status,2,c
  4471   001ACA  EF69  F00D         	goto	u2531
  4472   001ACE  EF6B  F00D         	goto	u2530
  4473   001AD2                     u2531:
  4474   001AD2  EFB7  F00D         	goto	l3754
  4475   001AD6                     u2530:
  4476   001AD6                     
  4477                           ;dc_motor.c: 247:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4478   001AD6  C032  F023         	movff	returnHome@mL,turnRight@mL
  4479   001ADA  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4480   001ADE  C034  F025         	movff	returnHome@mR,turnRight@mR
  4481   001AE2  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4482   001AE6  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4483   001AEA  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4484   001AEE  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4485   001AF2  ECD1  F022         	call	_turnRight	;wreg free
  4486   001AF6                     
  4487                           ;dc_motor.c: 248:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4488   001AF6  0E05               	movlw	5
  4489   001AF8  6E43               	movwf	(??_returnHome+1)^0,c
  4490   001AFA  0E0F               	movlw	15
  4491   001AFC  6E42               	movwf	??_returnHome^0,c
  4492   001AFE  0EF1               	movlw	241
  4493   001B00                     u4457:
  4494   001B00  2EE8               	decfsz	wreg,f,c
  4495   001B02  D7FE               	bra	u4457
  4496   001B04  2E42               	decfsz	??_returnHome^0,f,c
  4497   001B06  D7FC               	bra	u4457
  4498   001B08  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4499   001B0A  D7FA               	bra	u4457
  4500   001B0C  0000               	nop	
  4501   001B0E                     
  4502                           ;dc_motor.c: 249:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4503   001B0E  C032  F023         	movff	returnHome@mL,turnRight@mL
  4504   001B12  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4505   001B16  C034  F025         	movff	returnHome@mR,turnRight@mR
  4506   001B1A  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4507   001B1E  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4508   001B22  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4509   001B26  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4510   001B2A  ECD1  F022         	call	_turnRight	;wreg free
  4511                           
  4512                           ;dc_motor.c: 250:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4513   001B2E  0E05               	movlw	5
  4514   001B30  6E43               	movwf	(??_returnHome+1)^0,c
  4515   001B32  0E0F               	movlw	15
  4516   001B34  6E42               	movwf	??_returnHome^0,c
  4517   001B36  0EF1               	movlw	241
  4518   001B38                     u4467:
  4519   001B38  2EE8               	decfsz	wreg,f,c
  4520   001B3A  D7FE               	bra	u4467
  4521   001B3C  2E42               	decfsz	??_returnHome^0,f,c
  4522   001B3E  D7FC               	bra	u4467
  4523   001B40  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4524   001B42  D7FA               	bra	u4467
  4525   001B44  0000               	nop	
  4526   001B46                     
  4527                           ;dc_motor.c: 251:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4528   001B46  C032  F023         	movff	returnHome@mL,reverseOneSquare@mL
  4529   001B4A  C033  F024         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4530   001B4E  C034  F025         	movff	returnHome@mR,reverseOneSquare@mR
  4531   001B52  C035  F026         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4532   001B56  C03B  F027         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4533   001B5A  C03C  F028         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4534   001B5E  C03D  F029         	movff	returnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  4535   001B62  C03E  F02A         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4536   001B66  ECE2  F021         	call	_reverseOneSquare	;wreg free
  4537   001B6A  EFF3  F00C         	goto	l3728
  4538   001B6E                     l3754:
  4539   001B6E  5048               	movf	returnHome@i^0,w,c
  4540   001B70  2436               	addwf	returnHome@moveSequence^0,w,c
  4541   001B72  6ED9               	movwf	fsr2l,c
  4542   001B74  0E00               	movlw	0
  4543   001B76  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4544   001B78  6EDA               	movwf	fsr2h,c
  4545   001B7A  0E06               	movlw	6
  4546   001B7C  18DE               	xorwf	postinc2,w,c
  4547   001B7E  A4D8               	btfss	status,2,c
  4548   001B80  EFC4  F00D         	goto	u2541
  4549   001B84  EFC6  F00D         	goto	u2540
  4550   001B88                     u2541:
  4551   001B88  EF10  F00E         	goto	l3766
  4552   001B8C                     u2540:
  4553   001B8C                     
  4554                           ;dc_motor.c: 256:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4555   001B8C  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4556   001B90  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4557   001B94  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4558   001B98  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4559   001B9C  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4560   001BA0  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4561   001BA4  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4562   001BA8  ECBE  F023         	call	_turnLeft	;wreg free
  4563   001BAC                     
  4564                           ;dc_motor.c: 257:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4565   001BAC  0E05               	movlw	5
  4566   001BAE  6E43               	movwf	(??_returnHome+1)^0,c
  4567   001BB0  0E0F               	movlw	15
  4568   001BB2  6E42               	movwf	??_returnHome^0,c
  4569   001BB4  0EF1               	movlw	241
  4570   001BB6                     u4477:
  4571   001BB6  2EE8               	decfsz	wreg,f,c
  4572   001BB8  D7FE               	bra	u4477
  4573   001BBA  2E42               	decfsz	??_returnHome^0,f,c
  4574   001BBC  D7FC               	bra	u4477
  4575   001BBE  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4576   001BC0  D7FA               	bra	u4477
  4577   001BC2  0000               	nop	
  4578   001BC4                     
  4579                           ;dc_motor.c: 258:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4580   001BC4  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4581   001BC8  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4582   001BCC  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4583   001BD0  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4584   001BD4  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4585   001BD8  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4586   001BDC  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4587   001BE0  ECBE  F023         	call	_turnLeft	;wreg free
  4588                           
  4589                           ;dc_motor.c: 259:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4590   001BE4  0E05               	movlw	5
  4591   001BE6  6E43               	movwf	(??_returnHome+1)^0,c
  4592   001BE8  0E0F               	movlw	15
  4593   001BEA  6E42               	movwf	??_returnHome^0,c
  4594   001BEC  0EF1               	movlw	241
  4595   001BEE                     u4487:
  4596   001BEE  2EE8               	decfsz	wreg,f,c
  4597   001BF0  D7FE               	bra	u4487
  4598   001BF2  2E42               	decfsz	??_returnHome^0,f,c
  4599   001BF4  D7FC               	bra	u4487
  4600   001BF6  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4601   001BF8  D7FA               	bra	u4487
  4602   001BFA  0000               	nop	
  4603   001BFC                     
  4604                           ;dc_motor.c: 260:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4605   001BFC  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4606   001C00  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4607   001C04  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4608   001C08  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4609   001C0C  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4610   001C10  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4611   001C14  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4612   001C18  ECBE  F023         	call	_turnLeft	;wreg free
  4613   001C1C  EFF3  F00C         	goto	l3728
  4614   001C20                     l3766:
  4615   001C20  5048               	movf	returnHome@i^0,w,c
  4616   001C22  2436               	addwf	returnHome@moveSequence^0,w,c
  4617   001C24  6ED9               	movwf	fsr2l,c
  4618   001C26  0E00               	movlw	0
  4619   001C28  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4620   001C2A  6EDA               	movwf	fsr2h,c
  4621   001C2C  0E07               	movlw	7
  4622   001C2E  18DE               	xorwf	postinc2,w,c
  4623   001C30  A4D8               	btfss	status,2,c
  4624   001C32  EF1D  F00E         	goto	u2551
  4625   001C36  EF1F  F00E         	goto	u2550
  4626   001C3A                     u2551:
  4627   001C3A  EF69  F00E         	goto	l586
  4628   001C3E                     u2550:
  4629   001C3E                     
  4630                           ;dc_motor.c: 265:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4631   001C3E  C032  F023         	movff	returnHome@mL,turnRight@mL
  4632   001C42  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4633   001C46  C034  F025         	movff	returnHome@mR,turnRight@mR
  4634   001C4A  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4635   001C4E  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4636   001C52  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4637   001C56  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4638   001C5A  ECD1  F022         	call	_turnRight	;wreg free
  4639   001C5E                     
  4640                           ;dc_motor.c: 266:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4641   001C5E  0E05               	movlw	5
  4642   001C60  6E43               	movwf	(??_returnHome+1)^0,c
  4643   001C62  0E0F               	movlw	15
  4644   001C64  6E42               	movwf	??_returnHome^0,c
  4645   001C66  0EF1               	movlw	241
  4646   001C68                     u4497:
  4647   001C68  2EE8               	decfsz	wreg,f,c
  4648   001C6A  D7FE               	bra	u4497
  4649   001C6C  2E42               	decfsz	??_returnHome^0,f,c
  4650   001C6E  D7FC               	bra	u4497
  4651   001C70  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4652   001C72  D7FA               	bra	u4497
  4653   001C74  0000               	nop	
  4654   001C76                     
  4655                           ;dc_motor.c: 267:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4656   001C76  C032  F023         	movff	returnHome@mL,turnRight@mL
  4657   001C7A  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4658   001C7E  C034  F025         	movff	returnHome@mR,turnRight@mR
  4659   001C82  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4660   001C86  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4661   001C8A  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4662   001C8E  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4663   001C92  ECD1  F022         	call	_turnRight	;wreg free
  4664                           
  4665                           ;dc_motor.c: 268:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4666   001C96  0E05               	movlw	5
  4667   001C98  6E43               	movwf	(??_returnHome+1)^0,c
  4668   001C9A  0E0F               	movlw	15
  4669   001C9C  6E42               	movwf	??_returnHome^0,c
  4670   001C9E  0EF1               	movlw	241
  4671   001CA0                     u4507:
  4672   001CA0  2EE8               	decfsz	wreg,f,c
  4673   001CA2  D7FE               	bra	u4507
  4674   001CA4  2E42               	decfsz	??_returnHome^0,f,c
  4675   001CA6  D7FC               	bra	u4507
  4676   001CA8  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4677   001CAA  D7FA               	bra	u4507
  4678   001CAC  0000               	nop	
  4679   001CAE                     
  4680                           ;dc_motor.c: 269:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4681   001CAE  C032  F023         	movff	returnHome@mL,turnRight@mL
  4682   001CB2  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4683   001CB6  C034  F025         	movff	returnHome@mR,turnRight@mR
  4684   001CBA  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4685   001CBE  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4686   001CC2  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4687   001CC6  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4688   001CCA  ECD1  F022         	call	_turnRight	;wreg free
  4689   001CCE  EFF3  F00C         	goto	l3728
  4690   001CD2                     l586:
  4691   001CD2                     l580:
  4692                           
  4693                           ;dc_motor.c: 273:         reverseWallAdjust(mL, mR, straightSpeed, straightRamp);
  4694   001CD2  C032  F023         	movff	returnHome@mL,reverseWallAdjust@mL
  4695   001CD6  C033  F024         	movff	returnHome@mL+1,reverseWallAdjust@mL+1
  4696   001CDA  C034  F025         	movff	returnHome@mR,reverseWallAdjust@mR
  4697   001CDE  C035  F026         	movff	returnHome@mR+1,reverseWallAdjust@mR+1
  4698   001CE2  C03B  F027         	movff	returnHome@straightSpeed,reverseWallAdjust@straightSpeed
  4699   001CE6  C03E  F028         	movff	returnHome@straightRamp,reverseWallAdjust@straightRamp
  4700   001CEA  ECF9  F01E         	call	_reverseWallAdjust	;wreg free
  4701   001CEE                     
  4702                           ;dc_motor.c: 274:         _delay((unsigned long)((50)*(64000000/4000.0)));
  4703   001CEE  0E05               	movlw	5
  4704   001CF0  6E43               	movwf	(??_returnHome+1)^0,c
  4705   001CF2  0E0F               	movlw	15
  4706   001CF4  6E42               	movwf	??_returnHome^0,c
  4707   001CF6  0EF1               	movlw	241
  4708   001CF8                     u4517:
  4709   001CF8  2EE8               	decfsz	wreg,f,c
  4710   001CFA  D7FE               	bra	u4517
  4711   001CFC  2E42               	decfsz	??_returnHome^0,f,c
  4712   001CFE  D7FC               	bra	u4517
  4713   001D00  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4714   001D02  D7FA               	bra	u4517
  4715   001D04  0000               	nop	
  4716   001D06                     
  4717                           ;dc_motor.c: 275:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4718   001D06  C032  F023         	movff	returnHome@mL,fullSpeedAhead@mL
  4719   001D0A  C033  F024         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4720   001D0E  C034  F025         	movff	returnHome@mR,fullSpeedAhead@mR
  4721   001D12  C035  F026         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4722   001D16  C03B  F027         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4723   001D1A  C03E  F028         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4724   001D1E  EC6B  F026         	call	_fullSpeedAhead	;wreg free
  4725   001D22                     
  4726                           ;dc_motor.c: 276:         resetTimer();
  4727   001D22  ECF3  F02A         	call	_resetTimer	;wreg free
  4728   001D26                     l3784:
  4729   001D26  5048               	movf	returnHome@i^0,w,c
  4730   001D28  0D02               	mullw	2
  4731   001D2A  CFF3 F042          	movff	prodl,??_returnHome
  4732   001D2E  CFF4 F043          	movff	prodh,??_returnHome+1
  4733   001D32  5042               	movf	??_returnHome^0,w,c
  4734   001D34  2438               	addwf	returnHome@straightTime^0,w,c
  4735   001D36  6ED9               	movwf	fsr2l,c
  4736   001D38  5043               	movf	(??_returnHome+1)^0,w,c
  4737   001D3A  2039               	addwfc	(returnHome@straightTime+1)^0,w,c
  4738   001D3C  6EDA               	movwf	fsr2h,c
  4739   001D3E  CFDE F044          	movff	postinc2,??_returnHome+2
  4740   001D42  CFDD F045          	movff	postdec2,??_returnHome+3
  4741   001D46  0ED6               	movlw	214
  4742   001D48  2444               	addwf	(??_returnHome+2)^0,w,c
  4743   001D4A  6E46               	movwf	(??_returnHome+4)^0,c
  4744   001D4C  0E06               	movlw	6
  4745   001D4E  2045               	addwfc	(??_returnHome+3)^0,w,c
  4746   001D50  6E47               	movwf	(??_returnHome+5)^0,c
  4747   001D52  EC14  F02A         	call	_get16bitTMR0val	;wreg free
  4748   001D56  5046               	movf	(??_returnHome+4)^0,w,c
  4749   001D58  5C10               	subwf	?_get16bitTMR0val^0,w,c
  4750   001D5A  5047               	movf	(??_returnHome+5)^0,w,c
  4751   001D5C  5811               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4752   001D5E  A0D8               	btfss	status,0,c
  4753   001D60  EFB4  F00E         	goto	u2561
  4754   001D64  EFB6  F00E         	goto	u2560
  4755   001D68                     u2561:
  4756   001D68  EF93  F00E         	goto	l3784
  4757   001D6C                     u2560:
  4758   001D6C                     
  4759                           ;dc_motor.c: 278:         stop(mL, mR, straightRamp);
  4760   001D6C  C032  F023         	movff	returnHome@mL,stop@mL
  4761   001D70  C033  F024         	movff	returnHome@mL+1,stop@mL+1
  4762   001D74  C034  F025         	movff	returnHome@mR,stop@mR
  4763   001D78  C035  F026         	movff	returnHome@mR+1,stop@mR+1
  4764   001D7C  C03E  F027         	movff	returnHome@straightRamp,stop@straightRamp
  4765   001D80  ECE7  F025         	call	_stop	;wreg free
  4766   001D84                     l3788:
  4767                           
  4768                           ;dc_motor.c: 209:     while (i>0) {
  4769   001D84  5048               	movf	returnHome@i^0,w,c
  4770   001D86  A4D8               	btfss	status,2,c
  4771   001D88  EFC8  F00E         	goto	u2571
  4772   001D8C  EFCA  F00E         	goto	u2570
  4773   001D90                     u2571:
  4774   001D90  EFEE  F00B         	goto	l3698
  4775   001D94                     u2570:
  4776   001D94  0012               	return		;funcret
  4777   001D96                     __end_of_returnHome:
  4778                           	callstack 0
  4779                           
  4780 ;; *************** function _reverseWallAdjust *****************
  4781 ;; Defined at:
  4782 ;;		line 570 in file "dc_motor.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  4785 ;;		 -> main@motorL(10), 
  4786 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  4787 ;;		 -> main@motorR(10), 
  4788 ;;  straightSpee    1   38[COMRAM] unsigned char 
  4789 ;;  straightRamp    1   39[COMRAM] unsigned char 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  cur_power       2   47[COMRAM] int 
  4792 ;;  i               2   45[COMRAM] int 
  4793 ;;  reverseWallS    1   44[COMRAM] unsigned char 
  4794 ;;  reverseAdjus    1   43[COMRAM] unsigned char 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4804 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4806 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4807 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4808 ;;Total ram usage:       15 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; Hardware stack levels required when called: 8
  4811 ;; This function calls:
  4812 ;;		_setMotorPWM
  4813 ;; This function is called by:
  4814 ;;		_returnHome
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text5
  4819   003DF2                     __ptext5:
  4820                           	callstack 0
  4821   003DF2                     _reverseWallAdjust:
  4822                           	callstack 20
  4823   003DF2                     
  4824                           ;dc_motor.c: 570: void reverseWallAdjust(DC_motor *mL, DC_motor *mR, char straightSpeed,
      +                           unsigned char straightRamp);dc_motor.c: 571: {;dc_motor.c: 572:     unsigned char rever
      +                          seAdjustDuration = 60;
  4825   003DF2  0E3C               	movlw	60
  4826   003DF4  6E2C               	movwf	reverseWallAdjust@reverseAdjustDuration^0,c
  4827                           
  4828                           ;dc_motor.c: 573:     unsigned char reverseWallSpeed = 40;
  4829   003DF6  0E28               	movlw	40
  4830   003DF8  6E2D               	movwf	reverseWallAdjust@reverseWallSpeed^0,c
  4831   003DFA                     
  4832                           ;dc_motor.c: 575:     mL->direction = 0;
  4833   003DFA  EE20 F001          	lfsr	2,1
  4834   003DFE  5023               	movf	reverseWallAdjust@mL^0,w,c
  4835   003E00  26D9               	addwf	fsr2l,f,c
  4836   003E02  5024               	movf	(reverseWallAdjust@mL+1)^0,w,c
  4837   003E04  22DA               	addwfc	fsr2h,f,c
  4838   003E06  6ADF               	clrf	indf2,c
  4839   003E08                     
  4840                           ;dc_motor.c: 576:     mR->direction = 0;
  4841   003E08  EE20 F001          	lfsr	2,1
  4842   003E0C  5025               	movf	reverseWallAdjust@mR^0,w,c
  4843   003E0E  26D9               	addwf	fsr2l,f,c
  4844   003E10  5026               	movf	(reverseWallAdjust@mR+1)^0,w,c
  4845   003E12  22DA               	addwfc	fsr2h,f,c
  4846   003E14  6ADF               	clrf	indf2,c
  4847                           
  4848                           ;dc_motor.c: 577:     int i;;dc_motor.c: 578:     int cur_power;;dc_motor.c: 579:     fo
      +                          r (cur_power=1;cur_power<=reverseWallSpeed;cur_power++) {
  4849   003E16  0E00               	movlw	0
  4850   003E18  6E31               	movwf	(reverseWallAdjust@cur_power+1)^0,c
  4851   003E1A  0E01               	movlw	1
  4852   003E1C  6E30               	movwf	reverseWallAdjust@cur_power^0,c
  4853   003E1E  EF5B  F01F         	goto	l3408
  4854   003E22                     l3394:
  4855                           
  4856                           ;dc_motor.c: 580:         mL->power = cur_power+mL->compensation;
  4857   003E22  EE20 F009          	lfsr	2,9
  4858   003E26  5023               	movf	reverseWallAdjust@mL^0,w,c
  4859   003E28  26D9               	addwf	fsr2l,f,c
  4860   003E2A  5024               	movf	(reverseWallAdjust@mL+1)^0,w,c
  4861   003E2C  22DA               	addwfc	fsr2h,f,c
  4862   003E2E  50DF               	movf	indf2,w,c
  4863   003E30  2430               	addwf	reverseWallAdjust@cur_power^0,w,c
  4864   003E32  C023  FFD9         	movff	reverseWallAdjust@mL,fsr2l
  4865   003E36  C024  FFDA         	movff	reverseWallAdjust@mL+1,fsr2h
  4866   003E3A  6EDF               	movwf	indf2,c
  4867                           
  4868                           ;dc_motor.c: 581:         mR->power = cur_power+mR->compensation;
  4869   003E3C  EE20 F009          	lfsr	2,9
  4870   003E40  5025               	movf	reverseWallAdjust@mR^0,w,c
  4871   003E42  26D9               	addwf	fsr2l,f,c
  4872   003E44  5026               	movf	(reverseWallAdjust@mR+1)^0,w,c
  4873   003E46  22DA               	addwfc	fsr2h,f,c
  4874   003E48  50DF               	movf	indf2,w,c
  4875   003E4A  2430               	addwf	reverseWallAdjust@cur_power^0,w,c
  4876   003E4C  C025  FFD9         	movff	reverseWallAdjust@mR,fsr2l
  4877   003E50  C026  FFDA         	movff	reverseWallAdjust@mR+1,fsr2h
  4878   003E54  6EDF               	movwf	indf2,c
  4879   003E56                     
  4880                           ;dc_motor.c: 582:         setMotorPWM(mL);
  4881   003E56  C023  F01D         	movff	reverseWallAdjust@mL,setMotorPWM@m
  4882   003E5A  C024  F01E         	movff	reverseWallAdjust@mL+1,setMotorPWM@m+1
  4883   003E5E  ECAB  F024         	call	_setMotorPWM	;wreg free
  4884   003E62                     
  4885                           ;dc_motor.c: 583:         setMotorPWM(mR);
  4886   003E62  C025  F01D         	movff	reverseWallAdjust@mR,setMotorPWM@m
  4887   003E66  C026  F01E         	movff	reverseWallAdjust@mR+1,setMotorPWM@m+1
  4888   003E6A  ECAB  F024         	call	_setMotorPWM	;wreg free
  4889   003E6E                     
  4890                           ;dc_motor.c: 584:         for (i=0;i<straightRamp;i++) {
  4891   003E6E  0E00               	movlw	0
  4892   003E70  6E2F               	movwf	(reverseWallAdjust@i+1)^0,c
  4893   003E72  0E00               	movlw	0
  4894   003E74  6E2E               	movwf	reverseWallAdjust@i^0,c
  4895   003E76  EF47  F01F         	goto	l725
  4896   003E7A                     l3402:
  4897                           
  4898                           ;dc_motor.c: 585:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4899   003E7A  0E68               	movlw	104
  4900   003E7C  6E29               	movwf	??_reverseWallAdjust^0,c
  4901   003E7E  0EE4               	movlw	228
  4902   003E80                     u4527:
  4903   003E80  2EE8               	decfsz	wreg,f,c
  4904   003E82  D7FE               	bra	u4527
  4905   003E84  2E29               	decfsz	??_reverseWallAdjust^0,f,c
  4906   003E86  D7FC               	bra	u4527
  4907   003E88  D000               	nop2	
  4908   003E8A                     
  4909                           ;dc_motor.c: 586:         }
  4910   003E8A  4A2E               	infsnz	reverseWallAdjust@i^0,f,c
  4911   003E8C  2A2F               	incf	(reverseWallAdjust@i+1)^0,f,c
  4912   003E8E                     l725:
  4913   003E8E  5028               	movf	reverseWallAdjust@straightRamp^0,w,c
  4914   003E90  6E29               	movwf	??_reverseWallAdjust^0,c
  4915   003E92  6A2A               	clrf	(??_reverseWallAdjust+1)^0,c
  4916   003E94  5029               	movf	??_reverseWallAdjust^0,w,c
  4917   003E96  5C2E               	subwf	reverseWallAdjust@i^0,w,c
  4918   003E98  502F               	movf	(reverseWallAdjust@i+1)^0,w,c
  4919   003E9A  0A80               	xorlw	128
  4920   003E9C  6E2B               	movwf	(??_reverseWallAdjust+2)^0,c
  4921   003E9E  502A               	movf	(??_reverseWallAdjust+1)^0,w,c
  4922   003EA0  0A80               	xorlw	128
  4923   003EA2  582B               	subwfb	(??_reverseWallAdjust+2)^0,w,c
  4924   003EA4  A0D8               	btfss	status,0,c
  4925   003EA6  EF57  F01F         	goto	u2191
  4926   003EAA  EF59  F01F         	goto	u2190
  4927   003EAE                     u2191:
  4928   003EAE  EF3D  F01F         	goto	l3402
  4929   003EB2                     u2190:
  4930   003EB2                     
  4931                           ;dc_motor.c: 587:     }
  4932   003EB2  4A30               	infsnz	reverseWallAdjust@cur_power^0,f,c
  4933   003EB4  2A31               	incf	(reverseWallAdjust@cur_power+1)^0,f,c
  4934   003EB6                     l3408:
  4935   003EB6  502D               	movf	reverseWallAdjust@reverseWallSpeed^0,w,c
  4936   003EB8  6E29               	movwf	??_reverseWallAdjust^0,c
  4937   003EBA  6A2A               	clrf	(??_reverseWallAdjust+1)^0,c
  4938   003EBC  5030               	movf	reverseWallAdjust@cur_power^0,w,c
  4939   003EBE  5C29               	subwf	??_reverseWallAdjust^0,w,c
  4940   003EC0  502A               	movf	(??_reverseWallAdjust+1)^0,w,c
  4941   003EC2  0A80               	xorlw	128
  4942   003EC4  6E2B               	movwf	(??_reverseWallAdjust+2)^0,c
  4943   003EC6  5031               	movf	(reverseWallAdjust@cur_power+1)^0,w,c
  4944   003EC8  0A80               	xorlw	128
  4945   003ECA  582B               	subwfb	(??_reverseWallAdjust+2)^0,w,c
  4946   003ECC  B0D8               	btfsc	status,0,c
  4947   003ECE  EF6B  F01F         	goto	u2201
  4948   003ED2  EF6D  F01F         	goto	u2200
  4949   003ED6                     u2201:
  4950   003ED6  EF11  F01F         	goto	l3394
  4951   003EDA                     u2200:
  4952   003EDA                     
  4953                           ;dc_motor.c: 589:     for (i=0;i<reverseAdjustDuration;i++) {
  4954   003EDA  0E00               	movlw	0
  4955   003EDC  6E2F               	movwf	(reverseWallAdjust@i+1)^0,c
  4956   003EDE  0E00               	movlw	0
  4957   003EE0  6E2E               	movwf	reverseWallAdjust@i^0,c
  4958   003EE2  EF7D  F01F         	goto	l729
  4959   003EE6                     l3412:
  4960                           
  4961                           ;dc_motor.c: 590:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4962   003EE6  0E68               	movlw	104
  4963   003EE8  6E29               	movwf	??_reverseWallAdjust^0,c
  4964   003EEA  0EE4               	movlw	228
  4965   003EEC                     u4537:
  4966   003EEC  2EE8               	decfsz	wreg,f,c
  4967   003EEE  D7FE               	bra	u4537
  4968   003EF0  2E29               	decfsz	??_reverseWallAdjust^0,f,c
  4969   003EF2  D7FC               	bra	u4537
  4970   003EF4  D000               	nop2	
  4971   003EF6                     
  4972                           ;dc_motor.c: 591:         }
  4973   003EF6  4A2E               	infsnz	reverseWallAdjust@i^0,f,c
  4974   003EF8  2A2F               	incf	(reverseWallAdjust@i+1)^0,f,c
  4975   003EFA                     l729:
  4976   003EFA  502C               	movf	reverseWallAdjust@reverseAdjustDuration^0,w,c
  4977   003EFC  6E29               	movwf	??_reverseWallAdjust^0,c
  4978   003EFE  6A2A               	clrf	(??_reverseWallAdjust+1)^0,c
  4979   003F00  5029               	movf	??_reverseWallAdjust^0,w,c
  4980   003F02  5C2E               	subwf	reverseWallAdjust@i^0,w,c
  4981   003F04  502F               	movf	(reverseWallAdjust@i+1)^0,w,c
  4982   003F06  0A80               	xorlw	128
  4983   003F08  6E2B               	movwf	(??_reverseWallAdjust+2)^0,c
  4984   003F0A  502A               	movf	(??_reverseWallAdjust+1)^0,w,c
  4985   003F0C  0A80               	xorlw	128
  4986   003F0E  582B               	subwfb	(??_reverseWallAdjust+2)^0,w,c
  4987   003F10  A0D8               	btfss	status,0,c
  4988   003F12  EF8D  F01F         	goto	u2211
  4989   003F16  EF8F  F01F         	goto	u2210
  4990   003F1A                     u2211:
  4991   003F1A  EF73  F01F         	goto	l3412
  4992   003F1E                     u2210:
  4993   003F1E                     
  4994                           ;dc_motor.c: 593:     for (cur_power=reverseWallSpeed;cur_power>=0;cur_power--) {
  4995   003F1E  C02D  F030         	movff	reverseWallAdjust@reverseWallSpeed,reverseWallAdjust@cur_power
  4996   003F22  6A31               	clrf	(reverseWallAdjust@cur_power+1)^0,c
  4997   003F24                     l3416:
  4998   003F24  BE31               	btfsc	(reverseWallAdjust@cur_power+1)^0,7,c
  4999   003F26  EF99  F01F         	goto	u2220
  5000   003F2A  EF97  F01F         	goto	u2221
  5001   003F2E                     u2221:
  5002   003F2E  EF9B  F01F         	goto	l3420
  5003   003F32                     u2220:
  5004   003F32  EFE8  F01F         	goto	l3436
  5005   003F36                     l3420:
  5006                           
  5007                           ;dc_motor.c: 594:         mL->power = cur_power+mL->compensation;
  5008   003F36  EE20 F009          	lfsr	2,9
  5009   003F3A  5023               	movf	reverseWallAdjust@mL^0,w,c
  5010   003F3C  26D9               	addwf	fsr2l,f,c
  5011   003F3E  5024               	movf	(reverseWallAdjust@mL+1)^0,w,c
  5012   003F40  22DA               	addwfc	fsr2h,f,c
  5013   003F42  50DF               	movf	indf2,w,c
  5014   003F44  2430               	addwf	reverseWallAdjust@cur_power^0,w,c
  5015   003F46  C023  FFD9         	movff	reverseWallAdjust@mL,fsr2l
  5016   003F4A  C024  FFDA         	movff	reverseWallAdjust@mL+1,fsr2h
  5017   003F4E  6EDF               	movwf	indf2,c
  5018                           
  5019                           ;dc_motor.c: 595:         mR->power = cur_power+mR->compensation;
  5020   003F50  EE20 F009          	lfsr	2,9
  5021   003F54  5025               	movf	reverseWallAdjust@mR^0,w,c
  5022   003F56  26D9               	addwf	fsr2l,f,c
  5023   003F58  5026               	movf	(reverseWallAdjust@mR+1)^0,w,c
  5024   003F5A  22DA               	addwfc	fsr2h,f,c
  5025   003F5C  50DF               	movf	indf2,w,c
  5026   003F5E  2430               	addwf	reverseWallAdjust@cur_power^0,w,c
  5027   003F60  C025  FFD9         	movff	reverseWallAdjust@mR,fsr2l
  5028   003F64  C026  FFDA         	movff	reverseWallAdjust@mR+1,fsr2h
  5029   003F68  6EDF               	movwf	indf2,c
  5030   003F6A                     
  5031                           ;dc_motor.c: 596:         setMotorPWM(mL);
  5032   003F6A  C023  F01D         	movff	reverseWallAdjust@mL,setMotorPWM@m
  5033   003F6E  C024  F01E         	movff	reverseWallAdjust@mL+1,setMotorPWM@m+1
  5034   003F72  ECAB  F024         	call	_setMotorPWM	;wreg free
  5035   003F76                     
  5036                           ;dc_motor.c: 597:         setMotorPWM(mR);
  5037   003F76  C025  F01D         	movff	reverseWallAdjust@mR,setMotorPWM@m
  5038   003F7A  C026  F01E         	movff	reverseWallAdjust@mR+1,setMotorPWM@m+1
  5039   003F7E  ECAB  F024         	call	_setMotorPWM	;wreg free
  5040   003F82                     
  5041                           ;dc_motor.c: 598:         for (i=0;i<straightRamp;i++) {
  5042   003F82  0E00               	movlw	0
  5043   003F84  6E2F               	movwf	(reverseWallAdjust@i+1)^0,c
  5044   003F86  0E00               	movlw	0
  5045   003F88  6E2E               	movwf	reverseWallAdjust@i^0,c
  5046   003F8A  EFD1  F01F         	goto	l734
  5047   003F8E                     l3428:
  5048                           
  5049                           ;dc_motor.c: 599:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5050   003F8E  0E68               	movlw	104
  5051   003F90  6E29               	movwf	??_reverseWallAdjust^0,c
  5052   003F92  0EE4               	movlw	228
  5053   003F94                     u4547:
  5054   003F94  2EE8               	decfsz	wreg,f,c
  5055   003F96  D7FE               	bra	u4547
  5056   003F98  2E29               	decfsz	??_reverseWallAdjust^0,f,c
  5057   003F9A  D7FC               	bra	u4547
  5058   003F9C  D000               	nop2	
  5059   003F9E                     
  5060                           ;dc_motor.c: 600:         }
  5061   003F9E  4A2E               	infsnz	reverseWallAdjust@i^0,f,c
  5062   003FA0  2A2F               	incf	(reverseWallAdjust@i+1)^0,f,c
  5063   003FA2                     l734:
  5064   003FA2  5028               	movf	reverseWallAdjust@straightRamp^0,w,c
  5065   003FA4  6E29               	movwf	??_reverseWallAdjust^0,c
  5066   003FA6  6A2A               	clrf	(??_reverseWallAdjust+1)^0,c
  5067   003FA8  5029               	movf	??_reverseWallAdjust^0,w,c
  5068   003FAA  5C2E               	subwf	reverseWallAdjust@i^0,w,c
  5069   003FAC  502F               	movf	(reverseWallAdjust@i+1)^0,w,c
  5070   003FAE  0A80               	xorlw	128
  5071   003FB0  6E2B               	movwf	(??_reverseWallAdjust+2)^0,c
  5072   003FB2  502A               	movf	(??_reverseWallAdjust+1)^0,w,c
  5073   003FB4  0A80               	xorlw	128
  5074   003FB6  582B               	subwfb	(??_reverseWallAdjust+2)^0,w,c
  5075   003FB8  A0D8               	btfss	status,0,c
  5076   003FBA  EFE1  F01F         	goto	u2231
  5077   003FBE  EFE3  F01F         	goto	u2230
  5078   003FC2                     u2231:
  5079   003FC2  EFC7  F01F         	goto	l3428
  5080   003FC6                     u2230:
  5081   003FC6                     
  5082                           ;dc_motor.c: 601:     }
  5083   003FC6  0630               	decf	reverseWallAdjust@cur_power^0,f,c
  5084   003FC8  A0D8               	btfss	status,0,c
  5085   003FCA  0631               	decf	(reverseWallAdjust@cur_power+1)^0,f,c
  5086   003FCC  EF92  F01F         	goto	l3416
  5087   003FD0                     l3436:
  5088                           
  5089                           ;dc_motor.c: 602:     mL->power = 0;
  5090   003FD0  C023  FFD9         	movff	reverseWallAdjust@mL,fsr2l
  5091   003FD4  C024  FFDA         	movff	reverseWallAdjust@mL+1,fsr2h
  5092   003FD8  6ADF               	clrf	indf2,c
  5093                           
  5094                           ;dc_motor.c: 603:     mR->power = 0;
  5095   003FDA  C025  FFD9         	movff	reverseWallAdjust@mR,fsr2l
  5096   003FDE  C026  FFDA         	movff	reverseWallAdjust@mR+1,fsr2h
  5097   003FE2  6ADF               	clrf	indf2,c
  5098   003FE4  0012               	return		;funcret
  5099   003FE6                     __end_of_reverseWallAdjust:
  5100                           	callstack 0
  5101                           
  5102 ;; *************** function _lostReturnHome *****************
  5103 ;; Defined at:
  5104 ;;		line 283 in file "dc_motor.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  mL              2   49[COMRAM] PTR struct DC_motor
  5107 ;;		 -> main@motorL(10), 
  5108 ;;  mR              2   51[COMRAM] PTR struct DC_motor
  5109 ;;		 -> main@motorR(10), 
  5110 ;;  moveSequence    2   53[COMRAM] PTR unsigned char 
  5111 ;;		 -> main@moveSequence(40), 
  5112 ;;  straightTime    2   55[COMRAM] PTR unsigned int 
  5113 ;;		 -> main@straightTime(82), 
  5114 ;;  curMove         1   57[COMRAM] unsigned char 
  5115 ;;  straightSpee    1   58[COMRAM] unsigned char 
  5116 ;;  reverseDurat    2   59[COMRAM] unsigned int 
  5117 ;;  straightRamp    1   61[COMRAM] unsigned char 
  5118 ;;  turnSpeed       1   62[COMRAM] unsigned char 
  5119 ;;  turnDuration    1   63[COMRAM] unsigned char 
  5120 ;;  turnRamp        1   64[COMRAM] unsigned char 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  i               1   69[COMRAM] unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5132 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5134 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5135 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5136 ;;Total ram usage:       21 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 9
  5139 ;; This function calls:
  5140 ;;		_fullSpeedAhead
  5141 ;;		_get16bitTMR0val
  5142 ;;		_resetTimer
  5143 ;;		_reverseOneSquare
  5144 ;;		_stop
  5145 ;;		_turnLeft
  5146 ;;		_turnRight
  5147 ;; This function is called by:
  5148 ;;		_main
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text6
  5153   001D96                     __ptext6:
  5154                           	callstack 0
  5155   001D96                     _lostReturnHome:
  5156                           	callstack 21
  5157   001D96                     
  5158                           ;dc_motor.c: 283: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned int revers
      +                          eDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsig
      +                          ned char turnRamp);dc_motor.c: 284: {;dc_motor.c: 285:     LATDbits.LATD7 = LATHbits.LAT
      +                          H3 = 1;
  5159   001D96  8680               	bsf	128,3,c	;volatile
  5160   001D98  8E7C               	bsf	124,7,c	;volatile
  5161   001D9A                     
  5162                           ;dc_motor.c: 286:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5163   001D9A  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5164   001D9E  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5165   001DA2  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5166   001DA6  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5167   001DAA  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5168   001DAE  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5169   001DB2  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5170   001DB6  ECBE  F023         	call	_turnLeft	;wreg free
  5171   001DBA                     
  5172                           ;dc_motor.c: 287:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5173   001DBA  0E05               	movlw	5
  5174   001DBC  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5175   001DBE  0E0F               	movlw	15
  5176   001DC0  6E42               	movwf	??_lostReturnHome^0,c
  5177   001DC2  0EF1               	movlw	241
  5178   001DC4                     u4557:
  5179   001DC4  2EE8               	decfsz	wreg,f,c
  5180   001DC6  D7FE               	bra	u4557
  5181   001DC8  2E42               	decfsz	??_lostReturnHome^0,f,c
  5182   001DCA  D7FC               	bra	u4557
  5183   001DCC  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5184   001DCE  D7FA               	bra	u4557
  5185   001DD0  0000               	nop	
  5186   001DD2                     
  5187                           ;dc_motor.c: 288:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5188   001DD2  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5189   001DD6  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5190   001DDA  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5191   001DDE  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5192   001DE2  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5193   001DE6  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5194   001DEA  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5195   001DEE  ECBE  F023         	call	_turnLeft	;wreg free
  5196                           
  5197                           ;dc_motor.c: 289:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5198   001DF2  0E05               	movlw	5
  5199   001DF4  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5200   001DF6  0E0F               	movlw	15
  5201   001DF8  6E42               	movwf	??_lostReturnHome^0,c
  5202   001DFA  0EF1               	movlw	241
  5203   001DFC                     u4567:
  5204   001DFC  2EE8               	decfsz	wreg,f,c
  5205   001DFE  D7FE               	bra	u4567
  5206   001E00  2E42               	decfsz	??_lostReturnHome^0,f,c
  5207   001E02  D7FC               	bra	u4567
  5208   001E04  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5209   001E06  D7FA               	bra	u4567
  5210   001E08  0000               	nop	
  5211   001E0A                     
  5212                           ;dc_motor.c: 290:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5213   001E0A  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5214   001E0E  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5215   001E12  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5216   001E16  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5217   001E1A  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5218   001E1E  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5219   001E22  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5220   001E26  ECBE  F023         	call	_turnLeft	;wreg free
  5221   001E2A                     
  5222                           ;dc_motor.c: 291:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5223   001E2A  0E05               	movlw	5
  5224   001E2C  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5225   001E2E  0E0F               	movlw	15
  5226   001E30  6E42               	movwf	??_lostReturnHome^0,c
  5227   001E32  0EF1               	movlw	241
  5228   001E34                     u4577:
  5229   001E34  2EE8               	decfsz	wreg,f,c
  5230   001E36  D7FE               	bra	u4577
  5231   001E38  2E42               	decfsz	??_lostReturnHome^0,f,c
  5232   001E3A  D7FC               	bra	u4577
  5233   001E3C  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5234   001E3E  D7FA               	bra	u4577
  5235   001E40  0000               	nop	
  5236                           
  5237                           ;dc_motor.c: 292:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5238   001E42  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5239   001E46  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5240   001E4A  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5241   001E4E  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5242   001E52  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5243   001E56  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5244   001E5A  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5245   001E5E  ECBE  F023         	call	_turnLeft	;wreg free
  5246   001E62                     
  5247                           ;dc_motor.c: 293:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5248   001E62  0E05               	movlw	5
  5249   001E64  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5250   001E66  0E0F               	movlw	15
  5251   001E68  6E42               	movwf	??_lostReturnHome^0,c
  5252   001E6A  0EF1               	movlw	241
  5253   001E6C                     u4587:
  5254   001E6C  2EE8               	decfsz	wreg,f,c
  5255   001E6E  D7FE               	bra	u4587
  5256   001E70  2E42               	decfsz	??_lostReturnHome^0,f,c
  5257   001E72  D7FC               	bra	u4587
  5258   001E74  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5259   001E76  D7FA               	bra	u4587
  5260   001E78  0000               	nop	
  5261   001E7A                     
  5262                           ;dc_motor.c: 294:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  5263   001E7A  C032  F023         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  5264   001E7E  C033  F024         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  5265   001E82  C034  F025         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  5266   001E86  C035  F026         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  5267   001E8A  C03B  F027         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  5268   001E8E  C03E  F028         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  5269   001E92  EC6B  F026         	call	_fullSpeedAhead	;wreg free
  5270   001E96                     
  5271                           ;dc_motor.c: 295:     resetTimer();
  5272   001E96  ECF3  F02A         	call	_resetTimer	;wreg free
  5273   001E9A                     
  5274                           ;dc_motor.c: 296:     lost = 0;
  5275   001E9A  0E00               	movlw	0
  5276   001E9C  0100               	movlb	0	; () banked
  5277   001E9E  6FF4               	movwf	_lost& (0+255),b
  5278   001EA0                     l4388:
  5279                           
  5280                           ; BSR set to: 0
  5281   001EA0  51F4               	movf	_lost& (0+255),w,b
  5282   001EA2  B4D8               	btfsc	status,2,c
  5283   001EA4  EF56  F00F         	goto	u3311
  5284   001EA8  EF58  F00F         	goto	u3310
  5285   001EAC                     u3311:
  5286   001EAC  EF50  F00F         	goto	l4388
  5287   001EB0                     u3310:
  5288   001EB0                     
  5289                           ; BSR set to: 0
  5290                           ;dc_motor.c: 298:     stop(mL, mR, straightRamp);
  5291   001EB0  C032  F023         	movff	lostReturnHome@mL,stop@mL
  5292   001EB4  C033  F024         	movff	lostReturnHome@mL+1,stop@mL+1
  5293   001EB8  C034  F025         	movff	lostReturnHome@mR,stop@mR
  5294   001EBC  C035  F026         	movff	lostReturnHome@mR+1,stop@mR+1
  5295   001EC0  C03E  F027         	movff	lostReturnHome@straightRamp,stop@straightRamp
  5296   001EC4  ECE7  F025         	call	_stop	;wreg free
  5297   001EC8                     
  5298                           ;dc_motor.c: 300:     char i=curMove;
  5299   001EC8  C03A  F046         	movff	lostReturnHome@curMove,lostReturnHome@i
  5300                           
  5301                           ;dc_motor.c: 301:     while (i>0) {
  5302   001ECC  EF18  F012         	goto	l4480
  5303   001ED0                     l4394:
  5304                           
  5305                           ;dc_motor.c: 302:         i--;
  5306   001ED0  0646               	decf	lostReturnHome@i^0,f,c
  5307   001ED2                     
  5308                           ;dc_motor.c: 304:         if (moveSequence[i] == 1) {
  5309   001ED2  5046               	movf	lostReturnHome@i^0,w,c
  5310   001ED4  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5311   001ED6  6ED9               	movwf	fsr2l,c
  5312   001ED8  0E00               	movlw	0
  5313   001EDA  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5314   001EDC  6EDA               	movwf	fsr2h,c
  5315   001EDE  04DE               	decf	postinc2,w,c
  5316   001EE0  A4D8               	btfss	status,2,c
  5317   001EE2  EF75  F00F         	goto	u3321
  5318   001EE6  EF77  F00F         	goto	u3320
  5319   001EEA                     u3321:
  5320   001EEA  EFB1  F00F         	goto	l4404
  5321   001EEE                     u3320:
  5322   001EEE                     
  5323                           ;dc_motor.c: 305:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5324   001EEE  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5325   001EF2  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5326   001EF6  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5327   001EFA  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5328   001EFE  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5329   001F02  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5330   001F06  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5331   001F0A  ECBE  F023         	call	_turnLeft	;wreg free
  5332   001F0E                     
  5333                           ;dc_motor.c: 306:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5334   001F0E  0E05               	movlw	5
  5335   001F10  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5336   001F12  0E0F               	movlw	15
  5337   001F14  6E42               	movwf	??_lostReturnHome^0,c
  5338   001F16  0EF1               	movlw	241
  5339   001F18                     u4597:
  5340   001F18  2EE8               	decfsz	wreg,f,c
  5341   001F1A  D7FE               	bra	u4597
  5342   001F1C  2E42               	decfsz	??_lostReturnHome^0,f,c
  5343   001F1E  D7FC               	bra	u4597
  5344   001F20  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5345   001F22  D7FA               	bra	u4597
  5346   001F24  0000               	nop	
  5347   001F26                     
  5348                           ;dc_motor.c: 307:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5349   001F26  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5350   001F2A  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5351   001F2E  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5352   001F32  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5353   001F36  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5354   001F3A  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5355   001F3E  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5356   001F42  ECBE  F023         	call	_turnLeft	;wreg free
  5357                           
  5358                           ;dc_motor.c: 308:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5359   001F46  0E05               	movlw	5
  5360   001F48  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5361   001F4A  0E0F               	movlw	15
  5362   001F4C  6E42               	movwf	??_lostReturnHome^0,c
  5363   001F4E  0EF1               	movlw	241
  5364   001F50                     u4607:
  5365   001F50  2EE8               	decfsz	wreg,f,c
  5366   001F52  D7FE               	bra	u4607
  5367   001F54  2E42               	decfsz	??_lostReturnHome^0,f,c
  5368   001F56  D7FC               	bra	u4607
  5369   001F58  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5370   001F5A  D7FA               	bra	u4607
  5371   001F5C  0000               	nop	
  5372                           
  5373                           ;dc_motor.c: 309:         }
  5374   001F5E  EFE3  F011         	goto	l605
  5375   001F62                     l4404:
  5376   001F62  5046               	movf	lostReturnHome@i^0,w,c
  5377   001F64  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5378   001F66  6ED9               	movwf	fsr2l,c
  5379   001F68  0E00               	movlw	0
  5380   001F6A  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5381   001F6C  6EDA               	movwf	fsr2h,c
  5382   001F6E  0E02               	movlw	2
  5383   001F70  18DE               	xorwf	postinc2,w,c
  5384   001F72  A4D8               	btfss	status,2,c
  5385   001F74  EFBE  F00F         	goto	u3331
  5386   001F78  EFC0  F00F         	goto	u3330
  5387   001F7C                     u3331:
  5388   001F7C  EFFA  F00F         	goto	l4412
  5389   001F80                     u3330:
  5390   001F80                     
  5391                           ;dc_motor.c: 312:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5392   001F80  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5393   001F84  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5394   001F88  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5395   001F8C  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5396   001F90  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5397   001F94  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5398   001F98  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5399   001F9C  ECD1  F022         	call	_turnRight	;wreg free
  5400   001FA0                     
  5401                           ;dc_motor.c: 313:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5402   001FA0  0E05               	movlw	5
  5403   001FA2  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5404   001FA4  0E0F               	movlw	15
  5405   001FA6  6E42               	movwf	??_lostReturnHome^0,c
  5406   001FA8  0EF1               	movlw	241
  5407   001FAA                     u4617:
  5408   001FAA  2EE8               	decfsz	wreg,f,c
  5409   001FAC  D7FE               	bra	u4617
  5410   001FAE  2E42               	decfsz	??_lostReturnHome^0,f,c
  5411   001FB0  D7FC               	bra	u4617
  5412   001FB2  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5413   001FB4  D7FA               	bra	u4617
  5414   001FB6  0000               	nop	
  5415   001FB8                     
  5416                           ;dc_motor.c: 314:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5417   001FB8  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5418   001FBC  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5419   001FC0  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5420   001FC4  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5421   001FC8  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5422   001FCC  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5423   001FD0  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5424   001FD4  ECD1  F022         	call	_turnRight	;wreg free
  5425                           
  5426                           ;dc_motor.c: 315:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5427   001FD8  0E05               	movlw	5
  5428   001FDA  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5429   001FDC  0E0F               	movlw	15
  5430   001FDE  6E42               	movwf	??_lostReturnHome^0,c
  5431   001FE0  0EF1               	movlw	241
  5432   001FE2                     u4627:
  5433   001FE2  2EE8               	decfsz	wreg,f,c
  5434   001FE4  D7FE               	bra	u4627
  5435   001FE6  2E42               	decfsz	??_lostReturnHome^0,f,c
  5436   001FE8  D7FC               	bra	u4627
  5437   001FEA  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5438   001FEC  D7FA               	bra	u4627
  5439   001FEE  0000               	nop	
  5440                           
  5441                           ;dc_motor.c: 316:         }
  5442   001FF0  EFE3  F011         	goto	l605
  5443   001FF4                     l4412:
  5444   001FF4  5046               	movf	lostReturnHome@i^0,w,c
  5445   001FF6  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5446   001FF8  6ED9               	movwf	fsr2l,c
  5447   001FFA  0E00               	movlw	0
  5448   001FFC  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5449   001FFE  6EDA               	movwf	fsr2h,c
  5450   002000  0E03               	movlw	3
  5451   002002  18DE               	xorwf	postinc2,w,c
  5452   002004  A4D8               	btfss	status,2,c
  5453   002006  EF07  F010         	goto	u3341
  5454   00200A  EF09  F010         	goto	u3340
  5455   00200E                     u3341:
  5456   00200E  EF7B  F010         	goto	l4426
  5457   002012                     u3340:
  5458   002012                     
  5459                           ;dc_motor.c: 319:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5460   002012  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5461   002016  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5462   00201A  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5463   00201E  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5464   002022  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5465   002026  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5466   00202A  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5467   00202E  ECBE  F023         	call	_turnLeft	;wreg free
  5468   002032                     
  5469                           ;dc_motor.c: 320:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5470   002032  0E05               	movlw	5
  5471   002034  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5472   002036  0E0F               	movlw	15
  5473   002038  6E42               	movwf	??_lostReturnHome^0,c
  5474   00203A  0EF1               	movlw	241
  5475   00203C                     u4637:
  5476   00203C  2EE8               	decfsz	wreg,f,c
  5477   00203E  D7FE               	bra	u4637
  5478   002040  2E42               	decfsz	??_lostReturnHome^0,f,c
  5479   002042  D7FC               	bra	u4637
  5480   002044  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5481   002046  D7FA               	bra	u4637
  5482   002048  0000               	nop	
  5483   00204A                     
  5484                           ;dc_motor.c: 321:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5485   00204A  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5486   00204E  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5487   002052  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5488   002056  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5489   00205A  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5490   00205E  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5491   002062  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5492   002066  ECBE  F023         	call	_turnLeft	;wreg free
  5493                           
  5494                           ;dc_motor.c: 322:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5495   00206A  0E05               	movlw	5
  5496   00206C  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5497   00206E  0E0F               	movlw	15
  5498   002070  6E42               	movwf	??_lostReturnHome^0,c
  5499   002072  0EF1               	movlw	241
  5500   002074                     u4647:
  5501   002074  2EE8               	decfsz	wreg,f,c
  5502   002076  D7FE               	bra	u4647
  5503   002078  2E42               	decfsz	??_lostReturnHome^0,f,c
  5504   00207A  D7FC               	bra	u4647
  5505   00207C  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5506   00207E  D7FA               	bra	u4647
  5507   002080  0000               	nop	
  5508   002082                     
  5509                           ;dc_motor.c: 323:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5510   002082  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5511   002086  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5512   00208A  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5513   00208E  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5514   002092  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5515   002096  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5516   00209A  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5517   00209E  ECBE  F023         	call	_turnLeft	;wreg free
  5518   0020A2                     
  5519                           ;dc_motor.c: 324:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5520   0020A2  0E05               	movlw	5
  5521   0020A4  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5522   0020A6  0E0F               	movlw	15
  5523   0020A8  6E42               	movwf	??_lostReturnHome^0,c
  5524   0020AA  0EF1               	movlw	241
  5525   0020AC                     u4657:
  5526   0020AC  2EE8               	decfsz	wreg,f,c
  5527   0020AE  D7FE               	bra	u4657
  5528   0020B0  2E42               	decfsz	??_lostReturnHome^0,f,c
  5529   0020B2  D7FC               	bra	u4657
  5530   0020B4  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5531   0020B6  D7FA               	bra	u4657
  5532   0020B8  0000               	nop	
  5533                           
  5534                           ;dc_motor.c: 325:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5535   0020BA  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5536   0020BE  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5537   0020C2  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5538   0020C6  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5539   0020CA  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5540   0020CE  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5541   0020D2  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5542   0020D6  ECBE  F023         	call	_turnLeft	;wreg free
  5543   0020DA                     l4424:
  5544                           
  5545                           ;dc_motor.c: 326:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5546   0020DA  0E05               	movlw	5
  5547   0020DC  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5548   0020DE  0E0F               	movlw	15
  5549   0020E0  6E42               	movwf	??_lostReturnHome^0,c
  5550   0020E2  0EF1               	movlw	241
  5551   0020E4                     u4667:
  5552   0020E4  2EE8               	decfsz	wreg,f,c
  5553   0020E6  D7FE               	bra	u4667
  5554   0020E8  2E42               	decfsz	??_lostReturnHome^0,f,c
  5555   0020EA  D7FC               	bra	u4667
  5556   0020EC  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5557   0020EE  D7FA               	bra	u4667
  5558   0020F0  0000               	nop	
  5559                           
  5560                           ;dc_motor.c: 327:         }
  5561   0020F2  EFE3  F011         	goto	l605
  5562   0020F6                     l4426:
  5563   0020F6  5046               	movf	lostReturnHome@i^0,w,c
  5564   0020F8  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5565   0020FA  6ED9               	movwf	fsr2l,c
  5566   0020FC  0E00               	movlw	0
  5567   0020FE  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5568   002100  6EDA               	movwf	fsr2h,c
  5569   002102  0E04               	movlw	4
  5570   002104  18DE               	xorwf	postinc2,w,c
  5571   002106  A4D8               	btfss	status,2,c
  5572   002108  EF88  F010         	goto	u3351
  5573   00210C  EF8A  F010         	goto	u3350
  5574   002110                     u3351:
  5575   002110  EFD6  F010         	goto	l4438
  5576   002114                     u3350:
  5577   002114                     
  5578                           ;dc_motor.c: 330:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5579   002114  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5580   002118  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5581   00211C  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5582   002120  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5583   002124  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5584   002128  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5585   00212C  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5586   002130  ECBE  F023         	call	_turnLeft	;wreg free
  5587   002134                     
  5588                           ;dc_motor.c: 331:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5589   002134  0E05               	movlw	5
  5590   002136  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5591   002138  0E0F               	movlw	15
  5592   00213A  6E42               	movwf	??_lostReturnHome^0,c
  5593   00213C  0EF1               	movlw	241
  5594   00213E                     u4677:
  5595   00213E  2EE8               	decfsz	wreg,f,c
  5596   002140  D7FE               	bra	u4677
  5597   002142  2E42               	decfsz	??_lostReturnHome^0,f,c
  5598   002144  D7FC               	bra	u4677
  5599   002146  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5600   002148  D7FA               	bra	u4677
  5601   00214A  0000               	nop	
  5602   00214C                     
  5603                           ;dc_motor.c: 332:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5604   00214C  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5605   002150  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5606   002154  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5607   002158  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5608   00215C  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5609   002160  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5610   002164  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5611   002168  ECBE  F023         	call	_turnLeft	;wreg free
  5612                           
  5613                           ;dc_motor.c: 333:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5614   00216C  0E05               	movlw	5
  5615   00216E  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5616   002170  0E0F               	movlw	15
  5617   002172  6E42               	movwf	??_lostReturnHome^0,c
  5618   002174  0EF1               	movlw	241
  5619   002176                     u4687:
  5620   002176  2EE8               	decfsz	wreg,f,c
  5621   002178  D7FE               	bra	u4687
  5622   00217A  2E42               	decfsz	??_lostReturnHome^0,f,c
  5623   00217C  D7FC               	bra	u4687
  5624   00217E  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5625   002180  D7FA               	bra	u4687
  5626   002182  0000               	nop	
  5627   002184                     
  5628                           ;dc_motor.c: 334:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5629   002184  C032  F023         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5630   002188  C033  F024         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5631   00218C  C034  F025         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5632   002190  C035  F026         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5633   002194  C03B  F027         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5634   002198  C03C  F028         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5635   00219C  C03D  F029         	movff	lostReturnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  5636   0021A0  C03E  F02A         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5637   0021A4  ECE2  F021         	call	_reverseOneSquare	;wreg free
  5638   0021A8  EF6D  F010         	goto	l4424
  5639   0021AC                     l4438:
  5640   0021AC  5046               	movf	lostReturnHome@i^0,w,c
  5641   0021AE  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5642   0021B0  6ED9               	movwf	fsr2l,c
  5643   0021B2  0E00               	movlw	0
  5644   0021B4  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5645   0021B6  6EDA               	movwf	fsr2h,c
  5646   0021B8  0E05               	movlw	5
  5647   0021BA  18DE               	xorwf	postinc2,w,c
  5648   0021BC  A4D8               	btfss	status,2,c
  5649   0021BE  EFE3  F010         	goto	u3361
  5650   0021C2  EFE5  F010         	goto	u3360
  5651   0021C6                     u3361:
  5652   0021C6  EF31  F011         	goto	l4450
  5653   0021CA                     u3360:
  5654   0021CA                     
  5655                           ;dc_motor.c: 339:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5656   0021CA  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5657   0021CE  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5658   0021D2  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5659   0021D6  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5660   0021DA  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5661   0021DE  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5662   0021E2  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5663   0021E6  ECD1  F022         	call	_turnRight	;wreg free
  5664   0021EA                     
  5665                           ;dc_motor.c: 340:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5666   0021EA  0E05               	movlw	5
  5667   0021EC  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5668   0021EE  0E0F               	movlw	15
  5669   0021F0  6E42               	movwf	??_lostReturnHome^0,c
  5670   0021F2  0EF1               	movlw	241
  5671   0021F4                     u4697:
  5672   0021F4  2EE8               	decfsz	wreg,f,c
  5673   0021F6  D7FE               	bra	u4697
  5674   0021F8  2E42               	decfsz	??_lostReturnHome^0,f,c
  5675   0021FA  D7FC               	bra	u4697
  5676   0021FC  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5677   0021FE  D7FA               	bra	u4697
  5678   002200  0000               	nop	
  5679   002202                     
  5680                           ;dc_motor.c: 341:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5681   002202  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5682   002206  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5683   00220A  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5684   00220E  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5685   002212  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5686   002216  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5687   00221A  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5688   00221E  ECD1  F022         	call	_turnRight	;wreg free
  5689                           
  5690                           ;dc_motor.c: 342:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5691   002222  0E05               	movlw	5
  5692   002224  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5693   002226  0E0F               	movlw	15
  5694   002228  6E42               	movwf	??_lostReturnHome^0,c
  5695   00222A  0EF1               	movlw	241
  5696   00222C                     u4707:
  5697   00222C  2EE8               	decfsz	wreg,f,c
  5698   00222E  D7FE               	bra	u4707
  5699   002230  2E42               	decfsz	??_lostReturnHome^0,f,c
  5700   002232  D7FC               	bra	u4707
  5701   002234  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5702   002236  D7FA               	bra	u4707
  5703   002238  0000               	nop	
  5704   00223A                     
  5705                           ;dc_motor.c: 343:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5706   00223A  C032  F023         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5707   00223E  C033  F024         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5708   002242  C034  F025         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5709   002246  C035  F026         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5710   00224A  C03B  F027         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5711   00224E  C03C  F028         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5712   002252  C03D  F029         	movff	lostReturnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  5713   002256  C03E  F02A         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5714   00225A  ECE2  F021         	call	_reverseOneSquare	;wreg free
  5715   00225E  EF6D  F010         	goto	l4424
  5716   002262                     l4450:
  5717   002262  5046               	movf	lostReturnHome@i^0,w,c
  5718   002264  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5719   002266  6ED9               	movwf	fsr2l,c
  5720   002268  0E00               	movlw	0
  5721   00226A  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5722   00226C  6EDA               	movwf	fsr2h,c
  5723   00226E  0E06               	movlw	6
  5724   002270  18DE               	xorwf	postinc2,w,c
  5725   002272  A4D8               	btfss	status,2,c
  5726   002274  EF3E  F011         	goto	u3371
  5727   002278  EF40  F011         	goto	u3370
  5728   00227C                     u3371:
  5729   00227C  EF8A  F011         	goto	l4462
  5730   002280                     u3370:
  5731   002280                     
  5732                           ;dc_motor.c: 348:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5733   002280  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5734   002284  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5735   002288  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5736   00228C  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5737   002290  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5738   002294  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5739   002298  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5740   00229C  ECBE  F023         	call	_turnLeft	;wreg free
  5741   0022A0                     
  5742                           ;dc_motor.c: 349:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5743   0022A0  0E05               	movlw	5
  5744   0022A2  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5745   0022A4  0E0F               	movlw	15
  5746   0022A6  6E42               	movwf	??_lostReturnHome^0,c
  5747   0022A8  0EF1               	movlw	241
  5748   0022AA                     u4717:
  5749   0022AA  2EE8               	decfsz	wreg,f,c
  5750   0022AC  D7FE               	bra	u4717
  5751   0022AE  2E42               	decfsz	??_lostReturnHome^0,f,c
  5752   0022B0  D7FC               	bra	u4717
  5753   0022B2  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5754   0022B4  D7FA               	bra	u4717
  5755   0022B6  0000               	nop	
  5756   0022B8                     
  5757                           ;dc_motor.c: 350:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5758   0022B8  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5759   0022BC  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5760   0022C0  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5761   0022C4  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5762   0022C8  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5763   0022CC  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5764   0022D0  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5765   0022D4  ECBE  F023         	call	_turnLeft	;wreg free
  5766                           
  5767                           ;dc_motor.c: 351:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5768   0022D8  0E05               	movlw	5
  5769   0022DA  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5770   0022DC  0E0F               	movlw	15
  5771   0022DE  6E42               	movwf	??_lostReturnHome^0,c
  5772   0022E0  0EF1               	movlw	241
  5773   0022E2                     u4727:
  5774   0022E2  2EE8               	decfsz	wreg,f,c
  5775   0022E4  D7FE               	bra	u4727
  5776   0022E6  2E42               	decfsz	??_lostReturnHome^0,f,c
  5777   0022E8  D7FC               	bra	u4727
  5778   0022EA  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5779   0022EC  D7FA               	bra	u4727
  5780   0022EE  0000               	nop	
  5781   0022F0                     
  5782                           ;dc_motor.c: 352:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5783   0022F0  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5784   0022F4  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5785   0022F8  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5786   0022FC  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5787   002300  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5788   002304  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5789   002308  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5790   00230C  ECBE  F023         	call	_turnLeft	;wreg free
  5791   002310  EF6D  F010         	goto	l4424
  5792   002314                     l4462:
  5793   002314  5046               	movf	lostReturnHome@i^0,w,c
  5794   002316  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5795   002318  6ED9               	movwf	fsr2l,c
  5796   00231A  0E00               	movlw	0
  5797   00231C  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5798   00231E  6EDA               	movwf	fsr2h,c
  5799   002320  0E07               	movlw	7
  5800   002322  18DE               	xorwf	postinc2,w,c
  5801   002324  A4D8               	btfss	status,2,c
  5802   002326  EF97  F011         	goto	u3381
  5803   00232A  EF99  F011         	goto	u3380
  5804   00232E                     u3381:
  5805   00232E  EFE3  F011         	goto	l611
  5806   002332                     u3380:
  5807   002332                     
  5808                           ;dc_motor.c: 357:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5809   002332  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5810   002336  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5811   00233A  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5812   00233E  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5813   002342  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5814   002346  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5815   00234A  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5816   00234E  ECD1  F022         	call	_turnRight	;wreg free
  5817   002352                     
  5818                           ;dc_motor.c: 358:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5819   002352  0E05               	movlw	5
  5820   002354  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5821   002356  0E0F               	movlw	15
  5822   002358  6E42               	movwf	??_lostReturnHome^0,c
  5823   00235A  0EF1               	movlw	241
  5824   00235C                     u4737:
  5825   00235C  2EE8               	decfsz	wreg,f,c
  5826   00235E  D7FE               	bra	u4737
  5827   002360  2E42               	decfsz	??_lostReturnHome^0,f,c
  5828   002362  D7FC               	bra	u4737
  5829   002364  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5830   002366  D7FA               	bra	u4737
  5831   002368  0000               	nop	
  5832   00236A                     
  5833                           ;dc_motor.c: 359:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5834   00236A  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5835   00236E  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5836   002372  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5837   002376  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5838   00237A  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5839   00237E  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5840   002382  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5841   002386  ECD1  F022         	call	_turnRight	;wreg free
  5842                           
  5843                           ;dc_motor.c: 360:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5844   00238A  0E05               	movlw	5
  5845   00238C  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5846   00238E  0E0F               	movlw	15
  5847   002390  6E42               	movwf	??_lostReturnHome^0,c
  5848   002392  0EF1               	movlw	241
  5849   002394                     u4747:
  5850   002394  2EE8               	decfsz	wreg,f,c
  5851   002396  D7FE               	bra	u4747
  5852   002398  2E42               	decfsz	??_lostReturnHome^0,f,c
  5853   00239A  D7FC               	bra	u4747
  5854   00239C  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5855   00239E  D7FA               	bra	u4747
  5856   0023A0  0000               	nop	
  5857   0023A2                     
  5858                           ;dc_motor.c: 361:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5859   0023A2  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5860   0023A6  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5861   0023AA  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5862   0023AE  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5863   0023B2  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5864   0023B6  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5865   0023BA  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5866   0023BE  ECD1  F022         	call	_turnRight	;wreg free
  5867   0023C2  EF6D  F010         	goto	l4424
  5868   0023C6                     l611:
  5869   0023C6                     l605:
  5870                           
  5871                           ;dc_motor.c: 365:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  5872   0023C6  C032  F023         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  5873   0023CA  C033  F024         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  5874   0023CE  C034  F025         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  5875   0023D2  C035  F026         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  5876   0023D6  C03B  F027         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  5877   0023DA  C03E  F028         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  5878   0023DE  EC6B  F026         	call	_fullSpeedAhead	;wreg free
  5879   0023E2                     
  5880                           ;dc_motor.c: 366:         resetTimer();
  5881   0023E2  ECF3  F02A         	call	_resetTimer	;wreg free
  5882   0023E6                     l4476:
  5883   0023E6  5046               	movf	lostReturnHome@i^0,w,c
  5884   0023E8  0D02               	mullw	2
  5885   0023EA  CFF3 F042          	movff	prodl,??_lostReturnHome
  5886   0023EE  CFF4 F043          	movff	prodh,??_lostReturnHome+1
  5887   0023F2  5042               	movf	??_lostReturnHome^0,w,c
  5888   0023F4  2438               	addwf	lostReturnHome@straightTime^0,w,c
  5889   0023F6  6ED9               	movwf	fsr2l,c
  5890   0023F8  5043               	movf	(??_lostReturnHome+1)^0,w,c
  5891   0023FA  2039               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  5892   0023FC  6EDA               	movwf	fsr2h,c
  5893   0023FE  EC14  F02A         	call	_get16bitTMR0val	;wreg free
  5894   002402  50DE               	movf	postinc2,w,c
  5895   002404  5C10               	subwf	?_get16bitTMR0val^0,w,c
  5896   002406  50DE               	movf	postinc2,w,c
  5897   002408  5811               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  5898   00240A  A0D8               	btfss	status,0,c
  5899   00240C  EF0A  F012         	goto	u3391
  5900   002410  EF0C  F012         	goto	u3390
  5901   002414                     u3391:
  5902   002414  EFF3  F011         	goto	l4476
  5903   002418                     u3390:
  5904   002418                     
  5905                           ;dc_motor.c: 368:         stop(mL, mR, straightRamp);
  5906   002418  C032  F023         	movff	lostReturnHome@mL,stop@mL
  5907   00241C  C033  F024         	movff	lostReturnHome@mL+1,stop@mL+1
  5908   002420  C034  F025         	movff	lostReturnHome@mR,stop@mR
  5909   002424  C035  F026         	movff	lostReturnHome@mR+1,stop@mR+1
  5910   002428  C03E  F027         	movff	lostReturnHome@straightRamp,stop@straightRamp
  5911   00242C  ECE7  F025         	call	_stop	;wreg free
  5912   002430                     l4480:
  5913                           
  5914                           ;dc_motor.c: 301:     while (i>0) {
  5915   002430  5046               	movf	lostReturnHome@i^0,w,c
  5916   002432  A4D8               	btfss	status,2,c
  5917   002434  EF1E  F012         	goto	u3401
  5918   002438  EF20  F012         	goto	u3400
  5919   00243C                     u3401:
  5920   00243C  EF68  F00F         	goto	l4394
  5921   002440                     u3400:
  5922   002440  0012               	return		;funcret
  5923   002442                     __end_of_lostReturnHome:
  5924                           	callstack 0
  5925                           
  5926 ;; *************** function _stop *****************
  5927 ;; Defined at:
  5928 ;;		line 373 in file "dc_motor.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  5931 ;;		 -> main@motorL(10), 
  5932 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  5933 ;;		 -> main@motorR(10), 
  5934 ;;  straightRamp    1   38[COMRAM] unsigned char 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  cur_power       2   44[COMRAM] int 
  5937 ;;  i               2   42[COMRAM] int 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5947 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5949 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5950 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5951 ;;Total ram usage:       12 bytes
  5952 ;; Hardware stack levels used: 1
  5953 ;; Hardware stack levels required when called: 8
  5954 ;; This function calls:
  5955 ;;		_setMotorPWM
  5956 ;; This function is called by:
  5957 ;;		_main
  5958 ;;		_returnHome
  5959 ;;		_lostReturnHome
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text7
  5964   004BCE                     __ptext7:
  5965                           	callstack 0
  5966   004BCE                     _stop:
  5967                           	callstack 22
  5968   004BCE                     
  5969                           ;dc_motor.c: 373: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 374: {;dc_motor.c: 375:     mL->direction = 1;
  5970   004BCE  EE20 F001          	lfsr	2,1
  5971   004BD2  5023               	movf	stop@mL^0,w,c
  5972   004BD4  26D9               	addwf	fsr2l,f,c
  5973   004BD6  5024               	movf	(stop@mL+1)^0,w,c
  5974   004BD8  22DA               	addwfc	fsr2h,f,c
  5975   004BDA  0E01               	movlw	1
  5976   004BDC  6EDF               	movwf	indf2,c
  5977                           
  5978                           ;dc_motor.c: 376:     mR->direction = 1;
  5979   004BDE  EE20 F001          	lfsr	2,1
  5980   004BE2  5025               	movf	stop@mR^0,w,c
  5981   004BE4  26D9               	addwf	fsr2l,f,c
  5982   004BE6  5026               	movf	(stop@mR+1)^0,w,c
  5983   004BE8  22DA               	addwfc	fsr2h,f,c
  5984   004BEA  0E01               	movlw	1
  5985   004BEC  6EDF               	movwf	indf2,c
  5986                           
  5987                           ;dc_motor.c: 377:     int i;;dc_motor.c: 378:     int cur_power;;dc_motor.c: 379:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  5988   004BEE  C023  FFD9         	movff	stop@mL,fsr2l
  5989   004BF2  C024  FFDA         	movff	stop@mL+1,fsr2h
  5990   004BF6  50DF               	movf	indf2,w,c
  5991   004BF8  6E28               	movwf	??_stop^0,c
  5992   004BFA  EE20 F009          	lfsr	2,9
  5993   004BFE  5023               	movf	stop@mL^0,w,c
  5994   004C00  26D9               	addwf	fsr2l,f,c
  5995   004C02  5024               	movf	(stop@mL+1)^0,w,c
  5996   004C04  22DA               	addwfc	fsr2h,f,c
  5997   004C06  50DF               	movf	indf2,w,c
  5998   004C08  6E29               	movwf	(??_stop+1)^0,c
  5999   004C0A  5029               	movf	(??_stop+1)^0,w,c
  6000   004C0C  5C28               	subwf	??_stop^0,w,c
  6001   004C0E  6E2D               	movwf	stop@cur_power^0,c
  6002   004C10  6A2E               	clrf	(stop@cur_power+1)^0,c
  6003   004C12  A0D8               	btfss	status,0,c
  6004   004C14  062E               	decf	(stop@cur_power+1)^0,f,c
  6005   004C16                     l3194:
  6006   004C16  BE2E               	btfsc	(stop@cur_power+1)^0,7,c
  6007   004C18  EF12  F026         	goto	u1980
  6008   004C1C  EF10  F026         	goto	u1981
  6009   004C20                     u1981:
  6010   004C20  EF14  F026         	goto	l3198
  6011   004C24                     u1980:
  6012   004C24  EF60  F026         	goto	l3214
  6013   004C28                     l3198:
  6014                           
  6015                           ;dc_motor.c: 380:         mL->power = cur_power+mL->compensation;
  6016   004C28  EE20 F009          	lfsr	2,9
  6017   004C2C  5023               	movf	stop@mL^0,w,c
  6018   004C2E  26D9               	addwf	fsr2l,f,c
  6019   004C30  5024               	movf	(stop@mL+1)^0,w,c
  6020   004C32  22DA               	addwfc	fsr2h,f,c
  6021   004C34  50DF               	movf	indf2,w,c
  6022   004C36  242D               	addwf	stop@cur_power^0,w,c
  6023   004C38  C023  FFD9         	movff	stop@mL,fsr2l
  6024   004C3C  C024  FFDA         	movff	stop@mL+1,fsr2h
  6025   004C40  6EDF               	movwf	indf2,c
  6026                           
  6027                           ;dc_motor.c: 381:         mR->power = cur_power+mR->compensation;
  6028   004C42  EE20 F009          	lfsr	2,9
  6029   004C46  5025               	movf	stop@mR^0,w,c
  6030   004C48  26D9               	addwf	fsr2l,f,c
  6031   004C4A  5026               	movf	(stop@mR+1)^0,w,c
  6032   004C4C  22DA               	addwfc	fsr2h,f,c
  6033   004C4E  50DF               	movf	indf2,w,c
  6034   004C50  242D               	addwf	stop@cur_power^0,w,c
  6035   004C52  C025  FFD9         	movff	stop@mR,fsr2l
  6036   004C56  C026  FFDA         	movff	stop@mR+1,fsr2h
  6037   004C5A  6EDF               	movwf	indf2,c
  6038   004C5C                     
  6039                           ;dc_motor.c: 382:         setMotorPWM(mL);
  6040   004C5C  C023  F01D         	movff	stop@mL,setMotorPWM@m
  6041   004C60  C024  F01E         	movff	stop@mL+1,setMotorPWM@m+1
  6042   004C64  ECAB  F024         	call	_setMotorPWM	;wreg free
  6043   004C68                     
  6044                           ;dc_motor.c: 383:         setMotorPWM(mR);
  6045   004C68  C025  F01D         	movff	stop@mR,setMotorPWM@m
  6046   004C6C  C026  F01E         	movff	stop@mR+1,setMotorPWM@m+1
  6047   004C70  ECAB  F024         	call	_setMotorPWM	;wreg free
  6048   004C74                     
  6049                           ;dc_motor.c: 384:         for (i=0;i<straightRamp;i++) {
  6050   004C74  0E00               	movlw	0
  6051   004C76  6E2C               	movwf	(stop@i+1)^0,c
  6052   004C78  0E00               	movlw	0
  6053   004C7A  6E2B               	movwf	stop@i^0,c
  6054   004C7C  EF49  F026         	goto	l626
  6055   004C80                     l3206:
  6056                           
  6057                           ;dc_motor.c: 385:             _delay((unsigned long)((10)*(64000000/4000.0)));
  6058   004C80  0ED0               	movlw	208
  6059   004C82  6E28               	movwf	??_stop^0,c
  6060   004C84  0ECA               	movlw	202
  6061   004C86                     u4757:
  6062   004C86  2EE8               	decfsz	wreg,f,c
  6063   004C88  D7FE               	bra	u4757
  6064   004C8A  2E28               	decfsz	??_stop^0,f,c
  6065   004C8C  D7FC               	bra	u4757
  6066   004C8E                     
  6067                           ;dc_motor.c: 386:         }
  6068   004C8E  4A2B               	infsnz	stop@i^0,f,c
  6069   004C90  2A2C               	incf	(stop@i+1)^0,f,c
  6070   004C92                     l626:
  6071   004C92  5027               	movf	stop@straightRamp^0,w,c
  6072   004C94  6E28               	movwf	??_stop^0,c
  6073   004C96  6A29               	clrf	(??_stop+1)^0,c
  6074   004C98  5028               	movf	??_stop^0,w,c
  6075   004C9A  5C2B               	subwf	stop@i^0,w,c
  6076   004C9C  502C               	movf	(stop@i+1)^0,w,c
  6077   004C9E  0A80               	xorlw	128
  6078   004CA0  6E2A               	movwf	(??_stop+2)^0,c
  6079   004CA2  5029               	movf	(??_stop+1)^0,w,c
  6080   004CA4  0A80               	xorlw	128
  6081   004CA6  582A               	subwfb	(??_stop+2)^0,w,c
  6082   004CA8  A0D8               	btfss	status,0,c
  6083   004CAA  EF59  F026         	goto	u1991
  6084   004CAE  EF5B  F026         	goto	u1990
  6085   004CB2                     u1991:
  6086   004CB2  EF40  F026         	goto	l3206
  6087   004CB6                     u1990:
  6088   004CB6                     
  6089                           ;dc_motor.c: 387:     }
  6090   004CB6  062D               	decf	stop@cur_power^0,f,c
  6091   004CB8  A0D8               	btfss	status,0,c
  6092   004CBA  062E               	decf	(stop@cur_power+1)^0,f,c
  6093   004CBC  EF0B  F026         	goto	l3194
  6094   004CC0                     l3214:
  6095                           
  6096                           ;dc_motor.c: 388:     mL->power = 0;
  6097   004CC0  C023  FFD9         	movff	stop@mL,fsr2l
  6098   004CC4  C024  FFDA         	movff	stop@mL+1,fsr2h
  6099   004CC8  6ADF               	clrf	indf2,c
  6100                           
  6101                           ;dc_motor.c: 389:     mR->power = 0;
  6102   004CCA  C025  FFD9         	movff	stop@mR,fsr2l
  6103   004CCE  C026  FFDA         	movff	stop@mR+1,fsr2h
  6104   004CD2  6ADF               	clrf	indf2,c
  6105   004CD4  0012               	return		;funcret
  6106   004CD6                     __end_of_stop:
  6107                           	callstack 0
  6108                           
  6109 ;; *************** function _reverseOneSquare *****************
  6110 ;; Defined at:
  6111 ;;		line 474 in file "dc_motor.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  6114 ;;		 -> main@motorL(10), 
  6115 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  6116 ;;		 -> main@motorR(10), 
  6117 ;;  straightSpee    1   38[COMRAM] unsigned char 
  6118 ;;  reverseDurat    2   39[COMRAM] unsigned int 
  6119 ;;  straightRamp    1   41[COMRAM] unsigned char 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  cur_power       2   47[COMRAM] int 
  6122 ;;  i               2   45[COMRAM] int 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6132 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6135 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6136 ;;Total ram usage:       15 bytes
  6137 ;; Hardware stack levels used: 1
  6138 ;; Hardware stack levels required when called: 8
  6139 ;; This function calls:
  6140 ;;		_setMotorPWM
  6141 ;; This function is called by:
  6142 ;;		_move
  6143 ;;		_returnHome
  6144 ;;		_lostReturnHome
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text8
  6149   0043C4                     __ptext8:
  6150                           	callstack 0
  6151   0043C4                     _reverseOneSquare:
  6152                           	callstack 21
  6153   0043C4                     
  6154                           ;dc_motor.c: 474: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned int reverseDuration, unsigned char straightRamp);dc_motor.c: 475: {;dc_motor.c:
      +                           476:     mL->direction = 0;
  6155   0043C4  EE20 F001          	lfsr	2,1
  6156   0043C8  5023               	movf	reverseOneSquare@mL^0,w,c
  6157   0043CA  26D9               	addwf	fsr2l,f,c
  6158   0043CC  5024               	movf	(reverseOneSquare@mL+1)^0,w,c
  6159   0043CE  22DA               	addwfc	fsr2h,f,c
  6160   0043D0  6ADF               	clrf	indf2,c
  6161                           
  6162                           ;dc_motor.c: 477:     mR->direction = 0;
  6163   0043D2  EE20 F001          	lfsr	2,1
  6164   0043D6  5025               	movf	reverseOneSquare@mR^0,w,c
  6165   0043D8  26D9               	addwf	fsr2l,f,c
  6166   0043DA  5026               	movf	(reverseOneSquare@mR+1)^0,w,c
  6167   0043DC  22DA               	addwfc	fsr2h,f,c
  6168   0043DE  6ADF               	clrf	indf2,c
  6169   0043E0                     
  6170                           ;dc_motor.c: 478:     int i;;dc_motor.c: 479:     int cur_power;;dc_motor.c: 480:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  6171   0043E0  0E00               	movlw	0
  6172   0043E2  6E31               	movwf	(reverseOneSquare@cur_power+1)^0,c
  6173   0043E4  0E01               	movlw	1
  6174   0043E6  6E30               	movwf	reverseOneSquare@cur_power^0,c
  6175   0043E8  EF40  F022         	goto	l3358
  6176   0043EC                     l3344:
  6177                           
  6178                           ;dc_motor.c: 481:         mL->power = cur_power+mL->compensation;
  6179   0043EC  EE20 F009          	lfsr	2,9
  6180   0043F0  5023               	movf	reverseOneSquare@mL^0,w,c
  6181   0043F2  26D9               	addwf	fsr2l,f,c
  6182   0043F4  5024               	movf	(reverseOneSquare@mL+1)^0,w,c
  6183   0043F6  22DA               	addwfc	fsr2h,f,c
  6184   0043F8  50DF               	movf	indf2,w,c
  6185   0043FA  2430               	addwf	reverseOneSquare@cur_power^0,w,c
  6186   0043FC  C023  FFD9         	movff	reverseOneSquare@mL,fsr2l
  6187   004400  C024  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  6188   004404  6EDF               	movwf	indf2,c
  6189                           
  6190                           ;dc_motor.c: 482:         mR->power = cur_power+mR->compensation;
  6191   004406  EE20 F009          	lfsr	2,9
  6192   00440A  5025               	movf	reverseOneSquare@mR^0,w,c
  6193   00440C  26D9               	addwf	fsr2l,f,c
  6194   00440E  5026               	movf	(reverseOneSquare@mR+1)^0,w,c
  6195   004410  22DA               	addwfc	fsr2h,f,c
  6196   004412  50DF               	movf	indf2,w,c
  6197   004414  2430               	addwf	reverseOneSquare@cur_power^0,w,c
  6198   004416  C025  FFD9         	movff	reverseOneSquare@mR,fsr2l
  6199   00441A  C026  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  6200   00441E  6EDF               	movwf	indf2,c
  6201   004420                     
  6202                           ;dc_motor.c: 483:         setMotorPWM(mL);
  6203   004420  C023  F01D         	movff	reverseOneSquare@mL,setMotorPWM@m
  6204   004424  C024  F01E         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  6205   004428  ECAB  F024         	call	_setMotorPWM	;wreg free
  6206   00442C                     
  6207                           ;dc_motor.c: 484:         setMotorPWM(mR);
  6208   00442C  C025  F01D         	movff	reverseOneSquare@mR,setMotorPWM@m
  6209   004430  C026  F01E         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  6210   004434  ECAB  F024         	call	_setMotorPWM	;wreg free
  6211   004438                     
  6212                           ;dc_motor.c: 485:         for (i=0;i<straightRamp;i++) {
  6213   004438  0E00               	movlw	0
  6214   00443A  6E2F               	movwf	(reverseOneSquare@i+1)^0,c
  6215   00443C  0E00               	movlw	0
  6216   00443E  6E2E               	movwf	reverseOneSquare@i^0,c
  6217   004440  EF2C  F022         	goto	l677
  6218   004444                     l3352:
  6219                           
  6220                           ;dc_motor.c: 486:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6221   004444  0E68               	movlw	104
  6222   004446  6E2B               	movwf	??_reverseOneSquare^0,c
  6223   004448  0EE4               	movlw	228
  6224   00444A                     u4767:
  6225   00444A  2EE8               	decfsz	wreg,f,c
  6226   00444C  D7FE               	bra	u4767
  6227   00444E  2E2B               	decfsz	??_reverseOneSquare^0,f,c
  6228   004450  D7FC               	bra	u4767
  6229   004452  D000               	nop2	
  6230   004454                     
  6231                           ;dc_motor.c: 487:         }
  6232   004454  4A2E               	infsnz	reverseOneSquare@i^0,f,c
  6233   004456  2A2F               	incf	(reverseOneSquare@i+1)^0,f,c
  6234   004458                     l677:
  6235   004458  502A               	movf	reverseOneSquare@straightRamp^0,w,c
  6236   00445A  6E2B               	movwf	??_reverseOneSquare^0,c
  6237   00445C  6A2C               	clrf	(??_reverseOneSquare+1)^0,c
  6238   00445E  502B               	movf	??_reverseOneSquare^0,w,c
  6239   004460  5C2E               	subwf	reverseOneSquare@i^0,w,c
  6240   004462  502F               	movf	(reverseOneSquare@i+1)^0,w,c
  6241   004464  0A80               	xorlw	128
  6242   004466  6E2D               	movwf	(??_reverseOneSquare+2)^0,c
  6243   004468  502C               	movf	(??_reverseOneSquare+1)^0,w,c
  6244   00446A  0A80               	xorlw	128
  6245   00446C  582D               	subwfb	(??_reverseOneSquare+2)^0,w,c
  6246   00446E  A0D8               	btfss	status,0,c
  6247   004470  EF3C  F022         	goto	u2141
  6248   004474  EF3E  F022         	goto	u2140
  6249   004478                     u2141:
  6250   004478  EF22  F022         	goto	l3352
  6251   00447C                     u2140:
  6252   00447C                     
  6253                           ;dc_motor.c: 488:     }
  6254   00447C  4A30               	infsnz	reverseOneSquare@cur_power^0,f,c
  6255   00447E  2A31               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  6256   004480                     l3358:
  6257   004480  5027               	movf	reverseOneSquare@straightSpeed^0,w,c
  6258   004482  6E2B               	movwf	??_reverseOneSquare^0,c
  6259   004484  6A2C               	clrf	(??_reverseOneSquare+1)^0,c
  6260   004486  5030               	movf	reverseOneSquare@cur_power^0,w,c
  6261   004488  5C2B               	subwf	??_reverseOneSquare^0,w,c
  6262   00448A  502C               	movf	(??_reverseOneSquare+1)^0,w,c
  6263   00448C  0A80               	xorlw	128
  6264   00448E  6E2D               	movwf	(??_reverseOneSquare+2)^0,c
  6265   004490  5031               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  6266   004492  0A80               	xorlw	128
  6267   004494  582D               	subwfb	(??_reverseOneSquare+2)^0,w,c
  6268   004496  B0D8               	btfsc	status,0,c
  6269   004498  EF50  F022         	goto	u2151
  6270   00449C  EF52  F022         	goto	u2150
  6271   0044A0                     u2151:
  6272   0044A0  EFF6  F021         	goto	l3344
  6273   0044A4                     u2150:
  6274   0044A4                     
  6275                           ;dc_motor.c: 490:     for (i=0;i<reverseDuration;i++) {
  6276   0044A4  0E00               	movlw	0
  6277   0044A6  6E2F               	movwf	(reverseOneSquare@i+1)^0,c
  6278   0044A8  0E00               	movlw	0
  6279   0044AA  6E2E               	movwf	reverseOneSquare@i^0,c
  6280   0044AC  EF62  F022         	goto	l681
  6281   0044B0                     l3362:
  6282                           
  6283                           ;dc_motor.c: 491:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6284   0044B0  0E68               	movlw	104
  6285   0044B2  6E2B               	movwf	??_reverseOneSquare^0,c
  6286   0044B4  0EE4               	movlw	228
  6287   0044B6                     u4777:
  6288   0044B6  2EE8               	decfsz	wreg,f,c
  6289   0044B8  D7FE               	bra	u4777
  6290   0044BA  2E2B               	decfsz	??_reverseOneSquare^0,f,c
  6291   0044BC  D7FC               	bra	u4777
  6292   0044BE  D000               	nop2	
  6293   0044C0                     
  6294                           ;dc_motor.c: 492:         }
  6295   0044C0  4A2E               	infsnz	reverseOneSquare@i^0,f,c
  6296   0044C2  2A2F               	incf	(reverseOneSquare@i+1)^0,f,c
  6297   0044C4                     l681:
  6298   0044C4  5028               	movf	reverseOneSquare@reverseDuration^0,w,c
  6299   0044C6  5C2E               	subwf	reverseOneSquare@i^0,w,c
  6300   0044C8  5029               	movf	(reverseOneSquare@reverseDuration+1)^0,w,c
  6301   0044CA  582F               	subwfb	(reverseOneSquare@i+1)^0,w,c
  6302   0044CC  A0D8               	btfss	status,0,c
  6303   0044CE  EF6B  F022         	goto	u2161
  6304   0044D2  EF6D  F022         	goto	u2160
  6305   0044D6                     u2161:
  6306   0044D6  EF58  F022         	goto	l3362
  6307   0044DA                     u2160:
  6308   0044DA                     
  6309                           ;dc_motor.c: 494:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  6310   0044DA  C027  F030         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  6311   0044DE  6A31               	clrf	(reverseOneSquare@cur_power+1)^0,c
  6312   0044E0                     l3366:
  6313   0044E0  BE31               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  6314   0044E2  EF77  F022         	goto	u2170
  6315   0044E6  EF75  F022         	goto	u2171
  6316   0044EA                     u2171:
  6317   0044EA  EF79  F022         	goto	l3370
  6318   0044EE                     u2170:
  6319   0044EE  EFC6  F022         	goto	l3386
  6320   0044F2                     l3370:
  6321                           
  6322                           ;dc_motor.c: 495:         mL->power = cur_power+mL->compensation;
  6323   0044F2  EE20 F009          	lfsr	2,9
  6324   0044F6  5023               	movf	reverseOneSquare@mL^0,w,c
  6325   0044F8  26D9               	addwf	fsr2l,f,c
  6326   0044FA  5024               	movf	(reverseOneSquare@mL+1)^0,w,c
  6327   0044FC  22DA               	addwfc	fsr2h,f,c
  6328   0044FE  50DF               	movf	indf2,w,c
  6329   004500  2430               	addwf	reverseOneSquare@cur_power^0,w,c
  6330   004502  C023  FFD9         	movff	reverseOneSquare@mL,fsr2l
  6331   004506  C024  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  6332   00450A  6EDF               	movwf	indf2,c
  6333                           
  6334                           ;dc_motor.c: 496:         mR->power = cur_power+mR->compensation;
  6335   00450C  EE20 F009          	lfsr	2,9
  6336   004510  5025               	movf	reverseOneSquare@mR^0,w,c
  6337   004512  26D9               	addwf	fsr2l,f,c
  6338   004514  5026               	movf	(reverseOneSquare@mR+1)^0,w,c
  6339   004516  22DA               	addwfc	fsr2h,f,c
  6340   004518  50DF               	movf	indf2,w,c
  6341   00451A  2430               	addwf	reverseOneSquare@cur_power^0,w,c
  6342   00451C  C025  FFD9         	movff	reverseOneSquare@mR,fsr2l
  6343   004520  C026  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  6344   004524  6EDF               	movwf	indf2,c
  6345   004526                     
  6346                           ;dc_motor.c: 497:         setMotorPWM(mL);
  6347   004526  C023  F01D         	movff	reverseOneSquare@mL,setMotorPWM@m
  6348   00452A  C024  F01E         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  6349   00452E  ECAB  F024         	call	_setMotorPWM	;wreg free
  6350   004532                     
  6351                           ;dc_motor.c: 498:         setMotorPWM(mR);
  6352   004532  C025  F01D         	movff	reverseOneSquare@mR,setMotorPWM@m
  6353   004536  C026  F01E         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  6354   00453A  ECAB  F024         	call	_setMotorPWM	;wreg free
  6355   00453E                     
  6356                           ;dc_motor.c: 499:         for (i=0;i<straightRamp;i++) {
  6357   00453E  0E00               	movlw	0
  6358   004540  6E2F               	movwf	(reverseOneSquare@i+1)^0,c
  6359   004542  0E00               	movlw	0
  6360   004544  6E2E               	movwf	reverseOneSquare@i^0,c
  6361   004546  EFAF  F022         	goto	l686
  6362   00454A                     l3378:
  6363                           
  6364                           ;dc_motor.c: 500:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6365   00454A  0E68               	movlw	104
  6366   00454C  6E2B               	movwf	??_reverseOneSquare^0,c
  6367   00454E  0EE4               	movlw	228
  6368   004550                     u4787:
  6369   004550  2EE8               	decfsz	wreg,f,c
  6370   004552  D7FE               	bra	u4787
  6371   004554  2E2B               	decfsz	??_reverseOneSquare^0,f,c
  6372   004556  D7FC               	bra	u4787
  6373   004558  D000               	nop2	
  6374   00455A                     
  6375                           ;dc_motor.c: 501:         }
  6376   00455A  4A2E               	infsnz	reverseOneSquare@i^0,f,c
  6377   00455C  2A2F               	incf	(reverseOneSquare@i+1)^0,f,c
  6378   00455E                     l686:
  6379   00455E  502A               	movf	reverseOneSquare@straightRamp^0,w,c
  6380   004560  6E2B               	movwf	??_reverseOneSquare^0,c
  6381   004562  6A2C               	clrf	(??_reverseOneSquare+1)^0,c
  6382   004564  502B               	movf	??_reverseOneSquare^0,w,c
  6383   004566  5C2E               	subwf	reverseOneSquare@i^0,w,c
  6384   004568  502F               	movf	(reverseOneSquare@i+1)^0,w,c
  6385   00456A  0A80               	xorlw	128
  6386   00456C  6E2D               	movwf	(??_reverseOneSquare+2)^0,c
  6387   00456E  502C               	movf	(??_reverseOneSquare+1)^0,w,c
  6388   004570  0A80               	xorlw	128
  6389   004572  582D               	subwfb	(??_reverseOneSquare+2)^0,w,c
  6390   004574  A0D8               	btfss	status,0,c
  6391   004576  EFBF  F022         	goto	u2181
  6392   00457A  EFC1  F022         	goto	u2180
  6393   00457E                     u2181:
  6394   00457E  EFA5  F022         	goto	l3378
  6395   004582                     u2180:
  6396   004582                     
  6397                           ;dc_motor.c: 502:     }
  6398   004582  0630               	decf	reverseOneSquare@cur_power^0,f,c
  6399   004584  A0D8               	btfss	status,0,c
  6400   004586  0631               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  6401   004588  EF70  F022         	goto	l3366
  6402   00458C                     l3386:
  6403                           
  6404                           ;dc_motor.c: 503:     mL->power = 0;
  6405   00458C  C023  FFD9         	movff	reverseOneSquare@mL,fsr2l
  6406   004590  C024  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  6407   004594  6ADF               	clrf	indf2,c
  6408                           
  6409                           ;dc_motor.c: 504:     mR->power = 0;
  6410   004596  C025  FFD9         	movff	reverseOneSquare@mR,fsr2l
  6411   00459A  C026  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  6412   00459E  6ADF               	clrf	indf2,c
  6413   0045A0  0012               	return		;funcret
  6414   0045A2                     __end_of_reverseOneSquare:
  6415                           	callstack 0
  6416                           
  6417 ;; *************** function _resetTimer *****************
  6418 ;; Defined at:
  6419 ;;		line 23 in file "timers.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;		None
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;		None
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  1    wreg      void 
  6426 ;; Registers used:
  6427 ;;		wreg, status,2
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6437 ;;Total ram usage:        0 bytes
  6438 ;; Hardware stack levels used: 1
  6439 ;; Hardware stack levels required when called: 6
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		_main
  6444 ;;		_returnHome
  6445 ;;		_lostReturnHome
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text9
  6450   0055E6                     __ptext9:
  6451                           	callstack 0
  6452   0055E6                     _resetTimer:
  6453                           	callstack 24
  6454   0055E6                     
  6455                           ;timers.c: 25:     TMR0H=0;
  6456   0055E6  0E00               	movlw	0
  6457   0055E8  6ED4               	movwf	212,c	;volatile
  6458                           
  6459                           ;timers.c: 26:     TMR0L=0;
  6460   0055EA  0E00               	movlw	0
  6461   0055EC  6ED3               	movwf	211,c	;volatile
  6462   0055EE  0012               	return		;funcret
  6463   0055F0                     __end_of_resetTimer:
  6464                           	callstack 0
  6465                           
  6466 ;; *************** function _get16bitTMR0val *****************
  6467 ;; Defined at:
  6468 ;;		line 33 in file "timers.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;		None
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  timer_val       2   23[COMRAM] unsigned int 
  6473 ;;  timer_high      2   21[COMRAM] unsigned int 
  6474 ;;  timer_low       2   19[COMRAM] unsigned int 
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  2   15[COMRAM] unsigned int 
  6477 ;; Registers used:
  6478 ;;		wreg, status,2, status,0
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6485 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6487 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6488 ;;Total ram usage:       10 bytes
  6489 ;; Hardware stack levels used: 1
  6490 ;; Hardware stack levels required when called: 6
  6491 ;; This function calls:
  6492 ;;		Nothing
  6493 ;; This function is called by:
  6494 ;;		_main
  6495 ;;		_returnHome
  6496 ;;		_lostReturnHome
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text10
  6501   005428                     __ptext10:
  6502                           	callstack 0
  6503   005428                     _get16bitTMR0val:
  6504                           	callstack 22
  6505   005428                     
  6506                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  6507   005428  CFD3 F014          	movff	4051,get16bitTMR0val@timer_low	;volatile
  6508   00542C  6A15               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  6509                           
  6510                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  6511   00542E  CFD4 F016          	movff	4052,get16bitTMR0val@timer_high	;volatile
  6512   005432  6A17               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  6513   005434                     
  6514                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  6515   005434  5016               	movf	get16bitTMR0val@timer_high^0,w,c
  6516   005436  6E13               	movwf	(??_get16bitTMR0val+1)^0,c
  6517   005438  6A12               	clrf	??_get16bitTMR0val^0,c
  6518   00543A  5014               	movf	get16bitTMR0val@timer_low^0,w,c
  6519   00543C  1012               	iorwf	??_get16bitTMR0val^0,w,c
  6520   00543E  6E18               	movwf	get16bitTMR0val@timer_val^0,c
  6521   005440  5015               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  6522   005442  1013               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  6523   005444  6E19               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  6524   005446                     
  6525                           ;timers.c: 39:     return timer_val;
  6526   005446  C018  F010         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  6527   00544A  C019  F011         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  6528   00544E  0012               	return		;funcret
  6529   005450                     __end_of_get16bitTMR0val:
  6530                           	callstack 0
  6531                           
  6532 ;; *************** function _fullSpeedAhead *****************
  6533 ;; Defined at:
  6534 ;;		line 457 in file "dc_motor.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  6537 ;;		 -> main@motorL(10), 
  6538 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  6539 ;;		 -> main@motorR(10), 
  6540 ;;  straightSpee    1   38[COMRAM] unsigned char 
  6541 ;;  straightRamp    1   39[COMRAM] unsigned char 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  cur_power       2   45[COMRAM] int 
  6544 ;;  i               2   43[COMRAM] int 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  1    wreg      void 
  6547 ;; Registers used:
  6548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6554 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6555 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6556 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6557 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6558 ;;Total ram usage:       13 bytes
  6559 ;; Hardware stack levels used: 1
  6560 ;; Hardware stack levels required when called: 8
  6561 ;; This function calls:
  6562 ;;		_setMotorPWM
  6563 ;; This function is called by:
  6564 ;;		_main
  6565 ;;		_move
  6566 ;;		_returnHome
  6567 ;;		_lostReturnHome
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text11
  6572   004CD6                     __ptext11:
  6573                           	callstack 0
  6574   004CD6                     _fullSpeedAhead:
  6575                           	callstack 20
  6576   004CD6                     
  6577                           ;dc_motor.c: 457: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 458: {;dc_motor.c: 459:     mL->direction = 1;
  6578   004CD6  EE20 F001          	lfsr	2,1
  6579   004CDA  5023               	movf	fullSpeedAhead@mL^0,w,c
  6580   004CDC  26D9               	addwf	fsr2l,f,c
  6581   004CDE  5024               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6582   004CE0  22DA               	addwfc	fsr2h,f,c
  6583   004CE2  0E01               	movlw	1
  6584   004CE4  6EDF               	movwf	indf2,c
  6585                           
  6586                           ;dc_motor.c: 460:     mR->direction = 1;
  6587   004CE6  EE20 F001          	lfsr	2,1
  6588   004CEA  5025               	movf	fullSpeedAhead@mR^0,w,c
  6589   004CEC  26D9               	addwf	fsr2l,f,c
  6590   004CEE  5026               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6591   004CF0  22DA               	addwfc	fsr2h,f,c
  6592   004CF2  0E01               	movlw	1
  6593   004CF4  6EDF               	movwf	indf2,c
  6594   004CF6                     
  6595                           ;dc_motor.c: 461:     int i;;dc_motor.c: 462:     int cur_power;;dc_motor.c: 463:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  6596   004CF6  0E00               	movlw	0
  6597   004CF8  6E2F               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  6598   004CFA  0E01               	movlw	1
  6599   004CFC  6E2E               	movwf	fullSpeedAhead@cur_power^0,c
  6600   004CFE  EFCB  F026         	goto	l3182
  6601   004D02                     l3168:
  6602                           
  6603                           ;dc_motor.c: 464:         mL->power = cur_power+mL->compensation;
  6604   004D02  EE20 F009          	lfsr	2,9
  6605   004D06  5023               	movf	fullSpeedAhead@mL^0,w,c
  6606   004D08  26D9               	addwf	fsr2l,f,c
  6607   004D0A  5024               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6608   004D0C  22DA               	addwfc	fsr2h,f,c
  6609   004D0E  50DF               	movf	indf2,w,c
  6610   004D10  242E               	addwf	fullSpeedAhead@cur_power^0,w,c
  6611   004D12  C023  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6612   004D16  C024  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6613   004D1A  6EDF               	movwf	indf2,c
  6614                           
  6615                           ;dc_motor.c: 465:         mR->power = cur_power+mR->compensation;
  6616   004D1C  EE20 F009          	lfsr	2,9
  6617   004D20  5025               	movf	fullSpeedAhead@mR^0,w,c
  6618   004D22  26D9               	addwf	fsr2l,f,c
  6619   004D24  5026               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6620   004D26  22DA               	addwfc	fsr2h,f,c
  6621   004D28  50DF               	movf	indf2,w,c
  6622   004D2A  242E               	addwf	fullSpeedAhead@cur_power^0,w,c
  6623   004D2C  C025  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6624   004D30  C026  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6625   004D34  6EDF               	movwf	indf2,c
  6626   004D36                     
  6627                           ;dc_motor.c: 466:         setMotorPWM(mL);
  6628   004D36  C023  F01D         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6629   004D3A  C024  F01E         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6630   004D3E  ECAB  F024         	call	_setMotorPWM	;wreg free
  6631   004D42                     
  6632                           ;dc_motor.c: 467:         setMotorPWM(mR);
  6633   004D42  C025  F01D         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6634   004D46  C026  F01E         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6635   004D4A  ECAB  F024         	call	_setMotorPWM	;wreg free
  6636   004D4E                     
  6637                           ;dc_motor.c: 468:         for (i=0;i<straightRamp;i++) {
  6638   004D4E  0E00               	movlw	0
  6639   004D50  6E2D               	movwf	(fullSpeedAhead@i+1)^0,c
  6640   004D52  0E00               	movlw	0
  6641   004D54  6E2C               	movwf	fullSpeedAhead@i^0,c
  6642   004D56  EFB7  F026         	goto	l668
  6643   004D5A                     l3176:
  6644                           
  6645                           ;dc_motor.c: 469:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6646   004D5A  0E68               	movlw	104
  6647   004D5C  6E29               	movwf	??_fullSpeedAhead^0,c
  6648   004D5E  0EE4               	movlw	228
  6649   004D60                     u4797:
  6650   004D60  2EE8               	decfsz	wreg,f,c
  6651   004D62  D7FE               	bra	u4797
  6652   004D64  2E29               	decfsz	??_fullSpeedAhead^0,f,c
  6653   004D66  D7FC               	bra	u4797
  6654   004D68  D000               	nop2	
  6655   004D6A                     
  6656                           ;dc_motor.c: 470:         }
  6657   004D6A  4A2C               	infsnz	fullSpeedAhead@i^0,f,c
  6658   004D6C  2A2D               	incf	(fullSpeedAhead@i+1)^0,f,c
  6659   004D6E                     l668:
  6660   004D6E  5028               	movf	fullSpeedAhead@straightRamp^0,w,c
  6661   004D70  6E29               	movwf	??_fullSpeedAhead^0,c
  6662   004D72  6A2A               	clrf	(??_fullSpeedAhead+1)^0,c
  6663   004D74  5029               	movf	??_fullSpeedAhead^0,w,c
  6664   004D76  5C2C               	subwf	fullSpeedAhead@i^0,w,c
  6665   004D78  502D               	movf	(fullSpeedAhead@i+1)^0,w,c
  6666   004D7A  0A80               	xorlw	128
  6667   004D7C  6E2B               	movwf	(??_fullSpeedAhead+2)^0,c
  6668   004D7E  502A               	movf	(??_fullSpeedAhead+1)^0,w,c
  6669   004D80  0A80               	xorlw	128
  6670   004D82  582B               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6671   004D84  A0D8               	btfss	status,0,c
  6672   004D86  EFC7  F026         	goto	u1961
  6673   004D8A  EFC9  F026         	goto	u1960
  6674   004D8E                     u1961:
  6675   004D8E  EFAD  F026         	goto	l3176
  6676   004D92                     u1960:
  6677   004D92                     
  6678                           ;dc_motor.c: 471:     }
  6679   004D92  4A2E               	infsnz	fullSpeedAhead@cur_power^0,f,c
  6680   004D94  2A2F               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  6681   004D96                     l3182:
  6682   004D96  5027               	movf	fullSpeedAhead@straightSpeed^0,w,c
  6683   004D98  6E29               	movwf	??_fullSpeedAhead^0,c
  6684   004D9A  6A2A               	clrf	(??_fullSpeedAhead+1)^0,c
  6685   004D9C  502E               	movf	fullSpeedAhead@cur_power^0,w,c
  6686   004D9E  5C29               	subwf	??_fullSpeedAhead^0,w,c
  6687   004DA0  502A               	movf	(??_fullSpeedAhead+1)^0,w,c
  6688   004DA2  0A80               	xorlw	128
  6689   004DA4  6E2B               	movwf	(??_fullSpeedAhead+2)^0,c
  6690   004DA6  502F               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  6691   004DA8  0A80               	xorlw	128
  6692   004DAA  582B               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6693   004DAC  B0D8               	btfsc	status,0,c
  6694   004DAE  EFDB  F026         	goto	u1971
  6695   004DB2  EFDD  F026         	goto	u1970
  6696   004DB6                     u1971:
  6697   004DB6  EF81  F026         	goto	l3168
  6698   004DBA                     u1970:
  6699   004DBA  0012               	return		;funcret
  6700   004DBC                     __end_of_fullSpeedAhead:
  6701                           	callstack 0
  6702                           
  6703 ;; *************** function _initUSART4 *****************
  6704 ;; Defined at:
  6705 ;;		line 4 in file "serial.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;		None
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;		None
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;Total ram usage:        0 bytes
  6724 ;; Hardware stack levels used: 1
  6725 ;; Hardware stack levels required when called: 6
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_main
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text12
  6734   00556C                     __ptext12:
  6735                           	callstack 0
  6736   00556C                     _initUSART4:
  6737                           	callstack 24
  6738   00556C                     
  6739                           ;serial.c: 7:     RC0PPS = 0x12;
  6740   00556C  0E12               	movlw	18
  6741   00556E  010E               	movlb	14	; () banked
  6742   005570  6F62               	movwf	98,b	;volatile
  6743                           
  6744                           ;serial.c: 8:     RX4PPS = 0x11;
  6745   005572  0E11               	movlw	17
  6746   005574  6F15               	movwf	21,b	;volatile
  6747   005576                     
  6748                           ; BSR set to: 14
  6749                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  6750   005576  97E9               	bcf	233,3,b	;volatile
  6751   005578                     
  6752                           ; BSR set to: 14
  6753                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  6754   005578  95E8               	bcf	232,2,b	;volatile
  6755                           
  6756                           ;serial.c: 13:     SP4BRGL = 51;
  6757   00557A  0E33               	movlw	51
  6758   00557C  6FE5               	movwf	229,b	;volatile
  6759                           
  6760                           ;serial.c: 14:     SP4BRGH = 0;
  6761   00557E  0E00               	movlw	0
  6762   005580  6FE6               	movwf	230,b	;volatile
  6763   005582                     
  6764                           ; BSR set to: 14
  6765                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  6766   005582  89E7               	bsf	231,4,b	;volatile
  6767   005584                     
  6768                           ; BSR set to: 14
  6769                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  6770   005584  8BE8               	bsf	232,5,b	;volatile
  6771   005586                     
  6772                           ; BSR set to: 14
  6773                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  6774   005586  8FE7               	bsf	231,7,b	;volatile
  6775   005588                     
  6776                           ; BSR set to: 14
  6777   005588  0012               	return		;funcret
  6778   00558A                     __end_of_initUSART4:
  6779                           	callstack 0
  6780                           
  6781 ;; *************** function _initDCmotorsPWM *****************
  6782 ;; Defined at:
  6783 ;;		line 9 in file "dc_motor.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  PWMperiod       2   15[COMRAM] unsigned int 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      void 
  6790 ;; Registers used:
  6791 ;;		wreg, status,2
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6801 ;;Total ram usage:        2 bytes
  6802 ;; Hardware stack levels used: 1
  6803 ;; Hardware stack levels required when called: 6
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_main
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           	psect	text13
  6812   005070                     __ptext13:
  6813                           	callstack 0
  6814   005070                     _initDCmotorsPWM:
  6815                           	callstack 24
  6816   005070                     
  6817                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
  6818   005070  947D               	bcf	125,2,c	;volatile
  6819                           
  6820                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  6821   005072  9485               	bcf	133,2,c	;volatile
  6822                           
  6823                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  6824   005074  987D               	bcf	125,4,c	;volatile
  6825                           
  6826                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  6827   005076  9885               	bcf	133,4,c	;volatile
  6828                           
  6829                           ;dc_motor.c: 16:     LATCbits.LATC7=0;
  6830   005078  9E7B               	bcf	123,7,c	;volatile
  6831                           
  6832                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  6833   00507A  9E83               	bcf	131,7,c	;volatile
  6834                           
  6835                           ;dc_motor.c: 18:     LATGbits.LATG6=0;
  6836   00507C  9C7F               	bcf	127,6,c	;volatile
  6837                           
  6838                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  6839   00507E  9C87               	bcf	135,6,c	;volatile
  6840   005080                     
  6841                           ;dc_motor.c: 22:     RE2PPS=0x05;
  6842   005080  0E05               	movlw	5
  6843   005082  010E               	movlb	14	; () banked
  6844   005084  6F74               	movwf	116,b	;volatile
  6845                           
  6846                           ;dc_motor.c: 23:     RE4PPS=0x06;
  6847   005086  0E06               	movlw	6
  6848   005088  6F76               	movwf	118,b	;volatile
  6849                           
  6850                           ;dc_motor.c: 24:     RC7PPS=0x07;
  6851   00508A  0E07               	movlw	7
  6852   00508C  6F69               	movwf	105,b	;volatile
  6853                           
  6854                           ;dc_motor.c: 25:     RG6PPS=0x08;
  6855   00508E  0E08               	movlw	8
  6856   005090  6F88               	movwf	136,b	;volatile
  6857                           
  6858                           ;dc_motor.c: 28:     T2CONbits.CKPS=0b011;
  6859   005092  50BD               	movf	189,w,c	;volatile
  6860   005094  0B8F               	andlw	-113
  6861   005096  0930               	iorlw	48
  6862   005098  6EBD               	movwf	189,c	;volatile
  6863                           
  6864                           ;dc_motor.c: 29:     T2HLTbits.MODE=0b00000;
  6865   00509A  0EE0               	movlw	-32
  6866   00509C  16BE               	andwf	190,f,c	;volatile
  6867                           
  6868                           ;dc_motor.c: 30:     T2CLKCONbits.CS=0b0001;
  6869   00509E  50BF               	movf	191,w,c	;volatile
  6870   0050A0  0BF0               	andlw	-16
  6871   0050A2  0901               	iorlw	1
  6872   0050A4  6EBF               	movwf	191,c	;volatile
  6873   0050A6                     
  6874                           ; BSR set to: 14
  6875                           ;dc_motor.c: 34:     T2PR=PWMperiod;
  6876   0050A6  C010  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  6877   0050AA                     
  6878                           ; BSR set to: 14
  6879                           ;dc_motor.c: 35:     T2CONbits.ON=1;
  6880   0050AA  8EBD               	bsf	189,7,c	;volatile
  6881                           
  6882                           ;dc_motor.c: 39:     CCPR1H=0;
  6883   0050AC  0E00               	movlw	0
  6884   0050AE  6EAA               	movwf	170,c	;volatile
  6885                           
  6886                           ;dc_motor.c: 40:     CCPR2H=0;
  6887   0050B0  0E00               	movlw	0
  6888   0050B2  6EA6               	movwf	166,c	;volatile
  6889                           
  6890                           ;dc_motor.c: 41:     CCPR3H=0;
  6891   0050B4  0E00               	movlw	0
  6892   0050B6  010F               	movlb	15	; () banked
  6893   0050B8  6F25               	movwf	37,b	;volatile
  6894                           
  6895                           ;dc_motor.c: 42:     CCPR4H=0;
  6896   0050BA  0E00               	movlw	0
  6897   0050BC  6F21               	movwf	33,b	;volatile
  6898                           
  6899                           ;dc_motor.c: 45:     CCPTMRS0bits.C1TSEL=0;
  6900   0050BE  0EFC               	movlw	-4
  6901   0050C0  16AD               	andwf	173,f,c	;volatile
  6902                           
  6903                           ;dc_motor.c: 46:     CCPTMRS0bits.C2TSEL=0;
  6904   0050C2  0EF3               	movlw	-13
  6905   0050C4  16AD               	andwf	173,f,c	;volatile
  6906                           
  6907                           ;dc_motor.c: 47:     CCPTMRS0bits.C3TSEL=0;
  6908   0050C6  0ECF               	movlw	-49
  6909   0050C8  16AD               	andwf	173,f,c	;volatile
  6910                           
  6911                           ;dc_motor.c: 48:     CCPTMRS0bits.C4TSEL=0;
  6912   0050CA  0E3F               	movlw	-193
  6913   0050CC  16AD               	andwf	173,f,c	;volatile
  6914   0050CE                     
  6915                           ; BSR set to: 15
  6916                           ;dc_motor.c: 51:     CCP1CONbits.FMT=1;
  6917   0050CE  88AB               	bsf	171,4,c	;volatile
  6918                           
  6919                           ;dc_motor.c: 52:     CCP1CONbits.CCP1MODE=0b1100;
  6920   0050D0  50AB               	movf	171,w,c	;volatile
  6921   0050D2  0BF0               	andlw	-16
  6922   0050D4  090C               	iorlw	12
  6923   0050D6  6EAB               	movwf	171,c	;volatile
  6924   0050D8                     
  6925                           ; BSR set to: 15
  6926                           ;dc_motor.c: 53:     CCP1CONbits.EN=1;
  6927   0050D8  8EAB               	bsf	171,7,c	;volatile
  6928   0050DA                     
  6929                           ; BSR set to: 15
  6930                           ;dc_motor.c: 55:     CCP2CONbits.FMT=1;
  6931   0050DA  88A7               	bsf	167,4,c	;volatile
  6932                           
  6933                           ;dc_motor.c: 56:     CCP2CONbits.CCP2MODE=0b1100;
  6934   0050DC  50A7               	movf	167,w,c	;volatile
  6935   0050DE  0BF0               	andlw	-16
  6936   0050E0  090C               	iorlw	12
  6937   0050E2  6EA7               	movwf	167,c	;volatile
  6938   0050E4                     
  6939                           ; BSR set to: 15
  6940                           ;dc_motor.c: 57:     CCP2CONbits.EN=1;
  6941   0050E4  8EA7               	bsf	167,7,c	;volatile
  6942   0050E6                     
  6943                           ; BSR set to: 15
  6944                           ;dc_motor.c: 59:     CCP3CONbits.FMT=1;
  6945   0050E6  8926               	bsf	38,4,b	;volatile
  6946                           
  6947                           ;dc_motor.c: 60:     CCP3CONbits.CCP3MODE=0b1100;
  6948   0050E8  5126               	movf	38,w,b	;volatile
  6949   0050EA  0BF0               	andlw	-16
  6950   0050EC  090C               	iorlw	12
  6951   0050EE  6F26               	movwf	38,b	;volatile
  6952   0050F0                     
  6953                           ; BSR set to: 15
  6954                           ;dc_motor.c: 61:     CCP3CONbits.EN=1;
  6955   0050F0  8F26               	bsf	38,7,b	;volatile
  6956   0050F2                     
  6957                           ; BSR set to: 15
  6958                           ;dc_motor.c: 63:     CCP4CONbits.FMT=1;
  6959   0050F2  8922               	bsf	34,4,b	;volatile
  6960                           
  6961                           ;dc_motor.c: 64:     CCP4CONbits.CCP4MODE=0b1100;
  6962   0050F4  5122               	movf	34,w,b	;volatile
  6963   0050F6  0BF0               	andlw	-16
  6964   0050F8  090C               	iorlw	12
  6965   0050FA  6F22               	movwf	34,b	;volatile
  6966   0050FC                     
  6967                           ; BSR set to: 15
  6968                           ;dc_motor.c: 65:     CCP4CONbits.EN=1;
  6969   0050FC  8F22               	bsf	34,7,b	;volatile
  6970   0050FE                     
  6971                           ; BSR set to: 15
  6972   0050FE  0012               	return		;funcret
  6973   005100                     __end_of_initDCmotorsPWM:
  6974                           	callstack 0
  6975                           
  6976 ;; *************** function _color_detect *****************
  6977 ;; Defined at:
  6978 ;;		line 116 in file "color.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  HSV             6   19[COMRAM] struct HSV_val
  6981 ;;  red             6   25[COMRAM] struct HSV_calib
  6982 ;;  green           6   31[COMRAM] struct HSV_calib
  6983 ;;  blue            6   37[COMRAM] struct HSV_calib
  6984 ;;  yellow          6   43[COMRAM] struct HSV_calib
  6985 ;;  pink            6   49[COMRAM] struct HSV_calib
  6986 ;;  orange          6   55[COMRAM] struct HSV_calib
  6987 ;;  lightblue       6   61[COMRAM] struct HSV_calib
  6988 ;;  white           6   67[COMRAM] struct HSV_calib
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;  color           1   73[COMRAM] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      unsigned char 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7000 ;;      Params:        54       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;      Totals:        55      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7004 ;;Total ram usage:       68 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; Hardware stack levels required when called: 7
  7007 ;; This function calls:
  7008 ;;		_max
  7009 ;;		_min
  7010 ;; This function is called by:
  7011 ;;		_main
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text14
  7016   003788                     __ptext14:
  7017                           	callstack 0
  7018   003788                     _color_detect:
  7019                           	callstack 23
  7020   003788                     
  7021                           ;color.c: 116: unsigned char color_detect(HSV_val HSV, HSV_calib red, HSV_calib green, H
      +                          SV_calib blue, HSV_calib yellow, HSV_calib pink, HSV_calib orange, HSV_calib lightblue, 
      +                          HSV_calib white);color.c: 117: {;color.c: 118:     unsigned char color=9;
  7022   003788  0E09               	movlw	9
  7023   00378A  6E4A               	movwf	color_detect@color^0,c
  7024   00378C                     
  7025                           ;color.c: 121:     if (min(green.H,lightblue.H)-2000 < HSV.H && HSV.H < max(green.H,ligh
      +                          tblue.H)+2000) {
  7026   00378C  C020  F010         	movff	color_detect@green,min@a
  7027   003790  C021  F011         	movff	color_detect@green+1,min@a+1
  7028   003794  C03E  F012         	movff	color_detect@lightblue,min@b
  7029   003798  C03F  F013         	movff	color_detect@lightblue+1,min@b+1
  7030   00379C  ECD3  F029         	call	_min	;wreg free
  7031   0037A0  0E30               	movlw	48
  7032   0037A2  2410               	addwf	?_min^0,w,c
  7033   0037A4  0100               	movlb	0	; () banked
  7034   0037A6  6F60               	movwf	??_color_detect& (0+255),b
  7035   0037A8  0EF8               	movlw	248
  7036   0037AA  2011               	addwfc	(?_min+1)^0,w,c
  7037   0037AC  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7038   0037AE  5014               	movf	color_detect@HSV^0,w,c
  7039   0037B0  5D60               	subwf	??_color_detect& (0+255),w,b
  7040   0037B2  5015               	movf	(color_detect@HSV+1)^0,w,c
  7041   0037B4  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7042   0037B6  B0D8               	btfsc	status,0,c
  7043   0037B8  EFE0  F01B         	goto	u3011
  7044   0037BC  EFE2  F01B         	goto	u3010
  7045   0037C0                     u3011:
  7046   0037C0  EF17  F01C         	goto	l4194
  7047   0037C4                     u3010:
  7048   0037C4                     
  7049                           ; BSR set to: 0
  7050   0037C4  C020  F010         	movff	color_detect@green,max@a
  7051   0037C8  C021  F011         	movff	color_detect@green+1,max@a+1
  7052   0037CC  C03E  F012         	movff	color_detect@lightblue,max@b
  7053   0037D0  C03F  F013         	movff	color_detect@lightblue+1,max@b+1
  7054   0037D4  ECE9  F029         	call	_max	;wreg free
  7055   0037D8  0ED0               	movlw	208
  7056   0037DA  2410               	addwf	?_max^0,w,c
  7057   0037DC  0100               	movlb	0	; () banked
  7058   0037DE  6F60               	movwf	??_color_detect& (0+255),b
  7059   0037E0  0E07               	movlw	7
  7060   0037E2  2011               	addwfc	(?_max+1)^0,w,c
  7061   0037E4  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7062   0037E6  5160               	movf	??_color_detect& (0+255),w,b
  7063   0037E8  5C14               	subwf	color_detect@HSV^0,w,c
  7064   0037EA  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7065   0037EC  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7066   0037EE  B0D8               	btfsc	status,0,c
  7067   0037F0  EFFC  F01B         	goto	u3021
  7068   0037F4  EFFE  F01B         	goto	u3020
  7069   0037F8                     u3021:
  7070   0037F8  EF17  F01C         	goto	l4194
  7071   0037FC                     u3020:
  7072   0037FC                     
  7073                           ; BSR set to: 0
  7074                           ;color.c: 122:         if (HSV.S > lightblue.S + 1000){color = 2;}
  7075   0037FC  0EE8               	movlw	232
  7076   0037FE  2440               	addwf	(color_detect@lightblue+2)^0,w,c
  7077   003800  6F60               	movwf	??_color_detect& (0+255),b
  7078   003802  0E03               	movlw	3
  7079   003804  2041               	addwfc	(color_detect@lightblue+3)^0,w,c
  7080   003806  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7081   003808  5016               	movf	(color_detect@HSV+2)^0,w,c
  7082   00380A  5D60               	subwf	??_color_detect& (0+255),w,b
  7083   00380C  5017               	movf	(color_detect@HSV+3)^0,w,c
  7084   00380E  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7085   003810  B0D8               	btfsc	status,0,c
  7086   003812  EF0D  F01C         	goto	u3031
  7087   003816  EF0F  F01C         	goto	u3030
  7088   00381A                     u3031:
  7089   00381A  EF13  F01C         	goto	l4192
  7090   00381E                     u3030:
  7091   00381E                     
  7092                           ; BSR set to: 0
  7093   00381E  0E02               	movlw	2
  7094   003820  6E4A               	movwf	color_detect@color^0,c
  7095   003822  EFEE  F01C         	goto	l4222
  7096   003826                     l4192:
  7097                           
  7098                           ; BSR set to: 0
  7099   003826  0E07               	movlw	7
  7100   003828  6E4A               	movwf	color_detect@color^0,c
  7101   00382A  EFEE  F01C         	goto	l4222
  7102   00382E                     l4194:
  7103                           
  7104                           ; BSR set to: 0
  7105   00382E  0E48               	movlw	72
  7106   003830  2426               	addwf	color_detect@blue^0,w,c
  7107   003832  6F60               	movwf	??_color_detect& (0+255),b
  7108   003834  0EF4               	movlw	244
  7109   003836  2027               	addwfc	(color_detect@blue+1)^0,w,c
  7110   003838  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7111   00383A  5014               	movf	color_detect@HSV^0,w,c
  7112   00383C  5D60               	subwf	??_color_detect& (0+255),w,b
  7113   00383E  5015               	movf	(color_detect@HSV+1)^0,w,c
  7114   003840  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7115   003842  B0D8               	btfsc	status,0,c
  7116   003844  EF26  F01C         	goto	u3041
  7117   003848  EF28  F01C         	goto	u3040
  7118   00384C                     u3041:
  7119   00384C  EF3D  F01C         	goto	l4200
  7120   003850                     u3040:
  7121   003850                     
  7122                           ; BSR set to: 0
  7123   003850  0EB8               	movlw	184
  7124   003852  2426               	addwf	color_detect@blue^0,w,c
  7125   003854  6F60               	movwf	??_color_detect& (0+255),b
  7126   003856  0E0B               	movlw	11
  7127   003858  2027               	addwfc	(color_detect@blue+1)^0,w,c
  7128   00385A  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7129   00385C  5160               	movf	??_color_detect& (0+255),w,b
  7130   00385E  5C14               	subwf	color_detect@HSV^0,w,c
  7131   003860  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7132   003862  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7133   003864  B0D8               	btfsc	status,0,c
  7134   003866  EF37  F01C         	goto	u3051
  7135   00386A  EF39  F01C         	goto	u3050
  7136   00386E                     u3051:
  7137   00386E  EF3D  F01C         	goto	l4200
  7138   003872                     u3050:
  7139   003872                     
  7140                           ; BSR set to: 0
  7141   003872  0E03               	movlw	3
  7142   003874  6E4A               	movwf	color_detect@color^0,c
  7143   003876  EFEE  F01C         	goto	l4222
  7144   00387A                     l4200:
  7145                           
  7146                           ; BSR set to: 0
  7147   00387A  C02C  F010         	movff	color_detect@yellow,min@a
  7148   00387E  C02D  F011         	movff	color_detect@yellow+1,min@a+1
  7149   003882  C032  F012         	movff	color_detect@pink,min@b
  7150   003886  C033  F013         	movff	color_detect@pink+1,min@b+1
  7151   00388A  ECD3  F029         	call	_min	;wreg free
  7152   00388E  0E18               	movlw	24
  7153   003890  2410               	addwf	?_min^0,w,c
  7154   003892  0100               	movlb	0	; () banked
  7155   003894  6F60               	movwf	??_color_detect& (0+255),b
  7156   003896  0EFC               	movlw	252
  7157   003898  2011               	addwfc	(?_min+1)^0,w,c
  7158   00389A  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7159   00389C  5014               	movf	color_detect@HSV^0,w,c
  7160   00389E  5D60               	subwf	??_color_detect& (0+255),w,b
  7161   0038A0  5015               	movf	(color_detect@HSV+1)^0,w,c
  7162   0038A2  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7163   0038A4  B0D8               	btfsc	status,0,c
  7164   0038A6  EF57  F01C         	goto	u3061
  7165   0038AA  EF59  F01C         	goto	u3060
  7166   0038AE                     u3061:
  7167   0038AE  EFCA  F01C         	goto	l4216
  7168   0038B2                     u3060:
  7169   0038B2                     
  7170                           ; BSR set to: 0
  7171   0038B2  C02C  F010         	movff	color_detect@yellow,max@a
  7172   0038B6  C02D  F011         	movff	color_detect@yellow+1,max@a+1
  7173   0038BA  C032  F012         	movff	color_detect@pink,max@b
  7174   0038BE  C033  F013         	movff	color_detect@pink+1,max@b+1
  7175   0038C2  ECE9  F029         	call	_max	;wreg free
  7176   0038C6  0EE8               	movlw	232
  7177   0038C8  2410               	addwf	?_max^0,w,c
  7178   0038CA  0100               	movlb	0	; () banked
  7179   0038CC  6F60               	movwf	??_color_detect& (0+255),b
  7180   0038CE  0E03               	movlw	3
  7181   0038D0  2011               	addwfc	(?_max+1)^0,w,c
  7182   0038D2  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7183   0038D4  5160               	movf	??_color_detect& (0+255),w,b
  7184   0038D6  5C14               	subwf	color_detect@HSV^0,w,c
  7185   0038D8  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7186   0038DA  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7187   0038DC  B0D8               	btfsc	status,0,c
  7188   0038DE  EF73  F01C         	goto	u3071
  7189   0038E2  EF75  F01C         	goto	u3070
  7190   0038E6                     u3071:
  7191   0038E6  EFCA  F01C         	goto	l4216
  7192   0038EA                     u3070:
  7193   0038EA                     
  7194                           ; BSR set to: 0
  7195                           ;color.c: 131:         if (HSV.H * 2 - HSV.S < HSV.H + 500 && HSV.H * 2 - HSV.S > HSV.H 
      +                          - 500) {color = 8;}
  7196   0038EA  0EF4               	movlw	244
  7197   0038EC  2414               	addwf	color_detect@HSV^0,w,c
  7198   0038EE  6F60               	movwf	??_color_detect& (0+255),b
  7199   0038F0  0E01               	movlw	1
  7200   0038F2  2015               	addwfc	(color_detect@HSV+1)^0,w,c
  7201   0038F4  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7202   0038F6  C014  F062         	movff	color_detect@HSV,??_color_detect+2
  7203   0038FA  C015  F063         	movff	color_detect@HSV+1,??_color_detect+3
  7204   0038FE  90D8               	bcf	status,0,c
  7205   003900  3762               	rlcf	(??_color_detect+2)& (0+255),f,b
  7206   003902  3763               	rlcf	(??_color_detect+3)& (0+255),f,b
  7207   003904  5016               	movf	(color_detect@HSV+2)^0,w,c
  7208   003906  5F62               	subwf	(??_color_detect+2)& (0+255),f,b
  7209   003908  5017               	movf	(color_detect@HSV+3)^0,w,c
  7210   00390A  5B63               	subwfb	(??_color_detect+3)& (0+255),f,b
  7211   00390C  5160               	movf	??_color_detect& (0+255),w,b
  7212   00390E  5D62               	subwf	(??_color_detect+2)& (0+255),w,b
  7213   003910  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7214   003912  5963               	subwfb	(??_color_detect+3)& (0+255),w,b
  7215   003914  B0D8               	btfsc	status,0,c
  7216   003916  EF8F  F01C         	goto	u3081
  7217   00391A  EF91  F01C         	goto	u3080
  7218   00391E                     u3081:
  7219   00391E  EFB1  F01C         	goto	l4210
  7220   003922                     u3080:
  7221   003922                     
  7222                           ; BSR set to: 0
  7223   003922  C014  F060         	movff	color_detect@HSV,??_color_detect
  7224   003926  C015  F061         	movff	color_detect@HSV+1,??_color_detect+1
  7225   00392A  90D8               	bcf	status,0,c
  7226   00392C  3760               	rlcf	??_color_detect& (0+255),f,b
  7227   00392E  3761               	rlcf	(??_color_detect+1)& (0+255),f,b
  7228   003930  5016               	movf	(color_detect@HSV+2)^0,w,c
  7229   003932  5F60               	subwf	??_color_detect& (0+255),f,b
  7230   003934  5017               	movf	(color_detect@HSV+3)^0,w,c
  7231   003936  5B61               	subwfb	(??_color_detect+1)& (0+255),f,b
  7232   003938  0E0C               	movlw	12
  7233   00393A  2414               	addwf	color_detect@HSV^0,w,c
  7234   00393C  6F62               	movwf	(??_color_detect+2)& (0+255),b
  7235   00393E  0EFE               	movlw	254
  7236   003940  2015               	addwfc	(color_detect@HSV+1)^0,w,c
  7237   003942  6F63               	movwf	(??_color_detect+3)& (0+255),b
  7238   003944  5160               	movf	??_color_detect& (0+255),w,b
  7239   003946  5D62               	subwf	(??_color_detect+2)& (0+255),w,b
  7240   003948  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7241   00394A  5963               	subwfb	(??_color_detect+3)& (0+255),w,b
  7242   00394C  B0D8               	btfsc	status,0,c
  7243   00394E  EFAB  F01C         	goto	u3091
  7244   003952  EFAD  F01C         	goto	u3090
  7245   003956                     u3091:
  7246   003956  EFB1  F01C         	goto	l4210
  7247   00395A                     u3090:
  7248   00395A                     
  7249                           ; BSR set to: 0
  7250   00395A  0E08               	movlw	8
  7251   00395C  6E4A               	movwf	color_detect@color^0,c
  7252   00395E  EFEE  F01C         	goto	l4222
  7253   003962                     l4210:
  7254                           
  7255                           ; BSR set to: 0
  7256   003962  0EF4               	movlw	244
  7257   003964  2434               	addwf	(color_detect@pink+2)^0,w,c
  7258   003966  6F60               	movwf	??_color_detect& (0+255),b
  7259   003968  0E01               	movlw	1
  7260   00396A  2035               	addwfc	(color_detect@pink+3)^0,w,c
  7261   00396C  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7262   00396E  5016               	movf	(color_detect@HSV+2)^0,w,c
  7263   003970  5D60               	subwf	??_color_detect& (0+255),w,b
  7264   003972  5017               	movf	(color_detect@HSV+3)^0,w,c
  7265   003974  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7266   003976  B0D8               	btfsc	status,0,c
  7267   003978  EFC0  F01C         	goto	u3101
  7268   00397C  EFC2  F01C         	goto	u3100
  7269   003980                     u3101:
  7270   003980  EFC6  F01C         	goto	l4214
  7271   003984                     u3100:
  7272   003984                     
  7273                           ; BSR set to: 0
  7274   003984  0E04               	movlw	4
  7275   003986  6E4A               	movwf	color_detect@color^0,c
  7276   003988  EFEE  F01C         	goto	l4222
  7277   00398C                     l4214:
  7278                           
  7279                           ; BSR set to: 0
  7280   00398C  0E05               	movlw	5
  7281   00398E  6E4A               	movwf	color_detect@color^0,c
  7282   003990  EFEE  F01C         	goto	l4222
  7283   003994                     l4216:
  7284                           
  7285                           ; BSR set to: 0
  7286   003994  0E0C               	movlw	12
  7287   003996  2438               	addwf	color_detect@orange^0,w,c
  7288   003998  6F60               	movwf	??_color_detect& (0+255),b
  7289   00399A  0EFE               	movlw	254
  7290   00399C  2039               	addwfc	(color_detect@orange+1)^0,w,c
  7291   00399E  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7292   0039A0  5014               	movf	color_detect@HSV^0,w,c
  7293   0039A2  5D60               	subwf	??_color_detect& (0+255),w,b
  7294   0039A4  5015               	movf	(color_detect@HSV+1)^0,w,c
  7295   0039A6  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7296   0039A8  B0D8               	btfsc	status,0,c
  7297   0039AA  EFD9  F01C         	goto	u3111
  7298   0039AE  EFDB  F01C         	goto	u3110
  7299   0039B2                     u3111:
  7300   0039B2  EFEE  F01C         	goto	l4222
  7301   0039B6                     u3110:
  7302   0039B6                     
  7303                           ; BSR set to: 0
  7304   0039B6  0EF4               	movlw	244
  7305   0039B8  2438               	addwf	color_detect@orange^0,w,c
  7306   0039BA  6F60               	movwf	??_color_detect& (0+255),b
  7307   0039BC  0E01               	movlw	1
  7308   0039BE  2039               	addwfc	(color_detect@orange+1)^0,w,c
  7309   0039C0  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7310   0039C2  5160               	movf	??_color_detect& (0+255),w,b
  7311   0039C4  5C14               	subwf	color_detect@HSV^0,w,c
  7312   0039C6  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7313   0039C8  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7314   0039CA  B0D8               	btfsc	status,0,c
  7315   0039CC  EFEA  F01C         	goto	u3121
  7316   0039D0  EFEC  F01C         	goto	u3120
  7317   0039D4                     u3121:
  7318   0039D4  EFEE  F01C         	goto	l4222
  7319   0039D8                     u3120:
  7320   0039D8                     
  7321                           ; BSR set to: 0
  7322   0039D8  0E06               	movlw	6
  7323   0039DA  6E4A               	movwf	color_detect@color^0,c
  7324   0039DC                     l4222:
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;color.c: 143:     if (red.H > 30000){
  7328   0039DC  0E31               	movlw	49
  7329   0039DE  5C1A               	subwf	color_detect@red^0,w,c
  7330   0039E0  0E75               	movlw	117
  7331   0039E2  581B               	subwfb	(color_detect@red+1)^0,w,c
  7332   0039E4  A0D8               	btfss	status,0,c
  7333   0039E6  EFF7  F01C         	goto	u3131
  7334   0039EA  EFF9  F01C         	goto	u3130
  7335   0039EE                     u3131:
  7336   0039EE  EF4D  F01D         	goto	l4234
  7337   0039F2                     u3130:
  7338   0039F2                     
  7339                           ; BSR set to: 0
  7340                           ;color.c: 144:         if(((red.H)-1000 < HSV.H && HSV.H < 36000) || (0 < HSV.H && HSV.H
      +                           < 1000 + red.H -36000)) {color = 1;}
  7341   0039F2  0E18               	movlw	24
  7342   0039F4  241A               	addwf	color_detect@red^0,w,c
  7343   0039F6  6F60               	movwf	??_color_detect& (0+255),b
  7344   0039F8  0EFC               	movlw	252
  7345   0039FA  201B               	addwfc	(color_detect@red+1)^0,w,c
  7346   0039FC  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7347   0039FE  5014               	movf	color_detect@HSV^0,w,c
  7348   003A00  5D60               	subwf	??_color_detect& (0+255),w,b
  7349   003A02  5015               	movf	(color_detect@HSV+1)^0,w,c
  7350   003A04  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7351   003A06  B0D8               	btfsc	status,0,c
  7352   003A08  EF08  F01D         	goto	u3141
  7353   003A0C  EF0A  F01D         	goto	u3140
  7354   003A10                     u3141:
  7355   003A10  EF15  F01D         	goto	l4228
  7356   003A14                     u3140:
  7357   003A14                     
  7358                           ; BSR set to: 0
  7359   003A14  0EA0               	movlw	160
  7360   003A16  5C14               	subwf	color_detect@HSV^0,w,c
  7361   003A18  0E8C               	movlw	140
  7362   003A1A  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7363   003A1C  A0D8               	btfss	status,0,c
  7364   003A1E  EF13  F01D         	goto	u3151
  7365   003A22  EF15  F01D         	goto	u3150
  7366   003A26                     u3151:
  7367   003A26  EF4B  F01D         	goto	l4232
  7368   003A2A                     u3150:
  7369   003A2A                     l4228:
  7370                           
  7371                           ; BSR set to: 0
  7372   003A2A  5014               	movf	color_detect@HSV^0,w,c
  7373   003A2C  1015               	iorwf	(color_detect@HSV+1)^0,w,c
  7374   003A2E  B4D8               	btfsc	status,2,c
  7375   003A30  EF1C  F01D         	goto	u3161
  7376   003A34  EF1E  F01D         	goto	u3160
  7377   003A38                     u3161:
  7378   003A38  EF4D  F01D         	goto	l4234
  7379   003A3C                     u3160:
  7380   003A3C                     
  7381                           ; BSR set to: 0
  7382   003A3C  0EE8               	movlw	232
  7383   003A3E  241A               	addwf	color_detect@red^0,w,c
  7384   003A40  6F60               	movwf	??_color_detect& (0+255),b
  7385   003A42  0E03               	movlw	3
  7386   003A44  201B               	addwfc	(color_detect@red+1)^0,w,c
  7387   003A46  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7388   003A48  6B62               	clrf	(??_color_detect+2)& (0+255),b
  7389   003A4A  6B63               	clrf	(??_color_detect+3)& (0+255),b
  7390   003A4C  0E60               	movlw	96
  7391   003A4E  2560               	addwf	??_color_detect& (0+255),w,b
  7392   003A50  6F64               	movwf	(??_color_detect+4)& (0+255),b
  7393   003A52  0E73               	movlw	115
  7394   003A54  2161               	addwfc	(??_color_detect+1)& (0+255),w,b
  7395   003A56  6F65               	movwf	(??_color_detect+5)& (0+255),b
  7396   003A58  0EFF               	movlw	255
  7397   003A5A  2162               	addwfc	(??_color_detect+2)& (0+255),w,b
  7398   003A5C  6F66               	movwf	(??_color_detect+6)& (0+255),b
  7399   003A5E  0EFF               	movlw	255
  7400   003A60  2163               	addwfc	(??_color_detect+3)& (0+255),w,b
  7401   003A62  6F67               	movwf	(??_color_detect+7)& (0+255),b
  7402   003A64  5014               	movf	color_detect@HSV^0,w,c
  7403   003A66  6F68               	movwf	(??_color_detect+8)& (0+255),b
  7404   003A68  5015               	movf	(color_detect@HSV+1)^0,w,c
  7405   003A6A  6F69               	movwf	(??_color_detect+9)& (0+255),b
  7406   003A6C  6B6A               	clrf	(??_color_detect+10)& (0+255),b
  7407   003A6E  6B6B               	clrf	(??_color_detect+11)& (0+255),b
  7408   003A70  5164               	movf	(??_color_detect+4)& (0+255),w,b
  7409   003A72  5D68               	subwf	(??_color_detect+8)& (0+255),w,b
  7410   003A74  5165               	movf	(??_color_detect+5)& (0+255),w,b
  7411   003A76  5969               	subwfb	(??_color_detect+9)& (0+255),w,b
  7412   003A78  5166               	movf	(??_color_detect+6)& (0+255),w,b
  7413   003A7A  596A               	subwfb	(??_color_detect+10)& (0+255),w,b
  7414   003A7C  516B               	movf	(??_color_detect+11)& (0+255),w,b
  7415   003A7E  0A80               	xorlw	128
  7416   003A80  6F6C               	movwf	(??_color_detect+12)& (0+255),b
  7417   003A82  5167               	movf	(??_color_detect+7)& (0+255),w,b
  7418   003A84  0A80               	xorlw	128
  7419   003A86  596C               	subwfb	(??_color_detect+12)& (0+255),w,b
  7420   003A88  B0D8               	btfsc	status,0,c
  7421   003A8A  EF49  F01D         	goto	u3171
  7422   003A8E  EF4B  F01D         	goto	u3170
  7423   003A92                     u3171:
  7424   003A92  EF4D  F01D         	goto	l4234
  7425   003A96                     u3170:
  7426   003A96                     l4232:
  7427                           
  7428                           ; BSR set to: 0
  7429   003A96  0E01               	movlw	1
  7430   003A98  6E4A               	movwf	color_detect@color^0,c
  7431   003A9A                     l4234:
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;color.c: 147:     if (red.H < 10000){
  7435   003A9A  0E10               	movlw	16
  7436   003A9C  5C1A               	subwf	color_detect@red^0,w,c
  7437   003A9E  0E27               	movlw	39
  7438   003AA0  581B               	subwfb	(color_detect@red+1)^0,w,c
  7439   003AA2  B0D8               	btfsc	status,0,c
  7440   003AA4  EF56  F01D         	goto	u3181
  7441   003AA8  EF58  F01D         	goto	u3180
  7442   003AAC                     u3181:
  7443   003AAC  EFAA  F01D         	goto	l182
  7444   003AB0                     u3180:
  7445   003AB0                     
  7446                           ; BSR set to: 0
  7447                           ;color.c: 148:         if((36000 - 1000 + (red.H) < HSV.H && HSV.H < 36000) || (0 < HSV.
      +                          H && HSV.H < red.H + 1000)) {color = 1;}
  7448   003AB0  5014               	movf	color_detect@HSV^0,w,c
  7449   003AB2  6F60               	movwf	??_color_detect& (0+255),b
  7450   003AB4  5015               	movf	(color_detect@HSV+1)^0,w,c
  7451   003AB6  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7452   003AB8  6B62               	clrf	(??_color_detect+2)& (0+255),b
  7453   003ABA  6B63               	clrf	(??_color_detect+3)& (0+255),b
  7454   003ABC  501A               	movf	color_detect@red^0,w,c
  7455   003ABE  6F64               	movwf	(??_color_detect+4)& (0+255),b
  7456   003AC0  501B               	movf	(color_detect@red+1)^0,w,c
  7457   003AC2  6F65               	movwf	(??_color_detect+5)& (0+255),b
  7458   003AC4  6B66               	clrf	(??_color_detect+6)& (0+255),b
  7459   003AC6  6B67               	clrf	(??_color_detect+7)& (0+255),b
  7460   003AC8  0EB8               	movlw	184
  7461   003ACA  2564               	addwf	(??_color_detect+4)& (0+255),w,b
  7462   003ACC  6F68               	movwf	(??_color_detect+8)& (0+255),b
  7463   003ACE  0E88               	movlw	136
  7464   003AD0  2165               	addwfc	(??_color_detect+5)& (0+255),w,b
  7465   003AD2  6F69               	movwf	(??_color_detect+9)& (0+255),b
  7466   003AD4  0E00               	movlw	0
  7467   003AD6  2166               	addwfc	(??_color_detect+6)& (0+255),w,b
  7468   003AD8  6F6A               	movwf	(??_color_detect+10)& (0+255),b
  7469   003ADA  0E00               	movlw	0
  7470   003ADC  2167               	addwfc	(??_color_detect+7)& (0+255),w,b
  7471   003ADE  6F6B               	movwf	(??_color_detect+11)& (0+255),b
  7472   003AE0  5160               	movf	??_color_detect& (0+255),w,b
  7473   003AE2  5D68               	subwf	(??_color_detect+8)& (0+255),w,b
  7474   003AE4  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7475   003AE6  5969               	subwfb	(??_color_detect+9)& (0+255),w,b
  7476   003AE8  5162               	movf	(??_color_detect+2)& (0+255),w,b
  7477   003AEA  596A               	subwfb	(??_color_detect+10)& (0+255),w,b
  7478   003AEC  516B               	movf	(??_color_detect+11)& (0+255),w,b
  7479   003AEE  0A80               	xorlw	128
  7480   003AF0  6F6C               	movwf	(??_color_detect+12)& (0+255),b
  7481   003AF2  5163               	movf	(??_color_detect+3)& (0+255),w,b
  7482   003AF4  0A80               	xorlw	128
  7483   003AF6  596C               	subwfb	(??_color_detect+12)& (0+255),w,b
  7484   003AF8  B0D8               	btfsc	status,0,c
  7485   003AFA  EF81  F01D         	goto	u3191
  7486   003AFE  EF83  F01D         	goto	u3190
  7487   003B02                     u3191:
  7488   003B02  EF8E  F01D         	goto	l4240
  7489   003B06                     u3190:
  7490   003B06                     
  7491                           ; BSR set to: 0
  7492   003B06  0EA0               	movlw	160
  7493   003B08  5C14               	subwf	color_detect@HSV^0,w,c
  7494   003B0A  0E8C               	movlw	140
  7495   003B0C  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7496   003B0E  A0D8               	btfss	status,0,c
  7497   003B10  EF8C  F01D         	goto	u3201
  7498   003B14  EF8E  F01D         	goto	u3200
  7499   003B18                     u3201:
  7500   003B18  EFA8  F01D         	goto	l4244
  7501   003B1C                     u3200:
  7502   003B1C                     l4240:
  7503                           
  7504                           ; BSR set to: 0
  7505   003B1C  5014               	movf	color_detect@HSV^0,w,c
  7506   003B1E  1015               	iorwf	(color_detect@HSV+1)^0,w,c
  7507   003B20  B4D8               	btfsc	status,2,c
  7508   003B22  EF95  F01D         	goto	u3211
  7509   003B26  EF97  F01D         	goto	u3210
  7510   003B2A                     u3211:
  7511   003B2A  EFAA  F01D         	goto	l182
  7512   003B2E                     u3210:
  7513   003B2E                     
  7514                           ; BSR set to: 0
  7515   003B2E  0EE8               	movlw	232
  7516   003B30  241A               	addwf	color_detect@red^0,w,c
  7517   003B32  6F60               	movwf	??_color_detect& (0+255),b
  7518   003B34  0E03               	movlw	3
  7519   003B36  201B               	addwfc	(color_detect@red+1)^0,w,c
  7520   003B38  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7521   003B3A  5160               	movf	??_color_detect& (0+255),w,b
  7522   003B3C  5C14               	subwf	color_detect@HSV^0,w,c
  7523   003B3E  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7524   003B40  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7525   003B42  B0D8               	btfsc	status,0,c
  7526   003B44  EFA6  F01D         	goto	u3221
  7527   003B48  EFA8  F01D         	goto	u3220
  7528   003B4C                     u3221:
  7529   003B4C  EFAA  F01D         	goto	l182
  7530   003B50                     u3220:
  7531   003B50                     l4244:
  7532                           
  7533                           ; BSR set to: 0
  7534   003B50  0E01               	movlw	1
  7535   003B52  6E4A               	movwf	color_detect@color^0,c
  7536   003B54                     l182:
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;color.c: 151:     return color;
  7540   003B54  504A               	movf	color_detect@color^0,w,c
  7541   003B56                     
  7542                           ; BSR set to: 0
  7543   003B56  0012               	return		;funcret
  7544   003B58                     __end_of_color_detect:
  7545                           	callstack 0
  7546                           
  7547 ;; *************** function _color_click_init *****************
  7548 ;; Defined at:
  7549 ;;		line 7 in file "color.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;		None
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;		None
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  1    wreg      void 
  7556 ;; Registers used:
  7557 ;;		wreg, status,2, status,0, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7567 ;;Total ram usage:        1 bytes
  7568 ;; Hardware stack levels used: 1
  7569 ;; Hardware stack levels required when called: 10
  7570 ;; This function calls:
  7571 ;;		_I2C_2_Master_Init
  7572 ;;		_color_clear_init_interrupts
  7573 ;;		_color_writetoaddr
  7574 ;; This function is called by:
  7575 ;;		_main
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           
  7579                           	psect	text15
  7580   005338                     __ptext15:
  7581                           	callstack 0
  7582   005338                     _color_click_init:
  7583                           	callstack 20
  7584   005338                     
  7585                           ;color.c: 10:     I2C_2_Master_Init();
  7586   005338  ECFF  F029         	call	_I2C_2_Master_Init	;wreg free
  7587   00533C                     
  7588                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  7589   00533C  0E01               	movlw	1
  7590   00533E  6E12               	movwf	color_writetoaddr@value^0,c
  7591   005340  0E00               	movlw	0
  7592   005342  EC86  F02A         	call	_color_writetoaddr
  7593   005346                     
  7594                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7595   005346  0E3F               	movlw	63
  7596   005348  6E22               	movwf	??_color_click_init^0,c
  7597   00534A  0E55               	movlw	85
  7598   00534C                     u4807:
  7599   00534C  2EE8               	decfsz	wreg,f,c
  7600   00534E  D7FE               	bra	u4807
  7601   005350  2E22               	decfsz	??_color_click_init^0,f,c
  7602   005352  D7FC               	bra	u4807
  7603   005354  0000               	nop	
  7604   005356                     
  7605                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  7606   005356  0E03               	movlw	3
  7607   005358  6E12               	movwf	color_writetoaddr@value^0,c
  7608   00535A  0E00               	movlw	0
  7609   00535C  EC86  F02A         	call	_color_writetoaddr
  7610   005360                     
  7611                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  7612   005360  0ED5               	movlw	213
  7613   005362  6E12               	movwf	color_writetoaddr@value^0,c
  7614   005364  0E01               	movlw	1
  7615   005366  EC86  F02A         	call	_color_writetoaddr
  7616   00536A                     
  7617                           ;color.c: 23:     color_clear_init_interrupts();
  7618   00536A  EC40  F027         	call	_color_clear_init_interrupts	;wreg free
  7619   00536E  0012               	return		;funcret
  7620   005370                     __end_of_color_click_init:
  7621                           	callstack 0
  7622                           
  7623 ;; *************** function _color_clear_init_interrupts *****************
  7624 ;; Defined at:
  7625 ;;		line 27 in file "color.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;		None
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  low_threshol    2   31[COMRAM] unsigned int 
  7630 ;;  high_thresho    2   29[COMRAM] unsigned int 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  1    wreg      void 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0, cstack
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7642 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7643 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7644 ;;Total ram usage:        5 bytes
  7645 ;; Hardware stack levels used: 1
  7646 ;; Hardware stack levels required when called: 9
  7647 ;; This function calls:
  7648 ;;		_I2C_2_Master_Start
  7649 ;;		_I2C_2_Master_Stop
  7650 ;;		_I2C_2_Master_Write
  7651 ;;		___lwdiv
  7652 ;;		_color_writetoaddr
  7653 ;; This function is called by:
  7654 ;;		_main
  7655 ;;		_color_click_init
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659                           	psect	text16
  7660   004E80                     __ptext16:
  7661                           	callstack 0
  7662   004E80                     _color_clear_init_interrupts:
  7663                           	callstack 20
  7664   004E80                     
  7665                           ;color.c: 29:     I2C_2_Master_Start();
  7666   004E80  ECFD  F02A         	call	_I2C_2_Master_Start	;wreg free
  7667                           
  7668                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  7669   004E84  0E52               	movlw	82
  7670   004E86  ECE7  F02A         	call	_I2C_2_Master_Write
  7671                           
  7672                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  7673   004E8A  0EE6               	movlw	230
  7674   004E8C  ECE7  F02A         	call	_I2C_2_Master_Write
  7675                           
  7676                           ;color.c: 32:     I2C_2_Master_Stop();
  7677   004E90  ECF8  F02A         	call	_I2C_2_Master_Stop	;wreg free
  7678                           
  7679                           ;color.c: 38:     unsigned int high_threshold = ambient + (ambient/3);
  7680   004E94  C0FA  F016         	movff	_ambient,___lwdiv@dividend
  7681   004E98  C0FB  F017         	movff	_ambient+1,___lwdiv@dividend+1
  7682   004E9C  0E00               	movlw	0
  7683   004E9E  6E19               	movwf	(___lwdiv@divisor+1)^0,c
  7684   004EA0  0E03               	movlw	3
  7685   004EA2  6E18               	movwf	___lwdiv@divisor^0,c
  7686   004EA4  EC80  F028         	call	___lwdiv	;wreg free
  7687   004EA8  0100               	movlb	0	; () banked
  7688   004EAA  51FA               	movf	_ambient& (0+255),w,b
  7689   004EAC  2416               	addwf	?___lwdiv^0,w,c
  7690   004EAE  6E1E               	movwf	color_clear_init_interrupts@high_threshold^0,c
  7691   004EB0  51FB               	movf	(_ambient+1)& (0+255),w,b
  7692   004EB2  2017               	addwfc	(?___lwdiv+1)^0,w,c
  7693   004EB4  6E1F               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  7694                           
  7695                           ;color.c: 39:     unsigned int low_threshold = ambient - (ambient/20);
  7696   004EB6  C0FA  F016         	movff	_ambient,___lwdiv@dividend
  7697   004EBA  C0FB  F017         	movff	_ambient+1,___lwdiv@dividend+1
  7698   004EBE  0E00               	movlw	0
  7699   004EC0  6E19               	movwf	(___lwdiv@divisor+1)^0,c
  7700   004EC2  0E14               	movlw	20
  7701   004EC4  6E18               	movwf	___lwdiv@divisor^0,c
  7702   004EC6  EC80  F028         	call	___lwdiv	;wreg free
  7703   004ECA  5016               	movf	?___lwdiv^0,w,c
  7704   004ECC  0100               	movlb	0	; () banked
  7705   004ECE  5DFA               	subwf	_ambient& (0+255),w,b
  7706   004ED0  6E20               	movwf	color_clear_init_interrupts@low_threshold^0,c
  7707   004ED2  5017               	movf	(?___lwdiv+1)^0,w,c
  7708   004ED4  59FB               	subwfb	(_ambient+1)& (0+255),w,b
  7709   004ED6  6E21               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  7710                           
  7711                           ;color.c: 42:  color_writetoaddr(0x00, 0x13);
  7712   004ED8  0E13               	movlw	19
  7713   004EDA  6E12               	movwf	color_writetoaddr@value^0,c
  7714   004EDC  0E00               	movlw	0
  7715   004EDE  EC86  F02A         	call	_color_writetoaddr
  7716   004EE2                     
  7717                           ;color.c: 43:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7718   004EE2  0E3F               	movlw	63
  7719   004EE4  6E1D               	movwf	??_color_clear_init_interrupts^0,c
  7720   004EE6  0E55               	movlw	85
  7721   004EE8                     u4817:
  7722   004EE8  2EE8               	decfsz	wreg,f,c
  7723   004EEA  D7FE               	bra	u4817
  7724   004EEC  2E1D               	decfsz	??_color_clear_init_interrupts^0,f,c
  7725   004EEE  D7FC               	bra	u4817
  7726   004EF0  0000               	nop	
  7727   004EF2                     
  7728                           ;color.c: 44:     color_writetoaddr(0x07, (high_threshold >> 8));
  7729   004EF2  501F               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  7730   004EF4  6E12               	movwf	color_writetoaddr@value^0,c
  7731   004EF6  0E07               	movlw	7
  7732   004EF8  EC86  F02A         	call	_color_writetoaddr
  7733   004EFC                     
  7734                           ;color.c: 45:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  7735   004EFC  C01E  F012         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  7736   004F00  0E06               	movlw	6
  7737   004F02  EC86  F02A         	call	_color_writetoaddr
  7738   004F06                     
  7739                           ;color.c: 46:     color_writetoaddr(0x05, (low_threshold >> 8));
  7740   004F06  5021               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  7741   004F08  6E12               	movwf	color_writetoaddr@value^0,c
  7742   004F0A  0E05               	movlw	5
  7743   004F0C  EC86  F02A         	call	_color_writetoaddr
  7744   004F10                     
  7745                           ;color.c: 47:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  7746   004F10  C020  F012         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  7747   004F14  0E04               	movlw	4
  7748   004F16  EC86  F02A         	call	_color_writetoaddr
  7749   004F1A                     
  7750                           ;color.c: 48:     color_writetoaddr(0x0C, 0b11);
  7751   004F1A  0E03               	movlw	3
  7752   004F1C  6E12               	movwf	color_writetoaddr@value^0,c
  7753   004F1E  0E0C               	movlw	12
  7754   004F20  EC86  F02A         	call	_color_writetoaddr
  7755   004F24  0012               	return		;funcret
  7756   004F26                     __end_of_color_clear_init_interrupts:
  7757                           	callstack 0
  7758                           
  7759 ;; *************** function _color_writetoaddr *****************
  7760 ;; Defined at:
  7761 ;;		line 53 in file "color.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  address         1    wreg     unsigned char 
  7764 ;;  value           1   17[COMRAM] unsigned char 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  address         1   18[COMRAM] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      void 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7776 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7780 ;;Total ram usage:        2 bytes
  7781 ;; Hardware stack levels used: 1
  7782 ;; Hardware stack levels required when called: 8
  7783 ;; This function calls:
  7784 ;;		_I2C_2_Master_Start
  7785 ;;		_I2C_2_Master_Stop
  7786 ;;		_I2C_2_Master_Write
  7787 ;; This function is called by:
  7788 ;;		_color_click_init
  7789 ;;		_color_clear_init_interrupts
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text17
  7794   00550C                     __ptext17:
  7795                           	callstack 0
  7796   00550C                     _color_writetoaddr:
  7797                           	callstack 21
  7798                           
  7799                           ;incstack = 0
  7800                           ;color_writetoaddr@address stored from wreg
  7801   00550C  6E13               	movwf	color_writetoaddr@address^0,c
  7802   00550E                     
  7803                           ;color.c: 54:     I2C_2_Master_Start();
  7804   00550E  ECFD  F02A         	call	_I2C_2_Master_Start	;wreg free
  7805                           
  7806                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  7807   005512  0E52               	movlw	82
  7808   005514  ECE7  F02A         	call	_I2C_2_Master_Write
  7809                           
  7810                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
  7811   005518  5013               	movf	color_writetoaddr@address^0,w,c
  7812   00551A  0980               	iorlw	128
  7813   00551C  ECE7  F02A         	call	_I2C_2_Master_Write
  7814                           
  7815                           ;color.c: 57:     I2C_2_Master_Write(value);
  7816   005520  5012               	movf	color_writetoaddr@value^0,w,c
  7817   005522  ECE7  F02A         	call	_I2C_2_Master_Write
  7818                           
  7819                           ;color.c: 58:     I2C_2_Master_Stop();
  7820   005526  ECF8  F02A         	call	_I2C_2_Master_Stop	;wreg free
  7821   00552A  0012               	return		;funcret
  7822   00552C                     __end_of_color_writetoaddr:
  7823                           	callstack 0
  7824                           
  7825 ;; *************** function _I2C_2_Master_Init *****************
  7826 ;; Defined at:
  7827 ;;		line 4 in file "i2c.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;		None
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;		None
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      void 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7845 ;;Total ram usage:        0 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 6
  7848 ;; This function calls:
  7849 ;;		Nothing
  7850 ;; This function is called by:
  7851 ;;		_color_click_init
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text18
  7856   0053FE                     __ptext18:
  7857                           	callstack 0
  7858   0053FE                     _I2C_2_Master_Init:
  7859                           	callstack 23
  7860   0053FE                     
  7861                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7862   0053FE  010E               	movlb	14	; () banked
  7863   005400  51D9               	movf	217,w,b	;volatile
  7864   005402  0BF0               	andlw	-16
  7865   005404  0908               	iorlw	8
  7866   005406  6FD9               	movwf	217,b	;volatile
  7867   005408                     
  7868                           ; BSR set to: 14
  7869                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7870   005408  8BD9               	bsf	217,5,b	;volatile
  7871                           
  7872                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7873   00540A  0E9F               	movlw	159
  7874   00540C  6FD6               	movwf	214,b	;volatile
  7875   00540E                     
  7876                           ; BSR set to: 14
  7877                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7878   00540E  8A84               	bsf	132,5,c	;volatile
  7879   005410                     
  7880                           ; BSR set to: 14
  7881                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7882   005410  8C84               	bsf	132,6,c	;volatile
  7883   005412                     
  7884                           ; BSR set to: 14
  7885                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7886   005412  9BA7               	bcf	167,5,b	;volatile
  7887   005414                     
  7888                           ; BSR set to: 14
  7889                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7890   005414  9DA7               	bcf	167,6,b	;volatile
  7891                           
  7892                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7893   005416  0E1D               	movlw	29
  7894   005418  6F1D               	movwf	29,b	;volatile
  7895                           
  7896                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7897   00541A  0E1E               	movlw	30
  7898   00541C  6F1C               	movwf	28,b	;volatile
  7899                           
  7900                           ;i2c.c: 18:   RD5PPS=0x1C;
  7901   00541E  0E1C               	movlw	28
  7902   005420  6F6F               	movwf	111,b	;volatile
  7903                           
  7904                           ;i2c.c: 19:   RD6PPS=0x1B;
  7905   005422  0E1B               	movlw	27
  7906   005424  6F70               	movwf	112,b	;volatile
  7907   005426                     
  7908                           ; BSR set to: 14
  7909   005426  0012               	return		;funcret
  7910   005428                     __end_of_I2C_2_Master_Init:
  7911                           	callstack 0
  7912                           
  7913 ;; *************** function _color_calibration *****************
  7914 ;; Defined at:
  7915 ;;		line 154 in file "color.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  RGBC            2   22[BANK0 ] PTR struct RGBC_val
  7918 ;;		 -> main@RGBC(8), 
  7919 ;;  HSV             2   24[BANK0 ] PTR struct HSV_val
  7920 ;;		 -> main@HSV(6), 
  7921 ;;  red             2   26[BANK0 ] PTR struct HSV_calib
  7922 ;;		 -> main@red(6), 
  7923 ;;  green           2   28[BANK0 ] PTR struct HSV_calib
  7924 ;;		 -> main@green(6), 
  7925 ;;  blue            2   30[BANK0 ] PTR struct HSV_calib
  7926 ;;		 -> main@blue(6), 
  7927 ;;  yellow          2   32[BANK0 ] PTR struct HSV_calib
  7928 ;;		 -> main@yellow(6), 
  7929 ;;  pink            2   34[BANK0 ] PTR struct HSV_calib
  7930 ;;		 -> main@pink(6), 
  7931 ;;  orange          2   36[BANK0 ] PTR struct HSV_calib
  7932 ;;		 -> main@orange(6), 
  7933 ;;  lightblue       2   38[BANK0 ] PTR struct HSV_calib
  7934 ;;		 -> main@lightblue(6), 
  7935 ;;  white           2   40[BANK0 ] PTR struct HSV_calib
  7936 ;;		 -> main@white(6), 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;		None
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  1    wreg      void 
  7941 ;; Registers used:
  7942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7948 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7950 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7951 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7952 ;;Total ram usage:       22 bytes
  7953 ;; Hardware stack levels used: 1
  7954 ;; Hardware stack levels required when called: 9
  7955 ;; This function calls:
  7956 ;;		_color_read
  7957 ;;		_rgb_2_hsv
  7958 ;;		_white_Light
  7959 ;; This function is called by:
  7960 ;;		_main
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text19
  7965   002442                     __ptext19:
  7966                           	callstack 0
  7967   002442                     _color_calibration:
  7968                           	callstack 21
  7969   002442                     
  7970                           ;color.c: 154: void color_calibration(RGBC_val *RGBC, HSV_val *HSV, HSV_calib *red, HSV_
      +                          calib *green, HSV_calib *blue, HSV_calib *yellow, HSV_calib *pink, HSV_calib *orange, HS
      +                          V_calib *lightblue, HSV_calib *white);color.c: 155: {;color.c: 156:     white_Light(1);
  7971   002442  0E01               	movlw	1
  7972   002444  EC63  F02A         	call	_white_Light
  7973   002448                     
  7974                           ;color.c: 157:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7975   002448  8680               	bsf	128,3,c	;volatile
  7976   00244A  8E7C               	bsf	124,7,c	;volatile
  7977   00244C                     l191:
  7978   00244C  B48E               	btfsc	142,2,c	;volatile
  7979   00244E  EF2B  F012         	goto	u2691
  7980   002452  EF2D  F012         	goto	u2690
  7981   002456                     u2691:
  7982   002456  EF26  F012         	goto	l191
  7983   00245A                     u2690:
  7984   00245A                     
  7985                           ;color.c: 161:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7986   00245A  9680               	bcf	128,3,c	;volatile
  7987   00245C  9E7C               	bcf	124,7,c	;volatile
  7988   00245E                     
  7989                           ;color.c: 162:     color_read(RGBC);
  7990   00245E  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7991   002462  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7992   002466  ECEB  F020         	call	_color_read	;wreg free
  7993   00246A                     
  7994                           ;color.c: 163:     rgb_2_hsv(*RGBC, HSV);
  7995   00246A  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7996   00246E  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7997   002472  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7998   002476  0E07               	movlw	7
  7999   002478                     u2701:
  8000   002478  CFDB FFEB          	movff	plusw2,plusw0
  8001   00247C  06E8               	decf	wreg,f,c
  8002   00247E  E2FC               	bc	u2701
  8003   002480  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8004   002484  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8005   002488  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8006   00248C                     
  8007                           ;color.c: 164:     red->H = HSV->H;
  8008   00248C  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8009   002490  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8010   002494  C07A  FFE1         	movff	color_calibration@red,fsr1l
  8011   002498  C07B  FFE2         	movff	color_calibration@red+1,fsr1h
  8012   00249C  CFDE FFE6          	movff	postinc2,postinc1
  8013   0024A0  CFDD FFE5          	movff	postdec2,postdec1
  8014   0024A4                     
  8015                           ;color.c: 165:     red->S = HSV->S;
  8016   0024A4  0100               	movlb	0	; () banked
  8017   0024A6  EE20 F002          	lfsr	2,2
  8018   0024AA  5178               	movf	color_calibration@HSV& (0+255),w,b
  8019   0024AC  26D9               	addwf	fsr2l,f,c
  8020   0024AE  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8021   0024B0  22DA               	addwfc	fsr2h,f,c
  8022   0024B2  EE10 F002          	lfsr	1,2
  8023   0024B6  517A               	movf	color_calibration@red& (0+255),w,b
  8024   0024B8  26E1               	addwf	fsr1l,f,c
  8025   0024BA  517B               	movf	(color_calibration@red+1)& (0+255),w,b
  8026   0024BC  22E2               	addwfc	fsr1h,f,c
  8027   0024BE  CFDE FFE6          	movff	postinc2,postinc1
  8028   0024C2  CFDD FFE5          	movff	postdec2,postdec1
  8029   0024C6                     
  8030                           ; BSR set to: 0
  8031                           ;color.c: 166:     red->V = HSV->V;
  8032   0024C6  EE20 F004          	lfsr	2,4
  8033   0024CA  5178               	movf	color_calibration@HSV& (0+255),w,b
  8034   0024CC  26D9               	addwf	fsr2l,f,c
  8035   0024CE  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8036   0024D0  22DA               	addwfc	fsr2h,f,c
  8037   0024D2  EE10 F004          	lfsr	1,4
  8038   0024D6  517A               	movf	color_calibration@red& (0+255),w,b
  8039   0024D8  26E1               	addwf	fsr1l,f,c
  8040   0024DA  517B               	movf	(color_calibration@red+1)& (0+255),w,b
  8041   0024DC  22E2               	addwfc	fsr1h,f,c
  8042   0024DE  CFDE FFE6          	movff	postinc2,postinc1
  8043   0024E2  CFDD FFE5          	movff	postdec2,postdec1
  8044   0024E6                     
  8045                           ; BSR set to: 0
  8046                           ;color.c: 168:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8047   0024E6  0E29               	movlw	41
  8048   0024E8  6E41               	movwf	(??_color_calibration+1)^0,c
  8049   0024EA  0E96               	movlw	150
  8050   0024EC  6E40               	movwf	??_color_calibration^0,c
  8051   0024EE  0E7F               	movlw	127
  8052   0024F0                     u4827:
  8053   0024F0  2EE8               	decfsz	wreg,f,c
  8054   0024F2  D7FE               	bra	u4827
  8055   0024F4  2E40               	decfsz	??_color_calibration^0,f,c
  8056   0024F6  D7FC               	bra	u4827
  8057   0024F8  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8058   0024FA  D7FA               	bra	u4827
  8059   0024FC  0000               	nop	
  8060   0024FE                     
  8061                           ;color.c: 169:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8062   0024FE  8680               	bsf	128,3,c	;volatile
  8063   002500  8E7C               	bsf	124,7,c	;volatile
  8064   002502                     l194:
  8065   002502  B48E               	btfsc	142,2,c	;volatile
  8066   002504  EF86  F012         	goto	u2711
  8067   002508  EF88  F012         	goto	u2710
  8068   00250C                     u2711:
  8069   00250C  EF81  F012         	goto	l194
  8070   002510                     u2710:
  8071   002510                     
  8072                           ;color.c: 173:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8073   002510  9680               	bcf	128,3,c	;volatile
  8074   002512  9E7C               	bcf	124,7,c	;volatile
  8075   002514                     
  8076                           ;color.c: 174:     color_read(RGBC);
  8077   002514  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8078   002518  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8079   00251C  ECEB  F020         	call	_color_read	;wreg free
  8080   002520                     
  8081                           ;color.c: 175:     rgb_2_hsv(*RGBC, HSV);
  8082   002520  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8083   002524  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8084   002528  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8085   00252C  0E07               	movlw	7
  8086   00252E                     u2721:
  8087   00252E  CFDB FFEB          	movff	plusw2,plusw0
  8088   002532  06E8               	decf	wreg,f,c
  8089   002534  E2FC               	bc	u2721
  8090   002536  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8091   00253A  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8092   00253E  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8093   002542                     
  8094                           ;color.c: 176:     green->H = HSV->H;
  8095   002542  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8096   002546  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8097   00254A  C07C  FFE1         	movff	color_calibration@green,fsr1l
  8098   00254E  C07D  FFE2         	movff	color_calibration@green+1,fsr1h
  8099   002552  CFDE FFE6          	movff	postinc2,postinc1
  8100   002556  CFDD FFE5          	movff	postdec2,postdec1
  8101   00255A                     
  8102                           ;color.c: 177:     green->S = HSV->S;
  8103   00255A  0100               	movlb	0	; () banked
  8104   00255C  EE20 F002          	lfsr	2,2
  8105   002560  5178               	movf	color_calibration@HSV& (0+255),w,b
  8106   002562  26D9               	addwf	fsr2l,f,c
  8107   002564  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8108   002566  22DA               	addwfc	fsr2h,f,c
  8109   002568  EE10 F002          	lfsr	1,2
  8110   00256C  517C               	movf	color_calibration@green& (0+255),w,b
  8111   00256E  26E1               	addwf	fsr1l,f,c
  8112   002570  517D               	movf	(color_calibration@green+1)& (0+255),w,b
  8113   002572  22E2               	addwfc	fsr1h,f,c
  8114   002574  CFDE FFE6          	movff	postinc2,postinc1
  8115   002578  CFDD FFE5          	movff	postdec2,postdec1
  8116   00257C                     
  8117                           ; BSR set to: 0
  8118                           ;color.c: 178:     green->V = HSV->V;
  8119   00257C  EE20 F004          	lfsr	2,4
  8120   002580  5178               	movf	color_calibration@HSV& (0+255),w,b
  8121   002582  26D9               	addwf	fsr2l,f,c
  8122   002584  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8123   002586  22DA               	addwfc	fsr2h,f,c
  8124   002588  EE10 F004          	lfsr	1,4
  8125   00258C  517C               	movf	color_calibration@green& (0+255),w,b
  8126   00258E  26E1               	addwf	fsr1l,f,c
  8127   002590  517D               	movf	(color_calibration@green+1)& (0+255),w,b
  8128   002592  22E2               	addwfc	fsr1h,f,c
  8129   002594  CFDE FFE6          	movff	postinc2,postinc1
  8130   002598  CFDD FFE5          	movff	postdec2,postdec1
  8131   00259C                     
  8132                           ; BSR set to: 0
  8133                           ;color.c: 180:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8134   00259C  0E29               	movlw	41
  8135   00259E  6E41               	movwf	(??_color_calibration+1)^0,c
  8136   0025A0  0E96               	movlw	150
  8137   0025A2  6E40               	movwf	??_color_calibration^0,c
  8138   0025A4  0E7F               	movlw	127
  8139   0025A6                     u4837:
  8140   0025A6  2EE8               	decfsz	wreg,f,c
  8141   0025A8  D7FE               	bra	u4837
  8142   0025AA  2E40               	decfsz	??_color_calibration^0,f,c
  8143   0025AC  D7FC               	bra	u4837
  8144   0025AE  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8145   0025B0  D7FA               	bra	u4837
  8146   0025B2  0000               	nop	
  8147   0025B4                     
  8148                           ;color.c: 181:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8149   0025B4  8680               	bsf	128,3,c	;volatile
  8150   0025B6  8E7C               	bsf	124,7,c	;volatile
  8151   0025B8                     l197:
  8152   0025B8  B48E               	btfsc	142,2,c	;volatile
  8153   0025BA  EFE1  F012         	goto	u2731
  8154   0025BE  EFE3  F012         	goto	u2730
  8155   0025C2                     u2731:
  8156   0025C2  EFDC  F012         	goto	l197
  8157   0025C6                     u2730:
  8158   0025C6                     
  8159                           ;color.c: 185:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8160   0025C6  9680               	bcf	128,3,c	;volatile
  8161   0025C8  9E7C               	bcf	124,7,c	;volatile
  8162   0025CA                     
  8163                           ;color.c: 186:     color_read(RGBC);
  8164   0025CA  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8165   0025CE  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8166   0025D2  ECEB  F020         	call	_color_read	;wreg free
  8167   0025D6                     
  8168                           ;color.c: 187:     rgb_2_hsv(*RGBC, HSV);
  8169   0025D6  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8170   0025DA  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8171   0025DE  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8172   0025E2  0E07               	movlw	7
  8173   0025E4                     u2741:
  8174   0025E4  CFDB FFEB          	movff	plusw2,plusw0
  8175   0025E8  06E8               	decf	wreg,f,c
  8176   0025EA  E2FC               	bc	u2741
  8177   0025EC  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8178   0025F0  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8179   0025F4  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8180   0025F8                     
  8181                           ;color.c: 188:     blue->H = HSV->H;
  8182   0025F8  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8183   0025FC  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8184   002600  C07E  FFE1         	movff	color_calibration@blue,fsr1l
  8185   002604  C07F  FFE2         	movff	color_calibration@blue+1,fsr1h
  8186   002608  CFDE FFE6          	movff	postinc2,postinc1
  8187   00260C  CFDD FFE5          	movff	postdec2,postdec1
  8188   002610                     
  8189                           ;color.c: 189:     blue->S = HSV->S;
  8190   002610  0100               	movlb	0	; () banked
  8191   002612  EE20 F002          	lfsr	2,2
  8192   002616  5178               	movf	color_calibration@HSV& (0+255),w,b
  8193   002618  26D9               	addwf	fsr2l,f,c
  8194   00261A  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8195   00261C  22DA               	addwfc	fsr2h,f,c
  8196   00261E  EE10 F002          	lfsr	1,2
  8197   002622  517E               	movf	color_calibration@blue& (0+255),w,b
  8198   002624  26E1               	addwf	fsr1l,f,c
  8199   002626  517F               	movf	(color_calibration@blue+1)& (0+255),w,b
  8200   002628  22E2               	addwfc	fsr1h,f,c
  8201   00262A  CFDE FFE6          	movff	postinc2,postinc1
  8202   00262E  CFDD FFE5          	movff	postdec2,postdec1
  8203   002632                     
  8204                           ; BSR set to: 0
  8205                           ;color.c: 190:     blue->V = HSV->V;
  8206   002632  EE20 F004          	lfsr	2,4
  8207   002636  5178               	movf	color_calibration@HSV& (0+255),w,b
  8208   002638  26D9               	addwf	fsr2l,f,c
  8209   00263A  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8210   00263C  22DA               	addwfc	fsr2h,f,c
  8211   00263E  EE10 F004          	lfsr	1,4
  8212   002642  517E               	movf	color_calibration@blue& (0+255),w,b
  8213   002644  26E1               	addwf	fsr1l,f,c
  8214   002646  517F               	movf	(color_calibration@blue+1)& (0+255),w,b
  8215   002648  22E2               	addwfc	fsr1h,f,c
  8216   00264A  CFDE FFE6          	movff	postinc2,postinc1
  8217   00264E  CFDD FFE5          	movff	postdec2,postdec1
  8218   002652                     
  8219                           ; BSR set to: 0
  8220                           ;color.c: 192:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8221   002652  0E29               	movlw	41
  8222   002654  6E41               	movwf	(??_color_calibration+1)^0,c
  8223   002656  0E96               	movlw	150
  8224   002658  6E40               	movwf	??_color_calibration^0,c
  8225   00265A  0E7F               	movlw	127
  8226   00265C                     u4847:
  8227   00265C  2EE8               	decfsz	wreg,f,c
  8228   00265E  D7FE               	bra	u4847
  8229   002660  2E40               	decfsz	??_color_calibration^0,f,c
  8230   002662  D7FC               	bra	u4847
  8231   002664  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8232   002666  D7FA               	bra	u4847
  8233   002668  0000               	nop	
  8234   00266A                     
  8235                           ;color.c: 193:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8236   00266A  8680               	bsf	128,3,c	;volatile
  8237   00266C  8E7C               	bsf	124,7,c	;volatile
  8238   00266E                     l200:
  8239   00266E  B48E               	btfsc	142,2,c	;volatile
  8240   002670  EF3C  F013         	goto	u2751
  8241   002674  EF3E  F013         	goto	u2750
  8242   002678                     u2751:
  8243   002678  EF37  F013         	goto	l200
  8244   00267C                     u2750:
  8245   00267C                     
  8246                           ;color.c: 197:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8247   00267C  9680               	bcf	128,3,c	;volatile
  8248   00267E  9E7C               	bcf	124,7,c	;volatile
  8249   002680                     
  8250                           ;color.c: 198:     color_read(RGBC);
  8251   002680  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8252   002684  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8253   002688  ECEB  F020         	call	_color_read	;wreg free
  8254   00268C                     
  8255                           ;color.c: 199:     rgb_2_hsv(*RGBC, HSV);
  8256   00268C  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8257   002690  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8258   002694  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8259   002698  0E07               	movlw	7
  8260   00269A                     u2761:
  8261   00269A  CFDB FFEB          	movff	plusw2,plusw0
  8262   00269E  06E8               	decf	wreg,f,c
  8263   0026A0  E2FC               	bc	u2761
  8264   0026A2  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8265   0026A6  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8266   0026AA  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8267   0026AE                     
  8268                           ;color.c: 200:     yellow->H = HSV->H;
  8269   0026AE  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8270   0026B2  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8271   0026B6  C080  FFE1         	movff	color_calibration@yellow,fsr1l
  8272   0026BA  C081  FFE2         	movff	color_calibration@yellow+1,fsr1h
  8273   0026BE  CFDE FFE6          	movff	postinc2,postinc1
  8274   0026C2  CFDD FFE5          	movff	postdec2,postdec1
  8275   0026C6                     
  8276                           ;color.c: 201:     yellow->S = HSV->S;
  8277   0026C6  0100               	movlb	0	; () banked
  8278   0026C8  EE20 F002          	lfsr	2,2
  8279   0026CC  5178               	movf	color_calibration@HSV& (0+255),w,b
  8280   0026CE  26D9               	addwf	fsr2l,f,c
  8281   0026D0  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8282   0026D2  22DA               	addwfc	fsr2h,f,c
  8283   0026D4  EE10 F002          	lfsr	1,2
  8284   0026D8  5180               	movf	color_calibration@yellow& (0+255),w,b
  8285   0026DA  26E1               	addwf	fsr1l,f,c
  8286   0026DC  5181               	movf	(color_calibration@yellow+1)& (0+255),w,b
  8287   0026DE  22E2               	addwfc	fsr1h,f,c
  8288   0026E0  CFDE FFE6          	movff	postinc2,postinc1
  8289   0026E4  CFDD FFE5          	movff	postdec2,postdec1
  8290   0026E8                     
  8291                           ; BSR set to: 0
  8292                           ;color.c: 202:     yellow->V = HSV->V;
  8293   0026E8  EE20 F004          	lfsr	2,4
  8294   0026EC  5178               	movf	color_calibration@HSV& (0+255),w,b
  8295   0026EE  26D9               	addwf	fsr2l,f,c
  8296   0026F0  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8297   0026F2  22DA               	addwfc	fsr2h,f,c
  8298   0026F4  EE10 F004          	lfsr	1,4
  8299   0026F8  5180               	movf	color_calibration@yellow& (0+255),w,b
  8300   0026FA  26E1               	addwf	fsr1l,f,c
  8301   0026FC  5181               	movf	(color_calibration@yellow+1)& (0+255),w,b
  8302   0026FE  22E2               	addwfc	fsr1h,f,c
  8303   002700  CFDE FFE6          	movff	postinc2,postinc1
  8304   002704  CFDD FFE5          	movff	postdec2,postdec1
  8305   002708                     
  8306                           ; BSR set to: 0
  8307                           ;color.c: 204:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8308   002708  0E29               	movlw	41
  8309   00270A  6E41               	movwf	(??_color_calibration+1)^0,c
  8310   00270C  0E96               	movlw	150
  8311   00270E  6E40               	movwf	??_color_calibration^0,c
  8312   002710  0E7F               	movlw	127
  8313   002712                     u4857:
  8314   002712  2EE8               	decfsz	wreg,f,c
  8315   002714  D7FE               	bra	u4857
  8316   002716  2E40               	decfsz	??_color_calibration^0,f,c
  8317   002718  D7FC               	bra	u4857
  8318   00271A  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8319   00271C  D7FA               	bra	u4857
  8320   00271E  0000               	nop	
  8321   002720                     
  8322                           ;color.c: 205:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8323   002720  8680               	bsf	128,3,c	;volatile
  8324   002722  8E7C               	bsf	124,7,c	;volatile
  8325   002724                     l203:
  8326   002724  B48E               	btfsc	142,2,c	;volatile
  8327   002726  EF97  F013         	goto	u2771
  8328   00272A  EF99  F013         	goto	u2770
  8329   00272E                     u2771:
  8330   00272E  EF92  F013         	goto	l203
  8331   002732                     u2770:
  8332   002732                     
  8333                           ;color.c: 209:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8334   002732  9680               	bcf	128,3,c	;volatile
  8335   002734  9E7C               	bcf	124,7,c	;volatile
  8336   002736                     
  8337                           ;color.c: 210:     color_read(RGBC);
  8338   002736  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8339   00273A  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8340   00273E  ECEB  F020         	call	_color_read	;wreg free
  8341   002742                     
  8342                           ;color.c: 211:     rgb_2_hsv(*RGBC, HSV);
  8343   002742  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8344   002746  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8345   00274A  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8346   00274E  0E07               	movlw	7
  8347   002750                     u2781:
  8348   002750  CFDB FFEB          	movff	plusw2,plusw0
  8349   002754  06E8               	decf	wreg,f,c
  8350   002756  E2FC               	bc	u2781
  8351   002758  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8352   00275C  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8353   002760  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8354   002764                     
  8355                           ;color.c: 212:     pink->H = HSV->H;
  8356   002764  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8357   002768  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8358   00276C  C082  FFE1         	movff	color_calibration@pink,fsr1l
  8359   002770  C083  FFE2         	movff	color_calibration@pink+1,fsr1h
  8360   002774  CFDE FFE6          	movff	postinc2,postinc1
  8361   002778  CFDD FFE5          	movff	postdec2,postdec1
  8362   00277C                     
  8363                           ;color.c: 213:     pink->S = HSV->S;
  8364   00277C  0100               	movlb	0	; () banked
  8365   00277E  EE20 F002          	lfsr	2,2
  8366   002782  5178               	movf	color_calibration@HSV& (0+255),w,b
  8367   002784  26D9               	addwf	fsr2l,f,c
  8368   002786  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8369   002788  22DA               	addwfc	fsr2h,f,c
  8370   00278A  EE10 F002          	lfsr	1,2
  8371   00278E  5182               	movf	color_calibration@pink& (0+255),w,b
  8372   002790  26E1               	addwf	fsr1l,f,c
  8373   002792  5183               	movf	(color_calibration@pink+1)& (0+255),w,b
  8374   002794  22E2               	addwfc	fsr1h,f,c
  8375   002796  CFDE FFE6          	movff	postinc2,postinc1
  8376   00279A  CFDD FFE5          	movff	postdec2,postdec1
  8377   00279E                     
  8378                           ; BSR set to: 0
  8379                           ;color.c: 214:     pink->V = HSV->V;
  8380   00279E  EE20 F004          	lfsr	2,4
  8381   0027A2  5178               	movf	color_calibration@HSV& (0+255),w,b
  8382   0027A4  26D9               	addwf	fsr2l,f,c
  8383   0027A6  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8384   0027A8  22DA               	addwfc	fsr2h,f,c
  8385   0027AA  EE10 F004          	lfsr	1,4
  8386   0027AE  5182               	movf	color_calibration@pink& (0+255),w,b
  8387   0027B0  26E1               	addwf	fsr1l,f,c
  8388   0027B2  5183               	movf	(color_calibration@pink+1)& (0+255),w,b
  8389   0027B4  22E2               	addwfc	fsr1h,f,c
  8390   0027B6  CFDE FFE6          	movff	postinc2,postinc1
  8391   0027BA  CFDD FFE5          	movff	postdec2,postdec1
  8392   0027BE                     
  8393                           ; BSR set to: 0
  8394                           ;color.c: 216:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8395   0027BE  0E29               	movlw	41
  8396   0027C0  6E41               	movwf	(??_color_calibration+1)^0,c
  8397   0027C2  0E96               	movlw	150
  8398   0027C4  6E40               	movwf	??_color_calibration^0,c
  8399   0027C6  0E7F               	movlw	127
  8400   0027C8                     u4867:
  8401   0027C8  2EE8               	decfsz	wreg,f,c
  8402   0027CA  D7FE               	bra	u4867
  8403   0027CC  2E40               	decfsz	??_color_calibration^0,f,c
  8404   0027CE  D7FC               	bra	u4867
  8405   0027D0  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8406   0027D2  D7FA               	bra	u4867
  8407   0027D4  0000               	nop	
  8408   0027D6                     
  8409                           ;color.c: 217:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8410   0027D6  8680               	bsf	128,3,c	;volatile
  8411   0027D8  8E7C               	bsf	124,7,c	;volatile
  8412   0027DA                     l206:
  8413   0027DA  B48E               	btfsc	142,2,c	;volatile
  8414   0027DC  EFF2  F013         	goto	u2791
  8415   0027E0  EFF4  F013         	goto	u2790
  8416   0027E4                     u2791:
  8417   0027E4  EFED  F013         	goto	l206
  8418   0027E8                     u2790:
  8419   0027E8                     
  8420                           ;color.c: 221:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8421   0027E8  9680               	bcf	128,3,c	;volatile
  8422   0027EA  9E7C               	bcf	124,7,c	;volatile
  8423   0027EC                     
  8424                           ;color.c: 222:     color_read(RGBC);
  8425   0027EC  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8426   0027F0  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8427   0027F4  ECEB  F020         	call	_color_read	;wreg free
  8428   0027F8                     
  8429                           ;color.c: 223:     rgb_2_hsv(*RGBC, HSV);
  8430   0027F8  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8431   0027FC  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8432   002800  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8433   002804  0E07               	movlw	7
  8434   002806                     u2801:
  8435   002806  CFDB FFEB          	movff	plusw2,plusw0
  8436   00280A  06E8               	decf	wreg,f,c
  8437   00280C  E2FC               	bc	u2801
  8438   00280E  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8439   002812  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8440   002816  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8441   00281A                     
  8442                           ;color.c: 224:     orange->H = HSV->H;
  8443   00281A  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8444   00281E  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8445   002822  C084  FFE1         	movff	color_calibration@orange,fsr1l
  8446   002826  C085  FFE2         	movff	color_calibration@orange+1,fsr1h
  8447   00282A  CFDE FFE6          	movff	postinc2,postinc1
  8448   00282E  CFDD FFE5          	movff	postdec2,postdec1
  8449   002832                     
  8450                           ;color.c: 225:     orange->S = HSV->S;
  8451   002832  0100               	movlb	0	; () banked
  8452   002834  EE20 F002          	lfsr	2,2
  8453   002838  5178               	movf	color_calibration@HSV& (0+255),w,b
  8454   00283A  26D9               	addwf	fsr2l,f,c
  8455   00283C  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8456   00283E  22DA               	addwfc	fsr2h,f,c
  8457   002840  EE10 F002          	lfsr	1,2
  8458   002844  5184               	movf	color_calibration@orange& (0+255),w,b
  8459   002846  26E1               	addwf	fsr1l,f,c
  8460   002848  5185               	movf	(color_calibration@orange+1)& (0+255),w,b
  8461   00284A  22E2               	addwfc	fsr1h,f,c
  8462   00284C  CFDE FFE6          	movff	postinc2,postinc1
  8463   002850  CFDD FFE5          	movff	postdec2,postdec1
  8464   002854                     
  8465                           ; BSR set to: 0
  8466                           ;color.c: 226:     orange->V = HSV->V;
  8467   002854  EE20 F004          	lfsr	2,4
  8468   002858  5178               	movf	color_calibration@HSV& (0+255),w,b
  8469   00285A  26D9               	addwf	fsr2l,f,c
  8470   00285C  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8471   00285E  22DA               	addwfc	fsr2h,f,c
  8472   002860  EE10 F004          	lfsr	1,4
  8473   002864  5184               	movf	color_calibration@orange& (0+255),w,b
  8474   002866  26E1               	addwf	fsr1l,f,c
  8475   002868  5185               	movf	(color_calibration@orange+1)& (0+255),w,b
  8476   00286A  22E2               	addwfc	fsr1h,f,c
  8477   00286C  CFDE FFE6          	movff	postinc2,postinc1
  8478   002870  CFDD FFE5          	movff	postdec2,postdec1
  8479   002874                     
  8480                           ; BSR set to: 0
  8481                           ;color.c: 228:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8482   002874  0E29               	movlw	41
  8483   002876  6E41               	movwf	(??_color_calibration+1)^0,c
  8484   002878  0E96               	movlw	150
  8485   00287A  6E40               	movwf	??_color_calibration^0,c
  8486   00287C  0E7F               	movlw	127
  8487   00287E                     u4877:
  8488   00287E  2EE8               	decfsz	wreg,f,c
  8489   002880  D7FE               	bra	u4877
  8490   002882  2E40               	decfsz	??_color_calibration^0,f,c
  8491   002884  D7FC               	bra	u4877
  8492   002886  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8493   002888  D7FA               	bra	u4877
  8494   00288A  0000               	nop	
  8495   00288C                     
  8496                           ;color.c: 229:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8497   00288C  8680               	bsf	128,3,c	;volatile
  8498   00288E  8E7C               	bsf	124,7,c	;volatile
  8499   002890                     l209:
  8500   002890  B48E               	btfsc	142,2,c	;volatile
  8501   002892  EF4D  F014         	goto	u2811
  8502   002896  EF4F  F014         	goto	u2810
  8503   00289A                     u2811:
  8504   00289A  EF48  F014         	goto	l209
  8505   00289E                     u2810:
  8506   00289E                     
  8507                           ;color.c: 233:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8508   00289E  9680               	bcf	128,3,c	;volatile
  8509   0028A0  9E7C               	bcf	124,7,c	;volatile
  8510   0028A2                     
  8511                           ;color.c: 234:     color_read(RGBC);
  8512   0028A2  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8513   0028A6  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8514   0028AA  ECEB  F020         	call	_color_read	;wreg free
  8515   0028AE                     
  8516                           ;color.c: 235:     rgb_2_hsv(*RGBC, HSV);
  8517   0028AE  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8518   0028B2  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8519   0028B6  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8520   0028BA  0E07               	movlw	7
  8521   0028BC                     u2821:
  8522   0028BC  CFDB FFEB          	movff	plusw2,plusw0
  8523   0028C0  06E8               	decf	wreg,f,c
  8524   0028C2  E2FC               	bc	u2821
  8525   0028C4  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8526   0028C8  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8527   0028CC  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8528   0028D0                     
  8529                           ;color.c: 236:     lightblue->H = HSV->H;
  8530   0028D0  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8531   0028D4  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8532   0028D8  C086  FFE1         	movff	color_calibration@lightblue,fsr1l
  8533   0028DC  C087  FFE2         	movff	color_calibration@lightblue+1,fsr1h
  8534   0028E0  CFDE FFE6          	movff	postinc2,postinc1
  8535   0028E4  CFDD FFE5          	movff	postdec2,postdec1
  8536   0028E8                     
  8537                           ;color.c: 237:     lightblue->S = HSV->S;
  8538   0028E8  0100               	movlb	0	; () banked
  8539   0028EA  EE20 F002          	lfsr	2,2
  8540   0028EE  5178               	movf	color_calibration@HSV& (0+255),w,b
  8541   0028F0  26D9               	addwf	fsr2l,f,c
  8542   0028F2  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8543   0028F4  22DA               	addwfc	fsr2h,f,c
  8544   0028F6  EE10 F002          	lfsr	1,2
  8545   0028FA  5186               	movf	color_calibration@lightblue& (0+255),w,b
  8546   0028FC  26E1               	addwf	fsr1l,f,c
  8547   0028FE  5187               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  8548   002900  22E2               	addwfc	fsr1h,f,c
  8549   002902  CFDE FFE6          	movff	postinc2,postinc1
  8550   002906  CFDD FFE5          	movff	postdec2,postdec1
  8551   00290A                     
  8552                           ; BSR set to: 0
  8553                           ;color.c: 238:     lightblue->V = HSV->V;
  8554   00290A  EE20 F004          	lfsr	2,4
  8555   00290E  5178               	movf	color_calibration@HSV& (0+255),w,b
  8556   002910  26D9               	addwf	fsr2l,f,c
  8557   002912  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8558   002914  22DA               	addwfc	fsr2h,f,c
  8559   002916  EE10 F004          	lfsr	1,4
  8560   00291A  5186               	movf	color_calibration@lightblue& (0+255),w,b
  8561   00291C  26E1               	addwf	fsr1l,f,c
  8562   00291E  5187               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  8563   002920  22E2               	addwfc	fsr1h,f,c
  8564   002922  CFDE FFE6          	movff	postinc2,postinc1
  8565   002926  CFDD FFE5          	movff	postdec2,postdec1
  8566   00292A                     
  8567                           ; BSR set to: 0
  8568                           ;color.c: 240:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8569   00292A  0E29               	movlw	41
  8570   00292C  6E41               	movwf	(??_color_calibration+1)^0,c
  8571   00292E  0E96               	movlw	150
  8572   002930  6E40               	movwf	??_color_calibration^0,c
  8573   002932  0E7F               	movlw	127
  8574   002934                     u4887:
  8575   002934  2EE8               	decfsz	wreg,f,c
  8576   002936  D7FE               	bra	u4887
  8577   002938  2E40               	decfsz	??_color_calibration^0,f,c
  8578   00293A  D7FC               	bra	u4887
  8579   00293C  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8580   00293E  D7FA               	bra	u4887
  8581   002940  0000               	nop	
  8582   002942                     
  8583                           ;color.c: 241:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8584   002942  8680               	bsf	128,3,c	;volatile
  8585   002944  8E7C               	bsf	124,7,c	;volatile
  8586   002946                     l212:
  8587   002946  B48E               	btfsc	142,2,c	;volatile
  8588   002948  EFA8  F014         	goto	u2831
  8589   00294C  EFAA  F014         	goto	u2830
  8590   002950                     u2831:
  8591   002950  EFA3  F014         	goto	l212
  8592   002954                     u2830:
  8593   002954                     
  8594                           ;color.c: 245:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8595   002954  9680               	bcf	128,3,c	;volatile
  8596   002956  9E7C               	bcf	124,7,c	;volatile
  8597   002958                     
  8598                           ;color.c: 246:     color_read(RGBC);
  8599   002958  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8600   00295C  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8601   002960  ECEB  F020         	call	_color_read	;wreg free
  8602   002964                     
  8603                           ;color.c: 247:     rgb_2_hsv(*RGBC, HSV);
  8604   002964  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8605   002968  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8606   00296C  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8607   002970  0E07               	movlw	7
  8608   002972                     u2841:
  8609   002972  CFDB FFEB          	movff	plusw2,plusw0
  8610   002976  06E8               	decf	wreg,f,c
  8611   002978  E2FC               	bc	u2841
  8612   00297A  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8613   00297E  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8614   002982  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8615   002986                     
  8616                           ;color.c: 248:     white->H = HSV->H;
  8617   002986  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8618   00298A  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8619   00298E  C088  FFE1         	movff	color_calibration@white,fsr1l
  8620   002992  C089  FFE2         	movff	color_calibration@white+1,fsr1h
  8621   002996  CFDE FFE6          	movff	postinc2,postinc1
  8622   00299A  CFDD FFE5          	movff	postdec2,postdec1
  8623   00299E                     
  8624                           ;color.c: 249:     white->S = HSV->S;
  8625   00299E  0100               	movlb	0	; () banked
  8626   0029A0  EE20 F002          	lfsr	2,2
  8627   0029A4  5178               	movf	color_calibration@HSV& (0+255),w,b
  8628   0029A6  26D9               	addwf	fsr2l,f,c
  8629   0029A8  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8630   0029AA  22DA               	addwfc	fsr2h,f,c
  8631   0029AC  EE10 F002          	lfsr	1,2
  8632   0029B0  5188               	movf	color_calibration@white& (0+255),w,b
  8633   0029B2  26E1               	addwf	fsr1l,f,c
  8634   0029B4  5189               	movf	(color_calibration@white+1)& (0+255),w,b
  8635   0029B6  22E2               	addwfc	fsr1h,f,c
  8636   0029B8  CFDE FFE6          	movff	postinc2,postinc1
  8637   0029BC  CFDD FFE5          	movff	postdec2,postdec1
  8638   0029C0                     
  8639                           ; BSR set to: 0
  8640                           ;color.c: 250:     white->V = HSV->V;
  8641   0029C0  EE20 F004          	lfsr	2,4
  8642   0029C4  5178               	movf	color_calibration@HSV& (0+255),w,b
  8643   0029C6  26D9               	addwf	fsr2l,f,c
  8644   0029C8  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8645   0029CA  22DA               	addwfc	fsr2h,f,c
  8646   0029CC  EE10 F004          	lfsr	1,4
  8647   0029D0  5188               	movf	color_calibration@white& (0+255),w,b
  8648   0029D2  26E1               	addwf	fsr1l,f,c
  8649   0029D4  5189               	movf	(color_calibration@white+1)& (0+255),w,b
  8650   0029D6  22E2               	addwfc	fsr1h,f,c
  8651   0029D8  CFDE FFE6          	movff	postinc2,postinc1
  8652   0029DC  CFDD FFE5          	movff	postdec2,postdec1
  8653   0029E0                     
  8654                           ; BSR set to: 0
  8655                           ;color.c: 252:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8656   0029E0  0E29               	movlw	41
  8657   0029E2  6E41               	movwf	(??_color_calibration+1)^0,c
  8658   0029E4  0E96               	movlw	150
  8659   0029E6  6E40               	movwf	??_color_calibration^0,c
  8660   0029E8  0E7F               	movlw	127
  8661   0029EA                     u4897:
  8662   0029EA  2EE8               	decfsz	wreg,f,c
  8663   0029EC  D7FE               	bra	u4897
  8664   0029EE  2E40               	decfsz	??_color_calibration^0,f,c
  8665   0029F0  D7FC               	bra	u4897
  8666   0029F2  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8667   0029F4  D7FA               	bra	u4897
  8668   0029F6  0000               	nop	
  8669   0029F8                     
  8670                           ;color.c: 253:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8671   0029F8  8680               	bsf	128,3,c	;volatile
  8672   0029FA  8E7C               	bsf	124,7,c	;volatile
  8673   0029FC  0012               	return		;funcret
  8674   0029FE                     __end_of_color_calibration:
  8675                           	callstack 0
  8676                           
  8677 ;; *************** function _white_Light *****************
  8678 ;; Defined at:
  8679 ;;		line 62 in file "color.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;  state           1    wreg     unsigned char 
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;  state           1   15[COMRAM] unsigned char 
  8684 ;; Return value:  Size  Location     Type
  8685 ;;                  1    wreg      void 
  8686 ;; Registers used:
  8687 ;;		wreg, status,2
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8697 ;;Total ram usage:        1 bytes
  8698 ;; Hardware stack levels used: 1
  8699 ;; Hardware stack levels required when called: 6
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		_main
  8704 ;;		_color_calibration
  8705 ;;		_returnHome
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           	psect	text20
  8710   0054C6                     __ptext20:
  8711                           	callstack 0
  8712   0054C6                     _white_Light:
  8713                           	callstack 24
  8714                           
  8715                           ;incstack = 0
  8716                           ;white_Light@state stored from wreg
  8717   0054C6  6E10               	movwf	white_Light@state^0,c
  8718   0054C8                     
  8719                           ;color.c: 62: void white_Light(char state);color.c: 63: {;color.c: 64:     if (state){
  8720   0054C8  5010               	movf	white_Light@state^0,w,c
  8721   0054CA  B4D8               	btfsc	status,2,c
  8722   0054CC  EF6A  F02A         	goto	u1951
  8723   0054D0  EF6C  F02A         	goto	u1950
  8724   0054D4                     u1951:
  8725   0054D4  EF71  F02A         	goto	l155
  8726   0054D8                     u1950:
  8727   0054D8                     
  8728                           ;color.c: 65:         LATGbits.LATG0 = 1;
  8729   0054D8  807F               	bsf	127,0,c	;volatile
  8730                           
  8731                           ;color.c: 66:         LATEbits.LATE7 = 1;
  8732   0054DA  8E7D               	bsf	125,7,c	;volatile
  8733                           
  8734                           ;color.c: 67:         LATAbits.LATA3 = 1;
  8735   0054DC  8679               	bsf	121,3,c	;volatile
  8736                           
  8737                           ;color.c: 68:     }
  8738   0054DE  EF74  F02A         	goto	l157
  8739   0054E2                     l155:
  8740                           
  8741                           ;color.c: 70:         LATGbits.LATG0 = 0;
  8742   0054E2  907F               	bcf	127,0,c	;volatile
  8743                           
  8744                           ;color.c: 71:         LATEbits.LATE7 = 0;
  8745   0054E4  9E7D               	bcf	125,7,c	;volatile
  8746                           
  8747                           ;color.c: 72:         LATAbits.LATA3 = 0;
  8748   0054E6  9679               	bcf	121,3,c	;volatile
  8749   0054E8                     l157:
  8750   0054E8  0012               	return		;funcret
  8751   0054EA                     __end_of_white_Light:
  8752                           	callstack 0
  8753                           
  8754 ;; *************** function _rgb_2_hsv *****************
  8755 ;; Defined at:
  8756 ;;		line 266 in file "color.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;  RGBC            8   41[COMRAM] struct RGBC_val
  8759 ;;  HSV             2   49[COMRAM] PTR struct HSV_val
  8760 ;;		 -> main@HSV(6), 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  diff            4   14[BANK0 ] unsigned long 
  8763 ;;  b               2   20[BANK0 ] unsigned int 
  8764 ;;  g               2   18[BANK0 ] unsigned int 
  8765 ;;  cmax            2   12[BANK0 ] unsigned int 
  8766 ;;  r               2   10[BANK0 ] unsigned int 
  8767 ;;  cmin            2    4[BANK0 ] unsigned int 
  8768 ;; Return value:  Size  Location     Type
  8769 ;;                  1    wreg      void 
  8770 ;; Registers used:
  8771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8772 ;; Tracked objects:
  8773 ;;		On entry : 0/0
  8774 ;;		On exit  : 0/0
  8775 ;;		Unchanged: 0/0
  8776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8777 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8778 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8779 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8780 ;;      Totals:        22      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8781 ;;Total ram usage:       44 bytes
  8782 ;; Hardware stack levels used: 1
  8783 ;; Hardware stack levels required when called: 7
  8784 ;; This function calls:
  8785 ;;		___aldiv
  8786 ;;		___lldiv
  8787 ;;		___lmul
  8788 ;;		_max
  8789 ;;		_min
  8790 ;; This function is called by:
  8791 ;;		_main
  8792 ;;		_color_calibration
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	text21
  8797   002EDA                     __ptext21:
  8798                           	callstack 0
  8799   002EDA                     _rgb_2_hsv:
  8800                           	callstack 23
  8801   002EDA                     
  8802                           ;color.c: 272:     unsigned int r = (unsigned int)(RGBC.R*10000L/1900);
  8803   002EDA  C02A  F010         	movff	rgb_2_hsv@RGBC,___lmul@multiplier
  8804   002EDE  C02B  F011         	movff	rgb_2_hsv@RGBC+1,___lmul@multiplier+1
  8805   002EE2  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8806   002EE4  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8807   002EE6  0E10               	movlw	16
  8808   002EE8  6E14               	movwf	___lmul@multiplicand^0,c
  8809   002EEA  0E27               	movlw	39
  8810   002EEC  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8811   002EEE  0E00               	movlw	0
  8812   002EF0  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8813   002EF2  0E00               	movlw	0
  8814   002EF4  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8815   002EF6  ECF4  F028         	call	___lmul	;wreg free
  8816   002EFA  C010  F01C         	movff	?___lmul,___aldiv@dividend
  8817   002EFE  C011  F01D         	movff	?___lmul+1,___aldiv@dividend+1
  8818   002F02  C012  F01E         	movff	?___lmul+2,___aldiv@dividend+2
  8819   002F06  C013  F01F         	movff	?___lmul+3,___aldiv@dividend+3
  8820   002F0A  0E6C               	movlw	108
  8821   002F0C  6E20               	movwf	___aldiv@divisor^0,c
  8822   002F0E  0E07               	movlw	7
  8823   002F10  6E21               	movwf	(___aldiv@divisor+1)^0,c
  8824   002F12  0E00               	movlw	0
  8825   002F14  6E22               	movwf	(___aldiv@divisor+2)^0,c
  8826   002F16  0E00               	movlw	0
  8827   002F18  6E23               	movwf	(___aldiv@divisor+3)^0,c
  8828   002F1A  EC61  F025         	call	___aldiv	;wreg free
  8829   002F1E  C01C  F06A         	movff	?___aldiv,rgb_2_hsv@r
  8830   002F22  C01D  F06B         	movff	?___aldiv+1,rgb_2_hsv@r+1
  8831                           
  8832                           ;color.c: 273:     unsigned int g = (unsigned int)(RGBC.G*10000L/1400);
  8833   002F26  C02C  F010         	movff	rgb_2_hsv@RGBC+2,___lmul@multiplier
  8834   002F2A  C02D  F011         	movff	rgb_2_hsv@RGBC+3,___lmul@multiplier+1
  8835   002F2E  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8836   002F30  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8837   002F32  0E10               	movlw	16
  8838   002F34  6E14               	movwf	___lmul@multiplicand^0,c
  8839   002F36  0E27               	movlw	39
  8840   002F38  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8841   002F3A  0E00               	movlw	0
  8842   002F3C  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8843   002F3E  0E00               	movlw	0
  8844   002F40  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8845   002F42  ECF4  F028         	call	___lmul	;wreg free
  8846   002F46  C010  F01C         	movff	?___lmul,___aldiv@dividend
  8847   002F4A  C011  F01D         	movff	?___lmul+1,___aldiv@dividend+1
  8848   002F4E  C012  F01E         	movff	?___lmul+2,___aldiv@dividend+2
  8849   002F52  C013  F01F         	movff	?___lmul+3,___aldiv@dividend+3
  8850   002F56  0E78               	movlw	120
  8851   002F58  6E20               	movwf	___aldiv@divisor^0,c
  8852   002F5A  0E05               	movlw	5
  8853   002F5C  6E21               	movwf	(___aldiv@divisor+1)^0,c
  8854   002F5E  0E00               	movlw	0
  8855   002F60  6E22               	movwf	(___aldiv@divisor+2)^0,c
  8856   002F62  0E00               	movlw	0
  8857   002F64  6E23               	movwf	(___aldiv@divisor+3)^0,c
  8858   002F66  EC61  F025         	call	___aldiv	;wreg free
  8859   002F6A  C01C  F072         	movff	?___aldiv,rgb_2_hsv@g
  8860   002F6E  C01D  F073         	movff	?___aldiv+1,rgb_2_hsv@g+1
  8861                           
  8862                           ;color.c: 274:     unsigned int b = (unsigned int)(RGBC.B*10000L/1600);
  8863   002F72  C02E  F010         	movff	rgb_2_hsv@RGBC+4,___lmul@multiplier
  8864   002F76  C02F  F011         	movff	rgb_2_hsv@RGBC+5,___lmul@multiplier+1
  8865   002F7A  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8866   002F7C  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8867   002F7E  0E10               	movlw	16
  8868   002F80  6E14               	movwf	___lmul@multiplicand^0,c
  8869   002F82  0E27               	movlw	39
  8870   002F84  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8871   002F86  0E00               	movlw	0
  8872   002F88  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8873   002F8A  0E00               	movlw	0
  8874   002F8C  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8875   002F8E  ECF4  F028         	call	___lmul	;wreg free
  8876   002F92  C010  F01C         	movff	?___lmul,___aldiv@dividend
  8877   002F96  C011  F01D         	movff	?___lmul+1,___aldiv@dividend+1
  8878   002F9A  C012  F01E         	movff	?___lmul+2,___aldiv@dividend+2
  8879   002F9E  C013  F01F         	movff	?___lmul+3,___aldiv@dividend+3
  8880   002FA2  0E40               	movlw	64
  8881   002FA4  6E20               	movwf	___aldiv@divisor^0,c
  8882   002FA6  0E06               	movlw	6
  8883   002FA8  6E21               	movwf	(___aldiv@divisor+1)^0,c
  8884   002FAA  0E00               	movlw	0
  8885   002FAC  6E22               	movwf	(___aldiv@divisor+2)^0,c
  8886   002FAE  0E00               	movlw	0
  8887   002FB0  6E23               	movwf	(___aldiv@divisor+3)^0,c
  8888   002FB2  EC61  F025         	call	___aldiv	;wreg free
  8889   002FB6  C01C  F074         	movff	?___aldiv,rgb_2_hsv@b
  8890   002FBA  C01D  F075         	movff	?___aldiv+1,rgb_2_hsv@b+1
  8891                           
  8892                           ;color.c: 277:     unsigned int cmax = max(r, max(g, b));
  8893   002FBE  C072  F010         	movff	rgb_2_hsv@g,max@a
  8894   002FC2  C073  F011         	movff	rgb_2_hsv@g+1,max@a+1
  8895   002FC6  C074  F012         	movff	rgb_2_hsv@b,max@b
  8896   002FCA  C075  F013         	movff	rgb_2_hsv@b+1,max@b+1
  8897   002FCE  ECE9  F029         	call	_max	;wreg free
  8898   002FD2  C010  F066         	movff	?_max,_rgb_2_hsv$3588
  8899   002FD6  C011  F067         	movff	?_max+1,_rgb_2_hsv$3588+1
  8900                           
  8901                           ;color.c: 277:     unsigned int cmax = max(r, max(g, b));
  8902   002FDA  C06A  F010         	movff	rgb_2_hsv@r,max@a
  8903   002FDE  C06B  F011         	movff	rgb_2_hsv@r+1,max@a+1
  8904   002FE2  C066  F012         	movff	_rgb_2_hsv$3588,max@b
  8905   002FE6  C067  F013         	movff	_rgb_2_hsv$3588+1,max@b+1
  8906   002FEA  ECE9  F029         	call	_max	;wreg free
  8907   002FEE  C010  F06C         	movff	?_max,rgb_2_hsv@cmax
  8908   002FF2  C011  F06D         	movff	?_max+1,rgb_2_hsv@cmax+1
  8909                           
  8910                           ;color.c: 278:     unsigned int cmin = min(r, min(g, b));
  8911   002FF6  C072  F010         	movff	rgb_2_hsv@g,min@a
  8912   002FFA  C073  F011         	movff	rgb_2_hsv@g+1,min@a+1
  8913   002FFE  C074  F012         	movff	rgb_2_hsv@b,min@b
  8914   003002  C075  F013         	movff	rgb_2_hsv@b+1,min@b+1
  8915   003006  ECD3  F029         	call	_min	;wreg free
  8916   00300A  C010  F068         	movff	?_min,_rgb_2_hsv$3589
  8917   00300E  C011  F069         	movff	?_min+1,_rgb_2_hsv$3589+1
  8918                           
  8919                           ;color.c: 278:     unsigned int cmin = min(r, min(g, b));
  8920   003012  C06A  F010         	movff	rgb_2_hsv@r,min@a
  8921   003016  C06B  F011         	movff	rgb_2_hsv@r+1,min@a+1
  8922   00301A  C068  F012         	movff	_rgb_2_hsv$3589,min@b
  8923   00301E  C069  F013         	movff	_rgb_2_hsv$3589+1,min@b+1
  8924   003022  ECD3  F029         	call	_min	;wreg free
  8925   003026  C010  F064         	movff	?_min,rgb_2_hsv@cmin
  8926   00302A  C011  F065         	movff	?_min+1,rgb_2_hsv@cmin+1
  8927   00302E                     
  8928                           ;color.c: 279:     unsigned long diff = cmax - cmin;
  8929   00302E  0100               	movlb	0	; () banked
  8930   003030  5164               	movf	rgb_2_hsv@cmin& (0+255),w,b
  8931   003032  5D6C               	subwf	rgb_2_hsv@cmax& (0+255),w,b
  8932   003034  6E34               	movwf	??_rgb_2_hsv^0,c
  8933   003036  5165               	movf	(rgb_2_hsv@cmin+1)& (0+255),w,b
  8934   003038  596D               	subwfb	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8935   00303A  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8936   00303C  C034  F06E         	movff	??_rgb_2_hsv,rgb_2_hsv@diff
  8937   003040  C035  F06F         	movff	??_rgb_2_hsv+1,rgb_2_hsv@diff+1
  8938   003044  6B70               	clrf	(rgb_2_hsv@diff+2)& (0+255),b
  8939   003046  6B71               	clrf	(rgb_2_hsv@diff+3)& (0+255),b
  8940   003048                     
  8941                           ; BSR set to: 0
  8942                           ;color.c: 282:     if (cmax == r){
  8943   003048  516A               	movf	rgb_2_hsv@r& (0+255),w,b
  8944   00304A  196C               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8945   00304C  E107               	bnz	u2351
  8946   00304E  516B               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8947   003050  196D               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8948   003052  A4D8               	btfss	status,2,c
  8949   003054  EF2E  F018         	goto	u2351
  8950   003058  EF30  F018         	goto	u2350
  8951   00305C                     u2351:
  8952   00305C  EFD7  F018         	goto	l3574
  8953   003060                     u2350:
  8954   003060                     
  8955                           ; BSR set to: 0
  8956                           ;color.c: 283:         if (g > b){HSV->H = (unsigned int)((g-b)*6000L/diff);}
  8957   003060  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  8958   003062  5D74               	subwf	rgb_2_hsv@b& (0+255),w,b
  8959   003064  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8960   003066  5975               	subwfb	(rgb_2_hsv@b+1)& (0+255),w,b
  8961   003068  B0D8               	btfsc	status,0,c
  8962   00306A  EF39  F018         	goto	u2361
  8963   00306E  EF3B  F018         	goto	u2360
  8964   003072                     u2361:
  8965   003072  EF6D  F018         	goto	l3568
  8966   003076                     u2360:
  8967   003076                     
  8968                           ; BSR set to: 0
  8969   003076  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8970   003078  5D72               	subwf	rgb_2_hsv@g& (0+255),w,b
  8971   00307A  6E34               	movwf	??_rgb_2_hsv^0,c
  8972   00307C  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8973   00307E  5973               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8974   003080  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8975   003082  C034  F010         	movff	??_rgb_2_hsv,___lmul@multiplier
  8976   003086  C035  F011         	movff	??_rgb_2_hsv+1,___lmul@multiplier+1
  8977   00308A  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8978   00308C  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8979   00308E  0E70               	movlw	112
  8980   003090  6E14               	movwf	___lmul@multiplicand^0,c
  8981   003092  0E17               	movlw	23
  8982   003094  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8983   003096  0E00               	movlw	0
  8984   003098  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8985   00309A  0E00               	movlw	0
  8986   00309C  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8987   00309E  ECF4  F028         	call	___lmul	;wreg free
  8988   0030A2  C010  F01C         	movff	?___lmul,___lldiv@dividend
  8989   0030A6  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  8990   0030AA  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  8991   0030AE  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  8992   0030B2  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8993   0030B6  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8994   0030BA  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8995   0030BE  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8996   0030C2  ECE6  F027         	call	___lldiv	;wreg free
  8997   0030C6  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8998   0030CA  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8999   0030CE  C01C  FFDE         	movff	?___lldiv,postinc2
  9000   0030D2  C01D  FFDD         	movff	?___lldiv+1,postdec2
  9001   0030D6  EF8F  F019         	goto	l232
  9002   0030DA                     l3568:
  9003                           
  9004                           ; BSR set to: 0
  9005   0030DA  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  9006   0030DC  5D72               	subwf	rgb_2_hsv@g& (0+255),w,b
  9007   0030DE  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  9008   0030E0  5973               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  9009   0030E2  B0D8               	btfsc	status,0,c
  9010   0030E4  EF76  F018         	goto	u2371
  9011   0030E8  EF78  F018         	goto	u2370
  9012   0030EC                     u2371:
  9013   0030EC  EF8F  F019         	goto	l232
  9014   0030F0                     u2370:
  9015   0030F0                     
  9016                           ; BSR set to: 0
  9017   0030F0  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  9018   0030F2  6E34               	movwf	??_rgb_2_hsv^0,c
  9019   0030F4  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  9020   0030F6  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  9021   0030F8  6A36               	clrf	(??_rgb_2_hsv+2)^0,c
  9022   0030FA  6A37               	clrf	(??_rgb_2_hsv+3)^0,c
  9023   0030FC  C06E  F010         	movff	rgb_2_hsv@diff,___lmul@multiplier
  9024   003100  C06F  F011         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  9025   003104  C070  F012         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  9026   003108  C071  F013         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  9027   00310C  0E06               	movlw	6
  9028   00310E  6E14               	movwf	___lmul@multiplicand^0,c
  9029   003110  0E00               	movlw	0
  9030   003112  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  9031   003114  0E00               	movlw	0
  9032   003116  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  9033   003118  0E00               	movlw	0
  9034   00311A  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  9035   00311C  ECF4  F028         	call	___lmul	;wreg free
  9036   003120  0100               	movlb	0	; () banked
  9037   003122  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  9038   003124  2410               	addwf	?___lmul^0,w,c
  9039   003126  6E38               	movwf	(??_rgb_2_hsv+4)^0,c
  9040   003128  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  9041   00312A  2011               	addwfc	(?___lmul+1)^0,w,c
  9042   00312C  6E39               	movwf	(??_rgb_2_hsv+5)^0,c
  9043   00312E  0E00               	movlw	0
  9044   003130  2012               	addwfc	(?___lmul+2)^0,w,c
  9045   003132  6E3A               	movwf	(??_rgb_2_hsv+6)^0,c
  9046   003134  0E00               	movlw	0
  9047   003136  2013               	addwfc	(?___lmul+3)^0,w,c
  9048   003138  6E3B               	movwf	(??_rgb_2_hsv+7)^0,c
  9049   00313A  5034               	movf	??_rgb_2_hsv^0,w,c
  9050   00313C  5C38               	subwf	(??_rgb_2_hsv+4)^0,w,c
  9051   00313E  6F60               	movwf	_rgb_2_hsv$3590& (0+255),b
  9052   003140  5035               	movf	(??_rgb_2_hsv+1)^0,w,c
  9053   003142  5839               	subwfb	(??_rgb_2_hsv+5)^0,w,c
  9054   003144  6F61               	movwf	(_rgb_2_hsv$3590+1)& (0+255),b
  9055   003146  5036               	movf	(??_rgb_2_hsv+2)^0,w,c
  9056   003148  583A               	subwfb	(??_rgb_2_hsv+6)^0,w,c
  9057   00314A  6F62               	movwf	(_rgb_2_hsv$3590+2)& (0+255),b
  9058   00314C  5037               	movf	(??_rgb_2_hsv+3)^0,w,c
  9059   00314E  583B               	subwfb	(??_rgb_2_hsv+7)^0,w,c
  9060   003150  6F63               	movwf	(_rgb_2_hsv$3590+3)& (0+255),b
  9061   003152                     
  9062                           ; BSR set to: 0
  9063   003152  C060  F010         	movff	_rgb_2_hsv$3590,___lmul@multiplier
  9064   003156  C061  F011         	movff	_rgb_2_hsv$3590+1,___lmul@multiplier+1
  9065   00315A  C062  F012         	movff	_rgb_2_hsv$3590+2,___lmul@multiplier+2
  9066   00315E  C063  F013         	movff	_rgb_2_hsv$3590+3,___lmul@multiplier+3
  9067   003162  0E70               	movlw	112
  9068   003164  6E14               	movwf	___lmul@multiplicand^0,c
  9069   003166  0E17               	movlw	23
  9070   003168  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  9071   00316A  0E00               	movlw	0
  9072   00316C  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  9073   00316E  0E00               	movlw	0
  9074   003170  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  9075   003172  ECF4  F028         	call	___lmul	;wreg free
  9076   003176  C010  F01C         	movff	?___lmul,___lldiv@dividend
  9077   00317A  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  9078   00317E  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  9079   003182  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  9080   003186  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  9081   00318A  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  9082   00318E  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  9083   003192  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  9084   003196  ECE6  F027         	call	___lldiv	;wreg free
  9085   00319A  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  9086   00319E  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  9087   0031A2  C01C  FFDE         	movff	?___lldiv,postinc2
  9088   0031A6  C01D  FFDD         	movff	?___lldiv+1,postdec2
  9089   0031AA  EF8F  F019         	goto	l232
  9090   0031AE                     l3574:
  9091                           
  9092                           ; BSR set to: 0
  9093   0031AE  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  9094   0031B0  196C               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  9095   0031B2  E107               	bnz	u2381
  9096   0031B4  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  9097   0031B6  196D               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  9098   0031B8  A4D8               	btfss	status,2,c
  9099   0031BA  EFE1  F018         	goto	u2381
  9100   0031BE  EFE3  F018         	goto	u2380
  9101   0031C2                     u2381:
  9102   0031C2  EF30  F019         	goto	l3578
  9103   0031C6                     u2380:
  9104   0031C6                     
  9105                           ; BSR set to: 0
  9106   0031C6  516A               	movf	rgb_2_hsv@r& (0+255),w,b
  9107   0031C8  6E34               	movwf	??_rgb_2_hsv^0,c
  9108   0031CA  516B               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  9109   0031CC  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  9110   0031CE  6A36               	clrf	(??_rgb_2_hsv+2)^0,c
  9111   0031D0  6A37               	clrf	(??_rgb_2_hsv+3)^0,c
  9112   0031D2  90D8               	bcf	status,0,c
  9113   0031D4  356E               	rlcf	rgb_2_hsv@diff& (0+255),w,b
  9114   0031D6  6E38               	movwf	(??_rgb_2_hsv+4)^0,c
  9115   0031D8  356F               	rlcf	(rgb_2_hsv@diff+1)& (0+255),w,b
  9116   0031DA  6E39               	movwf	(??_rgb_2_hsv+5)^0,c
  9117   0031DC  3570               	rlcf	(rgb_2_hsv@diff+2)& (0+255),w,b
  9118   0031DE  6E3A               	movwf	(??_rgb_2_hsv+6)^0,c
  9119   0031E0  3571               	rlcf	(rgb_2_hsv@diff+3)& (0+255),w,b
  9120   0031E2  6E3B               	movwf	(??_rgb_2_hsv+7)^0,c
  9121   0031E4  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  9122   0031E6  2438               	addwf	(??_rgb_2_hsv+4)^0,w,c
  9123   0031E8  6E3C               	movwf	(??_rgb_2_hsv+8)^0,c
  9124   0031EA  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  9125   0031EC  2039               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  9126   0031EE  6E3D               	movwf	(??_rgb_2_hsv+9)^0,c
  9127   0031F0  0E00               	movlw	0
  9128   0031F2  203A               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  9129   0031F4  6E3E               	movwf	(??_rgb_2_hsv+10)^0,c
  9130   0031F6  0E00               	movlw	0
  9131   0031F8  203B               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  9132   0031FA  6E3F               	movwf	(??_rgb_2_hsv+11)^0,c
  9133   0031FC  5034               	movf	??_rgb_2_hsv^0,w,c
  9134   0031FE  5C3C               	subwf	(??_rgb_2_hsv+8)^0,w,c
  9135   003200  6E10               	movwf	___lmul@multiplier^0,c
  9136   003202  5035               	movf	(??_rgb_2_hsv+1)^0,w,c
  9137   003204  583D               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  9138   003206  6E11               	movwf	(___lmul@multiplier+1)^0,c
  9139   003208  5036               	movf	(??_rgb_2_hsv+2)^0,w,c
  9140   00320A  583E               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  9141   00320C  6E12               	movwf	(___lmul@multiplier+2)^0,c
  9142   00320E  5037               	movf	(??_rgb_2_hsv+3)^0,w,c
  9143   003210  583F               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  9144   003212  6E13               	movwf	(___lmul@multiplier+3)^0,c
  9145   003214  0E70               	movlw	112
  9146   003216  6E14               	movwf	___lmul@multiplicand^0,c
  9147   003218  0E17               	movlw	23
  9148   00321A  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  9149   00321C  0E00               	movlw	0
  9150   00321E  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  9151   003220  0E00               	movlw	0
  9152   003222  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  9153   003224  ECF4  F028         	call	___lmul	;wreg free
  9154   003228  C010  F01C         	movff	?___lmul,___lldiv@dividend
  9155   00322C  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  9156   003230  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  9157   003234  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  9158   003238  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  9159   00323C  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  9160   003240  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  9161   003244  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  9162   003248  ECE6  F027         	call	___lldiv	;wreg free
  9163   00324C  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  9164   003250  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  9165   003254  C01C  FFDE         	movff	?___lldiv,postinc2
  9166   003258  C01D  FFDD         	movff	?___lldiv+1,postdec2
  9167   00325C  EF8F  F019         	goto	l232
  9168   003260                     l3578:
  9169                           
  9170                           ; BSR set to: 0
  9171   003260  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  9172   003262  196C               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  9173   003264  E107               	bnz	u2391
  9174   003266  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  9175   003268  196D               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  9176   00326A  A4D8               	btfss	status,2,c
  9177   00326C  EF3A  F019         	goto	u2391
  9178   003270  EF3C  F019         	goto	u2390
  9179   003274                     u2391:
  9180   003274  EF8F  F019         	goto	l232
  9181   003278                     u2390:
  9182   003278                     
  9183                           ; BSR set to: 0
  9184   003278  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  9185   00327A  6E34               	movwf	??_rgb_2_hsv^0,c
  9186   00327C  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  9187   00327E  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  9188   003280  6A36               	clrf	(??_rgb_2_hsv+2)^0,c
  9189   003282  6A37               	clrf	(??_rgb_2_hsv+3)^0,c
  9190   003284  C06E  F038         	movff	rgb_2_hsv@diff,??_rgb_2_hsv+4
  9191   003288  C06F  F039         	movff	rgb_2_hsv@diff+1,??_rgb_2_hsv+5
  9192   00328C  C070  F03A         	movff	rgb_2_hsv@diff+2,??_rgb_2_hsv+6
  9193   003290  C071  F03B         	movff	rgb_2_hsv@diff+3,??_rgb_2_hsv+7
  9194   003294  0E02               	movlw	2
  9195   003296                     u2405:
  9196   003296  90D8               	bcf	status,0,c
  9197   003298  3638               	rlcf	(??_rgb_2_hsv+4)^0,f,c
  9198   00329A  3639               	rlcf	(??_rgb_2_hsv+5)^0,f,c
  9199   00329C  363A               	rlcf	(??_rgb_2_hsv+6)^0,f,c
  9200   00329E  363B               	rlcf	(??_rgb_2_hsv+7)^0,f,c
  9201   0032A0  2EE8               	decfsz	wreg,f,c
  9202   0032A2  EF4B  F019         	goto	u2405
  9203   0032A6  516A               	movf	rgb_2_hsv@r& (0+255),w,b
  9204   0032A8  2438               	addwf	(??_rgb_2_hsv+4)^0,w,c
  9205   0032AA  6E3C               	movwf	(??_rgb_2_hsv+8)^0,c
  9206   0032AC  516B               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  9207   0032AE  2039               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  9208   0032B0  6E3D               	movwf	(??_rgb_2_hsv+9)^0,c
  9209   0032B2  0E00               	movlw	0
  9210   0032B4  203A               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  9211   0032B6  6E3E               	movwf	(??_rgb_2_hsv+10)^0,c
  9212   0032B8  0E00               	movlw	0
  9213   0032BA  203B               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  9214   0032BC  6E3F               	movwf	(??_rgb_2_hsv+11)^0,c
  9215   0032BE  5034               	movf	??_rgb_2_hsv^0,w,c
  9216   0032C0  5C3C               	subwf	(??_rgb_2_hsv+8)^0,w,c
  9217   0032C2  6E10               	movwf	___lmul@multiplier^0,c
  9218   0032C4  5035               	movf	(??_rgb_2_hsv+1)^0,w,c
  9219   0032C6  583D               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  9220   0032C8  6E11               	movwf	(___lmul@multiplier+1)^0,c
  9221   0032CA  5036               	movf	(??_rgb_2_hsv+2)^0,w,c
  9222   0032CC  583E               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  9223   0032CE  6E12               	movwf	(___lmul@multiplier+2)^0,c
  9224   0032D0  5037               	movf	(??_rgb_2_hsv+3)^0,w,c
  9225   0032D2  583F               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  9226   0032D4  6E13               	movwf	(___lmul@multiplier+3)^0,c
  9227   0032D6  0E70               	movlw	112
  9228   0032D8  6E14               	movwf	___lmul@multiplicand^0,c
  9229   0032DA  0E17               	movlw	23
  9230   0032DC  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  9231   0032DE  0E00               	movlw	0
  9232   0032E0  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  9233   0032E2  0E00               	movlw	0
  9234   0032E4  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  9235   0032E6  ECF4  F028         	call	___lmul	;wreg free
  9236   0032EA  C010  F01C         	movff	?___lmul,___lldiv@dividend
  9237   0032EE  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  9238   0032F2  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  9239   0032F6  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  9240   0032FA  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  9241   0032FE  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  9242   003302  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  9243   003306  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  9244   00330A  ECE6  F027         	call	___lldiv	;wreg free
  9245   00330E  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  9246   003312  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  9247   003316  C01C  FFDE         	movff	?___lldiv,postinc2
  9248   00331A  C01D  FFDD         	movff	?___lldiv+1,postdec2
  9249   00331E                     l232:
  9250                           
  9251                           ;color.c: 292:     HSV->S = (unsigned int)((diff * 10000)/cmax);
  9252   00331E  C06E  F010         	movff	rgb_2_hsv@diff,___lmul@multiplier
  9253   003322  C06F  F011         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  9254   003326  C070  F012         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  9255   00332A  C071  F013         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  9256   00332E  0E10               	movlw	16
  9257   003330  6E14               	movwf	___lmul@multiplicand^0,c
  9258   003332  0E27               	movlw	39
  9259   003334  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  9260   003336  0E00               	movlw	0
  9261   003338  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  9262   00333A  0E00               	movlw	0
  9263   00333C  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  9264   00333E  ECF4  F028         	call	___lmul	;wreg free
  9265   003342  C010  F01C         	movff	?___lmul,___lldiv@dividend
  9266   003346  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  9267   00334A  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  9268   00334E  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  9269   003352  C06C  F020         	movff	rgb_2_hsv@cmax,___lldiv@divisor
  9270   003356  C06D  F021         	movff	rgb_2_hsv@cmax+1,___lldiv@divisor+1
  9271   00335A  6A22               	clrf	(___lldiv@divisor+2)^0,c
  9272   00335C  6A23               	clrf	(___lldiv@divisor+3)^0,c
  9273   00335E  ECE6  F027         	call	___lldiv	;wreg free
  9274   003362  EE20 F002          	lfsr	2,2
  9275   003366  5032               	movf	rgb_2_hsv@HSV^0,w,c
  9276   003368  26D9               	addwf	fsr2l,f,c
  9277   00336A  5033               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  9278   00336C  22DA               	addwfc	fsr2h,f,c
  9279   00336E  C01C  FFDE         	movff	?___lldiv,postinc2
  9280   003372  C01D  FFDD         	movff	?___lldiv+1,postdec2
  9281   003376                     
  9282                           ;color.c: 294:     if (HSV->S == 0){HSV->H = 0;}
  9283   003376  EE20 F002          	lfsr	2,2
  9284   00337A  5032               	movf	rgb_2_hsv@HSV^0,w,c
  9285   00337C  26D9               	addwf	fsr2l,f,c
  9286   00337E  5033               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  9287   003380  22DA               	addwfc	fsr2h,f,c
  9288   003382  50DE               	movf	postinc2,w,c
  9289   003384  10DE               	iorwf	postinc2,w,c
  9290   003386  A4D8               	btfss	status,2,c
  9291   003388  EFC8  F019         	goto	u2411
  9292   00338C  EFCA  F019         	goto	u2410
  9293   003390                     u2411:
  9294   003390  EFD0  F019         	goto	l3586
  9295   003394                     u2410:
  9296   003394  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  9297   003398  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  9298   00339C  6ADE               	clrf	postinc2,c
  9299   00339E  6ADD               	clrf	postdec2,c
  9300   0033A0                     l3586:
  9301                           
  9302                           ;color.c: 297:     HSV->V = cmax;
  9303   0033A0  EE20 F004          	lfsr	2,4
  9304   0033A4  5032               	movf	rgb_2_hsv@HSV^0,w,c
  9305   0033A6  26D9               	addwf	fsr2l,f,c
  9306   0033A8  5033               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  9307   0033AA  22DA               	addwfc	fsr2h,f,c
  9308   0033AC  C06C  FFDE         	movff	rgb_2_hsv@cmax,postinc2
  9309   0033B0  C06D  FFDD         	movff	rgb_2_hsv@cmax+1,postdec2
  9310   0033B4  0012               	return		;funcret
  9311   0033B6                     __end_of_rgb_2_hsv:
  9312                           	callstack 0
  9313                           
  9314 ;; *************** function _min *****************
  9315 ;; Defined at:
  9316 ;;		line 261 in file "color.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  a               2   15[COMRAM] unsigned int 
  9319 ;;  b               2   17[COMRAM] unsigned int 
  9320 ;; Auto vars:     Size  Location     Type
  9321 ;;		None
  9322 ;; Return value:  Size  Location     Type
  9323 ;;                  2   15[COMRAM] unsigned int 
  9324 ;; Registers used:
  9325 ;;		wreg, status,2, status,0
  9326 ;; Tracked objects:
  9327 ;;		On entry : 0/0
  9328 ;;		On exit  : 0/0
  9329 ;;		Unchanged: 0/0
  9330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9334 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9335 ;;Total ram usage:        4 bytes
  9336 ;; Hardware stack levels used: 1
  9337 ;; Hardware stack levels required when called: 6
  9338 ;; This function calls:
  9339 ;;		Nothing
  9340 ;; This function is called by:
  9341 ;;		_color_detect
  9342 ;;		_rgb_2_hsv
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           	psect	text22
  9347   0053A6                     __ptext22:
  9348                           	callstack 0
  9349   0053A6                     _min:
  9350                           	callstack 23
  9351   0053A6                     
  9352                           ;color.c: 262:     if (a < b){return a;}
  9353   0053A6  5012               	movf	min@b^0,w,c
  9354   0053A8  5C10               	subwf	min@a^0,w,c
  9355   0053AA  5013               	movf	(min@b+1)^0,w,c
  9356   0053AC  5811               	subwfb	(min@a+1)^0,w,c
  9357   0053AE  B0D8               	btfsc	status,0,c
  9358   0053B0  EFDC  F029         	goto	u2021
  9359   0053B4  EFDE  F029         	goto	u2020
  9360   0053B8                     u2021:
  9361   0053B8  EFE4  F029         	goto	l223
  9362   0053BC                     u2020:
  9363   0053BC  C010  F010         	movff	min@a,?_min
  9364   0053C0  C011  F011         	movff	min@a+1,?_min+1
  9365   0053C4  EFE8  F029         	goto	l224
  9366   0053C8                     l223:
  9367   0053C8  C012  F010         	movff	min@b,?_min
  9368   0053CC  C013  F011         	movff	min@b+1,?_min+1
  9369   0053D0                     l224:
  9370   0053D0  0012               	return		;funcret
  9371   0053D2                     __end_of_min:
  9372                           	callstack 0
  9373                           
  9374 ;; *************** function _max *****************
  9375 ;; Defined at:
  9376 ;;		line 256 in file "color.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;  a               2   15[COMRAM] unsigned int 
  9379 ;;  b               2   17[COMRAM] unsigned int 
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;		None
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  2   15[COMRAM] unsigned int 
  9384 ;; Registers used:
  9385 ;;		wreg, status,2, status,0
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9394 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9395 ;;Total ram usage:        4 bytes
  9396 ;; Hardware stack levels used: 1
  9397 ;; Hardware stack levels required when called: 6
  9398 ;; This function calls:
  9399 ;;		Nothing
  9400 ;; This function is called by:
  9401 ;;		_color_detect
  9402 ;;		_rgb_2_hsv
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text23
  9407   0053D2                     __ptext23:
  9408                           	callstack 0
  9409   0053D2                     _max:
  9410                           	callstack 23
  9411   0053D2                     
  9412                           ;color.c: 257:     if (a > b){return a;}
  9413   0053D2  5010               	movf	max@a^0,w,c
  9414   0053D4  5C12               	subwf	max@b^0,w,c
  9415   0053D6  5011               	movf	(max@a+1)^0,w,c
  9416   0053D8  5813               	subwfb	(max@b+1)^0,w,c
  9417   0053DA  B0D8               	btfsc	status,0,c
  9418   0053DC  EFF2  F029         	goto	u2031
  9419   0053E0  EFF4  F029         	goto	u2030
  9420   0053E4                     u2031:
  9421   0053E4  EFFA  F029         	goto	l218
  9422   0053E8                     u2030:
  9423   0053E8  C010  F010         	movff	max@a,?_max
  9424   0053EC  C011  F011         	movff	max@a+1,?_max+1
  9425   0053F0  EFFE  F029         	goto	l219
  9426   0053F4                     l218:
  9427   0053F4  C012  F010         	movff	max@b,?_max
  9428   0053F8  C013  F011         	movff	max@b+1,?_max+1
  9429   0053FC                     l219:
  9430   0053FC  0012               	return		;funcret
  9431   0053FE                     __end_of_max:
  9432                           	callstack 0
  9433                           
  9434 ;; *************** function ___lmul *****************
  9435 ;; Defined at:
  9436 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;  multiplier      4   15[COMRAM] unsigned long 
  9439 ;;  multiplicand    4   19[COMRAM] unsigned long 
  9440 ;; Auto vars:     Size  Location     Type
  9441 ;;  product         4   23[COMRAM] unsigned long 
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  4   15[COMRAM] unsigned long 
  9444 ;; Registers used:
  9445 ;;		wreg, status,2, status,0
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9451 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9452 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9454 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9455 ;;Total ram usage:       12 bytes
  9456 ;; Hardware stack levels used: 1
  9457 ;; Hardware stack levels required when called: 6
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_rgb_2_hsv
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text24
  9466   0051E8                     __ptext24:
  9467                           	callstack 0
  9468   0051E8                     ___lmul:
  9469                           	callstack 23
  9470   0051E8  0E00               	movlw	0
  9471   0051EA  6E18               	movwf	___lmul@product^0,c
  9472   0051EC  0E00               	movlw	0
  9473   0051EE  6E19               	movwf	(___lmul@product+1)^0,c
  9474   0051F0  0E00               	movlw	0
  9475   0051F2  6E1A               	movwf	(___lmul@product+2)^0,c
  9476   0051F4  0E00               	movlw	0
  9477   0051F6  6E1B               	movwf	(___lmul@product+3)^0,c
  9478   0051F8                     l3440:
  9479   0051F8  A010               	btfss	___lmul@multiplier^0,0,c
  9480   0051FA  EF01  F029         	goto	u2241
  9481   0051FE  EF03  F029         	goto	u2240
  9482   005202                     u2241:
  9483   005202  EF0B  F029         	goto	l3444
  9484   005206                     u2240:
  9485   005206  5014               	movf	___lmul@multiplicand^0,w,c
  9486   005208  2618               	addwf	___lmul@product^0,f,c
  9487   00520A  5015               	movf	(___lmul@multiplicand+1)^0,w,c
  9488   00520C  2219               	addwfc	(___lmul@product+1)^0,f,c
  9489   00520E  5016               	movf	(___lmul@multiplicand+2)^0,w,c
  9490   005210  221A               	addwfc	(___lmul@product+2)^0,f,c
  9491   005212  5017               	movf	(___lmul@multiplicand+3)^0,w,c
  9492   005214  221B               	addwfc	(___lmul@product+3)^0,f,c
  9493   005216                     l3444:
  9494   005216  90D8               	bcf	status,0,c
  9495   005218  3614               	rlcf	___lmul@multiplicand^0,f,c
  9496   00521A  3615               	rlcf	(___lmul@multiplicand+1)^0,f,c
  9497   00521C  3616               	rlcf	(___lmul@multiplicand+2)^0,f,c
  9498   00521E  3617               	rlcf	(___lmul@multiplicand+3)^0,f,c
  9499   005220  90D8               	bcf	status,0,c
  9500   005222  3213               	rrcf	(___lmul@multiplier+3)^0,f,c
  9501   005224  3212               	rrcf	(___lmul@multiplier+2)^0,f,c
  9502   005226  3211               	rrcf	(___lmul@multiplier+1)^0,f,c
  9503   005228  3210               	rrcf	___lmul@multiplier^0,f,c
  9504   00522A  5010               	movf	___lmul@multiplier^0,w,c
  9505   00522C  1011               	iorwf	(___lmul@multiplier+1)^0,w,c
  9506   00522E  1012               	iorwf	(___lmul@multiplier+2)^0,w,c
  9507   005230  1013               	iorwf	(___lmul@multiplier+3)^0,w,c
  9508   005232  A4D8               	btfss	status,2,c
  9509   005234  EF1E  F029         	goto	u2251
  9510   005238  EF20  F029         	goto	u2250
  9511   00523C                     u2251:
  9512   00523C  EFFC  F028         	goto	l3440
  9513   005240                     u2250:
  9514   005240  C018  F010         	movff	___lmul@product,?___lmul
  9515   005244  C019  F011         	movff	___lmul@product+1,?___lmul+1
  9516   005248  C01A  F012         	movff	___lmul@product+2,?___lmul+2
  9517   00524C  C01B  F013         	movff	___lmul@product+3,?___lmul+3
  9518   005250  0012               	return		;funcret
  9519   005252                     __end_of___lmul:
  9520                           	callstack 0
  9521                           
  9522 ;; *************** function ___lldiv *****************
  9523 ;; Defined at:
  9524 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;  dividend        4   27[COMRAM] unsigned long 
  9527 ;;  divisor         4   31[COMRAM] unsigned long 
  9528 ;; Auto vars:     Size  Location     Type
  9529 ;;  quotient        4   35[COMRAM] unsigned long 
  9530 ;;  counter         1   39[COMRAM] unsigned char 
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  4   27[COMRAM] unsigned long 
  9533 ;; Registers used:
  9534 ;;		wreg, status,2, status,0
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9540 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9541 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9543 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9544 ;;Total ram usage:       13 bytes
  9545 ;; Hardware stack levels used: 1
  9546 ;; Hardware stack levels required when called: 6
  9547 ;; This function calls:
  9548 ;;		Nothing
  9549 ;; This function is called by:
  9550 ;;		_rgb_2_hsv
  9551 ;; This function uses a non-reentrant model
  9552 ;;
  9553                           
  9554                           	psect	text25
  9555   004FCC                     __ptext25:
  9556                           	callstack 0
  9557   004FCC                     ___lldiv:
  9558                           	callstack 23
  9559   004FCC  0E00               	movlw	0
  9560   004FCE  6E24               	movwf	___lldiv@quotient^0,c
  9561   004FD0  0E00               	movlw	0
  9562   004FD2  6E25               	movwf	(___lldiv@quotient+1)^0,c
  9563   004FD4  0E00               	movlw	0
  9564   004FD6  6E26               	movwf	(___lldiv@quotient+2)^0,c
  9565   004FD8  0E00               	movlw	0
  9566   004FDA  6E27               	movwf	(___lldiv@quotient+3)^0,c
  9567   004FDC  5020               	movf	___lldiv@divisor^0,w,c
  9568   004FDE  1021               	iorwf	(___lldiv@divisor+1)^0,w,c
  9569   004FE0  1022               	iorwf	(___lldiv@divisor+2)^0,w,c
  9570   004FE2  1023               	iorwf	(___lldiv@divisor+3)^0,w,c
  9571   004FE4  B4D8               	btfsc	status,2,c
  9572   004FE6  EFF7  F027         	goto	u2261
  9573   004FEA  EFF9  F027         	goto	u2260
  9574   004FEE                     u2261:
  9575   004FEE  EF2F  F028         	goto	l816
  9576   004FF2                     u2260:
  9577   004FF2  0E01               	movlw	1
  9578   004FF4  6E28               	movwf	___lldiv@counter^0,c
  9579   004FF6  EF03  F028         	goto	l3456
  9580   004FFA                     l3454:
  9581   004FFA  90D8               	bcf	status,0,c
  9582   004FFC  3620               	rlcf	___lldiv@divisor^0,f,c
  9583   004FFE  3621               	rlcf	(___lldiv@divisor+1)^0,f,c
  9584   005000  3622               	rlcf	(___lldiv@divisor+2)^0,f,c
  9585   005002  3623               	rlcf	(___lldiv@divisor+3)^0,f,c
  9586   005004  2A28               	incf	___lldiv@counter^0,f,c
  9587   005006                     l3456:
  9588   005006  AE23               	btfss	(___lldiv@divisor+3)^0,7,c
  9589   005008  EF08  F028         	goto	u2271
  9590   00500C  EF0A  F028         	goto	u2270
  9591   005010                     u2271:
  9592   005010  EFFD  F027         	goto	l3454
  9593   005014                     u2270:
  9594   005014                     l3458:
  9595   005014  90D8               	bcf	status,0,c
  9596   005016  3624               	rlcf	___lldiv@quotient^0,f,c
  9597   005018  3625               	rlcf	(___lldiv@quotient+1)^0,f,c
  9598   00501A  3626               	rlcf	(___lldiv@quotient+2)^0,f,c
  9599   00501C  3627               	rlcf	(___lldiv@quotient+3)^0,f,c
  9600   00501E  5020               	movf	___lldiv@divisor^0,w,c
  9601   005020  5C1C               	subwf	___lldiv@dividend^0,w,c
  9602   005022  5021               	movf	(___lldiv@divisor+1)^0,w,c
  9603   005024  581D               	subwfb	(___lldiv@dividend+1)^0,w,c
  9604   005026  5022               	movf	(___lldiv@divisor+2)^0,w,c
  9605   005028  581E               	subwfb	(___lldiv@dividend+2)^0,w,c
  9606   00502A  5023               	movf	(___lldiv@divisor+3)^0,w,c
  9607   00502C  581F               	subwfb	(___lldiv@dividend+3)^0,w,c
  9608   00502E  A0D8               	btfss	status,0,c
  9609   005030  EF1C  F028         	goto	u2281
  9610   005034  EF1E  F028         	goto	u2280
  9611   005038                     u2281:
  9612   005038  EF27  F028         	goto	l3466
  9613   00503C                     u2280:
  9614   00503C  5020               	movf	___lldiv@divisor^0,w,c
  9615   00503E  5E1C               	subwf	___lldiv@dividend^0,f,c
  9616   005040  5021               	movf	(___lldiv@divisor+1)^0,w,c
  9617   005042  5A1D               	subwfb	(___lldiv@dividend+1)^0,f,c
  9618   005044  5022               	movf	(___lldiv@divisor+2)^0,w,c
  9619   005046  5A1E               	subwfb	(___lldiv@dividend+2)^0,f,c
  9620   005048  5023               	movf	(___lldiv@divisor+3)^0,w,c
  9621   00504A  5A1F               	subwfb	(___lldiv@dividend+3)^0,f,c
  9622   00504C  8024               	bsf	___lldiv@quotient^0,0,c
  9623   00504E                     l3466:
  9624   00504E  90D8               	bcf	status,0,c
  9625   005050  3223               	rrcf	(___lldiv@divisor+3)^0,f,c
  9626   005052  3222               	rrcf	(___lldiv@divisor+2)^0,f,c
  9627   005054  3221               	rrcf	(___lldiv@divisor+1)^0,f,c
  9628   005056  3220               	rrcf	___lldiv@divisor^0,f,c
  9629   005058  2E28               	decfsz	___lldiv@counter^0,f,c
  9630   00505A  EF0A  F028         	goto	l3458
  9631   00505E                     l816:
  9632   00505E  C024  F01C         	movff	___lldiv@quotient,?___lldiv
  9633   005062  C025  F01D         	movff	___lldiv@quotient+1,?___lldiv+1
  9634   005066  C026  F01E         	movff	___lldiv@quotient+2,?___lldiv+2
  9635   00506A  C027  F01F         	movff	___lldiv@quotient+3,?___lldiv+3
  9636   00506E  0012               	return		;funcret
  9637   005070                     __end_of___lldiv:
  9638                           	callstack 0
  9639                           
  9640 ;; *************** function ___aldiv *****************
  9641 ;; Defined at:
  9642 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;  dividend        4   27[COMRAM] long 
  9645 ;;  divisor         4   31[COMRAM] long 
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;  quotient        4   37[COMRAM] long 
  9648 ;;  sign            1   36[COMRAM] unsigned char 
  9649 ;;  counter         1   35[COMRAM] unsigned char 
  9650 ;; Return value:  Size  Location     Type
  9651 ;;                  4   27[COMRAM] long 
  9652 ;; Registers used:
  9653 ;;		wreg, status,2, status,0
  9654 ;; Tracked objects:
  9655 ;;		On entry : 0/0
  9656 ;;		On exit  : 0/0
  9657 ;;		Unchanged: 0/0
  9658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9659 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9660 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9662 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9663 ;;Total ram usage:       14 bytes
  9664 ;; Hardware stack levels used: 1
  9665 ;; Hardware stack levels required when called: 6
  9666 ;; This function calls:
  9667 ;;		Nothing
  9668 ;; This function is called by:
  9669 ;;		_rgb_2_hsv
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673                           	psect	text26
  9674   004AC2                     __ptext26:
  9675                           	callstack 0
  9676   004AC2                     ___aldiv:
  9677                           	callstack 23
  9678   004AC2  0E00               	movlw	0
  9679   004AC4  6E25               	movwf	___aldiv@sign^0,c
  9680   004AC6  BE23               	btfsc	(___aldiv@divisor+3)^0,7,c
  9681   004AC8  EF6A  F025         	goto	u2290
  9682   004ACC  EF68  F025         	goto	u2291
  9683   004AD0                     u2291:
  9684   004AD0  EF74  F025         	goto	l3478
  9685   004AD4                     u2290:
  9686   004AD4  1E23               	comf	(___aldiv@divisor+3)^0,f,c
  9687   004AD6  1E22               	comf	(___aldiv@divisor+2)^0,f,c
  9688   004AD8  1E21               	comf	(___aldiv@divisor+1)^0,f,c
  9689   004ADA  6C20               	negf	___aldiv@divisor^0,c
  9690   004ADC  0E00               	movlw	0
  9691   004ADE  2221               	addwfc	(___aldiv@divisor+1)^0,f,c
  9692   004AE0  2222               	addwfc	(___aldiv@divisor+2)^0,f,c
  9693   004AE2  2223               	addwfc	(___aldiv@divisor+3)^0,f,c
  9694   004AE4  0E01               	movlw	1
  9695   004AE6  6E25               	movwf	___aldiv@sign^0,c
  9696   004AE8                     l3478:
  9697   004AE8  BE1F               	btfsc	(___aldiv@dividend+3)^0,7,c
  9698   004AEA  EF7B  F025         	goto	u2300
  9699   004AEE  EF79  F025         	goto	u2301
  9700   004AF2                     u2301:
  9701   004AF2  EF85  F025         	goto	l3484
  9702   004AF6                     u2300:
  9703   004AF6  1E1F               	comf	(___aldiv@dividend+3)^0,f,c
  9704   004AF8  1E1E               	comf	(___aldiv@dividend+2)^0,f,c
  9705   004AFA  1E1D               	comf	(___aldiv@dividend+1)^0,f,c
  9706   004AFC  6C1C               	negf	___aldiv@dividend^0,c
  9707   004AFE  0E00               	movlw	0
  9708   004B00  221D               	addwfc	(___aldiv@dividend+1)^0,f,c
  9709   004B02  221E               	addwfc	(___aldiv@dividend+2)^0,f,c
  9710   004B04  221F               	addwfc	(___aldiv@dividend+3)^0,f,c
  9711   004B06  0E01               	movlw	1
  9712   004B08  1A25               	xorwf	___aldiv@sign^0,f,c
  9713   004B0A                     l3484:
  9714   004B0A  0E00               	movlw	0
  9715   004B0C  6E26               	movwf	___aldiv@quotient^0,c
  9716   004B0E  0E00               	movlw	0
  9717   004B10  6E27               	movwf	(___aldiv@quotient+1)^0,c
  9718   004B12  0E00               	movlw	0
  9719   004B14  6E28               	movwf	(___aldiv@quotient+2)^0,c
  9720   004B16  0E00               	movlw	0
  9721   004B18  6E29               	movwf	(___aldiv@quotient+3)^0,c
  9722   004B1A  5020               	movf	___aldiv@divisor^0,w,c
  9723   004B1C  1021               	iorwf	(___aldiv@divisor+1)^0,w,c
  9724   004B1E  1022               	iorwf	(___aldiv@divisor+2)^0,w,c
  9725   004B20  1023               	iorwf	(___aldiv@divisor+3)^0,w,c
  9726   004B22  B4D8               	btfsc	status,2,c
  9727   004B24  EF96  F025         	goto	u2311
  9728   004B28  EF98  F025         	goto	u2310
  9729   004B2C                     u2311:
  9730   004B2C  EFCE  F025         	goto	l3506
  9731   004B30                     u2310:
  9732   004B30  0E01               	movlw	1
  9733   004B32  6E24               	movwf	___aldiv@counter^0,c
  9734   004B34  EFA2  F025         	goto	l3492
  9735   004B38                     l3490:
  9736   004B38  90D8               	bcf	status,0,c
  9737   004B3A  3620               	rlcf	___aldiv@divisor^0,f,c
  9738   004B3C  3621               	rlcf	(___aldiv@divisor+1)^0,f,c
  9739   004B3E  3622               	rlcf	(___aldiv@divisor+2)^0,f,c
  9740   004B40  3623               	rlcf	(___aldiv@divisor+3)^0,f,c
  9741   004B42  2A24               	incf	___aldiv@counter^0,f,c
  9742   004B44                     l3492:
  9743   004B44  AE23               	btfss	(___aldiv@divisor+3)^0,7,c
  9744   004B46  EFA7  F025         	goto	u2321
  9745   004B4A  EFA9  F025         	goto	u2320
  9746   004B4E                     u2321:
  9747   004B4E  EF9C  F025         	goto	l3490
  9748   004B52                     u2320:
  9749   004B52                     l3494:
  9750   004B52  90D8               	bcf	status,0,c
  9751   004B54  3626               	rlcf	___aldiv@quotient^0,f,c
  9752   004B56  3627               	rlcf	(___aldiv@quotient+1)^0,f,c
  9753   004B58  3628               	rlcf	(___aldiv@quotient+2)^0,f,c
  9754   004B5A  3629               	rlcf	(___aldiv@quotient+3)^0,f,c
  9755   004B5C  5020               	movf	___aldiv@divisor^0,w,c
  9756   004B5E  5C1C               	subwf	___aldiv@dividend^0,w,c
  9757   004B60  5021               	movf	(___aldiv@divisor+1)^0,w,c
  9758   004B62  581D               	subwfb	(___aldiv@dividend+1)^0,w,c
  9759   004B64  5022               	movf	(___aldiv@divisor+2)^0,w,c
  9760   004B66  581E               	subwfb	(___aldiv@dividend+2)^0,w,c
  9761   004B68  5023               	movf	(___aldiv@divisor+3)^0,w,c
  9762   004B6A  581F               	subwfb	(___aldiv@dividend+3)^0,w,c
  9763   004B6C  A0D8               	btfss	status,0,c
  9764   004B6E  EFBB  F025         	goto	u2331
  9765   004B72  EFBD  F025         	goto	u2330
  9766   004B76                     u2331:
  9767   004B76  EFC6  F025         	goto	l3502
  9768   004B7A                     u2330:
  9769   004B7A  5020               	movf	___aldiv@divisor^0,w,c
  9770   004B7C  5E1C               	subwf	___aldiv@dividend^0,f,c
  9771   004B7E  5021               	movf	(___aldiv@divisor+1)^0,w,c
  9772   004B80  5A1D               	subwfb	(___aldiv@dividend+1)^0,f,c
  9773   004B82  5022               	movf	(___aldiv@divisor+2)^0,w,c
  9774   004B84  5A1E               	subwfb	(___aldiv@dividend+2)^0,f,c
  9775   004B86  5023               	movf	(___aldiv@divisor+3)^0,w,c
  9776   004B88  5A1F               	subwfb	(___aldiv@dividend+3)^0,f,c
  9777   004B8A  8026               	bsf	___aldiv@quotient^0,0,c
  9778   004B8C                     l3502:
  9779   004B8C  90D8               	bcf	status,0,c
  9780   004B8E  3223               	rrcf	(___aldiv@divisor+3)^0,f,c
  9781   004B90  3222               	rrcf	(___aldiv@divisor+2)^0,f,c
  9782   004B92  3221               	rrcf	(___aldiv@divisor+1)^0,f,c
  9783   004B94  3220               	rrcf	___aldiv@divisor^0,f,c
  9784   004B96  2E24               	decfsz	___aldiv@counter^0,f,c
  9785   004B98  EFA9  F025         	goto	l3494
  9786   004B9C                     l3506:
  9787   004B9C  5025               	movf	___aldiv@sign^0,w,c
  9788   004B9E  B4D8               	btfsc	status,2,c
  9789   004BA0  EFD4  F025         	goto	u2341
  9790   004BA4  EFD6  F025         	goto	u2340
  9791   004BA8                     u2341:
  9792   004BA8  EFDE  F025         	goto	l3510
  9793   004BAC                     u2340:
  9794   004BAC  1E29               	comf	(___aldiv@quotient+3)^0,f,c
  9795   004BAE  1E28               	comf	(___aldiv@quotient+2)^0,f,c
  9796   004BB0  1E27               	comf	(___aldiv@quotient+1)^0,f,c
  9797   004BB2  6C26               	negf	___aldiv@quotient^0,c
  9798   004BB4  0E00               	movlw	0
  9799   004BB6  2227               	addwfc	(___aldiv@quotient+1)^0,f,c
  9800   004BB8  2228               	addwfc	(___aldiv@quotient+2)^0,f,c
  9801   004BBA  2229               	addwfc	(___aldiv@quotient+3)^0,f,c
  9802   004BBC                     l3510:
  9803   004BBC  C026  F01C         	movff	___aldiv@quotient,?___aldiv
  9804   004BC0  C027  F01D         	movff	___aldiv@quotient+1,?___aldiv+1
  9805   004BC4  C028  F01E         	movff	___aldiv@quotient+2,?___aldiv+2
  9806   004BC8  C029  F01F         	movff	___aldiv@quotient+3,?___aldiv+3
  9807   004BCC  0012               	return		;funcret
  9808   004BCE                     __end_of___aldiv:
  9809                           	callstack 0
  9810                           
  9811 ;; *************** function _color_read *****************
  9812 ;; Defined at:
  9813 ;;		line 77 in file "color.c"
  9814 ;; Parameters:    Size  Location     Type
  9815 ;;  RGBC            2   19[COMRAM] PTR struct RGBC_val
  9816 ;;		 -> main@RGBC(8), 
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;		None
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  1    wreg      void 
  9821 ;; Registers used:
  9822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/0
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9830 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9831 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9832 ;;Total ram usage:        9 bytes
  9833 ;; Hardware stack levels used: 1
  9834 ;; Hardware stack levels required when called: 8
  9835 ;; This function calls:
  9836 ;;		_I2C_2_Master_Read
  9837 ;;		_I2C_2_Master_RepStart
  9838 ;;		_I2C_2_Master_Start
  9839 ;;		_I2C_2_Master_Stop
  9840 ;;		_I2C_2_Master_Write
  9841 ;; This function is called by:
  9842 ;;		_main
  9843 ;;		_color_calibration
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           	psect	text27
  9848   0041D6                     __ptext27:
  9849                           	callstack 0
  9850   0041D6                     _color_read:
  9851                           	callstack 22
  9852   0041D6                     
  9853                           ;color.c: 77: void color_read(RGBC_val *RGBC);color.c: 78: {;color.c: 79:  I2C_2_Master_
      +                          Start();
  9854   0041D6  ECFD  F02A         	call	_I2C_2_Master_Start	;wreg free
  9855                           
  9856                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  9857   0041DA  0E52               	movlw	82
  9858   0041DC  ECE7  F02A         	call	_I2C_2_Master_Write
  9859                           
  9860                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x16);
  9861   0041E0  0EB6               	movlw	182
  9862   0041E2  ECE7  F02A         	call	_I2C_2_Master_Write
  9863                           
  9864                           ;color.c: 82:  I2C_2_Master_RepStart();
  9865   0041E6  EC02  F02B         	call	_I2C_2_Master_RepStart	;wreg free
  9866                           
  9867                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  9868   0041EA  0E53               	movlw	83
  9869   0041EC  ECE7  F02A         	call	_I2C_2_Master_Write
  9870   0041F0                     
  9871                           ;color.c: 84:  RGBC->R=I2C_2_Master_Read(1);
  9872   0041F0  0E01               	movlw	1
  9873   0041F2  EC7B  F029         	call	_I2C_2_Master_Read
  9874   0041F6  6E16               	movwf	??_color_read^0,c
  9875   0041F8  6A17               	clrf	(??_color_read+1)^0,c
  9876   0041FA  C014  FFD9         	movff	color_read@RGBC,fsr2l
  9877   0041FE  C015  FFDA         	movff	color_read@RGBC+1,fsr2h
  9878   004202  C016  FFDE         	movff	??_color_read,postinc2
  9879   004206  C017  FFDD         	movff	??_color_read+1,postdec2
  9880   00420A                     
  9881                           ;color.c: 85:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  9882   00420A  C014  FFD9         	movff	color_read@RGBC,fsr2l
  9883   00420E  C015  FFDA         	movff	color_read@RGBC+1,fsr2h
  9884   004212  CFDE F016          	movff	postinc2,??_color_read
  9885   004216  CFDD F017          	movff	postdec2,??_color_read+1
  9886   00421A  0E00               	movlw	0
  9887   00421C  EC7B  F029         	call	_I2C_2_Master_Read
  9888   004220  6E18               	movwf	(??_color_read+2)^0,c
  9889   004222  5018               	movf	(??_color_read+2)^0,w,c
  9890   004224  6E1A               	movwf	(??_color_read+4)^0,c
  9891   004226  6A19               	clrf	(??_color_read+3)^0,c
  9892   004228  5016               	movf	??_color_read^0,w,c
  9893   00422A  1019               	iorwf	(??_color_read+3)^0,w,c
  9894   00422C  6E1B               	movwf	(??_color_read+5)^0,c
  9895   00422E  5017               	movf	(??_color_read+1)^0,w,c
  9896   004230  101A               	iorwf	(??_color_read+4)^0,w,c
  9897   004232  6E1C               	movwf	(??_color_read+6)^0,c
  9898   004234  C014  FFD9         	movff	color_read@RGBC,fsr2l
  9899   004238  C015  FFDA         	movff	color_read@RGBC+1,fsr2h
  9900   00423C  C01B  FFDE         	movff	??_color_read+5,postinc2
  9901   004240  C01C  FFDD         	movff	??_color_read+6,postdec2
  9902                           
  9903                           ;color.c: 86:  I2C_2_Master_Stop();
  9904   004244  ECF8  F02A         	call	_I2C_2_Master_Stop	;wreg free
  9905                           
  9906                           ;color.c: 88:     I2C_2_Master_Start();
  9907   004248  ECFD  F02A         	call	_I2C_2_Master_Start	;wreg free
  9908                           
  9909                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x00);
  9910   00424C  0E52               	movlw	82
  9911   00424E  ECE7  F02A         	call	_I2C_2_Master_Write
  9912                           
  9913                           ;color.c: 90:  I2C_2_Master_Write(0xA0 | 0x18);
  9914   004252  0EB8               	movlw	184
  9915   004254  ECE7  F02A         	call	_I2C_2_Master_Write
  9916                           
  9917                           ;color.c: 91:  I2C_2_Master_RepStart();
  9918   004258  EC02  F02B         	call	_I2C_2_Master_RepStart	;wreg free
  9919                           
  9920                           ;color.c: 92:  I2C_2_Master_Write(0x52 | 0x01);
  9921   00425C  0E53               	movlw	83
  9922   00425E  ECE7  F02A         	call	_I2C_2_Master_Write
  9923   004262                     
  9924                           ;color.c: 93:  RGBC->G=I2C_2_Master_Read(1);
  9925   004262  0E01               	movlw	1
  9926   004264  EC7B  F029         	call	_I2C_2_Master_Read
  9927   004268  6E16               	movwf	??_color_read^0,c
  9928   00426A  6A17               	clrf	(??_color_read+1)^0,c
  9929   00426C  EE20 F002          	lfsr	2,2
  9930   004270  5014               	movf	color_read@RGBC^0,w,c
  9931   004272  26D9               	addwf	fsr2l,f,c
  9932   004274  5015               	movf	(color_read@RGBC+1)^0,w,c
  9933   004276  22DA               	addwfc	fsr2h,f,c
  9934   004278  C016  FFDE         	movff	??_color_read,postinc2
  9935   00427C  C017  FFDD         	movff	??_color_read+1,postdec2
  9936   004280                     
  9937                           ;color.c: 94:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  9938   004280  EE20 F002          	lfsr	2,2
  9939   004284  5014               	movf	color_read@RGBC^0,w,c
  9940   004286  26D9               	addwf	fsr2l,f,c
  9941   004288  5015               	movf	(color_read@RGBC+1)^0,w,c
  9942   00428A  22DA               	addwfc	fsr2h,f,c
  9943   00428C  CFDE F016          	movff	postinc2,??_color_read
  9944   004290  CFDD F017          	movff	postdec2,??_color_read+1
  9945   004294  0E00               	movlw	0
  9946   004296  EC7B  F029         	call	_I2C_2_Master_Read
  9947   00429A  6E18               	movwf	(??_color_read+2)^0,c
  9948   00429C  5018               	movf	(??_color_read+2)^0,w,c
  9949   00429E  6E1A               	movwf	(??_color_read+4)^0,c
  9950   0042A0  6A19               	clrf	(??_color_read+3)^0,c
  9951   0042A2  5016               	movf	??_color_read^0,w,c
  9952   0042A4  1019               	iorwf	(??_color_read+3)^0,w,c
  9953   0042A6  6E1B               	movwf	(??_color_read+5)^0,c
  9954   0042A8  5017               	movf	(??_color_read+1)^0,w,c
  9955   0042AA  101A               	iorwf	(??_color_read+4)^0,w,c
  9956   0042AC  6E1C               	movwf	(??_color_read+6)^0,c
  9957   0042AE  EE20 F002          	lfsr	2,2
  9958   0042B2  5014               	movf	color_read@RGBC^0,w,c
  9959   0042B4  26D9               	addwf	fsr2l,f,c
  9960   0042B6  5015               	movf	(color_read@RGBC+1)^0,w,c
  9961   0042B8  22DA               	addwfc	fsr2h,f,c
  9962   0042BA  C01B  FFDE         	movff	??_color_read+5,postinc2
  9963   0042BE  C01C  FFDD         	movff	??_color_read+6,postdec2
  9964                           
  9965                           ;color.c: 95:  I2C_2_Master_Stop();
  9966   0042C2  ECF8  F02A         	call	_I2C_2_Master_Stop	;wreg free
  9967                           
  9968                           ;color.c: 97:     I2C_2_Master_Start();
  9969   0042C6  ECFD  F02A         	call	_I2C_2_Master_Start	;wreg free
  9970                           
  9971                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  9972   0042CA  0E52               	movlw	82
  9973   0042CC  ECE7  F02A         	call	_I2C_2_Master_Write
  9974                           
  9975                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x1A);
  9976   0042D0  0EBA               	movlw	186
  9977   0042D2  ECE7  F02A         	call	_I2C_2_Master_Write
  9978                           
  9979                           ;color.c: 100:  I2C_2_Master_RepStart();
  9980   0042D6  EC02  F02B         	call	_I2C_2_Master_RepStart	;wreg free
  9981                           
  9982                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  9983   0042DA  0E53               	movlw	83
  9984   0042DC  ECE7  F02A         	call	_I2C_2_Master_Write
  9985   0042E0                     
  9986                           ;color.c: 102:  RGBC->B=I2C_2_Master_Read(1);
  9987   0042E0  0E01               	movlw	1
  9988   0042E2  EC7B  F029         	call	_I2C_2_Master_Read
  9989   0042E6  6E16               	movwf	??_color_read^0,c
  9990   0042E8  6A17               	clrf	(??_color_read+1)^0,c
  9991   0042EA  EE20 F004          	lfsr	2,4
  9992   0042EE  5014               	movf	color_read@RGBC^0,w,c
  9993   0042F0  26D9               	addwf	fsr2l,f,c
  9994   0042F2  5015               	movf	(color_read@RGBC+1)^0,w,c
  9995   0042F4  22DA               	addwfc	fsr2h,f,c
  9996   0042F6  C016  FFDE         	movff	??_color_read,postinc2
  9997   0042FA  C017  FFDD         	movff	??_color_read+1,postdec2
  9998   0042FE                     
  9999                           ;color.c: 103:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
 10000   0042FE  EE20 F004          	lfsr	2,4
 10001   004302  5014               	movf	color_read@RGBC^0,w,c
 10002   004304  26D9               	addwf	fsr2l,f,c
 10003   004306  5015               	movf	(color_read@RGBC+1)^0,w,c
 10004   004308  22DA               	addwfc	fsr2h,f,c
 10005   00430A  CFDE F016          	movff	postinc2,??_color_read
 10006   00430E  CFDD F017          	movff	postdec2,??_color_read+1
 10007   004312  0E00               	movlw	0
 10008   004314  EC7B  F029         	call	_I2C_2_Master_Read
 10009   004318  6E18               	movwf	(??_color_read+2)^0,c
 10010   00431A  5018               	movf	(??_color_read+2)^0,w,c
 10011   00431C  6E1A               	movwf	(??_color_read+4)^0,c
 10012   00431E  6A19               	clrf	(??_color_read+3)^0,c
 10013   004320  5016               	movf	??_color_read^0,w,c
 10014   004322  1019               	iorwf	(??_color_read+3)^0,w,c
 10015   004324  6E1B               	movwf	(??_color_read+5)^0,c
 10016   004326  5017               	movf	(??_color_read+1)^0,w,c
 10017   004328  101A               	iorwf	(??_color_read+4)^0,w,c
 10018   00432A  6E1C               	movwf	(??_color_read+6)^0,c
 10019   00432C  EE20 F004          	lfsr	2,4
 10020   004330  5014               	movf	color_read@RGBC^0,w,c
 10021   004332  26D9               	addwf	fsr2l,f,c
 10022   004334  5015               	movf	(color_read@RGBC+1)^0,w,c
 10023   004336  22DA               	addwfc	fsr2h,f,c
 10024   004338  C01B  FFDE         	movff	??_color_read+5,postinc2
 10025   00433C  C01C  FFDD         	movff	??_color_read+6,postdec2
 10026                           
 10027                           ;color.c: 104:  I2C_2_Master_Stop();
 10028   004340  ECF8  F02A         	call	_I2C_2_Master_Stop	;wreg free
 10029                           
 10030                           ;color.c: 106:     I2C_2_Master_Start();
 10031   004344  ECFD  F02A         	call	_I2C_2_Master_Start	;wreg free
 10032                           
 10033                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x00);
 10034   004348  0E52               	movlw	82
 10035   00434A  ECE7  F02A         	call	_I2C_2_Master_Write
 10036                           
 10037                           ;color.c: 108:  I2C_2_Master_Write(0xA0 | 0x14);
 10038   00434E  0EB4               	movlw	180
 10039   004350  ECE7  F02A         	call	_I2C_2_Master_Write
 10040                           
 10041                           ;color.c: 109:  I2C_2_Master_RepStart();
 10042   004354  EC02  F02B         	call	_I2C_2_Master_RepStart	;wreg free
 10043                           
 10044                           ;color.c: 110:  I2C_2_Master_Write(0x52 | 0x01);
 10045   004358  0E53               	movlw	83
 10046   00435A  ECE7  F02A         	call	_I2C_2_Master_Write
 10047   00435E                     
 10048                           ;color.c: 111:  RGBC->C=I2C_2_Master_Read(1);
 10049   00435E  0E01               	movlw	1
 10050   004360  EC7B  F029         	call	_I2C_2_Master_Read
 10051   004364  6E16               	movwf	??_color_read^0,c
 10052   004366  6A17               	clrf	(??_color_read+1)^0,c
 10053   004368  EE20 F006          	lfsr	2,6
 10054   00436C  5014               	movf	color_read@RGBC^0,w,c
 10055   00436E  26D9               	addwf	fsr2l,f,c
 10056   004370  5015               	movf	(color_read@RGBC+1)^0,w,c
 10057   004372  22DA               	addwfc	fsr2h,f,c
 10058   004374  C016  FFDE         	movff	??_color_read,postinc2
 10059   004378  C017  FFDD         	movff	??_color_read+1,postdec2
 10060   00437C                     
 10061                           ;color.c: 112:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
 10062   00437C  EE20 F006          	lfsr	2,6
 10063   004380  5014               	movf	color_read@RGBC^0,w,c
 10064   004382  26D9               	addwf	fsr2l,f,c
 10065   004384  5015               	movf	(color_read@RGBC+1)^0,w,c
 10066   004386  22DA               	addwfc	fsr2h,f,c
 10067   004388  CFDE F016          	movff	postinc2,??_color_read
 10068   00438C  CFDD F017          	movff	postdec2,??_color_read+1
 10069   004390  0E00               	movlw	0
 10070   004392  EC7B  F029         	call	_I2C_2_Master_Read
 10071   004396  6E18               	movwf	(??_color_read+2)^0,c
 10072   004398  5018               	movf	(??_color_read+2)^0,w,c
 10073   00439A  6E1A               	movwf	(??_color_read+4)^0,c
 10074   00439C  6A19               	clrf	(??_color_read+3)^0,c
 10075   00439E  5016               	movf	??_color_read^0,w,c
 10076   0043A0  1019               	iorwf	(??_color_read+3)^0,w,c
 10077   0043A2  6E1B               	movwf	(??_color_read+5)^0,c
 10078   0043A4  5017               	movf	(??_color_read+1)^0,w,c
 10079   0043A6  101A               	iorwf	(??_color_read+4)^0,w,c
 10080   0043A8  6E1C               	movwf	(??_color_read+6)^0,c
 10081   0043AA  EE20 F006          	lfsr	2,6
 10082   0043AE  5014               	movf	color_read@RGBC^0,w,c
 10083   0043B0  26D9               	addwf	fsr2l,f,c
 10084   0043B2  5015               	movf	(color_read@RGBC+1)^0,w,c
 10085   0043B4  22DA               	addwfc	fsr2h,f,c
 10086   0043B6  C01B  FFDE         	movff	??_color_read+5,postinc2
 10087   0043BA  C01C  FFDD         	movff	??_color_read+6,postdec2
 10088                           
 10089                           ;color.c: 113:  I2C_2_Master_Stop();
 10090   0043BE  ECF8  F02A         	call	_I2C_2_Master_Stop	;wreg free
 10091   0043C2  0012               	return		;funcret
 10092   0043C4                     __end_of_color_read:
 10093                           	callstack 0
 10094                           
 10095 ;; *************** function _I2C_2_Master_Write *****************
 10096 ;; Defined at:
 10097 ;;		line 45 in file "i2c.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;  data_byte       1    wreg     unsigned char 
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;  data_byte       1   16[COMRAM] unsigned char 
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  1    wreg      void 
 10104 ;; Registers used:
 10105 ;;		wreg, status,2, status,0, cstack
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10114 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10115 ;;Total ram usage:        1 bytes
 10116 ;; Hardware stack levels used: 1
 10117 ;; Hardware stack levels required when called: 7
 10118 ;; This function calls:
 10119 ;;		_I2C_2_Master_Idle
 10120 ;; This function is called by:
 10121 ;;		_color_clear_init_interrupts
 10122 ;;		_color_writetoaddr
 10123 ;;		_color_read
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           	psect	text28
 10128   0055CE                     __ptext28:
 10129                           	callstack 0
 10130   0055CE                     _I2C_2_Master_Write:
 10131                           	callstack 22
 10132                           
 10133                           ;incstack = 0
 10134                           ;I2C_2_Master_Write@data_byte stored from wreg
 10135   0055CE  6E11               	movwf	I2C_2_Master_Write@data_byte^0,c
 10136   0055D0                     
 10137                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10138   0055D0  EC28  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10139   0055D4                     
 10140                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10141   0055D4  C011  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10142   0055D8  0012               	return		;funcret
 10143   0055DA                     __end_of_I2C_2_Master_Write:
 10144                           	callstack 0
 10145                           
 10146 ;; *************** function _I2C_2_Master_Stop *****************
 10147 ;; Defined at:
 10148 ;;		line 39 in file "i2c.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;		None
 10151 ;; Auto vars:     Size  Location     Type
 10152 ;;		None
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  1    wreg      void 
 10155 ;; Registers used:
 10156 ;;		wreg, status,2, status,0, cstack
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10166 ;;Total ram usage:        0 bytes
 10167 ;; Hardware stack levels used: 1
 10168 ;; Hardware stack levels required when called: 7
 10169 ;; This function calls:
 10170 ;;		_I2C_2_Master_Idle
 10171 ;; This function is called by:
 10172 ;;		_color_clear_init_interrupts
 10173 ;;		_color_writetoaddr
 10174 ;;		_color_read
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           	psect	text29
 10179   0055F0                     __ptext29:
 10180                           	callstack 0
 10181   0055F0                     _I2C_2_Master_Stop:
 10182                           	callstack 22
 10183   0055F0                     
 10184                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10185   0055F0  EC28  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10186   0055F4                     
 10187                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10188   0055F4  010E               	movlb	14	; () banked
 10189   0055F6  85DA               	bsf	218,2,b	;volatile
 10190   0055F8                     
 10191                           ; BSR set to: 14
 10192   0055F8  0012               	return		;funcret
 10193   0055FA                     __end_of_I2C_2_Master_Stop:
 10194                           	callstack 0
 10195                           
 10196 ;; *************** function _I2C_2_Master_Start *****************
 10197 ;; Defined at:
 10198 ;;		line 27 in file "i2c.c"
 10199 ;; Parameters:    Size  Location     Type
 10200 ;;		None
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;		None
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  1    wreg      void 
 10205 ;; Registers used:
 10206 ;;		wreg, status,2, status,0, cstack
 10207 ;; Tracked objects:
 10208 ;;		On entry : 0/0
 10209 ;;		On exit  : 0/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10216 ;;Total ram usage:        0 bytes
 10217 ;; Hardware stack levels used: 1
 10218 ;; Hardware stack levels required when called: 7
 10219 ;; This function calls:
 10220 ;;		_I2C_2_Master_Idle
 10221 ;; This function is called by:
 10222 ;;		_color_clear_init_interrupts
 10223 ;;		_color_writetoaddr
 10224 ;;		_color_read
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text30
 10229   0055FA                     __ptext30:
 10230                           	callstack 0
 10231   0055FA                     _I2C_2_Master_Start:
 10232                           	callstack 22
 10233   0055FA                     
 10234                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10235   0055FA  EC28  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10236   0055FE                     
 10237                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10238   0055FE  010E               	movlb	14	; () banked
 10239   005600  81DA               	bsf	218,0,b	;volatile
 10240   005602                     
 10241                           ; BSR set to: 14
 10242   005602  0012               	return		;funcret
 10243   005604                     __end_of_I2C_2_Master_Start:
 10244                           	callstack 0
 10245                           
 10246 ;; *************** function _I2C_2_Master_RepStart *****************
 10247 ;; Defined at:
 10248 ;;		line 33 in file "i2c.c"
 10249 ;; Parameters:    Size  Location     Type
 10250 ;;		None
 10251 ;; Auto vars:     Size  Location     Type
 10252 ;;		None
 10253 ;; Return value:  Size  Location     Type
 10254 ;;                  1    wreg      void 
 10255 ;; Registers used:
 10256 ;;		wreg, status,2, status,0, cstack
 10257 ;; Tracked objects:
 10258 ;;		On entry : 0/0
 10259 ;;		On exit  : 0/0
 10260 ;;		Unchanged: 0/0
 10261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10266 ;;Total ram usage:        0 bytes
 10267 ;; Hardware stack levels used: 1
 10268 ;; Hardware stack levels required when called: 7
 10269 ;; This function calls:
 10270 ;;		_I2C_2_Master_Idle
 10271 ;; This function is called by:
 10272 ;;		_color_read
 10273 ;; This function uses a non-reentrant model
 10274 ;;
 10275                           
 10276                           	psect	text31
 10277   005604                     __ptext31:
 10278                           	callstack 0
 10279   005604                     _I2C_2_Master_RepStart:
 10280                           	callstack 22
 10281   005604                     
 10282                           ;i2c.c: 35:   I2C_2_Master_Idle();
 10283   005604  EC28  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10284   005608                     
 10285                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 10286   005608  010E               	movlb	14	; () banked
 10287   00560A  83DA               	bsf	218,1,b	;volatile
 10288   00560C                     
 10289                           ; BSR set to: 14
 10290   00560C  0012               	return		;funcret
 10291   00560E                     __end_of_I2C_2_Master_RepStart:
 10292                           	callstack 0
 10293                           
 10294 ;; *************** function _I2C_2_Master_Read *****************
 10295 ;; Defined at:
 10296 ;;		line 51 in file "i2c.c"
 10297 ;; Parameters:    Size  Location     Type
 10298 ;;  ack             1    wreg     unsigned char 
 10299 ;; Auto vars:     Size  Location     Type
 10300 ;;  ack             1   17[COMRAM] unsigned char 
 10301 ;;  tmp             1   18[COMRAM] unsigned char 
 10302 ;; Return value:  Size  Location     Type
 10303 ;;                  1    wreg      unsigned char 
 10304 ;; Registers used:
 10305 ;;		wreg, status,2, status,0, cstack
 10306 ;; Tracked objects:
 10307 ;;		On entry : 0/0
 10308 ;;		On exit  : 0/0
 10309 ;;		Unchanged: 0/0
 10310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10312 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10314 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10315 ;;Total ram usage:        3 bytes
 10316 ;; Hardware stack levels used: 1
 10317 ;; Hardware stack levels required when called: 7
 10318 ;; This function calls:
 10319 ;;		_I2C_2_Master_Idle
 10320 ;; This function is called by:
 10321 ;;		_color_read
 10322 ;; This function uses a non-reentrant model
 10323 ;;
 10324                           
 10325                           	psect	text32
 10326   0052F6                     __ptext32:
 10327                           	callstack 0
 10328   0052F6                     _I2C_2_Master_Read:
 10329                           	callstack 22
 10330                           
 10331                           ; BSR set to: 14
 10332                           ;incstack = 0
 10333                           ;I2C_2_Master_Read@ack stored from wreg
 10334   0052F6  6E12               	movwf	I2C_2_Master_Read@ack^0,c
 10335   0052F8                     
 10336                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 10337   0052F8  EC28  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10338   0052FC                     
 10339                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 10340   0052FC  010E               	movlb	14	; () banked
 10341   0052FE  87DA               	bsf	218,3,b	;volatile
 10342                           
 10343                           ;i2c.c: 56:   I2C_2_Master_Idle();
 10344   005300  EC28  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10345   005304                     
 10346                           ;i2c.c: 57:   tmp = SSP2BUF;
 10347   005304  CED5 F013          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 10348                           
 10349                           ;i2c.c: 58:   I2C_2_Master_Idle();
 10350   005308  EC28  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10351   00530C                     
 10352                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 10353   00530C  5012               	movf	I2C_2_Master_Read@ack^0,w,c
 10354   00530E  B4D8               	btfsc	status,2,c
 10355   005310  EF8C  F029         	goto	u2001
 10356   005314  EF90  F029         	goto	u2000
 10357   005318                     u2001:
 10358   005318  6A11               	clrf	??_I2C_2_Master_Read^0,c
 10359   00531A  2A11               	incf	??_I2C_2_Master_Read^0,f,c
 10360   00531C  EF91  F029         	goto	u2018
 10361   005320                     u2000:
 10362   005320  6A11               	clrf	??_I2C_2_Master_Read^0,c
 10363   005322                     u2018:
 10364   005322  3A11               	swapf	??_I2C_2_Master_Read^0,f,c
 10365   005324  4611               	rlncf	??_I2C_2_Master_Read^0,f,c
 10366   005326  010E               	movlb	14	; () banked
 10367   005328  51DA               	movf	218,w,b	;volatile
 10368   00532A  1811               	xorwf	??_I2C_2_Master_Read^0,w,c
 10369   00532C  0BDF               	andlw	-33
 10370   00532E  1811               	xorwf	??_I2C_2_Master_Read^0,w,c
 10371   005330  6FDA               	movwf	218,b	;volatile
 10372   005332                     
 10373                           ; BSR set to: 14
 10374                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 10375   005332  89DA               	bsf	218,4,b	;volatile
 10376   005334                     
 10377                           ; BSR set to: 14
 10378                           ;i2c.c: 61:   return tmp;
 10379   005334  5013               	movf	I2C_2_Master_Read@tmp^0,w,c
 10380   005336                     
 10381                           ; BSR set to: 14
 10382   005336  0012               	return		;funcret
 10383   005338                     __end_of_I2C_2_Master_Read:
 10384                           	callstack 0
 10385                           
 10386 ;; *************** function _I2C_2_Master_Idle *****************
 10387 ;; Defined at:
 10388 ;;		line 22 in file "i2c.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;		None
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;		None
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      void 
 10395 ;; Registers used:
 10396 ;;		wreg, status,2, status,0
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10405 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10406 ;;Total ram usage:        1 bytes
 10407 ;; Hardware stack levels used: 1
 10408 ;; Hardware stack levels required when called: 6
 10409 ;; This function calls:
 10410 ;;		Nothing
 10411 ;; This function is called by:
 10412 ;;		_I2C_2_Master_Start
 10413 ;;		_I2C_2_Master_RepStart
 10414 ;;		_I2C_2_Master_Stop
 10415 ;;		_I2C_2_Master_Write
 10416 ;;		_I2C_2_Master_Read
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420                           	psect	text33
 10421   005450                     __ptext33:
 10422                           	callstack 0
 10423   005450                     _I2C_2_Master_Idle:
 10424                           	callstack 22
 10425   005450                     l267:
 10426   005450  010E               	movlb	14	; () banked
 10427   005452  B5D8               	btfsc	216,2,b	;volatile
 10428   005454  EF2E  F02A         	goto	u1861
 10429   005458  EF30  F02A         	goto	u1860
 10430   00545C                     u1861:
 10431   00545C  EF28  F02A         	goto	l267
 10432   005460                     u1860:
 10433   005460                     
 10434                           ; BSR set to: 14
 10435   005460  CEDA F010          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10436   005464  0E1F               	movlw	31
 10437   005466  1610               	andwf	??_I2C_2_Master_Idle^0,f,c
 10438   005468  A4D8               	btfss	status,2,c
 10439   00546A  EF39  F02A         	goto	u1871
 10440   00546E  EF3B  F02A         	goto	u1870
 10441   005472                     u1871:
 10442   005472  EF28  F02A         	goto	l267
 10443   005476                     u1870:
 10444   005476                     
 10445                           ; BSR set to: 14
 10446   005476  0012               	return		;funcret
 10447   005478                     __end_of_I2C_2_Master_Idle:
 10448                           	callstack 0
 10449                           
 10450 ;; *************** function _calibration *****************
 10451 ;; Defined at:
 10452 ;;		line 641 in file "dc_motor.c"
 10453 ;; Parameters:    Size  Location     Type
 10454 ;;  mL              2   48[COMRAM] PTR struct DC_motor
 10455 ;;		 -> main@motorL(10), 
 10456 ;;  mR              2   50[COMRAM] PTR struct DC_motor
 10457 ;;		 -> main@motorR(10), 
 10458 ;;  turnSpeed       1   52[COMRAM] unsigned char 
 10459 ;;  turnDuration    2   53[COMRAM] PTR unsigned char 
 10460 ;;		 -> main@turnDuration(1), 
 10461 ;;  turnRamp        1   55[COMRAM] unsigned char 
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;		None
 10464 ;; Return value:  Size  Location     Type
 10465 ;;                  1    wreg      void 
 10466 ;; Registers used:
 10467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10468 ;; Tracked objects:
 10469 ;;		On entry : 0/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10473 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;Total ram usage:       10 bytes
 10478 ;; Hardware stack levels used: 1
 10479 ;; Hardware stack levels required when called: 9
 10480 ;; This function calls:
 10481 ;;		_turnLeft
 10482 ;;		_turnRight
 10483 ;; This function is called by:
 10484 ;;		_main
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text34
 10489   003B58                     __ptext34:
 10490                           	callstack 0
 10491   003B58                     _calibration:
 10492                           	callstack 21
 10493   003B58                     
 10494                           ;dc_motor.c: 641: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 642: {;dc_motor.c: 644:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10495   003B58  C031  F023         	movff	calibration@mL,turnLeft@mL
 10496   003B5C  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10497   003B60  C033  F025         	movff	calibration@mR,turnLeft@mR
 10498   003B64  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10499   003B68  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10500   003B6C  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10501   003B70  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10502   003B74  50DF               	movf	indf2,w,c
 10503   003B76  6E28               	movwf	turnLeft@turnDuration^0,c
 10504   003B78  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10505   003B7C  ECBE  F023         	call	_turnLeft	;wreg free
 10506   003B80                     
 10507                           ;dc_motor.c: 645:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10508   003B80  0E05               	movlw	5
 10509   003B82  6E3A               	movwf	(??_calibration+1)^0,c
 10510   003B84  0E0F               	movlw	15
 10511   003B86  6E39               	movwf	??_calibration^0,c
 10512   003B88  0EF1               	movlw	241
 10513   003B8A                     u4907:
 10514   003B8A  2EE8               	decfsz	wreg,f,c
 10515   003B8C  D7FE               	bra	u4907
 10516   003B8E  2E39               	decfsz	??_calibration^0,f,c
 10517   003B90  D7FC               	bra	u4907
 10518   003B92  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10519   003B94  D7FA               	bra	u4907
 10520   003B96  0000               	nop	
 10521   003B98                     
 10522                           ;dc_motor.c: 646:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10523   003B98  C031  F023         	movff	calibration@mL,turnLeft@mL
 10524   003B9C  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10525   003BA0  C033  F025         	movff	calibration@mR,turnLeft@mR
 10526   003BA4  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10527   003BA8  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10528   003BAC  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10529   003BB0  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10530   003BB4  50DF               	movf	indf2,w,c
 10531   003BB6  6E28               	movwf	turnLeft@turnDuration^0,c
 10532   003BB8  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10533   003BBC  ECBE  F023         	call	_turnLeft	;wreg free
 10534                           
 10535                           ;dc_motor.c: 647:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10536   003BC0  0E05               	movlw	5
 10537   003BC2  6E3A               	movwf	(??_calibration+1)^0,c
 10538   003BC4  0E0F               	movlw	15
 10539   003BC6  6E39               	movwf	??_calibration^0,c
 10540   003BC8  0EF1               	movlw	241
 10541   003BCA                     u4917:
 10542   003BCA  2EE8               	decfsz	wreg,f,c
 10543   003BCC  D7FE               	bra	u4917
 10544   003BCE  2E39               	decfsz	??_calibration^0,f,c
 10545   003BD0  D7FC               	bra	u4917
 10546   003BD2  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10547   003BD4  D7FA               	bra	u4917
 10548   003BD6  0000               	nop	
 10549   003BD8                     
 10550                           ;dc_motor.c: 648:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10551   003BD8  C031  F023         	movff	calibration@mL,turnRight@mL
 10552   003BDC  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10553   003BE0  C033  F025         	movff	calibration@mR,turnRight@mR
 10554   003BE4  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10555   003BE8  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10556   003BEC  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10557   003BF0  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10558   003BF4  50DF               	movf	indf2,w,c
 10559   003BF6  6E28               	movwf	turnRight@turnDuration^0,c
 10560   003BF8  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10561   003BFC  ECD1  F022         	call	_turnRight	;wreg free
 10562   003C00                     
 10563                           ;dc_motor.c: 649:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10564   003C00  0E05               	movlw	5
 10565   003C02  6E3A               	movwf	(??_calibration+1)^0,c
 10566   003C04  0E0F               	movlw	15
 10567   003C06  6E39               	movwf	??_calibration^0,c
 10568   003C08  0EF1               	movlw	241
 10569   003C0A                     u4927:
 10570   003C0A  2EE8               	decfsz	wreg,f,c
 10571   003C0C  D7FE               	bra	u4927
 10572   003C0E  2E39               	decfsz	??_calibration^0,f,c
 10573   003C10  D7FC               	bra	u4927
 10574   003C12  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10575   003C14  D7FA               	bra	u4927
 10576   003C16  0000               	nop	
 10577                           
 10578                           ;dc_motor.c: 650:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10579   003C18  C031  F023         	movff	calibration@mL,turnRight@mL
 10580   003C1C  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10581   003C20  C033  F025         	movff	calibration@mR,turnRight@mR
 10582   003C24  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10583   003C28  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10584   003C2C  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10585   003C30  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10586   003C34  50DF               	movf	indf2,w,c
 10587   003C36  6E28               	movwf	turnRight@turnDuration^0,c
 10588   003C38  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10589   003C3C  ECD1  F022         	call	_turnRight	;wreg free
 10590   003C40                     l758:
 10591   003C40  A48E               	btfss	142,2,c	;volatile
 10592   003C42  EF25  F01E         	goto	u2851
 10593   003C46  EF27  F01E         	goto	u2850
 10594   003C4A                     u2851:
 10595   003C4A  EF2E  F01E         	goto	l762
 10596   003C4E                     u2850:
 10597   003C4E  B68E               	btfsc	142,3,c	;volatile
 10598   003C50  EF2C  F01E         	goto	u2861
 10599   003C54  EF2E  F01E         	goto	u2860
 10600   003C58                     u2861:
 10601   003C58  EF20  F01E         	goto	l758
 10602   003C5C                     u2860:
 10603   003C5C                     l762:
 10604                           
 10605                           ;dc_motor.c: 655:         if (!PORTFbits.RF2 && *turnDuration>0) {
 10606   003C5C  B48E               	btfsc	142,2,c	;volatile
 10607   003C5E  EF33  F01E         	goto	u2871
 10608   003C62  EF35  F01E         	goto	u2870
 10609   003C66                     u2871:
 10610   003C66  EF49  F01E         	goto	l763
 10611   003C6A                     u2870:
 10612   003C6A  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10613   003C6E  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10614   003C72  50DF               	movf	indf2,w,c
 10615   003C74  B4D8               	btfsc	status,2,c
 10616   003C76  EF3F  F01E         	goto	u2881
 10617   003C7A  EF41  F01E         	goto	u2880
 10618   003C7E                     u2881:
 10619   003C7E  EF49  F01E         	goto	l763
 10620   003C82                     u2880:
 10621   003C82                     
 10622                           ;dc_motor.c: 656:             (*turnDuration)--;
 10623   003C82  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10624   003C86  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10625   003C8A  06DF               	decf	indf2,f,c
 10626   003C8C                     
 10627                           ;dc_motor.c: 657:             LATDbits.LATD7 = 1;
 10628   003C8C  8E7C               	bsf	124,7,c	;volatile
 10629                           
 10630                           ;dc_motor.c: 658:         }
 10631   003C8E  EF56  F01E         	goto	l4056
 10632   003C92                     l763:
 10633   003C92  B68E               	btfsc	142,3,c	;volatile
 10634   003C94  EF4E  F01E         	goto	u2891
 10635   003C98  EF50  F01E         	goto	u2890
 10636   003C9C                     u2891:
 10637   003C9C  EF56  F01E         	goto	l4056
 10638   003CA0                     u2890:
 10639   003CA0                     
 10640                           ;dc_motor.c: 661:             (*turnDuration)++;
 10641   003CA0  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10642   003CA4  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10643   003CA8  2ADF               	incf	indf2,f,c
 10644   003CAA                     
 10645                           ;dc_motor.c: 662:             LATHbits.LATH3 = 1;
 10646   003CAA  8680               	bsf	128,3,c	;volatile
 10647   003CAC                     l4056:
 10648                           
 10649                           ;dc_motor.c: 665:         _delay((unsigned long)((500)*(64000000/4000.0)));
 10650   003CAC  0E29               	movlw	41
 10651   003CAE  6E3A               	movwf	(??_calibration+1)^0,c
 10652   003CB0  0E96               	movlw	150
 10653   003CB2  6E39               	movwf	??_calibration^0,c
 10654   003CB4  0E7F               	movlw	127
 10655   003CB6                     u4937:
 10656   003CB6  2EE8               	decfsz	wreg,f,c
 10657   003CB8  D7FE               	bra	u4937
 10658   003CBA  2E39               	decfsz	??_calibration^0,f,c
 10659   003CBC  D7FC               	bra	u4937
 10660   003CBE  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10661   003CC0  D7FA               	bra	u4937
 10662   003CC2  0000               	nop	
 10663   003CC4                     
 10664                           ;dc_motor.c: 667:         if (!PORTFbits.RF3) {
 10665   003CC4  B68E               	btfsc	142,3,c	;volatile
 10666   003CC6  EF67  F01E         	goto	u2901
 10667   003CCA  EF69  F01E         	goto	u2900
 10668   003CCE                     u2901:
 10669   003CCE  EF70  F01E         	goto	l766
 10670   003CD2                     u2900:
 10671   003CD2                     
 10672                           ;dc_motor.c: 668:             (*turnDuration)--;
 10673   003CD2  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10674   003CD6  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10675   003CDA  06DF               	decf	indf2,f,c
 10676                           
 10677                           ;dc_motor.c: 669:             break;
 10678   003CDC  EFE8  F01E         	goto	l767
 10679   003CE0                     l766:
 10680                           
 10681                           ;dc_motor.c: 672:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10682   003CE0  9680               	bcf	128,3,c	;volatile
 10683   003CE2  9E7C               	bcf	124,7,c	;volatile
 10684   003CE4                     
 10685                           ;dc_motor.c: 675:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10686   003CE4  C031  F023         	movff	calibration@mL,turnLeft@mL
 10687   003CE8  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10688   003CEC  C033  F025         	movff	calibration@mR,turnLeft@mR
 10689   003CF0  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10690   003CF4  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10691   003CF8  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10692   003CFC  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10693   003D00  50DF               	movf	indf2,w,c
 10694   003D02  6E28               	movwf	turnLeft@turnDuration^0,c
 10695   003D04  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10696   003D08  ECBE  F023         	call	_turnLeft	;wreg free
 10697   003D0C                     
 10698                           ;dc_motor.c: 676:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10699   003D0C  0E05               	movlw	5
 10700   003D0E  6E3A               	movwf	(??_calibration+1)^0,c
 10701   003D10  0E0F               	movlw	15
 10702   003D12  6E39               	movwf	??_calibration^0,c
 10703   003D14  0EF1               	movlw	241
 10704   003D16                     u4947:
 10705   003D16  2EE8               	decfsz	wreg,f,c
 10706   003D18  D7FE               	bra	u4947
 10707   003D1A  2E39               	decfsz	??_calibration^0,f,c
 10708   003D1C  D7FC               	bra	u4947
 10709   003D1E  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10710   003D20  D7FA               	bra	u4947
 10711   003D22  0000               	nop	
 10712   003D24                     
 10713                           ;dc_motor.c: 677:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10714   003D24  C031  F023         	movff	calibration@mL,turnLeft@mL
 10715   003D28  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10716   003D2C  C033  F025         	movff	calibration@mR,turnLeft@mR
 10717   003D30  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10718   003D34  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10719   003D38  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10720   003D3C  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10721   003D40  50DF               	movf	indf2,w,c
 10722   003D42  6E28               	movwf	turnLeft@turnDuration^0,c
 10723   003D44  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10724   003D48  ECBE  F023         	call	_turnLeft	;wreg free
 10725                           
 10726                           ;dc_motor.c: 678:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10727   003D4C  0E05               	movlw	5
 10728   003D4E  6E3A               	movwf	(??_calibration+1)^0,c
 10729   003D50  0E0F               	movlw	15
 10730   003D52  6E39               	movwf	??_calibration^0,c
 10731   003D54  0EF1               	movlw	241
 10732   003D56                     u4957:
 10733   003D56  2EE8               	decfsz	wreg,f,c
 10734   003D58  D7FE               	bra	u4957
 10735   003D5A  2E39               	decfsz	??_calibration^0,f,c
 10736   003D5C  D7FC               	bra	u4957
 10737   003D5E  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10738   003D60  D7FA               	bra	u4957
 10739   003D62  0000               	nop	
 10740   003D64                     
 10741                           ;dc_motor.c: 679:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10742   003D64  C031  F023         	movff	calibration@mL,turnRight@mL
 10743   003D68  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10744   003D6C  C033  F025         	movff	calibration@mR,turnRight@mR
 10745   003D70  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10746   003D74  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10747   003D78  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10748   003D7C  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10749   003D80  50DF               	movf	indf2,w,c
 10750   003D82  6E28               	movwf	turnRight@turnDuration^0,c
 10751   003D84  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10752   003D88  ECD1  F022         	call	_turnRight	;wreg free
 10753   003D8C                     
 10754                           ;dc_motor.c: 680:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10755   003D8C  0E05               	movlw	5
 10756   003D8E  6E3A               	movwf	(??_calibration+1)^0,c
 10757   003D90  0E0F               	movlw	15
 10758   003D92  6E39               	movwf	??_calibration^0,c
 10759   003D94  0EF1               	movlw	241
 10760   003D96                     u4967:
 10761   003D96  2EE8               	decfsz	wreg,f,c
 10762   003D98  D7FE               	bra	u4967
 10763   003D9A  2E39               	decfsz	??_calibration^0,f,c
 10764   003D9C  D7FC               	bra	u4967
 10765   003D9E  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10766   003DA0  D7FA               	bra	u4967
 10767   003DA2  0000               	nop	
 10768                           
 10769                           ;dc_motor.c: 681:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10770   003DA4  C031  F023         	movff	calibration@mL,turnRight@mL
 10771   003DA8  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10772   003DAC  C033  F025         	movff	calibration@mR,turnRight@mR
 10773   003DB0  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10774   003DB4  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10775   003DB8  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10776   003DBC  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10777   003DC0  50DF               	movf	indf2,w,c
 10778   003DC2  6E28               	movwf	turnRight@turnDuration^0,c
 10779   003DC4  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10780   003DC8  ECD1  F022         	call	_turnRight	;wreg free
 10781   003DCC  EF20  F01E         	goto	l758
 10782   003DD0                     l767:
 10783                           
 10784                           ;dc_motor.c: 686:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
 10785   003DD0  8680               	bsf	128,3,c	;volatile
 10786   003DD2  8E7C               	bsf	124,7,c	;volatile
 10787   003DD4                     
 10788                           ;dc_motor.c: 687:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10789   003DD4  0E09               	movlw	9
 10790   003DD6  6E3A               	movwf	(??_calibration+1)^0,c
 10791   003DD8  0E1E               	movlw	30
 10792   003DDA  6E39               	movwf	??_calibration^0,c
 10793   003DDC  0EE4               	movlw	228
 10794   003DDE                     u4977:
 10795   003DDE  2EE8               	decfsz	wreg,f,c
 10796   003DE0  D7FE               	bra	u4977
 10797   003DE2  2E39               	decfsz	??_calibration^0,f,c
 10798   003DE4  D7FC               	bra	u4977
 10799   003DE6  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10800   003DE8  D7FA               	bra	u4977
 10801   003DEA  D000               	nop2	
 10802   003DEC                     
 10803                           ;dc_motor.c: 688:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10804   003DEC  9680               	bcf	128,3,c	;volatile
 10805   003DEE  9E7C               	bcf	124,7,c	;volatile
 10806   003DF0  0012               	return		;funcret
 10807   003DF2                     __end_of_calibration:
 10808                           	callstack 0
 10809                           
 10810 ;; *************** function _turnRight *****************
 10811 ;; Defined at:
 10812 ;;		line 425 in file "dc_motor.c"
 10813 ;; Parameters:    Size  Location     Type
 10814 ;;  mL              2   34[COMRAM] PTR struct DC_motor
 10815 ;;		 -> main@motorL(10), 
 10816 ;;  mR              2   36[COMRAM] PTR struct DC_motor
 10817 ;;		 -> main@motorR(10), 
 10818 ;;  turnSpeed       1   38[COMRAM] unsigned char 
 10819 ;;  turnDuration    1   39[COMRAM] unsigned char 
 10820 ;;  turnRamp        1   40[COMRAM] unsigned char 
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;  cur_power       2   46[COMRAM] int 
 10823 ;;  i               2   44[COMRAM] int 
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  1    wreg      void 
 10826 ;; Registers used:
 10827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10833 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10834 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10835 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10836 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10837 ;;Total ram usage:       14 bytes
 10838 ;; Hardware stack levels used: 1
 10839 ;; Hardware stack levels required when called: 8
 10840 ;; This function calls:
 10841 ;;		_setMotorPWM
 10842 ;; This function is called by:
 10843 ;;		_move
 10844 ;;		_returnHome
 10845 ;;		_lostReturnHome
 10846 ;;		_calibration
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           	psect	text35
 10851   0045A2                     __ptext35:
 10852                           	callstack 0
 10853   0045A2                     _turnRight:
 10854                           	callstack 21
 10855   0045A2                     
 10856                           ;dc_motor.c: 425: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 426: {;dc_motor.c: 427:     mL->dir
      +                          ection = 1;
 10857   0045A2  EE20 F001          	lfsr	2,1
 10858   0045A6  5023               	movf	turnRight@mL^0,w,c
 10859   0045A8  26D9               	addwf	fsr2l,f,c
 10860   0045AA  5024               	movf	(turnRight@mL+1)^0,w,c
 10861   0045AC  22DA               	addwfc	fsr2h,f,c
 10862   0045AE  0E01               	movlw	1
 10863   0045B0  6EDF               	movwf	indf2,c
 10864                           
 10865                           ;dc_motor.c: 428:     mR->direction = 0;
 10866   0045B2  EE20 F001          	lfsr	2,1
 10867   0045B6  5025               	movf	turnRight@mR^0,w,c
 10868   0045B8  26D9               	addwf	fsr2l,f,c
 10869   0045BA  5026               	movf	(turnRight@mR+1)^0,w,c
 10870   0045BC  22DA               	addwfc	fsr2h,f,c
 10871   0045BE  6ADF               	clrf	indf2,c
 10872   0045C0                     
 10873                           ;dc_motor.c: 429:     int i;;dc_motor.c: 430:     int cur_power;;dc_motor.c: 431:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 10874   0045C0  0E00               	movlw	0
 10875   0045C2  6E30               	movwf	(turnRight@cur_power+1)^0,c
 10876   0045C4  0E01               	movlw	1
 10877   0045C6  6E2F               	movwf	turnRight@cur_power^0,c
 10878   0045C8  EF30  F023         	goto	l3266
 10879   0045CC                     l3252:
 10880                           
 10881                           ;dc_motor.c: 432:         mL->power = cur_power+mL->compensation;
 10882   0045CC  EE20 F009          	lfsr	2,9
 10883   0045D0  5023               	movf	turnRight@mL^0,w,c
 10884   0045D2  26D9               	addwf	fsr2l,f,c
 10885   0045D4  5024               	movf	(turnRight@mL+1)^0,w,c
 10886   0045D6  22DA               	addwfc	fsr2h,f,c
 10887   0045D8  50DF               	movf	indf2,w,c
 10888   0045DA  242F               	addwf	turnRight@cur_power^0,w,c
 10889   0045DC  C023  FFD9         	movff	turnRight@mL,fsr2l
 10890   0045E0  C024  FFDA         	movff	turnRight@mL+1,fsr2h
 10891   0045E4  6EDF               	movwf	indf2,c
 10892                           
 10893                           ;dc_motor.c: 433:         mR->power = cur_power+mR->compensation;
 10894   0045E6  EE20 F009          	lfsr	2,9
 10895   0045EA  5025               	movf	turnRight@mR^0,w,c
 10896   0045EC  26D9               	addwf	fsr2l,f,c
 10897   0045EE  5026               	movf	(turnRight@mR+1)^0,w,c
 10898   0045F0  22DA               	addwfc	fsr2h,f,c
 10899   0045F2  50DF               	movf	indf2,w,c
 10900   0045F4  242F               	addwf	turnRight@cur_power^0,w,c
 10901   0045F6  C025  FFD9         	movff	turnRight@mR,fsr2l
 10902   0045FA  C026  FFDA         	movff	turnRight@mR+1,fsr2h
 10903   0045FE  6EDF               	movwf	indf2,c
 10904   004600                     
 10905                           ;dc_motor.c: 434:         setMotorPWM(mL);
 10906   004600  C023  F01D         	movff	turnRight@mL,setMotorPWM@m
 10907   004604  C024  F01E         	movff	turnRight@mL+1,setMotorPWM@m+1
 10908   004608  ECAB  F024         	call	_setMotorPWM	;wreg free
 10909   00460C                     
 10910                           ;dc_motor.c: 435:         setMotorPWM(mR);
 10911   00460C  C025  F01D         	movff	turnRight@mR,setMotorPWM@m
 10912   004610  C026  F01E         	movff	turnRight@mR+1,setMotorPWM@m+1
 10913   004614  ECAB  F024         	call	_setMotorPWM	;wreg free
 10914   004618                     
 10915                           ;dc_motor.c: 436:         for (i=0;i<turnRamp;i++) {
 10916   004618  0E00               	movlw	0
 10917   00461A  6E2E               	movwf	(turnRight@i+1)^0,c
 10918   00461C  0E00               	movlw	0
 10919   00461E  6E2D               	movwf	turnRight@i^0,c
 10920   004620  EF1C  F023         	goto	l651
 10921   004624                     l3260:
 10922                           
 10923                           ;dc_motor.c: 437:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10924   004624  0E68               	movlw	104
 10925   004626  6E2A               	movwf	??_turnRight^0,c
 10926   004628  0EE4               	movlw	228
 10927   00462A                     u4987:
 10928   00462A  2EE8               	decfsz	wreg,f,c
 10929   00462C  D7FE               	bra	u4987
 10930   00462E  2E2A               	decfsz	??_turnRight^0,f,c
 10931   004630  D7FC               	bra	u4987
 10932   004632  D000               	nop2	
 10933   004634                     
 10934                           ;dc_motor.c: 438:         }
 10935   004634  4A2D               	infsnz	turnRight@i^0,f,c
 10936   004636  2A2E               	incf	(turnRight@i+1)^0,f,c
 10937   004638                     l651:
 10938   004638  5029               	movf	turnRight@turnRamp^0,w,c
 10939   00463A  6E2A               	movwf	??_turnRight^0,c
 10940   00463C  6A2B               	clrf	(??_turnRight+1)^0,c
 10941   00463E  502A               	movf	??_turnRight^0,w,c
 10942   004640  5C2D               	subwf	turnRight@i^0,w,c
 10943   004642  502E               	movf	(turnRight@i+1)^0,w,c
 10944   004644  0A80               	xorlw	128
 10945   004646  6E2C               	movwf	(??_turnRight+2)^0,c
 10946   004648  502B               	movf	(??_turnRight+1)^0,w,c
 10947   00464A  0A80               	xorlw	128
 10948   00464C  582C               	subwfb	(??_turnRight+2)^0,w,c
 10949   00464E  A0D8               	btfss	status,0,c
 10950   004650  EF2C  F023         	goto	u2041
 10951   004654  EF2E  F023         	goto	u2040
 10952   004658                     u2041:
 10953   004658  EF12  F023         	goto	l3260
 10954   00465C                     u2040:
 10955   00465C                     
 10956                           ;dc_motor.c: 439:     }
 10957   00465C  4A2F               	infsnz	turnRight@cur_power^0,f,c
 10958   00465E  2A30               	incf	(turnRight@cur_power+1)^0,f,c
 10959   004660                     l3266:
 10960   004660  5027               	movf	turnRight@turnSpeed^0,w,c
 10961   004662  6E2A               	movwf	??_turnRight^0,c
 10962   004664  6A2B               	clrf	(??_turnRight+1)^0,c
 10963   004666  502F               	movf	turnRight@cur_power^0,w,c
 10964   004668  5C2A               	subwf	??_turnRight^0,w,c
 10965   00466A  502B               	movf	(??_turnRight+1)^0,w,c
 10966   00466C  0A80               	xorlw	128
 10967   00466E  6E2C               	movwf	(??_turnRight+2)^0,c
 10968   004670  5030               	movf	(turnRight@cur_power+1)^0,w,c
 10969   004672  0A80               	xorlw	128
 10970   004674  582C               	subwfb	(??_turnRight+2)^0,w,c
 10971   004676  B0D8               	btfsc	status,0,c
 10972   004678  EF40  F023         	goto	u2051
 10973   00467C  EF42  F023         	goto	u2050
 10974   004680                     u2051:
 10975   004680  EFE6  F022         	goto	l3252
 10976   004684                     u2050:
 10977   004684                     
 10978                           ;dc_motor.c: 441:     for (i=0;i<turnDuration;i++) {
 10979   004684  0E00               	movlw	0
 10980   004686  6E2E               	movwf	(turnRight@i+1)^0,c
 10981   004688  0E00               	movlw	0
 10982   00468A  6E2D               	movwf	turnRight@i^0,c
 10983   00468C  EF52  F023         	goto	l655
 10984   004690                     l3270:
 10985                           
 10986                           ;dc_motor.c: 442:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10987   004690  0E68               	movlw	104
 10988   004692  6E2A               	movwf	??_turnRight^0,c
 10989   004694  0EE4               	movlw	228
 10990   004696                     u4997:
 10991   004696  2EE8               	decfsz	wreg,f,c
 10992   004698  D7FE               	bra	u4997
 10993   00469A  2E2A               	decfsz	??_turnRight^0,f,c
 10994   00469C  D7FC               	bra	u4997
 10995   00469E  D000               	nop2	
 10996   0046A0                     
 10997                           ;dc_motor.c: 443:         }
 10998   0046A0  4A2D               	infsnz	turnRight@i^0,f,c
 10999   0046A2  2A2E               	incf	(turnRight@i+1)^0,f,c
 11000   0046A4                     l655:
 11001   0046A4  5028               	movf	turnRight@turnDuration^0,w,c
 11002   0046A6  6E2A               	movwf	??_turnRight^0,c
 11003   0046A8  6A2B               	clrf	(??_turnRight+1)^0,c
 11004   0046AA  502A               	movf	??_turnRight^0,w,c
 11005   0046AC  5C2D               	subwf	turnRight@i^0,w,c
 11006   0046AE  502E               	movf	(turnRight@i+1)^0,w,c
 11007   0046B0  0A80               	xorlw	128
 11008   0046B2  6E2C               	movwf	(??_turnRight+2)^0,c
 11009   0046B4  502B               	movf	(??_turnRight+1)^0,w,c
 11010   0046B6  0A80               	xorlw	128
 11011   0046B8  582C               	subwfb	(??_turnRight+2)^0,w,c
 11012   0046BA  A0D8               	btfss	status,0,c
 11013   0046BC  EF62  F023         	goto	u2061
 11014   0046C0  EF64  F023         	goto	u2060
 11015   0046C4                     u2061:
 11016   0046C4  EF48  F023         	goto	l3270
 11017   0046C8                     u2060:
 11018   0046C8                     
 11019                           ;dc_motor.c: 445:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 11020   0046C8  C027  F02F         	movff	turnRight@turnSpeed,turnRight@cur_power
 11021   0046CC  6A30               	clrf	(turnRight@cur_power+1)^0,c
 11022   0046CE                     l3274:
 11023   0046CE  BE30               	btfsc	(turnRight@cur_power+1)^0,7,c
 11024   0046D0  EF6E  F023         	goto	u2070
 11025   0046D4  EF6C  F023         	goto	u2071
 11026   0046D8                     u2071:
 11027   0046D8  EF70  F023         	goto	l3278
 11028   0046DC                     u2070:
 11029   0046DC  EFBD  F023         	goto	l663
 11030   0046E0                     l3278:
 11031                           
 11032                           ;dc_motor.c: 446:         mL->power = cur_power+mL->compensation;
 11033   0046E0  EE20 F009          	lfsr	2,9
 11034   0046E4  5023               	movf	turnRight@mL^0,w,c
 11035   0046E6  26D9               	addwf	fsr2l,f,c
 11036   0046E8  5024               	movf	(turnRight@mL+1)^0,w,c
 11037   0046EA  22DA               	addwfc	fsr2h,f,c
 11038   0046EC  50DF               	movf	indf2,w,c
 11039   0046EE  242F               	addwf	turnRight@cur_power^0,w,c
 11040   0046F0  C023  FFD9         	movff	turnRight@mL,fsr2l
 11041   0046F4  C024  FFDA         	movff	turnRight@mL+1,fsr2h
 11042   0046F8  6EDF               	movwf	indf2,c
 11043                           
 11044                           ;dc_motor.c: 447:         mR->power = cur_power+mR->compensation;
 11045   0046FA  EE20 F009          	lfsr	2,9
 11046   0046FE  5025               	movf	turnRight@mR^0,w,c
 11047   004700  26D9               	addwf	fsr2l,f,c
 11048   004702  5026               	movf	(turnRight@mR+1)^0,w,c
 11049   004704  22DA               	addwfc	fsr2h,f,c
 11050   004706  50DF               	movf	indf2,w,c
 11051   004708  242F               	addwf	turnRight@cur_power^0,w,c
 11052   00470A  C025  FFD9         	movff	turnRight@mR,fsr2l
 11053   00470E  C026  FFDA         	movff	turnRight@mR+1,fsr2h
 11054   004712  6EDF               	movwf	indf2,c
 11055   004714                     
 11056                           ;dc_motor.c: 448:         setMotorPWM(mL);
 11057   004714  C023  F01D         	movff	turnRight@mL,setMotorPWM@m
 11058   004718  C024  F01E         	movff	turnRight@mL+1,setMotorPWM@m+1
 11059   00471C  ECAB  F024         	call	_setMotorPWM	;wreg free
 11060   004720                     
 11061                           ;dc_motor.c: 449:         setMotorPWM(mR);
 11062   004720  C025  F01D         	movff	turnRight@mR,setMotorPWM@m
 11063   004724  C026  F01E         	movff	turnRight@mR+1,setMotorPWM@m+1
 11064   004728  ECAB  F024         	call	_setMotorPWM	;wreg free
 11065   00472C                     
 11066                           ;dc_motor.c: 450:         for (i=0;i<turnRamp;i++) {
 11067   00472C  0E00               	movlw	0
 11068   00472E  6E2E               	movwf	(turnRight@i+1)^0,c
 11069   004730  0E00               	movlw	0
 11070   004732  6E2D               	movwf	turnRight@i^0,c
 11071   004734  EFA6  F023         	goto	l660
 11072   004738                     l3286:
 11073                           
 11074                           ;dc_motor.c: 451:             _delay((unsigned long)((5)*(64000000/4000.0)));
 11075   004738  0E68               	movlw	104
 11076   00473A  6E2A               	movwf	??_turnRight^0,c
 11077   00473C  0EE4               	movlw	228
 11078   00473E                     u5007:
 11079   00473E  2EE8               	decfsz	wreg,f,c
 11080   004740  D7FE               	bra	u5007
 11081   004742  2E2A               	decfsz	??_turnRight^0,f,c
 11082   004744  D7FC               	bra	u5007
 11083   004746  D000               	nop2	
 11084   004748                     
 11085                           ;dc_motor.c: 452:         }
 11086   004748  4A2D               	infsnz	turnRight@i^0,f,c
 11087   00474A  2A2E               	incf	(turnRight@i+1)^0,f,c
 11088   00474C                     l660:
 11089   00474C  5029               	movf	turnRight@turnRamp^0,w,c
 11090   00474E  6E2A               	movwf	??_turnRight^0,c
 11091   004750  6A2B               	clrf	(??_turnRight+1)^0,c
 11092   004752  502A               	movf	??_turnRight^0,w,c
 11093   004754  5C2D               	subwf	turnRight@i^0,w,c
 11094   004756  502E               	movf	(turnRight@i+1)^0,w,c
 11095   004758  0A80               	xorlw	128
 11096   00475A  6E2C               	movwf	(??_turnRight+2)^0,c
 11097   00475C  502B               	movf	(??_turnRight+1)^0,w,c
 11098   00475E  0A80               	xorlw	128
 11099   004760  582C               	subwfb	(??_turnRight+2)^0,w,c
 11100   004762  A0D8               	btfss	status,0,c
 11101   004764  EFB6  F023         	goto	u2081
 11102   004768  EFB8  F023         	goto	u2080
 11103   00476C                     u2081:
 11104   00476C  EF9C  F023         	goto	l3286
 11105   004770                     u2080:
 11106   004770                     
 11107                           ;dc_motor.c: 453:     }
 11108   004770  062F               	decf	turnRight@cur_power^0,f,c
 11109   004772  A0D8               	btfss	status,0,c
 11110   004774  0630               	decf	(turnRight@cur_power+1)^0,f,c
 11111   004776  EF67  F023         	goto	l3274
 11112   00477A                     l663:
 11113   00477A  0012               	return		;funcret
 11114   00477C                     __end_of_turnRight:
 11115                           	callstack 0
 11116                           
 11117 ;; *************** function _turnLeft *****************
 11118 ;; Defined at:
 11119 ;;		line 393 in file "dc_motor.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  mL              2   34[COMRAM] PTR struct DC_motor
 11122 ;;		 -> main@motorL(10), 
 11123 ;;  mR              2   36[COMRAM] PTR struct DC_motor
 11124 ;;		 -> main@motorR(10), 
 11125 ;;  turnSpeed       1   38[COMRAM] unsigned char 
 11126 ;;  turnDuration    1   39[COMRAM] unsigned char 
 11127 ;;  turnRamp        1   40[COMRAM] unsigned char 
 11128 ;; Auto vars:     Size  Location     Type
 11129 ;;  cur_power       2   46[COMRAM] int 
 11130 ;;  i               2   44[COMRAM] int 
 11131 ;; Return value:  Size  Location     Type
 11132 ;;                  1    wreg      void 
 11133 ;; Registers used:
 11134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11135 ;; Tracked objects:
 11136 ;;		On entry : 0/0
 11137 ;;		On exit  : 0/0
 11138 ;;		Unchanged: 0/0
 11139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11140 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11141 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11142 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11143 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11144 ;;Total ram usage:       14 bytes
 11145 ;; Hardware stack levels used: 1
 11146 ;; Hardware stack levels required when called: 8
 11147 ;; This function calls:
 11148 ;;		_setMotorPWM
 11149 ;; This function is called by:
 11150 ;;		_move
 11151 ;;		_returnHome
 11152 ;;		_lostReturnHome
 11153 ;;		_calibration
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	text36
 11158   00477C                     __ptext36:
 11159                           	callstack 0
 11160   00477C                     _turnLeft:
 11161                           	callstack 21
 11162   00477C                     
 11163                           ;dc_motor.c: 393: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 394: {;dc_motor.c: 395:     mL->dire
      +                          ction = 0;
 11164   00477C  EE20 F001          	lfsr	2,1
 11165   004780  5023               	movf	turnLeft@mL^0,w,c
 11166   004782  26D9               	addwf	fsr2l,f,c
 11167   004784  5024               	movf	(turnLeft@mL+1)^0,w,c
 11168   004786  22DA               	addwfc	fsr2h,f,c
 11169   004788  6ADF               	clrf	indf2,c
 11170                           
 11171                           ;dc_motor.c: 396:     mR->direction = 1;
 11172   00478A  EE20 F001          	lfsr	2,1
 11173   00478E  5025               	movf	turnLeft@mR^0,w,c
 11174   004790  26D9               	addwf	fsr2l,f,c
 11175   004792  5026               	movf	(turnLeft@mR+1)^0,w,c
 11176   004794  22DA               	addwfc	fsr2h,f,c
 11177   004796  0E01               	movlw	1
 11178   004798  6EDF               	movwf	indf2,c
 11179   00479A                     
 11180                           ;dc_motor.c: 397:     int i;;dc_motor.c: 398:     int cur_power;;dc_motor.c: 399:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 11181   00479A  0E00               	movlw	0
 11182   00479C  6E30               	movwf	(turnLeft@cur_power+1)^0,c
 11183   00479E  0E01               	movlw	1
 11184   0047A0  6E2F               	movwf	turnLeft@cur_power^0,c
 11185   0047A2  EF1D  F024         	goto	l3312
 11186   0047A6                     l3298:
 11187                           
 11188                           ;dc_motor.c: 400:         mL->power = cur_power+mL->compensation;
 11189   0047A6  EE20 F009          	lfsr	2,9
 11190   0047AA  5023               	movf	turnLeft@mL^0,w,c
 11191   0047AC  26D9               	addwf	fsr2l,f,c
 11192   0047AE  5024               	movf	(turnLeft@mL+1)^0,w,c
 11193   0047B0  22DA               	addwfc	fsr2h,f,c
 11194   0047B2  50DF               	movf	indf2,w,c
 11195   0047B4  242F               	addwf	turnLeft@cur_power^0,w,c
 11196   0047B6  C023  FFD9         	movff	turnLeft@mL,fsr2l
 11197   0047BA  C024  FFDA         	movff	turnLeft@mL+1,fsr2h
 11198   0047BE  6EDF               	movwf	indf2,c
 11199                           
 11200                           ;dc_motor.c: 401:         mR->power = cur_power+mR->compensation;
 11201   0047C0  EE20 F009          	lfsr	2,9
 11202   0047C4  5025               	movf	turnLeft@mR^0,w,c
 11203   0047C6  26D9               	addwf	fsr2l,f,c
 11204   0047C8  5026               	movf	(turnLeft@mR+1)^0,w,c
 11205   0047CA  22DA               	addwfc	fsr2h,f,c
 11206   0047CC  50DF               	movf	indf2,w,c
 11207   0047CE  242F               	addwf	turnLeft@cur_power^0,w,c
 11208   0047D0  C025  FFD9         	movff	turnLeft@mR,fsr2l
 11209   0047D4  C026  FFDA         	movff	turnLeft@mR+1,fsr2h
 11210   0047D8  6EDF               	movwf	indf2,c
 11211   0047DA                     
 11212                           ;dc_motor.c: 402:         setMotorPWM(mL);
 11213   0047DA  C023  F01D         	movff	turnLeft@mL,setMotorPWM@m
 11214   0047DE  C024  F01E         	movff	turnLeft@mL+1,setMotorPWM@m+1
 11215   0047E2  ECAB  F024         	call	_setMotorPWM	;wreg free
 11216   0047E6                     
 11217                           ;dc_motor.c: 403:         setMotorPWM(mR);
 11218   0047E6  C025  F01D         	movff	turnLeft@mR,setMotorPWM@m
 11219   0047EA  C026  F01E         	movff	turnLeft@mR+1,setMotorPWM@m+1
 11220   0047EE  ECAB  F024         	call	_setMotorPWM	;wreg free
 11221   0047F2                     
 11222                           ;dc_motor.c: 404:         for (i=0;i<turnRamp;i++) {
 11223   0047F2  0E00               	movlw	0
 11224   0047F4  6E2E               	movwf	(turnLeft@i+1)^0,c
 11225   0047F6  0E00               	movlw	0
 11226   0047F8  6E2D               	movwf	turnLeft@i^0,c
 11227   0047FA  EF09  F024         	goto	l634
 11228   0047FE                     l3306:
 11229                           
 11230                           ;dc_motor.c: 405:             _delay((unsigned long)((5)*(64000000/4000.0)));
 11231   0047FE  0E68               	movlw	104
 11232   004800  6E2A               	movwf	??_turnLeft^0,c
 11233   004802  0EE4               	movlw	228
 11234   004804                     u5017:
 11235   004804  2EE8               	decfsz	wreg,f,c
 11236   004806  D7FE               	bra	u5017
 11237   004808  2E2A               	decfsz	??_turnLeft^0,f,c
 11238   00480A  D7FC               	bra	u5017
 11239   00480C  D000               	nop2	
 11240   00480E                     
 11241                           ;dc_motor.c: 406:         }
 11242   00480E  4A2D               	infsnz	turnLeft@i^0,f,c
 11243   004810  2A2E               	incf	(turnLeft@i+1)^0,f,c
 11244   004812                     l634:
 11245   004812  5029               	movf	turnLeft@turnRamp^0,w,c
 11246   004814  6E2A               	movwf	??_turnLeft^0,c
 11247   004816  6A2B               	clrf	(??_turnLeft+1)^0,c
 11248   004818  502A               	movf	??_turnLeft^0,w,c
 11249   00481A  5C2D               	subwf	turnLeft@i^0,w,c
 11250   00481C  502E               	movf	(turnLeft@i+1)^0,w,c
 11251   00481E  0A80               	xorlw	128
 11252   004820  6E2C               	movwf	(??_turnLeft+2)^0,c
 11253   004822  502B               	movf	(??_turnLeft+1)^0,w,c
 11254   004824  0A80               	xorlw	128
 11255   004826  582C               	subwfb	(??_turnLeft+2)^0,w,c
 11256   004828  A0D8               	btfss	status,0,c
 11257   00482A  EF19  F024         	goto	u2091
 11258   00482E  EF1B  F024         	goto	u2090
 11259   004832                     u2091:
 11260   004832  EFFF  F023         	goto	l3306
 11261   004836                     u2090:
 11262   004836                     
 11263                           ;dc_motor.c: 407:     }
 11264   004836  4A2F               	infsnz	turnLeft@cur_power^0,f,c
 11265   004838  2A30               	incf	(turnLeft@cur_power+1)^0,f,c
 11266   00483A                     l3312:
 11267   00483A  5027               	movf	turnLeft@turnSpeed^0,w,c
 11268   00483C  6E2A               	movwf	??_turnLeft^0,c
 11269   00483E  6A2B               	clrf	(??_turnLeft+1)^0,c
 11270   004840  502F               	movf	turnLeft@cur_power^0,w,c
 11271   004842  5C2A               	subwf	??_turnLeft^0,w,c
 11272   004844  502B               	movf	(??_turnLeft+1)^0,w,c
 11273   004846  0A80               	xorlw	128
 11274   004848  6E2C               	movwf	(??_turnLeft+2)^0,c
 11275   00484A  5030               	movf	(turnLeft@cur_power+1)^0,w,c
 11276   00484C  0A80               	xorlw	128
 11277   00484E  582C               	subwfb	(??_turnLeft+2)^0,w,c
 11278   004850  B0D8               	btfsc	status,0,c
 11279   004852  EF2D  F024         	goto	u2101
 11280   004856  EF2F  F024         	goto	u2100
 11281   00485A                     u2101:
 11282   00485A  EFD3  F023         	goto	l3298
 11283   00485E                     u2100:
 11284   00485E                     
 11285                           ;dc_motor.c: 409:     for (i=0;i<turnDuration;i++) {
 11286   00485E  0E00               	movlw	0
 11287   004860  6E2E               	movwf	(turnLeft@i+1)^0,c
 11288   004862  0E00               	movlw	0
 11289   004864  6E2D               	movwf	turnLeft@i^0,c
 11290   004866  EF3F  F024         	goto	l638
 11291   00486A                     l3316:
 11292                           
 11293                           ;dc_motor.c: 410:             _delay((unsigned long)((5)*(64000000/4000.0)));
 11294   00486A  0E68               	movlw	104
 11295   00486C  6E2A               	movwf	??_turnLeft^0,c
 11296   00486E  0EE4               	movlw	228
 11297   004870                     u5027:
 11298   004870  2EE8               	decfsz	wreg,f,c
 11299   004872  D7FE               	bra	u5027
 11300   004874  2E2A               	decfsz	??_turnLeft^0,f,c
 11301   004876  D7FC               	bra	u5027
 11302   004878  D000               	nop2	
 11303   00487A                     
 11304                           ;dc_motor.c: 411:         }
 11305   00487A  4A2D               	infsnz	turnLeft@i^0,f,c
 11306   00487C  2A2E               	incf	(turnLeft@i+1)^0,f,c
 11307   00487E                     l638:
 11308   00487E  5028               	movf	turnLeft@turnDuration^0,w,c
 11309   004880  6E2A               	movwf	??_turnLeft^0,c
 11310   004882  6A2B               	clrf	(??_turnLeft+1)^0,c
 11311   004884  502A               	movf	??_turnLeft^0,w,c
 11312   004886  5C2D               	subwf	turnLeft@i^0,w,c
 11313   004888  502E               	movf	(turnLeft@i+1)^0,w,c
 11314   00488A  0A80               	xorlw	128
 11315   00488C  6E2C               	movwf	(??_turnLeft+2)^0,c
 11316   00488E  502B               	movf	(??_turnLeft+1)^0,w,c
 11317   004890  0A80               	xorlw	128
 11318   004892  582C               	subwfb	(??_turnLeft+2)^0,w,c
 11319   004894  A0D8               	btfss	status,0,c
 11320   004896  EF4F  F024         	goto	u2111
 11321   00489A  EF51  F024         	goto	u2110
 11322   00489E                     u2111:
 11323   00489E  EF35  F024         	goto	l3316
 11324   0048A2                     u2110:
 11325   0048A2                     
 11326                           ;dc_motor.c: 413:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 11327   0048A2  C027  F02F         	movff	turnLeft@turnSpeed,turnLeft@cur_power
 11328   0048A6  6A30               	clrf	(turnLeft@cur_power+1)^0,c
 11329   0048A8                     l3320:
 11330   0048A8  BE30               	btfsc	(turnLeft@cur_power+1)^0,7,c
 11331   0048AA  EF5B  F024         	goto	u2120
 11332   0048AE  EF59  F024         	goto	u2121
 11333   0048B2                     u2121:
 11334   0048B2  EF5D  F024         	goto	l3324
 11335   0048B6                     u2120:
 11336   0048B6  EFAA  F024         	goto	l646
 11337   0048BA                     l3324:
 11338                           
 11339                           ;dc_motor.c: 414:         mL->power = cur_power+mL->compensation;
 11340   0048BA  EE20 F009          	lfsr	2,9
 11341   0048BE  5023               	movf	turnLeft@mL^0,w,c
 11342   0048C0  26D9               	addwf	fsr2l,f,c
 11343   0048C2  5024               	movf	(turnLeft@mL+1)^0,w,c
 11344   0048C4  22DA               	addwfc	fsr2h,f,c
 11345   0048C6  50DF               	movf	indf2,w,c
 11346   0048C8  242F               	addwf	turnLeft@cur_power^0,w,c
 11347   0048CA  C023  FFD9         	movff	turnLeft@mL,fsr2l
 11348   0048CE  C024  FFDA         	movff	turnLeft@mL+1,fsr2h
 11349   0048D2  6EDF               	movwf	indf2,c
 11350                           
 11351                           ;dc_motor.c: 415:         mR->power = cur_power+mR->compensation;
 11352   0048D4  EE20 F009          	lfsr	2,9
 11353   0048D8  5025               	movf	turnLeft@mR^0,w,c
 11354   0048DA  26D9               	addwf	fsr2l,f,c
 11355   0048DC  5026               	movf	(turnLeft@mR+1)^0,w,c
 11356   0048DE  22DA               	addwfc	fsr2h,f,c
 11357   0048E0  50DF               	movf	indf2,w,c
 11358   0048E2  242F               	addwf	turnLeft@cur_power^0,w,c
 11359   0048E4  C025  FFD9         	movff	turnLeft@mR,fsr2l
 11360   0048E8  C026  FFDA         	movff	turnLeft@mR+1,fsr2h
 11361   0048EC  6EDF               	movwf	indf2,c
 11362   0048EE                     
 11363                           ;dc_motor.c: 416:         setMotorPWM(mL);
 11364   0048EE  C023  F01D         	movff	turnLeft@mL,setMotorPWM@m
 11365   0048F2  C024  F01E         	movff	turnLeft@mL+1,setMotorPWM@m+1
 11366   0048F6  ECAB  F024         	call	_setMotorPWM	;wreg free
 11367   0048FA                     
 11368                           ;dc_motor.c: 417:         setMotorPWM(mR);
 11369   0048FA  C025  F01D         	movff	turnLeft@mR,setMotorPWM@m
 11370   0048FE  C026  F01E         	movff	turnLeft@mR+1,setMotorPWM@m+1
 11371   004902  ECAB  F024         	call	_setMotorPWM	;wreg free
 11372   004906                     
 11373                           ;dc_motor.c: 418:         for (i=0;i<turnRamp;i++) {
 11374   004906  0E00               	movlw	0
 11375   004908  6E2E               	movwf	(turnLeft@i+1)^0,c
 11376   00490A  0E00               	movlw	0
 11377   00490C  6E2D               	movwf	turnLeft@i^0,c
 11378   00490E  EF93  F024         	goto	l643
 11379   004912                     l3332:
 11380                           
 11381                           ;dc_motor.c: 419:             _delay((unsigned long)((5)*(64000000/4000.0)));
 11382   004912  0E68               	movlw	104
 11383   004914  6E2A               	movwf	??_turnLeft^0,c
 11384   004916  0EE4               	movlw	228
 11385   004918                     u5037:
 11386   004918  2EE8               	decfsz	wreg,f,c
 11387   00491A  D7FE               	bra	u5037
 11388   00491C  2E2A               	decfsz	??_turnLeft^0,f,c
 11389   00491E  D7FC               	bra	u5037
 11390   004920  D000               	nop2	
 11391   004922                     
 11392                           ;dc_motor.c: 420:         }
 11393   004922  4A2D               	infsnz	turnLeft@i^0,f,c
 11394   004924  2A2E               	incf	(turnLeft@i+1)^0,f,c
 11395   004926                     l643:
 11396   004926  5029               	movf	turnLeft@turnRamp^0,w,c
 11397   004928  6E2A               	movwf	??_turnLeft^0,c
 11398   00492A  6A2B               	clrf	(??_turnLeft+1)^0,c
 11399   00492C  502A               	movf	??_turnLeft^0,w,c
 11400   00492E  5C2D               	subwf	turnLeft@i^0,w,c
 11401   004930  502E               	movf	(turnLeft@i+1)^0,w,c
 11402   004932  0A80               	xorlw	128
 11403   004934  6E2C               	movwf	(??_turnLeft+2)^0,c
 11404   004936  502B               	movf	(??_turnLeft+1)^0,w,c
 11405   004938  0A80               	xorlw	128
 11406   00493A  582C               	subwfb	(??_turnLeft+2)^0,w,c
 11407   00493C  A0D8               	btfss	status,0,c
 11408   00493E  EFA3  F024         	goto	u2131
 11409   004942  EFA5  F024         	goto	u2130
 11410   004946                     u2131:
 11411   004946  EF89  F024         	goto	l3332
 11412   00494A                     u2130:
 11413   00494A                     
 11414                           ;dc_motor.c: 421:     }
 11415   00494A  062F               	decf	turnLeft@cur_power^0,f,c
 11416   00494C  A0D8               	btfss	status,0,c
 11417   00494E  0630               	decf	(turnLeft@cur_power+1)^0,f,c
 11418   004950  EF54  F024         	goto	l3320
 11419   004954                     l646:
 11420   004954  0012               	return		;funcret
 11421   004956                     __end_of_turnLeft:
 11422                           	callstack 0
 11423                           
 11424 ;; *************** function _setMotorPWM *****************
 11425 ;; Defined at:
 11426 ;;		line 69 in file "dc_motor.c"
 11427 ;; Parameters:    Size  Location     Type
 11428 ;;  m               2   28[COMRAM] PTR struct DC_motor
 11429 ;;		 -> main@motorR(10), main@motorL(10), 
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;  negDuty         1   33[COMRAM] unsigned char 
 11432 ;;  posDuty         1   32[COMRAM] unsigned char 
 11433 ;; Return value:  Size  Location     Type
 11434 ;;                  1    wreg      void 
 11435 ;; Registers used:
 11436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11437 ;; Tracked objects:
 11438 ;;		On entry : 0/0
 11439 ;;		On exit  : 0/0
 11440 ;;		Unchanged: 0/0
 11441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11445 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11446 ;;Total ram usage:        6 bytes
 11447 ;; Hardware stack levels used: 1
 11448 ;; Hardware stack levels required when called: 7
 11449 ;; This function calls:
 11450 ;;		___lwdiv
 11451 ;;		___wmul
 11452 ;; This function is called by:
 11453 ;;		_stop
 11454 ;;		_turnLeft
 11455 ;;		_turnRight
 11456 ;;		_fullSpeedAhead
 11457 ;;		_reverseOneSquare
 11458 ;;		_wallAdjust
 11459 ;;		_reverseWallAdjust
 11460 ;;		_reverseShort
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           	psect	text37
 11465   004956                     __ptext37:
 11466                           	callstack 0
 11467   004956                     _setMotorPWM:
 11468                           	callstack 22
 11469   004956                     
 11470                           ;dc_motor.c: 69: void setMotorPWM(DC_motor *m);dc_motor.c: 70: {;dc_motor.c: 71:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 73:     if(m->brakemode) {
 11471   004956  EE20 F002          	lfsr	2,2
 11472   00495A  501D               	movf	setMotorPWM@m^0,w,c
 11473   00495C  26D9               	addwf	fsr2l,f,c
 11474   00495E  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11475   004960  22DA               	addwfc	fsr2h,f,c
 11476   004962  50DF               	movf	indf2,w,c
 11477   004964  B4D8               	btfsc	status,2,c
 11478   004966  EFB7  F024         	goto	u1911
 11479   00496A  EFB9  F024         	goto	u1910
 11480   00496E                     u1911:
 11481   00496E  EFED  F024         	goto	l3144
 11482   004972                     u1910:
 11483   004972                     
 11484                           ;dc_motor.c: 74:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11485   004972  C01D  FFD9         	movff	setMotorPWM@m,fsr2l
 11486   004976  C01E  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11487   00497A  50DF               	movf	indf2,w,c
 11488   00497C  6E1F               	movwf	??_setMotorPWM^0,c
 11489   00497E  501F               	movf	??_setMotorPWM^0,w,c
 11490   004980  6E10               	movwf	___wmul@multiplier^0,c
 11491   004982  6A11               	clrf	(___wmul@multiplier+1)^0,c
 11492   004984  EE20 F003          	lfsr	2,3
 11493   004988  501D               	movf	setMotorPWM@m^0,w,c
 11494   00498A  26D9               	addwf	fsr2l,f,c
 11495   00498C  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11496   00498E  22DA               	addwfc	fsr2h,f,c
 11497   004990  CFDE F012          	movff	postinc2,___wmul@multiplicand
 11498   004994  CFDD F013          	movff	postdec2,___wmul@multiplicand+1
 11499   004998  EC50  F02A         	call	___wmul	;wreg free
 11500   00499C  C010  F016         	movff	?___wmul,___lwdiv@dividend
 11501   0049A0  C011  F017         	movff	?___wmul+1,___lwdiv@dividend+1
 11502   0049A4  0E00               	movlw	0
 11503   0049A6  6E19               	movwf	(___lwdiv@divisor+1)^0,c
 11504   0049A8  0E64               	movlw	100
 11505   0049AA  6E18               	movwf	___lwdiv@divisor^0,c
 11506   0049AC  EC80  F028         	call	___lwdiv	;wreg free
 11507   0049B0  EE20 F003          	lfsr	2,3
 11508   0049B4  501D               	movf	setMotorPWM@m^0,w,c
 11509   0049B6  26D9               	addwf	fsr2l,f,c
 11510   0049B8  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11511   0049BA  22DA               	addwfc	fsr2h,f,c
 11512   0049BC  50DF               	movf	indf2,w,c
 11513   0049BE  6E20               	movwf	(??_setMotorPWM+1)^0,c
 11514   0049C0  5016               	movf	?___lwdiv^0,w,c
 11515   0049C2  5C20               	subwf	(??_setMotorPWM+1)^0,w,c
 11516   0049C4  6E21               	movwf	setMotorPWM@posDuty^0,c
 11517   0049C6                     
 11518                           ;dc_motor.c: 75:         negDuty=m->PWMperiod;
 11519   0049C6  EE20 F003          	lfsr	2,3
 11520   0049CA  501D               	movf	setMotorPWM@m^0,w,c
 11521   0049CC  26D9               	addwf	fsr2l,f,c
 11522   0049CE  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11523   0049D0  22DA               	addwfc	fsr2h,f,c
 11524   0049D2  50DF               	movf	indf2,w,c
 11525   0049D4  6E22               	movwf	setMotorPWM@negDuty^0,c
 11526                           
 11527                           ;dc_motor.c: 76:     }
 11528   0049D6  EF10  F025         	goto	l3148
 11529   0049DA                     l3144:
 11530                           
 11531                           ;dc_motor.c: 78:         posDuty=0;
 11532   0049DA  0E00               	movlw	0
 11533   0049DC  6E21               	movwf	setMotorPWM@posDuty^0,c
 11534   0049DE                     
 11535                           ;dc_motor.c: 79:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11536   0049DE  C01D  FFD9         	movff	setMotorPWM@m,fsr2l
 11537   0049E2  C01E  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11538   0049E6  50DF               	movf	indf2,w,c
 11539   0049E8  6E1F               	movwf	??_setMotorPWM^0,c
 11540   0049EA  501F               	movf	??_setMotorPWM^0,w,c
 11541   0049EC  6E10               	movwf	___wmul@multiplier^0,c
 11542   0049EE  6A11               	clrf	(___wmul@multiplier+1)^0,c
 11543   0049F0  EE20 F003          	lfsr	2,3
 11544   0049F4  501D               	movf	setMotorPWM@m^0,w,c
 11545   0049F6  26D9               	addwf	fsr2l,f,c
 11546   0049F8  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11547   0049FA  22DA               	addwfc	fsr2h,f,c
 11548   0049FC  CFDE F012          	movff	postinc2,___wmul@multiplicand
 11549   004A00  CFDD F013          	movff	postdec2,___wmul@multiplicand+1
 11550   004A04  EC50  F02A         	call	___wmul	;wreg free
 11551   004A08  C010  F016         	movff	?___wmul,___lwdiv@dividend
 11552   004A0C  C011  F017         	movff	?___wmul+1,___lwdiv@dividend+1
 11553   004A10  0E00               	movlw	0
 11554   004A12  6E19               	movwf	(___lwdiv@divisor+1)^0,c
 11555   004A14  0E64               	movlw	100
 11556   004A16  6E18               	movwf	___lwdiv@divisor^0,c
 11557   004A18  EC80  F028         	call	___lwdiv	;wreg free
 11558   004A1C  5016               	movf	?___lwdiv^0,w,c
 11559   004A1E  6E22               	movwf	setMotorPWM@negDuty^0,c
 11560   004A20                     l3148:
 11561                           
 11562                           ;dc_motor.c: 82:     if (m->direction) {
 11563   004A20  EE20 F001          	lfsr	2,1
 11564   004A24  501D               	movf	setMotorPWM@m^0,w,c
 11565   004A26  26D9               	addwf	fsr2l,f,c
 11566   004A28  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11567   004A2A  22DA               	addwfc	fsr2h,f,c
 11568   004A2C  50DF               	movf	indf2,w,c
 11569   004A2E  B4D8               	btfsc	status,2,c
 11570   004A30  EF1C  F025         	goto	u1921
 11571   004A34  EF1E  F025         	goto	u1920
 11572   004A38                     u1921:
 11573   004A38  EF40  F025         	goto	l3152
 11574   004A3C                     u1920:
 11575   004A3C                     
 11576                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11577   004A3C  EE20 F005          	lfsr	2,5
 11578   004A40  501D               	movf	setMotorPWM@m^0,w,c
 11579   004A42  26D9               	addwf	fsr2l,f,c
 11580   004A44  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11581   004A46  22DA               	addwfc	fsr2h,f,c
 11582   004A48  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11583   004A4C  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11584   004A50  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11585   004A54  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11586   004A58  C021  FFDF         	movff	setMotorPWM@posDuty,indf2
 11587                           
 11588                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11589   004A5C  EE20 F007          	lfsr	2,7
 11590   004A60  501D               	movf	setMotorPWM@m^0,w,c
 11591   004A62  26D9               	addwf	fsr2l,f,c
 11592   004A64  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11593   004A66  22DA               	addwfc	fsr2h,f,c
 11594   004A68  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11595   004A6C  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11596   004A70  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11597   004A74  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11598   004A78  C022  FFDF         	movff	setMotorPWM@negDuty,indf2
 11599                           
 11600                           ;dc_motor.c: 85:     } else {
 11601   004A7C  EF60  F025         	goto	l552
 11602   004A80                     l3152:
 11603                           
 11604                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
 11605   004A80  EE20 F005          	lfsr	2,5
 11606   004A84  501D               	movf	setMotorPWM@m^0,w,c
 11607   004A86  26D9               	addwf	fsr2l,f,c
 11608   004A88  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11609   004A8A  22DA               	addwfc	fsr2h,f,c
 11610   004A8C  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11611   004A90  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11612   004A94  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11613   004A98  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11614   004A9C  C022  FFDF         	movff	setMotorPWM@negDuty,indf2
 11615                           
 11616                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
 11617   004AA0  EE20 F007          	lfsr	2,7
 11618   004AA4  501D               	movf	setMotorPWM@m^0,w,c
 11619   004AA6  26D9               	addwf	fsr2l,f,c
 11620   004AA8  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11621   004AAA  22DA               	addwfc	fsr2h,f,c
 11622   004AAC  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11623   004AB0  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11624   004AB4  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11625   004AB8  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11626   004ABC  C021  FFDF         	movff	setMotorPWM@posDuty,indf2
 11627   004AC0                     l552:
 11628   004AC0  0012               	return		;funcret
 11629   004AC2                     __end_of_setMotorPWM:
 11630                           	callstack 0
 11631                           
 11632 ;; *************** function ___wmul *****************
 11633 ;; Defined at:
 11634 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
 11635 ;; Parameters:    Size  Location     Type
 11636 ;;  multiplier      2   15[COMRAM] unsigned int 
 11637 ;;  multiplicand    2   17[COMRAM] unsigned int 
 11638 ;; Auto vars:     Size  Location     Type
 11639 ;;  product         2   19[COMRAM] unsigned int 
 11640 ;; Return value:  Size  Location     Type
 11641 ;;                  2   15[COMRAM] unsigned int 
 11642 ;; Registers used:
 11643 ;;		wreg, status,2, status,0, prodl, prodh
 11644 ;; Tracked objects:
 11645 ;;		On entry : 0/0
 11646 ;;		On exit  : 0/0
 11647 ;;		Unchanged: 0/0
 11648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11652 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11653 ;;Total ram usage:        6 bytes
 11654 ;; Hardware stack levels used: 1
 11655 ;; Hardware stack levels required when called: 6
 11656 ;; This function calls:
 11657 ;;		Nothing
 11658 ;; This function is called by:
 11659 ;;		_setMotorPWM
 11660 ;; This function uses a non-reentrant model
 11661 ;;
 11662                           
 11663                           	psect	text38
 11664   0054A0                     __ptext38:
 11665                           	callstack 0
 11666   0054A0                     ___wmul:
 11667                           	callstack 22
 11668   0054A0  5010               	movf	___wmul@multiplier^0,w,c
 11669   0054A2  0212               	mulwf	___wmul@multiplicand^0,c
 11670   0054A4  CFF3 F014          	movff	prodl,___wmul@product
 11671   0054A8  CFF4 F015          	movff	prodh,___wmul@product+1
 11672   0054AC  5010               	movf	___wmul@multiplier^0,w,c
 11673   0054AE  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 11674   0054B0  50F3               	movf	243,w,c
 11675   0054B2  2615               	addwf	(___wmul@product+1)^0,f,c
 11676   0054B4  5011               	movf	(___wmul@multiplier+1)^0,w,c
 11677   0054B6  0212               	mulwf	___wmul@multiplicand^0,c
 11678   0054B8  50F3               	movf	243,w,c
 11679   0054BA  2615               	addwf	(___wmul@product+1)^0,f,c
 11680   0054BC  C014  F010         	movff	___wmul@product,?___wmul
 11681   0054C0  C015  F011         	movff	___wmul@product+1,?___wmul+1
 11682   0054C4  0012               	return		;funcret
 11683   0054C6                     __end_of___wmul:
 11684                           	callstack 0
 11685                           
 11686 ;; *************** function ___lwdiv *****************
 11687 ;; Defined at:
 11688 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;  dividend        2   21[COMRAM] unsigned int 
 11691 ;;  divisor         2   23[COMRAM] unsigned int 
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;  quotient        2   25[COMRAM] unsigned int 
 11694 ;;  counter         1   27[COMRAM] unsigned char 
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  2   21[COMRAM] unsigned int 
 11697 ;; Registers used:
 11698 ;;		wreg, status,2, status,0
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11705 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11707 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11708 ;;Total ram usage:        7 bytes
 11709 ;; Hardware stack levels used: 1
 11710 ;; Hardware stack levels required when called: 6
 11711 ;; This function calls:
 11712 ;;		Nothing
 11713 ;; This function is called by:
 11714 ;;		_color_clear_init_interrupts
 11715 ;;		_setMotorPWM
 11716 ;; This function uses a non-reentrant model
 11717 ;;
 11718                           
 11719                           	psect	text39
 11720   005100                     __ptext39:
 11721                           	callstack 0
 11722   005100                     ___lwdiv:
 11723                           	callstack 22
 11724   005100  0E00               	movlw	0
 11725   005102  6E1B               	movwf	(___lwdiv@quotient+1)^0,c
 11726   005104  0E00               	movlw	0
 11727   005106  6E1A               	movwf	___lwdiv@quotient^0,c
 11728   005108  5018               	movf	___lwdiv@divisor^0,w,c
 11729   00510A  1019               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11730   00510C  B4D8               	btfsc	status,2,c
 11731   00510E  EF8B  F028         	goto	u1881
 11732   005112  EF8D  F028         	goto	u1880
 11733   005116                     u1881:
 11734   005116  EFB5  F028         	goto	l1280
 11735   00511A                     u1880:
 11736   00511A  0E01               	movlw	1
 11737   00511C  6E1C               	movwf	___lwdiv@counter^0,c
 11738   00511E  EF95  F028         	goto	l3112
 11739   005122                     l3110:
 11740   005122  90D8               	bcf	status,0,c
 11741   005124  3618               	rlcf	___lwdiv@divisor^0,f,c
 11742   005126  3619               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11743   005128  2A1C               	incf	___lwdiv@counter^0,f,c
 11744   00512A                     l3112:
 11745   00512A  AE19               	btfss	(___lwdiv@divisor+1)^0,7,c
 11746   00512C  EF9A  F028         	goto	u1891
 11747   005130  EF9C  F028         	goto	u1890
 11748   005134                     u1891:
 11749   005134  EF91  F028         	goto	l3110
 11750   005138                     u1890:
 11751   005138                     l3114:
 11752   005138  90D8               	bcf	status,0,c
 11753   00513A  361A               	rlcf	___lwdiv@quotient^0,f,c
 11754   00513C  361B               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11755   00513E  5018               	movf	___lwdiv@divisor^0,w,c
 11756   005140  5C16               	subwf	___lwdiv@dividend^0,w,c
 11757   005142  5019               	movf	(___lwdiv@divisor+1)^0,w,c
 11758   005144  5817               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11759   005146  A0D8               	btfss	status,0,c
 11760   005148  EFA8  F028         	goto	u1901
 11761   00514C  EFAA  F028         	goto	u1900
 11762   005150                     u1901:
 11763   005150  EFAF  F028         	goto	l3122
 11764   005154                     u1900:
 11765   005154  5018               	movf	___lwdiv@divisor^0,w,c
 11766   005156  5E16               	subwf	___lwdiv@dividend^0,f,c
 11767   005158  5019               	movf	(___lwdiv@divisor+1)^0,w,c
 11768   00515A  5A17               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11769   00515C  801A               	bsf	___lwdiv@quotient^0,0,c
 11770   00515E                     l3122:
 11771   00515E  90D8               	bcf	status,0,c
 11772   005160  3219               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11773   005162  3218               	rrcf	___lwdiv@divisor^0,f,c
 11774   005164  2E1C               	decfsz	___lwdiv@counter^0,f,c
 11775   005166  EF9C  F028         	goto	l3114
 11776   00516A                     l1280:
 11777   00516A  C01A  F016         	movff	___lwdiv@quotient,?___lwdiv
 11778   00516E  C01B  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11779   005172  0012               	return		;funcret
 11780   005174                     __end_of___lwdiv:
 11781                           	callstack 0
 11782                           
 11783 ;; *************** function _batteryLevel *****************
 11784 ;; Defined at:
 11785 ;;		line 6 in file "battery.c"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;		None
 11788 ;; Auto vars:     Size  Location     Type
 11789 ;;  batteryQuart    1   24[COMRAM] unsigned char 
 11790 ;;  batteryVolta    1   23[COMRAM] unsigned char 
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  1    wreg      void 
 11793 ;; Registers used:
 11794 ;;		wreg, status,2, status,0, cstack
 11795 ;; Tracked objects:
 11796 ;;		On entry : 0/0
 11797 ;;		On exit  : 0/0
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11801 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11804 ;;Total ram usage:        2 bytes
 11805 ;; Hardware stack levels used: 1
 11806 ;; Hardware stack levels required when called: 7
 11807 ;; This function calls:
 11808 ;;		_ADC_getval
 11809 ;;		_ADC_init
 11810 ;;		___awdiv
 11811 ;; This function is called by:
 11812 ;;		_main
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816                           	psect	text40
 11817   0052A8                     __ptext40:
 11818                           	callstack 0
 11819   0052A8                     _batteryLevel:
 11820                           	callstack 23
 11821   0052A8                     
 11822                           ;battery.c: 7:     ADC_init();
 11823   0052A8  ECC5  F02A         	call	_ADC_init	;wreg free
 11824                           
 11825                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
 11826   0052AC  ECD2  F02A         	call	_ADC_getval	;wreg free
 11827   0052B0  6E18               	movwf	batteryLevel@batteryVoltage^0,c
 11828   0052B2                     
 11829                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
 11830   0052B2  C018  F010         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
 11831   0052B6  6A11               	clrf	(___awdiv@dividend+1)^0,c
 11832   0052B8  0E00               	movlw	0
 11833   0052BA  6E13               	movwf	(___awdiv@divisor+1)^0,c
 11834   0052BC  0E18               	movlw	24
 11835   0052BE  6E12               	movwf	___awdiv@divisor^0,c
 11836   0052C0  ECDE  F026         	call	___awdiv	;wreg free
 11837   0052C4  5010               	movf	?___awdiv^0,w,c
 11838   0052C6  6E19               	movwf	batteryLevel@batteryQuarter^0,c
 11839   0052C8                     
 11840                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
 11841   0052C8  A219               	btfss	batteryLevel@batteryQuarter^0,1,c
 11842   0052CA  EF69  F029         	goto	u2671
 11843   0052CE  EF6B  F029         	goto	u2670
 11844   0052D2                     u2671:
 11845   0052D2  EF6E  F029         	goto	l460
 11846   0052D6                     u2670:
 11847   0052D6  8E7C               	bsf	124,7,c	;volatile
 11848   0052D8  EF6F  F029         	goto	l461
 11849   0052DC                     l460:
 11850   0052DC  9E7C               	bcf	124,7,c	;volatile
 11851   0052DE                     l461:
 11852                           
 11853                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
 11854   0052DE  A019               	btfss	batteryLevel@batteryQuarter^0,0,c
 11855   0052E0  EF74  F029         	goto	u2681
 11856   0052E4  EF76  F029         	goto	u2680
 11857   0052E8                     u2681:
 11858   0052E8  EF79  F029         	goto	l462
 11859   0052EC                     u2680:
 11860   0052EC  8680               	bsf	128,3,c	;volatile
 11861   0052EE  EF7A  F029         	goto	l464
 11862   0052F2                     l462:
 11863   0052F2  9680               	bcf	128,3,c	;volatile
 11864   0052F4                     l464:
 11865   0052F4  0012               	return		;funcret
 11866   0052F6                     __end_of_batteryLevel:
 11867                           	callstack 0
 11868                           
 11869 ;; *************** function ___awdiv *****************
 11870 ;; Defined at:
 11871 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 11872 ;; Parameters:    Size  Location     Type
 11873 ;;  dividend        2   15[COMRAM] int 
 11874 ;;  divisor         2   17[COMRAM] int 
 11875 ;; Auto vars:     Size  Location     Type
 11876 ;;  quotient        2   21[COMRAM] int 
 11877 ;;  sign            1   20[COMRAM] unsigned char 
 11878 ;;  counter         1   19[COMRAM] unsigned char 
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  2   15[COMRAM] int 
 11881 ;; Registers used:
 11882 ;;		wreg, status,2, status,0
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11889 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11891 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11892 ;;Total ram usage:        8 bytes
 11893 ;; Hardware stack levels used: 1
 11894 ;; Hardware stack levels required when called: 6
 11895 ;; This function calls:
 11896 ;;		Nothing
 11897 ;; This function is called by:
 11898 ;;		_batteryLevel
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           
 11902                           	psect	text41
 11903   004DBC                     __ptext41:
 11904                           	callstack 0
 11905   004DBC                     ___awdiv:
 11906                           	callstack 23
 11907   004DBC  0E00               	movlw	0
 11908   004DBE  6E15               	movwf	___awdiv@sign^0,c
 11909   004DC0  BE13               	btfsc	(___awdiv@divisor+1)^0,7,c
 11910   004DC2  EFE7  F026         	goto	u2580
 11911   004DC6  EFE5  F026         	goto	u2581
 11912   004DCA                     u2581:
 11913   004DCA  EFED  F026         	goto	l3798
 11914   004DCE                     u2580:
 11915   004DCE  6C12               	negf	___awdiv@divisor^0,c
 11916   004DD0  1E13               	comf	(___awdiv@divisor+1)^0,f,c
 11917   004DD2  B0D8               	btfsc	status,0,c
 11918   004DD4  2A13               	incf	(___awdiv@divisor+1)^0,f,c
 11919   004DD6  0E01               	movlw	1
 11920   004DD8  6E15               	movwf	___awdiv@sign^0,c
 11921   004DDA                     l3798:
 11922   004DDA  BE11               	btfsc	(___awdiv@dividend+1)^0,7,c
 11923   004DDC  EFF4  F026         	goto	u2590
 11924   004DE0  EFF2  F026         	goto	u2591
 11925   004DE4                     u2591:
 11926   004DE4  EFFA  F026         	goto	l3804
 11927   004DE8                     u2590:
 11928   004DE8  6C10               	negf	___awdiv@dividend^0,c
 11929   004DEA  1E11               	comf	(___awdiv@dividend+1)^0,f,c
 11930   004DEC  B0D8               	btfsc	status,0,c
 11931   004DEE  2A11               	incf	(___awdiv@dividend+1)^0,f,c
 11932   004DF0  0E01               	movlw	1
 11933   004DF2  1A15               	xorwf	___awdiv@sign^0,f,c
 11934   004DF4                     l3804:
 11935   004DF4  0E00               	movlw	0
 11936   004DF6  6E17               	movwf	(___awdiv@quotient+1)^0,c
 11937   004DF8  0E00               	movlw	0
 11938   004DFA  6E16               	movwf	___awdiv@quotient^0,c
 11939   004DFC  5012               	movf	___awdiv@divisor^0,w,c
 11940   004DFE  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
 11941   004E00  B4D8               	btfsc	status,2,c
 11942   004E02  EF05  F027         	goto	u2601
 11943   004E06  EF07  F027         	goto	u2600
 11944   004E0A                     u2601:
 11945   004E0A  EF2F  F027         	goto	l3826
 11946   004E0E                     u2600:
 11947   004E0E  0E01               	movlw	1
 11948   004E10  6E14               	movwf	___awdiv@counter^0,c
 11949   004E12  EF0F  F027         	goto	l3812
 11950   004E16                     l3810:
 11951   004E16  90D8               	bcf	status,0,c
 11952   004E18  3612               	rlcf	___awdiv@divisor^0,f,c
 11953   004E1A  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
 11954   004E1C  2A14               	incf	___awdiv@counter^0,f,c
 11955   004E1E                     l3812:
 11956   004E1E  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
 11957   004E20  EF14  F027         	goto	u2611
 11958   004E24  EF16  F027         	goto	u2610
 11959   004E28                     u2611:
 11960   004E28  EF0B  F027         	goto	l3810
 11961   004E2C                     u2610:
 11962   004E2C                     l3814:
 11963   004E2C  90D8               	bcf	status,0,c
 11964   004E2E  3616               	rlcf	___awdiv@quotient^0,f,c
 11965   004E30  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
 11966   004E32  5012               	movf	___awdiv@divisor^0,w,c
 11967   004E34  5C10               	subwf	___awdiv@dividend^0,w,c
 11968   004E36  5013               	movf	(___awdiv@divisor+1)^0,w,c
 11969   004E38  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
 11970   004E3A  A0D8               	btfss	status,0,c
 11971   004E3C  EF22  F027         	goto	u2621
 11972   004E40  EF24  F027         	goto	u2620
 11973   004E44                     u2621:
 11974   004E44  EF29  F027         	goto	l3822
 11975   004E48                     u2620:
 11976   004E48  5012               	movf	___awdiv@divisor^0,w,c
 11977   004E4A  5E10               	subwf	___awdiv@dividend^0,f,c
 11978   004E4C  5013               	movf	(___awdiv@divisor+1)^0,w,c
 11979   004E4E  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
 11980   004E50  8016               	bsf	___awdiv@quotient^0,0,c
 11981   004E52                     l3822:
 11982   004E52  90D8               	bcf	status,0,c
 11983   004E54  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
 11984   004E56  3212               	rrcf	___awdiv@divisor^0,f,c
 11985   004E58  2E14               	decfsz	___awdiv@counter^0,f,c
 11986   004E5A  EF16  F027         	goto	l3814
 11987   004E5E                     l3826:
 11988   004E5E  5015               	movf	___awdiv@sign^0,w,c
 11989   004E60  B4D8               	btfsc	status,2,c
 11990   004E62  EF35  F027         	goto	u2631
 11991   004E66  EF37  F027         	goto	u2630
 11992   004E6A                     u2631:
 11993   004E6A  EF3B  F027         	goto	l3830
 11994   004E6E                     u2630:
 11995   004E6E  6C16               	negf	___awdiv@quotient^0,c
 11996   004E70  1E17               	comf	(___awdiv@quotient+1)^0,f,c
 11997   004E72  B0D8               	btfsc	status,0,c
 11998   004E74  2A17               	incf	(___awdiv@quotient+1)^0,f,c
 11999   004E76                     l3830:
 12000   004E76  C016  F010         	movff	___awdiv@quotient,?___awdiv
 12001   004E7A  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
 12002   004E7E  0012               	return		;funcret
 12003   004E80                     __end_of___awdiv:
 12004                           	callstack 0
 12005                           
 12006 ;; *************** function _ADC_init *****************
 12007 ;; Defined at:
 12008 ;;		line 9 in file "ADC.c"
 12009 ;; Parameters:    Size  Location     Type
 12010 ;;		None
 12011 ;; Auto vars:     Size  Location     Type
 12012 ;;		None
 12013 ;; Return value:  Size  Location     Type
 12014 ;;                  1    wreg      void 
 12015 ;; Registers used:
 12016 ;;		wreg, status,2
 12017 ;; Tracked objects:
 12018 ;;		On entry : 0/0
 12019 ;;		On exit  : 0/0
 12020 ;;		Unchanged: 0/0
 12021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12026 ;;Total ram usage:        0 bytes
 12027 ;; Hardware stack levels used: 1
 12028 ;; Hardware stack levels required when called: 6
 12029 ;; This function calls:
 12030 ;;		Nothing
 12031 ;; This function is called by:
 12032 ;;		_batteryLevel
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036                           	psect	text42
 12037   00558A                     __ptext42:
 12038                           	callstack 0
 12039   00558A                     _ADC_init:
 12040                           	callstack 23
 12041   00558A                     
 12042                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 12043   00558A  8C86               	bsf	134,6,c	;volatile
 12044                           
 12045                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 12046   00558C  010E               	movlb	14	; () banked
 12047   00558E  8DB4               	bsf	180,6,b	;volatile
 12048                           
 12049                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 12050   005590  010F               	movlb	15	; () banked
 12051   005592  9958               	bcf	88,4,b	;volatile
 12052   005594                     
 12053                           ; BSR set to: 15
 12054                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 12055   005594  0EFC               	movlw	-4
 12056   005596  1758               	andwf	88,f,b	;volatile
 12057                           
 12058                           ;ADC.c: 17:     ADPCH=0b101110;
 12059   005598  0E2E               	movlw	46
 12060   00559A  6F5F               	movwf	95,b	;volatile
 12061   00559C                     
 12062                           ; BSR set to: 15
 12063                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 12064   00559C  9460               	bcf	96,2,c	;volatile
 12065   00559E                     
 12066                           ; BSR set to: 15
 12067                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 12068   00559E  8860               	bsf	96,4,c	;volatile
 12069   0055A0                     
 12070                           ; BSR set to: 15
 12071                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 12072   0055A0  8E60               	bsf	96,7,c	;volatile
 12073   0055A2                     
 12074                           ; BSR set to: 15
 12075   0055A2  0012               	return		;funcret
 12076   0055A4                     __end_of_ADC_init:
 12077                           	callstack 0
 12078                           
 12079 ;; *************** function _ADC_getval *****************
 12080 ;; Defined at:
 12081 ;;		line 23 in file "ADC.c"
 12082 ;; Parameters:    Size  Location     Type
 12083 ;;		None
 12084 ;; Auto vars:     Size  Location     Type
 12085 ;;  tmpval          1   15[COMRAM] unsigned char 
 12086 ;; Return value:  Size  Location     Type
 12087 ;;                  1    wreg      unsigned char 
 12088 ;; Registers used:
 12089 ;;		wreg, status,2
 12090 ;; Tracked objects:
 12091 ;;		On entry : 0/0
 12092 ;;		On exit  : 0/0
 12093 ;;		Unchanged: 0/0
 12094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12099 ;;Total ram usage:        1 bytes
 12100 ;; Hardware stack levels used: 1
 12101 ;; Hardware stack levels required when called: 6
 12102 ;; This function calls:
 12103 ;;		Nothing
 12104 ;; This function is called by:
 12105 ;;		_batteryLevel
 12106 ;; This function uses a non-reentrant model
 12107 ;;
 12108                           
 12109                           	psect	text43
 12110   0055A4                     __ptext43:
 12111                           	callstack 0
 12112   0055A4                     _ADC_getval:
 12113                           	callstack 23
 12114   0055A4                     
 12115                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
 12116   0055A4  8060               	bsf	96,0,c	;volatile
 12117   0055A6                     l446:
 12118   0055A6  B060               	btfsc	96,0,c	;volatile
 12119   0055A8  EFD8  F02A         	goto	u2421
 12120   0055AC  EFDA  F02A         	goto	u2420
 12121   0055B0                     u2421:
 12122   0055B0  EFD3  F02A         	goto	l446
 12123   0055B4                     u2420:
 12124   0055B4                     
 12125                           ;ADC.c: 31:     tmpval = ADRESH;
 12126   0055B4  CF64 F010          	movff	3940,ADC_getval@tmpval	;volatile
 12127   0055B8                     
 12128                           ;ADC.c: 35:     return tmpval;
 12129   0055B8  5010               	movf	ADC_getval@tmpval^0,w,c
 12130   0055BA  0012               	return		;funcret
 12131   0055BC                     __end_of_ADC_getval:
 12132                           	callstack 0
 12133                           
 12134 ;; *************** function _Timer0_init *****************
 12135 ;; Defined at:
 12136 ;;		line 7 in file "timers.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;		None
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;		None
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      void 
 12143 ;; Registers used:
 12144 ;;		wreg, status,2
 12145 ;; Tracked objects:
 12146 ;;		On entry : 0/0
 12147 ;;		On exit  : 0/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12154 ;;Total ram usage:        0 bytes
 12155 ;; Hardware stack levels used: 1
 12156 ;; Hardware stack levels required when called: 6
 12157 ;; This function calls:
 12158 ;;		Nothing
 12159 ;; This function is called by:
 12160 ;;		_main
 12161 ;; This function uses a non-reentrant model
 12162 ;;
 12163                           
 12164                           	psect	text44
 12165   00552C                     __ptext44:
 12166                           	callstack 0
 12167   00552C                     _Timer0_init:
 12168                           	callstack 24
 12169   00552C                     
 12170                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 12171   00552C  50D6               	movf	214,w,c	;volatile
 12172   00552E  0B1F               	andlw	-225
 12173   005530  0940               	iorlw	64
 12174   005532  6ED6               	movwf	214,c	;volatile
 12175   005534                     
 12176                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 12177   005534  88D6               	bsf	214,4,c	;volatile
 12178                           
 12179                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1100;
 12180   005536  50D6               	movf	214,w,c	;volatile
 12181   005538  0BF0               	andlw	-16
 12182   00553A  090C               	iorlw	12
 12183   00553C  6ED6               	movwf	214,c	;volatile
 12184   00553E                     
 12185                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 12186   00553E  88D5               	bsf	213,4,c	;volatile
 12187                           
 12188                           ;timers.c: 15:     TMR0H=0;
 12189   005540  0E00               	movlw	0
 12190   005542  6ED4               	movwf	212,c	;volatile
 12191                           
 12192                           ;timers.c: 16:     TMR0L=0;
 12193   005544  0E00               	movlw	0
 12194   005546  6ED3               	movwf	211,c	;volatile
 12195   005548                     
 12196                           ;timers.c: 17:     T0CON0bits.T0EN=1;
 12197   005548  8ED5               	bsf	213,7,c	;volatile
 12198   00554A  0012               	return		;funcret
 12199   00554C                     __end_of_Timer0_init:
 12200                           	callstack 0
 12201                           
 12202 ;; *************** function _Interrupts_init *****************
 12203 ;; Defined at:
 12204 ;;		line 11 in file "interrupts.c"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;		None
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;		None
 12209 ;; Return value:  Size  Location     Type
 12210 ;;                  1    wreg      void 
 12211 ;; Registers used:
 12212 ;;		None
 12213 ;; Tracked objects:
 12214 ;;		On entry : 0/0
 12215 ;;		On exit  : 0/0
 12216 ;;		Unchanged: 0/0
 12217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12222 ;;Total ram usage:        0 bytes
 12223 ;; Hardware stack levels used: 1
 12224 ;; Hardware stack levels required when called: 6
 12225 ;; This function calls:
 12226 ;;		Nothing
 12227 ;; This function is called by:
 12228 ;;		_main
 12229 ;; This function uses a non-reentrant model
 12230 ;;
 12231                           
 12232                           	psect	text45
 12233   0055BC                     __ptext45:
 12234                           	callstack 0
 12235   0055BC                     _Interrupts_init:
 12236                           	callstack 24
 12237   0055BC                     
 12238                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
 12239   0055BC  8082               	bsf	130,0,c	;volatile
 12240                           
 12241                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
 12242   0055BE  010E               	movlb	14	; () banked
 12243   0055C0  919A               	bcf	154,0,b	;volatile
 12244                           
 12245                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
 12246   0055C2  8129               	bsf	41,0,b	;volatile
 12247                           
 12248                           ;interrupts.c: 17:     IPR0bits.INT0IP=1;
 12249   0055C4  811F               	bsf	31,0,b	;volatile
 12250                           
 12251                           ;interrupts.c: 18:     INTCONbits.INT0EDG=0;
 12252   0055C6  90F2               	bcf	242,0,c	;volatile
 12253                           
 12254                           ;interrupts.c: 29:     INTCONbits.PEIE=1;
 12255   0055C8  8CF2               	bsf	242,6,c	;volatile
 12256                           
 12257                           ;interrupts.c: 30:     INTCONbits.GIE=1;
 12258   0055CA  8EF2               	bsf	242,7,c	;volatile
 12259   0055CC                     
 12260                           ; BSR set to: 14
 12261   0055CC  0012               	return		;funcret
 12262   0055CE                     __end_of_Interrupts_init:
 12263                           	callstack 0
 12264                           
 12265 ;; *************** function _Buggy_init *****************
 12266 ;; Defined at:
 12267 ;;		line 7 in file "buggysetup.c"
 12268 ;; Parameters:    Size  Location     Type
 12269 ;;		None
 12270 ;; Auto vars:     Size  Location     Type
 12271 ;;		None
 12272 ;; Return value:  Size  Location     Type
 12273 ;;                  1    wreg      void 
 12274 ;; Registers used:
 12275 ;;		None
 12276 ;; Tracked objects:
 12277 ;;		On entry : 0/0
 12278 ;;		On exit  : 0/0
 12279 ;;		Unchanged: 0/0
 12280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12285 ;;Total ram usage:        0 bytes
 12286 ;; Hardware stack levels used: 1
 12287 ;; Hardware stack levels required when called: 6
 12288 ;; This function calls:
 12289 ;;		Nothing
 12290 ;; This function is called by:
 12291 ;;		_main
 12292 ;; This function uses a non-reentrant model
 12293 ;;
 12294                           
 12295                           	psect	text46
 12296   005370                     __ptext46:
 12297                           	callstack 0
 12298   005370                     _Buggy_init:
 12299                           	callstack 24
 12300   005370                     
 12301                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
 12302   005370  9E7C               	bcf	124,7,c	;volatile
 12303                           
 12304                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
 12305   005372  9E84               	bcf	132,7,c	;volatile
 12306                           
 12307                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
 12308   005374  9680               	bcf	128,3,c	;volatile
 12309                           
 12310                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
 12311   005376  9688               	bcf	136,3,c	;volatile
 12312                           
 12313                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
 12314   005378  8486               	bsf	134,2,c	;volatile
 12315                           
 12316                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
 12317   00537A  010E               	movlb	14	; () banked
 12318   00537C  95B4               	bcf	180,2,b	;volatile
 12319                           
 12320                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
 12321   00537E  8686               	bsf	134,3,c	;volatile
 12322                           
 12323                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
 12324   005380  97B4               	bcf	180,3,b	;volatile
 12325                           
 12326                           ;buggysetup.c: 32:     LATHbits.LATH1=0;
 12327   005382  9280               	bcf	128,1,c	;volatile
 12328                           
 12329                           ;buggysetup.c: 33:     TRISHbits.TRISH1=0;
 12330   005384  9288               	bcf	136,1,c	;volatile
 12331                           
 12332                           ;buggysetup.c: 36:     LATDbits.LATD4=0;
 12333   005386  987C               	bcf	124,4,c	;volatile
 12334                           
 12335                           ;buggysetup.c: 37:     TRISDbits.TRISD4=0;
 12336   005388  9884               	bcf	132,4,c	;volatile
 12337                           
 12338                           ;buggysetup.c: 40:     LATDbits.LATD3=0;
 12339   00538A  967C               	bcf	124,3,c	;volatile
 12340                           
 12341                           ;buggysetup.c: 41:     TRISDbits.TRISD3=0;
 12342   00538C  9684               	bcf	132,3,c	;volatile
 12343                           
 12344                           ;buggysetup.c: 42:     ANSELDbits.ANSELD3=0;
 12345   00538E  97A7               	bcf	167,3,b	;volatile
 12346                           
 12347                           ;buggysetup.c: 45:     LATHbits.LATH0=0;
 12348   005390  9080               	bcf	128,0,c	;volatile
 12349                           
 12350                           ;buggysetup.c: 46:     TRISHbits.TRISH0=0;
 12351   005392  9088               	bcf	136,0,c	;volatile
 12352                           
 12353                           ;buggysetup.c: 49:     LATFbits.LATF0=0;
 12354   005394  907E               	bcf	126,0,c	;volatile
 12355                           
 12356                           ;buggysetup.c: 50:     TRISFbits.TRISF0=0;
 12357   005396  9086               	bcf	134,0,c	;volatile
 12358                           
 12359                           ;buggysetup.c: 53:     LATGbits.LATG0 = 0;
 12360   005398  907F               	bcf	127,0,c	;volatile
 12361                           
 12362                           ;buggysetup.c: 54:     TRISGbits.TRISG0 = 0;
 12363   00539A  9087               	bcf	135,0,c	;volatile
 12364                           
 12365                           ;buggysetup.c: 56:     LATEbits.LATE7 = 0;
 12366   00539C  9E7D               	bcf	125,7,c	;volatile
 12367                           
 12368                           ;buggysetup.c: 57:     TRISEbits.TRISE7 = 0;
 12369   00539E  9E85               	bcf	133,7,c	;volatile
 12370                           
 12371                           ;buggysetup.c: 59:     LATAbits.LATA3 = 0;
 12372   0053A0  9679               	bcf	121,3,c	;volatile
 12373                           
 12374                           ;buggysetup.c: 60:     TRISAbits.TRISA3 = 0;
 12375   0053A2  9681               	bcf	129,3,c	;volatile
 12376   0053A4                     
 12377                           ; BSR set to: 14
 12378   0053A4  0012               	return		;funcret
 12379   0053A6                     __end_of_Buggy_init:
 12380                           	callstack 0
 12381                           
 12382 ;; *************** function _LowISR *****************
 12383 ;; Defined at:
 12384 ;;		line 70 in file "interrupts.c"
 12385 ;; Parameters:    Size  Location     Type
 12386 ;;		None
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;		None
 12389 ;; Return value:  Size  Location     Type
 12390 ;;                  1    wreg      void 
 12391 ;; Registers used:
 12392 ;;		wreg, status,2
 12393 ;; Tracked objects:
 12394 ;;		On entry : 0/0
 12395 ;;		On exit  : 0/0
 12396 ;;		Unchanged: 0/0
 12397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12400 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12401 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12402 ;;Total ram usage:        3 bytes
 12403 ;; Hardware stack levels used: 1
 12404 ;; Hardware stack levels required when called: 5
 12405 ;; This function calls:
 12406 ;;		Nothing
 12407 ;; This function is called by:
 12408 ;;		Interrupt level 1
 12409 ;; This function uses a non-reentrant model
 12410 ;;
 12411                           
 12412                           	psect	intcodelo
 12413   000018                     __pintcodelo:
 12414                           	callstack 0
 12415   000018                     _LowISR:
 12416                           	callstack 20
 12417                           
 12418                           ; BSR set to: 14
 12419                           ;incstack = 0
 12420   000018  804F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 12421   00001A  CFD8 F00D          	movff	status,??_LowISR
 12422   00001E  CFE8 F00E          	movff	wreg,??_LowISR+1
 12423   000022  CFE0 F00F          	movff	bsr,??_LowISR+2
 12424   000026                     
 12425                           ;interrupts.c: 74:     if(PIR0bits.TMR0IF){
 12426   000026  010E               	movlb	14	; () banked
 12427   000028  AB33               	btfss	51,5,b	;volatile
 12428   00002A  EF19  F000         	goto	i1u363_21
 12429   00002E  EF1B  F000         	goto	i1u363_20
 12430   000032                     i1u363_21:
 12431   000032  EF24  F000         	goto	i1l365
 12432   000036                     i1u363_20:
 12433   000036                     
 12434                           ; BSR set to: 14
 12435                           ;interrupts.c: 75:         lost = 1;
 12436   000036  0E01               	movlw	1
 12437   000038  0100               	movlb	0	; () banked
 12438   00003A  6FF4               	movwf	_lost& (0+255),b
 12439                           
 12440                           ;interrupts.c: 76:         TMR0H=0;
 12441   00003C  0E00               	movlw	0
 12442   00003E  6ED4               	movwf	212,c	;volatile
 12443                           
 12444                           ;interrupts.c: 77:         TMR0L=0;
 12445   000040  0E00               	movlw	0
 12446   000042  6ED3               	movwf	211,c	;volatile
 12447   000044                     
 12448                           ; BSR set to: 0
 12449                           ;interrupts.c: 78:         PIR0bits.TMR0IF=0;
 12450   000044  010E               	movlb	14	; () banked
 12451   000046  9B33               	bcf	51,5,b	;volatile
 12452   000048                     i1l365:
 12453                           
 12454                           ; BSR set to: 14
 12455   000048  C00F  FFE0         	movff	??_LowISR+2,bsr
 12456   00004C  C00E  FFE8         	movff	??_LowISR+1,wreg
 12457   000050  C00D  FFD8         	movff	??_LowISR,status
 12458   000054  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 12459   000056  0010               	retfie	
 12460   000058                     __end_of_LowISR:
 12461                           	callstack 0
 12462                           
 12463 ;; *************** function _HighISR *****************
 12464 ;; Defined at:
 12465 ;;		line 38 in file "interrupts.c"
 12466 ;; Parameters:    Size  Location     Type
 12467 ;;		None
 12468 ;; Auto vars:     Size  Location     Type
 12469 ;;		None
 12470 ;; Return value:  Size  Location     Type
 12471 ;;                  1    wreg      void 
 12472 ;; Registers used:
 12473 ;;		wreg, status,2, status,0, cstack
 12474 ;; Tracked objects:
 12475 ;;		On entry : 0/0
 12476 ;;		On exit  : 0/0
 12477 ;;		Unchanged: 0/0
 12478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12483 ;;Total ram usage:        0 bytes
 12484 ;; Hardware stack levels used: 1
 12485 ;; Hardware stack levels required when called: 4
 12486 ;; This function calls:
 12487 ;;		i2_color_clear_init_interrupts
 12488 ;; This function is called by:
 12489 ;;		Interrupt level 2
 12490 ;; This function uses a non-reentrant model
 12491 ;;
 12492                           
 12493                           	psect	intcode
 12494   000008                     __pintcode:
 12495                           	callstack 0
 12496   000008                     _HighISR:
 12497                           	callstack 20
 12498                           
 12499                           ; BSR set to: 14
 12500                           ;incstack = 0
 12501   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12502   00000A  EF75  F02A         	goto	int_func
 12503                           
 12504                           	psect	intcode_body
 12505   0054EA                     __pintcode_body:
 12506                           	callstack 20
 12507   0054EA                     int_func:
 12508                           	callstack 20
 12509   0054EA                     
 12510                           ;interrupts.c: 42:     if(PIR0bits.INT0IF){
 12511   0054EA  010E               	movlb	14	; () banked
 12512   0054EC  A133               	btfss	51,0,b	;volatile
 12513   0054EE  EF7B  F02A         	goto	i2u362_41
 12514   0054F2  EF7D  F02A         	goto	i2u362_40
 12515   0054F6                     i2u362_41:
 12516   0054F6  EF84  F02A         	goto	i2l359
 12517   0054FA                     i2u362_40:
 12518   0054FA                     
 12519                           ; BSR set to: 14
 12520                           ;interrupts.c: 43:         brightnessChange = 1;
 12521   0054FA  0E01               	movlw	1
 12522   0054FC  0100               	movlb	0	; () banked
 12523   0054FE  6FF5               	movwf	_brightnessChange& (0+255),b
 12524   005500                     
 12525                           ; BSR set to: 0
 12526                           ;interrupts.c: 44:         color_clear_init_interrupts();
 12527   005500  EC93  F027         	call	i2_color_clear_init_interrupts	;wreg free
 12528   005504                     
 12529                           ;interrupts.c: 45:         PIR0bits.INT0IF = 0;
 12530   005504  010E               	movlb	14	; () banked
 12531   005506  9133               	bcf	51,0,b	;volatile
 12532   005508                     i2l359:
 12533                           
 12534                           ; BSR set to: 14
 12535   005508  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12536   00550A  0011               	retfie		f
 12537   00550C                     __end_of_HighISR:
 12538                           	callstack 0
 12539                           
 12540 ;; *************** function i2_color_clear_init_interrupts *****************
 12541 ;; Defined at:
 12542 ;;		line 27 in file "color.c"
 12543 ;; Parameters:    Size  Location     Type
 12544 ;;		None
 12545 ;; Auto vars:     Size  Location     Type
 12546 ;;  low_threshol    2   10[COMRAM] unsigned int 
 12547 ;;  high_thresho    2    8[COMRAM] unsigned int 
 12548 ;; Return value:  Size  Location     Type
 12549 ;;                  1    wreg      void 
 12550 ;; Registers used:
 12551 ;;		wreg, status,2, status,0, cstack
 12552 ;; Tracked objects:
 12553 ;;		On entry : 0/0
 12554 ;;		On exit  : 0/0
 12555 ;;		Unchanged: 0/0
 12556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12558 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12559 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12560 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12561 ;;Total ram usage:        5 bytes
 12562 ;; Hardware stack levels used: 1
 12563 ;; Hardware stack levels required when called: 3
 12564 ;; This function calls:
 12565 ;;		i2_I2C_2_Master_Start
 12566 ;;		i2_I2C_2_Master_Stop
 12567 ;;		i2_I2C_2_Master_Write
 12568 ;;		i2___lwdiv
 12569 ;;		i2_color_writetoaddr
 12570 ;; This function is called by:
 12571 ;;		_HighISR
 12572 ;; This function uses a non-reentrant model
 12573 ;;
 12574                           
 12575                           	psect	text49
 12576   004F26                     __ptext49:
 12577                           	callstack 0
 12578   004F26                     i2_color_clear_init_interrupts:
 12579                           	callstack 20
 12580   004F26                     
 12581                           ;color.c: 29:     I2C_2_Master_Start();
 12582   004F26  EC0C  F02B         	call	i2_I2C_2_Master_Start	;wreg free
 12583                           
 12584                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
 12585   004F2A  0E52               	movlw	82
 12586   004F2C  ECED  F02A         	call	i2_I2C_2_Master_Write
 12587                           
 12588                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
 12589   004F30  0EE6               	movlw	230
 12590   004F32  ECED  F02A         	call	i2_I2C_2_Master_Write
 12591                           
 12592                           ;color.c: 32:     I2C_2_Master_Stop();
 12593   004F36  EC07  F02B         	call	i2_I2C_2_Master_Stop	;wreg free
 12594                           
 12595                           ;color.c: 38:     unsigned int high_threshold = ambient + (ambient/3);
 12596   004F3A  C0FA  F001         	movff	_ambient,i2___lwdiv@dividend
 12597   004F3E  C0FB  F002         	movff	_ambient+1,i2___lwdiv@dividend+1
 12598   004F42  0E00               	movlw	0
 12599   004F44  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 12600   004F46  0E03               	movlw	3
 12601   004F48  6E03               	movwf	i2___lwdiv@divisor^0,c
 12602   004F4A  ECBA  F028         	call	i2___lwdiv	;wreg free
 12603   004F4E  0100               	movlb	0	; () banked
 12604   004F50  51FA               	movf	_ambient& (0+255),w,b
 12605   004F52  2401               	addwf	?i2___lwdiv^0,w,c
 12606   004F54  6E09               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
 12607   004F56  51FB               	movf	(_ambient+1)& (0+255),w,b
 12608   004F58  2002               	addwfc	(?i2___lwdiv+1)^0,w,c
 12609   004F5A  6E0A               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
 12610                           
 12611                           ;color.c: 39:     unsigned int low_threshold = ambient - (ambient/20);
 12612   004F5C  C0FA  F001         	movff	_ambient,i2___lwdiv@dividend
 12613   004F60  C0FB  F002         	movff	_ambient+1,i2___lwdiv@dividend+1
 12614   004F64  0E00               	movlw	0
 12615   004F66  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 12616   004F68  0E14               	movlw	20
 12617   004F6A  6E03               	movwf	i2___lwdiv@divisor^0,c
 12618   004F6C  ECBA  F028         	call	i2___lwdiv	;wreg free
 12619   004F70  5001               	movf	?i2___lwdiv^0,w,c
 12620   004F72  0100               	movlb	0	; () banked
 12621   004F74  5DFA               	subwf	_ambient& (0+255),w,b
 12622   004F76  6E0B               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
 12623   004F78  5002               	movf	(?i2___lwdiv+1)^0,w,c
 12624   004F7A  59FB               	subwfb	(_ambient+1)& (0+255),w,b
 12625   004F7C  6E0C               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
 12626                           
 12627                           ;color.c: 42:  color_writetoaddr(0x00, 0x13);
 12628   004F7E  0E13               	movlw	19
 12629   004F80  6E03               	movwf	i2color_writetoaddr@value^0,c
 12630   004F82  0E00               	movlw	0
 12631   004F84  ECA6  F02A         	call	i2_color_writetoaddr
 12632   004F88                     
 12633                           ;color.c: 43:     _delay((unsigned long)((3)*(64000000/4000.0)));
 12634   004F88  0E3F               	movlw	63
 12635   004F8A  6E08               	movwf	??i2_color_clear_init_interrupts^0,c
 12636   004F8C  0E55               	movlw	85
 12637   004F8E                     i2u504_47:
 12638   004F8E  2EE8               	decfsz	wreg,f,c
 12639   004F90  D7FE               	bra	i2u504_47
 12640   004F92  2E08               	decfsz	??i2_color_clear_init_interrupts^0,f,c
 12641   004F94  D7FC               	bra	i2u504_47
 12642   004F96  0000               	nop	
 12643   004F98                     
 12644                           ;color.c: 44:     color_writetoaddr(0x07, (high_threshold >> 8));
 12645   004F98  500A               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
 12646   004F9A  6E03               	movwf	i2color_writetoaddr@value^0,c
 12647   004F9C  0E07               	movlw	7
 12648   004F9E  ECA6  F02A         	call	i2_color_writetoaddr
 12649   004FA2                     
 12650                           ;color.c: 45:     color_writetoaddr(0x06, (high_threshold & 0xFF));
 12651   004FA2  C009  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
 12652   004FA6  0E06               	movlw	6
 12653   004FA8  ECA6  F02A         	call	i2_color_writetoaddr
 12654   004FAC                     
 12655                           ;color.c: 46:     color_writetoaddr(0x05, (low_threshold >> 8));
 12656   004FAC  500C               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
 12657   004FAE  6E03               	movwf	i2color_writetoaddr@value^0,c
 12658   004FB0  0E05               	movlw	5
 12659   004FB2  ECA6  F02A         	call	i2_color_writetoaddr
 12660   004FB6                     
 12661                           ;color.c: 47:     color_writetoaddr(0x04, (low_threshold & 0xFF));
 12662   004FB6  C00B  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
 12663   004FBA  0E04               	movlw	4
 12664   004FBC  ECA6  F02A         	call	i2_color_writetoaddr
 12665   004FC0                     
 12666                           ;color.c: 48:     color_writetoaddr(0x0C, 0b11);
 12667   004FC0  0E03               	movlw	3
 12668   004FC2  6E03               	movwf	i2color_writetoaddr@value^0,c
 12669   004FC4  0E0C               	movlw	12
 12670   004FC6  ECA6  F02A         	call	i2_color_writetoaddr
 12671   004FCA  0012               	return		;funcret
 12672   004FCC                     __end_ofi2_color_clear_init_interrupts:
 12673                           	callstack 0
 12674                           
 12675 ;; *************** function i2_color_writetoaddr *****************
 12676 ;; Defined at:
 12677 ;;		line 53 in file "color.c"
 12678 ;; Parameters:    Size  Location     Type
 12679 ;;  address         1    wreg     unsigned char 
 12680 ;;  value           1    2[COMRAM] unsigned char 
 12681 ;; Auto vars:     Size  Location     Type
 12682 ;;  address         1    3[COMRAM] unsigned char 
 12683 ;; Return value:  Size  Location     Type
 12684 ;;                  1    wreg      void 
 12685 ;; Registers used:
 12686 ;;		wreg, status,2, status,0, cstack
 12687 ;; Tracked objects:
 12688 ;;		On entry : 0/0
 12689 ;;		On exit  : 0/0
 12690 ;;		Unchanged: 0/0
 12691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12692 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12695 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12696 ;;Total ram usage:        2 bytes
 12697 ;; Hardware stack levels used: 1
 12698 ;; Hardware stack levels required when called: 2
 12699 ;; This function calls:
 12700 ;;		i2_I2C_2_Master_Start
 12701 ;;		i2_I2C_2_Master_Stop
 12702 ;;		i2_I2C_2_Master_Write
 12703 ;; This function is called by:
 12704 ;;		i2_color_clear_init_interrupts
 12705 ;; This function uses a non-reentrant model
 12706 ;;
 12707                           
 12708                           	psect	text50
 12709   00554C                     __ptext50:
 12710                           	callstack 0
 12711   00554C                     i2_color_writetoaddr:
 12712                           	callstack 20
 12713                           
 12714                           ;incstack = 0
 12715                           ;i2color_writetoaddr@address stored from wreg
 12716   00554C  6E04               	movwf	i2color_writetoaddr@address^0,c
 12717   00554E                     
 12718                           ;color.c: 54:     I2C_2_Master_Start();
 12719   00554E  EC0C  F02B         	call	i2_I2C_2_Master_Start	;wreg free
 12720                           
 12721                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
 12722   005552  0E52               	movlw	82
 12723   005554  ECED  F02A         	call	i2_I2C_2_Master_Write
 12724                           
 12725                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
 12726   005558  5004               	movf	i2color_writetoaddr@address^0,w,c
 12727   00555A  0980               	iorlw	128
 12728   00555C  ECED  F02A         	call	i2_I2C_2_Master_Write
 12729                           
 12730                           ;color.c: 57:     I2C_2_Master_Write(value);
 12731   005560  5003               	movf	i2color_writetoaddr@value^0,w,c
 12732   005562  ECED  F02A         	call	i2_I2C_2_Master_Write
 12733                           
 12734                           ;color.c: 58:     I2C_2_Master_Stop();
 12735   005566  EC07  F02B         	call	i2_I2C_2_Master_Stop	;wreg free
 12736   00556A  0012               	return		;funcret
 12737   00556C                     __end_ofi2_color_writetoaddr:
 12738                           	callstack 0
 12739                           
 12740 ;; *************** function i2_I2C_2_Master_Write *****************
 12741 ;; Defined at:
 12742 ;;		line 45 in file "i2c.c"
 12743 ;; Parameters:    Size  Location     Type
 12744 ;;  data_byte       1    wreg     unsigned char 
 12745 ;; Auto vars:     Size  Location     Type
 12746 ;;  data_byte       1    1[COMRAM] unsigned char 
 12747 ;; Return value:  Size  Location     Type
 12748 ;;                  1    wreg      void 
 12749 ;; Registers used:
 12750 ;;		wreg, status,2, status,0, cstack
 12751 ;; Tracked objects:
 12752 ;;		On entry : 0/0
 12753 ;;		On exit  : 0/0
 12754 ;;		Unchanged: 0/0
 12755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12760 ;;Total ram usage:        1 bytes
 12761 ;; Hardware stack levels used: 1
 12762 ;; Hardware stack levels required when called: 1
 12763 ;; This function calls:
 12764 ;;		i2_I2C_2_Master_Idle
 12765 ;; This function is called by:
 12766 ;;		i2_color_clear_init_interrupts
 12767 ;;		i2_color_writetoaddr
 12768 ;; This function uses a non-reentrant model
 12769 ;;
 12770                           
 12771                           	psect	text51
 12772   0055DA                     __ptext51:
 12773                           	callstack 0
 12774   0055DA                     i2_I2C_2_Master_Write:
 12775                           	callstack 20
 12776                           
 12777                           ;incstack = 0
 12778                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 12779   0055DA  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 12780   0055DC                     
 12781                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 12782   0055DC  EC3C  F02A         	call	i2_I2C_2_Master_Idle	;wreg free
 12783   0055E0                     
 12784                           ;i2c.c: 48:   SSP2BUF = data_byte;
 12785   0055E0  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 12786   0055E4  0012               	return		;funcret
 12787   0055E6                     __end_ofi2_I2C_2_Master_Write:
 12788                           	callstack 0
 12789                           
 12790 ;; *************** function i2_I2C_2_Master_Stop *****************
 12791 ;; Defined at:
 12792 ;;		line 39 in file "i2c.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;		None
 12795 ;; Auto vars:     Size  Location     Type
 12796 ;;		None
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  1    wreg      void 
 12799 ;; Registers used:
 12800 ;;		wreg, status,2, status,0, cstack
 12801 ;; Tracked objects:
 12802 ;;		On entry : 0/0
 12803 ;;		On exit  : 0/0
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12810 ;;Total ram usage:        0 bytes
 12811 ;; Hardware stack levels used: 1
 12812 ;; Hardware stack levels required when called: 1
 12813 ;; This function calls:
 12814 ;;		i2_I2C_2_Master_Idle
 12815 ;; This function is called by:
 12816 ;;		i2_color_clear_init_interrupts
 12817 ;;		i2_color_writetoaddr
 12818 ;; This function uses a non-reentrant model
 12819 ;;
 12820                           
 12821                           	psect	text52
 12822   00560E                     __ptext52:
 12823                           	callstack 0
 12824   00560E                     i2_I2C_2_Master_Stop:
 12825                           	callstack 20
 12826   00560E                     
 12827                           ;i2c.c: 41:   I2C_2_Master_Idle();
 12828   00560E  EC3C  F02A         	call	i2_I2C_2_Master_Idle	;wreg free
 12829   005612                     
 12830                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 12831   005612  010E               	movlb	14	; () banked
 12832   005614  85DA               	bsf	218,2,b	;volatile
 12833   005616                     
 12834                           ; BSR set to: 14
 12835   005616  0012               	return		;funcret
 12836   005618                     __end_ofi2_I2C_2_Master_Stop:
 12837                           	callstack 0
 12838                           
 12839 ;; *************** function i2_I2C_2_Master_Start *****************
 12840 ;; Defined at:
 12841 ;;		line 27 in file "i2c.c"
 12842 ;; Parameters:    Size  Location     Type
 12843 ;;		None
 12844 ;; Auto vars:     Size  Location     Type
 12845 ;;		None
 12846 ;; Return value:  Size  Location     Type
 12847 ;;                  1    wreg      void 
 12848 ;; Registers used:
 12849 ;;		wreg, status,2, status,0, cstack
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12859 ;;Total ram usage:        0 bytes
 12860 ;; Hardware stack levels used: 1
 12861 ;; Hardware stack levels required when called: 1
 12862 ;; This function calls:
 12863 ;;		i2_I2C_2_Master_Idle
 12864 ;; This function is called by:
 12865 ;;		i2_color_clear_init_interrupts
 12866 ;;		i2_color_writetoaddr
 12867 ;; This function uses a non-reentrant model
 12868 ;;
 12869                           
 12870                           	psect	text53
 12871   005618                     __ptext53:
 12872                           	callstack 0
 12873   005618                     i2_I2C_2_Master_Start:
 12874                           	callstack 20
 12875   005618                     
 12876                           ;i2c.c: 29:   I2C_2_Master_Idle();
 12877   005618  EC3C  F02A         	call	i2_I2C_2_Master_Idle	;wreg free
 12878   00561C                     
 12879                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 12880   00561C  010E               	movlb	14	; () banked
 12881   00561E  81DA               	bsf	218,0,b	;volatile
 12882   005620                     
 12883                           ; BSR set to: 14
 12884   005620  0012               	return		;funcret
 12885   005622                     __end_ofi2_I2C_2_Master_Start:
 12886                           	callstack 0
 12887                           
 12888 ;; *************** function i2_I2C_2_Master_Idle *****************
 12889 ;; Defined at:
 12890 ;;		line 22 in file "i2c.c"
 12891 ;; Parameters:    Size  Location     Type
 12892 ;;		None
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;		None
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  1    wreg      void 
 12897 ;; Registers used:
 12898 ;;		wreg, status,2, status,0
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/0
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12908 ;;Total ram usage:        1 bytes
 12909 ;; Hardware stack levels used: 1
 12910 ;; This function calls:
 12911 ;;		Nothing
 12912 ;; This function is called by:
 12913 ;;		i2_I2C_2_Master_Start
 12914 ;;		i2_I2C_2_Master_Stop
 12915 ;;		i2_I2C_2_Master_Write
 12916 ;; This function uses a non-reentrant model
 12917 ;;
 12918                           
 12919                           	psect	text54
 12920   005478                     __ptext54:
 12921                           	callstack 0
 12922   005478                     i2_I2C_2_Master_Idle:
 12923                           	callstack 20
 12924   005478                     i2l267:
 12925   005478  010E               	movlb	14	; () banked
 12926   00547A  B5D8               	btfsc	216,2,b	;volatile
 12927   00547C  EF42  F02A         	goto	i2u193_41
 12928   005480  EF44  F02A         	goto	i2u193_40
 12929   005484                     i2u193_41:
 12930   005484  EF3C  F02A         	goto	i2l267
 12931   005488                     i2u193_40:
 12932   005488                     
 12933                           ; BSR set to: 14
 12934   005488  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 12935   00548C  0E1F               	movlw	31
 12936   00548E  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 12937   005490  A4D8               	btfss	status,2,c
 12938   005492  EF4D  F02A         	goto	i2u194_41
 12939   005496  EF4F  F02A         	goto	i2u194_40
 12940   00549A                     i2u194_41:
 12941   00549A  EF3C  F02A         	goto	i2l267
 12942   00549E                     i2u194_40:
 12943   00549E                     
 12944                           ; BSR set to: 14
 12945   00549E  0012               	return		;funcret
 12946   0054A0                     __end_ofi2_I2C_2_Master_Idle:
 12947                           	callstack 0
 12948                           
 12949 ;; *************** function i2___lwdiv *****************
 12950 ;; Defined at:
 12951 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 12952 ;; Parameters:    Size  Location     Type
 12953 ;;  dividend        2    0[COMRAM] unsigned int 
 12954 ;;  divisor         2    2[COMRAM] unsigned int 
 12955 ;; Auto vars:     Size  Location     Type
 12956 ;;  quotient        2    4[COMRAM] unsigned int 
 12957 ;;  counter         1    6[COMRAM] unsigned char 
 12958 ;; Return value:  Size  Location     Type
 12959 ;;                  2    0[COMRAM] unsigned int 
 12960 ;; Registers used:
 12961 ;;		wreg, status,2, status,0
 12962 ;; Tracked objects:
 12963 ;;		On entry : 0/0
 12964 ;;		On exit  : 0/0
 12965 ;;		Unchanged: 0/0
 12966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12968 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12970 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12971 ;;Total ram usage:        7 bytes
 12972 ;; Hardware stack levels used: 1
 12973 ;; This function calls:
 12974 ;;		Nothing
 12975 ;; This function is called by:
 12976 ;;		i2_color_clear_init_interrupts
 12977 ;; This function uses a non-reentrant model
 12978 ;;
 12979                           
 12980                           	psect	text55
 12981   005174                     __ptext55:
 12982                           	callstack 0
 12983   005174                     i2___lwdiv:
 12984                           	callstack 22
 12985   005174  0E00               	movlw	0
 12986   005176  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
 12987   005178  0E00               	movlw	0
 12988   00517A  6E05               	movwf	i2___lwdiv@quotient^0,c
 12989   00517C  5003               	movf	i2___lwdiv@divisor^0,w,c
 12990   00517E  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 12991   005180  B4D8               	btfsc	status,2,c
 12992   005182  EFC5  F028         	goto	i2u264_41
 12993   005186  EFC7  F028         	goto	i2u264_40
 12994   00518A                     i2u264_41:
 12995   00518A  EFEF  F028         	goto	i2l1280
 12996   00518E                     i2u264_40:
 12997   00518E  0E01               	movlw	1
 12998   005190  6E07               	movwf	i2___lwdiv@counter^0,c
 12999   005192  EFCF  F028         	goto	i2l3844
 13000   005196                     i2l3842:
 13001   005196  90D8               	bcf	status,0,c
 13002   005198  3603               	rlcf	i2___lwdiv@divisor^0,f,c
 13003   00519A  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 13004   00519C  2A07               	incf	i2___lwdiv@counter^0,f,c
 13005   00519E                     i2l3844:
 13006   00519E  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 13007   0051A0  EFD4  F028         	goto	i2u265_41
 13008   0051A4  EFD6  F028         	goto	i2u265_40
 13009   0051A8                     i2u265_41:
 13010   0051A8  EFCB  F028         	goto	i2l3842
 13011   0051AC                     i2u265_40:
 13012   0051AC                     i2l3846:
 13013   0051AC  90D8               	bcf	status,0,c
 13014   0051AE  3605               	rlcf	i2___lwdiv@quotient^0,f,c
 13015   0051B0  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 13016   0051B2  5003               	movf	i2___lwdiv@divisor^0,w,c
 13017   0051B4  5C01               	subwf	i2___lwdiv@dividend^0,w,c
 13018   0051B6  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 13019   0051B8  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 13020   0051BA  A0D8               	btfss	status,0,c
 13021   0051BC  EFE2  F028         	goto	i2u266_41
 13022   0051C0  EFE4  F028         	goto	i2u266_40
 13023   0051C4                     i2u266_41:
 13024   0051C4  EFE9  F028         	goto	i2l3854
 13025   0051C8                     i2u266_40:
 13026   0051C8  5003               	movf	i2___lwdiv@divisor^0,w,c
 13027   0051CA  5E01               	subwf	i2___lwdiv@dividend^0,f,c
 13028   0051CC  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 13029   0051CE  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 13030   0051D0  8005               	bsf	i2___lwdiv@quotient^0,0,c
 13031   0051D2                     i2l3854:
 13032   0051D2  90D8               	bcf	status,0,c
 13033   0051D4  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 13034   0051D6  3203               	rrcf	i2___lwdiv@divisor^0,f,c
 13035   0051D8  2E07               	decfsz	i2___lwdiv@counter^0,f,c
 13036   0051DA  EFD6  F028         	goto	i2l3846
 13037   0051DE                     i2l1280:
 13038   0051DE  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 13039   0051E2  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 13040   0051E6  0012               	return		;funcret
 13041   0051E8                     __end_ofi2___lwdiv:
 13042                           	callstack 0
 13043                           
 13044                           	psect	smallconst
 13045   000E00                     __psmallconst:
 13046                           	callstack 0
 13047   000E00  00                 	db	0
 13048   000E01  00                 	db	0	; dummy byte at the end
 13049   000000                     
 13050                           	psect	rparam
 13051   000000                     
 13052                           	psect	temp
 13053   00004F                     btemp:
 13054                           	callstack 0
 13055   00004F                     	ds	1
 13056   000000                     int$flags	set	btemp
 13057   000000                     wtemp8	set	btemp+1
 13058   000000                     ttemp5	set	btemp+1
 13059   000000                     ttemp6	set	btemp+4
 13060   000000                     ttemp7	set	btemp+8
 13061                           
 13062                           	psect	config
 13063                           
 13064                           ;Config register CONFIG1L @ 0x300000
 13065                           ;	External Oscillator mode Selection bits
 13066                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 13067                           ;	Power-up default value for COSC bits
 13068                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13069   300000                     	org	3145728
 13070   300000  AA                 	db	170
 13071                           
 13072                           ;Config register CONFIG1H @ 0x300001
 13073                           ;	unspecified, using default values
 13074                           ;	Clock Out Enable bit
 13075                           ;	CLKOUTEN = 0x1, unprogrammed default
 13076                           ;	Clock Switch Enable bit
 13077                           ;	CSWEN = 0x1, unprogrammed default
 13078                           ;	Fail-Safe Clock Monitor Enable bit
 13079                           ;	FCMEN = 0x1, unprogrammed default
 13080   300001                     	org	3145729
 13081   300001  FF                 	db	255
 13082                           
 13083                           ;Config register CONFIG3L @ 0x300004
 13084                           ;	WDT Period Select bits
 13085                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13086                           ;	WDT operating mode
 13087                           ;	WDTE = OFF, WDT Disabled
 13088   300004                     	org	3145732
 13089   300004  9F                 	db	159
 13090                           
 13091                           ;Config register CONFIG3H @ 0x300005
 13092                           ;	unspecified, using default values
 13093                           ;	WDT Window Select bits
 13094                           ;	WDTCWS = 0x7, unprogrammed default
 13095                           ;	WDT input clock selector
 13096                           ;	WDTCCS = 0x7, unprogrammed default
 13097   300005                     	org	3145733
 13098   300005  FF                 	db	255
 13099                           tosu	equ	0xFFF
 13100                           tosh	equ	0xFFE
 13101                           tosl	equ	0xFFD
 13102                           stkptr	equ	0xFFC
 13103                           pclatu	equ	0xFFB
 13104                           pclath	equ	0xFFA
 13105                           pcl	equ	0xFF9
 13106                           tblptru	equ	0xFF8
 13107                           tblptrh	equ	0xFF7
 13108                           tblptrl	equ	0xFF6
 13109                           tablat	equ	0xFF5
 13110                           prodh	equ	0xFF4
 13111                           prodl	equ	0xFF3
 13112                           indf0	equ	0xFEF
 13113                           postinc0	equ	0xFEE
 13114                           postdec0	equ	0xFED
 13115                           preinc0	equ	0xFEC
 13116                           plusw0	equ	0xFEB
 13117                           fsr0h	equ	0xFEA
 13118                           fsr0l	equ	0xFE9
 13119                           wreg	equ	0xFE8
 13120                           indf1	equ	0xFE7
 13121                           postinc1	equ	0xFE6
 13122                           postdec1	equ	0xFE5
 13123                           preinc1	equ	0xFE4
 13124                           plusw1	equ	0xFE3
 13125                           fsr1h	equ	0xFE2
 13126                           fsr1l	equ	0xFE1
 13127                           bsr	equ	0xFE0
 13128                           indf2	equ	0xFDF
 13129                           postinc2	equ	0xFDE
 13130                           postdec2	equ	0xFDD
 13131                           preinc2	equ	0xFDC
 13132                           plusw2	equ	0xFDB
 13133                           fsr2h	equ	0xFDA
 13134                           fsr2l	equ	0xFD9
 13135                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      78
    BANK0           160     88     156
    BANK1           256    216     256
    BANK2           256      0     142
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK1[1]), 

    color_calibration@blue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@blue(BANK1[6]), 

    color_calibration@green	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@green(BANK1[6]), 

    color_calibration@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK1[6]), 

    color_calibration@lightblue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@lightblue(BANK1[6]), 

    color_calibration@orange	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@orange(BANK1[6]), 

    color_calibration@pink	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@pink(BANK1[6]), 

    color_calibration@red	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@red(BANK1[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    color_calibration@white	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@white(BANK1[6]), 

    color_calibration@yellow	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@yellow(BANK1[6]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseShort@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseShort@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseWallAdjust@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseWallAdjust@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseWallAdjust@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseWallAdjust@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseWallAdjust@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseWallAdjust@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    rgb_2_hsv@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK1[6]), 

    S33DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S33DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), main@motorR(BANK1[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    wallAdjust@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    wallAdjust@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_detect
    _main->_move
    _wallAdjust->_setMotorPWM
    _move->_returnHome
    _reverseShort->_setMotorPWM
    _returnHome->_reverseOneSquare
    _returnHome->_reverseWallAdjust
    _reverseWallAdjust->_setMotorPWM
    _lostReturnHome->_reverseOneSquare
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_detect->_max
    _color_detect->_min
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->___lwdiv
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_rgb_2_hsv
    _rgb_2_hsv->___aldiv
    ___lldiv->___lmul
    ___aldiv->___lmul
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2___lwdiv
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_calibration
    _color_calibration->_rgb_2_hsv

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               272   272      0  274845
                                             42 BANK0     46    46      0
                                              0 BANK1    216   216      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
        _color_clear_init_interrupts
                   _color_click_init
                       _color_detect
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                          _rgb_2_hsv
                               _stop
                         _wallAdjust
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _wallAdjust                                          16    10      6    5452
                                             34 COMRAM    16    10      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _move                                                19     2     17  128519
                                             72 COMRAM     2     2      0
                                              0 BANK0     17     0     17
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                       _reverseShort
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _reverseShort                                        14     8      6    7234
                                             34 COMRAM    14     8      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          23     7     16   66057
                                             49 COMRAM    23     7     16
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                  _reverseWallAdjust
                               _stop
                           _turnLeft
                          _turnRight
                        _white_Light
 ---------------------------------------------------------------------------------
 (3) _reverseWallAdjust                                   15     9      6    5107
                                             34 COMRAM    15     9      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      21     5     16   59872
                                             49 COMRAM    21     5     16
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    5573
                                             34 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    15     7      8    6777
                                             34 COMRAM    15     7      8
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2      69
                                             15 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    7765
                                             34 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        68    14     54    3082
                                             19 COMRAM    55     1     54
                                              0 BANK0     13    13      0
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    2274
                                             33 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0    1524
                                             28 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                            ___lwdiv
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             17 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20   10744
                                             63 COMRAM     2     2      0
                                             22 BANK0     20     0     20
                         _color_read
                          _rgb_2_hsv
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rgb_2_hsv                                           44    34     10    7135
                                             41 COMRAM    22    12     10
                                              0 BANK0     22    22      0
                            ___aldiv
                            ___lldiv
                             ___lmul
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (2) _min                                                  4     0      4     696
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _max                                                  4     0      4     696
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1586
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     922
                                             27 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             27 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2    1243
                                             19 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                             16 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                             16 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   36854
                                             48 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   13953
                                             34 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   21553
                                             34 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3805
                                             28 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     662
                                             21 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     543
                                             23 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _LowISR                                               3     3      0       0
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighISR                                              0     0      0     600
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (8) i2_color_clear_init_interrupts                        5     5      0     600
                                              7 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                          i2___lwdiv
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (9) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _rgb_2_hsv
       ___aldiv
         ___lmul (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _max
       _min
     _white_Light
   _color_clear_init_interrupts
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
     ___lwdiv
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
     _color_writetoaddr
   _color_detect
     _max
     _min
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _reverseWallAdjust
         _setMotorPWM
       _stop
       _turnLeft
       _turnRight
       _white_Light
     _reverseOneSquare
     _reverseShort
       _setMotorPWM
     _turnLeft
     _turnRight
   _resetTimer
   _rgb_2_hsv
   _stop
   _wallAdjust
     _setMotorPWM
   _white_Light

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2___lwdiv
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      66        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      8E       9       55.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D8     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4A      4E       1       83.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2E      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      64        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhlllh       E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRllllhh      A      0       0      47        0.0%
BITBIGSFRlllllh      9      0       0      61        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      63        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      59        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      60        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      62        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhllll       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     278      65        0.0%
DATA                 0      0     278       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 15 09:44:18 2024

                                _white_Light 54C6                           reverseWallAdjust@i 002E  
                                         l91 2ACA                                           l93 2AD8  
                               ___awdiv@sign 0015                          reverseWallAdjust@mL 0023  
                        reverseWallAdjust@mR 0025                                           bsr 0FE0  
                        ___wmul@multiplicand 0012                           i2___lwdiv@dividend 0001  
              wallAdjust@wallReverseDuration 002D                             main@turnDuration 01B5  
                          ??_Interrupts_init 0010                                          l200 266E  
                                        l105 2ED6                                          l202 267C  
                                        l211 289E                                          l203 2724  
                                        l212 2946                                          l205 2732  
                                        l214 2954                                          l206 27DA  
                                        l223 53C8                                          l215 29FC  
                                        l160 43C2                                          l224 53D0  
                                        l232 331E                                          l208 27E8  
                                        l152 552A                                          l209 2890  
                                        l218 53F4                                          l146 536E  
                                        l219 53FC                                          l155 54E2  
                                        l316 53A4                                          l237 33B4  
                                        l157 54E8                                          l149 4F24  
                                        l270 5476                                          l182 3B54  
                                        l191 244C                                          l264 5426  
                                        l353 55CC                                          l273 5602  
                                        l193 245A                                          l282 55D8  
                                        l194 2502                                          l443 55A2  
                                        l267 5450                                          l611 23C6  
                                        l460 52DC                                          l276 560C  
                                        l196 2510                                          l188 3B56  
                                        l700 34EA                                          l461 52DE  
                                        l285 5336                                          l197 25B8  
                                        l621 2440                                          l605 23C6  
                                        l446 55A6                                          l462 52F2  
                                        l279 55F8                                          l199 25C6  
                                        l703 356E                                          l448 55B4  
                                        l464 52F4                                          l552 4AC0  
                                        l640 48A2                                          l800 5240  
                                        l720 3786                                          l712 369C  
                                        l449 55BA                                          l801 5250  
                                        l545 50FE                                          l634 4812  
                                        l626 4C92                                          l714 36C0  
                                        l643 4926                                          l651 4638  
                                        l731 3F1E                                          l571 163A  
                                        l660 474C                                          l396 5588  
                                        l580 1CD2                                          l708 3630  
                                        l629 4CD4                                          l725 3E8E  
                                        l717 3744                                          l646 4954  
                                        l638 487E                                          l734 3FA2  
                                        l742 407E                                          l663 477A  
                                        l655 46A4                                          l823 506E  
                                        l751 4192                                          l816 505E  
                                        l672 4DBA                                          l657 46C8  
                                        l681 44C4                                          l737 3FE4  
                                        l729 3EFA                                          l762 3C5C  
                                        l586 1CD2                                          l754 41D4  
                                        l746 40EA                                          l763 3C92  
                                        l683 44DA                                          l780 554A  
                                        l668 4D6E                                          l596 1D94  
                                        l748 410E                                          l677 4458  
                                        l766 3CE0                                          l758 3C40  
                                        l686 455E                                          l694 345A  
                                        l767 3DD0                                          l783 55EE  
                                        l769 3DF0                                          l689 45A0  
                                        l786 544E                                          l698 34C6  
                                        l868 4BCC                                          l789 54C4  
                                        _max 53D2                                          _min 53A6  
                            color_detect@HSV 0014                                ?_color_detect 0014  
                                        prod 0FF3                          i2_color_writetoaddr 554C  
                                        wreg 0FE8                              color_detect@red 001A  
  color_clear_init_interrupts@high_threshold 001E  i2color_clear_init_interrupts@high_threshold 0009  
                                       l1020 4E7E                                         l3100 54BC  
                                       l3110 5122                                         l3120 515C  
                                       l3112 512A                                         l1280 516A  
                                       l3104 5100                                         l4000 2854  
                                       l3200 4C5C                                         l3122 515E  
                                       l3114 5138                                         l3106 5108  
                                       l3130 55D0                                         l4010 28D0  
                                       l4002 2874                                         l3210 4CB6  
                                       l3202 4C68                                         l3124 5164  
                                       l3116 513E                                         l3108 511A  
                                       l3140 4972                                         l3300 47DA  
                                       l3220 5608                                         l3132 55D4  
                                       l4020 2958                                         l4012 28E8  
                                       l4004 288C                                         l3204 4C74  
                                       l4100 3446                                         l3118 5154  
                                       l3150 4A3C                                         l3142 49C6  
                                       l3310 4836                                         l3302 47E6  
                                       l3230 5332                                         l3222 52F8  
                                       l3126 55FA                                         l3134 55F0  
                                       l4030 29E0                                         l4022 2964  
                                       l4014 290A                                         l4006 28A2  
                                       l3206 4C80                                         l3214 4CC0  
                                       l4110 34B2                                         l4102 3456  
                                       l1287 5172                                         l3152 4A80  
                                       l3144 49DA                                         l3320 48A8  
                                       l3304 47F2                                         l3312 483A  
                                       l4040 3BD8                                         l3232 5334  
                                       l3224 52FC                                         l3128 55FE  
                                       l3136 55F4                                         l3160 54D8  
                                       l4032 29F8                                         l4024 2986  
                                       l4016 292A                                         l4008 28AE  
                                       l3216 550E                                         l4200 387A  
                                       l3208 4C8E                                         l3400 3E6E  
                                       l4120 3536                                         l4112 34C2  
                                       l4104 347E                                         l3146 49DE  
                                       l3138 4956                                         l3330 4906  
                                       l3314 485E                                         l3306 47FE  
                                       l3250 45C0                                         l4050 3C8C  
                                       l4042 3C00                                         l4034 3B58  
                                       l3226 5304                                         l3218 5604  
                                       l3242 53D2                                         l4026 299E  
                                       l4018 2942                                         l4210 3962  
                                       l4202 38B2                                         l3170 4D36  
                                       l3162 55E6                                         l3410 3EDA  
                                       l3402 3E7A                                         l4130 3592  
                                       l4122 3542                                         l4114 34F0  
                                       l4106 3482                                         l3148 4A20  
                                       l3332 4912                                         l3324 48BA  
                                       l3316 486A                                         l3308 480E  
                                       l3260 4624                                         l3252 45CC  
                                       l4060 3CD2                                         l4052 3CA0  
                                       l4044 3C4E                                         l4036 3B80  
                                       l3228 530C                                         l3500 4B8A  
                                       l3244 53E8                                         l3236 53A6  
                                       l4028 29C0                                         l4220 39D8  
                                       l4212 3984                                         l4204 38EA  
                                       l3180 4D92                                         l3172 4D42  
                                       l3164 4CD6                                         l3340 43C4  
                                       l3420 3F36                                         l3412 3EE6  
                                       l3404 3E8A                                         l4300 1196  
                                       l4140 35F8                                         l4124 354E  
                                       l4108 34A6                                         l3334 4922  
                                       l3326 48EE                                         l3318 487A  
                                       l3270 4690                                         l3262 4634  
                                       l3254 4600                                         l4070 3D8C  
                                       l4062 3CE4                                         l4054 3CAA  
                                       l4046 3C6A                                         l4038 3B98  
                                       l3094 5450                                         l3510 4BBC  
                                       l3502 4B8C                                         l3238 53BC  
                                       l3158 54C8                                         l4230 3A3C  
                                       l4214 398C                                         l4206 3922  
                                       l4222 39DC                                         l3174 4D4E  
                                       l3182 4D96                                         l3166 4CF6  
                                       l3350 4438                                         l3342 43E0  
                                       l3430 3F9E                                         l3422 3F6A  
                                       l3414 3EF6                                         l3406 3EB2  
                                       l4310 1234                                         l4302 11CE  
                                       l4150 3654                                         l4142 3604  
                                       l4126 355A                                         l4134 359C  
                                       l4118 3502                                         l4080 553E  
                                       l3600 558A                                         l3336 494A  
                                       l3328 48FA                                         l3280 4714  
                                       l3272 46A0                                         l3264 465C  
                                       l3256 460C                                         l3248 45A2  
                                       l4072 3DD4                                         l4064 3D0C  
                                       l4056 3CAC                                         l4048 3C82  
                                       l3096 5460                                         l3504 4B96  
                                       l3440 51F8                                         l4240 3B1C  
                                       l4232 3A96                                         l4224 39F2  
                                       l4208 395A                                         l4216 3994  
                                       l3176 4D5A                                         l3168 4D02  
                                       l3184 5428                                         l3360 44A4  
                                       l3352 4444                                         l3344 43EC  
                                       l3192 4BCE                                         l4400 1F0E  
                                       l3432 3FC6                                         l3424 3F76  
                                       l3416 3F24                                         l3408 3EB6  
                                       l4320 12F8                                         l4312 124C  
                                       l4304 11E6                                         l4160 36C6  
                                       l4144 3610                                         l4152 3658  
                                       l4136 35B8                                         l4128 356A  
                                       l4082 5548                                         l3610 55A4  
                                       l3602 5594                                         l3098 54A0  
                                       l3290 4770                                         l3282 4720  
                                       l3274 46CE                                         l3258 4618  
                                       l3266 4660                                         l4074 3DEC  
                                       l4066 3D24                                         l4058 3CC4  
                                       l3530 420A                                         l3506 4B9C  
                                       l3450 4FDC                                         l3442 5206  
                                       l4242 3B2E                                         l4226 3A14  
                                       l4234 3A9A                                         l4218 39B6  
                                       l3178 4D6A                                         l3186 5434  
                                       l3370 44F2                                         l3362 44B0  
                                       l3354 4454                                         l3346 4420  
                                       l3194 4C16                                         l4410 1FB8  
                                       l4402 1F26                                         l3426 3F82  
                                       l4330 1396                                         l4314 1288  
                                       l4322 1318                                         l4306 1206  
                                       l4250 0E14                                         l4170 3724  
                                       l4154 367C                                         l4146 361C  
                                       l4138 35C4                                         l4090 33D2  
                                       l4084 55BC                                         l4076 552C  
                                       l3612 55B8                                         l3604 559C  
                                       l3284 472C                                         l3268 4684  
                                       l4068 3D64                                         l3540 435E  
                                       l3532 4262                                         l3508 4BAC  
                                       l3460 501E                                         l3452 4FF2  
                                       l3444 5216                                         l4244 3B50  
                                       l4236 3AB0                                         l4228 3A2A  
                                       l3188 5446                                         l3380 455A  
                                       l3372 4526                                         l3364 44C0  
                                       l3356 447C                                         l3348 442C  
                                       l4420 2082                                         l4412 1FF4  
                                       l4404 1F62                                         l3428 3F8E  
                                       l3436 3FD0                                         l3700 17DE  
                                       l3620 3FF8                                         l4340 1438  
                                       l4332 13B6                                         l4324 132A  
                                       l4316 12A8                                         l4308 1218  
                                       l4252 0E30                                         l4260 0ED8  
                                       l4172 3730                                         l4180 3772  
                                       l4164 36D8                                         l4156 3688  
                                       l4148 362C                                         l4092 33EE  
                                       l4078 5534                                         l3606 559E  
                                       l3294 477C                                         l3286 4738  
                                       l3278 46E0                                         l3542 437C  
                                       l3534 4280                                         l3526 41D6  
                                       l3470 4AC2                                         l3462 503C  
                                       l3454 4FFA                                         l3446 5220  
                                       l3438 51E8                                         l3550 4EFC  
                                       l4238 3B06                                         l4190 381E  
                                       l4182 3788                                         l3382 4582  
                                       l3374 4532                                         l3366 44E0  
                                       l3358 4480                                         l3198 4C28  
                                       l4430 2134                                         l4422 20A2  
                                       l4414 2012                                         l4406 1F80  
                                       l3390 3DFA                                         l3710 188C  
                                       l3702 17FA                                         l3630 406A  
                                       l3622 4012                                         l4350 14FC  
                                       l4342 1454                                         l4334 13EE  
                                       l4326 1346                                         l4318 12E0  
                                       l4270 0F76                                         l4262 0EEA  
                                       l4254 0E48                                         l4174 3740  
                                       l4166 370C                                         l4158 3698  
                                       l4094 3422                                         l4086 33B6  
                                       l3608 55A0                                         l3800 4DE8  
                                       l3296 479A                                         l3288 4748  
                                       l3536 42E0                                         l3528 41F0  
                                       l3480 4AF6                                         l3472 4AC6  
                                       l3464 504C                                         l3456 5006  
                                       l3448 4FCC                                         l3560 302E  
                                       l3552 4F06                                         l3544 4E80  
                                       l4192 3826                                         l4184 378C  
                                       l3376 453E                                         l4440 21CA  
                                       l4432 214C                                         l4424 20DA  
                                       l4416 2032                                         l4408 1FA0  
                                       l3392 3E08                                         l3720 193E  
                                       l3712 18AC                                         l3704 181A  
                                       l3640 40D6                                         l3632 407A  
                                       l3624 4046                                         l3616 3FE6  
                                       l4360 157A                                         l4352 1514  
                                       l4344 146C                                         l4336 1406  
                                       l4328 135E                                         l4280 102C  
                                       l4264 0F06                                         l4272 0FAE  
                                       l4256 0E80                                         l4248 0E02  
                                       l4176 3768                                         l4168 3718  
                                       l4096 342E                                         l4088 33C2  
                                       l3810 4E16                                         l3802 4DF0  
                                       l3298 47A6                                         l3538 42FE  
                                       l3490 4B38                                         l3482 4B06  
                                       l3474 4AD4                                         l3466 504E  
                                       l3458 5014                                         l3570 30F0  
                                       l3562 3048                                         l3554 4F10  
                                       l3546 4EE2                                         l4186 37C4  
                                       l4194 382E                                         l3378 454A  
                                       l3386 458C                                         l4442 21EA  
                                       l4450 2262                                         l4434 2184  
                                       l4418 204A                                         l4426 20F6  
                                       l4370 1D9A                                         l3394 3E22  
                                       l3722 1956                                         l3730 1A02  
                                       l3714 18C4                                         l3706 1832  
                                       l3650 415A                                         l3642 40E6  
                                       l3634 40A2                                         l3626 4052  
                                       l3618 3FEA                                         l4362 15C2  
                                       l4346 14A4                                         l4354 1534  
                                       l4338 1426                                         l4282 104C  
                                       l4274 0FC0                                         l4290 10F4  
                                       l4266 0F1E                                         l4258 0EA0  
                                       l4098 343A                                         l3820 4E50  
                                       l3812 4E1E                                         l3804 4DF4  
                                       l3492 4B44                                         l3484 4B0A  
                                       l3476 4AE4                                         l3468 5058  
                                       l3580 3278                                         l3572 3152  
                                       l3564 3060                                         l3556 4F1A  
                                       l3548 4EF2                                         l4196 3850  
                                       l4188 37FC                                         l3900 50E6  
                                       l4452 2280                                         l4444 2202  
                                       l4428 2114                                         l4380 1E62  
                                       l4372 1DBA                                         l3396 3E56  
                                       l3388 3DF2                                         l3732 1A20  
                                       l3724 198E                                         l3716 1900  
                                       l3708 186E                                         l3660 41B6  
                                       l3652 4166                                         l3644 4114  
                                       l3628 405E                                         l3636 40A6  
                                       l4364 15DE                                         l4356 1546  
                                       l4348 14C4                                         l4292 1106  
                                       l4284 1084                                         l4276 0FDC  
                                       l4268 0F56                                         l3830 4E76  
                                       l3822 4E52                                         l3814 4E2C  
                                       l3806 4DFC                                         l3910 52B2  
                                       l3494 4B52                                         l3486 4B1A  
                                       l3478 4AE8                                         l3582 3376  
                                       l3566 3076                                         l3574 31AE  
                                       l3558 2EDA                                         l3590 5408  
                                       l4198 3872                                         l3902 50F0  
                                       l4470 23A2                                         l4454 22A0  
                                       l4462 2314                                         l4446 223A  
                                       l4438 21AC                                         l4390 1EB0  
                                       l4382 1E7A                                         l4374 1DD2  
                                       l3398 3E62                                         l3750 1B46  
                                       l3734 1A40                                         l3742 1AB8  
                                       l3726 19AE                                         l3718 191E  
                                       l3670 1662                                         l3654 4172  
                                       l3638 40CA                                         l4366 15F6  
                                       l4358 1562                                         l4294 1122  
                                       l4286 109C                                         l4278 0FF4  
                                       l3824 4E58                                         l3816 4E32  
                                       l3808 4E0E                                         l3912 52C8  
                                       l3496 4B5C                                         l3488 4B30  
                                       l3584 3394                                         l3576 31C6  
                                       l3568 30DA                                         l3920 2448  
                                       l3592 540E                                         l3904 50F2  
                                       l4464 2332                                         l4456 22B8  
                                       l4480 2430                                         l4392 1EC8  
                                       l4384 1E96                                         l4376 1E0A  
                                       l4368 1D96                                         l3760 1BC4  
                                       l3744 1AD6                                         l3736 1A58  
                                       l3728 19E6                                         l3680 16EA  
                                       l3672 167A                                         l3656 417E  
                                       l3664 41C0                                         l3648 4126  
                                       l4296 113A                                         l4288 10D4  
                                       l4800 2BAA                                         l4720 2A0A  
                                       l3818 4E48                                         l3826 4E5E  
                                       l3914 52D6                                         l3498 4B7A  
                                       l3586 33A0                                         l3578 3260  
                                       l3930 24C6                                         l3922 245E  
                                       l3594 5410                                         l3906 50FC  
                                       l4474 23E2                                         l4466 2352  
                                       l4458 22F0                                         l4394 1ED0  
                                       l4386 1E9A                                         l4378 1E2A  
                                       l3770 1C5E                                         l3762 1BFC  
                                       l3746 1AF6                                         l3754 1B6E  
                                       l3738 1A90                                         l3690 1772  
                                       l3682 170A                                         l3674 169A  
                                       l3666 163C                                         l3658 418E  
                                       l4298 1176                                         l4810 2BE8  
                                       l4802 2BB2                                         l4730 2A30  
                                       l4722 2A10                                         l3828 4E6E  
                                       l3916 52EC                                         l3908 52A8  
                                       l3940 2542                                         l3932 24E6  
                                       l3924 246A                                         l3596 5412  
                                       l3588 53FE                                         l3860 5338  
                                       l4476 23E6                                         l4468 236A  
                                       l4396 1ED2                                         l4388 1EA0  
                                       l3780 1D06                                         l3772 1C76  
                                       l3756 1B8C                                         l3748 1B0E  
                                       l3692 1776                                         l3684 1722  
                                       l3676 16B2                                         l3668 1642  
                                       l4820 2C18                                         l4812 2BEE  
                                       l4804 2BB6                                         l4740 2A58  
                                       l4732 2A40                                         l4724 2A14  
                                       l4716 29FE                                         l3790 4DBC  
                                       l3950 25CA                                         l3942 255A  
                                       l3934 24FE                                         l3926 248C  
                                       l3918 2442                                         l3598 5414  
                                       l3870 536A                                         l3862 533C  
                                       l4478 2418                                         l4398 1EEE  
                                       l3782 1D22                                         l3774 1CAE  
                                       l3758 1BAC                                         l3766 1C20  
                                       l3694 17BC                                         l3686 173E  
                                       l3678 16D2                                         l4822 2C36  
                                       l4830 2C5E                                         l4814 2BF2  
                                       l4806 2BC8                                         l4750 2A76  
                                       l4742 2A5E                                         l4734 2A44  
                                       l4726 2A20                                         l4718 2A0A  
                                       ?_max 0010                                         l3792 4DC0  
                                       l3960 2652                                         l3952 25D6  
                                       l3944 257C                                         l3936 2514  
                                       l3928 24A4                                         l3864 5346  
                                       l3880 5584                                         l3872 556C  
                                       l3784 1D26                                         l3768 1C3E  
                                       l3696 17D4                                         l3688 1756  
                                       l4840 2CDE                                         l4824 2C3E  
                                       l4816 2C04                                         l4832 2C6A  
                                       l4808 2BE4                                         l4760 2A8E  
                                       l4752 2A7E                                         l4744 2A62  
                                       l4736 2A48                                         l4728 2A2C  
                                       l3858 5370                                         l3794 4DCE  
                                       l3970 26C6                                         l3962 266A  
                                       l3954 25F8                                         l3946 259C  
                                       l3938 2520                                         l3866 5356  
                                       l3890 50AA                                         l3882 5586  
                                       l3874 5576                                         l3786 1D6C  
                                       l3778 1CEE                                         l3698 17DC  
                                       l4850 2E0C                                         l4842 2CFC  
                                       l4834 2C7C                                         l4826 2C42  
                                       l4818 2C10                                         l4770 2AAE  
                                       l4762 2A96                                         l4754 2A82  
                                       l4746 2A66                                         l4738 2A4C  
                                main@curMove 01B3                                         l3796 4DD6  
                                       l3980 2742                                         l3972 26E8  
                                       l3964 2680                                         l3956 2610  
                                       l3948 25B4                                         l3868 5360  
                                       l3892 50CE                                         l3884 5070  
                                       l3876 5578                                         l3788 1D84  
                                       l4860 2E26                                         l4852 2E14  
                                       l4844 2DA6                                         l4836 2C80  
                                       l4828 2C54                                         l4780 2AC6  
                                       l4772 2AB2                                         l4764 2A9E  
                                       l4756 2A86                                         l4748 2A6E  
                                       ?_min 0010                                         l3798 4DDA  
                                       l3990 27D6                                         l3982 2764  
                                       l3974 2708                                         l3966 268C  
                                       l3958 2632                                         l3894 50D8  
                                       l3886 5080                                         l3878 5582  
                                       l4870 2EA2                                         l4862 2E2A  
                                       l4854 2E18                                         l4846 2DB6  
                                       l4838 2CD2                                         l4790 2B78  
                                       l4782 2AE0                                         l4774 2ABA  
                                       l4766 2AA6                                         l4758 2A8A  
                                       l3992 27EC                                         l3984 277C  
                                       l3976 2720                                         l3968 26AE  
                                       l3896 50DA                                         l3888 50A6  
                                       l4872 2EA6                                         l4856 2E1E  
                                       l4848 2E00                                         l4864 2E30  
                                       l4792 2B92                                         l4784 2AF8  
                                       l4776 2ABE                                         l4768 2AAA  
                                       l3994 27F8                                         l3986 279E  
                                       l3978 2736                                         l3898 50E4  
                                       l4866 2E42                                         l4874 2EB0  
                                       l4858 2E22                                         l4794 2B96  
                                       l4786 2B4E                                         l4778 2AC2  
                                       l3996 281A                                         l3988 27BE  
                                       l4876 2EC4                                         l4868 2E46  
                                       l4796 2B9A                                         l4788 2B72  
                                       l3998 2832                                         l4798 2B9E  
                                       u2000 5320                                         u2001 5318  
                                       u2100 485E                                         u2020 53BC  
                                       u2101 485A                                         u2021 53B8  
                                       u2110 48A2                                         u2030 53E8  
                                       u2111 489E                                         u2031 53E4  
                                       u2120 48B6                                         u2040 465C  
                                       u2200 3EDA                                         u3000 3768  
                                       u2121 48B2                                         u2041 4658  
                                       u2201 3ED6                                         u3001 3764  
                                       u2130 494A                                         u2050 4684  
                                       u2018 5322                                         u3010 37C4  
                                       u2210 3F1E                                         u2131 4946  
                                       u2051 4680                                         u3011 37C0  
                                       u2211 3F1A                                         u2060 46C8  
                                       u2300 4AF6                                         u3100 3984  
                                       u3020 37FC                                         u2140 447C  
                                       u2220 3F32                                         u2061 46C4  
                                       u2301 4AF2                                         u3101 3980  
                                       u3021 37F8                                         u2141 4478  
                                       u2221 3F2E                                         u2070 46DC  
                                       u2310 4B30                                         u3110 39B6  
                                       u3030 381E                                         u2150 44A4  
                                       u2230 3FC6                                         u2071 46D8  
                                       u2311 4B2C                                         u3111 39B2  
                                       u3031 381A                                         u2151 44A0  
                                       u2231 3FC2                                         u2080 4770  
                                       u2320 4B52                                         u2240 5206  
                                       u3200 3B1C                                         u3120 39D8  
                                       u3040 3850                                         u2160 44DA  
                    color_calibration@orange 0084                                 _BAUD4CONbits 0EE9  
                                       u2081 476C                                         u2321 4B4E  
                                       u2241 5202                                         u3201 3B18  
                                       u3121 39D4                                         u3041 384C  
                                       u2161 44D6                                         u2090 4836  
                                       u2330 4B7A                                         u2250 5240  
                                       u2410 3394                                         u3210 3B2E  
                                       u3130 39F2                                         u3050 3872  
                                       u2170 44EE                                         u2091 4832  
                                       u2331 4B76                                         u2251 523C  
                                       u2411 3390                                         u3211 3B2A  
                                       u3131 39EE                                         u3051 386E  
                                       u2171 44EA                                         u2420 55B4  
                                       u2340 4BAC                                         u2260 4FF2  
                                       u3220 3B50                                         u3140 3A14  
                                       u3060 38B2                                         u2180 4582  
                                       u2500 188C                                         u3300 1546  
                                       u2421 55B0                                         u2341 4BA8  
                                       u2261 4FEE                                         u2405 3296  
                                       u3221 3B4C                                         u3141 3A10  
                                       u3061 38AE                                         u2181 457E  
                                       u2501 1888                                         u3301 1542  
                                       u2270 5014                                         u2350 3060  
                                       u3150 3A2A                                         u3070 38EA  
                                       u3310 1EB0                                         u2190 3EB2  
                                       u2510 191E                                         u2430 40A2  
                                       u3230 0E14                                         u2271 5010  
                                       u2351 305C                                         u3151 3A26  
                                       u3071 38E6                                         u3311 1EAC  
                                       u2191 3EAE                                         u2511 191A  
                                       u2431 409E                                         u4007 0EAA  
                                       u3231 0E10                                         u2600 4E0E  
                                       u2280 503C                                         u2360 3076  
                                       u3160 3A3C                                         u3080 3922  
                                       u3400 2440                                         u3320 1EEE  
                                       u2520 1A20                                         u2440 40CA  
                                       u3240 0EEA                                         u2601 4E0A  
                                       u2281 5038                                         u2361 3072  
                                       u3161 3A38                                         u3081 391E  
                                       u3401 243C                                         u3321 1EEA  
                                       u2521 1A1C                                         u2441 40C6  
                                       u4017 0F10                                         u3241 0EE6  
                                       u2610 4E2C                                         u2290 4AD4  
                                       u2370 30F0                                         u3170 3A96  
                                       u3090 395A                                         u3330 1F80  
                                       u2530 1AD6                                         u2450 410E  
                                       u3250 0FC0                                         _T2PR 0FBC  
                                       u2611 4E28                                         u2291 4AD0  
                                       u2371 30EC                                         u3171 3A92  
                                       u3091 3956                                         u3331 1F7C  
                                       u2531 1AD2                                         u2451 410A  
                                       u4107 1168                                         u3251 0FBC  
                                       u4027 0F48                                         u2620 4E48  
                                       u1900 5154                                         u2380 31C6  
                                       u3180 3AB0                                         u3340 2012  
                                       u2540 1B8C                                         u2460 4122  
                                       u3260 1106                                         u2621 4E44  
                                       u1901 5150                                         u2381 31C2  
                                       u2701 2478                                         u3181 3AAC  
                                       u3341 200E                                         u2541 1B88  
                                       u2461 411E                                         u4117 11A0  
                                       u3261 1102                                         u4037 0F80  
                                       u2630 4E6E                                         u1910 4972  
                                       u2390 3278                                         u2710 2510  
                                       u3190 3B06                                         u3350 2114  
                                       u2550 1C3E                                         u2470 41B6  
                                       u3270 1218                                         u2631 4E6A  
                                       u1911 496E                                         u5007 473E  
                                       u2391 3274                                         u2711 250C  
                                       u3191 3B02                                         u3351 2110  
                                       u2551 1C3A                                         u2471 41B2  
                                       u4207 13F8                                         u3271 1214  
                                       u4127 11D8                                         u4047 0FE6  
                                       u1920 4A3C                                         u3360 21CA  
                                       u2560 1D6C                                         u2480 17BC  
                                       u3280 132A                                         u1921 4A38  
                                       u5017 4804                                         u2801 2806  
                                       u2721 252E                                         u3361 21C6  
                                       u2561 1D68                                         u2481 17B8  
                                       u4217 145E                                         u3281 1326  
                                       u4137 123E                                         u4057 101E  
                                       u2810 289E                                         u2730 25C6  
                                       u3370 2280                                         u2570 1D94  
                                       u2490 17FA                                         u3290 1438  
                                       u5027 4870                                         u2811 289A  
                                       u2731 25C2                                         u3371 227C  
                                       u2571 1D90                                         u2491 17F6  
                                       u4307 166C                                         u4227 1496  
                                       u3291 1434                                         u4147 127A  
                                       u4067 1056                                         u2580 4DCE  
                                       u2900 3CD2                                         u1860 5460  
                                       u3380 2332                                         u2581 4DCA  
                                       u5037 4918                                         u2901 3CCE  
                                       u1861 545C                                         u2821 28BC  
                                       u2741 25E4                                         u3381 232E  
                                       u4317 16A4                                         u4237 14CE  
                                       u4157 12B2                                         u4077 108E  
                                       u3701 2A26                                         u2590 4DE8  
                                       u2670 52D6                                         u1870 5476  
                                       u1950 54D8                                         u2830 2954  
                                       u2750 267C                                         u3390 2418  
                                       u2910 347E                                         u3710 2AD8  
                                       u2591 4DE4                                         u2671 52D2  
                                       u1871 5472                                         u1951 54D4  
                                       u2831 2950                                         u2751 2678  
                                       u3391 2414                                         u4407 1980  
                                       u4327 16DC                                         u4247 1506  
                                       u4167 12EA                                         u4087 10C6  
                                       u2911 347A                                         u3711 2AD4  
                                       u2680 52EC                                         u1880 511A  
                                       u1960 4D92                                         u2920 34A6  
                                       u3720 2C04                                         u2681 52E8  
                                       u1881 5116                                         u2841 2972  
                                       u2761 269A                                         u1961 4D8E  
                                       u4417 19B8                                         u4337 1714  
                                       u4257 156C                                         u4177 1350  
                                       u4097 112C                                         u2921 34A2  
                                       u3801 2D4E                                         u3721 2C00  
                                       u1890 5138                                         u2850 3C4E  
                                       u2770 2732                                         u2690 245A  
                                       u1970 4DBA                                         u2930 34EA  
                                       u3730 2C36                                         u1891 5134  
                                       u2851 3C4A                                         u2771 272E  
                                       u2691 2456                                         u1971 4DB6  
                                       u4507 1CA0                                         u4427 19F0  
                                       u4347 1748                                         u4267 15E8  
                                       u4187 1388                                         u2931 34E6  
                                       u3811 2D60                                         u3731 2C32  
                                       u2860 3C5C                                         u1980 4C24  
                                       u2940 34FE                                         u3740 2C7C  
                                       u2861 3C58                                         u2781 2750  
                                       u1981 4C20                                         u4517 1CF8  
                                       u4437 1A4A                                         u4357 1824  
                                       u4277 4070                                         u4197 13C0  
                                       u2941 34FA                                         u3821 2D72  
                                       u3741 2C78                                         u2870 3C6A  
                                       u2790 27E8                                         u1990 4CB6  
                                       u2950 3592                                         u2871 3C66  
                                       u2791 27E4                                         u1991 4CB2  
                                       u4607 1F50                                         u4527 3E80  
                                       u4447 1A82                                         u4367 185C  
                                       u4287 40DC                                         u2951 358E  
                                       u3831 2D84                                         u3751 2CE8  
                                       u2880 3C82                                         u2960 3654  
                                       u2881 3C7E                                         u4617 1FAA  
                                       u4537 3EEC                                         u4457 1B00  
                                       u4377 18B6                                         u4297 4184  
                                       u2961 3650                                         u3841 2D96  
                                       u3761 2D06                                         u3681 2A04  
                                       u2890 3CA0                                         u2970 367C  
                                       u3850 2E42                                         u2891 3C9C  
                                       u4707 222C                                         u4627 1FE2  
                                       u4547 3F94                                         u4467 1B38  
                                       u4387 18EE                                         u2971 3678  
                                       u3851 2E3E                                         u3771 2D18  
                                       u3907 2BBE                                         u3691 2A1A  
                                       u2980 36C0                                         u3860 2EC4  
                                       u4717 22AA                                         u4637 203C  
                                       u4557 1DC4                                         u4477 1BB6  
                                       u4397 1948                                         u2981 36BC  
                                       u3861 2EC0                                         u3781 2D2A  
                                       u3917 2C4A                                         u2990 36D4  
                                       u3870 2ED6                                         u4807 534C  
                                       u4727 22E2                                         u4647 2074  
                                       u4567 1DFC                                         u4487 1BEE  
                                       u2991 36D0                                         u3927 344C  
                                       u3871 2ED2                                         u3791 2D3C  
                                       u4817 4EE8                                         u4737 235C  
                                       u4657 20AC                                         u4577 1E34  
                                       u4497 1C68                                         u3937 34B8  
                                       u4907 3B8A                                         u4827 24F0  
                                       u4747 2394                                         u4667 20E4  
                                       u4587 1E6C                                         u3947 3560  
                                       u4917 3BCA                                         u4837 25A6  
                                       u4757 4C86                                         u4677 213E  
                                       u4597 1F18                                         u3957 3622  
                                       u4927 3C0A                                         u4847 265C  
                                       u4767 444A                                         u4687 2176  
                                       u3967 368E                                         u3887 2AEC  
                                       u4937 3CB6                                         u4857 2712  
                                       u4777 44B6                                         u4697 21F4  
                                       u3977 3736                                         u3897 2B84  
                                       u4947 3D16                                         u4867 27C8  
                                       u4787 4550                                         u3987 0E3A  
                                       u4957 3D56                                         u4877 287E  
                                       u4797 4D60                                         u3997 0E72  
                                       u4967 3D96                                         u4887 2934  
                                       u4977 3DDE                                         u4897 29EA  
                                       u4987 462A                                         u4997 4696  
                    color_calibration@yellow 0080                  lostReturnHome@straightSpeed 003B  
                                       _main 29FE                                         _move 0E02  
                                       _lost 00F4                                         fsr1h 0FE2  
                         i2___lwdiv@quotient 0005                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         max@a 0010  
                                       max@b 0012                                         btemp 004F  
                                       _stop 4BCE                                         min@a 0010  
                                       min@b 0012                                         prodh 0FF4  
                                       prodl 0FF3                                         start 0058  
                           color_detect@blue 0026                          main@reverseDuration 017D  
                           __end_of_ADC_init 55A4                         ?i2_color_writetoaddr 0003  
                           color_detect@pink 0032                              __end_of_HighISR 550C  
                      lostReturnHome@curMove 003A                                 ___param_bank 0000  
                       __end_of_batteryLevel 52F6                                        ??_max 0014  
                                      ??_min 0014                              __end_of___aldiv 4BCE  
                                      ?_main 0001                                        _ADPCH 0F5F  
                            __end_of___awdiv 4E80                                        ?_move 0060  
                            __end_of___lldiv 5070                                        ?_stop 0023  
                            ___awdiv@divisor 0012                              __end_of___lwdiv 5174  
                                      i1l365 0048                                        i2l152 556A  
                                      i2l149 4FCA                                        i2l270 549E  
                                      i2l273 5620                                        i2l282 55E4  
                                      i2l267 5478                                        i2l279 5616  
                                      i2l359 5508                              ___awdiv@counter 0014  
                             ??_color_detect 0060                                        _TMR0H 0FD4  
                                      _TMR0L 0FD3                          ___lmul@multiplicand 0014  
                 __end_of_I2C_2_Master_Start 5604                   __end_of_I2C_2_Master_Write 55DA  
                                 _Buggy_init 5370                   color_calibration@lightblue 0086  
                     returnHome@straightRamp 003E                       returnHome@straightTime 0038  
                                      tablat 0FF5                                        plusw0 0FEB  
                                      plusw2 0FDB                                        ttemp5 0050  
                                      ttemp6 0053                                        ttemp7 0057  
                                      stop@i 002B                                        status 0FD8  
                                      wtemp8 0050                            color_detect@color 004A  
                          color_detect@green 0020                            color_detect@white 0044  
                      ??i2_color_writetoaddr 0004                                 main@turnRamp 01B0  
                      _I2C_2_Master_RepStart 5604                              __initialization 5252  
                  get16bitTMR0val@timer_high 0016                                 __end_of_main 2EDA  
                               __end_of_move 163C                                 __end_of_stop 4CD6  
                        move@reverseDuration 006B                              _get16bitTMR0val 5428  
                                     ??_main 008A                                       ??_move 0049  
                                     ??_stop 0028                                __activetblptr 0000  
                              calibration@mL 0031                                calibration@mR 0033  
                     returnHome@turnDuration 0040                                 ?_setMotorPWM 001D  
                                     _ADRESH 0F64                                       _CCPR1H 0FAA  
                                     _CCPR2H 0FA6                                       _CCPR3H 0F25  
                                     _CCPR4H 0F21                             ___awdiv@dividend 0010  
                     lostReturnHome@turnRamp 0041                                       _RC0PPS 0E62  
                     wallAdjust@straightRamp 0028                                       _RE2PPS 0E74  
                                     _RC7PPS 0E69                                       _RD5PPS 0E6F  
                                     _RE4PPS 0E76                                       _RD6PPS 0E70  
                                     i2l1280 51DE                                       i2l1287 51E6  
                                     i2l3154 5478                                       i1l4674 0026  
                                     i2l3156 5488                                       i1l4676 0036  
                                     i1l4678 0044                                       i2l3520 5612  
                                     i2l3514 5618                                       i2l3522 55DC  
                                     i2l3516 561C                                       i2l3524 55E0  
                                     i2l4500 4FB6                                       i2l3518 560E  
                                     i2l4502 4FC0                                       i2l3840 518E  
                                     i2l3850 51C8                                       i2l3842 5196  
                                     i2l3834 554E                                       i2l4490 4F26  
                                     _RG6PPS 0E88                                       i2l3852 51D0  
                                     i2l3844 519E                                       i2l3836 5174  
                                     i2l4492 4F88                                       i2l3854 51D2  
                                     i2l3846 51AC                                       i2l3838 517C  
                                     i2l4494 4F98                                       i2l4670 5500  
                                     i2l3856 51D8                                       i2l3848 51B2  
                                     i2l4496 4FA2                                       i2l4672 5504  
                                     i2l4498 4FAC                                       i2l4666 54EA  
                                     i2l4668 54FA                                    ??_HighISR 000D  
                   __end_of_color_click_init 5370                                       _RX4PPS 0E15  
                              main@lightblue 01A3                                       _LowISR 0018  
                               ??_ADC_getval 0010                                ??_Timer0_init 0010  
                        calibration@turnRamp 0038                      calibration@turnDuration 0036  
                               _CCPTMRS0bits 0FAD                                       ___lmul 51E8  
                                  ??___aldiv 0024                                       ___wmul 54A0  
                                  ??___awdiv 0014                                    ??___lldiv 0024  
                                  ??___lwdiv 001A                                       clear_0 5278  
                                     clear_1 5284                                       clear_2 5290  
                           ___awdiv@quotient 0016                                       isa$std 0001  
                    returnHome@straightSpeed 003B                                       move@mL 0060  
                                     move@mR 0062                            __end_ofi2___lwdiv 51E8  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                  ?_ADC_init 0001                                       stop@mL 0023  
                                     stop@mR 0025                                  ?_Buggy_init 0001  
                          ??_initDCmotorsPWM 0012                           __end_of_ADC_getval 55BC  
                 i2color_writetoaddr@address 0004                             __end_of_turnLeft 4956  
                         color_detect@orange 0038                   lostReturnHome@moveSequence 0036  
                                 __accesstop 0060                      __end_of__initialization 529E  
                         color_detect@yellow 002C                              fullSpeedAhead@i 002C  
                              main@turnSpeed 01AF                       ?_I2C_2_Master_RepStart 0001  
                              ___rparam_used 0001                         __end_of_color_detect 3B58  
                  reverseShort@straightSpeed 0027                lostReturnHome@reverseDuration 003C  
                            _Interrupts_init 55BC                               __pcstackCOMRAM 0001  
                    __end_of_get16bitTMR0val 5450                                 ?_white_Light 0001  
                               __pidataBANK0 5622                     get16bitTMR0val@timer_low 0014  
                   get16bitTMR0val@timer_val 0018                 ?_color_clear_init_interrupts 0001  
                           _reverseOneSquare 43C4                          __end_of_Timer0_init 554C  
                             main@ambientNew 017B            reverseWallAdjust@reverseWallSpeed 002D  
                                 ??_ADC_init 0010                                 rgb_2_hsv@HSV 0032  
                               _batteryLevel 52A8                                   __pbssBANK0 00B8  
                                 __pbssBANK1 01D8                                   __pbssBANK2 0200  
                             _rgb_2_hsv$3590 0060                               _rgb_2_hsv$3588 0066  
                             _rgb_2_hsv$3589 0068                                      ?_LowISR 0001  
                          _color_writetoaddr 550C                                 _T2CLKCONbits 0FBF  
                             _lostReturnHome 1D96                     reverseShort@straightRamp 0028  
             reverseWallAdjust@straightSpeed 0027                           ?_color_writetoaddr 0012  
                                    ?___lmul 0010                                      ?___wmul 0010  
                   wallAdjust@adjustDuration 002C                               ___lmul@product 0018  
              ??_color_clear_init_interrupts 001D                                  move@curMove 0069  
                    lostReturnHome@turnSpeed 003F                          ??_color_writetoaddr 0013  
                    wallAdjust@straightSpeed 0027                                      _SP4BRGH 0EE6  
                                    _SP4BRGL 0EE5                   fullSpeedAhead@straightRamp 0028  
                      turnRight@turnDuration 0028                                      _SSP2ADD 0ED6  
                                    _SSP2BUF 0ED5                             _brightnessChange 00F5  
                                 _color_read 41D6                      __end_of_Interrupts_init 55CE  
                     color_writetoaddr@value 0012                                      _HighISR 0008  
                  __end_of_color_writetoaddr 552C                       __end_of_lostReturnHome 2442  
                                  _ADREFbits 0F58                           _I2C_2_Master_Start 55FA  
                                 _initUSART4 556C                          i2_I2C_2_Master_Idle 5478  
                         _I2C_2_Master_Write 55CE                                      __Hparam 0000  
                        i2_I2C_2_Master_Stop 560E                                      __Lparam 0000  
                                wallAdjust@i 002F                                  _Timer0_init 552C  
                       calibration@turnSpeed 0035                             ?_get16bitTMR0val 0010  
                                    ___aldiv 4AC2                                      ___awdiv 4DBC  
                            lostReturnHome@i 0046                                      ___lldiv 4FCC  
                              ??_calibration 0039                          ?_I2C_2_Master_Start 0001  
                                    ___lwdiv 5100                          ?_I2C_2_Master_Write 0001  
                               __psmallconst 0E00                                      _ambient 00FA  
                                    __pcinit 5252                                      __ramtop 0E00  
                                  ?_turnLeft 0023                            __end_of_rgb_2_hsv 33B6  
                                    __ptext0 29FE                                      __ptext1 33B6  
                                    __ptext2 0E02                                      __ptext3 3FE6  
                                    __ptext4 163C                                      __ptext5 3DF2  
                                    __ptext6 1D96                                      __ptext7 4BCE  
                                    __ptext8 43C4                                      __ptext9 55E6  
                       ?i2_I2C_2_Master_Idle 0001                                    _T2CONbits 0FBD  
                              ?_reverseShort 0023                         ?i2_I2C_2_Master_Stop 0001  
                           ___aldiv@dividend 001C                                    _T2HLTbits 0FBE  
                              _RxBufWriteCnt 004E                                      main@HSV 01B6  
                                    main@buf 008C                                      main@red 017F  
                       ??_I2C_2_Master_Start 0011                         ??_I2C_2_Master_Write 0011  
                             __pintcode_body 54EA                         end_of_initialization 529E  
            ??i2_color_clear_init_interrupts 0008                  __end_ofi2_color_writetoaddr 556C  
                           ADC_getval@tmpval 0010                   reverseWallAdjust@cur_power 0030  
                          reverseOneSquare@i 002E                                      int_func 54EA  
                          ?_color_click_init 0001                              ?_lostReturnHome 0032  
                                 _wallAdjust 33B6                              ___lldiv@divisor 0020  
                                 _resetTimer 55E6                           ??_color_click_init 0022  
                            ___lldiv@counter 0028                             ___aldiv@quotient 0026  
                 batteryLevel@batteryQuarter 0019                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc1 0FE6                                      postinc2 0FDE  
                 batteryLevel@batteryVoltage 0018                                   main@F14662 01D8  
                                 main@F14664 0200                                   main@F14656 00B8  
                                 main@F14667 00F6                                   _returnHome 163C  
                            _initDCmotorsPWM 5070                                   ??_turnLeft 002A  
                                  _PORTFbits 0F8E                           setMotorPWM@negDuty 0022  
                             ??_reverseShort 0029                        ??i2_I2C_2_Master_Idle 0001  
                              move@turnSpeed 006E                            __end_of_turnRight 477C  
                      ??i2_I2C_2_Master_Stop 0002                          __end_of_calibration 3DF2  
                               _color_detect 3788                                  returnHome@i 0048  
                                  _TRISAbits 0F81                           setMotorPWM@posDuty 0021  
                                  _TRISBbits 0F82                                    _TRISCbits 0F83  
                                  _TRISDbits 0F84                                    _TRISEbits 0F85  
                                  _TRISFbits 0F86                                    _TRISGbits 0F87  
                                  _TRISHbits 0F88                             white_Light@state 0010  
                               ??_Buggy_init 0010                             fullSpeedAhead@mL 0023  
                           fullSpeedAhead@mR 0025                                  ?_color_read 0014  
                          i2___lwdiv@divisor 0003                     color_writetoaddr@address 0013  
                                  i2___lwdiv 5174                      ??_I2C_2_Master_RepStart 0011  
                          i2___lwdiv@counter 0007                     __end_of_reverseOneSquare 45A2  
                           ?_Interrupts_init 0001                                stop@cur_power 002D  
                                _CCP1CONbits 0FAB                       color_calibration@green 007C  
                               _EUSART4RXbuf 00E0                          returnHome@turnSpeed 003F  
                               _EUSART4TXbuf 0252                                  _CCP2CONbits 0FA7  
                     color_calibration@white 0088                                  _CCP3CONbits 0F26  
                 lostReturnHome@straightRamp 003E                   lostReturnHome@straightTime 0038  
                                ?_initUSART4 0001                                   main@orange 019D  
                                _CCP4CONbits 0F22                                   main@motorL 01CE  
                                 main@motorR 01C4                                   main@yellow 0191  
                             __end_of_LowISR 0058                               color_read@RGBC 0014  
                             _fullSpeedAhead 4CD6                               __end_of___lmul 5252  
                       turnLeft@turnDuration 0028                               __end_of___wmul 54C6  
                         __end_of_Buggy_init 53A6                          start_initialization 5252  
                                __end_of_max 53FE                                  __end_of_min 53D2  
                              _TxBufWriteCnt 004C                   lostReturnHome@turnDuration 0040  
                                 rgb_2_hsv@b 0074                                   rgb_2_hsv@g 0072  
                                 ?i2___lwdiv 0001                                   rgb_2_hsv@r 006A  
                           move@moveSequence 0065                          wallAdjust@cur_power 0031  
      __end_ofi2_color_clear_init_interrupts 4FCC                i2_color_clear_init_interrupts 4F26  
                          _reverseWallAdjust 3DF2                                  ?_wallAdjust 0023  
                                ?_resetTimer 0001                                     ??_LowISR 000D  
                         ?_reverseWallAdjust 0023                      __end_of_initDCmotorsPWM 5100  
                     __end_of_fullSpeedAhead 4DBC                           turnRight@cur_power 002F  
                                   ??___lmul 0018                                rgb_2_hsv@RGBC 002A  
                                   ??___wmul 0014                                  __pdataBANK0 00F6  
                              rgb_2_hsv@diff 006E                i2I2C_2_Master_Write@data_byte 0002  
                                _calibration 3B58                                rgb_2_hsv@cmax 006C  
                              rgb_2_hsv@cmin 0064                          ??_reverseWallAdjust 0029  
                                ?_returnHome 0032                          wallAdjust@wallSpeed 002E  
               reverseOneSquare@straightRamp 002A                 __end_ofi2_I2C_2_Master_Start 5622  
               __end_ofi2_I2C_2_Master_Write 55E6                            turnLeft@cur_power 002F  
                                __pbssCOMRAM 004B                                __pcstackBANK0 0060  
                              __pcstackBANK1 0100                    __end_of_reverseWallAdjust 3FE6  
                                   ?_HighISR 0001                         __end_of_reverseShort 41D6  
                           stop@straightRamp 0027                             ___lwdiv@dividend 0016  
                               ?_Timer0_init 0001                              ?_fullSpeedAhead 0023  
                                  __pintcode 0008                                     ?___aldiv 001C  
                         turnRight@turnSpeed 0027                                     ?___awdiv 0010  
                                   ?___lldiv 001C                                     ?___lwdiv 0016  
           reverseShort@shortReverseDuration 002C                                  __pintcodelo 0018  
                       I2C_2_Master_Read@ack 0012                         I2C_2_Master_Read@tmp 0013  
                                __smallconst 0E00                               reverseShort@mL 0023  
                             reverseShort@mR 0025                             main@moveSequence 0152  
                          _I2C_2_Master_Idle 5450                            _I2C_2_Master_Init 53FE  
                          _I2C_2_Master_Read 52F6                            turnLeft@turnSpeed 0027  
                          _I2C_2_Master_Stop 55F0                                    _rgb_2_hsv 2EDA  
                               _RxBufReadCnt 004D                                     _ADC_init 558A  
                         ?_I2C_2_Master_Idle 0001                           ?_I2C_2_Master_Init 0001  
                         ?_I2C_2_Master_Read 0001                                ??_setMotorPWM 001F  
                         ?_I2C_2_Master_Stop 0001                             ___lwdiv@quotient 001A  
                   initDCmotorsPWM@PWMperiod 0010                                  ??i2___lwdiv 0005  
                           ??_lostReturnHome 0042                            move@straightSpeed 006A  
                            ___aldiv@divisor 0020                          ??_I2C_2_Master_Idle 0010  
                            ___aldiv@counter 0024                          ??_I2C_2_Master_Init 0010  
                        ??_I2C_2_Master_Read 0011                               ___wmul@product 0014  
                                   _LATAbits 0F79                          ??_I2C_2_Master_Stop 0011  
                                   _LATCbits 0F7B                                     _LATDbits 0F7C  
                                   _LATEbits 0F7D                                     _LATFbits 0F7E  
                                   _LATGbits 0F7F                                     _LATHbits 0F80  
                                   _IPR0bits 0E1F                                     _PIE0bits 0E29  
                                   _PIE4bits 0E2D                                     i1u363_20 0036  
                                   i1u363_21 0032                                  turnRight@mL 0023  
                                turnRight@mR 0025                                     _PIR0bits 0E33  
                                   i2u264_40 518E                                     i2u264_41 518A  
                                   i2u504_47 4F8E                                     i2u265_40 51AC  
                                   i2u193_40 5488                                     i2u265_41 51A8  
                                   i2u193_41 5484                                     i2u266_40 51C8  
                                   i2u194_40 549E                                     i2u362_40 54FA  
                                   i2u266_41 51C4                                     i2u194_41 549A  
                                   i2u362_41 54F6                             ?_initDCmotorsPWM 0010  
                fullSpeedAhead@straightSpeed 0027          __end_of_color_clear_init_interrupts 4F26  
             ?i2_color_clear_init_interrupts 0001                  _color_clear_init_interrupts 4E80  
                                   _SSP2CON2 0EDA                                     _SSP2STAT 0ED8  
                               move@turnRamp 0070                                   _ADCON0bits 0F60  
                  __end_of_I2C_2_Master_Idle 5478                        color_calibration@RGBC 0076  
                  __end_of_I2C_2_Master_Init 5428                    __end_of_I2C_2_Master_Read 5338  
                          ___wmul@multiplier 0010                    __end_of_I2C_2_Master_Stop 55FA  
   color_clear_init_interrupts@low_threshold 0020   i2color_clear_init_interrupts@low_threshold 000B  
                               setMotorPWM@m 001D                  I2C_2_Master_Write@data_byte 0011  
                      color_calibration@blue 007E                           returnHome@turnRamp 0041  
                                  main@color 01B2                        color_calibration@pink 0082  
                                  main@green 0185                                    main@white 01A9  
                                 ?_rgb_2_hsv 002A                                 _TxBufReadCnt 004B  
                   i2color_writetoaddr@value 0003                                    _turnRight 45A2  
                  returnHome@reverseDuration 003C                                 ??_color_read 0016  
                          ___lmul@multiplier 0010                                    copy_data0 5266  
              __end_of_I2C_2_Master_RepStart 560E                            ?_reverseOneSquare 0023  
                        __end_of_setMotorPWM 4AC2                                 ??_initUSART4 0010  
                       i2_I2C_2_Master_Start 5618              reverseOneSquare@reverseDuration 0028  
                       i2_I2C_2_Master_Write 55DA                           ??_reverseOneSquare 002B  
                                   __Hrparam 0000                                   _ADC_getval 55A4  
                           main@testSequence 00B4                                     __Lrparam 0000  
                               wallAdjust@mL 0023                                 wallAdjust@mR 0025  
                              ??_white_Light 0010                  __end_ofi2_I2C_2_Master_Idle 54A0  
                __end_ofi2_I2C_2_Master_Stop 5618                             lostReturnHome@mL 0032  
                           lostReturnHome@mR 0034                           __end_of_color_read 43C4  
                                 _ANSELBbits 0E9A                                   _ANSELDbits 0EA7  
                                 _ANSELFbits 0EB4                                   _T0CON0bits 0FD5  
                                 _T0CON1bits 0FD6                            _color_calibration 2442  
              reverseOneSquare@straightSpeed 0027                              ___lwdiv@divisor 0018  
                     returnHome@moveSequence 0036                           __end_of_initUSART4 558A  
                            ___lwdiv@counter 001C                            turnRight@turnRamp 0029  
                                 ?_turnRight 0023                                     __ptext10 5428  
                                   __ptext11 4CD6                                     __ptext20 54C6  
                                   __ptext12 556C                                     __ptext21 2EDA  
                                   __ptext13 5070                                     __ptext30 55FA  
                                   __ptext22 53A6                                     __ptext14 3788  
                                   __ptext31 5604                                     __ptext23 53D2  
                                   __ptext15 5338                                     __ptext40 52A8  
                                   __ptext32 52F6                                     __ptext24 51E8  
                                   __ptext16 4E80                                     __ptext41 4DBC  
                                   __ptext33 5450                                     __ptext25 4FCC  
                                   __ptext17 550C                                     __ptext50 554C  
                                   __ptext42 558A                                     __ptext34 3B58  
                                   __ptext26 4AC2                                     __ptext18 53FE  
                                   __ptext51 55DA                                     __ptext43 55A4  
                                   __ptext35 45A2                                     __ptext27 41D6  
                                   __ptext19 2442                                     __ptext52 560E  
                                   __ptext44 552C                                     __ptext36 477C  
                                   __ptext28 55CE                                     __ptext53 5618  
                                   __ptext45 55BC                                     __ptext37 4956  
                                   __ptext29 55F0                                     __ptext54 5478  
                                   __ptext46 5370                                     __ptext38 54A0  
                                   __ptext55 5174                                     __ptext39 5100  
                                   __ptext49 4F26                                    move@color 0064  
                         ?_color_calibration 0076                                ?_batteryLevel 0001  
                               _SSP2CON1bits 0ED9                                 _SSP2CON2bits 0EDA  
                              reverseShort@i 002D                             turnLeft@turnRamp 0029  
                      reverseShort@cur_power 002F                                   turnLeft@mL 0023  
                                 turnLeft@mR 0025                          ??_color_calibration 0040  
                      ?i2_I2C_2_Master_Start 0001                                 ??_wallAdjust 0029  
                           move@straightRamp 006D                        ?i2_I2C_2_Master_Write 0001  
                           move@straightTime 0067                            returnHome@curMove 003A  
                               ??_resetTimer 0010                                   turnRight@i 002D  
                                   isa$xinst 0000                                   _RC4STAbits 0EE7  
              reverseWallAdjust@straightRamp 0028                                     main@RGBC 01BC  
                                   int$flags 004F                         color_calibration@HSV 0078  
                               ?_calibration 0031                                     main@blue 018B  
                       color_calibration@red 007A                                 ??_returnHome 0042  
                                   main@pink 0197                                     main@wall 017A  
                                   _turnLeft 477C                      fullSpeedAhead@cur_power 002E  
                        __end_of_white_Light 54EA                    __end_of_color_calibration 29FE  
                                 _INTCONbits 0FF2                                 _reverseShort 3FE6  
                  reverseOneSquare@cur_power 0030                                  ??_rgb_2_hsv 0034  
                         __end_of_wallAdjust 3788                           reverseOneSquare@mL 0023  
                         reverseOneSquare@mR 0025                           __end_of_resetTimer 55F0  
                           move@turnDuration 006F                               ??_batteryLevel 0018  
                                _setMotorPWM 4956                            ??_get16bitTMR0val 0012  
                                   intlevel1 0000                                     intlevel2 0000  
                           ___lldiv@dividend 001C                             ??_fullSpeedAhead 0029  
                         __end_of_returnHome 1D96                                    turnLeft@i 002D  
     reverseWallAdjust@reverseAdjustDuration 002C                                  ?_ADC_getval 0001  
                          main@straightSpeed 01B1                             _color_click_init 5338  
                      color_detect@lightblue 003E                                   _SSP2DATPPS 0E1D  
                           ___lldiv@quotient 0024                                   _SSP2CLKPPS 0E1C  
                               ___aldiv@sign 0025                                  ??_turnRight 002A  
                           main@straightRamp 01B4                             main@straightTime 0100  
                                 _TX4STAbits 0EE8                       ??i2_I2C_2_Master_Start 0002  
                     ??i2_I2C_2_Master_Write 0002                                 returnHome@mL 0032  
                               returnHome@mR 0034  
