

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 18:01:36 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 21/07/2023 GMT
    77                           ; 
    78                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F67K40 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataCOMRAM
   112   00454E                     __pidataCOMRAM:
   113                           	callstack 0
   114                           
   115                           ;initializer for _ambient
   116   00454E  01F4               	dw	500
   117                           
   118                           	psect	idataBANK0
   119   00454A                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for main@F14649
   123   00454A  04                 	db	4
   124   00454B  03                 	db	3
   125   00454C  09                 	db	9
   126   00454D  08                 	db	8
   127   000000                     _TRISCbits	set	3971
   128   000000                     _RC4STAbits	set	3815
   129   000000                     _SP4BRGH	set	3814
   130   000000                     _SP4BRGL	set	3813
   131   000000                     _TX4STAbits	set	3816
   132   000000                     _BAUD4CONbits	set	3817
   133   000000                     _TX4REG	set	3812
   134   000000                     _TRISBbits	set	3970
   135   000000                     _TRISAbits	set	3969
   136   000000                     _TRISEbits	set	3973
   137   000000                     _TRISGbits	set	3975
   138   000000                     _LATFbits	set	3966
   139   000000                     _TRISFbits	set	3974
   140   000000                     _TRISHbits	set	3976
   141   000000                     _TRISDbits	set	3972
   142   000000                     _LATEbits	set	3965
   143   000000                     _LATGbits	set	3967
   144   000000                     _LATHbits	set	3968
   145   000000                     _SSP2CON2bits	set	3802
   146   000000                     _TMR0IF	set	29085
   147   000000                     _TMR0IE	set	29005
   148   000000                     _RX4PPS	set	3605
   149   000000                     _SSP2CLKPPS	set	3612
   150   000000                     _SSP2DATPPS	set	3613
   151   000000                     _PIE0bits	set	3625
   152   000000                     _CCPR4H	set	3873
   153   000000                     _CCPR3H	set	3877
   154   000000                     _CCPR2H	set	4006
   155   000000                     _CCPR1H	set	4010
   156   000000                     _CCP1CONbits	set	4011
   157   000000                     _CCPTMRS0bits	set	4013
   158   000000                     _T2PR	set	4028
   159   000000                     _T2CONbits	set	4029
   160   000000                     _INTCONbits	set	4082
   161   000000                     _CCP2CONbits	set	4007
   162   000000                     _CCP3CONbits	set	3878
   163   000000                     _ADREFbits	set	3928
   164   000000                     _LATAbits	set	3961
   165   000000                     _LATDbits	set	3964
   166   000000                     _PORTFbits	set	3982
   167   000000                     _CCP4CONbits	set	3874
   168   000000                     _PIE4bits	set	3629
   169   000000                     _RD5PPS	set	3695
   170   000000                     _ANSELDbits	set	3751
   171   000000                     _SSP2ADD	set	3798
   172   000000                     _SSP2CON1bits	set	3801
   173   000000                     _LATCbits	set	3963
   174   000000                     _RC4REG	set	3811
   175   000000                     _SSP2CON2	set	3802
   176   000000                     _SSP2STAT	set	3800
   177   000000                     _ANSELFbits	set	3764
   178   000000                     _SSP2BUF	set	3797
   179   000000                     _IPR0bits	set	3615
   180   000000                     _RE2PPS	set	3700
   181   000000                     _ANSELBbits	set	3738
   182   000000                     _RD6PPS	set	3696
   183   000000                     _PIR0bits	set	3635
   184   000000                     _PIR4bits	set	3639
   185   000000                     _RC0PPS	set	3682
   186   000000                     _RC7PPS	set	3689
   187   000000                     _ADPCH	set	3935
   188   000000                     _ADRESH	set	3940
   189   000000                     _ADCON0bits	set	3936
   190   000000                     _RE4PPS	set	3702
   191   000000                     _RG6PPS	set	3720
   192   000000                     _TMR0L	set	4051
   193   000000                     _TMR0H	set	4052
   194   000000                     _T0CON0bits	set	4053
   195   000000                     _T0CON1bits	set	4054
   196   000000                     _T2CLKCONbits	set	4031
   197   000000                     _T2HLTbits	set	4030
   198                           
   199                           ; #config settings
   200                           
   201                           	psect	cinit
   202   00413E                     __pcinit:
   203                           	callstack 0
   204   00413E                     start_initialization:
   205                           	callstack 0
   206   00413E                     __initialization:
   207                           	callstack 0
   208                           
   209                           ; Initialize objects allocated to BANK0 (4 bytes)
   210                           ; load TBLPTR registers with __pidataBANK0
   211   00413E  0E4A               	movlw	low __pidataBANK0
   212   004140  6EF6               	movwf	tblptrl,c
   213   004142  0E45               	movlw	high __pidataBANK0
   214   004144  6EF7               	movwf	tblptrh,c
   215   004146  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   216   004148  6EF8               	movwf	tblptru,c
   217   00414A  EE00  F0F4         	lfsr	0,__pdataBANK0
   218   00414E  EE10 F004          	lfsr	1,4
   219   004152                     copy_data0:
   220   004152  0009               	tblrd		*+
   221   004154  CFF5 FFEE          	movff	tablat,postinc0
   222   004158  50E5               	movf	postdec1,w,c
   223   00415A  50E1               	movf	fsr1l,w,c
   224   00415C  E1FA               	bnz	copy_data0
   225                           
   226                           ; Initialize objects allocated to COMRAM (2 bytes)
   227                           ; load TBLPTR registers with __pidataCOMRAM
   228   00415E  0E4E               	movlw	low __pidataCOMRAM
   229   004160  6EF6               	movwf	tblptrl,c
   230   004162  0E45               	movlw	high __pidataCOMRAM
   231   004164  6EF7               	movwf	tblptrh,c
   232   004166  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   233   004168  6EF8               	movwf	tblptru,c
   234   00416A  0009               	tblrd		*+	;fetch initializer
   235   00416C  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   236   004170  0009               	tblrd		*+	;fetch initializer
   237   004172  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   238                           
   239                           ; Clear objects allocated to BANK2 (162 bytes)
   240   004176  EE02  F000         	lfsr	0,__pbssBANK2
   241   00417A  0EA2               	movlw	162
   242   00417C                     clear_0:
   243   00417C  6AEE               	clrf	postinc0,c
   244   00417E  06E8               	decf	wreg,f,c
   245   004180  E1FD               	bnz	clear_0
   246                           
   247                           ; Clear objects allocated to BANK0 (82 bytes)
   248   004182  EE00  F060         	lfsr	0,__pbssBANK0
   249   004186  0E52               	movlw	82
   250   004188                     clear_1:
   251   004188  6AEE               	clrf	postinc0,c
   252   00418A  06E8               	decf	wreg,f,c
   253   00418C  E1FD               	bnz	clear_1
   254                           
   255                           ; Clear objects allocated to COMRAM (4 bytes)
   256   00418E  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   257   004190  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   258   004192  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   259   004194  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   260   004196                     end_of_initialization:
   261                           	callstack 0
   262   004196                     __end_of__initialization:
   263                           	callstack 0
   264   004196  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   265   004198  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   266   00419A  0100               	movlb	0
   267   00419C  EF48  F013         	goto	_main	;jump to C main() function
   268                           
   269                           	psect	bssCOMRAM
   270   00004A                     __pbssCOMRAM:
   271                           	callstack 0
   272   00004A                     _TxBufReadCnt:
   273                           	callstack 0
   274   00004A                     	ds	1
   275   00004B                     _TxBufWriteCnt:
   276                           	callstack 0
   277   00004B                     	ds	1
   278   00004C                     _RxBufReadCnt:
   279                           	callstack 0
   280   00004C                     	ds	1
   281   00004D                     _RxBufWriteCnt:
   282                           	callstack 0
   283   00004D                     	ds	1
   284                           
   285                           	psect	dataCOMRAM
   286   00004E                     __pdataCOMRAM:
   287                           	callstack 0
   288   00004E                     _ambient:
   289                           	callstack 0
   290   00004E                     	ds	2
   291                           
   292                           	psect	bssBANK0
   293   000060                     __pbssBANK0:
   294                           	callstack 0
   295   000060                     _EUSART4TXbuf:
   296                           	callstack 0
   297   000060                     	ds	60
   298   00009C                     _EUSART4RXbuf:
   299                           	callstack 0
   300   00009C                     	ds	20
   301   0000B0                     _lost:
   302                           	callstack 0
   303   0000B0                     	ds	1
   304   0000B1                     _wall:
   305                           	callstack 0
   306   0000B1                     	ds	1
   307                           
   308                           	psect	dataBANK0
   309   0000F4                     __pdataBANK0:
   310                           	callstack 0
   311   0000F4                     main@F14649:
   312                           	callstack 0
   313   0000F4                     	ds	4
   314                           
   315                           	psect	bssBANK2
   316   000200                     __pbssBANK2:
   317                           	callstack 0
   318   000200                     	ds	82
   319   000252                     	ds	40
   320   00027A                     	ds	40
   321                           
   322                           	psect	cstackBANK1
   323   000100                     __pcstackBANK1:
   324                           	callstack 0
   325   000100                     main@straightTime:
   326                           	callstack 0
   327                           
   328                           ; 82 bytes @ 0x0
   329   000100                     	ds	82
   330   000152                     main@moveSequence:
   331                           	callstack 0
   332                           
   333                           ; 40 bytes @ 0x52
   334   000152                     	ds	40
   335   00017A                     main@yellow:
   336                           	callstack 0
   337                           
   338                           ; 6 bytes @ 0x7A
   339   00017A                     	ds	6
   340   000180                     main@pink:
   341                           	callstack 0
   342                           
   343                           ; 6 bytes @ 0x80
   344   000180                     	ds	6
   345   000186                     main@orange:
   346                           	callstack 0
   347                           
   348                           ; 6 bytes @ 0x86
   349   000186                     	ds	6
   350   00018C                     main@lightblue:
   351                           	callstack 0
   352                           
   353                           ; 6 bytes @ 0x8C
   354   00018C                     	ds	6
   355   000192                     main@white:
   356                           	callstack 0
   357                           
   358                           ; 6 bytes @ 0x92
   359   000192                     	ds	6
   360   000198                     main@reverseDuration:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x98
   364   000198                     	ds	1
   365   000199                     main@straightSpeed:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x99
   369   000199                     	ds	1
   370   00019A                     main@turnSpeed:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x9A
   374   00019A                     	ds	1
   375   00019B                     main@turnRamp:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x9B
   379   00019B                     	ds	1
   380   00019C                     main@red:
   381                           	callstack 0
   382                           
   383                           ; 6 bytes @ 0x9C
   384   00019C                     	ds	6
   385   0001A2                     main@green:
   386                           	callstack 0
   387                           
   388                           ; 6 bytes @ 0xA2
   389   0001A2                     	ds	6
   390   0001A8                     main@blue:
   391                           	callstack 0
   392                           
   393                           ; 6 bytes @ 0xA8
   394   0001A8                     	ds	6
   395   0001AE                     main@color:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0xAE
   399   0001AE                     	ds	1
   400   0001AF                     main@curMove:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0xAF
   404   0001AF                     	ds	1
   405   0001B0                     main@HSV:
   406                           	callstack 0
   407                           
   408                           ; 6 bytes @ 0xB0
   409   0001B0                     	ds	6
   410   0001B6                     main@straightRamp:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0xB6
   414   0001B6                     	ds	1
   415   0001B7                     main@turnDuration:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0xB7
   419   0001B7                     	ds	1
   420   0001B8                     main@RGBC_n:
   421                           	callstack 0
   422                           
   423                           ; 8 bytes @ 0xB8
   424   0001B8                     	ds	8
   425   0001C0                     main@RGBC:
   426                           	callstack 0
   427                           
   428                           ; 8 bytes @ 0xC0
   429   0001C0                     	ds	8
   430   0001C8                     main@motorR:
   431                           	callstack 0
   432                           
   433                           ; 10 bytes @ 0xC8
   434   0001C8                     	ds	10
   435   0001D2                     main@motorL:
   436                           	callstack 0
   437                           
   438                           ; 10 bytes @ 0xD2
   439   0001D2                     	ds	10
   440                           
   441                           	psect	cstackBANK0
   442   0000B2                     __pcstackBANK0:
   443                           	callstack 0
   444   0000B2                     move@mL:
   445                           	callstack 0
   446   0000B2                     _rgb_2_hsv$3521:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x0
   450   0000B2                     	ds	2
   451   0000B4                     move@mR:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x2
   455   0000B4                     	ds	2
   456   0000B6                     move@color:
   457                           	callstack 0
   458   0000B6                     rgb_2_hsv@cmin:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x4
   462   0000B6                     	ds	1
   463   0000B7                     move@moveSequence:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x5
   467   0000B7                     	ds	1
   468   0000B8                     _rgb_2_hsv$3519:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x6
   472   0000B8                     	ds	1
   473   0000B9                     move@straightTime:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x7
   477   0000B9                     	ds	1
   478   0000BA                     _rgb_2_hsv$3520:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x8
   482   0000BA                     	ds	1
   483   0000BB                     move@curMove:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x9
   487   0000BB                     	ds	1
   488   0000BC                     move@straightSpeed:
   489                           	callstack 0
   490   0000BC                     rgb_2_hsv@r:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0xA
   494   0000BC                     	ds	1
   495   0000BD                     move@reverseDuration:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0xB
   499   0000BD                     	ds	1
   500   0000BE                     move@straightRamp:
   501                           	callstack 0
   502   0000BE                     rgb_2_hsv@cmax:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0xC
   506   0000BE                     	ds	1
   507   0000BF                     move@turnSpeed:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0xD
   511   0000BF                     	ds	1
   512   0000C0                     move@turnDuration:
   513                           	callstack 0
   514   0000C0                     rgb_2_hsv@diff:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0xE
   518   0000C0                     	ds	1
   519   0000C1                     move@turnRamp:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0xF
   523   0000C1                     	ds	3
   524   0000C4                     rgb_2_hsv@g:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x12
   528   0000C4                     	ds	2
   529   0000C6                     rgb_2_hsv@b:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x14
   533   0000C6                     	ds	2
   534   0000C8                     main@buf:
   535                           	callstack 0
   536                           
   537                           ; 40 bytes @ 0x16
   538   0000C8                     	ds	40
   539   0000F0                     main@testSequence:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0x3E
   543   0000F0                     	ds	4
   544                           
   545                           	psect	cstackCOMRAM
   546   000001                     __pcstackCOMRAM:
   547                           	callstack 0
   548   000001                     ??_getCharFromTxBuf:
   549   000001                     ??i2_I2C_2_Master_Idle:
   550   000001                     putCharToRxBuf@byte:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x0
   554   000001                     	ds	1
   555   000002                     i2I2C_2_Master_Write@data_byte:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x1
   559   000002                     	ds	1
   560   000003                     i2color_writetoaddr@value:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x2
   564   000003                     	ds	1
   565   000004                     i2color_writetoaddr@address:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x3
   569   000004                     	ds	1
   570   000005                     ??i2_color_clear_init_interrupts:
   571                           
   572                           ; 1 bytes @ 0x4
   573   000005                     	ds	1
   574   000006                     i2color_clear_init_interrupts@high_threshold:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x5
   578   000006                     	ds	2
   579   000008                     i2color_clear_init_interrupts@low_threshold:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x7
   583   000008                     	ds	2
   584   00000A                     ??_HighISR:
   585                           
   586                           ; 1 bytes @ 0x9
   587   00000A                     	ds	2
   588   00000C                     ??_I2C_2_Master_Idle:
   589   00000C                     ?_get16bitTMR0val:
   590                           	callstack 0
   591   00000C                     ?_max:
   592                           	callstack 0
   593   00000C                     ?_min:
   594                           	callstack 0
   595   00000C                     ?___wmul:
   596                           	callstack 0
   597   00000C                     ?___awdiv:
   598                           	callstack 0
   599   00000C                     ?___lmul:
   600                           	callstack 0
   601   00000C                     white_Light@state:
   602                           	callstack 0
   603   00000C                     ADC_getval@tmpval:
   604                           	callstack 0
   605   00000C                     max@a:
   606                           	callstack 0
   607   00000C                     min@a:
   608                           	callstack 0
   609   00000C                     initDCmotorsPWM@PWMperiod:
   610                           	callstack 0
   611   00000C                     ___wmul@multiplier:
   612                           	callstack 0
   613   00000C                     ___awdiv@dividend:
   614                           	callstack 0
   615   00000C                     ___lmul@multiplier:
   616                           	callstack 0
   617   00000C                     color_detect@RGBC_n:
   618                           	callstack 0
   619                           
   620                           ; 8 bytes @ 0xB
   621   00000C                     	ds	1
   622   00000D                     ??_I2C_2_Master_Read:
   623   00000D                     I2C_2_Master_Write@data_byte:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0xC
   627   00000D                     	ds	1
   628   00000E                     ??_get16bitTMR0val:
   629   00000E                     color_writetoaddr@value:
   630                           	callstack 0
   631   00000E                     I2C_2_Master_Read@ack:
   632                           	callstack 0
   633   00000E                     max@b:
   634                           	callstack 0
   635   00000E                     min@b:
   636                           	callstack 0
   637   00000E                     ___wmul@multiplicand:
   638                           	callstack 0
   639   00000E                     ___awdiv@divisor:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0xD
   643   00000E                     	ds	1
   644   00000F                     color_writetoaddr@address:
   645                           	callstack 0
   646   00000F                     I2C_2_Master_Read@tmp:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0xE
   650   00000F                     	ds	1
   651   000010                     ??_color_clear_init_interrupts:
   652   000010                     ___awdiv@counter:
   653                           	callstack 0
   654   000010                     color_read@RGBC:
   655                           	callstack 0
   656   000010                     get16bitTMR0val@timer_low:
   657                           	callstack 0
   658   000010                     ___wmul@product:
   659                           	callstack 0
   660   000010                     ___lmul@multiplicand:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0xF
   664   000010                     	ds	1
   665   000011                     ___awdiv@sign:
   666                           	callstack 0
   667   000011                     color_clear_init_interrupts@high_threshold:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x10
   671   000011                     	ds	1
   672   000012                     ??_color_read:
   673   000012                     ?___lwdiv:
   674                           	callstack 0
   675   000012                     get16bitTMR0val@timer_high:
   676                           	callstack 0
   677   000012                     ___awdiv@quotient:
   678                           	callstack 0
   679   000012                     ___lwdiv@dividend:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x11
   683   000012                     	ds	1
   684   000013                     color_clear_init_interrupts@low_threshold:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x12
   688   000013                     	ds	1
   689   000014                     batteryLevel@batteryVoltage:
   690                           	callstack 0
   691   000014                     get16bitTMR0val@timer_val:
   692                           	callstack 0
   693   000014                     ___lwdiv@divisor:
   694                           	callstack 0
   695   000014                     ___lmul@product:
   696                           	callstack 0
   697   000014                     color_detect@red:
   698                           	callstack 0
   699                           
   700                           ; 6 bytes @ 0x13
   701   000014                     	ds	1
   702   000015                     ??_color_click_init:
   703   000015                     batteryLevel@batteryQuarter:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x14
   707   000015                     	ds	1
   708   000016                     ___lwdiv@quotient:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x15
   712   000016                     	ds	2
   713   000018                     ?___lldiv:
   714                           	callstack 0
   715   000018                     ?___aldiv:
   716                           	callstack 0
   717   000018                     ___lwdiv@counter:
   718                           	callstack 0
   719   000018                     ___lldiv@dividend:
   720                           	callstack 0
   721   000018                     ___aldiv@dividend:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x17
   725   000018                     	ds	1
   726   000019                     setMotorPWM@m:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x18
   730   000019                     	ds	1
   731   00001A                     color_detect@green:
   732                           	callstack 0
   733                           
   734                           ; 6 bytes @ 0x19
   735   00001A                     	ds	1
   736   00001B                     ??_setMotorPWM:
   737                           
   738                           ; 1 bytes @ 0x1A
   739   00001B                     	ds	1
   740   00001C                     ___lldiv@divisor:
   741                           	callstack 0
   742   00001C                     ___aldiv@divisor:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x1B
   746   00001C                     	ds	1
   747   00001D                     setMotorPWM@posDuty:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x1C
   751   00001D                     	ds	1
   752   00001E                     setMotorPWM@negDuty:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x1D
   756   00001E                     	ds	1
   757   00001F                     stop@mL:
   758                           	callstack 0
   759   00001F                     turnLeft@mL:
   760                           	callstack 0
   761   00001F                     turnRight@mL:
   762                           	callstack 0
   763   00001F                     fullSpeedAhead@mL:
   764                           	callstack 0
   765   00001F                     reverseOneSquare@mL:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x1E
   769   00001F                     	ds	1
   770   000020                     ___aldiv@counter:
   771                           	callstack 0
   772   000020                     ___lldiv@quotient:
   773                           	callstack 0
   774   000020                     color_detect@blue:
   775                           	callstack 0
   776                           
   777                           ; 6 bytes @ 0x1F
   778   000020                     	ds	1
   779   000021                     ___aldiv@sign:
   780                           	callstack 0
   781   000021                     stop@mR:
   782                           	callstack 0
   783   000021                     turnLeft@mR:
   784                           	callstack 0
   785   000021                     turnRight@mR:
   786                           	callstack 0
   787   000021                     fullSpeedAhead@mR:
   788                           	callstack 0
   789   000021                     reverseOneSquare@mR:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x20
   793   000021                     	ds	1
   794   000022                     ___aldiv@quotient:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x21
   798   000022                     	ds	1
   799   000023                     stop@straightRamp:
   800                           	callstack 0
   801   000023                     turnLeft@turnSpeed:
   802                           	callstack 0
   803   000023                     turnRight@turnSpeed:
   804                           	callstack 0
   805   000023                     fullSpeedAhead@straightSpeed:
   806                           	callstack 0
   807   000023                     reverseOneSquare@straightSpeed:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x22
   811   000023                     	ds	1
   812   000024                     ??_stop:
   813   000024                     turnLeft@turnDuration:
   814                           	callstack 0
   815   000024                     turnRight@turnDuration:
   816                           	callstack 0
   817   000024                     fullSpeedAhead@straightRamp:
   818                           	callstack 0
   819   000024                     reverseOneSquare@reverseDuration:
   820                           	callstack 0
   821   000024                     ___lldiv@counter:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x23
   825   000024                     	ds	1
   826   000025                     ??_fullSpeedAhead:
   827   000025                     turnLeft@turnRamp:
   828                           	callstack 0
   829   000025                     turnRight@turnRamp:
   830                           	callstack 0
   831   000025                     reverseOneSquare@straightRamp:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x24
   835   000025                     	ds	1
   836   000026                     ??_turnRight:
   837   000026                     ??_turnLeft:
   838   000026                     ??_reverseOneSquare:
   839   000026                     color_detect@yellow:
   840                           	callstack 0
   841   000026                     color_normalise@RGBC:
   842                           	callstack 0
   843   000026                     rgb_2_hsv@RGBC:
   844                           	callstack 0
   845                           
   846                           ; 8 bytes @ 0x25
   847   000026                     	ds	1
   848   000027                     stop@i:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x26
   852   000027                     	ds	1
   853   000028                     fullSpeedAhead@i:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x27
   857   000028                     	ds	1
   858   000029                     stop@cur_power:
   859                           	callstack 0
   860   000029                     turnLeft@i:
   861                           	callstack 0
   862   000029                     turnRight@i:
   863                           	callstack 0
   864   000029                     reverseOneSquare@i:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x28
   868   000029                     	ds	1
   869   00002A                     fullSpeedAhead@cur_power:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x29
   873   00002A                     	ds	1
   874   00002B                     turnLeft@cur_power:
   875                           	callstack 0
   876   00002B                     turnRight@cur_power:
   877                           	callstack 0
   878   00002B                     reverseOneSquare@cur_power:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x2A
   882   00002B                     	ds	1
   883   00002C                     color_detect@pink:
   884                           	callstack 0
   885                           
   886                           ; 6 bytes @ 0x2B
   887   00002C                     	ds	1
   888   00002D                     returnHome@mL:
   889                           	callstack 0
   890   00002D                     lostReturnHome@mL:
   891                           	callstack 0
   892   00002D                     calibration@mL:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x2C
   896   00002D                     	ds	1
   897   00002E                     color_normalise@RGBC_n:
   898                           	callstack 0
   899   00002E                     rgb_2_hsv@HSV:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x2D
   903   00002E                     	ds	1
   904   00002F                     returnHome@mR:
   905                           	callstack 0
   906   00002F                     lostReturnHome@mR:
   907                           	callstack 0
   908   00002F                     calibration@mR:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x2E
   912   00002F                     	ds	1
   913   000030                     ??_rgb_2_hsv:
   914   000030                     ??_color_normalise:
   915                           
   916                           ; 1 bytes @ 0x2F
   917   000030                     	ds	1
   918   000031                     calibration@turnSpeed:
   919                           	callstack 0
   920   000031                     returnHome@moveSequence:
   921                           	callstack 0
   922   000031                     lostReturnHome@moveSequence:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x30
   926   000031                     	ds	1
   927   000032                     color_calibration@RGBC:
   928                           	callstack 0
   929   000032                     calibration@turnDuration:
   930                           	callstack 0
   931   000032                     color_detect@orange:
   932                           	callstack 0
   933                           
   934                           ; 6 bytes @ 0x31
   935   000032                     	ds	1
   936   000033                     returnHome@straightTime:
   937                           	callstack 0
   938   000033                     lostReturnHome@straightTime:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x32
   942   000033                     	ds	1
   943   000034                     calibration@turnRamp:
   944                           	callstack 0
   945   000034                     color_calibration@RGBC_n:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x33
   949   000034                     	ds	1
   950   000035                     ??_calibration:
   951   000035                     returnHome@curMove:
   952                           	callstack 0
   953   000035                     lostReturnHome@curMove:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x34
   957   000035                     	ds	1
   958   000036                     returnHome@straightSpeed:
   959                           	callstack 0
   960   000036                     lostReturnHome@straightSpeed:
   961                           	callstack 0
   962   000036                     color_calibration@red:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x35
   966   000036                     	ds	1
   967   000037                     returnHome@reverseDuration:
   968                           	callstack 0
   969   000037                     lostReturnHome@reverseDuration:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x36
   973   000037                     	ds	1
   974   000038                     returnHome@straightRamp:
   975                           	callstack 0
   976   000038                     lostReturnHome@straightRamp:
   977                           	callstack 0
   978   000038                     color_calibration@green:
   979                           	callstack 0
   980   000038                     color_detect@lightBlue:
   981                           	callstack 0
   982                           
   983                           ; 6 bytes @ 0x37
   984   000038                     	ds	1
   985   000039                     returnHome@turnSpeed:
   986                           	callstack 0
   987   000039                     lostReturnHome@turnSpeed:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x38
   991   000039                     	ds	1
   992   00003A                     returnHome@turnDuration:
   993                           	callstack 0
   994   00003A                     lostReturnHome@turnDuration:
   995                           	callstack 0
   996   00003A                     color_calibration@blue:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x39
  1000   00003A                     	ds	1
  1001   00003B                     returnHome@turnRamp:
  1002                           	callstack 0
  1003   00003B                     lostReturnHome@turnRamp:
  1004                           	callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x3A
  1007   00003B                     	ds	1
  1008   00003C                     ??_lostReturnHome:
  1009   00003C                     ??_returnHome:
  1010   00003C                     color_calibration@yellow:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x3B
  1014   00003C                     	ds	2
  1015   00003E                     color_calibration@pink:
  1016                           	callstack 0
  1017   00003E                     color_detect@white:
  1018                           	callstack 0
  1019                           
  1020                           ; 6 bytes @ 0x3D
  1021   00003E                     	ds	2
  1022   000040                     returnHome@i:
  1023                           	callstack 0
  1024   000040                     lostReturnHome@i:
  1025                           	callstack 0
  1026   000040                     color_calibration@orange:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x3F
  1030   000040                     	ds	1
  1031   000041                     ??_move:
  1032                           
  1033                           ; 1 bytes @ 0x40
  1034   000041                     	ds	1
  1035   000042                     color_calibration@lightblue:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x41
  1039   000042                     	ds	2
  1040   000044                     ??_color_detect:
  1041   000044                     color_calibration@white:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x43
  1045   000044                     	ds	2
  1046   000046                     ??_color_calibration:
  1047   000046                     color_detect@color:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x45
  1051   000046                     	ds	2
  1052   000048                     ??_main:
  1053                           
  1054                           ; 1 bytes @ 0x47
  1055   000048                     	ds	2
  1056                           
  1057 ;;
  1058 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1059 ;;
  1060 ;; *************** function _main *****************
  1061 ;; Defined at:
  1062 ;;		line 28 in file "main.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  straightTime   82    0[BANK1 ] unsigned int [41]
  1067 ;;  moveSequence   40   82[BANK1 ] unsigned char [40]
  1068 ;;  buf            40   22[BANK0 ] unsigned char [40]
  1069 ;;  motorL         10  210[BANK1 ] struct DC_motor
  1070 ;;  motorR         10  200[BANK1 ] struct DC_motor
  1071 ;;  RGBC            8  192[BANK1 ] struct RGBC_val
  1072 ;;  RGBC_n          8  184[BANK1 ] struct RGBC_val
  1073 ;;  HSV             6  176[BANK1 ] struct HSV_val
  1074 ;;  blue            6  168[BANK1 ] struct RGB_calib
  1075 ;;  green           6  162[BANK1 ] struct RGB_calib
  1076 ;;  red             6  156[BANK1 ] struct RGB_calib
  1077 ;;  white           6  146[BANK1 ] struct RGB_calib
  1078 ;;  lightblue       6  140[BANK1 ] struct RGB_calib
  1079 ;;  orange          6  134[BANK1 ] struct RGB_calib
  1080 ;;  pink            6  128[BANK1 ] struct RGB_calib
  1081 ;;  yellow          6  122[BANK1 ] struct RGB_calib
  1082 ;;  testSequence    4   62[BANK0 ] unsigned char [4]
  1083 ;;  PWMcycle        2    0        unsigned int 
  1084 ;;  turnDuration    1  183[BANK1 ] unsigned char 
  1085 ;;  straightRamp    1  182[BANK1 ] unsigned char 
  1086 ;;  curMove         1  175[BANK1 ] unsigned char 
  1087 ;;  color           1  174[BANK1 ] unsigned char 
  1088 ;;  turnRamp        1  155[BANK1 ] unsigned char 
  1089 ;;  turnSpeed       1  154[BANK1 ] unsigned char 
  1090 ;;  straightSpee    1  153[BANK1 ] unsigned char 
  1091 ;;  reverseDurat    1  152[BANK1 ] unsigned char 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1102 ;;      Locals:         0      44     220       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1104 ;;      Totals:         2      44     220       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;Total ram usage:      266 bytes
  1106 ;; Hardware stack levels required when called: 10
  1107 ;; This function calls:
  1108 ;;		_Buggy_init
  1109 ;;		_Timer0_init
  1110 ;;		_batteryLevel
  1111 ;;		_calibration
  1112 ;;		_color_calibration
  1113 ;;		_color_click_init
  1114 ;;		_color_detect
  1115 ;;		_color_normalise
  1116 ;;		_color_read
  1117 ;;		_fullSpeedAhead
  1118 ;;		_get16bitTMR0val
  1119 ;;		_initDCmotorsPWM
  1120 ;;		_initUSART4
  1121 ;;		_lostReturnHome
  1122 ;;		_move
  1123 ;;		_resetTimer
  1124 ;;		_rgb_2_hsv
  1125 ;;		_stop
  1126 ;;		_white_Light
  1127 ;; This function is called by:
  1128 ;;		Startup code after reset
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text0
  1133   002690                     __ptext0:
  1134                           	callstack 0
  1135   002690                     _main:
  1136                           	callstack 21
  1137   002690                     
  1138                           ;main.c: 30:     char buf[40] = {0};
  1139   002690  EE20  F0C8         	lfsr	2,main@buf
  1140   002694  0E27               	movlw	39
  1141   002696                     u3091:
  1142   002696  6ADE               	clrf	postinc2,c
  1143   002698  06E8               	decf	wreg,f,c
  1144   00269A  E2FD               	bc	u3091
  1145   00269C                     
  1146                           ;main.c: 32:     unsigned char color = 0;
  1147   00269C  0E00               	movlw	0
  1148   00269E  0101               	movlb	1	; () banked
  1149   0026A0  6FAE               	movwf	main@color& (0+255),b
  1150                           
  1151                           ;main.c: 33:     unsigned char moveSequence[40] = {0};
  1152   0026A2  EE21  F052         	lfsr	2,main@moveSequence
  1153   0026A6  0E27               	movlw	39
  1154   0026A8                     u3101:
  1155   0026A8  6ADE               	clrf	postinc2,c
  1156   0026AA  06E8               	decf	wreg,f,c
  1157   0026AC  E2FD               	bc	u3101
  1158                           
  1159                           ;main.c: 34:     unsigned int straightTime[41] = {0};
  1160   0026AE  EE21  F000         	lfsr	2,main@straightTime
  1161   0026B2  0E51               	movlw	81
  1162   0026B4                     u3111:
  1163   0026B4  6ADE               	clrf	postinc2,c
  1164   0026B6  06E8               	decf	wreg,f,c
  1165   0026B8  E2FD               	bc	u3111
  1166   0026BA                     
  1167                           ; BSR set to: 1
  1168                           ;main.c: 35:     char curMove = 0;
  1169   0026BA  0E00               	movlw	0
  1170   0026BC  6FAF               	movwf	main@curMove& (0+255),b
  1171   0026BE                     
  1172                           ; BSR set to: 1
  1173                           ;main.c: 37:     unsigned char testSequence[4] = {4,3,9,8};
  1174   0026BE  C0F4  F0F0         	movff	main@F14649,main@testSequence
  1175   0026C2  C0F5  F0F1         	movff	main@F14649+1,main@testSequence+1
  1176   0026C6  C0F6  F0F2         	movff	main@F14649+2,main@testSequence+2
  1177   0026CA  C0F7  F0F3         	movff	main@F14649+3,main@testSequence+3
  1178   0026CE                     
  1179                           ; BSR set to: 1
  1180                           ;main.c: 40:     struct RGBC_val RGBC, RGBC_n;;main.c: 41:     struct HSV_val HSV;;main.
      +                          c: 42:     struct DC_motor motorL, motorR;;main.c: 45:     Buggy_init();
  1181   0026CE  EC34  F021         	call	_Buggy_init	;wreg free
  1182   0026D2                     
  1183                           ;main.c: 46:     color_click_init();
  1184   0026D2  EC18  F021         	call	_color_click_init	;wreg free
  1185   0026D6                     
  1186                           ;main.c: 47:     Timer0_init();
  1187   0026D6  EC27  F022         	call	_Timer0_init	;wreg free
  1188   0026DA                     
  1189                           ;main.c: 49:     initUSART4();
  1190   0026DA  EC47  F022         	call	_initUSART4	;wreg free
  1191   0026DE                     
  1192                           ;main.c: 50:     initDCmotorsPWM(PWMcycle);
  1193   0026DE  0E00               	movlw	0
  1194   0026E0  6E0D               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1195   0026E2  0EC7               	movlw	199
  1196   0026E4  6E0C               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1197   0026E6  EC2B  F01F         	call	_initDCmotorsPWM	;wreg free
  1198   0026EA                     
  1199                           ;main.c: 52:     motorL.power=0;
  1200   0026EA  0E00               	movlw	0
  1201   0026EC  0101               	movlb	1	; () banked
  1202   0026EE  6FD2               	movwf	main@motorL& (0+255),b
  1203   0026F0                     
  1204                           ; BSR set to: 1
  1205                           ;main.c: 53:     motorL.direction=1;
  1206   0026F0  0E01               	movlw	1
  1207   0026F2  6FD3               	movwf	(main@motorL+1)& (0+255),b
  1208   0026F4                     
  1209                           ; BSR set to: 1
  1210                           ;main.c: 54:     motorL.brakemode=1;
  1211   0026F4  0E01               	movlw	1
  1212   0026F6  6FD4               	movwf	(main@motorL+2)& (0+255),b
  1213   0026F8                     
  1214                           ; BSR set to: 1
  1215                           ;main.c: 55:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1216   0026F8  0EAA               	movlw	170
  1217   0026FA  6FD7               	movwf	(main@motorL+5)& (0+255),b
  1218   0026FC  0E0F               	movlw	15
  1219   0026FE  6FD8               	movwf	(main@motorL+6)& (0+255),b
  1220   002700                     
  1221                           ; BSR set to: 1
  1222                           ;main.c: 56:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1223   002700  0EA6               	movlw	166
  1224   002702  6FD9               	movwf	(main@motorL+7)& (0+255),b
  1225   002704  0E0F               	movlw	15
  1226   002706  6FDA               	movwf	(main@motorL+8)& (0+255),b
  1227   002708                     
  1228                           ; BSR set to: 1
  1229                           ;main.c: 57:     motorL.PWMperiod=PWMcycle;
  1230   002708  0E00               	movlw	0
  1231   00270A  6FD6               	movwf	(main@motorL+4)& (0+255),b
  1232   00270C  0EC7               	movlw	199
  1233   00270E  6FD5               	movwf	(main@motorL+3)& (0+255),b
  1234   002710                     
  1235                           ; BSR set to: 1
  1236                           ;main.c: 58:     motorL.compensation=3;
  1237   002710  0E03               	movlw	3
  1238   002712  6FDB               	movwf	(main@motorL+9)& (0+255),b
  1239   002714                     
  1240                           ; BSR set to: 1
  1241                           ;main.c: 60:     motorR.power=0;
  1242   002714  0E00               	movlw	0
  1243   002716  6FC8               	movwf	main@motorR& (0+255),b
  1244   002718                     
  1245                           ; BSR set to: 1
  1246                           ;main.c: 61:     motorR.direction=1;
  1247   002718  0E01               	movlw	1
  1248   00271A  6FC9               	movwf	(main@motorR+1)& (0+255),b
  1249   00271C                     
  1250                           ; BSR set to: 1
  1251                           ;main.c: 62:     motorR.brakemode=1;
  1252   00271C  0E01               	movlw	1
  1253   00271E  6FCA               	movwf	(main@motorR+2)& (0+255),b
  1254   002720                     
  1255                           ; BSR set to: 1
  1256                           ;main.c: 63:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1257   002720  0E25               	movlw	37
  1258   002722  6FCD               	movwf	(main@motorR+5)& (0+255),b
  1259   002724  0E0F               	movlw	15
  1260   002726  6FCE               	movwf	(main@motorR+6)& (0+255),b
  1261   002728                     
  1262                           ; BSR set to: 1
  1263                           ;main.c: 64:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1264   002728  0E21               	movlw	33
  1265   00272A  6FCF               	movwf	(main@motorR+7)& (0+255),b
  1266   00272C  0E0F               	movlw	15
  1267   00272E  6FD0               	movwf	(main@motorR+8)& (0+255),b
  1268   002730                     
  1269                           ; BSR set to: 1
  1270                           ;main.c: 65:     motorR.PWMperiod=PWMcycle;
  1271   002730  0E00               	movlw	0
  1272   002732  6FCC               	movwf	(main@motorR+4)& (0+255),b
  1273   002734  0EC7               	movlw	199
  1274   002736  6FCB               	movwf	(main@motorR+3)& (0+255),b
  1275   002738                     
  1276                           ; BSR set to: 1
  1277                           ;main.c: 66:     motorR.compensation=0;
  1278   002738  0E00               	movlw	0
  1279   00273A  6FD1               	movwf	(main@motorR+9)& (0+255),b
  1280   00273C                     
  1281                           ; BSR set to: 1
  1282                           ;main.c: 69:     char straightSpeed=25;
  1283   00273C  0E19               	movlw	25
  1284   00273E  6F99               	movwf	main@straightSpeed& (0+255),b
  1285   002740                     
  1286                           ; BSR set to: 1
  1287                           ;main.c: 70:     unsigned char straightRamp=1;
  1288   002740  0E01               	movlw	1
  1289   002742  6FB6               	movwf	main@straightRamp& (0+255),b
  1290   002744                     
  1291                           ; BSR set to: 1
  1292                           ;main.c: 72:     unsigned char reverseDuration=10;
  1293   002744  0E0A               	movlw	10
  1294   002746  6F98               	movwf	main@reverseDuration& (0+255),b
  1295   002748                     
  1296                           ; BSR set to: 1
  1297                           ;main.c: 74:     char turnSpeed=20;
  1298   002748  0E14               	movlw	20
  1299   00274A  6F9A               	movwf	main@turnSpeed& (0+255),b
  1300   00274C                     
  1301                           ; BSR set to: 1
  1302                           ;main.c: 75:     unsigned char turnDuration=5;
  1303   00274C  0E05               	movlw	5
  1304   00274E  6FB7               	movwf	main@turnDuration& (0+255),b
  1305   002750                     
  1306                           ; BSR set to: 1
  1307                           ;main.c: 76:     unsigned char turnRamp=2;
  1308   002750  0E02               	movlw	2
  1309   002752  6F9B               	movwf	main@turnRamp& (0+255),b
  1310   002754                     
  1311                           ; BSR set to: 1
  1312                           ;main.c: 79:     batteryLevel();
  1313   002754  ECD0  F020         	call	_batteryLevel	;wreg free
  1314   002758                     
  1315                           ;main.c: 82:     RGBC.R = 200;
  1316   002758  0E00               	movlw	0
  1317   00275A  0101               	movlb	1	; () banked
  1318   00275C  6FC1               	movwf	(main@RGBC+1)& (0+255),b
  1319   00275E  0EC8               	movlw	200
  1320   002760  6FC0               	movwf	main@RGBC& (0+255),b
  1321   002762                     
  1322                           ; BSR set to: 1
  1323                           ;main.c: 83:     RGBC.G = 50;
  1324   002762  0E00               	movlw	0
  1325   002764  6FC3               	movwf	(main@RGBC+3)& (0+255),b
  1326   002766  0E32               	movlw	50
  1327   002768  6FC2               	movwf	(main@RGBC+2)& (0+255),b
  1328   00276A                     
  1329                           ; BSR set to: 1
  1330                           ;main.c: 84:     RGBC.B = 170;
  1331   00276A  0E00               	movlw	0
  1332   00276C  6FC5               	movwf	(main@RGBC+5)& (0+255),b
  1333   00276E  0EAA               	movlw	170
  1334   002770  6FC4               	movwf	(main@RGBC+4)& (0+255),b
  1335   002772                     
  1336                           ; BSR set to: 1
  1337                           ;main.c: 86:     rgb_2_hsv (RGBC, &HSV);
  1338   002772  EE21  F0C0         	lfsr	2,main@RGBC
  1339   002776  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  1340   00277A  0E07               	movlw	7
  1341   00277C                     u3121:
  1342   00277C  CFDB FFEB          	movff	plusw2,plusw0
  1343   002780  06E8               	decf	wreg,f,c
  1344   002782  E2FC               	bc	u3121
  1345   002784  0EB0               	movlw	low main@HSV
  1346   002786  6E2E               	movwf	rgb_2_hsv@HSV^0,c
  1347   002788  0E01               	movlw	high main@HSV
  1348   00278A  6E2F               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1349   00278C  ECDA  F010         	call	_rgb_2_hsv	;wreg free
  1350   002790                     l89:
  1351   002790  B48E               	btfsc	142,2,c	;volatile
  1352   002792  EFCD  F013         	goto	u3131
  1353   002796  EFCF  F013         	goto	u3130
  1354   00279A                     u3131:
  1355   00279A  EFC8  F013         	goto	l89
  1356   00279E                     u3130:
  1357   00279E                     
  1358                           ;main.c: 90:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1359   00279E  9680               	bcf	128,3,c	;volatile
  1360   0027A0  9E7C               	bcf	124,7,c	;volatile
  1361                           
  1362                           ;main.c: 115:     LATHbits.LATH1=LATDbits.LATD3=1;
  1363   0027A2  867C               	bsf	124,3,c	;volatile
  1364   0027A4  8280               	bsf	128,1,c	;volatile
  1365   0027A6                     
  1366                           ;main.c: 116:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1367   0027A6  0E29               	movlw	41
  1368   0027A8  6E49               	movwf	(??_main+1)^0,c
  1369   0027AA  0E96               	movlw	150
  1370   0027AC  6E48               	movwf	??_main^0,c
  1371   0027AE  0E7F               	movlw	127
  1372   0027B0                     u3307:
  1373   0027B0  2EE8               	decfsz	wreg,f,c
  1374   0027B2  D7FE               	bra	u3307
  1375   0027B4  2E48               	decfsz	??_main^0,f,c
  1376   0027B6  D7FC               	bra	u3307
  1377   0027B8  2E49               	decfsz	(??_main+1)^0,f,c
  1378   0027BA  D7FA               	bra	u3307
  1379   0027BC  0000               	nop	
  1380   0027BE                     
  1381                           ;main.c: 119:     struct RGB_calib red, green, blue, yellow, pink, orange, lightblue, wh
      +                          ite;;main.c: 120:     color_calibration(&RGBC, &RGBC_n, &red, &green, &blue, &yellow, &p
      +                          ink, &orange, &lightblue, &white);
  1382   0027BE  0EC0               	movlw	low main@RGBC
  1383   0027C0  6E32               	movwf	color_calibration@RGBC^0,c
  1384   0027C2  0E01               	movlw	high main@RGBC
  1385   0027C4  6E33               	movwf	(color_calibration@RGBC+1)^0,c
  1386   0027C6  0EB8               	movlw	low main@RGBC_n
  1387   0027C8  6E34               	movwf	color_calibration@RGBC_n^0,c
  1388   0027CA  0E01               	movlw	high main@RGBC_n
  1389   0027CC  6E35               	movwf	(color_calibration@RGBC_n+1)^0,c
  1390   0027CE  0E9C               	movlw	low main@red
  1391   0027D0  6E36               	movwf	color_calibration@red^0,c
  1392   0027D2  0E01               	movlw	high main@red
  1393   0027D4  6E37               	movwf	(color_calibration@red+1)^0,c
  1394   0027D6  0EA2               	movlw	low main@green
  1395   0027D8  6E38               	movwf	color_calibration@green^0,c
  1396   0027DA  0E01               	movlw	high main@green
  1397   0027DC  6E39               	movwf	(color_calibration@green+1)^0,c
  1398   0027DE  0EA8               	movlw	low main@blue
  1399   0027E0  6E3A               	movwf	color_calibration@blue^0,c
  1400   0027E2  0E01               	movlw	high main@blue
  1401   0027E4  6E3B               	movwf	(color_calibration@blue+1)^0,c
  1402   0027E6  0E7A               	movlw	low main@yellow
  1403   0027E8  6E3C               	movwf	color_calibration@yellow^0,c
  1404   0027EA  0E01               	movlw	high main@yellow
  1405   0027EC  6E3D               	movwf	(color_calibration@yellow+1)^0,c
  1406   0027EE  0E80               	movlw	low main@pink
  1407   0027F0  6E3E               	movwf	color_calibration@pink^0,c
  1408   0027F2  0E01               	movlw	high main@pink
  1409   0027F4  6E3F               	movwf	(color_calibration@pink+1)^0,c
  1410   0027F6  0E86               	movlw	low main@orange
  1411   0027F8  6E40               	movwf	color_calibration@orange^0,c
  1412   0027FA  0E01               	movlw	high main@orange
  1413   0027FC  6E41               	movwf	(color_calibration@orange+1)^0,c
  1414   0027FE  0E8C               	movlw	low main@lightblue
  1415   002800  6E42               	movwf	color_calibration@lightblue^0,c
  1416   002802  0E01               	movlw	high main@lightblue
  1417   002804  6E43               	movwf	(color_calibration@lightblue+1)^0,c
  1418   002806  0E92               	movlw	low main@white
  1419   002808  6E44               	movwf	color_calibration@white^0,c
  1420   00280A  0E01               	movlw	high main@white
  1421   00280C  6E45               	movwf	(color_calibration@white+1)^0,c
  1422   00280E  ECCE  F016         	call	_color_calibration	;wreg free
  1423   002812                     
  1424                           ;main.c: 123:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1425   002812  0ED2               	movlw	low main@motorL
  1426   002814  6E2D               	movwf	calibration@mL^0,c
  1427   002816  0E01               	movlw	high main@motorL
  1428   002818  6E2E               	movwf	(calibration@mL+1)^0,c
  1429   00281A  0EC8               	movlw	low main@motorR
  1430   00281C  6E2F               	movwf	calibration@mR^0,c
  1431   00281E  0E01               	movlw	high main@motorR
  1432   002820  6E30               	movwf	(calibration@mR+1)^0,c
  1433   002822  0E14               	movlw	20
  1434   002824  6E31               	movwf	calibration@turnSpeed^0,c
  1435   002826  0EB7               	movlw	low main@turnDuration
  1436   002828  6E32               	movwf	calibration@turnDuration^0,c
  1437   00282A  0E01               	movlw	high main@turnDuration
  1438   00282C  6E33               	movwf	(calibration@turnDuration+1)^0,c
  1439   00282E  0E02               	movlw	2
  1440   002830  6E34               	movwf	calibration@turnRamp^0,c
  1441   002832  EC81  F015         	call	_calibration	;wreg free
  1442   002836                     
  1443                           ;main.c: 126:     white_Light(1);
  1444   002836  0E01               	movlw	1
  1445   002838  EC05  F022         	call	_white_Light
  1446   00283C                     
  1447                           ;main.c: 127:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1448   00283C  0E52               	movlw	82
  1449   00283E  6E49               	movwf	(??_main+1)^0,c
  1450   002840  0E2B               	movlw	43
  1451   002842  6E48               	movwf	??_main^0,c
  1452   002844  0E00               	movlw	0
  1453   002846                     u3317:
  1454   002846  2EE8               	decfsz	wreg,f,c
  1455   002848  D7FE               	bra	u3317
  1456   00284A  2E48               	decfsz	??_main^0,f,c
  1457   00284C  D7FC               	bra	u3317
  1458   00284E  2E49               	decfsz	(??_main+1)^0,f,c
  1459   002850  D7FA               	bra	u3317
  1460   002852  D000               	nop2	
  1461   002854                     
  1462                           ;main.c: 130:     color_read(&RGBC);
  1463   002854  0EC0               	movlw	low main@RGBC
  1464   002856  6E10               	movwf	color_read@RGBC^0,c
  1465   002858  0E01               	movlw	high main@RGBC
  1466   00285A  6E11               	movwf	(color_read@RGBC+1)^0,c
  1467   00285C  ECE2  F017         	call	_color_read	;wreg free
  1468   002860                     
  1469                           ;main.c: 131:     ambient=RGBC.C;
  1470   002860  C1C6  F04E         	movff	main@RGBC+6,_ambient
  1471   002864  C1C7  F04F         	movff	main@RGBC+7,_ambient+1
  1472   002868                     
  1473                           ;main.c: 132:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1474   002868  0E29               	movlw	41
  1475   00286A  6E49               	movwf	(??_main+1)^0,c
  1476   00286C  0E96               	movlw	150
  1477   00286E  6E48               	movwf	??_main^0,c
  1478   002870  0E7F               	movlw	127
  1479   002872                     u3327:
  1480   002872  2EE8               	decfsz	wreg,f,c
  1481   002874  D7FE               	bra	u3327
  1482   002876  2E48               	decfsz	??_main^0,f,c
  1483   002878  D7FC               	bra	u3327
  1484   00287A  2E49               	decfsz	(??_main+1)^0,f,c
  1485   00287C  D7FA               	bra	u3327
  1486   00287E  0000               	nop	
  1487   002880                     
  1488                           ;main.c: 134:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1489   002880  0ED2               	movlw	low main@motorL
  1490   002882  6E1F               	movwf	fullSpeedAhead@mL^0,c
  1491   002884  0E01               	movlw	high main@motorL
  1492   002886  6E20               	movwf	(fullSpeedAhead@mL+1)^0,c
  1493   002888  0EC8               	movlw	low main@motorR
  1494   00288A  6E21               	movwf	fullSpeedAhead@mR^0,c
  1495   00288C  0E01               	movlw	high main@motorR
  1496   00288E  6E22               	movwf	(fullSpeedAhead@mR+1)^0,c
  1497   002890  0E19               	movlw	25
  1498   002892  6E23               	movwf	fullSpeedAhead@straightSpeed^0,c
  1499   002894  0E01               	movlw	1
  1500   002896  6E24               	movwf	fullSpeedAhead@straightRamp^0,c
  1501   002898  EC05  F01E         	call	_fullSpeedAhead	;wreg free
  1502   00289C                     
  1503                           ;main.c: 135:     resetTimer();
  1504   00289C  EC87  F022         	call	_resetTimer	;wreg free
  1505   0028A0                     
  1506                           ;main.c: 137:     wall=0;
  1507   0028A0  0E00               	movlw	0
  1508   0028A2  0100               	movlb	0	; () banked
  1509   0028A4  6FB1               	movwf	_wall& (0+255),b
  1510   0028A6                     
  1511                           ; BSR set to: 0
  1512                           ;main.c: 138:     lost=0;
  1513   0028A6  0E00               	movlw	0
  1514   0028A8  6FB0               	movwf	_lost& (0+255),b
  1515   0028AA                     l4213:
  1516                           
  1517                           ;main.c: 141:         if (wall == 1) {
  1518   0028AA  0100               	movlb	0	; () banked
  1519   0028AC  05B1               	decf	_wall& (0+255),w,b
  1520   0028AE  A4D8               	btfss	status,2,c
  1521   0028B0  EF5C  F014         	goto	u3141
  1522   0028B4  EF5E  F014         	goto	u3140
  1523   0028B8                     u3141:
  1524   0028B8  EF2F  F015         	goto	l4241
  1525   0028BC                     u3140:
  1526   0028BC                     
  1527                           ; BSR set to: 0
  1528                           ;main.c: 142:             PIE0bits.INT0IE=TMR0IE=0;
  1529   0028BC  010E               	movlb	14	; () banked
  1530   0028BE  9B29               	bcf	41,5,b	;volatile
  1531   0028C0  AB29               	btfss	41,5,b	;volatile
  1532   0028C2  D002               	bra	u3155
  1533   0028C4  8129               	bsf	41,0,b	;volatile
  1534   0028C6  D002               	bra	u3157
  1535   0028C8                     u3155:
  1536   0028C8  010E               	movlb	14	; () banked
  1537   0028CA  9129               	bcf	41,0,b	;volatile
  1538   0028CC                     u3157:
  1539   0028CC                     
  1540                           ; BSR set to: 14
  1541                           ;main.c: 143:             straightTime[curMove] = get16bitTMR0val();
  1542   0028CC  EC90  F021         	call	_get16bitTMR0val	;wreg free
  1543   0028D0  0101               	movlb	1	; () banked
  1544   0028D2  51AF               	movf	main@curMove& (0+255),w,b
  1545   0028D4  0D02               	mullw	2
  1546   0028D6  0E00               	movlw	low main@straightTime
  1547   0028D8  24F3               	addwf	243,w,c
  1548   0028DA  6ED9               	movwf	fsr2l,c
  1549   0028DC  0E01               	movlw	high main@straightTime
  1550   0028DE  20F4               	addwfc	prodh,w,c
  1551   0028E0  6EDA               	movwf	fsr2h,c
  1552   0028E2  C00C  FFDE         	movff	?_get16bitTMR0val,postinc2
  1553   0028E6  C00D  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1554                           
  1555                           ;main.c: 146:             stop(&motorL, &motorR, straightRamp);
  1556   0028EA  0ED2               	movlw	low main@motorL
  1557   0028EC  6E1F               	movwf	stop@mL^0,c
  1558   0028EE  0E01               	movlw	high main@motorL
  1559   0028F0  6E20               	movwf	(stop@mL+1)^0,c
  1560   0028F2  0EC8               	movlw	low main@motorR
  1561   0028F4  6E21               	movwf	stop@mR^0,c
  1562   0028F6  0E01               	movlw	high main@motorR
  1563   0028F8  6E22               	movwf	(stop@mR+1)^0,c
  1564   0028FA  C1B6  F023         	movff	main@straightRamp,stop@straightRamp
  1565   0028FE  EC81  F01D         	call	_stop	;wreg free
  1566   002902                     
  1567                           ;main.c: 147:             color_read(&RGBC);
  1568   002902  0EC0               	movlw	low main@RGBC
  1569   002904  6E10               	movwf	color_read@RGBC^0,c
  1570   002906  0E01               	movlw	high main@RGBC
  1571   002908  6E11               	movwf	(color_read@RGBC+1)^0,c
  1572   00290A  ECE2  F017         	call	_color_read	;wreg free
  1573   00290E                     
  1574                           ;main.c: 148:             color_normalise(RGBC, &RGBC_n);
  1575   00290E  EE21  F0C0         	lfsr	2,main@RGBC
  1576   002912  EE00  F026         	lfsr	0,color_normalise@RGBC
  1577   002916  0E07               	movlw	7
  1578   002918                     u3161:
  1579   002918  CFDB FFEB          	movff	plusw2,plusw0
  1580   00291C  06E8               	decf	wreg,f,c
  1581   00291E  E2FC               	bc	u3161
  1582   002920  0EB8               	movlw	low main@RGBC_n
  1583   002922  6E2E               	movwf	color_normalise@RGBC_n^0,c
  1584   002924  0E01               	movlw	high main@RGBC_n
  1585   002926  6E2F               	movwf	(color_normalise@RGBC_n+1)^0,c
  1586   002928  EC56  F01C         	call	_color_normalise	;wreg free
  1587   00292C                     
  1588                           ;main.c: 149:             color = color_detect(RGBC_n, red, green, blue, yellow, pink, o
      +                          range, lightblue, white);
  1589   00292C  EE21  F0B8         	lfsr	2,main@RGBC_n
  1590   002930  EE00  F00C         	lfsr	0,color_detect@RGBC_n
  1591   002934  0E07               	movlw	7
  1592   002936                     u3171:
  1593   002936  CFDB FFEB          	movff	plusw2,plusw0
  1594   00293A  06E8               	decf	wreg,f,c
  1595   00293C  E2FC               	bc	u3171
  1596   00293E  EE21  F09C         	lfsr	2,main@red
  1597   002942  EE00  F014         	lfsr	0,color_detect@red
  1598   002946  0E05               	movlw	5
  1599   002948                     u3181:
  1600   002948  CFDB FFEB          	movff	plusw2,plusw0
  1601   00294C  06E8               	decf	wreg,f,c
  1602   00294E  E2FC               	bc	u3181
  1603   002950  EE21  F0A2         	lfsr	2,main@green
  1604   002954  EE00  F01A         	lfsr	0,color_detect@green
  1605   002958  0E05               	movlw	5
  1606   00295A                     u3191:
  1607   00295A  CFDB FFEB          	movff	plusw2,plusw0
  1608   00295E  06E8               	decf	wreg,f,c
  1609   002960  E2FC               	bc	u3191
  1610   002962  EE21  F0A8         	lfsr	2,main@blue
  1611   002966  EE00  F020         	lfsr	0,color_detect@blue
  1612   00296A  0E05               	movlw	5
  1613   00296C                     u3201:
  1614   00296C  CFDB FFEB          	movff	plusw2,plusw0
  1615   002970  06E8               	decf	wreg,f,c
  1616   002972  E2FC               	bc	u3201
  1617   002974  EE21  F07A         	lfsr	2,main@yellow
  1618   002978  EE00  F026         	lfsr	0,color_detect@yellow
  1619   00297C  0E05               	movlw	5
  1620   00297E                     u3211:
  1621   00297E  CFDB FFEB          	movff	plusw2,plusw0
  1622   002982  06E8               	decf	wreg,f,c
  1623   002984  E2FC               	bc	u3211
  1624   002986  EE21  F080         	lfsr	2,main@pink
  1625   00298A  EE00  F02C         	lfsr	0,color_detect@pink
  1626   00298E  0E05               	movlw	5
  1627   002990                     u3221:
  1628   002990  CFDB FFEB          	movff	plusw2,plusw0
  1629   002994  06E8               	decf	wreg,f,c
  1630   002996  E2FC               	bc	u3221
  1631   002998  EE21  F086         	lfsr	2,main@orange
  1632   00299C  EE00  F032         	lfsr	0,color_detect@orange
  1633   0029A0  0E05               	movlw	5
  1634   0029A2                     u3231:
  1635   0029A2  CFDB FFEB          	movff	plusw2,plusw0
  1636   0029A6  06E8               	decf	wreg,f,c
  1637   0029A8  E2FC               	bc	u3231
  1638   0029AA  EE21  F08C         	lfsr	2,main@lightblue
  1639   0029AE  EE00  F038         	lfsr	0,color_detect@lightBlue
  1640   0029B2  0E05               	movlw	5
  1641   0029B4                     u3241:
  1642   0029B4  CFDB FFEB          	movff	plusw2,plusw0
  1643   0029B8  06E8               	decf	wreg,f,c
  1644   0029BA  E2FC               	bc	u3241
  1645   0029BC  EE21  F092         	lfsr	2,main@white
  1646   0029C0  EE00  F03E         	lfsr	0,color_detect@white
  1647   0029C4  0E05               	movlw	5
  1648   0029C6                     u3251:
  1649   0029C6  CFDB FFEB          	movff	plusw2,plusw0
  1650   0029CA  06E8               	decf	wreg,f,c
  1651   0029CC  E2FC               	bc	u3251
  1652   0029CE  EC73  F01F         	call	_color_detect	;wreg free
  1653   0029D2  0101               	movlb	1	; () banked
  1654   0029D4  6FAE               	movwf	main@color& (0+255),b
  1655   0029D6                     
  1656                           ; BSR set to: 1
  1657                           ;main.c: 151:             moveSequence[curMove] = color;
  1658   0029D6  0E52               	movlw	low main@moveSequence
  1659   0029D8  25AF               	addwf	main@curMove& (0+255),w,b
  1660   0029DA  6ED9               	movwf	fsr2l,c
  1661   0029DC  6ADA               	clrf	fsr2h,c
  1662   0029DE  0E01               	movlw	high main@moveSequence
  1663   0029E0  22DA               	addwfc	fsr2h,f,c
  1664   0029E2  C1AE  FFDF         	movff	main@color,indf2
  1665   0029E6                     
  1666                           ; BSR set to: 1
  1667                           ;main.c: 154:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1668   0029E6  0ED2               	movlw	low main@motorL
  1669   0029E8  0100               	movlb	0	; () banked
  1670   0029EA  6FB2               	movwf	move@mL& (0+255),b
  1671   0029EC  0E01               	movlw	high main@motorL
  1672   0029EE  6FB3               	movwf	(move@mL+1)& (0+255),b
  1673   0029F0  0EC8               	movlw	low main@motorR
  1674   0029F2  6FB4               	movwf	move@mR& (0+255),b
  1675   0029F4  0E01               	movlw	high main@motorR
  1676   0029F6  6FB5               	movwf	(move@mR+1)& (0+255),b
  1677   0029F8  C1AE  F0B6         	movff	main@color,move@color
  1678   0029FC  0E52               	movlw	low main@moveSequence
  1679   0029FE  6FB7               	movwf	move@moveSequence& (0+255),b
  1680   002A00  0E01               	movlw	high main@moveSequence
  1681   002A02  6FB8               	movwf	(move@moveSequence+1)& (0+255),b
  1682   002A04  0E00               	movlw	low main@straightTime
  1683   002A06  6FB9               	movwf	move@straightTime& (0+255),b
  1684   002A08  0E01               	movlw	high main@straightTime
  1685   002A0A  6FBA               	movwf	(move@straightTime+1)& (0+255),b
  1686   002A0C  C1AF  F0BB         	movff	main@curMove,move@curMove
  1687   002A10  C199  F0BC         	movff	main@straightSpeed,move@straightSpeed
  1688   002A14  C198  F0BD         	movff	main@reverseDuration,move@reverseDuration
  1689   002A18  C1B6  F0BE         	movff	main@straightRamp,move@straightRamp
  1690   002A1C  C19A  F0BF         	movff	main@turnSpeed,move@turnSpeed
  1691   002A20  C1B7  F0C0         	movff	main@turnDuration,move@turnDuration
  1692   002A24  C19B  F0C1         	movff	main@turnRamp,move@turnRamp
  1693   002A28  ECAF  F00D         	call	_move	;wreg free
  1694   002A2C                     
  1695                           ;main.c: 157:             color_read(&RGBC);
  1696   002A2C  0EC0               	movlw	low main@RGBC
  1697   002A2E  6E10               	movwf	color_read@RGBC^0,c
  1698   002A30  0E01               	movlw	high main@RGBC
  1699   002A32  6E11               	movwf	(color_read@RGBC+1)^0,c
  1700   002A34  ECE2  F017         	call	_color_read	;wreg free
  1701   002A38                     
  1702                           ;main.c: 158:             ambient=RGBC.C;
  1703   002A38  C1C6  F04E         	movff	main@RGBC+6,_ambient
  1704   002A3C  C1C7  F04F         	movff	main@RGBC+7,_ambient+1
  1705   002A40                     
  1706                           ;main.c: 160:             curMove++;
  1707   002A40  0101               	movlb	1	; () banked
  1708   002A42  2BAF               	incf	main@curMove& (0+255),f,b
  1709   002A44                     
  1710                           ; BSR set to: 1
  1711                           ;main.c: 161:             resetTimer();
  1712   002A44  EC87  F022         	call	_resetTimer	;wreg free
  1713   002A48                     
  1714                           ;main.c: 162:             PIE0bits.INT0IE=TMR0IE=1;
  1715   002A48  010E               	movlb	14	; () banked
  1716   002A4A  8B29               	bsf	41,5,b	;volatile
  1717   002A4C  AB29               	btfss	41,5,b	;volatile
  1718   002A4E  D002               	bra	u3265
  1719   002A50  8129               	bsf	41,0,b	;volatile
  1720   002A52  D002               	bra	u3267
  1721   002A54                     u3265:
  1722   002A54  010E               	movlb	14	; () banked
  1723   002A56  9129               	bcf	41,0,b	;volatile
  1724   002A58                     u3267:
  1725   002A58                     
  1726                           ; BSR set to: 14
  1727                           ;main.c: 163:             wall = 0;
  1728   002A58  0E00               	movlw	0
  1729   002A5A  0100               	movlb	0	; () banked
  1730   002A5C  6FB1               	movwf	_wall& (0+255),b
  1731   002A5E                     l4241:
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;main.c: 167:         if (lost == 1) {
  1735   002A5E  05B0               	decf	_lost& (0+255),w,b
  1736   002A60  A4D8               	btfss	status,2,c
  1737   002A62  EF35  F015         	goto	u3271
  1738   002A66  EF37  F015         	goto	u3270
  1739   002A6A                     u3271:
  1740   002A6A  EF6C  F015         	goto	l4251
  1741   002A6E                     u3270:
  1742   002A6E                     
  1743                           ; BSR set to: 0
  1744                           ;main.c: 168:             PIE0bits.INT0IE=0;
  1745   002A6E  010E               	movlb	14	; () banked
  1746   002A70  9129               	bcf	41,0,b	;volatile
  1747   002A72                     
  1748                           ; BSR set to: 14
  1749                           ;main.c: 169:             stop(&motorL, &motorR, straightRamp);
  1750   002A72  0ED2               	movlw	low main@motorL
  1751   002A74  6E1F               	movwf	stop@mL^0,c
  1752   002A76  0E01               	movlw	high main@motorL
  1753   002A78  6E20               	movwf	(stop@mL+1)^0,c
  1754   002A7A  0EC8               	movlw	low main@motorR
  1755   002A7C  6E21               	movwf	stop@mR^0,c
  1756   002A7E  0E01               	movlw	high main@motorR
  1757   002A80  6E22               	movwf	(stop@mR+1)^0,c
  1758   002A82  C1B6  F023         	movff	main@straightRamp,stop@straightRamp
  1759   002A86  EC81  F01D         	call	_stop	;wreg free
  1760                           
  1761                           ;main.c: 170:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1762   002A8A  0ED2               	movlw	low main@motorL
  1763   002A8C  6E2D               	movwf	lostReturnHome@mL^0,c
  1764   002A8E  0E01               	movlw	high main@motorL
  1765   002A90  6E2E               	movwf	(lostReturnHome@mL+1)^0,c
  1766   002A92  0EC8               	movlw	low main@motorR
  1767   002A94  6E2F               	movwf	lostReturnHome@mR^0,c
  1768   002A96  0E01               	movlw	high main@motorR
  1769   002A98  6E30               	movwf	(lostReturnHome@mR+1)^0,c
  1770   002A9A  0E52               	movlw	low main@moveSequence
  1771   002A9C  6E31               	movwf	lostReturnHome@moveSequence^0,c
  1772   002A9E  0E01               	movlw	high main@moveSequence
  1773   002AA0  6E32               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1774   002AA2  0E00               	movlw	low main@straightTime
  1775   002AA4  6E33               	movwf	lostReturnHome@straightTime^0,c
  1776   002AA6  0E01               	movlw	high main@straightTime
  1777   002AA8  6E34               	movwf	(lostReturnHome@straightTime+1)^0,c
  1778   002AAA  C1AF  F035         	movff	main@curMove,lostReturnHome@curMove
  1779   002AAE  C199  F036         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1780   002AB2  C198  F037         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1781   002AB6  C1B6  F038         	movff	main@straightRamp,lostReturnHome@straightRamp
  1782   002ABA  C19A  F039         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1783   002ABE  C1B7  F03A         	movff	main@turnDuration,lostReturnHome@turnDuration
  1784   002AC2  C19B  F03B         	movff	main@turnRamp,lostReturnHome@turnRamp
  1785   002AC6  EC5F  F00A         	call	_lostReturnHome	;wreg free
  1786   002ACA                     
  1787                           ;main.c: 171:             PIE0bits.INT0IE=1;
  1788   002ACA  010E               	movlb	14	; () banked
  1789   002ACC  8129               	bsf	41,0,b	;volatile
  1790   002ACE                     
  1791                           ; BSR set to: 14
  1792                           ;main.c: 172:             lost = 0;
  1793   002ACE  0E00               	movlw	0
  1794   002AD0  0100               	movlb	0	; () banked
  1795   002AD2  6FB0               	movwf	_lost& (0+255),b
  1796                           
  1797                           ;main.c: 173:             break;
  1798   002AD4  EF7F  F015         	goto	l100
  1799   002AD8                     l4251:
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;main.c: 176:         if (color == 8 || color == 9) {break;}
  1803   002AD8  0E08               	movlw	8
  1804   002ADA  0101               	movlb	1	; () banked
  1805   002ADC  19AE               	xorwf	main@color& (0+255),w,b
  1806   002ADE  B4D8               	btfsc	status,2,c
  1807   002AE0  EF74  F015         	goto	u3281
  1808   002AE4  EF76  F015         	goto	u3280
  1809   002AE8                     u3281:
  1810   002AE8  EF7F  F015         	goto	l100
  1811   002AEC                     u3280:
  1812   002AEC                     
  1813                           ; BSR set to: 1
  1814   002AEC  0E09               	movlw	9
  1815   002AEE  19AE               	xorwf	main@color& (0+255),w,b
  1816   002AF0  A4D8               	btfss	status,2,c
  1817   002AF2  EF7D  F015         	goto	u3291
  1818   002AF6  EF7F  F015         	goto	u3290
  1819   002AFA                     u3291:
  1820   002AFA  EF55  F014         	goto	l4213
  1821   002AFE                     u3290:
  1822   002AFE                     l100:
  1823   002AFE  EF4C  F000         	goto	start
  1824   002B02                     __end_of_main:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _rgb_2_hsv *****************
  1828 ;; Defined at:
  1829 ;;		line 312 in file "color.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  RGBC            8   37[COMRAM] struct RGBC_val
  1832 ;;  HSV             2   45[COMRAM] PTR struct HSV_val
  1833 ;;		 -> main@HSV(6), 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  diff            4   14[BANK0 ] unsigned long 
  1836 ;;  b               2   20[BANK0 ] unsigned int 
  1837 ;;  g               2   18[BANK0 ] unsigned int 
  1838 ;;  cmax            2   12[BANK0 ] unsigned int 
  1839 ;;  r               2   10[BANK0 ] unsigned int 
  1840 ;;  cmin            2    4[BANK0 ] unsigned int 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1850 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;      Totals:        22      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1854 ;;Total ram usage:       44 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; Hardware stack levels required when called: 6
  1857 ;; This function calls:
  1858 ;;		___aldiv
  1859 ;;		___lldiv
  1860 ;;		___lmul
  1861 ;;		_max
  1862 ;;		_min
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text1
  1869   0021B4                     __ptext1:
  1870                           	callstack 0
  1871   0021B4                     _rgb_2_hsv:
  1872                           	callstack 24
  1873   0021B4                     
  1874                           ;color.c: 315:     unsigned int r = (unsigned int)(RGBC.R*10000L/255);
  1875   0021B4  C026  F00C         	movff	rgb_2_hsv@RGBC,___lmul@multiplier
  1876   0021B8  C027  F00D         	movff	rgb_2_hsv@RGBC+1,___lmul@multiplier+1
  1877   0021BC  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  1878   0021BE  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  1879   0021C0  0E10               	movlw	16
  1880   0021C2  6E10               	movwf	___lmul@multiplicand^0,c
  1881   0021C4  0E27               	movlw	39
  1882   0021C6  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  1883   0021C8  0E00               	movlw	0
  1884   0021CA  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  1885   0021CC  0E00               	movlw	0
  1886   0021CE  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  1887   0021D0  EC6A  F020         	call	___lmul	;wreg free
  1888   0021D4  C00C  F018         	movff	?___lmul,___aldiv@dividend
  1889   0021D8  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  1890   0021DC  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  1891   0021E0  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  1892   0021E4  0EFF               	movlw	255
  1893   0021E6  6E1C               	movwf	___aldiv@divisor^0,c
  1894   0021E8  0E00               	movlw	0
  1895   0021EA  6E1D               	movwf	(___aldiv@divisor+1)^0,c
  1896   0021EC  0E00               	movlw	0
  1897   0021EE  6E1E               	movwf	(___aldiv@divisor+2)^0,c
  1898   0021F0  0E00               	movlw	0
  1899   0021F2  6E1F               	movwf	(___aldiv@divisor+3)^0,c
  1900   0021F4  ECFB  F01C         	call	___aldiv	;wreg free
  1901   0021F8  C018  F0BC         	movff	?___aldiv,rgb_2_hsv@r
  1902   0021FC  C019  F0BD         	movff	?___aldiv+1,rgb_2_hsv@r+1
  1903                           
  1904                           ;color.c: 316:     unsigned int g = (unsigned int)(RGBC.G*10000L/255);
  1905   002200  C028  F00C         	movff	rgb_2_hsv@RGBC+2,___lmul@multiplier
  1906   002204  C029  F00D         	movff	rgb_2_hsv@RGBC+3,___lmul@multiplier+1
  1907   002208  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  1908   00220A  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  1909   00220C  0E10               	movlw	16
  1910   00220E  6E10               	movwf	___lmul@multiplicand^0,c
  1911   002210  0E27               	movlw	39
  1912   002212  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  1913   002214  0E00               	movlw	0
  1914   002216  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  1915   002218  0E00               	movlw	0
  1916   00221A  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  1917   00221C  EC6A  F020         	call	___lmul	;wreg free
  1918   002220  C00C  F018         	movff	?___lmul,___aldiv@dividend
  1919   002224  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  1920   002228  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  1921   00222C  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  1922   002230  0EFF               	movlw	255
  1923   002232  6E1C               	movwf	___aldiv@divisor^0,c
  1924   002234  0E00               	movlw	0
  1925   002236  6E1D               	movwf	(___aldiv@divisor+1)^0,c
  1926   002238  0E00               	movlw	0
  1927   00223A  6E1E               	movwf	(___aldiv@divisor+2)^0,c
  1928   00223C  0E00               	movlw	0
  1929   00223E  6E1F               	movwf	(___aldiv@divisor+3)^0,c
  1930   002240  ECFB  F01C         	call	___aldiv	;wreg free
  1931   002244  C018  F0C4         	movff	?___aldiv,rgb_2_hsv@g
  1932   002248  C019  F0C5         	movff	?___aldiv+1,rgb_2_hsv@g+1
  1933                           
  1934                           ;color.c: 317:     unsigned int b = (unsigned int)(RGBC.B*10000L/255);
  1935   00224C  C02A  F00C         	movff	rgb_2_hsv@RGBC+4,___lmul@multiplier
  1936   002250  C02B  F00D         	movff	rgb_2_hsv@RGBC+5,___lmul@multiplier+1
  1937   002254  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  1938   002256  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  1939   002258  0E10               	movlw	16
  1940   00225A  6E10               	movwf	___lmul@multiplicand^0,c
  1941   00225C  0E27               	movlw	39
  1942   00225E  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  1943   002260  0E00               	movlw	0
  1944   002262  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  1945   002264  0E00               	movlw	0
  1946   002266  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  1947   002268  EC6A  F020         	call	___lmul	;wreg free
  1948   00226C  C00C  F018         	movff	?___lmul,___aldiv@dividend
  1949   002270  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  1950   002274  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  1951   002278  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  1952   00227C  0EFF               	movlw	255
  1953   00227E  6E1C               	movwf	___aldiv@divisor^0,c
  1954   002280  0E00               	movlw	0
  1955   002282  6E1D               	movwf	(___aldiv@divisor+1)^0,c
  1956   002284  0E00               	movlw	0
  1957   002286  6E1E               	movwf	(___aldiv@divisor+2)^0,c
  1958   002288  0E00               	movlw	0
  1959   00228A  6E1F               	movwf	(___aldiv@divisor+3)^0,c
  1960   00228C  ECFB  F01C         	call	___aldiv	;wreg free
  1961   002290  C018  F0C6         	movff	?___aldiv,rgb_2_hsv@b
  1962   002294  C019  F0C7         	movff	?___aldiv+1,rgb_2_hsv@b+1
  1963                           
  1964                           ;color.c: 320:     unsigned int cmax = max(r, max(g, b));
  1965   002298  C0C4  F00C         	movff	rgb_2_hsv@g,max@a
  1966   00229C  C0C5  F00D         	movff	rgb_2_hsv@g+1,max@a+1
  1967   0022A0  C0C6  F00E         	movff	rgb_2_hsv@b,max@b
  1968   0022A4  C0C7  F00F         	movff	rgb_2_hsv@b+1,max@b+1
  1969   0022A8  EC65  F021         	call	_max	;wreg free
  1970   0022AC  C00C  F0B8         	movff	?_max,_rgb_2_hsv$3519
  1971   0022B0  C00D  F0B9         	movff	?_max+1,_rgb_2_hsv$3519+1
  1972                           
  1973                           ;color.c: 320:     unsigned int cmax = max(r, max(g, b));
  1974   0022B4  C0BC  F00C         	movff	rgb_2_hsv@r,max@a
  1975   0022B8  C0BD  F00D         	movff	rgb_2_hsv@r+1,max@a+1
  1976   0022BC  C0B8  F00E         	movff	_rgb_2_hsv$3519,max@b
  1977   0022C0  C0B9  F00F         	movff	_rgb_2_hsv$3519+1,max@b+1
  1978   0022C4  EC65  F021         	call	_max	;wreg free
  1979   0022C8  C00C  F0BE         	movff	?_max,rgb_2_hsv@cmax
  1980   0022CC  C00D  F0BF         	movff	?_max+1,rgb_2_hsv@cmax+1
  1981                           
  1982                           ;color.c: 321:     unsigned int cmin = min(r, min(g, b));
  1983   0022D0  C0C4  F00C         	movff	rgb_2_hsv@g,min@a
  1984   0022D4  C0C5  F00D         	movff	rgb_2_hsv@g+1,min@a+1
  1985   0022D8  C0C6  F00E         	movff	rgb_2_hsv@b,min@b
  1986   0022DC  C0C7  F00F         	movff	rgb_2_hsv@b+1,min@b+1
  1987   0022E0  EC4F  F021         	call	_min	;wreg free
  1988   0022E4  C00C  F0BA         	movff	?_min,_rgb_2_hsv$3520
  1989   0022E8  C00D  F0BB         	movff	?_min+1,_rgb_2_hsv$3520+1
  1990                           
  1991                           ;color.c: 321:     unsigned int cmin = min(r, min(g, b));
  1992   0022EC  C0BC  F00C         	movff	rgb_2_hsv@r,min@a
  1993   0022F0  C0BD  F00D         	movff	rgb_2_hsv@r+1,min@a+1
  1994   0022F4  C0BA  F00E         	movff	_rgb_2_hsv$3520,min@b
  1995   0022F8  C0BB  F00F         	movff	_rgb_2_hsv$3520+1,min@b+1
  1996   0022FC  EC4F  F021         	call	_min	;wreg free
  1997   002300  C00C  F0B6         	movff	?_min,rgb_2_hsv@cmin
  1998   002304  C00D  F0B7         	movff	?_min+1,rgb_2_hsv@cmin+1
  1999   002308                     
  2000                           ;color.c: 322:     unsigned long diff = cmax - cmin;
  2001   002308  0100               	movlb	0	; () banked
  2002   00230A  51B6               	movf	rgb_2_hsv@cmin& (0+255),w,b
  2003   00230C  5DBE               	subwf	rgb_2_hsv@cmax& (0+255),w,b
  2004   00230E  6E30               	movwf	??_rgb_2_hsv^0,c
  2005   002310  51B7               	movf	(rgb_2_hsv@cmin+1)& (0+255),w,b
  2006   002312  59BF               	subwfb	(rgb_2_hsv@cmax+1)& (0+255),w,b
  2007   002314  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  2008   002316  C030  F0C0         	movff	??_rgb_2_hsv,rgb_2_hsv@diff
  2009   00231A  C031  F0C1         	movff	??_rgb_2_hsv+1,rgb_2_hsv@diff+1
  2010   00231E  6BC2               	clrf	(rgb_2_hsv@diff+2)& (0+255),b
  2011   002320  6BC3               	clrf	(rgb_2_hsv@diff+3)& (0+255),b
  2012   002322                     
  2013                           ; BSR set to: 0
  2014                           ;color.c: 325:     if (cmax == r){
  2015   002322  51BC               	movf	rgb_2_hsv@r& (0+255),w,b
  2016   002324  19BE               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  2017   002326  E107               	bnz	u2881
  2018   002328  51BD               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  2019   00232A  19BF               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  2020   00232C  A4D8               	btfss	status,2,c
  2021   00232E  EF9B  F011         	goto	u2881
  2022   002332  EF9D  F011         	goto	u2880
  2023   002336                     u2881:
  2024   002336  EF44  F012         	goto	l3969
  2025   00233A                     u2880:
  2026   00233A                     
  2027                           ; BSR set to: 0
  2028                           ;color.c: 326:         if (g > b){HSV->H = (unsigned int)((g-b)*6000L/diff);}
  2029   00233A  51C4               	movf	rgb_2_hsv@g& (0+255),w,b
  2030   00233C  5DC6               	subwf	rgb_2_hsv@b& (0+255),w,b
  2031   00233E  51C5               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  2032   002340  59C7               	subwfb	(rgb_2_hsv@b+1)& (0+255),w,b
  2033   002342  B0D8               	btfsc	status,0,c
  2034   002344  EFA6  F011         	goto	u2891
  2035   002348  EFA8  F011         	goto	u2890
  2036   00234C                     u2891:
  2037   00234C  EFDA  F011         	goto	l3963
  2038   002350                     u2890:
  2039   002350                     
  2040                           ; BSR set to: 0
  2041   002350  51C6               	movf	rgb_2_hsv@b& (0+255),w,b
  2042   002352  5DC4               	subwf	rgb_2_hsv@g& (0+255),w,b
  2043   002354  6E30               	movwf	??_rgb_2_hsv^0,c
  2044   002356  51C7               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  2045   002358  59C5               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  2046   00235A  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  2047   00235C  C030  F00C         	movff	??_rgb_2_hsv,___lmul@multiplier
  2048   002360  C031  F00D         	movff	??_rgb_2_hsv+1,___lmul@multiplier+1
  2049   002364  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  2050   002366  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  2051   002368  0E70               	movlw	112
  2052   00236A  6E10               	movwf	___lmul@multiplicand^0,c
  2053   00236C  0E17               	movlw	23
  2054   00236E  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  2055   002370  0E00               	movlw	0
  2056   002372  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  2057   002374  0E00               	movlw	0
  2058   002376  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  2059   002378  EC6A  F020         	call	___lmul	;wreg free
  2060   00237C  C00C  F018         	movff	?___lmul,___lldiv@dividend
  2061   002380  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  2062   002384  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  2063   002388  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  2064   00238C  C0C0  F01C         	movff	rgb_2_hsv@diff,___lldiv@divisor
  2065   002390  C0C1  F01D         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  2066   002394  C0C2  F01E         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  2067   002398  C0C3  F01F         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  2068   00239C  ECD9  F01E         	call	___lldiv	;wreg free
  2069   0023A0  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  2070   0023A4  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  2071   0023A8  C018  FFDE         	movff	?___lldiv,postinc2
  2072   0023AC  C019  FFDD         	movff	?___lldiv+1,postdec2
  2073   0023B0  EFFC  F012         	goto	l190
  2074   0023B4                     l3963:
  2075                           
  2076                           ; BSR set to: 0
  2077   0023B4  51C6               	movf	rgb_2_hsv@b& (0+255),w,b
  2078   0023B6  5DC4               	subwf	rgb_2_hsv@g& (0+255),w,b
  2079   0023B8  51C7               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  2080   0023BA  59C5               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  2081   0023BC  B0D8               	btfsc	status,0,c
  2082   0023BE  EFE3  F011         	goto	u2901
  2083   0023C2  EFE5  F011         	goto	u2900
  2084   0023C6                     u2901:
  2085   0023C6  EFFC  F012         	goto	l190
  2086   0023CA                     u2900:
  2087   0023CA                     
  2088                           ; BSR set to: 0
  2089   0023CA  51C6               	movf	rgb_2_hsv@b& (0+255),w,b
  2090   0023CC  6E30               	movwf	??_rgb_2_hsv^0,c
  2091   0023CE  51C7               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  2092   0023D0  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  2093   0023D2  6A32               	clrf	(??_rgb_2_hsv+2)^0,c
  2094   0023D4  6A33               	clrf	(??_rgb_2_hsv+3)^0,c
  2095   0023D6  C0C0  F00C         	movff	rgb_2_hsv@diff,___lmul@multiplier
  2096   0023DA  C0C1  F00D         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  2097   0023DE  C0C2  F00E         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  2098   0023E2  C0C3  F00F         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  2099   0023E6  0E06               	movlw	6
  2100   0023E8  6E10               	movwf	___lmul@multiplicand^0,c
  2101   0023EA  0E00               	movlw	0
  2102   0023EC  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  2103   0023EE  0E00               	movlw	0
  2104   0023F0  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  2105   0023F2  0E00               	movlw	0
  2106   0023F4  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  2107   0023F6  EC6A  F020         	call	___lmul	;wreg free
  2108   0023FA  0100               	movlb	0	; () banked
  2109   0023FC  51C4               	movf	rgb_2_hsv@g& (0+255),w,b
  2110   0023FE  240C               	addwf	?___lmul^0,w,c
  2111   002400  6E34               	movwf	(??_rgb_2_hsv+4)^0,c
  2112   002402  51C5               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  2113   002404  200D               	addwfc	(?___lmul+1)^0,w,c
  2114   002406  6E35               	movwf	(??_rgb_2_hsv+5)^0,c
  2115   002408  0E00               	movlw	0
  2116   00240A  200E               	addwfc	(?___lmul+2)^0,w,c
  2117   00240C  6E36               	movwf	(??_rgb_2_hsv+6)^0,c
  2118   00240E  0E00               	movlw	0
  2119   002410  200F               	addwfc	(?___lmul+3)^0,w,c
  2120   002412  6E37               	movwf	(??_rgb_2_hsv+7)^0,c
  2121   002414  5030               	movf	??_rgb_2_hsv^0,w,c
  2122   002416  5C34               	subwf	(??_rgb_2_hsv+4)^0,w,c
  2123   002418  6FB2               	movwf	_rgb_2_hsv$3521& (0+255),b
  2124   00241A  5031               	movf	(??_rgb_2_hsv+1)^0,w,c
  2125   00241C  5835               	subwfb	(??_rgb_2_hsv+5)^0,w,c
  2126   00241E  6FB3               	movwf	(_rgb_2_hsv$3521+1)& (0+255),b
  2127   002420  5032               	movf	(??_rgb_2_hsv+2)^0,w,c
  2128   002422  5836               	subwfb	(??_rgb_2_hsv+6)^0,w,c
  2129   002424  6FB4               	movwf	(_rgb_2_hsv$3521+2)& (0+255),b
  2130   002426  5033               	movf	(??_rgb_2_hsv+3)^0,w,c
  2131   002428  5837               	subwfb	(??_rgb_2_hsv+7)^0,w,c
  2132   00242A  6FB5               	movwf	(_rgb_2_hsv$3521+3)& (0+255),b
  2133   00242C                     
  2134                           ; BSR set to: 0
  2135   00242C  C0B2  F00C         	movff	_rgb_2_hsv$3521,___lmul@multiplier
  2136   002430  C0B3  F00D         	movff	_rgb_2_hsv$3521+1,___lmul@multiplier+1
  2137   002434  C0B4  F00E         	movff	_rgb_2_hsv$3521+2,___lmul@multiplier+2
  2138   002438  C0B5  F00F         	movff	_rgb_2_hsv$3521+3,___lmul@multiplier+3
  2139   00243C  0E70               	movlw	112
  2140   00243E  6E10               	movwf	___lmul@multiplicand^0,c
  2141   002440  0E17               	movlw	23
  2142   002442  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  2143   002444  0E00               	movlw	0
  2144   002446  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  2145   002448  0E00               	movlw	0
  2146   00244A  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  2147   00244C  EC6A  F020         	call	___lmul	;wreg free
  2148   002450  C00C  F018         	movff	?___lmul,___lldiv@dividend
  2149   002454  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  2150   002458  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  2151   00245C  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  2152   002460  C0C0  F01C         	movff	rgb_2_hsv@diff,___lldiv@divisor
  2153   002464  C0C1  F01D         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  2154   002468  C0C2  F01E         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  2155   00246C  C0C3  F01F         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  2156   002470  ECD9  F01E         	call	___lldiv	;wreg free
  2157   002474  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  2158   002478  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  2159   00247C  C018  FFDE         	movff	?___lldiv,postinc2
  2160   002480  C019  FFDD         	movff	?___lldiv+1,postdec2
  2161   002484  EFFC  F012         	goto	l190
  2162   002488                     l3969:
  2163                           
  2164                           ; BSR set to: 0
  2165   002488  51C4               	movf	rgb_2_hsv@g& (0+255),w,b
  2166   00248A  19BE               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  2167   00248C  E107               	bnz	u2911
  2168   00248E  51C5               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  2169   002490  19BF               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  2170   002492  A4D8               	btfss	status,2,c
  2171   002494  EF4E  F012         	goto	u2911
  2172   002498  EF50  F012         	goto	u2910
  2173   00249C                     u2911:
  2174   00249C  EF9D  F012         	goto	l3973
  2175   0024A0                     u2910:
  2176   0024A0                     
  2177                           ; BSR set to: 0
  2178   0024A0  51BC               	movf	rgb_2_hsv@r& (0+255),w,b
  2179   0024A2  6E30               	movwf	??_rgb_2_hsv^0,c
  2180   0024A4  51BD               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  2181   0024A6  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  2182   0024A8  6A32               	clrf	(??_rgb_2_hsv+2)^0,c
  2183   0024AA  6A33               	clrf	(??_rgb_2_hsv+3)^0,c
  2184   0024AC  90D8               	bcf	status,0,c
  2185   0024AE  35C0               	rlcf	rgb_2_hsv@diff& (0+255),w,b
  2186   0024B0  6E34               	movwf	(??_rgb_2_hsv+4)^0,c
  2187   0024B2  35C1               	rlcf	(rgb_2_hsv@diff+1)& (0+255),w,b
  2188   0024B4  6E35               	movwf	(??_rgb_2_hsv+5)^0,c
  2189   0024B6  35C2               	rlcf	(rgb_2_hsv@diff+2)& (0+255),w,b
  2190   0024B8  6E36               	movwf	(??_rgb_2_hsv+6)^0,c
  2191   0024BA  35C3               	rlcf	(rgb_2_hsv@diff+3)& (0+255),w,b
  2192   0024BC  6E37               	movwf	(??_rgb_2_hsv+7)^0,c
  2193   0024BE  51C6               	movf	rgb_2_hsv@b& (0+255),w,b
  2194   0024C0  2434               	addwf	(??_rgb_2_hsv+4)^0,w,c
  2195   0024C2  6E38               	movwf	(??_rgb_2_hsv+8)^0,c
  2196   0024C4  51C7               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  2197   0024C6  2035               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  2198   0024C8  6E39               	movwf	(??_rgb_2_hsv+9)^0,c
  2199   0024CA  0E00               	movlw	0
  2200   0024CC  2036               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  2201   0024CE  6E3A               	movwf	(??_rgb_2_hsv+10)^0,c
  2202   0024D0  0E00               	movlw	0
  2203   0024D2  2037               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  2204   0024D4  6E3B               	movwf	(??_rgb_2_hsv+11)^0,c
  2205   0024D6  5030               	movf	??_rgb_2_hsv^0,w,c
  2206   0024D8  5C38               	subwf	(??_rgb_2_hsv+8)^0,w,c
  2207   0024DA  6E0C               	movwf	___lmul@multiplier^0,c
  2208   0024DC  5031               	movf	(??_rgb_2_hsv+1)^0,w,c
  2209   0024DE  5839               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  2210   0024E0  6E0D               	movwf	(___lmul@multiplier+1)^0,c
  2211   0024E2  5032               	movf	(??_rgb_2_hsv+2)^0,w,c
  2212   0024E4  583A               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  2213   0024E6  6E0E               	movwf	(___lmul@multiplier+2)^0,c
  2214   0024E8  5033               	movf	(??_rgb_2_hsv+3)^0,w,c
  2215   0024EA  583B               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  2216   0024EC  6E0F               	movwf	(___lmul@multiplier+3)^0,c
  2217   0024EE  0E70               	movlw	112
  2218   0024F0  6E10               	movwf	___lmul@multiplicand^0,c
  2219   0024F2  0E17               	movlw	23
  2220   0024F4  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  2221   0024F6  0E00               	movlw	0
  2222   0024F8  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  2223   0024FA  0E00               	movlw	0
  2224   0024FC  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  2225   0024FE  EC6A  F020         	call	___lmul	;wreg free
  2226   002502  C00C  F018         	movff	?___lmul,___lldiv@dividend
  2227   002506  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  2228   00250A  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  2229   00250E  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  2230   002512  C0C0  F01C         	movff	rgb_2_hsv@diff,___lldiv@divisor
  2231   002516  C0C1  F01D         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  2232   00251A  C0C2  F01E         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  2233   00251E  C0C3  F01F         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  2234   002522  ECD9  F01E         	call	___lldiv	;wreg free
  2235   002526  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  2236   00252A  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  2237   00252E  C018  FFDE         	movff	?___lldiv,postinc2
  2238   002532  C019  FFDD         	movff	?___lldiv+1,postdec2
  2239   002536  EFFC  F012         	goto	l190
  2240   00253A                     l3973:
  2241                           
  2242                           ; BSR set to: 0
  2243   00253A  51C6               	movf	rgb_2_hsv@b& (0+255),w,b
  2244   00253C  19BE               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  2245   00253E  E107               	bnz	u2921
  2246   002540  51C7               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  2247   002542  19BF               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  2248   002544  A4D8               	btfss	status,2,c
  2249   002546  EFA7  F012         	goto	u2921
  2250   00254A  EFA9  F012         	goto	u2920
  2251   00254E                     u2921:
  2252   00254E  EFFC  F012         	goto	l190
  2253   002552                     u2920:
  2254   002552                     
  2255                           ; BSR set to: 0
  2256   002552  51C4               	movf	rgb_2_hsv@g& (0+255),w,b
  2257   002554  6E30               	movwf	??_rgb_2_hsv^0,c
  2258   002556  51C5               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  2259   002558  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  2260   00255A  6A32               	clrf	(??_rgb_2_hsv+2)^0,c
  2261   00255C  6A33               	clrf	(??_rgb_2_hsv+3)^0,c
  2262   00255E  C0C0  F034         	movff	rgb_2_hsv@diff,??_rgb_2_hsv+4
  2263   002562  C0C1  F035         	movff	rgb_2_hsv@diff+1,??_rgb_2_hsv+5
  2264   002566  C0C2  F036         	movff	rgb_2_hsv@diff+2,??_rgb_2_hsv+6
  2265   00256A  C0C3  F037         	movff	rgb_2_hsv@diff+3,??_rgb_2_hsv+7
  2266   00256E  0E02               	movlw	2
  2267   002570                     u2935:
  2268   002570  90D8               	bcf	status,0,c
  2269   002572  3634               	rlcf	(??_rgb_2_hsv+4)^0,f,c
  2270   002574  3635               	rlcf	(??_rgb_2_hsv+5)^0,f,c
  2271   002576  3636               	rlcf	(??_rgb_2_hsv+6)^0,f,c
  2272   002578  3637               	rlcf	(??_rgb_2_hsv+7)^0,f,c
  2273   00257A  2EE8               	decfsz	wreg,f,c
  2274   00257C  EFB8  F012         	goto	u2935
  2275   002580  51BC               	movf	rgb_2_hsv@r& (0+255),w,b
  2276   002582  2434               	addwf	(??_rgb_2_hsv+4)^0,w,c
  2277   002584  6E38               	movwf	(??_rgb_2_hsv+8)^0,c
  2278   002586  51BD               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  2279   002588  2035               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  2280   00258A  6E39               	movwf	(??_rgb_2_hsv+9)^0,c
  2281   00258C  0E00               	movlw	0
  2282   00258E  2036               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  2283   002590  6E3A               	movwf	(??_rgb_2_hsv+10)^0,c
  2284   002592  0E00               	movlw	0
  2285   002594  2037               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  2286   002596  6E3B               	movwf	(??_rgb_2_hsv+11)^0,c
  2287   002598  5030               	movf	??_rgb_2_hsv^0,w,c
  2288   00259A  5C38               	subwf	(??_rgb_2_hsv+8)^0,w,c
  2289   00259C  6E0C               	movwf	___lmul@multiplier^0,c
  2290   00259E  5031               	movf	(??_rgb_2_hsv+1)^0,w,c
  2291   0025A0  5839               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  2292   0025A2  6E0D               	movwf	(___lmul@multiplier+1)^0,c
  2293   0025A4  5032               	movf	(??_rgb_2_hsv+2)^0,w,c
  2294   0025A6  583A               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  2295   0025A8  6E0E               	movwf	(___lmul@multiplier+2)^0,c
  2296   0025AA  5033               	movf	(??_rgb_2_hsv+3)^0,w,c
  2297   0025AC  583B               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  2298   0025AE  6E0F               	movwf	(___lmul@multiplier+3)^0,c
  2299   0025B0  0E70               	movlw	112
  2300   0025B2  6E10               	movwf	___lmul@multiplicand^0,c
  2301   0025B4  0E17               	movlw	23
  2302   0025B6  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  2303   0025B8  0E00               	movlw	0
  2304   0025BA  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  2305   0025BC  0E00               	movlw	0
  2306   0025BE  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  2307   0025C0  EC6A  F020         	call	___lmul	;wreg free
  2308   0025C4  C00C  F018         	movff	?___lmul,___lldiv@dividend
  2309   0025C8  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  2310   0025CC  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  2311   0025D0  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  2312   0025D4  C0C0  F01C         	movff	rgb_2_hsv@diff,___lldiv@divisor
  2313   0025D8  C0C1  F01D         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  2314   0025DC  C0C2  F01E         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  2315   0025E0  C0C3  F01F         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  2316   0025E4  ECD9  F01E         	call	___lldiv	;wreg free
  2317   0025E8  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  2318   0025EC  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  2319   0025F0  C018  FFDE         	movff	?___lldiv,postinc2
  2320   0025F4  C019  FFDD         	movff	?___lldiv+1,postdec2
  2321   0025F8                     l190:
  2322                           
  2323                           ;color.c: 334:     HSV->S = (unsigned int)((diff * 10000)/cmax);
  2324   0025F8  C0C0  F00C         	movff	rgb_2_hsv@diff,___lmul@multiplier
  2325   0025FC  C0C1  F00D         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  2326   002600  C0C2  F00E         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  2327   002604  C0C3  F00F         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  2328   002608  0E10               	movlw	16
  2329   00260A  6E10               	movwf	___lmul@multiplicand^0,c
  2330   00260C  0E27               	movlw	39
  2331   00260E  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  2332   002610  0E00               	movlw	0
  2333   002612  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  2334   002614  0E00               	movlw	0
  2335   002616  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  2336   002618  EC6A  F020         	call	___lmul	;wreg free
  2337   00261C  C00C  F018         	movff	?___lmul,___lldiv@dividend
  2338   002620  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  2339   002624  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  2340   002628  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  2341   00262C  C0BE  F01C         	movff	rgb_2_hsv@cmax,___lldiv@divisor
  2342   002630  C0BF  F01D         	movff	rgb_2_hsv@cmax+1,___lldiv@divisor+1
  2343   002634  6A1E               	clrf	(___lldiv@divisor+2)^0,c
  2344   002636  6A1F               	clrf	(___lldiv@divisor+3)^0,c
  2345   002638  ECD9  F01E         	call	___lldiv	;wreg free
  2346   00263C  EE20 F002          	lfsr	2,2
  2347   002640  502E               	movf	rgb_2_hsv@HSV^0,w,c
  2348   002642  26D9               	addwf	fsr2l,f,c
  2349   002644  502F               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  2350   002646  22DA               	addwfc	fsr2h,f,c
  2351   002648  C018  FFDE         	movff	?___lldiv,postinc2
  2352   00264C  C019  FFDD         	movff	?___lldiv+1,postdec2
  2353   002650                     
  2354                           ;color.c: 336:     if (HSV->S == 0){HSV->H = 0;}
  2355   002650  EE20 F002          	lfsr	2,2
  2356   002654  502E               	movf	rgb_2_hsv@HSV^0,w,c
  2357   002656  26D9               	addwf	fsr2l,f,c
  2358   002658  502F               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  2359   00265A  22DA               	addwfc	fsr2h,f,c
  2360   00265C  50DE               	movf	postinc2,w,c
  2361   00265E  10DE               	iorwf	postinc2,w,c
  2362   002660  A4D8               	btfss	status,2,c
  2363   002662  EF35  F013         	goto	u2941
  2364   002666  EF37  F013         	goto	u2940
  2365   00266A                     u2941:
  2366   00266A  EF3D  F013         	goto	l3981
  2367   00266E                     u2940:
  2368   00266E  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  2369   002672  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  2370   002676  6ADE               	clrf	postinc2,c
  2371   002678  6ADD               	clrf	postdec2,c
  2372   00267A                     l3981:
  2373                           
  2374                           ;color.c: 339:     HSV->V = cmax;
  2375   00267A  EE20 F004          	lfsr	2,4
  2376   00267E  502E               	movf	rgb_2_hsv@HSV^0,w,c
  2377   002680  26D9               	addwf	fsr2l,f,c
  2378   002682  502F               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  2379   002684  22DA               	addwfc	fsr2h,f,c
  2380   002686  C0BE  FFDE         	movff	rgb_2_hsv@cmax,postinc2
  2381   00268A  C0BF  FFDD         	movff	rgb_2_hsv@cmax+1,postdec2
  2382   00268E  0012               	return		;funcret
  2383   002690                     __end_of_rgb_2_hsv:
  2384                           	callstack 0
  2385                           
  2386 ;; *************** function _min *****************
  2387 ;; Defined at:
  2388 ;;		line 307 in file "color.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  a               2   11[COMRAM] unsigned int 
  2391 ;;  b               2   13[COMRAM] unsigned int 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  2   11[COMRAM] unsigned int 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2407 ;;Total ram usage:        4 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 5
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_rgb_2_hsv
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text2
  2418   00429E                     __ptext2:
  2419                           	callstack 0
  2420   00429E                     _min:
  2421                           	callstack 24
  2422   00429E                     
  2423                           ;color.c: 308:     if (a < b){return a;}
  2424   00429E  500E               	movf	min@b^0,w,c
  2425   0042A0  5C0C               	subwf	min@a^0,w,c
  2426   0042A2  500F               	movf	(min@b+1)^0,w,c
  2427   0042A4  580D               	subwfb	(min@a+1)^0,w,c
  2428   0042A6  B0D8               	btfsc	status,0,c
  2429   0042A8  EF58  F021         	goto	u2841
  2430   0042AC  EF5A  F021         	goto	u2840
  2431   0042B0                     u2841:
  2432   0042B0  EF60  F021         	goto	l181
  2433   0042B4                     u2840:
  2434   0042B4  C00C  F00C         	movff	min@a,?_min
  2435   0042B8  C00D  F00D         	movff	min@a+1,?_min+1
  2436   0042BC  EF64  F021         	goto	l182
  2437   0042C0                     l181:
  2438   0042C0  C00E  F00C         	movff	min@b,?_min
  2439   0042C4  C00F  F00D         	movff	min@b+1,?_min+1
  2440   0042C8                     l182:
  2441   0042C8  0012               	return		;funcret
  2442   0042CA                     __end_of_min:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _max *****************
  2446 ;; Defined at:
  2447 ;;		line 302 in file "color.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  a               2   11[COMRAM] unsigned int 
  2450 ;;  b               2   13[COMRAM] unsigned int 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  2   11[COMRAM] unsigned int 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2466 ;;Total ram usage:        4 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 5
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_rgb_2_hsv
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text3
  2477   0042CA                     __ptext3:
  2478                           	callstack 0
  2479   0042CA                     _max:
  2480                           	callstack 24
  2481   0042CA                     
  2482                           ;color.c: 303:     if (a > b){return a;}
  2483   0042CA  500C               	movf	max@a^0,w,c
  2484   0042CC  5C0E               	subwf	max@b^0,w,c
  2485   0042CE  500D               	movf	(max@a+1)^0,w,c
  2486   0042D0  580F               	subwfb	(max@b+1)^0,w,c
  2487   0042D2  B0D8               	btfsc	status,0,c
  2488   0042D4  EF6E  F021         	goto	u2831
  2489   0042D8  EF70  F021         	goto	u2830
  2490   0042DC                     u2831:
  2491   0042DC  EF76  F021         	goto	l176
  2492   0042E0                     u2830:
  2493   0042E0  C00C  F00C         	movff	max@a,?_max
  2494   0042E4  C00D  F00D         	movff	max@a+1,?_max+1
  2495   0042E8  EF7A  F021         	goto	l177
  2496   0042EC                     l176:
  2497   0042EC  C00E  F00C         	movff	max@b,?_max
  2498   0042F0  C00F  F00D         	movff	max@b+1,?_max+1
  2499   0042F4                     l177:
  2500   0042F4  0012               	return		;funcret
  2501   0042F6                     __end_of_max:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function ___lldiv *****************
  2505 ;; Defined at:
  2506 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  dividend        4   23[COMRAM] unsigned long 
  2509 ;;  divisor         4   27[COMRAM] unsigned long 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  quotient        4   31[COMRAM] unsigned long 
  2512 ;;  counter         1   35[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  4   23[COMRAM] unsigned long 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2522 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;Total ram usage:       13 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 5
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_rgb_2_hsv
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text4
  2537   003DB2                     __ptext4:
  2538                           	callstack 0
  2539   003DB2                     ___lldiv:
  2540                           	callstack 24
  2541   003DB2  0E00               	movlw	0
  2542   003DB4  6E20               	movwf	___lldiv@quotient^0,c
  2543   003DB6  0E00               	movlw	0
  2544   003DB8  6E21               	movwf	(___lldiv@quotient+1)^0,c
  2545   003DBA  0E00               	movlw	0
  2546   003DBC  6E22               	movwf	(___lldiv@quotient+2)^0,c
  2547   003DBE  0E00               	movlw	0
  2548   003DC0  6E23               	movwf	(___lldiv@quotient+3)^0,c
  2549   003DC2  501C               	movf	___lldiv@divisor^0,w,c
  2550   003DC4  101D               	iorwf	(___lldiv@divisor+1)^0,w,c
  2551   003DC6  101E               	iorwf	(___lldiv@divisor+2)^0,w,c
  2552   003DC8  101F               	iorwf	(___lldiv@divisor+3)^0,w,c
  2553   003DCA  B4D8               	btfsc	status,2,c
  2554   003DCC  EFEA  F01E         	goto	u2851
  2555   003DD0  EFEC  F01E         	goto	u2850
  2556   003DD4                     u2851:
  2557   003DD4  EF22  F01F         	goto	l715
  2558   003DD8                     u2850:
  2559   003DD8  0E01               	movlw	1
  2560   003DDA  6E24               	movwf	___lldiv@counter^0,c
  2561   003DDC  EFF6  F01E         	goto	l3939
  2562   003DE0                     l3937:
  2563   003DE0  90D8               	bcf	status,0,c
  2564   003DE2  361C               	rlcf	___lldiv@divisor^0,f,c
  2565   003DE4  361D               	rlcf	(___lldiv@divisor+1)^0,f,c
  2566   003DE6  361E               	rlcf	(___lldiv@divisor+2)^0,f,c
  2567   003DE8  361F               	rlcf	(___lldiv@divisor+3)^0,f,c
  2568   003DEA  2A24               	incf	___lldiv@counter^0,f,c
  2569   003DEC                     l3939:
  2570   003DEC  AE1F               	btfss	(___lldiv@divisor+3)^0,7,c
  2571   003DEE  EFFB  F01E         	goto	u2861
  2572   003DF2  EFFD  F01E         	goto	u2860
  2573   003DF6                     u2861:
  2574   003DF6  EFF0  F01E         	goto	l3937
  2575   003DFA                     u2860:
  2576   003DFA                     l3941:
  2577   003DFA  90D8               	bcf	status,0,c
  2578   003DFC  3620               	rlcf	___lldiv@quotient^0,f,c
  2579   003DFE  3621               	rlcf	(___lldiv@quotient+1)^0,f,c
  2580   003E00  3622               	rlcf	(___lldiv@quotient+2)^0,f,c
  2581   003E02  3623               	rlcf	(___lldiv@quotient+3)^0,f,c
  2582   003E04  501C               	movf	___lldiv@divisor^0,w,c
  2583   003E06  5C18               	subwf	___lldiv@dividend^0,w,c
  2584   003E08  501D               	movf	(___lldiv@divisor+1)^0,w,c
  2585   003E0A  5819               	subwfb	(___lldiv@dividend+1)^0,w,c
  2586   003E0C  501E               	movf	(___lldiv@divisor+2)^0,w,c
  2587   003E0E  581A               	subwfb	(___lldiv@dividend+2)^0,w,c
  2588   003E10  501F               	movf	(___lldiv@divisor+3)^0,w,c
  2589   003E12  581B               	subwfb	(___lldiv@dividend+3)^0,w,c
  2590   003E14  A0D8               	btfss	status,0,c
  2591   003E16  EF0F  F01F         	goto	u2871
  2592   003E1A  EF11  F01F         	goto	u2870
  2593   003E1E                     u2871:
  2594   003E1E  EF1A  F01F         	goto	l3949
  2595   003E22                     u2870:
  2596   003E22  501C               	movf	___lldiv@divisor^0,w,c
  2597   003E24  5E18               	subwf	___lldiv@dividend^0,f,c
  2598   003E26  501D               	movf	(___lldiv@divisor+1)^0,w,c
  2599   003E28  5A19               	subwfb	(___lldiv@dividend+1)^0,f,c
  2600   003E2A  501E               	movf	(___lldiv@divisor+2)^0,w,c
  2601   003E2C  5A1A               	subwfb	(___lldiv@dividend+2)^0,f,c
  2602   003E2E  501F               	movf	(___lldiv@divisor+3)^0,w,c
  2603   003E30  5A1B               	subwfb	(___lldiv@dividend+3)^0,f,c
  2604   003E32  8020               	bsf	___lldiv@quotient^0,0,c
  2605   003E34                     l3949:
  2606   003E34  90D8               	bcf	status,0,c
  2607   003E36  321F               	rrcf	(___lldiv@divisor+3)^0,f,c
  2608   003E38  321E               	rrcf	(___lldiv@divisor+2)^0,f,c
  2609   003E3A  321D               	rrcf	(___lldiv@divisor+1)^0,f,c
  2610   003E3C  321C               	rrcf	___lldiv@divisor^0,f,c
  2611   003E3E  2E24               	decfsz	___lldiv@counter^0,f,c
  2612   003E40  EFFD  F01E         	goto	l3941
  2613   003E44                     l715:
  2614   003E44  C020  F018         	movff	___lldiv@quotient,?___lldiv
  2615   003E48  C021  F019         	movff	___lldiv@quotient+1,?___lldiv+1
  2616   003E4C  C022  F01A         	movff	___lldiv@quotient+2,?___lldiv+2
  2617   003E50  C023  F01B         	movff	___lldiv@quotient+3,?___lldiv+3
  2618   003E54  0012               	return		;funcret
  2619   003E56                     __end_of___lldiv:
  2620                           	callstack 0
  2621                           
  2622 ;; *************** function _move *****************
  2623 ;; Defined at:
  2624 ;;		line 91 in file "dc_motor.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  2627 ;;		 -> main@motorL(10), 
  2628 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  2629 ;;		 -> main@motorR(10), 
  2630 ;;  color           1    4[BANK0 ] unsigned char 
  2631 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  2632 ;;		 -> main@moveSequence(40), 
  2633 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  2634 ;;		 -> main@straightTime(82), 
  2635 ;;  curMove         1    9[BANK0 ] unsigned char 
  2636 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  2637 ;;  reverseDurat    1   11[BANK0 ] unsigned char 
  2638 ;;  straightRamp    1   12[BANK0 ] unsigned char 
  2639 ;;  turnSpeed       1   13[BANK0 ] unsigned char 
  2640 ;;  turnDuration    1   14[BANK0 ] unsigned char 
  2641 ;;  turnRamp        1   15[BANK0 ] unsigned char 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2653 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;Total ram usage:       18 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 9
  2660 ;; This function calls:
  2661 ;;		_fullSpeedAhead
  2662 ;;		_returnHome
  2663 ;;		_reverseOneSquare
  2664 ;;		_turnLeft
  2665 ;;		_turnRight
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text5
  2672   001B5E                     __ptext5:
  2673                           	callstack 0
  2674   001B5E                     _move:
  2675                           	callstack 21
  2676   001B5E                     
  2677                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reve
      +                          rseDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, uns
      +                          igned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  2678   001B5E  0100               	movlb	0	; () banked
  2679   001B60  05B6               	decf	move@color& (0+255),w,b
  2680   001B62  A4D8               	btfss	status,2,c
  2681   001B64  EFB6  F00D         	goto	u3011
  2682   001B68  EFB8  F00D         	goto	u3010
  2683   001B6C                     u3011:
  2684   001B6C  EF00  F00E         	goto	l4039
  2685   001B70                     u3010:
  2686   001B70                     
  2687                           ; BSR set to: 0
  2688                           ;dc_motor.c: 94:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2689   001B70  C0B2  F01F         	movff	move@mL,turnRight@mL
  2690   001B74  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2691   001B78  C0B4  F021         	movff	move@mR,turnRight@mR
  2692   001B7C  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2693   001B80  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2694   001B84  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2695   001B88  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2696   001B8C  ECCC  F019         	call	_turnRight	;wreg free
  2697   001B90                     
  2698                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2699   001B90  0E05               	movlw	5
  2700   001B92  6E42               	movwf	(??_move+1)^0,c
  2701   001B94  0E0F               	movlw	15
  2702   001B96  6E41               	movwf	??_move^0,c
  2703   001B98  0EF1               	movlw	241
  2704   001B9A                     u3337:
  2705   001B9A  2EE8               	decfsz	wreg,f,c
  2706   001B9C  D7FE               	bra	u3337
  2707   001B9E  2E41               	decfsz	??_move^0,f,c
  2708   001BA0  D7FC               	bra	u3337
  2709   001BA2  2E42               	decfsz	(??_move+1)^0,f,c
  2710   001BA4  D7FA               	bra	u3337
  2711   001BA6  0000               	nop	
  2712   001BA8                     
  2713                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2714   001BA8  C0B2  F01F         	movff	move@mL,turnRight@mL
  2715   001BAC  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2716   001BB0  C0B4  F021         	movff	move@mR,turnRight@mR
  2717   001BB4  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2718   001BB8  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2719   001BBC  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2720   001BC0  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2721   001BC4  ECCC  F019         	call	_turnRight	;wreg free
  2722                           
  2723                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2724   001BC8  0E05               	movlw	5
  2725   001BCA  6E42               	movwf	(??_move+1)^0,c
  2726   001BCC  0E0F               	movlw	15
  2727   001BCE  6E41               	movwf	??_move^0,c
  2728   001BD0  0EF1               	movlw	241
  2729   001BD2                     u3347:
  2730   001BD2  2EE8               	decfsz	wreg,f,c
  2731   001BD4  D7FE               	bra	u3347
  2732   001BD6  2E41               	decfsz	??_move^0,f,c
  2733   001BD8  D7FC               	bra	u3347
  2734   001BDA  2E42               	decfsz	(??_move+1)^0,f,c
  2735   001BDC  D7FA               	bra	u3347
  2736   001BDE  0000               	nop	
  2737   001BE0                     
  2738                           ;dc_motor.c: 98:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2739   001BE0  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2740   001BE4  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2741   001BE8  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2742   001BEC  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2743   001BF0  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2744   001BF4  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2745   001BF8  EC05  F01E         	call	_fullSpeedAhead	;wreg free
  2746                           
  2747                           ;dc_motor.c: 99:     }
  2748   001BFC  EFD9  F010         	goto	l535
  2749   001C00                     l4039:
  2750                           
  2751                           ; BSR set to: 0
  2752   001C00  0E02               	movlw	2
  2753   001C02  19B6               	xorwf	move@color& (0+255),w,b
  2754   001C04  A4D8               	btfss	status,2,c
  2755   001C06  EF07  F00E         	goto	u3021
  2756   001C0A  EF09  F00E         	goto	u3020
  2757   001C0E                     u3021:
  2758   001C0E  EF51  F00E         	goto	l4049
  2759   001C12                     u3020:
  2760   001C12                     
  2761                           ; BSR set to: 0
  2762                           ;dc_motor.c: 102:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2763   001C12  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2764   001C16  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2765   001C1A  C0B4  F021         	movff	move@mR,turnLeft@mR
  2766   001C1E  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2767   001C22  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2768   001C26  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2769   001C2A  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2770   001C2E  ECB6  F01A         	call	_turnLeft	;wreg free
  2771   001C32                     
  2772                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2773   001C32  0E05               	movlw	5
  2774   001C34  6E42               	movwf	(??_move+1)^0,c
  2775   001C36  0E0F               	movlw	15
  2776   001C38  6E41               	movwf	??_move^0,c
  2777   001C3A  0EF1               	movlw	241
  2778   001C3C                     u3357:
  2779   001C3C  2EE8               	decfsz	wreg,f,c
  2780   001C3E  D7FE               	bra	u3357
  2781   001C40  2E41               	decfsz	??_move^0,f,c
  2782   001C42  D7FC               	bra	u3357
  2783   001C44  2E42               	decfsz	(??_move+1)^0,f,c
  2784   001C46  D7FA               	bra	u3357
  2785   001C48  0000               	nop	
  2786   001C4A                     
  2787                           ;dc_motor.c: 104:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2788   001C4A  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2789   001C4E  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2790   001C52  C0B4  F021         	movff	move@mR,turnLeft@mR
  2791   001C56  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2792   001C5A  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2793   001C5E  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2794   001C62  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2795   001C66  ECB6  F01A         	call	_turnLeft	;wreg free
  2796                           
  2797                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2798   001C6A  0E05               	movlw	5
  2799   001C6C  6E42               	movwf	(??_move+1)^0,c
  2800   001C6E  0E0F               	movlw	15
  2801   001C70  6E41               	movwf	??_move^0,c
  2802   001C72  0EF1               	movlw	241
  2803   001C74                     u3367:
  2804   001C74  2EE8               	decfsz	wreg,f,c
  2805   001C76  D7FE               	bra	u3367
  2806   001C78  2E41               	decfsz	??_move^0,f,c
  2807   001C7A  D7FC               	bra	u3367
  2808   001C7C  2E42               	decfsz	(??_move+1)^0,f,c
  2809   001C7E  D7FA               	bra	u3367
  2810   001C80  0000               	nop	
  2811   001C82                     
  2812                           ;dc_motor.c: 106:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2813   001C82  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2814   001C86  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2815   001C8A  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2816   001C8E  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2817   001C92  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2818   001C96  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2819   001C9A  EC05  F01E         	call	_fullSpeedAhead	;wreg free
  2820                           
  2821                           ;dc_motor.c: 107:     }
  2822   001C9E  EFD9  F010         	goto	l535
  2823   001CA2                     l4049:
  2824                           
  2825                           ; BSR set to: 0
  2826   001CA2  0E03               	movlw	3
  2827   001CA4  19B6               	xorwf	move@color& (0+255),w,b
  2828   001CA6  A4D8               	btfss	status,2,c
  2829   001CA8  EF58  F00E         	goto	u3031
  2830   001CAC  EF5A  F00E         	goto	u3030
  2831   001CB0                     u3031:
  2832   001CB0  EFDA  F00E         	goto	l4065
  2833   001CB4                     u3030:
  2834   001CB4                     
  2835                           ; BSR set to: 0
  2836                           ;dc_motor.c: 110:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2837   001CB4  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2838   001CB8  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2839   001CBC  C0B4  F021         	movff	move@mR,turnLeft@mR
  2840   001CC0  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2841   001CC4  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2842   001CC8  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2843   001CCC  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2844   001CD0  ECB6  F01A         	call	_turnLeft	;wreg free
  2845   001CD4                     
  2846                           ;dc_motor.c: 111:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2847   001CD4  0E05               	movlw	5
  2848   001CD6  6E42               	movwf	(??_move+1)^0,c
  2849   001CD8  0E0F               	movlw	15
  2850   001CDA  6E41               	movwf	??_move^0,c
  2851   001CDC  0EF1               	movlw	241
  2852   001CDE                     u3377:
  2853   001CDE  2EE8               	decfsz	wreg,f,c
  2854   001CE0  D7FE               	bra	u3377
  2855   001CE2  2E41               	decfsz	??_move^0,f,c
  2856   001CE4  D7FC               	bra	u3377
  2857   001CE6  2E42               	decfsz	(??_move+1)^0,f,c
  2858   001CE8  D7FA               	bra	u3377
  2859   001CEA  0000               	nop	
  2860   001CEC                     
  2861                           ;dc_motor.c: 112:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2862   001CEC  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2863   001CF0  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2864   001CF4  C0B4  F021         	movff	move@mR,turnLeft@mR
  2865   001CF8  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2866   001CFC  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2867   001D00  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2868   001D04  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2869   001D08  ECB6  F01A         	call	_turnLeft	;wreg free
  2870                           
  2871                           ;dc_motor.c: 113:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2872   001D0C  0E05               	movlw	5
  2873   001D0E  6E42               	movwf	(??_move+1)^0,c
  2874   001D10  0E0F               	movlw	15
  2875   001D12  6E41               	movwf	??_move^0,c
  2876   001D14  0EF1               	movlw	241
  2877   001D16                     u3387:
  2878   001D16  2EE8               	decfsz	wreg,f,c
  2879   001D18  D7FE               	bra	u3387
  2880   001D1A  2E41               	decfsz	??_move^0,f,c
  2881   001D1C  D7FC               	bra	u3387
  2882   001D1E  2E42               	decfsz	(??_move+1)^0,f,c
  2883   001D20  D7FA               	bra	u3387
  2884   001D22  0000               	nop	
  2885   001D24                     
  2886                           ;dc_motor.c: 114:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2887   001D24  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2888   001D28  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2889   001D2C  C0B4  F021         	movff	move@mR,turnLeft@mR
  2890   001D30  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2891   001D34  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2892   001D38  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2893   001D3C  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2894   001D40  ECB6  F01A         	call	_turnLeft	;wreg free
  2895   001D44                     
  2896                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2897   001D44  0E05               	movlw	5
  2898   001D46  6E42               	movwf	(??_move+1)^0,c
  2899   001D48  0E0F               	movlw	15
  2900   001D4A  6E41               	movwf	??_move^0,c
  2901   001D4C  0EF1               	movlw	241
  2902   001D4E                     u3397:
  2903   001D4E  2EE8               	decfsz	wreg,f,c
  2904   001D50  D7FE               	bra	u3397
  2905   001D52  2E41               	decfsz	??_move^0,f,c
  2906   001D54  D7FC               	bra	u3397
  2907   001D56  2E42               	decfsz	(??_move+1)^0,f,c
  2908   001D58  D7FA               	bra	u3397
  2909   001D5A  0000               	nop	
  2910                           
  2911                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2912   001D5C  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2913   001D60  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2914   001D64  C0B4  F021         	movff	move@mR,turnLeft@mR
  2915   001D68  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2916   001D6C  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2917   001D70  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2918   001D74  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2919   001D78  ECB6  F01A         	call	_turnLeft	;wreg free
  2920   001D7C                     
  2921                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2922   001D7C  0E05               	movlw	5
  2923   001D7E  6E42               	movwf	(??_move+1)^0,c
  2924   001D80  0E0F               	movlw	15
  2925   001D82  6E41               	movwf	??_move^0,c
  2926   001D84  0EF1               	movlw	241
  2927   001D86                     u3407:
  2928   001D86  2EE8               	decfsz	wreg,f,c
  2929   001D88  D7FE               	bra	u3407
  2930   001D8A  2E41               	decfsz	??_move^0,f,c
  2931   001D8C  D7FC               	bra	u3407
  2932   001D8E  2E42               	decfsz	(??_move+1)^0,f,c
  2933   001D90  D7FA               	bra	u3407
  2934   001D92  0000               	nop	
  2935   001D94                     
  2936                           ;dc_motor.c: 118:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2937   001D94  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2938   001D98  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2939   001D9C  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2940   001DA0  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2941   001DA4  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2942   001DA8  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2943   001DAC  EC05  F01E         	call	_fullSpeedAhead	;wreg free
  2944                           
  2945                           ;dc_motor.c: 119:     }
  2946   001DB0  EFD9  F010         	goto	l535
  2947   001DB4                     l4065:
  2948                           
  2949                           ; BSR set to: 0
  2950   001DB4  0E04               	movlw	4
  2951   001DB6  19B6               	xorwf	move@color& (0+255),w,b
  2952   001DB8  A4D8               	btfss	status,2,c
  2953   001DBA  EFE1  F00E         	goto	u3041
  2954   001DBE  EFE3  F00E         	goto	u3040
  2955   001DC2                     u3041:
  2956   001DC2  EF47  F00F         	goto	l4077
  2957   001DC6                     u3040:
  2958   001DC6                     
  2959                           ; BSR set to: 0
  2960                           ;dc_motor.c: 122:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2961   001DC6  C0B2  F01F         	movff	move@mL,reverseOneSquare@mL
  2962   001DCA  C0B3  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2963   001DCE  C0B4  F021         	movff	move@mR,reverseOneSquare@mR
  2964   001DD2  C0B5  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2965   001DD6  C0BC  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2966   001DDA  C0BD  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2967   001DDE  C0BE  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2968   001DE2  ECD9  F018         	call	_reverseOneSquare	;wreg free
  2969   001DE6                     
  2970                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2971   001DE6  0E05               	movlw	5
  2972   001DE8  6E42               	movwf	(??_move+1)^0,c
  2973   001DEA  0E0F               	movlw	15
  2974   001DEC  6E41               	movwf	??_move^0,c
  2975   001DEE  0EF1               	movlw	241
  2976   001DF0                     u3417:
  2977   001DF0  2EE8               	decfsz	wreg,f,c
  2978   001DF2  D7FE               	bra	u3417
  2979   001DF4  2E41               	decfsz	??_move^0,f,c
  2980   001DF6  D7FC               	bra	u3417
  2981   001DF8  2E42               	decfsz	(??_move+1)^0,f,c
  2982   001DFA  D7FA               	bra	u3417
  2983   001DFC  0000               	nop	
  2984   001DFE                     
  2985                           ;dc_motor.c: 124:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2986   001DFE  C0B2  F01F         	movff	move@mL,turnRight@mL
  2987   001E02  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2988   001E06  C0B4  F021         	movff	move@mR,turnRight@mR
  2989   001E0A  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2990   001E0E  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2991   001E12  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2992   001E16  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2993   001E1A  ECCC  F019         	call	_turnRight	;wreg free
  2994                           
  2995                           ;dc_motor.c: 125:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2996   001E1E  0E05               	movlw	5
  2997   001E20  6E42               	movwf	(??_move+1)^0,c
  2998   001E22  0E0F               	movlw	15
  2999   001E24  6E41               	movwf	??_move^0,c
  3000   001E26  0EF1               	movlw	241
  3001   001E28                     u3427:
  3002   001E28  2EE8               	decfsz	wreg,f,c
  3003   001E2A  D7FE               	bra	u3427
  3004   001E2C  2E41               	decfsz	??_move^0,f,c
  3005   001E2E  D7FC               	bra	u3427
  3006   001E30  2E42               	decfsz	(??_move+1)^0,f,c
  3007   001E32  D7FA               	bra	u3427
  3008   001E34  0000               	nop	
  3009   001E36                     
  3010                           ;dc_motor.c: 126:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3011   001E36  C0B2  F01F         	movff	move@mL,turnRight@mL
  3012   001E3A  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  3013   001E3E  C0B4  F021         	movff	move@mR,turnRight@mR
  3014   001E42  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  3015   001E46  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  3016   001E4A  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  3017   001E4E  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  3018   001E52  ECCC  F019         	call	_turnRight	;wreg free
  3019   001E56                     
  3020                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3021   001E56  0E05               	movlw	5
  3022   001E58  6E42               	movwf	(??_move+1)^0,c
  3023   001E5A  0E0F               	movlw	15
  3024   001E5C  6E41               	movwf	??_move^0,c
  3025   001E5E  0EF1               	movlw	241
  3026   001E60                     u3437:
  3027   001E60  2EE8               	decfsz	wreg,f,c
  3028   001E62  D7FE               	bra	u3437
  3029   001E64  2E41               	decfsz	??_move^0,f,c
  3030   001E66  D7FC               	bra	u3437
  3031   001E68  2E42               	decfsz	(??_move+1)^0,f,c
  3032   001E6A  D7FA               	bra	u3437
  3033   001E6C  0000               	nop	
  3034                           
  3035                           ;dc_motor.c: 128:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3036   001E6E  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  3037   001E72  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  3038   001E76  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  3039   001E7A  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  3040   001E7E  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3041   001E82  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3042   001E86  EC05  F01E         	call	_fullSpeedAhead	;wreg free
  3043                           
  3044                           ;dc_motor.c: 129:     }
  3045   001E8A  EFD9  F010         	goto	l535
  3046   001E8E                     l4077:
  3047                           
  3048                           ; BSR set to: 0
  3049   001E8E  0E05               	movlw	5
  3050   001E90  19B6               	xorwf	move@color& (0+255),w,b
  3051   001E92  A4D8               	btfss	status,2,c
  3052   001E94  EF4E  F00F         	goto	u3051
  3053   001E98  EF50  F00F         	goto	u3050
  3054   001E9C                     u3051:
  3055   001E9C  EFB4  F00F         	goto	l4089
  3056   001EA0                     u3050:
  3057   001EA0                     
  3058                           ; BSR set to: 0
  3059                           ;dc_motor.c: 132:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  3060   001EA0  C0B2  F01F         	movff	move@mL,reverseOneSquare@mL
  3061   001EA4  C0B3  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  3062   001EA8  C0B4  F021         	movff	move@mR,reverseOneSquare@mR
  3063   001EAC  C0B5  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  3064   001EB0  C0BC  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  3065   001EB4  C0BD  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  3066   001EB8  C0BE  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  3067   001EBC  ECD9  F018         	call	_reverseOneSquare	;wreg free
  3068   001EC0                     
  3069                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3070   001EC0  0E05               	movlw	5
  3071   001EC2  6E42               	movwf	(??_move+1)^0,c
  3072   001EC4  0E0F               	movlw	15
  3073   001EC6  6E41               	movwf	??_move^0,c
  3074   001EC8  0EF1               	movlw	241
  3075   001ECA                     u3447:
  3076   001ECA  2EE8               	decfsz	wreg,f,c
  3077   001ECC  D7FE               	bra	u3447
  3078   001ECE  2E41               	decfsz	??_move^0,f,c
  3079   001ED0  D7FC               	bra	u3447
  3080   001ED2  2E42               	decfsz	(??_move+1)^0,f,c
  3081   001ED4  D7FA               	bra	u3447
  3082   001ED6  0000               	nop	
  3083   001ED8                     
  3084                           ;dc_motor.c: 134:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3085   001ED8  C0B2  F01F         	movff	move@mL,turnLeft@mL
  3086   001EDC  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  3087   001EE0  C0B4  F021         	movff	move@mR,turnLeft@mR
  3088   001EE4  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  3089   001EE8  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  3090   001EEC  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  3091   001EF0  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  3092   001EF4  ECB6  F01A         	call	_turnLeft	;wreg free
  3093                           
  3094                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3095   001EF8  0E05               	movlw	5
  3096   001EFA  6E42               	movwf	(??_move+1)^0,c
  3097   001EFC  0E0F               	movlw	15
  3098   001EFE  6E41               	movwf	??_move^0,c
  3099   001F00  0EF1               	movlw	241
  3100   001F02                     u3457:
  3101   001F02  2EE8               	decfsz	wreg,f,c
  3102   001F04  D7FE               	bra	u3457
  3103   001F06  2E41               	decfsz	??_move^0,f,c
  3104   001F08  D7FC               	bra	u3457
  3105   001F0A  2E42               	decfsz	(??_move+1)^0,f,c
  3106   001F0C  D7FA               	bra	u3457
  3107   001F0E  0000               	nop	
  3108   001F10                     
  3109                           ;dc_motor.c: 136:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3110   001F10  C0B2  F01F         	movff	move@mL,turnLeft@mL
  3111   001F14  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  3112   001F18  C0B4  F021         	movff	move@mR,turnLeft@mR
  3113   001F1C  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  3114   001F20  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  3115   001F24  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  3116   001F28  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  3117   001F2C  ECB6  F01A         	call	_turnLeft	;wreg free
  3118   001F30                     
  3119                           ;dc_motor.c: 137:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3120   001F30  0E05               	movlw	5
  3121   001F32  6E42               	movwf	(??_move+1)^0,c
  3122   001F34  0E0F               	movlw	15
  3123   001F36  6E41               	movwf	??_move^0,c
  3124   001F38  0EF1               	movlw	241
  3125   001F3A                     u3467:
  3126   001F3A  2EE8               	decfsz	wreg,f,c
  3127   001F3C  D7FE               	bra	u3467
  3128   001F3E  2E41               	decfsz	??_move^0,f,c
  3129   001F40  D7FC               	bra	u3467
  3130   001F42  2E42               	decfsz	(??_move+1)^0,f,c
  3131   001F44  D7FA               	bra	u3467
  3132   001F46  0000               	nop	
  3133                           
  3134                           ;dc_motor.c: 138:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3135   001F48  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  3136   001F4C  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  3137   001F50  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  3138   001F54  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  3139   001F58  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3140   001F5C  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3141   001F60  EC05  F01E         	call	_fullSpeedAhead	;wreg free
  3142                           
  3143                           ;dc_motor.c: 139:     }
  3144   001F64  EFD9  F010         	goto	l535
  3145   001F68                     l4089:
  3146                           
  3147                           ; BSR set to: 0
  3148   001F68  0E06               	movlw	6
  3149   001F6A  19B6               	xorwf	move@color& (0+255),w,b
  3150   001F6C  A4D8               	btfss	status,2,c
  3151   001F6E  EFBB  F00F         	goto	u3061
  3152   001F72  EFBD  F00F         	goto	u3060
  3153   001F76                     u3061:
  3154   001F76  EF21  F010         	goto	l4101
  3155   001F7A                     u3060:
  3156   001F7A                     
  3157                           ; BSR set to: 0
  3158                           ;dc_motor.c: 142:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3159   001F7A  C0B2  F01F         	movff	move@mL,turnRight@mL
  3160   001F7E  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  3161   001F82  C0B4  F021         	movff	move@mR,turnRight@mR
  3162   001F86  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  3163   001F8A  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  3164   001F8E  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  3165   001F92  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  3166   001F96  ECCC  F019         	call	_turnRight	;wreg free
  3167   001F9A                     
  3168                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3169   001F9A  0E05               	movlw	5
  3170   001F9C  6E42               	movwf	(??_move+1)^0,c
  3171   001F9E  0E0F               	movlw	15
  3172   001FA0  6E41               	movwf	??_move^0,c
  3173   001FA2  0EF1               	movlw	241
  3174   001FA4                     u3477:
  3175   001FA4  2EE8               	decfsz	wreg,f,c
  3176   001FA6  D7FE               	bra	u3477
  3177   001FA8  2E41               	decfsz	??_move^0,f,c
  3178   001FAA  D7FC               	bra	u3477
  3179   001FAC  2E42               	decfsz	(??_move+1)^0,f,c
  3180   001FAE  D7FA               	bra	u3477
  3181   001FB0  0000               	nop	
  3182   001FB2                     
  3183                           ;dc_motor.c: 144:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3184   001FB2  C0B2  F01F         	movff	move@mL,turnRight@mL
  3185   001FB6  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  3186   001FBA  C0B4  F021         	movff	move@mR,turnRight@mR
  3187   001FBE  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  3188   001FC2  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  3189   001FC6  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  3190   001FCA  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  3191   001FCE  ECCC  F019         	call	_turnRight	;wreg free
  3192                           
  3193                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3194   001FD2  0E05               	movlw	5
  3195   001FD4  6E42               	movwf	(??_move+1)^0,c
  3196   001FD6  0E0F               	movlw	15
  3197   001FD8  6E41               	movwf	??_move^0,c
  3198   001FDA  0EF1               	movlw	241
  3199   001FDC                     u3487:
  3200   001FDC  2EE8               	decfsz	wreg,f,c
  3201   001FDE  D7FE               	bra	u3487
  3202   001FE0  2E41               	decfsz	??_move^0,f,c
  3203   001FE2  D7FC               	bra	u3487
  3204   001FE4  2E42               	decfsz	(??_move+1)^0,f,c
  3205   001FE6  D7FA               	bra	u3487
  3206   001FE8  0000               	nop	
  3207   001FEA                     
  3208                           ;dc_motor.c: 146:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3209   001FEA  C0B2  F01F         	movff	move@mL,turnRight@mL
  3210   001FEE  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  3211   001FF2  C0B4  F021         	movff	move@mR,turnRight@mR
  3212   001FF6  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  3213   001FFA  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  3214   001FFE  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  3215   002002  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  3216   002006  ECCC  F019         	call	_turnRight	;wreg free
  3217   00200A                     
  3218                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3219   00200A  0E05               	movlw	5
  3220   00200C  6E42               	movwf	(??_move+1)^0,c
  3221   00200E  0E0F               	movlw	15
  3222   002010  6E41               	movwf	??_move^0,c
  3223   002012  0EF1               	movlw	241
  3224   002014                     u3497:
  3225   002014  2EE8               	decfsz	wreg,f,c
  3226   002016  D7FE               	bra	u3497
  3227   002018  2E41               	decfsz	??_move^0,f,c
  3228   00201A  D7FC               	bra	u3497
  3229   00201C  2E42               	decfsz	(??_move+1)^0,f,c
  3230   00201E  D7FA               	bra	u3497
  3231   002020  0000               	nop	
  3232                           
  3233                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3234   002022  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  3235   002026  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  3236   00202A  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  3237   00202E  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  3238   002032  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3239   002036  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3240   00203A  EC05  F01E         	call	_fullSpeedAhead	;wreg free
  3241                           
  3242                           ;dc_motor.c: 149:     }
  3243   00203E  EFD9  F010         	goto	l535
  3244   002042                     l4101:
  3245                           
  3246                           ; BSR set to: 0
  3247   002042  0E07               	movlw	7
  3248   002044  19B6               	xorwf	move@color& (0+255),w,b
  3249   002046  A4D8               	btfss	status,2,c
  3250   002048  EF28  F010         	goto	u3071
  3251   00204C  EF2A  F010         	goto	u3070
  3252   002050                     u3071:
  3253   002050  EF8E  F010         	goto	l4113
  3254   002054                     u3070:
  3255   002054                     
  3256                           ; BSR set to: 0
  3257                           ;dc_motor.c: 152:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3258   002054  C0B2  F01F         	movff	move@mL,turnLeft@mL
  3259   002058  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  3260   00205C  C0B4  F021         	movff	move@mR,turnLeft@mR
  3261   002060  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  3262   002064  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  3263   002068  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  3264   00206C  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  3265   002070  ECB6  F01A         	call	_turnLeft	;wreg free
  3266   002074                     
  3267                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3268   002074  0E05               	movlw	5
  3269   002076  6E42               	movwf	(??_move+1)^0,c
  3270   002078  0E0F               	movlw	15
  3271   00207A  6E41               	movwf	??_move^0,c
  3272   00207C  0EF1               	movlw	241
  3273   00207E                     u3507:
  3274   00207E  2EE8               	decfsz	wreg,f,c
  3275   002080  D7FE               	bra	u3507
  3276   002082  2E41               	decfsz	??_move^0,f,c
  3277   002084  D7FC               	bra	u3507
  3278   002086  2E42               	decfsz	(??_move+1)^0,f,c
  3279   002088  D7FA               	bra	u3507
  3280   00208A  0000               	nop	
  3281   00208C                     
  3282                           ;dc_motor.c: 154:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3283   00208C  C0B2  F01F         	movff	move@mL,turnLeft@mL
  3284   002090  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  3285   002094  C0B4  F021         	movff	move@mR,turnLeft@mR
  3286   002098  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  3287   00209C  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  3288   0020A0  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  3289   0020A4  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  3290   0020A8  ECB6  F01A         	call	_turnLeft	;wreg free
  3291                           
  3292                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3293   0020AC  0E05               	movlw	5
  3294   0020AE  6E42               	movwf	(??_move+1)^0,c
  3295   0020B0  0E0F               	movlw	15
  3296   0020B2  6E41               	movwf	??_move^0,c
  3297   0020B4  0EF1               	movlw	241
  3298   0020B6                     u3517:
  3299   0020B6  2EE8               	decfsz	wreg,f,c
  3300   0020B8  D7FE               	bra	u3517
  3301   0020BA  2E41               	decfsz	??_move^0,f,c
  3302   0020BC  D7FC               	bra	u3517
  3303   0020BE  2E42               	decfsz	(??_move+1)^0,f,c
  3304   0020C0  D7FA               	bra	u3517
  3305   0020C2  0000               	nop	
  3306   0020C4                     
  3307                           ;dc_motor.c: 156:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3308   0020C4  C0B2  F01F         	movff	move@mL,turnLeft@mL
  3309   0020C8  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  3310   0020CC  C0B4  F021         	movff	move@mR,turnLeft@mR
  3311   0020D0  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  3312   0020D4  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  3313   0020D8  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  3314   0020DC  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  3315   0020E0  ECB6  F01A         	call	_turnLeft	;wreg free
  3316   0020E4                     
  3317                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3318   0020E4  0E05               	movlw	5
  3319   0020E6  6E42               	movwf	(??_move+1)^0,c
  3320   0020E8  0E0F               	movlw	15
  3321   0020EA  6E41               	movwf	??_move^0,c
  3322   0020EC  0EF1               	movlw	241
  3323   0020EE                     u3527:
  3324   0020EE  2EE8               	decfsz	wreg,f,c
  3325   0020F0  D7FE               	bra	u3527
  3326   0020F2  2E41               	decfsz	??_move^0,f,c
  3327   0020F4  D7FC               	bra	u3527
  3328   0020F6  2E42               	decfsz	(??_move+1)^0,f,c
  3329   0020F8  D7FA               	bra	u3527
  3330   0020FA  0000               	nop	
  3331                           
  3332                           ;dc_motor.c: 158:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3333   0020FC  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  3334   002100  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  3335   002104  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  3336   002108  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  3337   00210C  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3338   002110  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3339   002114  EC05  F01E         	call	_fullSpeedAhead	;wreg free
  3340                           
  3341                           ;dc_motor.c: 159:     }
  3342   002118  EFD9  F010         	goto	l535
  3343   00211C                     l4113:
  3344                           
  3345                           ; BSR set to: 0
  3346   00211C  0E08               	movlw	8
  3347   00211E  19B6               	xorwf	move@color& (0+255),w,b
  3348   002120  A4D8               	btfss	status,2,c
  3349   002122  EF95  F010         	goto	u3081
  3350   002126  EF97  F010         	goto	u3080
  3351   00212A                     u3081:
  3352   00212A  EFB9  F010         	goto	l4117
  3353   00212E                     u3080:
  3354   00212E                     
  3355                           ; BSR set to: 0
  3356                           ;dc_motor.c: 162:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3357   00212E  C0B2  F02D         	movff	move@mL,returnHome@mL
  3358   002132  C0B3  F02E         	movff	move@mL+1,returnHome@mL+1
  3359   002136  C0B4  F02F         	movff	move@mR,returnHome@mR
  3360   00213A  C0B5  F030         	movff	move@mR+1,returnHome@mR+1
  3361   00213E  C0B7  F031         	movff	move@moveSequence,returnHome@moveSequence
  3362   002142  C0B8  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3363   002146  C0B9  F033         	movff	move@straightTime,returnHome@straightTime
  3364   00214A  C0BA  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  3365   00214E  C0BB  F035         	movff	move@curMove,returnHome@curMove
  3366   002152  C0BC  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  3367   002156  C0BD  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  3368   00215A  C0BE  F038         	movff	move@straightRamp,returnHome@straightRamp
  3369   00215E  C0BF  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  3370   002162  C0C0  F03A         	movff	move@turnDuration,returnHome@turnDuration
  3371   002166  C0C1  F03B         	movff	move@turnRamp,returnHome@turnRamp
  3372   00216A  EC01  F007         	call	_returnHome	;wreg free
  3373                           
  3374                           ;dc_motor.c: 163:     }
  3375   00216E  EFD9  F010         	goto	l535
  3376   002172                     l4117:
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;dc_motor.c: 166:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3380   002172  C0B2  F02D         	movff	move@mL,returnHome@mL
  3381   002176  C0B3  F02E         	movff	move@mL+1,returnHome@mL+1
  3382   00217A  C0B4  F02F         	movff	move@mR,returnHome@mR
  3383   00217E  C0B5  F030         	movff	move@mR+1,returnHome@mR+1
  3384   002182  C0B7  F031         	movff	move@moveSequence,returnHome@moveSequence
  3385   002186  C0B8  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3386   00218A  C0B9  F033         	movff	move@straightTime,returnHome@straightTime
  3387   00218E  C0BA  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  3388   002192  C0BB  F035         	movff	move@curMove,returnHome@curMove
  3389   002196  C0BC  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  3390   00219A  C0BD  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  3391   00219E  C0BE  F038         	movff	move@straightRamp,returnHome@straightRamp
  3392   0021A2  C0BF  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  3393   0021A6  C0C0  F03A         	movff	move@turnDuration,returnHome@turnDuration
  3394   0021AA  C0C1  F03B         	movff	move@turnRamp,returnHome@turnRamp
  3395   0021AE  EC01  F007         	call	_returnHome	;wreg free
  3396   0021B2                     l535:
  3397   0021B2  0012               	return		;funcret
  3398   0021B4                     __end_of_move:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function _returnHome *****************
  3402 ;; Defined at:
  3403 ;;		line 171 in file "dc_motor.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  3406 ;;		 -> main@motorL(10), 
  3407 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  3408 ;;		 -> main@motorR(10), 
  3409 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  3410 ;;		 -> main@moveSequence(40), 
  3411 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  3412 ;;		 -> main@straightTime(82), 
  3413 ;;  curMove         1   52[COMRAM] unsigned char 
  3414 ;;  straightSpee    1   53[COMRAM] unsigned char 
  3415 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  3416 ;;  straightRamp    1   55[COMRAM] unsigned char 
  3417 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  3418 ;;  turnDuration    1   57[COMRAM] unsigned char 
  3419 ;;  turnRamp        1   58[COMRAM] unsigned char 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  i               1   63[COMRAM] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3431 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3433 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3434 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3435 ;;Total ram usage:       20 bytes
  3436 ;; Hardware stack levels used: 1
  3437 ;; Hardware stack levels required when called: 8
  3438 ;; This function calls:
  3439 ;;		_fullSpeedAhead
  3440 ;;		_get16bitTMR0val
  3441 ;;		_resetTimer
  3442 ;;		_reverseOneSquare
  3443 ;;		_stop
  3444 ;;		_turnLeft
  3445 ;;		_turnRight
  3446 ;; This function is called by:
  3447 ;;		_move
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text6
  3452   000E02                     __ptext6:
  3453                           	callstack 0
  3454   000E02                     _returnHome:
  3455                           	callstack 21
  3456   000E02                     
  3457                           ;dc_motor.c: 171: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reverseDu
      +                          ration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned
      +                           char turnRamp);dc_motor.c: 172: {;dc_motor.c: 173:     turnLeft(mL, mR, turnSpeed, turn
      +                          Duration, turnRamp);
  3458   000E02  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3459   000E06  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3460   000E0A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3461   000E0E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3462   000E12  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3463   000E16  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3464   000E1A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3465   000E1E  ECB6  F01A         	call	_turnLeft	;wreg free
  3466   000E22                     
  3467                           ;dc_motor.c: 174:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3468   000E22  0E05               	movlw	5
  3469   000E24  6E3D               	movwf	(??_returnHome+1)^0,c
  3470   000E26  0E0F               	movlw	15
  3471   000E28  6E3C               	movwf	??_returnHome^0,c
  3472   000E2A  0EF1               	movlw	241
  3473   000E2C                     u3537:
  3474   000E2C  2EE8               	decfsz	wreg,f,c
  3475   000E2E  D7FE               	bra	u3537
  3476   000E30  2E3C               	decfsz	??_returnHome^0,f,c
  3477   000E32  D7FC               	bra	u3537
  3478   000E34  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3479   000E36  D7FA               	bra	u3537
  3480   000E38  0000               	nop	
  3481   000E3A                     
  3482                           ;dc_motor.c: 175:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3483   000E3A  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3484   000E3E  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3485   000E42  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3486   000E46  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3487   000E4A  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3488   000E4E  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3489   000E52  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3490   000E56  ECB6  F01A         	call	_turnLeft	;wreg free
  3491                           
  3492                           ;dc_motor.c: 176:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3493   000E5A  0E05               	movlw	5
  3494   000E5C  6E3D               	movwf	(??_returnHome+1)^0,c
  3495   000E5E  0E0F               	movlw	15
  3496   000E60  6E3C               	movwf	??_returnHome^0,c
  3497   000E62  0EF1               	movlw	241
  3498   000E64                     u3547:
  3499   000E64  2EE8               	decfsz	wreg,f,c
  3500   000E66  D7FE               	bra	u3547
  3501   000E68  2E3C               	decfsz	??_returnHome^0,f,c
  3502   000E6A  D7FC               	bra	u3547
  3503   000E6C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3504   000E6E  D7FA               	bra	u3547
  3505   000E70  0000               	nop	
  3506   000E72                     
  3507                           ;dc_motor.c: 177:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3508   000E72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3509   000E76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3510   000E7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3511   000E7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3512   000E82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3513   000E86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3514   000E8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3515   000E8E  ECB6  F01A         	call	_turnLeft	;wreg free
  3516   000E92                     
  3517                           ;dc_motor.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3518   000E92  0E05               	movlw	5
  3519   000E94  6E3D               	movwf	(??_returnHome+1)^0,c
  3520   000E96  0E0F               	movlw	15
  3521   000E98  6E3C               	movwf	??_returnHome^0,c
  3522   000E9A  0EF1               	movlw	241
  3523   000E9C                     u3557:
  3524   000E9C  2EE8               	decfsz	wreg,f,c
  3525   000E9E  D7FE               	bra	u3557
  3526   000EA0  2E3C               	decfsz	??_returnHome^0,f,c
  3527   000EA2  D7FC               	bra	u3557
  3528   000EA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3529   000EA6  D7FA               	bra	u3557
  3530   000EA8  0000               	nop	
  3531                           
  3532                           ;dc_motor.c: 179:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3533   000EAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3534   000EAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3535   000EB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3536   000EB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3537   000EBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3538   000EBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3539   000EC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3540   000EC6  ECB6  F01A         	call	_turnLeft	;wreg free
  3541   000ECA                     
  3542                           ;dc_motor.c: 180:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3543   000ECA  0E05               	movlw	5
  3544   000ECC  6E3D               	movwf	(??_returnHome+1)^0,c
  3545   000ECE  0E0F               	movlw	15
  3546   000ED0  6E3C               	movwf	??_returnHome^0,c
  3547   000ED2  0EF1               	movlw	241
  3548   000ED4                     u3567:
  3549   000ED4  2EE8               	decfsz	wreg,f,c
  3550   000ED6  D7FE               	bra	u3567
  3551   000ED8  2E3C               	decfsz	??_returnHome^0,f,c
  3552   000EDA  D7FC               	bra	u3567
  3553   000EDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3554   000EDE  D7FA               	bra	u3567
  3555   000EE0  0000               	nop	
  3556   000EE2                     
  3557                           ;dc_motor.c: 181:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3558   000EE2  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  3559   000EE6  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  3560   000EEA  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  3561   000EEE  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  3562   000EF2  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3563   000EF6  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  3564   000EFA  EC05  F01E         	call	_fullSpeedAhead	;wreg free
  3565   000EFE                     
  3566                           ;dc_motor.c: 182:     resetTimer();
  3567   000EFE  EC87  F022         	call	_resetTimer	;wreg free
  3568   000F02                     l3059:
  3569   000F02  5035               	movf	returnHome@curMove^0,w,c
  3570   000F04  0D02               	mullw	2
  3571   000F06  CFF3 F03C          	movff	prodl,??_returnHome
  3572   000F0A  CFF4 F03D          	movff	prodh,??_returnHome+1
  3573   000F0E  503C               	movf	??_returnHome^0,w,c
  3574   000F10  2433               	addwf	returnHome@straightTime^0,w,c
  3575   000F12  6ED9               	movwf	fsr2l,c
  3576   000F14  503D               	movf	(??_returnHome+1)^0,w,c
  3577   000F16  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  3578   000F18  6EDA               	movwf	fsr2h,c
  3579   000F1A  EC90  F021         	call	_get16bitTMR0val	;wreg free
  3580   000F1E  50DE               	movf	postinc2,w,c
  3581   000F20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  3582   000F22  50DE               	movf	postinc2,w,c
  3583   000F24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  3584   000F26  A0D8               	btfss	status,0,c
  3585   000F28  EF98  F007         	goto	u1801
  3586   000F2C  EF9A  F007         	goto	u1800
  3587   000F30                     u1801:
  3588   000F30  EF81  F007         	goto	l3059
  3589   000F34                     u1800:
  3590   000F34                     
  3591                           ;dc_motor.c: 184:     stop(mL, mR, straightRamp);
  3592   000F34  C02D  F01F         	movff	returnHome@mL,stop@mL
  3593   000F38  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  3594   000F3C  C02F  F021         	movff	returnHome@mR,stop@mR
  3595   000F40  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  3596   000F44  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  3597   000F48  EC81  F01D         	call	_stop	;wreg free
  3598   000F4C                     
  3599                           ;dc_motor.c: 186:     char i=curMove;
  3600   000F4C  C035  F040         	movff	returnHome@curMove,returnHome@i
  3601                           
  3602                           ;dc_motor.c: 187:     while (i>0) {
  3603   000F50  EF56  F00A         	goto	l3151
  3604   000F54                     l3065:
  3605                           
  3606                           ;dc_motor.c: 188:         i--;
  3607   000F54  0640               	decf	returnHome@i^0,f,c
  3608   000F56                     
  3609                           ;dc_motor.c: 190:         if (moveSequence[i] == 1) {
  3610   000F56  5040               	movf	returnHome@i^0,w,c
  3611   000F58  2431               	addwf	returnHome@moveSequence^0,w,c
  3612   000F5A  6ED9               	movwf	fsr2l,c
  3613   000F5C  0E00               	movlw	0
  3614   000F5E  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3615   000F60  6EDA               	movwf	fsr2h,c
  3616   000F62  04DE               	decf	postinc2,w,c
  3617   000F64  A4D8               	btfss	status,2,c
  3618   000F66  EFB7  F007         	goto	u1811
  3619   000F6A  EFB9  F007         	goto	u1810
  3620   000F6E                     u1811:
  3621   000F6E  EFF3  F007         	goto	l3075
  3622   000F72                     u1810:
  3623   000F72                     
  3624                           ;dc_motor.c: 191:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3625   000F72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3626   000F76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3627   000F7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3628   000F7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3629   000F82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3630   000F86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3631   000F8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3632   000F8E  ECB6  F01A         	call	_turnLeft	;wreg free
  3633   000F92                     
  3634                           ;dc_motor.c: 192:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3635   000F92  0E05               	movlw	5
  3636   000F94  6E3D               	movwf	(??_returnHome+1)^0,c
  3637   000F96  0E0F               	movlw	15
  3638   000F98  6E3C               	movwf	??_returnHome^0,c
  3639   000F9A  0EF1               	movlw	241
  3640   000F9C                     u3577:
  3641   000F9C  2EE8               	decfsz	wreg,f,c
  3642   000F9E  D7FE               	bra	u3577
  3643   000FA0  2E3C               	decfsz	??_returnHome^0,f,c
  3644   000FA2  D7FC               	bra	u3577
  3645   000FA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3646   000FA6  D7FA               	bra	u3577
  3647   000FA8  0000               	nop	
  3648   000FAA                     
  3649                           ;dc_motor.c: 193:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3650   000FAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3651   000FAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3652   000FB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3653   000FB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3654   000FBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3655   000FBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3656   000FC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3657   000FC6  ECB6  F01A         	call	_turnLeft	;wreg free
  3658                           
  3659                           ;dc_motor.c: 194:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3660   000FCA  0E05               	movlw	5
  3661   000FCC  6E3D               	movwf	(??_returnHome+1)^0,c
  3662   000FCE  0E0F               	movlw	15
  3663   000FD0  6E3C               	movwf	??_returnHome^0,c
  3664   000FD2  0EF1               	movlw	241
  3665   000FD4                     u3587:
  3666   000FD4  2EE8               	decfsz	wreg,f,c
  3667   000FD6  D7FE               	bra	u3587
  3668   000FD8  2E3C               	decfsz	??_returnHome^0,f,c
  3669   000FDA  D7FC               	bra	u3587
  3670   000FDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3671   000FDE  D7FA               	bra	u3587
  3672   000FE0  0000               	nop	
  3673                           
  3674                           ;dc_motor.c: 195:         }
  3675   000FE2  EF21  F00A         	goto	l544
  3676   000FE6                     l3075:
  3677   000FE6  5040               	movf	returnHome@i^0,w,c
  3678   000FE8  2431               	addwf	returnHome@moveSequence^0,w,c
  3679   000FEA  6ED9               	movwf	fsr2l,c
  3680   000FEC  0E00               	movlw	0
  3681   000FEE  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3682   000FF0  6EDA               	movwf	fsr2h,c
  3683   000FF2  0E02               	movlw	2
  3684   000FF4  18DE               	xorwf	postinc2,w,c
  3685   000FF6  A4D8               	btfss	status,2,c
  3686   000FF8  EF00  F008         	goto	u1821
  3687   000FFC  EF02  F008         	goto	u1820
  3688   001000                     u1821:
  3689   001000  EF3C  F008         	goto	l3083
  3690   001004                     u1820:
  3691   001004                     
  3692                           ;dc_motor.c: 198:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3693   001004  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3694   001008  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3695   00100C  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3696   001010  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3697   001014  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3698   001018  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3699   00101C  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3700   001020  ECCC  F019         	call	_turnRight	;wreg free
  3701   001024                     
  3702                           ;dc_motor.c: 199:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3703   001024  0E05               	movlw	5
  3704   001026  6E3D               	movwf	(??_returnHome+1)^0,c
  3705   001028  0E0F               	movlw	15
  3706   00102A  6E3C               	movwf	??_returnHome^0,c
  3707   00102C  0EF1               	movlw	241
  3708   00102E                     u3597:
  3709   00102E  2EE8               	decfsz	wreg,f,c
  3710   001030  D7FE               	bra	u3597
  3711   001032  2E3C               	decfsz	??_returnHome^0,f,c
  3712   001034  D7FC               	bra	u3597
  3713   001036  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3714   001038  D7FA               	bra	u3597
  3715   00103A  0000               	nop	
  3716   00103C                     
  3717                           ;dc_motor.c: 200:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3718   00103C  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3719   001040  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3720   001044  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3721   001048  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3722   00104C  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3723   001050  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3724   001054  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3725   001058  ECCC  F019         	call	_turnRight	;wreg free
  3726                           
  3727                           ;dc_motor.c: 201:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3728   00105C  0E05               	movlw	5
  3729   00105E  6E3D               	movwf	(??_returnHome+1)^0,c
  3730   001060  0E0F               	movlw	15
  3731   001062  6E3C               	movwf	??_returnHome^0,c
  3732   001064  0EF1               	movlw	241
  3733   001066                     u3607:
  3734   001066  2EE8               	decfsz	wreg,f,c
  3735   001068  D7FE               	bra	u3607
  3736   00106A  2E3C               	decfsz	??_returnHome^0,f,c
  3737   00106C  D7FC               	bra	u3607
  3738   00106E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3739   001070  D7FA               	bra	u3607
  3740   001072  0000               	nop	
  3741                           
  3742                           ;dc_motor.c: 202:         }
  3743   001074  EF21  F00A         	goto	l544
  3744   001078                     l3083:
  3745   001078  5040               	movf	returnHome@i^0,w,c
  3746   00107A  2431               	addwf	returnHome@moveSequence^0,w,c
  3747   00107C  6ED9               	movwf	fsr2l,c
  3748   00107E  0E00               	movlw	0
  3749   001080  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3750   001082  6EDA               	movwf	fsr2h,c
  3751   001084  0E03               	movlw	3
  3752   001086  18DE               	xorwf	postinc2,w,c
  3753   001088  A4D8               	btfss	status,2,c
  3754   00108A  EF49  F008         	goto	u1831
  3755   00108E  EF4B  F008         	goto	u1830
  3756   001092                     u1831:
  3757   001092  EFBD  F008         	goto	l3097
  3758   001096                     u1830:
  3759   001096                     
  3760                           ;dc_motor.c: 205:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3761   001096  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3762   00109A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3763   00109E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3764   0010A2  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3765   0010A6  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3766   0010AA  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3767   0010AE  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3768   0010B2  ECB6  F01A         	call	_turnLeft	;wreg free
  3769   0010B6                     
  3770                           ;dc_motor.c: 206:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3771   0010B6  0E05               	movlw	5
  3772   0010B8  6E3D               	movwf	(??_returnHome+1)^0,c
  3773   0010BA  0E0F               	movlw	15
  3774   0010BC  6E3C               	movwf	??_returnHome^0,c
  3775   0010BE  0EF1               	movlw	241
  3776   0010C0                     u3617:
  3777   0010C0  2EE8               	decfsz	wreg,f,c
  3778   0010C2  D7FE               	bra	u3617
  3779   0010C4  2E3C               	decfsz	??_returnHome^0,f,c
  3780   0010C6  D7FC               	bra	u3617
  3781   0010C8  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3782   0010CA  D7FA               	bra	u3617
  3783   0010CC  0000               	nop	
  3784   0010CE                     
  3785                           ;dc_motor.c: 207:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3786   0010CE  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3787   0010D2  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3788   0010D6  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3789   0010DA  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3790   0010DE  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3791   0010E2  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3792   0010E6  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3793   0010EA  ECB6  F01A         	call	_turnLeft	;wreg free
  3794                           
  3795                           ;dc_motor.c: 208:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3796   0010EE  0E05               	movlw	5
  3797   0010F0  6E3D               	movwf	(??_returnHome+1)^0,c
  3798   0010F2  0E0F               	movlw	15
  3799   0010F4  6E3C               	movwf	??_returnHome^0,c
  3800   0010F6  0EF1               	movlw	241
  3801   0010F8                     u3627:
  3802   0010F8  2EE8               	decfsz	wreg,f,c
  3803   0010FA  D7FE               	bra	u3627
  3804   0010FC  2E3C               	decfsz	??_returnHome^0,f,c
  3805   0010FE  D7FC               	bra	u3627
  3806   001100  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3807   001102  D7FA               	bra	u3627
  3808   001104  0000               	nop	
  3809   001106                     
  3810                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3811   001106  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3812   00110A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3813   00110E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3814   001112  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3815   001116  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3816   00111A  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3817   00111E  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3818   001122  ECB6  F01A         	call	_turnLeft	;wreg free
  3819   001126                     
  3820                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3821   001126  0E05               	movlw	5
  3822   001128  6E3D               	movwf	(??_returnHome+1)^0,c
  3823   00112A  0E0F               	movlw	15
  3824   00112C  6E3C               	movwf	??_returnHome^0,c
  3825   00112E  0EF1               	movlw	241
  3826   001130                     u3637:
  3827   001130  2EE8               	decfsz	wreg,f,c
  3828   001132  D7FE               	bra	u3637
  3829   001134  2E3C               	decfsz	??_returnHome^0,f,c
  3830   001136  D7FC               	bra	u3637
  3831   001138  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3832   00113A  D7FA               	bra	u3637
  3833   00113C  0000               	nop	
  3834                           
  3835                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3836   00113E  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3837   001142  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3838   001146  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3839   00114A  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3840   00114E  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3841   001152  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3842   001156  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3843   00115A  ECB6  F01A         	call	_turnLeft	;wreg free
  3844   00115E                     l3095:
  3845                           
  3846                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3847   00115E  0E05               	movlw	5
  3848   001160  6E3D               	movwf	(??_returnHome+1)^0,c
  3849   001162  0E0F               	movlw	15
  3850   001164  6E3C               	movwf	??_returnHome^0,c
  3851   001166  0EF1               	movlw	241
  3852   001168                     u3647:
  3853   001168  2EE8               	decfsz	wreg,f,c
  3854   00116A  D7FE               	bra	u3647
  3855   00116C  2E3C               	decfsz	??_returnHome^0,f,c
  3856   00116E  D7FC               	bra	u3647
  3857   001170  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3858   001172  D7FA               	bra	u3647
  3859   001174  0000               	nop	
  3860                           
  3861                           ;dc_motor.c: 213:         }
  3862   001176  EF21  F00A         	goto	l544
  3863   00117A                     l3097:
  3864   00117A  5040               	movf	returnHome@i^0,w,c
  3865   00117C  2431               	addwf	returnHome@moveSequence^0,w,c
  3866   00117E  6ED9               	movwf	fsr2l,c
  3867   001180  0E00               	movlw	0
  3868   001182  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3869   001184  6EDA               	movwf	fsr2h,c
  3870   001186  0E04               	movlw	4
  3871   001188  18DE               	xorwf	postinc2,w,c
  3872   00118A  A4D8               	btfss	status,2,c
  3873   00118C  EFCA  F008         	goto	u1841
  3874   001190  EFCC  F008         	goto	u1840
  3875   001194                     u1841:
  3876   001194  EF16  F009         	goto	l3109
  3877   001198                     u1840:
  3878   001198                     
  3879                           ;dc_motor.c: 216:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3880   001198  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3881   00119C  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3882   0011A0  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3883   0011A4  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3884   0011A8  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3885   0011AC  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3886   0011B0  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3887   0011B4  ECB6  F01A         	call	_turnLeft	;wreg free
  3888   0011B8                     
  3889                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3890   0011B8  0E05               	movlw	5
  3891   0011BA  6E3D               	movwf	(??_returnHome+1)^0,c
  3892   0011BC  0E0F               	movlw	15
  3893   0011BE  6E3C               	movwf	??_returnHome^0,c
  3894   0011C0  0EF1               	movlw	241
  3895   0011C2                     u3657:
  3896   0011C2  2EE8               	decfsz	wreg,f,c
  3897   0011C4  D7FE               	bra	u3657
  3898   0011C6  2E3C               	decfsz	??_returnHome^0,f,c
  3899   0011C8  D7FC               	bra	u3657
  3900   0011CA  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3901   0011CC  D7FA               	bra	u3657
  3902   0011CE  0000               	nop	
  3903   0011D0                     
  3904                           ;dc_motor.c: 218:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3905   0011D0  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3906   0011D4  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3907   0011D8  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3908   0011DC  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3909   0011E0  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3910   0011E4  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3911   0011E8  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3912   0011EC  ECB6  F01A         	call	_turnLeft	;wreg free
  3913                           
  3914                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3915   0011F0  0E05               	movlw	5
  3916   0011F2  6E3D               	movwf	(??_returnHome+1)^0,c
  3917   0011F4  0E0F               	movlw	15
  3918   0011F6  6E3C               	movwf	??_returnHome^0,c
  3919   0011F8  0EF1               	movlw	241
  3920   0011FA                     u3667:
  3921   0011FA  2EE8               	decfsz	wreg,f,c
  3922   0011FC  D7FE               	bra	u3667
  3923   0011FE  2E3C               	decfsz	??_returnHome^0,f,c
  3924   001200  D7FC               	bra	u3667
  3925   001202  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3926   001204  D7FA               	bra	u3667
  3927   001206  0000               	nop	
  3928   001208                     
  3929                           ;dc_motor.c: 220:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3930   001208  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  3931   00120C  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  3932   001210  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  3933   001214  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  3934   001218  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  3935   00121C  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  3936   001220  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  3937   001224  ECD9  F018         	call	_reverseOneSquare	;wreg free
  3938   001228  EFAF  F008         	goto	l3095
  3939   00122C                     l3109:
  3940   00122C  5040               	movf	returnHome@i^0,w,c
  3941   00122E  2431               	addwf	returnHome@moveSequence^0,w,c
  3942   001230  6ED9               	movwf	fsr2l,c
  3943   001232  0E00               	movlw	0
  3944   001234  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3945   001236  6EDA               	movwf	fsr2h,c
  3946   001238  0E05               	movlw	5
  3947   00123A  18DE               	xorwf	postinc2,w,c
  3948   00123C  A4D8               	btfss	status,2,c
  3949   00123E  EF23  F009         	goto	u1851
  3950   001242  EF25  F009         	goto	u1850
  3951   001246                     u1851:
  3952   001246  EF6F  F009         	goto	l3121
  3953   00124A                     u1850:
  3954   00124A                     
  3955                           ;dc_motor.c: 225:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3956   00124A  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3957   00124E  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3958   001252  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3959   001256  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3960   00125A  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3961   00125E  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3962   001262  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3963   001266  ECCC  F019         	call	_turnRight	;wreg free
  3964   00126A                     
  3965                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3966   00126A  0E05               	movlw	5
  3967   00126C  6E3D               	movwf	(??_returnHome+1)^0,c
  3968   00126E  0E0F               	movlw	15
  3969   001270  6E3C               	movwf	??_returnHome^0,c
  3970   001272  0EF1               	movlw	241
  3971   001274                     u3677:
  3972   001274  2EE8               	decfsz	wreg,f,c
  3973   001276  D7FE               	bra	u3677
  3974   001278  2E3C               	decfsz	??_returnHome^0,f,c
  3975   00127A  D7FC               	bra	u3677
  3976   00127C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3977   00127E  D7FA               	bra	u3677
  3978   001280  0000               	nop	
  3979   001282                     
  3980                           ;dc_motor.c: 227:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3981   001282  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3982   001286  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3983   00128A  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3984   00128E  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3985   001292  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3986   001296  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3987   00129A  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3988   00129E  ECCC  F019         	call	_turnRight	;wreg free
  3989                           
  3990                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3991   0012A2  0E05               	movlw	5
  3992   0012A4  6E3D               	movwf	(??_returnHome+1)^0,c
  3993   0012A6  0E0F               	movlw	15
  3994   0012A8  6E3C               	movwf	??_returnHome^0,c
  3995   0012AA  0EF1               	movlw	241
  3996   0012AC                     u3687:
  3997   0012AC  2EE8               	decfsz	wreg,f,c
  3998   0012AE  D7FE               	bra	u3687
  3999   0012B0  2E3C               	decfsz	??_returnHome^0,f,c
  4000   0012B2  D7FC               	bra	u3687
  4001   0012B4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  4002   0012B6  D7FA               	bra	u3687
  4003   0012B8  0000               	nop	
  4004   0012BA                     
  4005                           ;dc_motor.c: 229:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4006   0012BA  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  4007   0012BE  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4008   0012C2  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  4009   0012C6  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4010   0012CA  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4011   0012CE  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4012   0012D2  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4013   0012D6  ECD9  F018         	call	_reverseOneSquare	;wreg free
  4014   0012DA  EFAF  F008         	goto	l3095
  4015   0012DE                     l3121:
  4016   0012DE  5040               	movf	returnHome@i^0,w,c
  4017   0012E0  2431               	addwf	returnHome@moveSequence^0,w,c
  4018   0012E2  6ED9               	movwf	fsr2l,c
  4019   0012E4  0E00               	movlw	0
  4020   0012E6  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4021   0012E8  6EDA               	movwf	fsr2h,c
  4022   0012EA  0E06               	movlw	6
  4023   0012EC  18DE               	xorwf	postinc2,w,c
  4024   0012EE  A4D8               	btfss	status,2,c
  4025   0012F0  EF7C  F009         	goto	u1861
  4026   0012F4  EF7E  F009         	goto	u1860
  4027   0012F8                     u1861:
  4028   0012F8  EFC8  F009         	goto	l3133
  4029   0012FC                     u1860:
  4030   0012FC                     
  4031                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4032   0012FC  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  4033   001300  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  4034   001304  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  4035   001308  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  4036   00130C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4037   001310  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4038   001314  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4039   001318  ECB6  F01A         	call	_turnLeft	;wreg free
  4040   00131C                     
  4041                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4042   00131C  0E05               	movlw	5
  4043   00131E  6E3D               	movwf	(??_returnHome+1)^0,c
  4044   001320  0E0F               	movlw	15
  4045   001322  6E3C               	movwf	??_returnHome^0,c
  4046   001324  0EF1               	movlw	241
  4047   001326                     u3697:
  4048   001326  2EE8               	decfsz	wreg,f,c
  4049   001328  D7FE               	bra	u3697
  4050   00132A  2E3C               	decfsz	??_returnHome^0,f,c
  4051   00132C  D7FC               	bra	u3697
  4052   00132E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  4053   001330  D7FA               	bra	u3697
  4054   001332  0000               	nop	
  4055   001334                     
  4056                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4057   001334  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  4058   001338  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  4059   00133C  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  4060   001340  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  4061   001344  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4062   001348  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4063   00134C  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4064   001350  ECB6  F01A         	call	_turnLeft	;wreg free
  4065                           
  4066                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4067   001354  0E05               	movlw	5
  4068   001356  6E3D               	movwf	(??_returnHome+1)^0,c
  4069   001358  0E0F               	movlw	15
  4070   00135A  6E3C               	movwf	??_returnHome^0,c
  4071   00135C  0EF1               	movlw	241
  4072   00135E                     u3707:
  4073   00135E  2EE8               	decfsz	wreg,f,c
  4074   001360  D7FE               	bra	u3707
  4075   001362  2E3C               	decfsz	??_returnHome^0,f,c
  4076   001364  D7FC               	bra	u3707
  4077   001366  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  4078   001368  D7FA               	bra	u3707
  4079   00136A  0000               	nop	
  4080   00136C                     
  4081                           ;dc_motor.c: 238:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4082   00136C  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  4083   001370  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  4084   001374  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  4085   001378  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  4086   00137C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4087   001380  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4088   001384  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4089   001388  ECB6  F01A         	call	_turnLeft	;wreg free
  4090   00138C  EFAF  F008         	goto	l3095
  4091   001390                     l3133:
  4092   001390  5040               	movf	returnHome@i^0,w,c
  4093   001392  2431               	addwf	returnHome@moveSequence^0,w,c
  4094   001394  6ED9               	movwf	fsr2l,c
  4095   001396  0E00               	movlw	0
  4096   001398  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4097   00139A  6EDA               	movwf	fsr2h,c
  4098   00139C  0E07               	movlw	7
  4099   00139E  18DE               	xorwf	postinc2,w,c
  4100   0013A0  A4D8               	btfss	status,2,c
  4101   0013A2  EFD5  F009         	goto	u1871
  4102   0013A6  EFD7  F009         	goto	u1870
  4103   0013AA                     u1871:
  4104   0013AA  EF21  F00A         	goto	l550
  4105   0013AE                     u1870:
  4106   0013AE                     
  4107                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4108   0013AE  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  4109   0013B2  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  4110   0013B6  C02F  F021         	movff	returnHome@mR,turnRight@mR
  4111   0013BA  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  4112   0013BE  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4113   0013C2  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  4114   0013C6  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  4115   0013CA  ECCC  F019         	call	_turnRight	;wreg free
  4116   0013CE                     
  4117                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4118   0013CE  0E05               	movlw	5
  4119   0013D0  6E3D               	movwf	(??_returnHome+1)^0,c
  4120   0013D2  0E0F               	movlw	15
  4121   0013D4  6E3C               	movwf	??_returnHome^0,c
  4122   0013D6  0EF1               	movlw	241
  4123   0013D8                     u3717:
  4124   0013D8  2EE8               	decfsz	wreg,f,c
  4125   0013DA  D7FE               	bra	u3717
  4126   0013DC  2E3C               	decfsz	??_returnHome^0,f,c
  4127   0013DE  D7FC               	bra	u3717
  4128   0013E0  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  4129   0013E2  D7FA               	bra	u3717
  4130   0013E4  0000               	nop	
  4131   0013E6                     
  4132                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4133   0013E6  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  4134   0013EA  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  4135   0013EE  C02F  F021         	movff	returnHome@mR,turnRight@mR
  4136   0013F2  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  4137   0013F6  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4138   0013FA  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  4139   0013FE  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  4140   001402  ECCC  F019         	call	_turnRight	;wreg free
  4141                           
  4142                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4143   001406  0E05               	movlw	5
  4144   001408  6E3D               	movwf	(??_returnHome+1)^0,c
  4145   00140A  0E0F               	movlw	15
  4146   00140C  6E3C               	movwf	??_returnHome^0,c
  4147   00140E  0EF1               	movlw	241
  4148   001410                     u3727:
  4149   001410  2EE8               	decfsz	wreg,f,c
  4150   001412  D7FE               	bra	u3727
  4151   001414  2E3C               	decfsz	??_returnHome^0,f,c
  4152   001416  D7FC               	bra	u3727
  4153   001418  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  4154   00141A  D7FA               	bra	u3727
  4155   00141C  0000               	nop	
  4156   00141E                     
  4157                           ;dc_motor.c: 247:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4158   00141E  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  4159   001422  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  4160   001426  C02F  F021         	movff	returnHome@mR,turnRight@mR
  4161   00142A  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  4162   00142E  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4163   001432  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  4164   001436  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  4165   00143A  ECCC  F019         	call	_turnRight	;wreg free
  4166   00143E  EFAF  F008         	goto	l3095
  4167   001442                     l550:
  4168   001442                     l544:
  4169                           
  4170                           ;dc_motor.c: 251:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4171   001442  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  4172   001446  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4173   00144A  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  4174   00144E  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4175   001452  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4176   001456  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4177   00145A  EC05  F01E         	call	_fullSpeedAhead	;wreg free
  4178   00145E                     
  4179                           ;dc_motor.c: 252:         resetTimer();
  4180   00145E  EC87  F022         	call	_resetTimer	;wreg free
  4181   001462                     l3147:
  4182   001462  5040               	movf	returnHome@i^0,w,c
  4183   001464  0D02               	mullw	2
  4184   001466  CFF3 F03C          	movff	prodl,??_returnHome
  4185   00146A  CFF4 F03D          	movff	prodh,??_returnHome+1
  4186   00146E  503C               	movf	??_returnHome^0,w,c
  4187   001470  2433               	addwf	returnHome@straightTime^0,w,c
  4188   001472  6ED9               	movwf	fsr2l,c
  4189   001474  503D               	movf	(??_returnHome+1)^0,w,c
  4190   001476  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  4191   001478  6EDA               	movwf	fsr2h,c
  4192   00147A  EC90  F021         	call	_get16bitTMR0val	;wreg free
  4193   00147E  50DE               	movf	postinc2,w,c
  4194   001480  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  4195   001482  50DE               	movf	postinc2,w,c
  4196   001484  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4197   001486  A0D8               	btfss	status,0,c
  4198   001488  EF48  F00A         	goto	u1881
  4199   00148C  EF4A  F00A         	goto	u1880
  4200   001490                     u1881:
  4201   001490  EF31  F00A         	goto	l3147
  4202   001494                     u1880:
  4203   001494                     
  4204                           ;dc_motor.c: 254:         stop(mL, mR, straightRamp);
  4205   001494  C02D  F01F         	movff	returnHome@mL,stop@mL
  4206   001498  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  4207   00149C  C02F  F021         	movff	returnHome@mR,stop@mR
  4208   0014A0  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  4209   0014A4  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  4210   0014A8  EC81  F01D         	call	_stop	;wreg free
  4211   0014AC                     l3151:
  4212                           
  4213                           ;dc_motor.c: 187:     while (i>0) {
  4214   0014AC  5040               	movf	returnHome@i^0,w,c
  4215   0014AE  A4D8               	btfss	status,2,c
  4216   0014B0  EF5C  F00A         	goto	u1891
  4217   0014B4  EF5E  F00A         	goto	u1890
  4218   0014B8                     u1891:
  4219   0014B8  EFAA  F007         	goto	l3065
  4220   0014BC                     u1890:
  4221   0014BC  0012               	return		;funcret
  4222   0014BE                     __end_of_returnHome:
  4223                           	callstack 0
  4224                           
  4225 ;; *************** function _lostReturnHome *****************
  4226 ;; Defined at:
  4227 ;;		line 259 in file "dc_motor.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  4230 ;;		 -> main@motorL(10), 
  4231 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  4232 ;;		 -> main@motorR(10), 
  4233 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  4234 ;;		 -> main@moveSequence(40), 
  4235 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  4236 ;;		 -> main@straightTime(82), 
  4237 ;;  curMove         1   52[COMRAM] unsigned char 
  4238 ;;  straightSpee    1   53[COMRAM] unsigned char 
  4239 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  4240 ;;  straightRamp    1   55[COMRAM] unsigned char 
  4241 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  4242 ;;  turnDuration    1   57[COMRAM] unsigned char 
  4243 ;;  turnRamp        1   58[COMRAM] unsigned char 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  i               1   63[COMRAM] unsigned char 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4255 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4259 ;;Total ram usage:       20 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; Hardware stack levels required when called: 8
  4262 ;; This function calls:
  4263 ;;		_fullSpeedAhead
  4264 ;;		_get16bitTMR0val
  4265 ;;		_resetTimer
  4266 ;;		_reverseOneSquare
  4267 ;;		_stop
  4268 ;;		_turnLeft
  4269 ;;		_turnRight
  4270 ;; This function is called by:
  4271 ;;		_main
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text7
  4276   0014BE                     __ptext7:
  4277                           	callstack 0
  4278   0014BE                     _lostReturnHome:
  4279                           	callstack 22
  4280   0014BE                     
  4281                           ;dc_motor.c: 259: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 260: {;dc_motor.c: 261:     turnLeft(mL, mR, turnSpeed, 
      +                          turnDuration, turnRamp);
  4282   0014BE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4283   0014C2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4284   0014C6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4285   0014CA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4286   0014CE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4287   0014D2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4288   0014D6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4289   0014DA  ECB6  F01A         	call	_turnLeft	;wreg free
  4290   0014DE                     
  4291                           ;dc_motor.c: 262:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4292   0014DE  0E05               	movlw	5
  4293   0014E0  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4294   0014E2  0E0F               	movlw	15
  4295   0014E4  6E3C               	movwf	??_lostReturnHome^0,c
  4296   0014E6  0EF1               	movlw	241
  4297   0014E8                     u3737:
  4298   0014E8  2EE8               	decfsz	wreg,f,c
  4299   0014EA  D7FE               	bra	u3737
  4300   0014EC  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4301   0014EE  D7FC               	bra	u3737
  4302   0014F0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4303   0014F2  D7FA               	bra	u3737
  4304   0014F4  0000               	nop	
  4305   0014F6                     
  4306                           ;dc_motor.c: 263:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4307   0014F6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4308   0014FA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4309   0014FE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4310   001502  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4311   001506  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4312   00150A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4313   00150E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4314   001512  ECB6  F01A         	call	_turnLeft	;wreg free
  4315                           
  4316                           ;dc_motor.c: 264:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4317   001516  0E05               	movlw	5
  4318   001518  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4319   00151A  0E0F               	movlw	15
  4320   00151C  6E3C               	movwf	??_lostReturnHome^0,c
  4321   00151E  0EF1               	movlw	241
  4322   001520                     u3747:
  4323   001520  2EE8               	decfsz	wreg,f,c
  4324   001522  D7FE               	bra	u3747
  4325   001524  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4326   001526  D7FC               	bra	u3747
  4327   001528  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4328   00152A  D7FA               	bra	u3747
  4329   00152C  0000               	nop	
  4330   00152E                     
  4331                           ;dc_motor.c: 265:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4332   00152E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4333   001532  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4334   001536  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4335   00153A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4336   00153E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4337   001542  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4338   001546  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4339   00154A  ECB6  F01A         	call	_turnLeft	;wreg free
  4340   00154E                     
  4341                           ;dc_motor.c: 266:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4342   00154E  0E05               	movlw	5
  4343   001550  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4344   001552  0E0F               	movlw	15
  4345   001554  6E3C               	movwf	??_lostReturnHome^0,c
  4346   001556  0EF1               	movlw	241
  4347   001558                     u3757:
  4348   001558  2EE8               	decfsz	wreg,f,c
  4349   00155A  D7FE               	bra	u3757
  4350   00155C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4351   00155E  D7FC               	bra	u3757
  4352   001560  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4353   001562  D7FA               	bra	u3757
  4354   001564  0000               	nop	
  4355                           
  4356                           ;dc_motor.c: 267:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4357   001566  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4358   00156A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4359   00156E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4360   001572  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4361   001576  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4362   00157A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4363   00157E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4364   001582  ECB6  F01A         	call	_turnLeft	;wreg free
  4365   001586                     
  4366                           ;dc_motor.c: 268:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4367   001586  0E05               	movlw	5
  4368   001588  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4369   00158A  0E0F               	movlw	15
  4370   00158C  6E3C               	movwf	??_lostReturnHome^0,c
  4371   00158E  0EF1               	movlw	241
  4372   001590                     u3767:
  4373   001590  2EE8               	decfsz	wreg,f,c
  4374   001592  D7FE               	bra	u3767
  4375   001594  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4376   001596  D7FC               	bra	u3767
  4377   001598  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4378   00159A  D7FA               	bra	u3767
  4379   00159C  0000               	nop	
  4380   00159E                     
  4381                           ;dc_motor.c: 269:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4382   00159E  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4383   0015A2  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4384   0015A6  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4385   0015AA  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4386   0015AE  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4387   0015B2  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4388   0015B6  EC05  F01E         	call	_fullSpeedAhead	;wreg free
  4389   0015BA                     
  4390                           ;dc_motor.c: 270:     resetTimer();
  4391   0015BA  EC87  F022         	call	_resetTimer	;wreg free
  4392   0015BE                     
  4393                           ;dc_motor.c: 271:     lost = 0;
  4394   0015BE  0E00               	movlw	0
  4395   0015C0  0100               	movlb	0	; () banked
  4396   0015C2  6FB0               	movwf	_lost& (0+255),b
  4397   0015C4                     l3533:
  4398                           
  4399                           ; BSR set to: 0
  4400   0015C4  51B0               	movf	_lost& (0+255),w,b
  4401   0015C6  B4D8               	btfsc	status,2,c
  4402   0015C8  EFE8  F00A         	goto	u2311
  4403   0015CC  EFEA  F00A         	goto	u2310
  4404   0015D0                     u2311:
  4405   0015D0  EFE2  F00A         	goto	l3533
  4406   0015D4                     u2310:
  4407   0015D4                     
  4408                           ; BSR set to: 0
  4409                           ;dc_motor.c: 273:     stop(mL, mR, straightRamp);
  4410   0015D4  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  4411   0015D8  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  4412   0015DC  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  4413   0015E0  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  4414   0015E4  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4415   0015E8  EC81  F01D         	call	_stop	;wreg free
  4416   0015EC                     
  4417                           ;dc_motor.c: 275:     char i=curMove;
  4418   0015EC  C035  F040         	movff	lostReturnHome@curMove,lostReturnHome@i
  4419                           
  4420                           ;dc_motor.c: 276:     while (i>0) {
  4421   0015F0  EFA6  F00D         	goto	l3625
  4422   0015F4                     l3539:
  4423                           
  4424                           ;dc_motor.c: 277:         i--;
  4425   0015F4  0640               	decf	lostReturnHome@i^0,f,c
  4426   0015F6                     
  4427                           ;dc_motor.c: 279:         if (moveSequence[i] == 1) {
  4428   0015F6  5040               	movf	lostReturnHome@i^0,w,c
  4429   0015F8  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4430   0015FA  6ED9               	movwf	fsr2l,c
  4431   0015FC  0E00               	movlw	0
  4432   0015FE  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4433   001600  6EDA               	movwf	fsr2h,c
  4434   001602  04DE               	decf	postinc2,w,c
  4435   001604  A4D8               	btfss	status,2,c
  4436   001606  EF07  F00B         	goto	u2321
  4437   00160A  EF09  F00B         	goto	u2320
  4438   00160E                     u2321:
  4439   00160E  EF43  F00B         	goto	l3549
  4440   001612                     u2320:
  4441   001612                     
  4442                           ;dc_motor.c: 280:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4443   001612  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4444   001616  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4445   00161A  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4446   00161E  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4447   001622  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4448   001626  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4449   00162A  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4450   00162E  ECB6  F01A         	call	_turnLeft	;wreg free
  4451   001632                     
  4452                           ;dc_motor.c: 281:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4453   001632  0E05               	movlw	5
  4454   001634  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4455   001636  0E0F               	movlw	15
  4456   001638  6E3C               	movwf	??_lostReturnHome^0,c
  4457   00163A  0EF1               	movlw	241
  4458   00163C                     u3777:
  4459   00163C  2EE8               	decfsz	wreg,f,c
  4460   00163E  D7FE               	bra	u3777
  4461   001640  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4462   001642  D7FC               	bra	u3777
  4463   001644  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4464   001646  D7FA               	bra	u3777
  4465   001648  0000               	nop	
  4466   00164A                     
  4467                           ;dc_motor.c: 282:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4468   00164A  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4469   00164E  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4470   001652  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4471   001656  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4472   00165A  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4473   00165E  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4474   001662  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4475   001666  ECB6  F01A         	call	_turnLeft	;wreg free
  4476                           
  4477                           ;dc_motor.c: 283:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4478   00166A  0E05               	movlw	5
  4479   00166C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4480   00166E  0E0F               	movlw	15
  4481   001670  6E3C               	movwf	??_lostReturnHome^0,c
  4482   001672  0EF1               	movlw	241
  4483   001674                     u3787:
  4484   001674  2EE8               	decfsz	wreg,f,c
  4485   001676  D7FE               	bra	u3787
  4486   001678  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4487   00167A  D7FC               	bra	u3787
  4488   00167C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4489   00167E  D7FA               	bra	u3787
  4490   001680  0000               	nop	
  4491                           
  4492                           ;dc_motor.c: 284:         }
  4493   001682  EF71  F00D         	goto	l569
  4494   001686                     l3549:
  4495   001686  5040               	movf	lostReturnHome@i^0,w,c
  4496   001688  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4497   00168A  6ED9               	movwf	fsr2l,c
  4498   00168C  0E00               	movlw	0
  4499   00168E  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4500   001690  6EDA               	movwf	fsr2h,c
  4501   001692  0E02               	movlw	2
  4502   001694  18DE               	xorwf	postinc2,w,c
  4503   001696  A4D8               	btfss	status,2,c
  4504   001698  EF50  F00B         	goto	u2331
  4505   00169C  EF52  F00B         	goto	u2330
  4506   0016A0                     u2331:
  4507   0016A0  EF8C  F00B         	goto	l3557
  4508   0016A4                     u2330:
  4509   0016A4                     
  4510                           ;dc_motor.c: 287:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4511   0016A4  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4512   0016A8  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4513   0016AC  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4514   0016B0  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4515   0016B4  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4516   0016B8  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4517   0016BC  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4518   0016C0  ECCC  F019         	call	_turnRight	;wreg free
  4519   0016C4                     
  4520                           ;dc_motor.c: 288:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4521   0016C4  0E05               	movlw	5
  4522   0016C6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4523   0016C8  0E0F               	movlw	15
  4524   0016CA  6E3C               	movwf	??_lostReturnHome^0,c
  4525   0016CC  0EF1               	movlw	241
  4526   0016CE                     u3797:
  4527   0016CE  2EE8               	decfsz	wreg,f,c
  4528   0016D0  D7FE               	bra	u3797
  4529   0016D2  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4530   0016D4  D7FC               	bra	u3797
  4531   0016D6  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4532   0016D8  D7FA               	bra	u3797
  4533   0016DA  0000               	nop	
  4534   0016DC                     
  4535                           ;dc_motor.c: 289:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4536   0016DC  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4537   0016E0  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4538   0016E4  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4539   0016E8  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4540   0016EC  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4541   0016F0  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4542   0016F4  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4543   0016F8  ECCC  F019         	call	_turnRight	;wreg free
  4544                           
  4545                           ;dc_motor.c: 290:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4546   0016FC  0E05               	movlw	5
  4547   0016FE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4548   001700  0E0F               	movlw	15
  4549   001702  6E3C               	movwf	??_lostReturnHome^0,c
  4550   001704  0EF1               	movlw	241
  4551   001706                     u3807:
  4552   001706  2EE8               	decfsz	wreg,f,c
  4553   001708  D7FE               	bra	u3807
  4554   00170A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4555   00170C  D7FC               	bra	u3807
  4556   00170E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4557   001710  D7FA               	bra	u3807
  4558   001712  0000               	nop	
  4559                           
  4560                           ;dc_motor.c: 291:         }
  4561   001714  EF71  F00D         	goto	l569
  4562   001718                     l3557:
  4563   001718  5040               	movf	lostReturnHome@i^0,w,c
  4564   00171A  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4565   00171C  6ED9               	movwf	fsr2l,c
  4566   00171E  0E00               	movlw	0
  4567   001720  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4568   001722  6EDA               	movwf	fsr2h,c
  4569   001724  0E03               	movlw	3
  4570   001726  18DE               	xorwf	postinc2,w,c
  4571   001728  A4D8               	btfss	status,2,c
  4572   00172A  EF99  F00B         	goto	u2341
  4573   00172E  EF9B  F00B         	goto	u2340
  4574   001732                     u2341:
  4575   001732  EF0D  F00C         	goto	l3571
  4576   001736                     u2340:
  4577   001736                     
  4578                           ;dc_motor.c: 294:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4579   001736  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4580   00173A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4581   00173E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4582   001742  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4583   001746  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4584   00174A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4585   00174E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4586   001752  ECB6  F01A         	call	_turnLeft	;wreg free
  4587   001756                     
  4588                           ;dc_motor.c: 295:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4589   001756  0E05               	movlw	5
  4590   001758  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4591   00175A  0E0F               	movlw	15
  4592   00175C  6E3C               	movwf	??_lostReturnHome^0,c
  4593   00175E  0EF1               	movlw	241
  4594   001760                     u3817:
  4595   001760  2EE8               	decfsz	wreg,f,c
  4596   001762  D7FE               	bra	u3817
  4597   001764  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4598   001766  D7FC               	bra	u3817
  4599   001768  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4600   00176A  D7FA               	bra	u3817
  4601   00176C  0000               	nop	
  4602   00176E                     
  4603                           ;dc_motor.c: 296:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4604   00176E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4605   001772  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4606   001776  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4607   00177A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4608   00177E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4609   001782  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4610   001786  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4611   00178A  ECB6  F01A         	call	_turnLeft	;wreg free
  4612                           
  4613                           ;dc_motor.c: 297:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4614   00178E  0E05               	movlw	5
  4615   001790  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4616   001792  0E0F               	movlw	15
  4617   001794  6E3C               	movwf	??_lostReturnHome^0,c
  4618   001796  0EF1               	movlw	241
  4619   001798                     u3827:
  4620   001798  2EE8               	decfsz	wreg,f,c
  4621   00179A  D7FE               	bra	u3827
  4622   00179C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4623   00179E  D7FC               	bra	u3827
  4624   0017A0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4625   0017A2  D7FA               	bra	u3827
  4626   0017A4  0000               	nop	
  4627   0017A6                     
  4628                           ;dc_motor.c: 298:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4629   0017A6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4630   0017AA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4631   0017AE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4632   0017B2  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4633   0017B6  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4634   0017BA  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4635   0017BE  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4636   0017C2  ECB6  F01A         	call	_turnLeft	;wreg free
  4637   0017C6                     
  4638                           ;dc_motor.c: 299:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4639   0017C6  0E05               	movlw	5
  4640   0017C8  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4641   0017CA  0E0F               	movlw	15
  4642   0017CC  6E3C               	movwf	??_lostReturnHome^0,c
  4643   0017CE  0EF1               	movlw	241
  4644   0017D0                     u3837:
  4645   0017D0  2EE8               	decfsz	wreg,f,c
  4646   0017D2  D7FE               	bra	u3837
  4647   0017D4  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4648   0017D6  D7FC               	bra	u3837
  4649   0017D8  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4650   0017DA  D7FA               	bra	u3837
  4651   0017DC  0000               	nop	
  4652                           
  4653                           ;dc_motor.c: 300:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4654   0017DE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4655   0017E2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4656   0017E6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4657   0017EA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4658   0017EE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4659   0017F2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4660   0017F6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4661   0017FA  ECB6  F01A         	call	_turnLeft	;wreg free
  4662   0017FE                     l3569:
  4663                           
  4664                           ;dc_motor.c: 301:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4665   0017FE  0E05               	movlw	5
  4666   001800  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4667   001802  0E0F               	movlw	15
  4668   001804  6E3C               	movwf	??_lostReturnHome^0,c
  4669   001806  0EF1               	movlw	241
  4670   001808                     u3847:
  4671   001808  2EE8               	decfsz	wreg,f,c
  4672   00180A  D7FE               	bra	u3847
  4673   00180C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4674   00180E  D7FC               	bra	u3847
  4675   001810  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4676   001812  D7FA               	bra	u3847
  4677   001814  0000               	nop	
  4678                           
  4679                           ;dc_motor.c: 302:         }
  4680   001816  EF71  F00D         	goto	l569
  4681   00181A                     l3571:
  4682   00181A  5040               	movf	lostReturnHome@i^0,w,c
  4683   00181C  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4684   00181E  6ED9               	movwf	fsr2l,c
  4685   001820  0E00               	movlw	0
  4686   001822  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4687   001824  6EDA               	movwf	fsr2h,c
  4688   001826  0E04               	movlw	4
  4689   001828  18DE               	xorwf	postinc2,w,c
  4690   00182A  A4D8               	btfss	status,2,c
  4691   00182C  EF1A  F00C         	goto	u2351
  4692   001830  EF1C  F00C         	goto	u2350
  4693   001834                     u2351:
  4694   001834  EF66  F00C         	goto	l3583
  4695   001838                     u2350:
  4696   001838                     
  4697                           ;dc_motor.c: 305:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4698   001838  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4699   00183C  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4700   001840  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4701   001844  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4702   001848  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4703   00184C  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4704   001850  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4705   001854  ECB6  F01A         	call	_turnLeft	;wreg free
  4706   001858                     
  4707                           ;dc_motor.c: 306:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4708   001858  0E05               	movlw	5
  4709   00185A  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4710   00185C  0E0F               	movlw	15
  4711   00185E  6E3C               	movwf	??_lostReturnHome^0,c
  4712   001860  0EF1               	movlw	241
  4713   001862                     u3857:
  4714   001862  2EE8               	decfsz	wreg,f,c
  4715   001864  D7FE               	bra	u3857
  4716   001866  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4717   001868  D7FC               	bra	u3857
  4718   00186A  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4719   00186C  D7FA               	bra	u3857
  4720   00186E  0000               	nop	
  4721   001870                     
  4722                           ;dc_motor.c: 307:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4723   001870  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4724   001874  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4725   001878  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4726   00187C  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4727   001880  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4728   001884  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4729   001888  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4730   00188C  ECB6  F01A         	call	_turnLeft	;wreg free
  4731                           
  4732                           ;dc_motor.c: 308:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4733   001890  0E05               	movlw	5
  4734   001892  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4735   001894  0E0F               	movlw	15
  4736   001896  6E3C               	movwf	??_lostReturnHome^0,c
  4737   001898  0EF1               	movlw	241
  4738   00189A                     u3867:
  4739   00189A  2EE8               	decfsz	wreg,f,c
  4740   00189C  D7FE               	bra	u3867
  4741   00189E  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4742   0018A0  D7FC               	bra	u3867
  4743   0018A2  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4744   0018A4  D7FA               	bra	u3867
  4745   0018A6  0000               	nop	
  4746   0018A8                     
  4747                           ;dc_motor.c: 309:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4748   0018A8  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  4749   0018AC  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  4750   0018B0  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  4751   0018B4  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  4752   0018B8  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  4753   0018BC  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  4754   0018C0  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  4755   0018C4  ECD9  F018         	call	_reverseOneSquare	;wreg free
  4756   0018C8  EFFF  F00B         	goto	l3569
  4757   0018CC                     l3583:
  4758   0018CC  5040               	movf	lostReturnHome@i^0,w,c
  4759   0018CE  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4760   0018D0  6ED9               	movwf	fsr2l,c
  4761   0018D2  0E00               	movlw	0
  4762   0018D4  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4763   0018D6  6EDA               	movwf	fsr2h,c
  4764   0018D8  0E05               	movlw	5
  4765   0018DA  18DE               	xorwf	postinc2,w,c
  4766   0018DC  A4D8               	btfss	status,2,c
  4767   0018DE  EF73  F00C         	goto	u2361
  4768   0018E2  EF75  F00C         	goto	u2360
  4769   0018E6                     u2361:
  4770   0018E6  EFBF  F00C         	goto	l3595
  4771   0018EA                     u2360:
  4772   0018EA                     
  4773                           ;dc_motor.c: 314:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4774   0018EA  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4775   0018EE  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4776   0018F2  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4777   0018F6  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4778   0018FA  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4779   0018FE  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4780   001902  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4781   001906  ECCC  F019         	call	_turnRight	;wreg free
  4782   00190A                     
  4783                           ;dc_motor.c: 315:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4784   00190A  0E05               	movlw	5
  4785   00190C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4786   00190E  0E0F               	movlw	15
  4787   001910  6E3C               	movwf	??_lostReturnHome^0,c
  4788   001912  0EF1               	movlw	241
  4789   001914                     u3877:
  4790   001914  2EE8               	decfsz	wreg,f,c
  4791   001916  D7FE               	bra	u3877
  4792   001918  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4793   00191A  D7FC               	bra	u3877
  4794   00191C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4795   00191E  D7FA               	bra	u3877
  4796   001920  0000               	nop	
  4797   001922                     
  4798                           ;dc_motor.c: 316:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4799   001922  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4800   001926  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4801   00192A  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4802   00192E  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4803   001932  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4804   001936  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4805   00193A  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4806   00193E  ECCC  F019         	call	_turnRight	;wreg free
  4807                           
  4808                           ;dc_motor.c: 317:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4809   001942  0E05               	movlw	5
  4810   001944  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4811   001946  0E0F               	movlw	15
  4812   001948  6E3C               	movwf	??_lostReturnHome^0,c
  4813   00194A  0EF1               	movlw	241
  4814   00194C                     u3887:
  4815   00194C  2EE8               	decfsz	wreg,f,c
  4816   00194E  D7FE               	bra	u3887
  4817   001950  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4818   001952  D7FC               	bra	u3887
  4819   001954  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4820   001956  D7FA               	bra	u3887
  4821   001958  0000               	nop	
  4822   00195A                     
  4823                           ;dc_motor.c: 318:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4824   00195A  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  4825   00195E  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  4826   001962  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  4827   001966  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  4828   00196A  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  4829   00196E  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  4830   001972  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  4831   001976  ECD9  F018         	call	_reverseOneSquare	;wreg free
  4832   00197A  EFFF  F00B         	goto	l3569
  4833   00197E                     l3595:
  4834   00197E  5040               	movf	lostReturnHome@i^0,w,c
  4835   001980  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4836   001982  6ED9               	movwf	fsr2l,c
  4837   001984  0E00               	movlw	0
  4838   001986  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4839   001988  6EDA               	movwf	fsr2h,c
  4840   00198A  0E06               	movlw	6
  4841   00198C  18DE               	xorwf	postinc2,w,c
  4842   00198E  A4D8               	btfss	status,2,c
  4843   001990  EFCC  F00C         	goto	u2371
  4844   001994  EFCE  F00C         	goto	u2370
  4845   001998                     u2371:
  4846   001998  EF18  F00D         	goto	l3607
  4847   00199C                     u2370:
  4848   00199C                     
  4849                           ;dc_motor.c: 323:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4850   00199C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4851   0019A0  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4852   0019A4  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4853   0019A8  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4854   0019AC  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4855   0019B0  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4856   0019B4  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4857   0019B8  ECB6  F01A         	call	_turnLeft	;wreg free
  4858   0019BC                     
  4859                           ;dc_motor.c: 324:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4860   0019BC  0E05               	movlw	5
  4861   0019BE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4862   0019C0  0E0F               	movlw	15
  4863   0019C2  6E3C               	movwf	??_lostReturnHome^0,c
  4864   0019C4  0EF1               	movlw	241
  4865   0019C6                     u3897:
  4866   0019C6  2EE8               	decfsz	wreg,f,c
  4867   0019C8  D7FE               	bra	u3897
  4868   0019CA  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4869   0019CC  D7FC               	bra	u3897
  4870   0019CE  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4871   0019D0  D7FA               	bra	u3897
  4872   0019D2  0000               	nop	
  4873   0019D4                     
  4874                           ;dc_motor.c: 325:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4875   0019D4  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4876   0019D8  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4877   0019DC  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4878   0019E0  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4879   0019E4  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4880   0019E8  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4881   0019EC  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4882   0019F0  ECB6  F01A         	call	_turnLeft	;wreg free
  4883                           
  4884                           ;dc_motor.c: 326:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4885   0019F4  0E05               	movlw	5
  4886   0019F6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4887   0019F8  0E0F               	movlw	15
  4888   0019FA  6E3C               	movwf	??_lostReturnHome^0,c
  4889   0019FC  0EF1               	movlw	241
  4890   0019FE                     u3907:
  4891   0019FE  2EE8               	decfsz	wreg,f,c
  4892   001A00  D7FE               	bra	u3907
  4893   001A02  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4894   001A04  D7FC               	bra	u3907
  4895   001A06  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4896   001A08  D7FA               	bra	u3907
  4897   001A0A  0000               	nop	
  4898   001A0C                     
  4899                           ;dc_motor.c: 327:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4900   001A0C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4901   001A10  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4902   001A14  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4903   001A18  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4904   001A1C  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4905   001A20  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4906   001A24  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4907   001A28  ECB6  F01A         	call	_turnLeft	;wreg free
  4908   001A2C  EFFF  F00B         	goto	l3569
  4909   001A30                     l3607:
  4910   001A30  5040               	movf	lostReturnHome@i^0,w,c
  4911   001A32  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4912   001A34  6ED9               	movwf	fsr2l,c
  4913   001A36  0E00               	movlw	0
  4914   001A38  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4915   001A3A  6EDA               	movwf	fsr2h,c
  4916   001A3C  0E07               	movlw	7
  4917   001A3E  18DE               	xorwf	postinc2,w,c
  4918   001A40  A4D8               	btfss	status,2,c
  4919   001A42  EF25  F00D         	goto	u2381
  4920   001A46  EF27  F00D         	goto	u2380
  4921   001A4A                     u2381:
  4922   001A4A  EF71  F00D         	goto	l575
  4923   001A4E                     u2380:
  4924   001A4E                     
  4925                           ;dc_motor.c: 332:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4926   001A4E  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4927   001A52  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4928   001A56  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4929   001A5A  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4930   001A5E  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4931   001A62  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4932   001A66  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4933   001A6A  ECCC  F019         	call	_turnRight	;wreg free
  4934   001A6E                     
  4935                           ;dc_motor.c: 333:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4936   001A6E  0E05               	movlw	5
  4937   001A70  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4938   001A72  0E0F               	movlw	15
  4939   001A74  6E3C               	movwf	??_lostReturnHome^0,c
  4940   001A76  0EF1               	movlw	241
  4941   001A78                     u3917:
  4942   001A78  2EE8               	decfsz	wreg,f,c
  4943   001A7A  D7FE               	bra	u3917
  4944   001A7C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4945   001A7E  D7FC               	bra	u3917
  4946   001A80  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4947   001A82  D7FA               	bra	u3917
  4948   001A84  0000               	nop	
  4949   001A86                     
  4950                           ;dc_motor.c: 334:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4951   001A86  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4952   001A8A  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4953   001A8E  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4954   001A92  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4955   001A96  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4956   001A9A  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4957   001A9E  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4958   001AA2  ECCC  F019         	call	_turnRight	;wreg free
  4959                           
  4960                           ;dc_motor.c: 335:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4961   001AA6  0E05               	movlw	5
  4962   001AA8  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4963   001AAA  0E0F               	movlw	15
  4964   001AAC  6E3C               	movwf	??_lostReturnHome^0,c
  4965   001AAE  0EF1               	movlw	241
  4966   001AB0                     u3927:
  4967   001AB0  2EE8               	decfsz	wreg,f,c
  4968   001AB2  D7FE               	bra	u3927
  4969   001AB4  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4970   001AB6  D7FC               	bra	u3927
  4971   001AB8  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4972   001ABA  D7FA               	bra	u3927
  4973   001ABC  0000               	nop	
  4974   001ABE                     
  4975                           ;dc_motor.c: 336:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4976   001ABE  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4977   001AC2  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4978   001AC6  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4979   001ACA  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4980   001ACE  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4981   001AD2  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4982   001AD6  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4983   001ADA  ECCC  F019         	call	_turnRight	;wreg free
  4984   001ADE  EFFF  F00B         	goto	l3569
  4985   001AE2                     l575:
  4986   001AE2                     l569:
  4987                           
  4988                           ;dc_motor.c: 340:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4989   001AE2  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4990   001AE6  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4991   001AEA  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4992   001AEE  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4993   001AF2  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4994   001AF6  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4995   001AFA  EC05  F01E         	call	_fullSpeedAhead	;wreg free
  4996   001AFE                     
  4997                           ;dc_motor.c: 341:         resetTimer();
  4998   001AFE  EC87  F022         	call	_resetTimer	;wreg free
  4999   001B02                     l3621:
  5000   001B02  5040               	movf	lostReturnHome@i^0,w,c
  5001   001B04  0D02               	mullw	2
  5002   001B06  CFF3 F03C          	movff	prodl,??_lostReturnHome
  5003   001B0A  CFF4 F03D          	movff	prodh,??_lostReturnHome+1
  5004   001B0E  503C               	movf	??_lostReturnHome^0,w,c
  5005   001B10  2433               	addwf	lostReturnHome@straightTime^0,w,c
  5006   001B12  6ED9               	movwf	fsr2l,c
  5007   001B14  503D               	movf	(??_lostReturnHome+1)^0,w,c
  5008   001B16  2034               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  5009   001B18  6EDA               	movwf	fsr2h,c
  5010   001B1A  EC90  F021         	call	_get16bitTMR0val	;wreg free
  5011   001B1E  50DE               	movf	postinc2,w,c
  5012   001B20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  5013   001B22  50DE               	movf	postinc2,w,c
  5014   001B24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  5015   001B26  A0D8               	btfss	status,0,c
  5016   001B28  EF98  F00D         	goto	u2391
  5017   001B2C  EF9A  F00D         	goto	u2390
  5018   001B30                     u2391:
  5019   001B30  EF81  F00D         	goto	l3621
  5020   001B34                     u2390:
  5021   001B34                     
  5022                           ;dc_motor.c: 343:         stop(mL, mR, straightRamp);
  5023   001B34  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  5024   001B38  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  5025   001B3C  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  5026   001B40  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  5027   001B44  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  5028   001B48  EC81  F01D         	call	_stop	;wreg free
  5029   001B4C                     l3625:
  5030                           
  5031                           ;dc_motor.c: 276:     while (i>0) {
  5032   001B4C  5040               	movf	lostReturnHome@i^0,w,c
  5033   001B4E  A4D8               	btfss	status,2,c
  5034   001B50  EFAC  F00D         	goto	u2401
  5035   001B54  EFAE  F00D         	goto	u2400
  5036   001B58                     u2401:
  5037   001B58  EFFA  F00A         	goto	l3539
  5038   001B5C                     u2400:
  5039   001B5C  0012               	return		;funcret
  5040   001B5E                     __end_of_lostReturnHome:
  5041                           	callstack 0
  5042                           
  5043 ;; *************** function _stop *****************
  5044 ;; Defined at:
  5045 ;;		line 348 in file "dc_motor.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  5048 ;;		 -> main@motorL(10), 
  5049 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  5050 ;;		 -> main@motorR(10), 
  5051 ;;  straightRamp    1   34[COMRAM] unsigned char 
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;  cur_power       2   40[COMRAM] int 
  5054 ;;  i               2   38[COMRAM] int 
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5064 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5065 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5066 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5067 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5068 ;;Total ram usage:       12 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; Hardware stack levels required when called: 7
  5071 ;; This function calls:
  5072 ;;		_setMotorPWM
  5073 ;; This function is called by:
  5074 ;;		_main
  5075 ;;		_returnHome
  5076 ;;		_lostReturnHome
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text8
  5081   003B02                     __ptext8:
  5082                           	callstack 0
  5083   003B02                     _stop:
  5084                           	callstack 23
  5085   003B02                     
  5086                           ;dc_motor.c: 348: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 349: {;dc_motor.c: 350:     mL->direction = 1;
  5087   003B02  EE20 F001          	lfsr	2,1
  5088   003B06  501F               	movf	stop@mL^0,w,c
  5089   003B08  26D9               	addwf	fsr2l,f,c
  5090   003B0A  5020               	movf	(stop@mL+1)^0,w,c
  5091   003B0C  22DA               	addwfc	fsr2h,f,c
  5092   003B0E  0E01               	movlw	1
  5093   003B10  6EDF               	movwf	indf2,c
  5094                           
  5095                           ;dc_motor.c: 351:     mR->direction = 1;
  5096   003B12  EE20 F001          	lfsr	2,1
  5097   003B16  5021               	movf	stop@mR^0,w,c
  5098   003B18  26D9               	addwf	fsr2l,f,c
  5099   003B1A  5022               	movf	(stop@mR+1)^0,w,c
  5100   003B1C  22DA               	addwfc	fsr2h,f,c
  5101   003B1E  0E01               	movlw	1
  5102   003B20  6EDF               	movwf	indf2,c
  5103                           
  5104                           ;dc_motor.c: 352:     int i;;dc_motor.c: 353:     int cur_power;;dc_motor.c: 354:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  5105   003B22  C01F  FFD9         	movff	stop@mL,fsr2l
  5106   003B26  C020  FFDA         	movff	stop@mL+1,fsr2h
  5107   003B2A  50DF               	movf	indf2,w,c
  5108   003B2C  6E24               	movwf	??_stop^0,c
  5109   003B2E  EE20 F009          	lfsr	2,9
  5110   003B32  501F               	movf	stop@mL^0,w,c
  5111   003B34  26D9               	addwf	fsr2l,f,c
  5112   003B36  5020               	movf	(stop@mL+1)^0,w,c
  5113   003B38  22DA               	addwfc	fsr2h,f,c
  5114   003B3A  50DF               	movf	indf2,w,c
  5115   003B3C  6E25               	movwf	(??_stop+1)^0,c
  5116   003B3E  5025               	movf	(??_stop+1)^0,w,c
  5117   003B40  5C24               	subwf	??_stop^0,w,c
  5118   003B42  6E29               	movwf	stop@cur_power^0,c
  5119   003B44  6A2A               	clrf	(stop@cur_power+1)^0,c
  5120   003B46  A0D8               	btfss	status,0,c
  5121   003B48  062A               	decf	(stop@cur_power+1)^0,f,c
  5122   003B4A                     l2707:
  5123   003B4A  BE2A               	btfsc	(stop@cur_power+1)^0,7,c
  5124   003B4C  EFAC  F01D         	goto	u1490
  5125   003B50  EFAA  F01D         	goto	u1491
  5126   003B54                     u1491:
  5127   003B54  EFAE  F01D         	goto	l2711
  5128   003B58                     u1490:
  5129   003B58  EFFA  F01D         	goto	l2727
  5130   003B5C                     l2711:
  5131                           
  5132                           ;dc_motor.c: 355:         mL->power = cur_power+mL->compensation;
  5133   003B5C  EE20 F009          	lfsr	2,9
  5134   003B60  501F               	movf	stop@mL^0,w,c
  5135   003B62  26D9               	addwf	fsr2l,f,c
  5136   003B64  5020               	movf	(stop@mL+1)^0,w,c
  5137   003B66  22DA               	addwfc	fsr2h,f,c
  5138   003B68  50DF               	movf	indf2,w,c
  5139   003B6A  2429               	addwf	stop@cur_power^0,w,c
  5140   003B6C  C01F  FFD9         	movff	stop@mL,fsr2l
  5141   003B70  C020  FFDA         	movff	stop@mL+1,fsr2h
  5142   003B74  6EDF               	movwf	indf2,c
  5143                           
  5144                           ;dc_motor.c: 356:         mR->power = cur_power+mR->compensation;
  5145   003B76  EE20 F009          	lfsr	2,9
  5146   003B7A  5021               	movf	stop@mR^0,w,c
  5147   003B7C  26D9               	addwf	fsr2l,f,c
  5148   003B7E  5022               	movf	(stop@mR+1)^0,w,c
  5149   003B80  22DA               	addwfc	fsr2h,f,c
  5150   003B82  50DF               	movf	indf2,w,c
  5151   003B84  2429               	addwf	stop@cur_power^0,w,c
  5152   003B86  C021  FFD9         	movff	stop@mR,fsr2l
  5153   003B8A  C022  FFDA         	movff	stop@mR+1,fsr2h
  5154   003B8E  6EDF               	movwf	indf2,c
  5155   003B90                     
  5156                           ;dc_motor.c: 357:         setMotorPWM(mL);
  5157   003B90  C01F  F019         	movff	stop@mL,setMotorPWM@m
  5158   003B94  C020  F01A         	movff	stop@mL+1,setMotorPWM@m+1
  5159   003B98  ECA0  F01B         	call	_setMotorPWM	;wreg free
  5160   003B9C                     
  5161                           ;dc_motor.c: 358:         setMotorPWM(mR);
  5162   003B9C  C021  F019         	movff	stop@mR,setMotorPWM@m
  5163   003BA0  C022  F01A         	movff	stop@mR+1,setMotorPWM@m+1
  5164   003BA4  ECA0  F01B         	call	_setMotorPWM	;wreg free
  5165   003BA8                     
  5166                           ;dc_motor.c: 359:         for (i=0;i<straightRamp;i++) {
  5167   003BA8  0E00               	movlw	0
  5168   003BAA  6E28               	movwf	(stop@i+1)^0,c
  5169   003BAC  0E00               	movlw	0
  5170   003BAE  6E27               	movwf	stop@i^0,c
  5171   003BB0  EFE3  F01D         	goto	l590
  5172   003BB4                     l2719:
  5173                           
  5174                           ;dc_motor.c: 360:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5175   003BB4  0ED0               	movlw	208
  5176   003BB6  6E24               	movwf	??_stop^0,c
  5177   003BB8  0ECA               	movlw	202
  5178   003BBA                     u3937:
  5179   003BBA  2EE8               	decfsz	wreg,f,c
  5180   003BBC  D7FE               	bra	u3937
  5181   003BBE  2E24               	decfsz	??_stop^0,f,c
  5182   003BC0  D7FC               	bra	u3937
  5183   003BC2                     
  5184                           ;dc_motor.c: 361:         }
  5185   003BC2  4A27               	infsnz	stop@i^0,f,c
  5186   003BC4  2A28               	incf	(stop@i+1)^0,f,c
  5187   003BC6                     l590:
  5188   003BC6  5023               	movf	stop@straightRamp^0,w,c
  5189   003BC8  6E24               	movwf	??_stop^0,c
  5190   003BCA  6A25               	clrf	(??_stop+1)^0,c
  5191   003BCC  5024               	movf	??_stop^0,w,c
  5192   003BCE  5C27               	subwf	stop@i^0,w,c
  5193   003BD0  5028               	movf	(stop@i+1)^0,w,c
  5194   003BD2  0A80               	xorlw	128
  5195   003BD4  6E26               	movwf	(??_stop+2)^0,c
  5196   003BD6  5025               	movf	(??_stop+1)^0,w,c
  5197   003BD8  0A80               	xorlw	128
  5198   003BDA  5826               	subwfb	(??_stop+2)^0,w,c
  5199   003BDC  A0D8               	btfss	status,0,c
  5200   003BDE  EFF3  F01D         	goto	u1501
  5201   003BE2  EFF5  F01D         	goto	u1500
  5202   003BE6                     u1501:
  5203   003BE6  EFDA  F01D         	goto	l2719
  5204   003BEA                     u1500:
  5205   003BEA                     
  5206                           ;dc_motor.c: 362:     }
  5207   003BEA  0629               	decf	stop@cur_power^0,f,c
  5208   003BEC  A0D8               	btfss	status,0,c
  5209   003BEE  062A               	decf	(stop@cur_power+1)^0,f,c
  5210   003BF0  EFA5  F01D         	goto	l2707
  5211   003BF4                     l2727:
  5212                           
  5213                           ;dc_motor.c: 363:     mL->power = 0;
  5214   003BF4  C01F  FFD9         	movff	stop@mL,fsr2l
  5215   003BF8  C020  FFDA         	movff	stop@mL+1,fsr2h
  5216   003BFC  6ADF               	clrf	indf2,c
  5217                           
  5218                           ;dc_motor.c: 364:     mR->power = 0;
  5219   003BFE  C021  FFD9         	movff	stop@mR,fsr2l
  5220   003C02  C022  FFDA         	movff	stop@mR+1,fsr2h
  5221   003C06  6ADF               	clrf	indf2,c
  5222   003C08  0012               	return		;funcret
  5223   003C0A                     __end_of_stop:
  5224                           	callstack 0
  5225                           
  5226 ;; *************** function _reverseOneSquare *****************
  5227 ;; Defined at:
  5228 ;;		line 449 in file "dc_motor.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  5231 ;;		 -> main@motorL(10), 
  5232 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  5233 ;;		 -> main@motorR(10), 
  5234 ;;  straightSpee    1   34[COMRAM] unsigned char 
  5235 ;;  reverseDurat    1   35[COMRAM] unsigned char 
  5236 ;;  straightRamp    1   36[COMRAM] unsigned char 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  cur_power       2   42[COMRAM] int 
  5239 ;;  i               2   40[COMRAM] int 
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  1    wreg      void 
  5242 ;; Registers used:
  5243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5249 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5252 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5253 ;;Total ram usage:       14 bytes
  5254 ;; Hardware stack levels used: 1
  5255 ;; Hardware stack levels required when called: 7
  5256 ;; This function calls:
  5257 ;;		_setMotorPWM
  5258 ;; This function is called by:
  5259 ;;		_move
  5260 ;;		_returnHome
  5261 ;;		_lostReturnHome
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text9
  5266   0031B2                     __ptext9:
  5267                           	callstack 0
  5268   0031B2                     _reverseOneSquare:
  5269                           	callstack 22
  5270   0031B2                     
  5271                           ;dc_motor.c: 449: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned char reverseDuration, unsigned char straightRamp);dc_motor.c: 450: {;dc_motor.c
      +                          : 451:     mL->direction = 0;
  5272   0031B2  EE20 F001          	lfsr	2,1
  5273   0031B6  501F               	movf	reverseOneSquare@mL^0,w,c
  5274   0031B8  26D9               	addwf	fsr2l,f,c
  5275   0031BA  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  5276   0031BC  22DA               	addwfc	fsr2h,f,c
  5277   0031BE  6ADF               	clrf	indf2,c
  5278                           
  5279                           ;dc_motor.c: 452:     mR->direction = 0;
  5280   0031C0  EE20 F001          	lfsr	2,1
  5281   0031C4  5021               	movf	reverseOneSquare@mR^0,w,c
  5282   0031C6  26D9               	addwf	fsr2l,f,c
  5283   0031C8  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  5284   0031CA  22DA               	addwfc	fsr2h,f,c
  5285   0031CC  6ADF               	clrf	indf2,c
  5286   0031CE                     
  5287                           ;dc_motor.c: 453:     int i;;dc_motor.c: 454:     int cur_power;;dc_motor.c: 455:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  5288   0031CE  0E00               	movlw	0
  5289   0031D0  6E2C               	movwf	(reverseOneSquare@cur_power+1)^0,c
  5290   0031D2  0E01               	movlw	1
  5291   0031D4  6E2B               	movwf	reverseOneSquare@cur_power^0,c
  5292   0031D6  EF36  F019         	goto	l2859
  5293   0031DA                     l2845:
  5294                           
  5295                           ;dc_motor.c: 456:         mL->power = cur_power+mL->compensation;
  5296   0031DA  EE20 F009          	lfsr	2,9
  5297   0031DE  501F               	movf	reverseOneSquare@mL^0,w,c
  5298   0031E0  26D9               	addwf	fsr2l,f,c
  5299   0031E2  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  5300   0031E4  22DA               	addwfc	fsr2h,f,c
  5301   0031E6  50DF               	movf	indf2,w,c
  5302   0031E8  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  5303   0031EA  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5304   0031EE  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5305   0031F2  6EDF               	movwf	indf2,c
  5306                           
  5307                           ;dc_motor.c: 457:         mR->power = cur_power+mR->compensation;
  5308   0031F4  EE20 F009          	lfsr	2,9
  5309   0031F8  5021               	movf	reverseOneSquare@mR^0,w,c
  5310   0031FA  26D9               	addwf	fsr2l,f,c
  5311   0031FC  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  5312   0031FE  22DA               	addwfc	fsr2h,f,c
  5313   003200  50DF               	movf	indf2,w,c
  5314   003202  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  5315   003204  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5316   003208  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5317   00320C  6EDF               	movwf	indf2,c
  5318   00320E                     
  5319                           ;dc_motor.c: 458:         setMotorPWM(mL);
  5320   00320E  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  5321   003212  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  5322   003216  ECA0  F01B         	call	_setMotorPWM	;wreg free
  5323   00321A                     
  5324                           ;dc_motor.c: 459:         setMotorPWM(mR);
  5325   00321A  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  5326   00321E  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  5327   003222  ECA0  F01B         	call	_setMotorPWM	;wreg free
  5328   003226                     
  5329                           ;dc_motor.c: 460:         for (i=0;i<straightRamp;i++) {
  5330   003226  0E00               	movlw	0
  5331   003228  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  5332   00322A  0E00               	movlw	0
  5333   00322C  6E29               	movwf	reverseOneSquare@i^0,c
  5334   00322E  EF22  F019         	goto	l641
  5335   003232                     l2853:
  5336                           
  5337                           ;dc_motor.c: 461:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5338   003232  0ED0               	movlw	208
  5339   003234  6E26               	movwf	??_reverseOneSquare^0,c
  5340   003236  0ECA               	movlw	202
  5341   003238                     u3947:
  5342   003238  2EE8               	decfsz	wreg,f,c
  5343   00323A  D7FE               	bra	u3947
  5344   00323C  2E26               	decfsz	??_reverseOneSquare^0,f,c
  5345   00323E  D7FC               	bra	u3947
  5346   003240                     
  5347                           ;dc_motor.c: 462:         }
  5348   003240  4A29               	infsnz	reverseOneSquare@i^0,f,c
  5349   003242  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  5350   003244                     l641:
  5351   003244  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  5352   003246  6E26               	movwf	??_reverseOneSquare^0,c
  5353   003248  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  5354   00324A  5026               	movf	??_reverseOneSquare^0,w,c
  5355   00324C  5C29               	subwf	reverseOneSquare@i^0,w,c
  5356   00324E  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  5357   003250  0A80               	xorlw	128
  5358   003252  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  5359   003254  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  5360   003256  0A80               	xorlw	128
  5361   003258  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5362   00325A  A0D8               	btfss	status,0,c
  5363   00325C  EF32  F019         	goto	u1631
  5364   003260  EF34  F019         	goto	u1630
  5365   003264                     u1631:
  5366   003264  EF19  F019         	goto	l2853
  5367   003268                     u1630:
  5368   003268                     
  5369                           ;dc_motor.c: 463:     }
  5370   003268  4A2B               	infsnz	reverseOneSquare@cur_power^0,f,c
  5371   00326A  2A2C               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  5372   00326C                     l2859:
  5373   00326C  5023               	movf	reverseOneSquare@straightSpeed^0,w,c
  5374   00326E  6E26               	movwf	??_reverseOneSquare^0,c
  5375   003270  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  5376   003272  502B               	movf	reverseOneSquare@cur_power^0,w,c
  5377   003274  5C26               	subwf	??_reverseOneSquare^0,w,c
  5378   003276  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  5379   003278  0A80               	xorlw	128
  5380   00327A  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  5381   00327C  502C               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  5382   00327E  0A80               	xorlw	128
  5383   003280  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5384   003282  B0D8               	btfsc	status,0,c
  5385   003284  EF46  F019         	goto	u1641
  5386   003288  EF48  F019         	goto	u1640
  5387   00328C                     u1641:
  5388   00328C  EFED  F018         	goto	l2845
  5389   003290                     u1640:
  5390   003290                     
  5391                           ;dc_motor.c: 465:     for (i=0;i<reverseDuration;i++) {
  5392   003290  0E00               	movlw	0
  5393   003292  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  5394   003294  0E00               	movlw	0
  5395   003296  6E29               	movwf	reverseOneSquare@i^0,c
  5396   003298  EF57  F019         	goto	l645
  5397   00329C                     l2863:
  5398                           
  5399                           ;dc_motor.c: 466:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5400   00329C  0ED0               	movlw	208
  5401   00329E  6E26               	movwf	??_reverseOneSquare^0,c
  5402   0032A0  0ECA               	movlw	202
  5403   0032A2                     u3957:
  5404   0032A2  2EE8               	decfsz	wreg,f,c
  5405   0032A4  D7FE               	bra	u3957
  5406   0032A6  2E26               	decfsz	??_reverseOneSquare^0,f,c
  5407   0032A8  D7FC               	bra	u3957
  5408   0032AA                     
  5409                           ;dc_motor.c: 467:         }
  5410   0032AA  4A29               	infsnz	reverseOneSquare@i^0,f,c
  5411   0032AC  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  5412   0032AE                     l645:
  5413   0032AE  5024               	movf	reverseOneSquare@reverseDuration^0,w,c
  5414   0032B0  6E26               	movwf	??_reverseOneSquare^0,c
  5415   0032B2  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  5416   0032B4  5026               	movf	??_reverseOneSquare^0,w,c
  5417   0032B6  5C29               	subwf	reverseOneSquare@i^0,w,c
  5418   0032B8  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  5419   0032BA  0A80               	xorlw	128
  5420   0032BC  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  5421   0032BE  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  5422   0032C0  0A80               	xorlw	128
  5423   0032C2  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5424   0032C4  A0D8               	btfss	status,0,c
  5425   0032C6  EF67  F019         	goto	u1651
  5426   0032CA  EF69  F019         	goto	u1650
  5427   0032CE                     u1651:
  5428   0032CE  EF4E  F019         	goto	l2863
  5429   0032D2                     u1650:
  5430   0032D2                     
  5431                           ;dc_motor.c: 469:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  5432   0032D2  C023  F02B         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  5433   0032D6  6A2C               	clrf	(reverseOneSquare@cur_power+1)^0,c
  5434   0032D8                     l2867:
  5435   0032D8  BE2C               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  5436   0032DA  EF73  F019         	goto	u1660
  5437   0032DE  EF71  F019         	goto	u1661
  5438   0032E2                     u1661:
  5439   0032E2  EF75  F019         	goto	l2871
  5440   0032E6                     u1660:
  5441   0032E6  EFC1  F019         	goto	l2887
  5442   0032EA                     l2871:
  5443                           
  5444                           ;dc_motor.c: 470:         mL->power = cur_power+mL->compensation;
  5445   0032EA  EE20 F009          	lfsr	2,9
  5446   0032EE  501F               	movf	reverseOneSquare@mL^0,w,c
  5447   0032F0  26D9               	addwf	fsr2l,f,c
  5448   0032F2  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  5449   0032F4  22DA               	addwfc	fsr2h,f,c
  5450   0032F6  50DF               	movf	indf2,w,c
  5451   0032F8  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  5452   0032FA  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5453   0032FE  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5454   003302  6EDF               	movwf	indf2,c
  5455                           
  5456                           ;dc_motor.c: 471:         mR->power = cur_power+mR->compensation;
  5457   003304  EE20 F009          	lfsr	2,9
  5458   003308  5021               	movf	reverseOneSquare@mR^0,w,c
  5459   00330A  26D9               	addwf	fsr2l,f,c
  5460   00330C  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  5461   00330E  22DA               	addwfc	fsr2h,f,c
  5462   003310  50DF               	movf	indf2,w,c
  5463   003312  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  5464   003314  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5465   003318  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5466   00331C  6EDF               	movwf	indf2,c
  5467   00331E                     
  5468                           ;dc_motor.c: 472:         setMotorPWM(mL);
  5469   00331E  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  5470   003322  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  5471   003326  ECA0  F01B         	call	_setMotorPWM	;wreg free
  5472   00332A                     
  5473                           ;dc_motor.c: 473:         setMotorPWM(mR);
  5474   00332A  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  5475   00332E  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  5476   003332  ECA0  F01B         	call	_setMotorPWM	;wreg free
  5477   003336                     
  5478                           ;dc_motor.c: 474:         for (i=0;i<straightRamp;i++) {
  5479   003336  0E00               	movlw	0
  5480   003338  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  5481   00333A  0E00               	movlw	0
  5482   00333C  6E29               	movwf	reverseOneSquare@i^0,c
  5483   00333E  EFAA  F019         	goto	l650
  5484   003342                     l2879:
  5485                           
  5486                           ;dc_motor.c: 475:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5487   003342  0ED0               	movlw	208
  5488   003344  6E26               	movwf	??_reverseOneSquare^0,c
  5489   003346  0ECA               	movlw	202
  5490   003348                     u3967:
  5491   003348  2EE8               	decfsz	wreg,f,c
  5492   00334A  D7FE               	bra	u3967
  5493   00334C  2E26               	decfsz	??_reverseOneSquare^0,f,c
  5494   00334E  D7FC               	bra	u3967
  5495   003350                     
  5496                           ;dc_motor.c: 476:         }
  5497   003350  4A29               	infsnz	reverseOneSquare@i^0,f,c
  5498   003352  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  5499   003354                     l650:
  5500   003354  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  5501   003356  6E26               	movwf	??_reverseOneSquare^0,c
  5502   003358  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  5503   00335A  5026               	movf	??_reverseOneSquare^0,w,c
  5504   00335C  5C29               	subwf	reverseOneSquare@i^0,w,c
  5505   00335E  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  5506   003360  0A80               	xorlw	128
  5507   003362  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  5508   003364  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  5509   003366  0A80               	xorlw	128
  5510   003368  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5511   00336A  A0D8               	btfss	status,0,c
  5512   00336C  EFBA  F019         	goto	u1671
  5513   003370  EFBC  F019         	goto	u1670
  5514   003374                     u1671:
  5515   003374  EFA1  F019         	goto	l2879
  5516   003378                     u1670:
  5517   003378                     
  5518                           ;dc_motor.c: 477:     }
  5519   003378  062B               	decf	reverseOneSquare@cur_power^0,f,c
  5520   00337A  A0D8               	btfss	status,0,c
  5521   00337C  062C               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  5522   00337E  EF6C  F019         	goto	l2867
  5523   003382                     l2887:
  5524                           
  5525                           ;dc_motor.c: 478:     mL->power = 0;
  5526   003382  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5527   003386  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5528   00338A  6ADF               	clrf	indf2,c
  5529                           
  5530                           ;dc_motor.c: 479:     mR->power = 0;
  5531   00338C  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5532   003390  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5533   003394  6ADF               	clrf	indf2,c
  5534   003396  0012               	return		;funcret
  5535   003398                     __end_of_reverseOneSquare:
  5536                           	callstack 0
  5537                           
  5538 ;; *************** function _resetTimer *****************
  5539 ;; Defined at:
  5540 ;;		line 23 in file "timers.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;		None
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      void 
  5547 ;; Registers used:
  5548 ;;		wreg, status,2
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5558 ;;Total ram usage:        0 bytes
  5559 ;; Hardware stack levels used: 1
  5560 ;; Hardware stack levels required when called: 5
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_main
  5565 ;;		_returnHome
  5566 ;;		_lostReturnHome
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text10
  5571   00450E                     __ptext10:
  5572                           	callstack 0
  5573   00450E                     _resetTimer:
  5574                           	callstack 25
  5575   00450E                     
  5576                           ;timers.c: 25:     TMR0H=0;
  5577   00450E  0E00               	movlw	0
  5578   004510  6ED4               	movwf	212,c	;volatile
  5579                           
  5580                           ;timers.c: 26:     TMR0L=0;
  5581   004512  0E00               	movlw	0
  5582   004514  6ED3               	movwf	211,c	;volatile
  5583   004516  0012               	return		;funcret
  5584   004518                     __end_of_resetTimer:
  5585                           	callstack 0
  5586                           
  5587 ;; *************** function _get16bitTMR0val *****************
  5588 ;; Defined at:
  5589 ;;		line 33 in file "timers.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  timer_val       2   19[COMRAM] unsigned int 
  5594 ;;  timer_high      2   17[COMRAM] unsigned int 
  5595 ;;  timer_low       2   15[COMRAM] unsigned int 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  2   11[COMRAM] unsigned int 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5606 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5608 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5609 ;;Total ram usage:       10 bytes
  5610 ;; Hardware stack levels used: 1
  5611 ;; Hardware stack levels required when called: 5
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;;		_returnHome
  5617 ;;		_lostReturnHome
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text11
  5622   004320                     __ptext11:
  5623                           	callstack 0
  5624   004320                     _get16bitTMR0val:
  5625                           	callstack 23
  5626   004320                     
  5627                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  5628   004320  CFD3 F010          	movff	4051,get16bitTMR0val@timer_low	;volatile
  5629   004324  6A11               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  5630                           
  5631                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  5632   004326  CFD4 F012          	movff	4052,get16bitTMR0val@timer_high	;volatile
  5633   00432A  6A13               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  5634   00432C                     
  5635                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  5636   00432C  5012               	movf	get16bitTMR0val@timer_high^0,w,c
  5637   00432E  6E0F               	movwf	(??_get16bitTMR0val+1)^0,c
  5638   004330  6A0E               	clrf	??_get16bitTMR0val^0,c
  5639   004332  5010               	movf	get16bitTMR0val@timer_low^0,w,c
  5640   004334  100E               	iorwf	??_get16bitTMR0val^0,w,c
  5641   004336  6E14               	movwf	get16bitTMR0val@timer_val^0,c
  5642   004338  5011               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  5643   00433A  100F               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  5644   00433C  6E15               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  5645   00433E                     
  5646                           ;timers.c: 39:     return timer_val;
  5647   00433E  C014  F00C         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  5648   004342  C015  F00D         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  5649   004346  0012               	return		;funcret
  5650   004348                     __end_of_get16bitTMR0val:
  5651                           	callstack 0
  5652                           
  5653 ;; *************** function _fullSpeedAhead *****************
  5654 ;; Defined at:
  5655 ;;		line 432 in file "dc_motor.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  5658 ;;		 -> main@motorL(10), 
  5659 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  5660 ;;		 -> main@motorR(10), 
  5661 ;;  straightSpee    1   34[COMRAM] unsigned char 
  5662 ;;  straightRamp    1   35[COMRAM] unsigned char 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  cur_power       2   41[COMRAM] int 
  5665 ;;  i               2   39[COMRAM] int 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1    wreg      void 
  5668 ;; Registers used:
  5669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5675 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5676 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5677 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5678 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5679 ;;Total ram usage:       13 bytes
  5680 ;; Hardware stack levels used: 1
  5681 ;; Hardware stack levels required when called: 7
  5682 ;; This function calls:
  5683 ;;		_setMotorPWM
  5684 ;; This function is called by:
  5685 ;;		_main
  5686 ;;		_move
  5687 ;;		_returnHome
  5688 ;;		_lostReturnHome
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text12
  5693   003C0A                     __ptext12:
  5694                           	callstack 0
  5695   003C0A                     _fullSpeedAhead:
  5696                           	callstack 21
  5697   003C0A                     
  5698                           ;dc_motor.c: 432: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 433: {;dc_motor.c: 434:     mL->direction = 1;
  5699   003C0A  EE20 F001          	lfsr	2,1
  5700   003C0E  501F               	movf	fullSpeedAhead@mL^0,w,c
  5701   003C10  26D9               	addwf	fsr2l,f,c
  5702   003C12  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  5703   003C14  22DA               	addwfc	fsr2h,f,c
  5704   003C16  0E01               	movlw	1
  5705   003C18  6EDF               	movwf	indf2,c
  5706                           
  5707                           ;dc_motor.c: 435:     mR->direction = 1;
  5708   003C1A  EE20 F001          	lfsr	2,1
  5709   003C1E  5021               	movf	fullSpeedAhead@mR^0,w,c
  5710   003C20  26D9               	addwf	fsr2l,f,c
  5711   003C22  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  5712   003C24  22DA               	addwfc	fsr2h,f,c
  5713   003C26  0E01               	movlw	1
  5714   003C28  6EDF               	movwf	indf2,c
  5715   003C2A                     
  5716                           ;dc_motor.c: 436:     int i;;dc_motor.c: 437:     int cur_power;;dc_motor.c: 438:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  5717   003C2A  0E00               	movlw	0
  5718   003C2C  6E2B               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  5719   003C2E  0E01               	movlw	1
  5720   003C30  6E2A               	movwf	fullSpeedAhead@cur_power^0,c
  5721   003C32  EF64  F01E         	goto	l2693
  5722   003C36                     l2679:
  5723                           
  5724                           ;dc_motor.c: 439:         mL->power = cur_power+mL->compensation;
  5725   003C36  EE20 F009          	lfsr	2,9
  5726   003C3A  501F               	movf	fullSpeedAhead@mL^0,w,c
  5727   003C3C  26D9               	addwf	fsr2l,f,c
  5728   003C3E  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  5729   003C40  22DA               	addwfc	fsr2h,f,c
  5730   003C42  50DF               	movf	indf2,w,c
  5731   003C44  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  5732   003C46  C01F  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5733   003C4A  C020  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5734   003C4E  6EDF               	movwf	indf2,c
  5735                           
  5736                           ;dc_motor.c: 440:         mR->power = cur_power+mR->compensation;
  5737   003C50  EE20 F009          	lfsr	2,9
  5738   003C54  5021               	movf	fullSpeedAhead@mR^0,w,c
  5739   003C56  26D9               	addwf	fsr2l,f,c
  5740   003C58  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  5741   003C5A  22DA               	addwfc	fsr2h,f,c
  5742   003C5C  50DF               	movf	indf2,w,c
  5743   003C5E  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  5744   003C60  C021  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5745   003C64  C022  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5746   003C68  6EDF               	movwf	indf2,c
  5747   003C6A                     
  5748                           ;dc_motor.c: 441:         setMotorPWM(mL);
  5749   003C6A  C01F  F019         	movff	fullSpeedAhead@mL,setMotorPWM@m
  5750   003C6E  C020  F01A         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  5751   003C72  ECA0  F01B         	call	_setMotorPWM	;wreg free
  5752   003C76                     
  5753                           ;dc_motor.c: 442:         setMotorPWM(mR);
  5754   003C76  C021  F019         	movff	fullSpeedAhead@mR,setMotorPWM@m
  5755   003C7A  C022  F01A         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  5756   003C7E  ECA0  F01B         	call	_setMotorPWM	;wreg free
  5757   003C82                     
  5758                           ;dc_motor.c: 443:         for (i=0;i<straightRamp;i++) {
  5759   003C82  0E00               	movlw	0
  5760   003C84  6E29               	movwf	(fullSpeedAhead@i+1)^0,c
  5761   003C86  0E00               	movlw	0
  5762   003C88  6E28               	movwf	fullSpeedAhead@i^0,c
  5763   003C8A  EF50  F01E         	goto	l632
  5764   003C8E                     l2687:
  5765                           
  5766                           ;dc_motor.c: 444:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5767   003C8E  0ED0               	movlw	208
  5768   003C90  6E25               	movwf	??_fullSpeedAhead^0,c
  5769   003C92  0ECA               	movlw	202
  5770   003C94                     u3977:
  5771   003C94  2EE8               	decfsz	wreg,f,c
  5772   003C96  D7FE               	bra	u3977
  5773   003C98  2E25               	decfsz	??_fullSpeedAhead^0,f,c
  5774   003C9A  D7FC               	bra	u3977
  5775   003C9C                     
  5776                           ;dc_motor.c: 445:         }
  5777   003C9C  4A28               	infsnz	fullSpeedAhead@i^0,f,c
  5778   003C9E  2A29               	incf	(fullSpeedAhead@i+1)^0,f,c
  5779   003CA0                     l632:
  5780   003CA0  5024               	movf	fullSpeedAhead@straightRamp^0,w,c
  5781   003CA2  6E25               	movwf	??_fullSpeedAhead^0,c
  5782   003CA4  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  5783   003CA6  5025               	movf	??_fullSpeedAhead^0,w,c
  5784   003CA8  5C28               	subwf	fullSpeedAhead@i^0,w,c
  5785   003CAA  5029               	movf	(fullSpeedAhead@i+1)^0,w,c
  5786   003CAC  0A80               	xorlw	128
  5787   003CAE  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  5788   003CB0  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  5789   003CB2  0A80               	xorlw	128
  5790   003CB4  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  5791   003CB6  A0D8               	btfss	status,0,c
  5792   003CB8  EF60  F01E         	goto	u1471
  5793   003CBC  EF62  F01E         	goto	u1470
  5794   003CC0                     u1471:
  5795   003CC0  EF47  F01E         	goto	l2687
  5796   003CC4                     u1470:
  5797   003CC4                     
  5798                           ;dc_motor.c: 446:     }
  5799   003CC4  4A2A               	infsnz	fullSpeedAhead@cur_power^0,f,c
  5800   003CC6  2A2B               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  5801   003CC8                     l2693:
  5802   003CC8  5023               	movf	fullSpeedAhead@straightSpeed^0,w,c
  5803   003CCA  6E25               	movwf	??_fullSpeedAhead^0,c
  5804   003CCC  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  5805   003CCE  502A               	movf	fullSpeedAhead@cur_power^0,w,c
  5806   003CD0  5C25               	subwf	??_fullSpeedAhead^0,w,c
  5807   003CD2  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  5808   003CD4  0A80               	xorlw	128
  5809   003CD6  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  5810   003CD8  502B               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  5811   003CDA  0A80               	xorlw	128
  5812   003CDC  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  5813   003CDE  B0D8               	btfsc	status,0,c
  5814   003CE0  EF74  F01E         	goto	u1481
  5815   003CE4  EF76  F01E         	goto	u1480
  5816   003CE8                     u1481:
  5817   003CE8  EF1B  F01E         	goto	l2679
  5818   003CEC                     u1480:
  5819   003CEC  0012               	return		;funcret
  5820   003CEE                     __end_of_fullSpeedAhead:
  5821                           	callstack 0
  5822                           
  5823 ;; *************** function _initUSART4 *****************
  5824 ;; Defined at:
  5825 ;;		line 4 in file "serial.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;		None
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;		None
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5843 ;;Total ram usage:        0 bytes
  5844 ;; Hardware stack levels used: 1
  5845 ;; Hardware stack levels required when called: 5
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_main
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text13
  5854   00448E                     __ptext13:
  5855                           	callstack 0
  5856   00448E                     _initUSART4:
  5857                           	callstack 25
  5858   00448E                     
  5859                           ;serial.c: 7:     RC0PPS = 0x12;
  5860   00448E  0E12               	movlw	18
  5861   004490  010E               	movlb	14	; () banked
  5862   004492  6F62               	movwf	98,b	;volatile
  5863                           
  5864                           ;serial.c: 8:     RX4PPS = 0x11;
  5865   004494  0E11               	movlw	17
  5866   004496  6F15               	movwf	21,b	;volatile
  5867   004498                     
  5868                           ; BSR set to: 14
  5869                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  5870   004498  97E9               	bcf	233,3,b	;volatile
  5871   00449A                     
  5872                           ; BSR set to: 14
  5873                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  5874   00449A  95E8               	bcf	232,2,b	;volatile
  5875                           
  5876                           ;serial.c: 13:     SP4BRGL = 51;
  5877   00449C  0E33               	movlw	51
  5878   00449E  6FE5               	movwf	229,b	;volatile
  5879                           
  5880                           ;serial.c: 14:     SP4BRGH = 0;
  5881   0044A0  0E00               	movlw	0
  5882   0044A2  6FE6               	movwf	230,b	;volatile
  5883   0044A4                     
  5884                           ; BSR set to: 14
  5885                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  5886   0044A4  89E7               	bsf	231,4,b	;volatile
  5887   0044A6                     
  5888                           ; BSR set to: 14
  5889                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  5890   0044A6  8BE8               	bsf	232,5,b	;volatile
  5891   0044A8                     
  5892                           ; BSR set to: 14
  5893                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  5894   0044A8  8FE7               	bsf	231,7,b	;volatile
  5895   0044AA                     
  5896                           ; BSR set to: 14
  5897   0044AA  0012               	return		;funcret
  5898   0044AC                     __end_of_initUSART4:
  5899                           	callstack 0
  5900                           
  5901 ;; *************** function _initDCmotorsPWM *****************
  5902 ;; Defined at:
  5903 ;;		line 8 in file "dc_motor.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  PWMperiod       2   11[COMRAM] unsigned int 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;		None
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg, status,2
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5921 ;;Total ram usage:        2 bytes
  5922 ;; Hardware stack levels used: 1
  5923 ;; Hardware stack levels required when called: 5
  5924 ;; This function calls:
  5925 ;;		Nothing
  5926 ;; This function is called by:
  5927 ;;		_main
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           	psect	text14
  5932   003E56                     __ptext14:
  5933                           	callstack 0
  5934   003E56                     _initDCmotorsPWM:
  5935                           	callstack 25
  5936   003E56                     
  5937                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  5938   003E56  947D               	bcf	125,2,c	;volatile
  5939                           
  5940                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  5941   003E58  9485               	bcf	133,2,c	;volatile
  5942                           
  5943                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  5944   003E5A  987D               	bcf	125,4,c	;volatile
  5945                           
  5946                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  5947   003E5C  9885               	bcf	133,4,c	;volatile
  5948                           
  5949                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  5950   003E5E  9E7B               	bcf	123,7,c	;volatile
  5951                           
  5952                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  5953   003E60  9E83               	bcf	131,7,c	;volatile
  5954                           
  5955                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  5956   003E62  9C7F               	bcf	127,6,c	;volatile
  5957                           
  5958                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  5959   003E64  9C87               	bcf	135,6,c	;volatile
  5960   003E66                     
  5961                           ;dc_motor.c: 21:     RE2PPS=0x05;
  5962   003E66  0E05               	movlw	5
  5963   003E68  010E               	movlb	14	; () banked
  5964   003E6A  6F74               	movwf	116,b	;volatile
  5965                           
  5966                           ;dc_motor.c: 22:     RE4PPS=0x06;
  5967   003E6C  0E06               	movlw	6
  5968   003E6E  6F76               	movwf	118,b	;volatile
  5969                           
  5970                           ;dc_motor.c: 23:     RC7PPS=0x07;
  5971   003E70  0E07               	movlw	7
  5972   003E72  6F69               	movwf	105,b	;volatile
  5973                           
  5974                           ;dc_motor.c: 24:     RG6PPS=0x08;
  5975   003E74  0E08               	movlw	8
  5976   003E76  6F88               	movwf	136,b	;volatile
  5977                           
  5978                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  5979   003E78  50BD               	movf	189,w,c	;volatile
  5980   003E7A  0B8F               	andlw	-113
  5981   003E7C  0930               	iorlw	48
  5982   003E7E  6EBD               	movwf	189,c	;volatile
  5983                           
  5984                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  5985   003E80  0EE0               	movlw	-32
  5986   003E82  16BE               	andwf	190,f,c	;volatile
  5987                           
  5988                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  5989   003E84  50BF               	movf	191,w,c	;volatile
  5990   003E86  0BF0               	andlw	-16
  5991   003E88  0901               	iorlw	1
  5992   003E8A  6EBF               	movwf	191,c	;volatile
  5993   003E8C                     
  5994                           ; BSR set to: 14
  5995                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  5996   003E8C  C00C  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  5997   003E90                     
  5998                           ; BSR set to: 14
  5999                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  6000   003E90  8EBD               	bsf	189,7,c	;volatile
  6001                           
  6002                           ;dc_motor.c: 38:     CCPR1H=0;
  6003   003E92  0E00               	movlw	0
  6004   003E94  6EAA               	movwf	170,c	;volatile
  6005                           
  6006                           ;dc_motor.c: 39:     CCPR2H=0;
  6007   003E96  0E00               	movlw	0
  6008   003E98  6EA6               	movwf	166,c	;volatile
  6009                           
  6010                           ;dc_motor.c: 40:     CCPR3H=0;
  6011   003E9A  0E00               	movlw	0
  6012   003E9C  010F               	movlb	15	; () banked
  6013   003E9E  6F25               	movwf	37,b	;volatile
  6014                           
  6015                           ;dc_motor.c: 41:     CCPR4H=0;
  6016   003EA0  0E00               	movlw	0
  6017   003EA2  6F21               	movwf	33,b	;volatile
  6018                           
  6019                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  6020   003EA4  0EFC               	movlw	-4
  6021   003EA6  16AD               	andwf	173,f,c	;volatile
  6022                           
  6023                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  6024   003EA8  0EF3               	movlw	-13
  6025   003EAA  16AD               	andwf	173,f,c	;volatile
  6026                           
  6027                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  6028   003EAC  0ECF               	movlw	-49
  6029   003EAE  16AD               	andwf	173,f,c	;volatile
  6030                           
  6031                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  6032   003EB0  0E3F               	movlw	-193
  6033   003EB2  16AD               	andwf	173,f,c	;volatile
  6034   003EB4                     
  6035                           ; BSR set to: 15
  6036                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  6037   003EB4  88AB               	bsf	171,4,c	;volatile
  6038                           
  6039                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  6040   003EB6  50AB               	movf	171,w,c	;volatile
  6041   003EB8  0BF0               	andlw	-16
  6042   003EBA  090C               	iorlw	12
  6043   003EBC  6EAB               	movwf	171,c	;volatile
  6044   003EBE                     
  6045                           ; BSR set to: 15
  6046                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  6047   003EBE  8EAB               	bsf	171,7,c	;volatile
  6048   003EC0                     
  6049                           ; BSR set to: 15
  6050                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  6051   003EC0  88A7               	bsf	167,4,c	;volatile
  6052                           
  6053                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  6054   003EC2  50A7               	movf	167,w,c	;volatile
  6055   003EC4  0BF0               	andlw	-16
  6056   003EC6  090C               	iorlw	12
  6057   003EC8  6EA7               	movwf	167,c	;volatile
  6058   003ECA                     
  6059                           ; BSR set to: 15
  6060                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  6061   003ECA  8EA7               	bsf	167,7,c	;volatile
  6062   003ECC                     
  6063                           ; BSR set to: 15
  6064                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  6065   003ECC  8926               	bsf	38,4,b	;volatile
  6066                           
  6067                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  6068   003ECE  5126               	movf	38,w,b	;volatile
  6069   003ED0  0BF0               	andlw	-16
  6070   003ED2  090C               	iorlw	12
  6071   003ED4  6F26               	movwf	38,b	;volatile
  6072   003ED6                     
  6073                           ; BSR set to: 15
  6074                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  6075   003ED6  8F26               	bsf	38,7,b	;volatile
  6076   003ED8                     
  6077                           ; BSR set to: 15
  6078                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  6079   003ED8  8922               	bsf	34,4,b	;volatile
  6080                           
  6081                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  6082   003EDA  5122               	movf	34,w,b	;volatile
  6083   003EDC  0BF0               	andlw	-16
  6084   003EDE  090C               	iorlw	12
  6085   003EE0  6F22               	movwf	34,b	;volatile
  6086   003EE2                     
  6087                           ; BSR set to: 15
  6088                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  6089   003EE2  8F22               	bsf	34,7,b	;volatile
  6090   003EE4                     
  6091                           ; BSR set to: 15
  6092   003EE4  0012               	return		;funcret
  6093   003EE6                     __end_of_initDCmotorsPWM:
  6094                           	callstack 0
  6095                           
  6096 ;; *************** function _color_detect *****************
  6097 ;; Defined at:
  6098 ;;		line 138 in file "color.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;  RGBC_n          8   11[COMRAM] struct RGBC_val
  6101 ;;  red             6   19[COMRAM] struct RGB_calib
  6102 ;;  green           6   25[COMRAM] struct RGB_calib
  6103 ;;  blue            6   31[COMRAM] struct RGB_calib
  6104 ;;  yellow          6   37[COMRAM] struct RGB_calib
  6105 ;;  pink            6   43[COMRAM] struct RGB_calib
  6106 ;;  orange          6   49[COMRAM] struct RGB_calib
  6107 ;;  lightBlue       6   55[COMRAM] struct RGB_calib
  6108 ;;  white           6   61[COMRAM] struct RGB_calib
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  color           1   69[COMRAM] unsigned char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  1    wreg      unsigned char 
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6120 ;;      Params:        56       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6122 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6123 ;;      Totals:        59       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6124 ;;Total ram usage:       59 bytes
  6125 ;; Hardware stack levels used: 1
  6126 ;; Hardware stack levels required when called: 5
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_main
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text15
  6135   003EE6                     __ptext15:
  6136                           	callstack 0
  6137   003EE6                     _color_detect:
  6138                           	callstack 25
  6139   003EE6                     
  6140                           ;color.c: 142:     if ((red.R)-40 < RGBC_n.R) {
  6141   003EE6  0ED8               	movlw	216
  6142   003EE8  2414               	addwf	color_detect@red^0,w,c
  6143   003EEA  6E44               	movwf	??_color_detect^0,c
  6144   003EEC  0EFF               	movlw	255
  6145   003EEE  2015               	addwfc	(color_detect@red+1)^0,w,c
  6146   003EF0  6E45               	movwf	(??_color_detect+1)^0,c
  6147   003EF2  500C               	movf	color_detect@RGBC_n^0,w,c
  6148   003EF4  5C44               	subwf	??_color_detect^0,w,c
  6149   003EF6  500D               	movf	(color_detect@RGBC_n+1)^0,w,c
  6150   003EF8  5845               	subwfb	(??_color_detect+1)^0,w,c
  6151   003EFA  B0D8               	btfsc	status,0,c
  6152   003EFC  EF82  F01F         	goto	u2201
  6153   003F00  EF84  F01F         	goto	u2200
  6154   003F04                     u2201:
  6155   003F04  EF88  F01F         	goto	l3413
  6156   003F08                     u2200:
  6157   003F08                     
  6158                           ;color.c: 143:         color = 1;
  6159   003F08  0E01               	movlw	1
  6160   003F0A  6E46               	movwf	color_detect@color^0,c
  6161                           
  6162                           ;color.c: 144:     }
  6163   003F0C  EFB4  F01F         	goto	l156
  6164   003F10                     l3413:
  6165   003F10  0EE7               	movlw	231
  6166   003F12  241C               	addwf	(color_detect@green+2)^0,w,c
  6167   003F14  6E44               	movwf	??_color_detect^0,c
  6168   003F16  0EFF               	movlw	255
  6169   003F18  201D               	addwfc	(color_detect@green+3)^0,w,c
  6170   003F1A  6E45               	movwf	(??_color_detect+1)^0,c
  6171   003F1C  500E               	movf	(color_detect@RGBC_n+2)^0,w,c
  6172   003F1E  5C44               	subwf	??_color_detect^0,w,c
  6173   003F20  500F               	movf	(color_detect@RGBC_n+3)^0,w,c
  6174   003F22  5845               	subwfb	(??_color_detect+1)^0,w,c
  6175   003F24  B0D8               	btfsc	status,0,c
  6176   003F26  EF97  F01F         	goto	u2211
  6177   003F2A  EF99  F01F         	goto	u2210
  6178   003F2E                     u2211:
  6179   003F2E  EF9D  F01F         	goto	l3417
  6180   003F32                     u2210:
  6181   003F32                     
  6182                           ;color.c: 147:         color = 2;
  6183   003F32  0E02               	movlw	2
  6184   003F34  6E46               	movwf	color_detect@color^0,c
  6185                           
  6186                           ;color.c: 148:     }
  6187   003F36  EFB4  F01F         	goto	l156
  6188   003F3A                     l3417:
  6189   003F3A  0ED8               	movlw	216
  6190   003F3C  2424               	addwf	(color_detect@blue+4)^0,w,c
  6191   003F3E  6E44               	movwf	??_color_detect^0,c
  6192   003F40  0EFF               	movlw	255
  6193   003F42  2025               	addwfc	(color_detect@blue+5)^0,w,c
  6194   003F44  6E45               	movwf	(??_color_detect+1)^0,c
  6195   003F46  5010               	movf	(color_detect@RGBC_n+4)^0,w,c
  6196   003F48  5C44               	subwf	??_color_detect^0,w,c
  6197   003F4A  5011               	movf	(color_detect@RGBC_n+5)^0,w,c
  6198   003F4C  5845               	subwfb	(??_color_detect+1)^0,w,c
  6199   003F4E  B0D8               	btfsc	status,0,c
  6200   003F50  EFAC  F01F         	goto	u2221
  6201   003F54  EFAE  F01F         	goto	u2220
  6202   003F58                     u2221:
  6203   003F58  EFB2  F01F         	goto	l3421
  6204   003F5C                     u2220:
  6205   003F5C                     
  6206                           ;color.c: 151:         color = 3;
  6207   003F5C  0E03               	movlw	3
  6208   003F5E  6E46               	movwf	color_detect@color^0,c
  6209                           
  6210                           ;color.c: 152:     }
  6211   003F60  EFB4  F01F         	goto	l156
  6212   003F64                     l3421:
  6213   003F64  0E09               	movlw	9
  6214   003F66  6E46               	movwf	color_detect@color^0,c
  6215   003F68                     l156:
  6216                           
  6217                           ;color.c: 204:     return color;
  6218   003F68  5046               	movf	color_detect@color^0,w,c
  6219   003F6A  0012               	return		;funcret
  6220   003F6C                     __end_of_color_detect:
  6221                           	callstack 0
  6222                           
  6223 ;; *************** function _color_click_init *****************
  6224 ;; Defined at:
  6225 ;;		line 7 in file "color.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;		None
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, status,2, status,0, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6243 ;;Total ram usage:        1 bytes
  6244 ;; Hardware stack levels used: 1
  6245 ;; Hardware stack levels required when called: 9
  6246 ;; This function calls:
  6247 ;;		_I2C_2_Master_Init
  6248 ;;		_color_clear_init_interrupts
  6249 ;;		_color_writetoaddr
  6250 ;; This function is called by:
  6251 ;;		_main
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text16
  6256   004230                     __ptext16:
  6257                           	callstack 0
  6258   004230                     _color_click_init:
  6259                           	callstack 21
  6260   004230                     
  6261                           ;color.c: 10:     I2C_2_Master_Init();
  6262   004230  EC7B  F021         	call	_I2C_2_Master_Init	;wreg free
  6263   004234                     
  6264                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  6265   004234  0E01               	movlw	1
  6266   004236  6E0E               	movwf	color_writetoaddr@value^0,c
  6267   004238  0E00               	movlw	0
  6268   00423A  EC17  F022         	call	_color_writetoaddr
  6269   00423E                     
  6270                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6271   00423E  0E3F               	movlw	63
  6272   004240  6E15               	movwf	??_color_click_init^0,c
  6273   004242  0E55               	movlw	85
  6274   004244                     u3987:
  6275   004244  2EE8               	decfsz	wreg,f,c
  6276   004246  D7FE               	bra	u3987
  6277   004248  2E15               	decfsz	??_color_click_init^0,f,c
  6278   00424A  D7FC               	bra	u3987
  6279   00424C  0000               	nop	
  6280   00424E                     
  6281                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  6282   00424E  0E03               	movlw	3
  6283   004250  6E0E               	movwf	color_writetoaddr@value^0,c
  6284   004252  0E00               	movlw	0
  6285   004254  EC17  F022         	call	_color_writetoaddr
  6286   004258                     
  6287                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  6288   004258  0ED5               	movlw	213
  6289   00425A  6E0E               	movwf	color_writetoaddr@value^0,c
  6290   00425C  0E01               	movlw	1
  6291   00425E  EC17  F022         	call	_color_writetoaddr
  6292   004262                     
  6293                           ;color.c: 23:     color_clear_init_interrupts();
  6294   004262  ECB6  F01F         	call	_color_clear_init_interrupts	;wreg free
  6295   004266  0012               	return		;funcret
  6296   004268                     __end_of_color_click_init:
  6297                           	callstack 0
  6298                           
  6299 ;; *************** function _color_clear_init_interrupts *****************
  6300 ;; Defined at:
  6301 ;;		line 27 in file "color.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  low_threshol    2   18[COMRAM] unsigned int 
  6306 ;;  high_thresho    2   16[COMRAM] unsigned int 
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      void 
  6309 ;; Registers used:
  6310 ;;		wreg, status,2, status,0, cstack
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6320 ;;Total ram usage:        5 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; Hardware stack levels required when called: 8
  6323 ;; This function calls:
  6324 ;;		_I2C_2_Master_Start
  6325 ;;		_I2C_2_Master_Stop
  6326 ;;		_I2C_2_Master_Write
  6327 ;;		_color_writetoaddr
  6328 ;; This function is called by:
  6329 ;;		_color_click_init
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           	psect	text17
  6334   003F6C                     __ptext17:
  6335                           	callstack 0
  6336   003F6C                     _color_clear_init_interrupts:
  6337                           	callstack 21
  6338   003F6C                     
  6339                           ;color.c: 29:     I2C_2_Master_Start();
  6340   003F6C  EC91  F022         	call	_I2C_2_Master_Start	;wreg free
  6341                           
  6342                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  6343   003F70  0E52               	movlw	82
  6344   003F72  EC7B  F022         	call	_I2C_2_Master_Write
  6345                           
  6346                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  6347   003F76  0EE6               	movlw	230
  6348   003F78  EC7B  F022         	call	_I2C_2_Master_Write
  6349                           
  6350                           ;color.c: 32:     I2C_2_Master_Stop();
  6351   003F7C  EC8C  F022         	call	_I2C_2_Master_Stop	;wreg free
  6352   003F80                     
  6353                           ;color.c: 35:     unsigned int high_threshold = ambient + 12;
  6354   003F80  0E0C               	movlw	12
  6355   003F82  244E               	addwf	_ambient^0,w,c
  6356   003F84  6E11               	movwf	color_clear_init_interrupts@high_threshold^0,c
  6357   003F86  0E00               	movlw	0
  6358   003F88  204F               	addwfc	(_ambient+1)^0,w,c
  6359   003F8A  6E12               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  6360   003F8C                     
  6361                           ;color.c: 36:     unsigned int low_threshold = ambient - 12;
  6362   003F8C  0EF4               	movlw	244
  6363   003F8E  244E               	addwf	_ambient^0,w,c
  6364   003F90  6E13               	movwf	color_clear_init_interrupts@low_threshold^0,c
  6365   003F92  0EFF               	movlw	255
  6366   003F94  204F               	addwfc	(_ambient+1)^0,w,c
  6367   003F96  6E14               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  6368                           
  6369                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
  6370   003F98  0E13               	movlw	19
  6371   003F9A  6E0E               	movwf	color_writetoaddr@value^0,c
  6372   003F9C  0E00               	movlw	0
  6373   003F9E  EC17  F022         	call	_color_writetoaddr
  6374   003FA2                     
  6375                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6376   003FA2  0E3F               	movlw	63
  6377   003FA4  6E10               	movwf	??_color_clear_init_interrupts^0,c
  6378   003FA6  0E55               	movlw	85
  6379   003FA8                     u3997:
  6380   003FA8  2EE8               	decfsz	wreg,f,c
  6381   003FAA  D7FE               	bra	u3997
  6382   003FAC  2E10               	decfsz	??_color_clear_init_interrupts^0,f,c
  6383   003FAE  D7FC               	bra	u3997
  6384   003FB0  0000               	nop	
  6385   003FB2                     
  6386                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
  6387   003FB2  5012               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  6388   003FB4  6E0E               	movwf	color_writetoaddr@value^0,c
  6389   003FB6  0E07               	movlw	7
  6390   003FB8  EC17  F022         	call	_color_writetoaddr
  6391   003FBC                     
  6392                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  6393   003FBC  C011  F00E         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  6394   003FC0  0E06               	movlw	6
  6395   003FC2  EC17  F022         	call	_color_writetoaddr
  6396   003FC6                     
  6397                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
  6398   003FC6  5014               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  6399   003FC8  6E0E               	movwf	color_writetoaddr@value^0,c
  6400   003FCA  0E05               	movlw	5
  6401   003FCC  EC17  F022         	call	_color_writetoaddr
  6402   003FD0                     
  6403                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  6404   003FD0  C013  F00E         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  6405   003FD4  0E04               	movlw	4
  6406   003FD6  EC17  F022         	call	_color_writetoaddr
  6407   003FDA                     
  6408                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
  6409   003FDA  0E04               	movlw	4
  6410   003FDC  6E0E               	movwf	color_writetoaddr@value^0,c
  6411   003FDE  0E0C               	movlw	12
  6412   003FE0  EC17  F022         	call	_color_writetoaddr
  6413   003FE4  0012               	return		;funcret
  6414   003FE6                     __end_of_color_clear_init_interrupts:
  6415                           	callstack 0
  6416                           
  6417 ;; *************** function _color_writetoaddr *****************
  6418 ;; Defined at:
  6419 ;;		line 50 in file "color.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;  address         1    wreg     unsigned char 
  6422 ;;  value           1   13[COMRAM] unsigned char 
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;  address         1   14[COMRAM] unsigned char 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  1    wreg      void 
  6427 ;; Registers used:
  6428 ;;		wreg, status,2, status,0, cstack
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6434 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6438 ;;Total ram usage:        2 bytes
  6439 ;; Hardware stack levels used: 1
  6440 ;; Hardware stack levels required when called: 7
  6441 ;; This function calls:
  6442 ;;		_I2C_2_Master_Start
  6443 ;;		_I2C_2_Master_Stop
  6444 ;;		_I2C_2_Master_Write
  6445 ;; This function is called by:
  6446 ;;		_color_click_init
  6447 ;;		_color_clear_init_interrupts
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           	psect	text18
  6452   00442E                     __ptext18:
  6453                           	callstack 0
  6454   00442E                     _color_writetoaddr:
  6455                           	callstack 22
  6456                           
  6457                           ;incstack = 0
  6458                           ;color_writetoaddr@address stored from wreg
  6459   00442E  6E0F               	movwf	color_writetoaddr@address^0,c
  6460   004430                     
  6461                           ;color.c: 51:     I2C_2_Master_Start();
  6462   004430  EC91  F022         	call	_I2C_2_Master_Start	;wreg free
  6463                           
  6464                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
  6465   004434  0E52               	movlw	82
  6466   004436  EC7B  F022         	call	_I2C_2_Master_Write
  6467                           
  6468                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
  6469   00443A  500F               	movf	color_writetoaddr@address^0,w,c
  6470   00443C  0980               	iorlw	128
  6471   00443E  EC7B  F022         	call	_I2C_2_Master_Write
  6472                           
  6473                           ;color.c: 54:     I2C_2_Master_Write(value);
  6474   004442  500E               	movf	color_writetoaddr@value^0,w,c
  6475   004444  EC7B  F022         	call	_I2C_2_Master_Write
  6476                           
  6477                           ;color.c: 55:     I2C_2_Master_Stop();
  6478   004448  EC8C  F022         	call	_I2C_2_Master_Stop	;wreg free
  6479   00444C  0012               	return		;funcret
  6480   00444E                     __end_of_color_writetoaddr:
  6481                           	callstack 0
  6482                           
  6483 ;; *************** function _I2C_2_Master_Init *****************
  6484 ;; Defined at:
  6485 ;;		line 4 in file "i2c.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;		None
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;		None
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      void 
  6492 ;; Registers used:
  6493 ;;		wreg, status,2
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6503 ;;Total ram usage:        0 bytes
  6504 ;; Hardware stack levels used: 1
  6505 ;; Hardware stack levels required when called: 5
  6506 ;; This function calls:
  6507 ;;		Nothing
  6508 ;; This function is called by:
  6509 ;;		_color_click_init
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           	psect	text19
  6514   0042F6                     __ptext19:
  6515                           	callstack 0
  6516   0042F6                     _I2C_2_Master_Init:
  6517                           	callstack 24
  6518   0042F6                     
  6519                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6520   0042F6  010E               	movlb	14	; () banked
  6521   0042F8  51D9               	movf	217,w,b	;volatile
  6522   0042FA  0BF0               	andlw	-16
  6523   0042FC  0908               	iorlw	8
  6524   0042FE  6FD9               	movwf	217,b	;volatile
  6525   004300                     
  6526                           ; BSR set to: 14
  6527                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6528   004300  8BD9               	bsf	217,5,b	;volatile
  6529                           
  6530                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6531   004302  0E9F               	movlw	159
  6532   004304  6FD6               	movwf	214,b	;volatile
  6533   004306                     
  6534                           ; BSR set to: 14
  6535                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6536   004306  8A84               	bsf	132,5,c	;volatile
  6537   004308                     
  6538                           ; BSR set to: 14
  6539                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6540   004308  8C84               	bsf	132,6,c	;volatile
  6541   00430A                     
  6542                           ; BSR set to: 14
  6543                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6544   00430A  9BA7               	bcf	167,5,b	;volatile
  6545   00430C                     
  6546                           ; BSR set to: 14
  6547                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6548   00430C  9DA7               	bcf	167,6,b	;volatile
  6549                           
  6550                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6551   00430E  0E1D               	movlw	29
  6552   004310  6F1D               	movwf	29,b	;volatile
  6553                           
  6554                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6555   004312  0E1E               	movlw	30
  6556   004314  6F1C               	movwf	28,b	;volatile
  6557                           
  6558                           ;i2c.c: 18:   RD5PPS=0x1C;
  6559   004316  0E1C               	movlw	28
  6560   004318  6F6F               	movwf	111,b	;volatile
  6561                           
  6562                           ;i2c.c: 19:   RD6PPS=0x1B;
  6563   00431A  0E1B               	movlw	27
  6564   00431C  6F70               	movwf	112,b	;volatile
  6565   00431E                     
  6566                           ; BSR set to: 14
  6567   00431E  0012               	return		;funcret
  6568   004320                     __end_of_I2C_2_Master_Init:
  6569                           	callstack 0
  6570                           
  6571 ;; *************** function _color_calibration *****************
  6572 ;; Defined at:
  6573 ;;		line 207 in file "color.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  RGBC            2   49[COMRAM] PTR struct RGBC_val
  6576 ;;		 -> main@RGBC(8), 
  6577 ;;  RGBC_n          2   51[COMRAM] PTR struct RGBC_val
  6578 ;;		 -> main@RGBC_n(8), 
  6579 ;;  red             2   53[COMRAM] PTR struct RGB_calib
  6580 ;;		 -> main@red(6), 
  6581 ;;  green           2   55[COMRAM] PTR struct RGB_calib
  6582 ;;		 -> main@green(6), 
  6583 ;;  blue            2   57[COMRAM] PTR struct RGB_calib
  6584 ;;		 -> main@blue(6), 
  6585 ;;  yellow          2   59[COMRAM] PTR struct RGB_calib
  6586 ;;		 -> main@yellow(6), 
  6587 ;;  pink            2   61[COMRAM] PTR struct RGB_calib
  6588 ;;		 -> main@pink(6), 
  6589 ;;  orange          2   63[COMRAM] PTR struct RGB_calib
  6590 ;;		 -> main@orange(6), 
  6591 ;;  lightblue       2   65[COMRAM] PTR struct RGB_calib
  6592 ;;		 -> main@lightblue(6), 
  6593 ;;  white           2   67[COMRAM] PTR struct RGB_calib
  6594 ;;		 -> main@white(6), 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;		None
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      void 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6606 ;;      Params:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6608 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6609 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6610 ;;Total ram usage:       22 bytes
  6611 ;; Hardware stack levels used: 1
  6612 ;; Hardware stack levels required when called: 8
  6613 ;; This function calls:
  6614 ;;		_color_normalise
  6615 ;;		_color_read
  6616 ;;		_white_Light
  6617 ;; This function is called by:
  6618 ;;		_main
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text20
  6623   002D9C                     __ptext20:
  6624                           	callstack 0
  6625   002D9C                     _color_calibration:
  6626                           	callstack 22
  6627   002D9C                     
  6628                           ;color.c: 207: void color_calibration(RGBC_val *RGBC, RGBC_val *RGBC_n, RGB_calib *red, 
      +                          RGB_calib *green, RGB_calib *blue, RGB_calib *yellow, RGB_calib *pink, RGB_calib *orange
      +                          , RGB_calib *lightblue, RGB_calib *white);color.c: 208: {;color.c: 209:     white_Light(
      +                          1);
  6629   002D9C  0E01               	movlw	1
  6630   002D9E  EC05  F022         	call	_white_Light
  6631   002DA2                     
  6632                           ;color.c: 210:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6633   002DA2  8680               	bsf	128,3,c	;volatile
  6634   002DA4  8E7C               	bsf	124,7,c	;volatile
  6635   002DA6                     l164:
  6636   002DA6  B48E               	btfsc	142,2,c	;volatile
  6637   002DA8  EFD8  F016         	goto	u2951
  6638   002DAC  EFDA  F016         	goto	u2950
  6639   002DB0                     u2951:
  6640   002DB0  EFD3  F016         	goto	l164
  6641   002DB4                     u2950:
  6642   002DB4                     
  6643                           ;color.c: 213:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6644   002DB4  9680               	bcf	128,3,c	;volatile
  6645   002DB6  9E7C               	bcf	124,7,c	;volatile
  6646   002DB8                     
  6647                           ;color.c: 214:     color_read(RGBC);
  6648   002DB8  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6649   002DBC  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6650   002DC0  ECE2  F017         	call	_color_read	;wreg free
  6651   002DC4                     
  6652                           ;color.c: 215:     color_normalise(*RGBC, RGBC_n);
  6653   002DC4  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6654   002DC8  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6655   002DCC  EE00  F026         	lfsr	0,color_normalise@RGBC
  6656   002DD0  0E07               	movlw	7
  6657   002DD2                     u2961:
  6658   002DD2  CFDB FFEB          	movff	plusw2,plusw0
  6659   002DD6  06E8               	decf	wreg,f,c
  6660   002DD8  E2FC               	bc	u2961
  6661   002DDA  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6662   002DDE  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6663   002DE2  EC56  F01C         	call	_color_normalise	;wreg free
  6664   002DE6                     
  6665                           ;color.c: 216:     red->R = RGBC_n->R;
  6666   002DE6  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6667   002DEA  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6668   002DEE  C036  FFE1         	movff	color_calibration@red,fsr1l
  6669   002DF2  C037  FFE2         	movff	color_calibration@red+1,fsr1h
  6670   002DF6  CFDE FFE6          	movff	postinc2,postinc1
  6671   002DFA  CFDD FFE5          	movff	postdec2,postdec1
  6672   002DFE                     
  6673                           ;color.c: 217:     red->G = RGBC_n->G;
  6674   002DFE  EE20 F002          	lfsr	2,2
  6675   002E02  5034               	movf	color_calibration@RGBC_n^0,w,c
  6676   002E04  26D9               	addwf	fsr2l,f,c
  6677   002E06  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6678   002E08  22DA               	addwfc	fsr2h,f,c
  6679   002E0A  EE10 F002          	lfsr	1,2
  6680   002E0E  5036               	movf	color_calibration@red^0,w,c
  6681   002E10  26E1               	addwf	fsr1l,f,c
  6682   002E12  5037               	movf	(color_calibration@red+1)^0,w,c
  6683   002E14  22E2               	addwfc	fsr1h,f,c
  6684   002E16  CFDE FFE6          	movff	postinc2,postinc1
  6685   002E1A  CFDD FFE5          	movff	postdec2,postdec1
  6686   002E1E                     
  6687                           ;color.c: 218:     red->B = RGBC_n->B;
  6688   002E1E  EE20 F004          	lfsr	2,4
  6689   002E22  5034               	movf	color_calibration@RGBC_n^0,w,c
  6690   002E24  26D9               	addwf	fsr2l,f,c
  6691   002E26  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6692   002E28  22DA               	addwfc	fsr2h,f,c
  6693   002E2A  EE10 F004          	lfsr	1,4
  6694   002E2E  5036               	movf	color_calibration@red^0,w,c
  6695   002E30  26E1               	addwf	fsr1l,f,c
  6696   002E32  5037               	movf	(color_calibration@red+1)^0,w,c
  6697   002E34  22E2               	addwfc	fsr1h,f,c
  6698   002E36  CFDE FFE6          	movff	postinc2,postinc1
  6699   002E3A  CFDD FFE5          	movff	postdec2,postdec1
  6700   002E3E                     
  6701                           ;color.c: 220:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6702   002E3E  0E29               	movlw	41
  6703   002E40  6E47               	movwf	(??_color_calibration+1)^0,c
  6704   002E42  0E96               	movlw	150
  6705   002E44  6E46               	movwf	??_color_calibration^0,c
  6706   002E46  0E7F               	movlw	127
  6707   002E48                     u4007:
  6708   002E48  2EE8               	decfsz	wreg,f,c
  6709   002E4A  D7FE               	bra	u4007
  6710   002E4C  2E46               	decfsz	??_color_calibration^0,f,c
  6711   002E4E  D7FC               	bra	u4007
  6712   002E50  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6713   002E52  D7FA               	bra	u4007
  6714   002E54  0000               	nop	
  6715   002E56                     
  6716                           ;color.c: 221:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6717   002E56  8680               	bsf	128,3,c	;volatile
  6718   002E58  8E7C               	bsf	124,7,c	;volatile
  6719   002E5A                     l167:
  6720   002E5A  B48E               	btfsc	142,2,c	;volatile
  6721   002E5C  EF32  F017         	goto	u2971
  6722   002E60  EF34  F017         	goto	u2970
  6723   002E64                     u2971:
  6724   002E64  EF2D  F017         	goto	l167
  6725   002E68                     u2970:
  6726   002E68                     
  6727                           ;color.c: 224:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6728   002E68  9680               	bcf	128,3,c	;volatile
  6729   002E6A  9E7C               	bcf	124,7,c	;volatile
  6730   002E6C                     
  6731                           ;color.c: 225:     color_read(RGBC);
  6732   002E6C  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6733   002E70  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6734   002E74  ECE2  F017         	call	_color_read	;wreg free
  6735   002E78                     
  6736                           ;color.c: 226:     color_normalise(*RGBC, RGBC_n);
  6737   002E78  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6738   002E7C  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6739   002E80  EE00  F026         	lfsr	0,color_normalise@RGBC
  6740   002E84  0E07               	movlw	7
  6741   002E86                     u2981:
  6742   002E86  CFDB FFEB          	movff	plusw2,plusw0
  6743   002E8A  06E8               	decf	wreg,f,c
  6744   002E8C  E2FC               	bc	u2981
  6745   002E8E  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6746   002E92  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6747   002E96  EC56  F01C         	call	_color_normalise	;wreg free
  6748   002E9A                     
  6749                           ;color.c: 227:     green->R = RGBC_n->R;
  6750   002E9A  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6751   002E9E  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6752   002EA2  C038  FFE1         	movff	color_calibration@green,fsr1l
  6753   002EA6  C039  FFE2         	movff	color_calibration@green+1,fsr1h
  6754   002EAA  CFDE FFE6          	movff	postinc2,postinc1
  6755   002EAE  CFDD FFE5          	movff	postdec2,postdec1
  6756   002EB2                     
  6757                           ;color.c: 228:     green->G = RGBC_n->G;
  6758   002EB2  EE20 F002          	lfsr	2,2
  6759   002EB6  5034               	movf	color_calibration@RGBC_n^0,w,c
  6760   002EB8  26D9               	addwf	fsr2l,f,c
  6761   002EBA  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6762   002EBC  22DA               	addwfc	fsr2h,f,c
  6763   002EBE  EE10 F002          	lfsr	1,2
  6764   002EC2  5038               	movf	color_calibration@green^0,w,c
  6765   002EC4  26E1               	addwf	fsr1l,f,c
  6766   002EC6  5039               	movf	(color_calibration@green+1)^0,w,c
  6767   002EC8  22E2               	addwfc	fsr1h,f,c
  6768   002ECA  CFDE FFE6          	movff	postinc2,postinc1
  6769   002ECE  CFDD FFE5          	movff	postdec2,postdec1
  6770   002ED2                     
  6771                           ;color.c: 229:     green->B = RGBC_n->B;
  6772   002ED2  EE20 F004          	lfsr	2,4
  6773   002ED6  5034               	movf	color_calibration@RGBC_n^0,w,c
  6774   002ED8  26D9               	addwf	fsr2l,f,c
  6775   002EDA  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6776   002EDC  22DA               	addwfc	fsr2h,f,c
  6777   002EDE  EE10 F004          	lfsr	1,4
  6778   002EE2  5038               	movf	color_calibration@green^0,w,c
  6779   002EE4  26E1               	addwf	fsr1l,f,c
  6780   002EE6  5039               	movf	(color_calibration@green+1)^0,w,c
  6781   002EE8  22E2               	addwfc	fsr1h,f,c
  6782   002EEA  CFDE FFE6          	movff	postinc2,postinc1
  6783   002EEE  CFDD FFE5          	movff	postdec2,postdec1
  6784   002EF2                     
  6785                           ;color.c: 231:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6786   002EF2  0E29               	movlw	41
  6787   002EF4  6E47               	movwf	(??_color_calibration+1)^0,c
  6788   002EF6  0E96               	movlw	150
  6789   002EF8  6E46               	movwf	??_color_calibration^0,c
  6790   002EFA  0E7F               	movlw	127
  6791   002EFC                     u4017:
  6792   002EFC  2EE8               	decfsz	wreg,f,c
  6793   002EFE  D7FE               	bra	u4017
  6794   002F00  2E46               	decfsz	??_color_calibration^0,f,c
  6795   002F02  D7FC               	bra	u4017
  6796   002F04  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6797   002F06  D7FA               	bra	u4017
  6798   002F08  0000               	nop	
  6799   002F0A                     
  6800                           ;color.c: 232:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6801   002F0A  8680               	bsf	128,3,c	;volatile
  6802   002F0C  8E7C               	bsf	124,7,c	;volatile
  6803   002F0E                     l170:
  6804   002F0E  B48E               	btfsc	142,2,c	;volatile
  6805   002F10  EF8C  F017         	goto	u2991
  6806   002F14  EF8E  F017         	goto	u2990
  6807   002F18                     u2991:
  6808   002F18  EF87  F017         	goto	l170
  6809   002F1C                     u2990:
  6810   002F1C                     
  6811                           ;color.c: 235:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6812   002F1C  9680               	bcf	128,3,c	;volatile
  6813   002F1E  9E7C               	bcf	124,7,c	;volatile
  6814   002F20                     
  6815                           ;color.c: 236:     color_read(RGBC);
  6816   002F20  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6817   002F24  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6818   002F28  ECE2  F017         	call	_color_read	;wreg free
  6819   002F2C                     
  6820                           ;color.c: 237:     color_normalise(*RGBC, RGBC_n);
  6821   002F2C  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6822   002F30  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6823   002F34  EE00  F026         	lfsr	0,color_normalise@RGBC
  6824   002F38  0E07               	movlw	7
  6825   002F3A                     u3001:
  6826   002F3A  CFDB FFEB          	movff	plusw2,plusw0
  6827   002F3E  06E8               	decf	wreg,f,c
  6828   002F40  E2FC               	bc	u3001
  6829   002F42  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6830   002F46  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6831   002F4A  EC56  F01C         	call	_color_normalise	;wreg free
  6832   002F4E                     
  6833                           ;color.c: 238:     blue->R = RGBC_n->R;
  6834   002F4E  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6835   002F52  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6836   002F56  C03A  FFE1         	movff	color_calibration@blue,fsr1l
  6837   002F5A  C03B  FFE2         	movff	color_calibration@blue+1,fsr1h
  6838   002F5E  CFDE FFE6          	movff	postinc2,postinc1
  6839   002F62  CFDD FFE5          	movff	postdec2,postdec1
  6840   002F66                     
  6841                           ;color.c: 239:     blue->G = RGBC_n->G;
  6842   002F66  EE20 F002          	lfsr	2,2
  6843   002F6A  5034               	movf	color_calibration@RGBC_n^0,w,c
  6844   002F6C  26D9               	addwf	fsr2l,f,c
  6845   002F6E  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6846   002F70  22DA               	addwfc	fsr2h,f,c
  6847   002F72  EE10 F002          	lfsr	1,2
  6848   002F76  503A               	movf	color_calibration@blue^0,w,c
  6849   002F78  26E1               	addwf	fsr1l,f,c
  6850   002F7A  503B               	movf	(color_calibration@blue+1)^0,w,c
  6851   002F7C  22E2               	addwfc	fsr1h,f,c
  6852   002F7E  CFDE FFE6          	movff	postinc2,postinc1
  6853   002F82  CFDD FFE5          	movff	postdec2,postdec1
  6854   002F86                     
  6855                           ;color.c: 240:     blue->B = RGBC_n->B;
  6856   002F86  EE20 F004          	lfsr	2,4
  6857   002F8A  5034               	movf	color_calibration@RGBC_n^0,w,c
  6858   002F8C  26D9               	addwf	fsr2l,f,c
  6859   002F8E  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6860   002F90  22DA               	addwfc	fsr2h,f,c
  6861   002F92  EE10 F004          	lfsr	1,4
  6862   002F96  503A               	movf	color_calibration@blue^0,w,c
  6863   002F98  26E1               	addwf	fsr1l,f,c
  6864   002F9A  503B               	movf	(color_calibration@blue+1)^0,w,c
  6865   002F9C  22E2               	addwfc	fsr1h,f,c
  6866   002F9E  CFDE FFE6          	movff	postinc2,postinc1
  6867   002FA2  CFDD FFE5          	movff	postdec2,postdec1
  6868   002FA6                     
  6869                           ;color.c: 242:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6870   002FA6  0E29               	movlw	41
  6871   002FA8  6E47               	movwf	(??_color_calibration+1)^0,c
  6872   002FAA  0E96               	movlw	150
  6873   002FAC  6E46               	movwf	??_color_calibration^0,c
  6874   002FAE  0E7F               	movlw	127
  6875   002FB0                     u4027:
  6876   002FB0  2EE8               	decfsz	wreg,f,c
  6877   002FB2  D7FE               	bra	u4027
  6878   002FB4  2E46               	decfsz	??_color_calibration^0,f,c
  6879   002FB6  D7FC               	bra	u4027
  6880   002FB8  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6881   002FBA  D7FA               	bra	u4027
  6882   002FBC  0000               	nop	
  6883   002FBE                     
  6884                           ;color.c: 243:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6885   002FBE  8680               	bsf	128,3,c	;volatile
  6886   002FC0  8E7C               	bsf	124,7,c	;volatile
  6887   002FC2  0012               	return		;funcret
  6888   002FC4                     __end_of_color_calibration:
  6889                           	callstack 0
  6890                           
  6891 ;; *************** function _white_Light *****************
  6892 ;; Defined at:
  6893 ;;		line 59 in file "color.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;  state           1    wreg     unsigned char 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  state           1   11[COMRAM] unsigned char 
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  1    wreg      void 
  6900 ;; Registers used:
  6901 ;;		wreg, status,2
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6911 ;;Total ram usage:        1 bytes
  6912 ;; Hardware stack levels used: 1
  6913 ;; Hardware stack levels required when called: 5
  6914 ;; This function calls:
  6915 ;;		Nothing
  6916 ;; This function is called by:
  6917 ;;		_main
  6918 ;;		_color_calibration
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text21
  6923   00440A                     __ptext21:
  6924                           	callstack 0
  6925   00440A                     _white_Light:
  6926                           	callstack 25
  6927                           
  6928                           ;incstack = 0
  6929                           ;white_Light@state stored from wreg
  6930   00440A  6E0C               	movwf	white_Light@state^0,c
  6931   00440C                     
  6932                           ;color.c: 59: void white_Light(char state);color.c: 60: {;color.c: 61:     if (state){
  6933   00440C  500C               	movf	white_Light@state^0,w,c
  6934   00440E  B4D8               	btfsc	status,2,c
  6935   004410  EF0C  F022         	goto	u1761
  6936   004414  EF0E  F022         	goto	u1760
  6937   004418                     u1761:
  6938   004418  EF13  F022         	goto	l144
  6939   00441C                     u1760:
  6940   00441C                     
  6941                           ;color.c: 62:         LATGbits.LATG0 = 1;
  6942   00441C  807F               	bsf	127,0,c	;volatile
  6943                           
  6944                           ;color.c: 63:         LATEbits.LATE7 = 1;
  6945   00441E  8E7D               	bsf	125,7,c	;volatile
  6946                           
  6947                           ;color.c: 64:         LATAbits.LATA3 = 1;
  6948   004420  8679               	bsf	121,3,c	;volatile
  6949                           
  6950                           ;color.c: 65:     }
  6951   004422  EF16  F022         	goto	l146
  6952   004426                     l144:
  6953                           
  6954                           ;color.c: 67:         LATGbits.LATG0 = 0;
  6955   004426  907F               	bcf	127,0,c	;volatile
  6956                           
  6957                           ;color.c: 68:         LATEbits.LATE7 = 0;
  6958   004428  9E7D               	bcf	125,7,c	;volatile
  6959                           
  6960                           ;color.c: 69:         LATAbits.LATA3 = 0;
  6961   00442A  9679               	bcf	121,3,c	;volatile
  6962   00442C                     l146:
  6963   00442C  0012               	return		;funcret
  6964   00442E                     __end_of_white_Light:
  6965                           	callstack 0
  6966                           
  6967 ;; *************** function _color_read *****************
  6968 ;; Defined at:
  6969 ;;		line 74 in file "color.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;  RGBC            2   15[COMRAM] PTR struct RGBC_val
  6972 ;;		 -> main@RGBC(8), 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  1    wreg      void 
  6977 ;; Registers used:
  6978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6986 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6987 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6988 ;;Total ram usage:        9 bytes
  6989 ;; Hardware stack levels used: 1
  6990 ;; Hardware stack levels required when called: 7
  6991 ;; This function calls:
  6992 ;;		_I2C_2_Master_Read
  6993 ;;		_I2C_2_Master_RepStart
  6994 ;;		_I2C_2_Master_Start
  6995 ;;		_I2C_2_Master_Stop
  6996 ;;		_I2C_2_Master_Write
  6997 ;; This function is called by:
  6998 ;;		_main
  6999 ;;		_color_calibration
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text22
  7004   002FC4                     __ptext22:
  7005                           	callstack 0
  7006   002FC4                     _color_read:
  7007                           	callstack 23
  7008   002FC4                     
  7009                           ;color.c: 74: void color_read(RGBC_val *RGBC);color.c: 75: {;color.c: 76:  I2C_2_Master_
      +                          Start();
  7010   002FC4  EC91  F022         	call	_I2C_2_Master_Start	;wreg free
  7011                           
  7012                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  7013   002FC8  0E52               	movlw	82
  7014   002FCA  EC7B  F022         	call	_I2C_2_Master_Write
  7015                           
  7016                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x16);
  7017   002FCE  0EB6               	movlw	182
  7018   002FD0  EC7B  F022         	call	_I2C_2_Master_Write
  7019                           
  7020                           ;color.c: 79:  I2C_2_Master_RepStart();
  7021   002FD4  EC96  F022         	call	_I2C_2_Master_RepStart	;wreg free
  7022                           
  7023                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  7024   002FD8  0E53               	movlw	83
  7025   002FDA  EC7B  F022         	call	_I2C_2_Master_Write
  7026   002FDE                     
  7027                           ;color.c: 81:  RGBC->R=I2C_2_Master_Read(1);
  7028   002FDE  0E01               	movlw	1
  7029   002FE0  ECF7  F020         	call	_I2C_2_Master_Read
  7030   002FE4  6E12               	movwf	??_color_read^0,c
  7031   002FE6  6A13               	clrf	(??_color_read+1)^0,c
  7032   002FE8  C010  FFD9         	movff	color_read@RGBC,fsr2l
  7033   002FEC  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  7034   002FF0  C012  FFDE         	movff	??_color_read,postinc2
  7035   002FF4  C013  FFDD         	movff	??_color_read+1,postdec2
  7036   002FF8                     
  7037                           ;color.c: 82:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  7038   002FF8  C010  FFD9         	movff	color_read@RGBC,fsr2l
  7039   002FFC  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  7040   003000  CFDE F012          	movff	postinc2,??_color_read
  7041   003004  CFDD F013          	movff	postdec2,??_color_read+1
  7042   003008  0E00               	movlw	0
  7043   00300A  ECF7  F020         	call	_I2C_2_Master_Read
  7044   00300E  6E14               	movwf	(??_color_read+2)^0,c
  7045   003010  5014               	movf	(??_color_read+2)^0,w,c
  7046   003012  6E16               	movwf	(??_color_read+4)^0,c
  7047   003014  6A15               	clrf	(??_color_read+3)^0,c
  7048   003016  5012               	movf	??_color_read^0,w,c
  7049   003018  1015               	iorwf	(??_color_read+3)^0,w,c
  7050   00301A  6E17               	movwf	(??_color_read+5)^0,c
  7051   00301C  5013               	movf	(??_color_read+1)^0,w,c
  7052   00301E  1016               	iorwf	(??_color_read+4)^0,w,c
  7053   003020  6E18               	movwf	(??_color_read+6)^0,c
  7054   003022  C010  FFD9         	movff	color_read@RGBC,fsr2l
  7055   003026  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  7056   00302A  C017  FFDE         	movff	??_color_read+5,postinc2
  7057   00302E  C018  FFDD         	movff	??_color_read+6,postdec2
  7058                           
  7059                           ;color.c: 83:  I2C_2_Master_Stop();
  7060   003032  EC8C  F022         	call	_I2C_2_Master_Stop	;wreg free
  7061                           
  7062                           ;color.c: 85:     I2C_2_Master_Start();
  7063   003036  EC91  F022         	call	_I2C_2_Master_Start	;wreg free
  7064                           
  7065                           ;color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  7066   00303A  0E52               	movlw	82
  7067   00303C  EC7B  F022         	call	_I2C_2_Master_Write
  7068                           
  7069                           ;color.c: 87:  I2C_2_Master_Write(0xA0 | 0x18);
  7070   003040  0EB8               	movlw	184
  7071   003042  EC7B  F022         	call	_I2C_2_Master_Write
  7072                           
  7073                           ;color.c: 88:  I2C_2_Master_RepStart();
  7074   003046  EC96  F022         	call	_I2C_2_Master_RepStart	;wreg free
  7075                           
  7076                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  7077   00304A  0E53               	movlw	83
  7078   00304C  EC7B  F022         	call	_I2C_2_Master_Write
  7079   003050                     
  7080                           ;color.c: 90:  RGBC->G=I2C_2_Master_Read(1);
  7081   003050  0E01               	movlw	1
  7082   003052  ECF7  F020         	call	_I2C_2_Master_Read
  7083   003056  6E12               	movwf	??_color_read^0,c
  7084   003058  6A13               	clrf	(??_color_read+1)^0,c
  7085   00305A  EE20 F002          	lfsr	2,2
  7086   00305E  5010               	movf	color_read@RGBC^0,w,c
  7087   003060  26D9               	addwf	fsr2l,f,c
  7088   003062  5011               	movf	(color_read@RGBC+1)^0,w,c
  7089   003064  22DA               	addwfc	fsr2h,f,c
  7090   003066  C012  FFDE         	movff	??_color_read,postinc2
  7091   00306A  C013  FFDD         	movff	??_color_read+1,postdec2
  7092   00306E                     
  7093                           ;color.c: 91:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  7094   00306E  EE20 F002          	lfsr	2,2
  7095   003072  5010               	movf	color_read@RGBC^0,w,c
  7096   003074  26D9               	addwf	fsr2l,f,c
  7097   003076  5011               	movf	(color_read@RGBC+1)^0,w,c
  7098   003078  22DA               	addwfc	fsr2h,f,c
  7099   00307A  CFDE F012          	movff	postinc2,??_color_read
  7100   00307E  CFDD F013          	movff	postdec2,??_color_read+1
  7101   003082  0E00               	movlw	0
  7102   003084  ECF7  F020         	call	_I2C_2_Master_Read
  7103   003088  6E14               	movwf	(??_color_read+2)^0,c
  7104   00308A  5014               	movf	(??_color_read+2)^0,w,c
  7105   00308C  6E16               	movwf	(??_color_read+4)^0,c
  7106   00308E  6A15               	clrf	(??_color_read+3)^0,c
  7107   003090  5012               	movf	??_color_read^0,w,c
  7108   003092  1015               	iorwf	(??_color_read+3)^0,w,c
  7109   003094  6E17               	movwf	(??_color_read+5)^0,c
  7110   003096  5013               	movf	(??_color_read+1)^0,w,c
  7111   003098  1016               	iorwf	(??_color_read+4)^0,w,c
  7112   00309A  6E18               	movwf	(??_color_read+6)^0,c
  7113   00309C  EE20 F002          	lfsr	2,2
  7114   0030A0  5010               	movf	color_read@RGBC^0,w,c
  7115   0030A2  26D9               	addwf	fsr2l,f,c
  7116   0030A4  5011               	movf	(color_read@RGBC+1)^0,w,c
  7117   0030A6  22DA               	addwfc	fsr2h,f,c
  7118   0030A8  C017  FFDE         	movff	??_color_read+5,postinc2
  7119   0030AC  C018  FFDD         	movff	??_color_read+6,postdec2
  7120                           
  7121                           ;color.c: 92:  I2C_2_Master_Stop();
  7122   0030B0  EC8C  F022         	call	_I2C_2_Master_Stop	;wreg free
  7123                           
  7124                           ;color.c: 94:     I2C_2_Master_Start();
  7125   0030B4  EC91  F022         	call	_I2C_2_Master_Start	;wreg free
  7126                           
  7127                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  7128   0030B8  0E52               	movlw	82
  7129   0030BA  EC7B  F022         	call	_I2C_2_Master_Write
  7130                           
  7131                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  7132   0030BE  0EBA               	movlw	186
  7133   0030C0  EC7B  F022         	call	_I2C_2_Master_Write
  7134                           
  7135                           ;color.c: 97:  I2C_2_Master_RepStart();
  7136   0030C4  EC96  F022         	call	_I2C_2_Master_RepStart	;wreg free
  7137                           
  7138                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  7139   0030C8  0E53               	movlw	83
  7140   0030CA  EC7B  F022         	call	_I2C_2_Master_Write
  7141   0030CE                     
  7142                           ;color.c: 99:  RGBC->B=I2C_2_Master_Read(1);
  7143   0030CE  0E01               	movlw	1
  7144   0030D0  ECF7  F020         	call	_I2C_2_Master_Read
  7145   0030D4  6E12               	movwf	??_color_read^0,c
  7146   0030D6  6A13               	clrf	(??_color_read+1)^0,c
  7147   0030D8  EE20 F004          	lfsr	2,4
  7148   0030DC  5010               	movf	color_read@RGBC^0,w,c
  7149   0030DE  26D9               	addwf	fsr2l,f,c
  7150   0030E0  5011               	movf	(color_read@RGBC+1)^0,w,c
  7151   0030E2  22DA               	addwfc	fsr2h,f,c
  7152   0030E4  C012  FFDE         	movff	??_color_read,postinc2
  7153   0030E8  C013  FFDD         	movff	??_color_read+1,postdec2
  7154   0030EC                     
  7155                           ;color.c: 100:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  7156   0030EC  EE20 F004          	lfsr	2,4
  7157   0030F0  5010               	movf	color_read@RGBC^0,w,c
  7158   0030F2  26D9               	addwf	fsr2l,f,c
  7159   0030F4  5011               	movf	(color_read@RGBC+1)^0,w,c
  7160   0030F6  22DA               	addwfc	fsr2h,f,c
  7161   0030F8  CFDE F012          	movff	postinc2,??_color_read
  7162   0030FC  CFDD F013          	movff	postdec2,??_color_read+1
  7163   003100  0E00               	movlw	0
  7164   003102  ECF7  F020         	call	_I2C_2_Master_Read
  7165   003106  6E14               	movwf	(??_color_read+2)^0,c
  7166   003108  5014               	movf	(??_color_read+2)^0,w,c
  7167   00310A  6E16               	movwf	(??_color_read+4)^0,c
  7168   00310C  6A15               	clrf	(??_color_read+3)^0,c
  7169   00310E  5012               	movf	??_color_read^0,w,c
  7170   003110  1015               	iorwf	(??_color_read+3)^0,w,c
  7171   003112  6E17               	movwf	(??_color_read+5)^0,c
  7172   003114  5013               	movf	(??_color_read+1)^0,w,c
  7173   003116  1016               	iorwf	(??_color_read+4)^0,w,c
  7174   003118  6E18               	movwf	(??_color_read+6)^0,c
  7175   00311A  EE20 F004          	lfsr	2,4
  7176   00311E  5010               	movf	color_read@RGBC^0,w,c
  7177   003120  26D9               	addwf	fsr2l,f,c
  7178   003122  5011               	movf	(color_read@RGBC+1)^0,w,c
  7179   003124  22DA               	addwfc	fsr2h,f,c
  7180   003126  C017  FFDE         	movff	??_color_read+5,postinc2
  7181   00312A  C018  FFDD         	movff	??_color_read+6,postdec2
  7182                           
  7183                           ;color.c: 101:  I2C_2_Master_Stop();
  7184   00312E  EC8C  F022         	call	_I2C_2_Master_Stop	;wreg free
  7185                           
  7186                           ;color.c: 103:     I2C_2_Master_Start();
  7187   003132  EC91  F022         	call	_I2C_2_Master_Start	;wreg free
  7188                           
  7189                           ;color.c: 104:  I2C_2_Master_Write(0x52 | 0x00);
  7190   003136  0E52               	movlw	82
  7191   003138  EC7B  F022         	call	_I2C_2_Master_Write
  7192                           
  7193                           ;color.c: 105:  I2C_2_Master_Write(0xA0 | 0x14);
  7194   00313C  0EB4               	movlw	180
  7195   00313E  EC7B  F022         	call	_I2C_2_Master_Write
  7196                           
  7197                           ;color.c: 106:  I2C_2_Master_RepStart();
  7198   003142  EC96  F022         	call	_I2C_2_Master_RepStart	;wreg free
  7199                           
  7200                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x01);
  7201   003146  0E53               	movlw	83
  7202   003148  EC7B  F022         	call	_I2C_2_Master_Write
  7203   00314C                     
  7204                           ;color.c: 108:  RGBC->C=I2C_2_Master_Read(1);
  7205   00314C  0E01               	movlw	1
  7206   00314E  ECF7  F020         	call	_I2C_2_Master_Read
  7207   003152  6E12               	movwf	??_color_read^0,c
  7208   003154  6A13               	clrf	(??_color_read+1)^0,c
  7209   003156  EE20 F006          	lfsr	2,6
  7210   00315A  5010               	movf	color_read@RGBC^0,w,c
  7211   00315C  26D9               	addwf	fsr2l,f,c
  7212   00315E  5011               	movf	(color_read@RGBC+1)^0,w,c
  7213   003160  22DA               	addwfc	fsr2h,f,c
  7214   003162  C012  FFDE         	movff	??_color_read,postinc2
  7215   003166  C013  FFDD         	movff	??_color_read+1,postdec2
  7216   00316A                     
  7217                           ;color.c: 109:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  7218   00316A  EE20 F006          	lfsr	2,6
  7219   00316E  5010               	movf	color_read@RGBC^0,w,c
  7220   003170  26D9               	addwf	fsr2l,f,c
  7221   003172  5011               	movf	(color_read@RGBC+1)^0,w,c
  7222   003174  22DA               	addwfc	fsr2h,f,c
  7223   003176  CFDE F012          	movff	postinc2,??_color_read
  7224   00317A  CFDD F013          	movff	postdec2,??_color_read+1
  7225   00317E  0E00               	movlw	0
  7226   003180  ECF7  F020         	call	_I2C_2_Master_Read
  7227   003184  6E14               	movwf	(??_color_read+2)^0,c
  7228   003186  5014               	movf	(??_color_read+2)^0,w,c
  7229   003188  6E16               	movwf	(??_color_read+4)^0,c
  7230   00318A  6A15               	clrf	(??_color_read+3)^0,c
  7231   00318C  5012               	movf	??_color_read^0,w,c
  7232   00318E  1015               	iorwf	(??_color_read+3)^0,w,c
  7233   003190  6E17               	movwf	(??_color_read+5)^0,c
  7234   003192  5013               	movf	(??_color_read+1)^0,w,c
  7235   003194  1016               	iorwf	(??_color_read+4)^0,w,c
  7236   003196  6E18               	movwf	(??_color_read+6)^0,c
  7237   003198  EE20 F006          	lfsr	2,6
  7238   00319C  5010               	movf	color_read@RGBC^0,w,c
  7239   00319E  26D9               	addwf	fsr2l,f,c
  7240   0031A0  5011               	movf	(color_read@RGBC+1)^0,w,c
  7241   0031A2  22DA               	addwfc	fsr2h,f,c
  7242   0031A4  C017  FFDE         	movff	??_color_read+5,postinc2
  7243   0031A8  C018  FFDD         	movff	??_color_read+6,postdec2
  7244                           
  7245                           ;color.c: 110:  I2C_2_Master_Stop();
  7246   0031AC  EC8C  F022         	call	_I2C_2_Master_Stop	;wreg free
  7247   0031B0  0012               	return		;funcret
  7248   0031B2                     __end_of_color_read:
  7249                           	callstack 0
  7250                           
  7251 ;; *************** function _I2C_2_Master_Write *****************
  7252 ;; Defined at:
  7253 ;;		line 45 in file "i2c.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;  data_byte       1    wreg     unsigned char 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;  data_byte       1   12[COMRAM] unsigned char 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      void 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7271 ;;Total ram usage:        1 bytes
  7272 ;; Hardware stack levels used: 1
  7273 ;; Hardware stack levels required when called: 6
  7274 ;; This function calls:
  7275 ;;		_I2C_2_Master_Idle
  7276 ;; This function is called by:
  7277 ;;		_color_clear_init_interrupts
  7278 ;;		_color_writetoaddr
  7279 ;;		_color_read
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           	psect	text23
  7284   0044F6                     __ptext23:
  7285                           	callstack 0
  7286   0044F6                     _I2C_2_Master_Write:
  7287                           	callstack 23
  7288                           
  7289                           ;incstack = 0
  7290                           ;I2C_2_Master_Write@data_byte stored from wreg
  7291   0044F6  6E0D               	movwf	I2C_2_Master_Write@data_byte^0,c
  7292   0044F8                     
  7293                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7294   0044F8  ECA4  F021         	call	_I2C_2_Master_Idle	;wreg free
  7295   0044FC                     
  7296                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7297   0044FC  C00D  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7298   004500  0012               	return		;funcret
  7299   004502                     __end_of_I2C_2_Master_Write:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function _I2C_2_Master_Stop *****************
  7303 ;; Defined at:
  7304 ;;		line 39 in file "i2c.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;		None
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;		None
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  1    wreg      void 
  7311 ;; Registers used:
  7312 ;;		wreg, status,2, status,0, cstack
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7322 ;;Total ram usage:        0 bytes
  7323 ;; Hardware stack levels used: 1
  7324 ;; Hardware stack levels required when called: 6
  7325 ;; This function calls:
  7326 ;;		_I2C_2_Master_Idle
  7327 ;; This function is called by:
  7328 ;;		_color_clear_init_interrupts
  7329 ;;		_color_writetoaddr
  7330 ;;		_color_read
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text24
  7335   004518                     __ptext24:
  7336                           	callstack 0
  7337   004518                     _I2C_2_Master_Stop:
  7338                           	callstack 23
  7339   004518                     
  7340                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7341   004518  ECA4  F021         	call	_I2C_2_Master_Idle	;wreg free
  7342   00451C                     
  7343                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7344   00451C  010E               	movlb	14	; () banked
  7345   00451E  85DA               	bsf	218,2,b	;volatile
  7346   004520                     
  7347                           ; BSR set to: 14
  7348   004520  0012               	return		;funcret
  7349   004522                     __end_of_I2C_2_Master_Stop:
  7350                           	callstack 0
  7351                           
  7352 ;; *************** function _I2C_2_Master_Start *****************
  7353 ;; Defined at:
  7354 ;;		line 27 in file "i2c.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;		None
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;		None
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2, status,0, cstack
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7372 ;;Total ram usage:        0 bytes
  7373 ;; Hardware stack levels used: 1
  7374 ;; Hardware stack levels required when called: 6
  7375 ;; This function calls:
  7376 ;;		_I2C_2_Master_Idle
  7377 ;; This function is called by:
  7378 ;;		_color_clear_init_interrupts
  7379 ;;		_color_writetoaddr
  7380 ;;		_color_read
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text25
  7385   004522                     __ptext25:
  7386                           	callstack 0
  7387   004522                     _I2C_2_Master_Start:
  7388                           	callstack 23
  7389   004522                     
  7390                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7391   004522  ECA4  F021         	call	_I2C_2_Master_Idle	;wreg free
  7392   004526                     
  7393                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7394   004526  010E               	movlb	14	; () banked
  7395   004528  81DA               	bsf	218,0,b	;volatile
  7396   00452A                     
  7397                           ; BSR set to: 14
  7398   00452A  0012               	return		;funcret
  7399   00452C                     __end_of_I2C_2_Master_Start:
  7400                           	callstack 0
  7401                           
  7402 ;; *************** function _I2C_2_Master_RepStart *****************
  7403 ;; Defined at:
  7404 ;;		line 33 in file "i2c.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;		None
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;		None
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  1    wreg      void 
  7411 ;; Registers used:
  7412 ;;		wreg, status,2, status,0, cstack
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;Total ram usage:        0 bytes
  7423 ;; Hardware stack levels used: 1
  7424 ;; Hardware stack levels required when called: 6
  7425 ;; This function calls:
  7426 ;;		_I2C_2_Master_Idle
  7427 ;; This function is called by:
  7428 ;;		_color_read
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text26
  7433   00452C                     __ptext26:
  7434                           	callstack 0
  7435   00452C                     _I2C_2_Master_RepStart:
  7436                           	callstack 23
  7437   00452C                     
  7438                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7439   00452C  ECA4  F021         	call	_I2C_2_Master_Idle	;wreg free
  7440   004530                     
  7441                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7442   004530  010E               	movlb	14	; () banked
  7443   004532  83DA               	bsf	218,1,b	;volatile
  7444   004534                     
  7445                           ; BSR set to: 14
  7446   004534  0012               	return		;funcret
  7447   004536                     __end_of_I2C_2_Master_RepStart:
  7448                           	callstack 0
  7449                           
  7450 ;; *************** function _I2C_2_Master_Read *****************
  7451 ;; Defined at:
  7452 ;;		line 51 in file "i2c.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  ack             1    wreg     unsigned char 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;  ack             1   13[COMRAM] unsigned char 
  7457 ;;  tmp             1   14[COMRAM] unsigned char 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1    wreg      unsigned char 
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7468 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7470 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7471 ;;Total ram usage:        3 bytes
  7472 ;; Hardware stack levels used: 1
  7473 ;; Hardware stack levels required when called: 6
  7474 ;; This function calls:
  7475 ;;		_I2C_2_Master_Idle
  7476 ;; This function is called by:
  7477 ;;		_color_read
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text27
  7482   0041EE                     __ptext27:
  7483                           	callstack 0
  7484   0041EE                     _I2C_2_Master_Read:
  7485                           	callstack 23
  7486                           
  7487                           ; BSR set to: 14
  7488                           ;incstack = 0
  7489                           ;I2C_2_Master_Read@ack stored from wreg
  7490   0041EE  6E0E               	movwf	I2C_2_Master_Read@ack^0,c
  7491   0041F0                     
  7492                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7493   0041F0  ECA4  F021         	call	_I2C_2_Master_Idle	;wreg free
  7494   0041F4                     
  7495                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7496   0041F4  010E               	movlb	14	; () banked
  7497   0041F6  87DA               	bsf	218,3,b	;volatile
  7498                           
  7499                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7500   0041F8  ECA4  F021         	call	_I2C_2_Master_Idle	;wreg free
  7501   0041FC                     
  7502                           ;i2c.c: 57:   tmp = SSP2BUF;
  7503   0041FC  CED5 F00F          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7504                           
  7505                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7506   004200  ECA4  F021         	call	_I2C_2_Master_Idle	;wreg free
  7507   004204                     
  7508                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7509   004204  500E               	movf	I2C_2_Master_Read@ack^0,w,c
  7510   004206  B4D8               	btfsc	status,2,c
  7511   004208  EF08  F021         	goto	u1511
  7512   00420C  EF0C  F021         	goto	u1510
  7513   004210                     u1511:
  7514   004210  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  7515   004212  2A0D               	incf	??_I2C_2_Master_Read^0,f,c
  7516   004214  EF0D  F021         	goto	u1528
  7517   004218                     u1510:
  7518   004218  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  7519   00421A                     u1528:
  7520   00421A  3A0D               	swapf	??_I2C_2_Master_Read^0,f,c
  7521   00421C  460D               	rlncf	??_I2C_2_Master_Read^0,f,c
  7522   00421E  010E               	movlb	14	; () banked
  7523   004220  51DA               	movf	218,w,b	;volatile
  7524   004222  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  7525   004224  0BDF               	andlw	-33
  7526   004226  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  7527   004228  6FDA               	movwf	218,b	;volatile
  7528   00422A                     
  7529                           ; BSR set to: 14
  7530                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7531   00422A  89DA               	bsf	218,4,b	;volatile
  7532   00422C                     
  7533                           ; BSR set to: 14
  7534                           ;i2c.c: 61:   return tmp;
  7535   00422C  500F               	movf	I2C_2_Master_Read@tmp^0,w,c
  7536   00422E                     
  7537                           ; BSR set to: 14
  7538   00422E  0012               	return		;funcret
  7539   004230                     __end_of_I2C_2_Master_Read:
  7540                           	callstack 0
  7541                           
  7542 ;; *************** function _I2C_2_Master_Idle *****************
  7543 ;; Defined at:
  7544 ;;		line 22 in file "i2c.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;		None
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;		None
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1    wreg      void 
  7551 ;; Registers used:
  7552 ;;		wreg, status,2, status,0
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7560 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7561 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7562 ;;Total ram usage:        1 bytes
  7563 ;; Hardware stack levels used: 1
  7564 ;; Hardware stack levels required when called: 5
  7565 ;; This function calls:
  7566 ;;		Nothing
  7567 ;; This function is called by:
  7568 ;;		_I2C_2_Master_Start
  7569 ;;		_I2C_2_Master_RepStart
  7570 ;;		_I2C_2_Master_Stop
  7571 ;;		_I2C_2_Master_Write
  7572 ;;		_I2C_2_Master_Read
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	text28
  7577   004348                     __ptext28:
  7578                           	callstack 0
  7579   004348                     _I2C_2_Master_Idle:
  7580                           	callstack 23
  7581   004348                     l225:
  7582   004348  010E               	movlb	14	; () banked
  7583   00434A  B5D8               	btfsc	216,2,b	;volatile
  7584   00434C  EFAA  F021         	goto	u1381
  7585   004350  EFAC  F021         	goto	u1380
  7586   004354                     u1381:
  7587   004354  EFA4  F021         	goto	l225
  7588   004358                     u1380:
  7589   004358                     
  7590                           ; BSR set to: 14
  7591   004358  CEDA F00C          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7592   00435C  0E1F               	movlw	31
  7593   00435E  160C               	andwf	??_I2C_2_Master_Idle^0,f,c
  7594   004360  A4D8               	btfss	status,2,c
  7595   004362  EFB5  F021         	goto	u1391
  7596   004366  EFB7  F021         	goto	u1390
  7597   00436A                     u1391:
  7598   00436A  EFA4  F021         	goto	l225
  7599   00436E                     u1390:
  7600   00436E                     
  7601                           ; BSR set to: 14
  7602   00436E  0012               	return		;funcret
  7603   004370                     __end_of_I2C_2_Master_Idle:
  7604                           	callstack 0
  7605                           
  7606 ;; *************** function _color_normalise *****************
  7607 ;; Defined at:
  7608 ;;		line 114 in file "color.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  RGBC            8   37[COMRAM] struct RGBC_val
  7611 ;;  RGBC_n          2   45[COMRAM] PTR struct RGBC_val
  7612 ;;		 -> main@RGBC_n(8), 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;		None
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      void 
  7617 ;; Registers used:
  7618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7624 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7627 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7628 ;;Total ram usage:       12 bytes
  7629 ;; Hardware stack levels used: 1
  7630 ;; Hardware stack levels required when called: 6
  7631 ;; This function calls:
  7632 ;;		___aldiv
  7633 ;;		___lmul
  7634 ;; This function is called by:
  7635 ;;		_main
  7636 ;;		_color_calibration
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text29
  7641   0038AC                     __ptext29:
  7642                           	callstack 0
  7643   0038AC                     _color_normalise:
  7644                           	callstack 24
  7645   0038AC                     
  7646                           ;color.c: 132:     RGBC_n->C = RGBC.C;
  7647   0038AC  EE20 F006          	lfsr	2,6
  7648   0038B0  502E               	movf	color_normalise@RGBC_n^0,w,c
  7649   0038B2  26D9               	addwf	fsr2l,f,c
  7650   0038B4  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  7651   0038B6  22DA               	addwfc	fsr2h,f,c
  7652   0038B8  C02C  FFDE         	movff	color_normalise@RGBC+6,postinc2
  7653   0038BC  C02D  FFDD         	movff	color_normalise@RGBC+7,postdec2
  7654   0038C0                     
  7655                           ;color.c: 133:     RGBC_n->R = 1000L*RGBC.R/(RGBC.R+RGBC.G+RGBC.B);
  7656   0038C0  C026  F00C         	movff	color_normalise@RGBC,___lmul@multiplier
  7657   0038C4  C027  F00D         	movff	color_normalise@RGBC+1,___lmul@multiplier+1
  7658   0038C8  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  7659   0038CA  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  7660   0038CC  0EE8               	movlw	232
  7661   0038CE  6E10               	movwf	___lmul@multiplicand^0,c
  7662   0038D0  0E03               	movlw	3
  7663   0038D2  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7664   0038D4  0E00               	movlw	0
  7665   0038D6  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7666   0038D8  0E00               	movlw	0
  7667   0038DA  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7668   0038DC  EC6A  F020         	call	___lmul	;wreg free
  7669   0038E0  C00C  F018         	movff	?___lmul,___aldiv@dividend
  7670   0038E4  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  7671   0038E8  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  7672   0038EC  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  7673   0038F0  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  7674   0038F2  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  7675   0038F4  6E30               	movwf	??_color_normalise^0,c
  7676   0038F6  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  7677   0038F8  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  7678   0038FA  6E31               	movwf	(??_color_normalise+1)^0,c
  7679   0038FC  5026               	movf	color_normalise@RGBC^0,w,c
  7680   0038FE  2630               	addwf	??_color_normalise^0,f,c
  7681   003900  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  7682   003902  2231               	addwfc	(??_color_normalise+1)^0,f,c
  7683   003904  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  7684   003908  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  7685   00390C  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  7686   00390E  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  7687   003910  ECFB  F01C         	call	___aldiv	;wreg free
  7688   003914  C02E  FFD9         	movff	color_normalise@RGBC_n,fsr2l
  7689   003918  C02F  FFDA         	movff	color_normalise@RGBC_n+1,fsr2h
  7690   00391C  C018  FFDE         	movff	?___aldiv,postinc2
  7691   003920  C019  FFDD         	movff	?___aldiv+1,postdec2
  7692   003924                     
  7693                           ;color.c: 134:     RGBC_n->G = 1000L*RGBC.G/(RGBC.R+RGBC.G+RGBC.B);
  7694   003924  C028  F00C         	movff	color_normalise@RGBC+2,___lmul@multiplier
  7695   003928  C029  F00D         	movff	color_normalise@RGBC+3,___lmul@multiplier+1
  7696   00392C  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  7697   00392E  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  7698   003930  0EE8               	movlw	232
  7699   003932  6E10               	movwf	___lmul@multiplicand^0,c
  7700   003934  0E03               	movlw	3
  7701   003936  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7702   003938  0E00               	movlw	0
  7703   00393A  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7704   00393C  0E00               	movlw	0
  7705   00393E  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7706   003940  EC6A  F020         	call	___lmul	;wreg free
  7707   003944  C00C  F018         	movff	?___lmul,___aldiv@dividend
  7708   003948  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  7709   00394C  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  7710   003950  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  7711   003954  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  7712   003956  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  7713   003958  6E30               	movwf	??_color_normalise^0,c
  7714   00395A  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  7715   00395C  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  7716   00395E  6E31               	movwf	(??_color_normalise+1)^0,c
  7717   003960  5026               	movf	color_normalise@RGBC^0,w,c
  7718   003962  2630               	addwf	??_color_normalise^0,f,c
  7719   003964  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  7720   003966  2231               	addwfc	(??_color_normalise+1)^0,f,c
  7721   003968  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  7722   00396C  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  7723   003970  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  7724   003972  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  7725   003974  ECFB  F01C         	call	___aldiv	;wreg free
  7726   003978  EE20 F002          	lfsr	2,2
  7727   00397C  502E               	movf	color_normalise@RGBC_n^0,w,c
  7728   00397E  26D9               	addwf	fsr2l,f,c
  7729   003980  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  7730   003982  22DA               	addwfc	fsr2h,f,c
  7731   003984  C018  FFDE         	movff	?___aldiv,postinc2
  7732   003988  C019  FFDD         	movff	?___aldiv+1,postdec2
  7733   00398C                     
  7734                           ;color.c: 135:     RGBC_n->B = 1000L*RGBC.B/(RGBC.R+RGBC.G+RGBC.B);
  7735   00398C  C02A  F00C         	movff	color_normalise@RGBC+4,___lmul@multiplier
  7736   003990  C02B  F00D         	movff	color_normalise@RGBC+5,___lmul@multiplier+1
  7737   003994  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  7738   003996  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  7739   003998  0EE8               	movlw	232
  7740   00399A  6E10               	movwf	___lmul@multiplicand^0,c
  7741   00399C  0E03               	movlw	3
  7742   00399E  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7743   0039A0  0E00               	movlw	0
  7744   0039A2  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7745   0039A4  0E00               	movlw	0
  7746   0039A6  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7747   0039A8  EC6A  F020         	call	___lmul	;wreg free
  7748   0039AC  C00C  F018         	movff	?___lmul,___aldiv@dividend
  7749   0039B0  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  7750   0039B4  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  7751   0039B8  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  7752   0039BC  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  7753   0039BE  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  7754   0039C0  6E30               	movwf	??_color_normalise^0,c
  7755   0039C2  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  7756   0039C4  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  7757   0039C6  6E31               	movwf	(??_color_normalise+1)^0,c
  7758   0039C8  5026               	movf	color_normalise@RGBC^0,w,c
  7759   0039CA  2630               	addwf	??_color_normalise^0,f,c
  7760   0039CC  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  7761   0039CE  2231               	addwfc	(??_color_normalise+1)^0,f,c
  7762   0039D0  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  7763   0039D4  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  7764   0039D8  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  7765   0039DA  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  7766   0039DC  ECFB  F01C         	call	___aldiv	;wreg free
  7767   0039E0  EE20 F004          	lfsr	2,4
  7768   0039E4  502E               	movf	color_normalise@RGBC_n^0,w,c
  7769   0039E6  26D9               	addwf	fsr2l,f,c
  7770   0039E8  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  7771   0039EA  22DA               	addwfc	fsr2h,f,c
  7772   0039EC  C018  FFDE         	movff	?___aldiv,postinc2
  7773   0039F0  C019  FFDD         	movff	?___aldiv+1,postdec2
  7774   0039F4  0012               	return		;funcret
  7775   0039F6                     __end_of_color_normalise:
  7776                           	callstack 0
  7777                           
  7778 ;; *************** function ___lmul *****************
  7779 ;; Defined at:
  7780 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  multiplier      4   11[COMRAM] unsigned long 
  7783 ;;  multiplicand    4   15[COMRAM] unsigned long 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;  product         4   19[COMRAM] unsigned long 
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  4   11[COMRAM] unsigned long 
  7788 ;; Registers used:
  7789 ;;		wreg, status,2, status,0
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7795 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7796 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7798 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7799 ;;Total ram usage:       12 bytes
  7800 ;; Hardware stack levels used: 1
  7801 ;; Hardware stack levels required when called: 5
  7802 ;; This function calls:
  7803 ;;		Nothing
  7804 ;; This function is called by:
  7805 ;;		_color_normalise
  7806 ;;		_rgb_2_hsv
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           	psect	text30
  7811   0040D4                     __ptext30:
  7812                           	callstack 0
  7813   0040D4                     ___lmul:
  7814                           	callstack 24
  7815   0040D4  0E00               	movlw	0
  7816   0040D6  6E14               	movwf	___lmul@product^0,c
  7817   0040D8  0E00               	movlw	0
  7818   0040DA  6E15               	movwf	(___lmul@product+1)^0,c
  7819   0040DC  0E00               	movlw	0
  7820   0040DE  6E16               	movwf	(___lmul@product+2)^0,c
  7821   0040E0  0E00               	movlw	0
  7822   0040E2  6E17               	movwf	(___lmul@product+3)^0,c
  7823   0040E4                     l3859:
  7824   0040E4  A00C               	btfss	___lmul@multiplier^0,0,c
  7825   0040E6  EF77  F020         	goto	u2751
  7826   0040EA  EF79  F020         	goto	u2750
  7827   0040EE                     u2751:
  7828   0040EE  EF81  F020         	goto	l3863
  7829   0040F2                     u2750:
  7830   0040F2  5010               	movf	___lmul@multiplicand^0,w,c
  7831   0040F4  2614               	addwf	___lmul@product^0,f,c
  7832   0040F6  5011               	movf	(___lmul@multiplicand+1)^0,w,c
  7833   0040F8  2215               	addwfc	(___lmul@product+1)^0,f,c
  7834   0040FA  5012               	movf	(___lmul@multiplicand+2)^0,w,c
  7835   0040FC  2216               	addwfc	(___lmul@product+2)^0,f,c
  7836   0040FE  5013               	movf	(___lmul@multiplicand+3)^0,w,c
  7837   004100  2217               	addwfc	(___lmul@product+3)^0,f,c
  7838   004102                     l3863:
  7839   004102  90D8               	bcf	status,0,c
  7840   004104  3610               	rlcf	___lmul@multiplicand^0,f,c
  7841   004106  3611               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7842   004108  3612               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7843   00410A  3613               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7844   00410C  90D8               	bcf	status,0,c
  7845   00410E  320F               	rrcf	(___lmul@multiplier+3)^0,f,c
  7846   004110  320E               	rrcf	(___lmul@multiplier+2)^0,f,c
  7847   004112  320D               	rrcf	(___lmul@multiplier+1)^0,f,c
  7848   004114  320C               	rrcf	___lmul@multiplier^0,f,c
  7849   004116  500C               	movf	___lmul@multiplier^0,w,c
  7850   004118  100D               	iorwf	(___lmul@multiplier+1)^0,w,c
  7851   00411A  100E               	iorwf	(___lmul@multiplier+2)^0,w,c
  7852   00411C  100F               	iorwf	(___lmul@multiplier+3)^0,w,c
  7853   00411E  A4D8               	btfss	status,2,c
  7854   004120  EF94  F020         	goto	u2761
  7855   004124  EF96  F020         	goto	u2760
  7856   004128                     u2761:
  7857   004128  EF72  F020         	goto	l3859
  7858   00412C                     u2760:
  7859   00412C  C014  F00C         	movff	___lmul@product,?___lmul
  7860   004130  C015  F00D         	movff	___lmul@product+1,?___lmul+1
  7861   004134  C016  F00E         	movff	___lmul@product+2,?___lmul+2
  7862   004138  C017  F00F         	movff	___lmul@product+3,?___lmul+3
  7863   00413C  0012               	return		;funcret
  7864   00413E                     __end_of___lmul:
  7865                           	callstack 0
  7866                           
  7867 ;; *************** function ___aldiv *****************
  7868 ;; Defined at:
  7869 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  dividend        4   23[COMRAM] long 
  7872 ;;  divisor         4   27[COMRAM] long 
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;  quotient        4   33[COMRAM] long 
  7875 ;;  sign            1   32[COMRAM] unsigned char 
  7876 ;;  counter         1   31[COMRAM] unsigned char 
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  4   23[COMRAM] long 
  7879 ;; Registers used:
  7880 ;;		wreg, status,2, status,0
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7886 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7887 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7889 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;Total ram usage:       14 bytes
  7891 ;; Hardware stack levels used: 1
  7892 ;; Hardware stack levels required when called: 5
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_color_normalise
  7897 ;;		_rgb_2_hsv
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text31
  7902   0039F6                     __ptext31:
  7903                           	callstack 0
  7904   0039F6                     ___aldiv:
  7905                           	callstack 24
  7906   0039F6  0E00               	movlw	0
  7907   0039F8  6E21               	movwf	___aldiv@sign^0,c
  7908   0039FA  BE1F               	btfsc	(___aldiv@divisor+3)^0,7,c
  7909   0039FC  EF04  F01D         	goto	u2770
  7910   003A00  EF02  F01D         	goto	u2771
  7911   003A04                     u2771:
  7912   003A04  EF0E  F01D         	goto	l3875
  7913   003A08                     u2770:
  7914   003A08  1E1F               	comf	(___aldiv@divisor+3)^0,f,c
  7915   003A0A  1E1E               	comf	(___aldiv@divisor+2)^0,f,c
  7916   003A0C  1E1D               	comf	(___aldiv@divisor+1)^0,f,c
  7917   003A0E  6C1C               	negf	___aldiv@divisor^0,c
  7918   003A10  0E00               	movlw	0
  7919   003A12  221D               	addwfc	(___aldiv@divisor+1)^0,f,c
  7920   003A14  221E               	addwfc	(___aldiv@divisor+2)^0,f,c
  7921   003A16  221F               	addwfc	(___aldiv@divisor+3)^0,f,c
  7922   003A18  0E01               	movlw	1
  7923   003A1A  6E21               	movwf	___aldiv@sign^0,c
  7924   003A1C                     l3875:
  7925   003A1C  BE1B               	btfsc	(___aldiv@dividend+3)^0,7,c
  7926   003A1E  EF15  F01D         	goto	u2780
  7927   003A22  EF13  F01D         	goto	u2781
  7928   003A26                     u2781:
  7929   003A26  EF1F  F01D         	goto	l3881
  7930   003A2A                     u2780:
  7931   003A2A  1E1B               	comf	(___aldiv@dividend+3)^0,f,c
  7932   003A2C  1E1A               	comf	(___aldiv@dividend+2)^0,f,c
  7933   003A2E  1E19               	comf	(___aldiv@dividend+1)^0,f,c
  7934   003A30  6C18               	negf	___aldiv@dividend^0,c
  7935   003A32  0E00               	movlw	0
  7936   003A34  2219               	addwfc	(___aldiv@dividend+1)^0,f,c
  7937   003A36  221A               	addwfc	(___aldiv@dividend+2)^0,f,c
  7938   003A38  221B               	addwfc	(___aldiv@dividend+3)^0,f,c
  7939   003A3A  0E01               	movlw	1
  7940   003A3C  1A21               	xorwf	___aldiv@sign^0,f,c
  7941   003A3E                     l3881:
  7942   003A3E  0E00               	movlw	0
  7943   003A40  6E22               	movwf	___aldiv@quotient^0,c
  7944   003A42  0E00               	movlw	0
  7945   003A44  6E23               	movwf	(___aldiv@quotient+1)^0,c
  7946   003A46  0E00               	movlw	0
  7947   003A48  6E24               	movwf	(___aldiv@quotient+2)^0,c
  7948   003A4A  0E00               	movlw	0
  7949   003A4C  6E25               	movwf	(___aldiv@quotient+3)^0,c
  7950   003A4E  501C               	movf	___aldiv@divisor^0,w,c
  7951   003A50  101D               	iorwf	(___aldiv@divisor+1)^0,w,c
  7952   003A52  101E               	iorwf	(___aldiv@divisor+2)^0,w,c
  7953   003A54  101F               	iorwf	(___aldiv@divisor+3)^0,w,c
  7954   003A56  B4D8               	btfsc	status,2,c
  7955   003A58  EF30  F01D         	goto	u2791
  7956   003A5C  EF32  F01D         	goto	u2790
  7957   003A60                     u2791:
  7958   003A60  EF68  F01D         	goto	l3903
  7959   003A64                     u2790:
  7960   003A64  0E01               	movlw	1
  7961   003A66  6E20               	movwf	___aldiv@counter^0,c
  7962   003A68  EF3C  F01D         	goto	l3889
  7963   003A6C                     l3887:
  7964   003A6C  90D8               	bcf	status,0,c
  7965   003A6E  361C               	rlcf	___aldiv@divisor^0,f,c
  7966   003A70  361D               	rlcf	(___aldiv@divisor+1)^0,f,c
  7967   003A72  361E               	rlcf	(___aldiv@divisor+2)^0,f,c
  7968   003A74  361F               	rlcf	(___aldiv@divisor+3)^0,f,c
  7969   003A76  2A20               	incf	___aldiv@counter^0,f,c
  7970   003A78                     l3889:
  7971   003A78  AE1F               	btfss	(___aldiv@divisor+3)^0,7,c
  7972   003A7A  EF41  F01D         	goto	u2801
  7973   003A7E  EF43  F01D         	goto	u2800
  7974   003A82                     u2801:
  7975   003A82  EF36  F01D         	goto	l3887
  7976   003A86                     u2800:
  7977   003A86                     l3891:
  7978   003A86  90D8               	bcf	status,0,c
  7979   003A88  3622               	rlcf	___aldiv@quotient^0,f,c
  7980   003A8A  3623               	rlcf	(___aldiv@quotient+1)^0,f,c
  7981   003A8C  3624               	rlcf	(___aldiv@quotient+2)^0,f,c
  7982   003A8E  3625               	rlcf	(___aldiv@quotient+3)^0,f,c
  7983   003A90  501C               	movf	___aldiv@divisor^0,w,c
  7984   003A92  5C18               	subwf	___aldiv@dividend^0,w,c
  7985   003A94  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7986   003A96  5819               	subwfb	(___aldiv@dividend+1)^0,w,c
  7987   003A98  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7988   003A9A  581A               	subwfb	(___aldiv@dividend+2)^0,w,c
  7989   003A9C  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7990   003A9E  581B               	subwfb	(___aldiv@dividend+3)^0,w,c
  7991   003AA0  A0D8               	btfss	status,0,c
  7992   003AA2  EF55  F01D         	goto	u2811
  7993   003AA6  EF57  F01D         	goto	u2810
  7994   003AAA                     u2811:
  7995   003AAA  EF60  F01D         	goto	l3899
  7996   003AAE                     u2810:
  7997   003AAE  501C               	movf	___aldiv@divisor^0,w,c
  7998   003AB0  5E18               	subwf	___aldiv@dividend^0,f,c
  7999   003AB2  501D               	movf	(___aldiv@divisor+1)^0,w,c
  8000   003AB4  5A19               	subwfb	(___aldiv@dividend+1)^0,f,c
  8001   003AB6  501E               	movf	(___aldiv@divisor+2)^0,w,c
  8002   003AB8  5A1A               	subwfb	(___aldiv@dividend+2)^0,f,c
  8003   003ABA  501F               	movf	(___aldiv@divisor+3)^0,w,c
  8004   003ABC  5A1B               	subwfb	(___aldiv@dividend+3)^0,f,c
  8005   003ABE  8022               	bsf	___aldiv@quotient^0,0,c
  8006   003AC0                     l3899:
  8007   003AC0  90D8               	bcf	status,0,c
  8008   003AC2  321F               	rrcf	(___aldiv@divisor+3)^0,f,c
  8009   003AC4  321E               	rrcf	(___aldiv@divisor+2)^0,f,c
  8010   003AC6  321D               	rrcf	(___aldiv@divisor+1)^0,f,c
  8011   003AC8  321C               	rrcf	___aldiv@divisor^0,f,c
  8012   003ACA  2E20               	decfsz	___aldiv@counter^0,f,c
  8013   003ACC  EF43  F01D         	goto	l3891
  8014   003AD0                     l3903:
  8015   003AD0  5021               	movf	___aldiv@sign^0,w,c
  8016   003AD2  B4D8               	btfsc	status,2,c
  8017   003AD4  EF6E  F01D         	goto	u2821
  8018   003AD8  EF70  F01D         	goto	u2820
  8019   003ADC                     u2821:
  8020   003ADC  EF78  F01D         	goto	l3907
  8021   003AE0                     u2820:
  8022   003AE0  1E25               	comf	(___aldiv@quotient+3)^0,f,c
  8023   003AE2  1E24               	comf	(___aldiv@quotient+2)^0,f,c
  8024   003AE4  1E23               	comf	(___aldiv@quotient+1)^0,f,c
  8025   003AE6  6C22               	negf	___aldiv@quotient^0,c
  8026   003AE8  0E00               	movlw	0
  8027   003AEA  2223               	addwfc	(___aldiv@quotient+1)^0,f,c
  8028   003AEC  2224               	addwfc	(___aldiv@quotient+2)^0,f,c
  8029   003AEE  2225               	addwfc	(___aldiv@quotient+3)^0,f,c
  8030   003AF0                     l3907:
  8031   003AF0  C022  F018         	movff	___aldiv@quotient,?___aldiv
  8032   003AF4  C023  F019         	movff	___aldiv@quotient+1,?___aldiv+1
  8033   003AF8  C024  F01A         	movff	___aldiv@quotient+2,?___aldiv+2
  8034   003AFC  C025  F01B         	movff	___aldiv@quotient+3,?___aldiv+3
  8035   003B00  0012               	return		;funcret
  8036   003B02                     __end_of___aldiv:
  8037                           	callstack 0
  8038                           
  8039 ;; *************** function _calibration *****************
  8040 ;; Defined at:
  8041 ;;		line 482 in file "dc_motor.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  8044 ;;		 -> main@motorL(10), 
  8045 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  8046 ;;		 -> main@motorR(10), 
  8047 ;;  turnSpeed       1   48[COMRAM] unsigned char 
  8048 ;;  turnDuration    2   49[COMRAM] PTR unsigned char 
  8049 ;;		 -> main@turnDuration(1), 
  8050 ;;  turnRamp        1   51[COMRAM] unsigned char 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;		None
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      void 
  8055 ;; Registers used:
  8056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8062 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8065 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8066 ;;Total ram usage:       10 bytes
  8067 ;; Hardware stack levels used: 1
  8068 ;; Hardware stack levels required when called: 8
  8069 ;; This function calls:
  8070 ;;		_turnLeft
  8071 ;;		_turnRight
  8072 ;; This function is called by:
  8073 ;;		_main
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text32
  8078   002B02                     __ptext32:
  8079                           	callstack 0
  8080   002B02                     _calibration:
  8081                           	callstack 22
  8082   002B02                     
  8083                           ;dc_motor.c: 482: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 483: {;dc_motor.c: 485:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8084   002B02  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8085   002B06  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8086   002B0A  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8087   002B0E  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8088   002B12  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8089   002B16  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8090   002B1A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8091   002B1E  50DF               	movf	indf2,w,c
  8092   002B20  6E24               	movwf	turnLeft@turnDuration^0,c
  8093   002B22  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8094   002B26  ECB6  F01A         	call	_turnLeft	;wreg free
  8095   002B2A                     
  8096                           ;dc_motor.c: 486:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8097   002B2A  0E05               	movlw	5
  8098   002B2C  6E36               	movwf	(??_calibration+1)^0,c
  8099   002B2E  0E0F               	movlw	15
  8100   002B30  6E35               	movwf	??_calibration^0,c
  8101   002B32  0EF1               	movlw	241
  8102   002B34                     u4037:
  8103   002B34  2EE8               	decfsz	wreg,f,c
  8104   002B36  D7FE               	bra	u4037
  8105   002B38  2E35               	decfsz	??_calibration^0,f,c
  8106   002B3A  D7FC               	bra	u4037
  8107   002B3C  2E36               	decfsz	(??_calibration+1)^0,f,c
  8108   002B3E  D7FA               	bra	u4037
  8109   002B40  0000               	nop	
  8110   002B42                     
  8111                           ;dc_motor.c: 487:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8112   002B42  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8113   002B46  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8114   002B4A  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8115   002B4E  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8116   002B52  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8117   002B56  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8118   002B5A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8119   002B5E  50DF               	movf	indf2,w,c
  8120   002B60  6E24               	movwf	turnLeft@turnDuration^0,c
  8121   002B62  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8122   002B66  ECB6  F01A         	call	_turnLeft	;wreg free
  8123                           
  8124                           ;dc_motor.c: 488:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8125   002B6A  0E05               	movlw	5
  8126   002B6C  6E36               	movwf	(??_calibration+1)^0,c
  8127   002B6E  0E0F               	movlw	15
  8128   002B70  6E35               	movwf	??_calibration^0,c
  8129   002B72  0EF1               	movlw	241
  8130   002B74                     u4047:
  8131   002B74  2EE8               	decfsz	wreg,f,c
  8132   002B76  D7FE               	bra	u4047
  8133   002B78  2E35               	decfsz	??_calibration^0,f,c
  8134   002B7A  D7FC               	bra	u4047
  8135   002B7C  2E36               	decfsz	(??_calibration+1)^0,f,c
  8136   002B7E  D7FA               	bra	u4047
  8137   002B80  0000               	nop	
  8138   002B82                     
  8139                           ;dc_motor.c: 489:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8140   002B82  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8141   002B86  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8142   002B8A  C02F  F021         	movff	calibration@mR,turnRight@mR
  8143   002B8E  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8144   002B92  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8145   002B96  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8146   002B9A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8147   002B9E  50DF               	movf	indf2,w,c
  8148   002BA0  6E24               	movwf	turnRight@turnDuration^0,c
  8149   002BA2  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8150   002BA6  ECCC  F019         	call	_turnRight	;wreg free
  8151   002BAA                     
  8152                           ;dc_motor.c: 490:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8153   002BAA  0E05               	movlw	5
  8154   002BAC  6E36               	movwf	(??_calibration+1)^0,c
  8155   002BAE  0E0F               	movlw	15
  8156   002BB0  6E35               	movwf	??_calibration^0,c
  8157   002BB2  0EF1               	movlw	241
  8158   002BB4                     u4057:
  8159   002BB4  2EE8               	decfsz	wreg,f,c
  8160   002BB6  D7FE               	bra	u4057
  8161   002BB8  2E35               	decfsz	??_calibration^0,f,c
  8162   002BBA  D7FC               	bra	u4057
  8163   002BBC  2E36               	decfsz	(??_calibration+1)^0,f,c
  8164   002BBE  D7FA               	bra	u4057
  8165   002BC0  0000               	nop	
  8166                           
  8167                           ;dc_motor.c: 491:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8168   002BC2  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8169   002BC6  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8170   002BCA  C02F  F021         	movff	calibration@mR,turnRight@mR
  8171   002BCE  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8172   002BD2  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8173   002BD6  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8174   002BDA  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8175   002BDE  50DF               	movf	indf2,w,c
  8176   002BE0  6E24               	movwf	turnRight@turnDuration^0,c
  8177   002BE2  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8178   002BE6  ECCC  F019         	call	_turnRight	;wreg free
  8179   002BEA                     l657:
  8180   002BEA  A48E               	btfss	142,2,c	;volatile
  8181   002BEC  EFFA  F015         	goto	u2141
  8182   002BF0  EFFC  F015         	goto	u2140
  8183   002BF4                     u2141:
  8184   002BF4  EF03  F016         	goto	l661
  8185   002BF8                     u2140:
  8186   002BF8  B68E               	btfsc	142,3,c	;volatile
  8187   002BFA  EF01  F016         	goto	u2151
  8188   002BFE  EF03  F016         	goto	u2150
  8189   002C02                     u2151:
  8190   002C02  EFF5  F015         	goto	l657
  8191   002C06                     u2150:
  8192   002C06                     l661:
  8193                           
  8194                           ;dc_motor.c: 496:         if (!PORTFbits.RF2 && *turnDuration>0) {
  8195   002C06  B48E               	btfsc	142,2,c	;volatile
  8196   002C08  EF08  F016         	goto	u2161
  8197   002C0C  EF0A  F016         	goto	u2160
  8198   002C10                     u2161:
  8199   002C10  EF1E  F016         	goto	l662
  8200   002C14                     u2160:
  8201   002C14  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8202   002C18  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8203   002C1C  50DF               	movf	indf2,w,c
  8204   002C1E  B4D8               	btfsc	status,2,c
  8205   002C20  EF14  F016         	goto	u2171
  8206   002C24  EF16  F016         	goto	u2170
  8207   002C28                     u2171:
  8208   002C28  EF1E  F016         	goto	l662
  8209   002C2C                     u2170:
  8210   002C2C                     
  8211                           ;dc_motor.c: 497:             (*turnDuration)--;
  8212   002C2C  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8213   002C30  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8214   002C34  06DF               	decf	indf2,f,c
  8215   002C36                     
  8216                           ;dc_motor.c: 498:             LATDbits.LATD7 = 1;
  8217   002C36  8E7C               	bsf	124,7,c	;volatile
  8218                           
  8219                           ;dc_motor.c: 499:         }
  8220   002C38  EF2B  F016         	goto	l3387
  8221   002C3C                     l662:
  8222   002C3C  B68E               	btfsc	142,3,c	;volatile
  8223   002C3E  EF23  F016         	goto	u2181
  8224   002C42  EF25  F016         	goto	u2180
  8225   002C46                     u2181:
  8226   002C46  EF2B  F016         	goto	l3387
  8227   002C4A                     u2180:
  8228   002C4A                     
  8229                           ;dc_motor.c: 502:             (*turnDuration)++;
  8230   002C4A  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8231   002C4E  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8232   002C52  2ADF               	incf	indf2,f,c
  8233   002C54                     
  8234                           ;dc_motor.c: 503:             LATHbits.LATH3 = 1;
  8235   002C54  8680               	bsf	128,3,c	;volatile
  8236   002C56                     l3387:
  8237                           
  8238                           ;dc_motor.c: 506:         _delay((unsigned long)((500)*(64000000/4000.0)));
  8239   002C56  0E29               	movlw	41
  8240   002C58  6E36               	movwf	(??_calibration+1)^0,c
  8241   002C5A  0E96               	movlw	150
  8242   002C5C  6E35               	movwf	??_calibration^0,c
  8243   002C5E  0E7F               	movlw	127
  8244   002C60                     u4067:
  8245   002C60  2EE8               	decfsz	wreg,f,c
  8246   002C62  D7FE               	bra	u4067
  8247   002C64  2E35               	decfsz	??_calibration^0,f,c
  8248   002C66  D7FC               	bra	u4067
  8249   002C68  2E36               	decfsz	(??_calibration+1)^0,f,c
  8250   002C6A  D7FA               	bra	u4067
  8251   002C6C  0000               	nop	
  8252   002C6E                     
  8253                           ;dc_motor.c: 508:         if (!PORTFbits.RF3) {
  8254   002C6E  B68E               	btfsc	142,3,c	;volatile
  8255   002C70  EF3C  F016         	goto	u2191
  8256   002C74  EF3E  F016         	goto	u2190
  8257   002C78                     u2191:
  8258   002C78  EF45  F016         	goto	l665
  8259   002C7C                     u2190:
  8260   002C7C                     
  8261                           ;dc_motor.c: 509:             (*turnDuration)--;
  8262   002C7C  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8263   002C80  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8264   002C84  06DF               	decf	indf2,f,c
  8265                           
  8266                           ;dc_motor.c: 510:             break;
  8267   002C86  EFBD  F016         	goto	l666
  8268   002C8A                     l665:
  8269                           
  8270                           ;dc_motor.c: 513:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8271   002C8A  9680               	bcf	128,3,c	;volatile
  8272   002C8C  9E7C               	bcf	124,7,c	;volatile
  8273   002C8E                     
  8274                           ;dc_motor.c: 516:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8275   002C8E  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8276   002C92  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8277   002C96  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8278   002C9A  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8279   002C9E  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8280   002CA2  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8281   002CA6  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8282   002CAA  50DF               	movf	indf2,w,c
  8283   002CAC  6E24               	movwf	turnLeft@turnDuration^0,c
  8284   002CAE  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8285   002CB2  ECB6  F01A         	call	_turnLeft	;wreg free
  8286   002CB6                     
  8287                           ;dc_motor.c: 517:         _delay((unsigned long)((50)*(64000000/4000.0)));
  8288   002CB6  0E05               	movlw	5
  8289   002CB8  6E36               	movwf	(??_calibration+1)^0,c
  8290   002CBA  0E0F               	movlw	15
  8291   002CBC  6E35               	movwf	??_calibration^0,c
  8292   002CBE  0EF1               	movlw	241
  8293   002CC0                     u4077:
  8294   002CC0  2EE8               	decfsz	wreg,f,c
  8295   002CC2  D7FE               	bra	u4077
  8296   002CC4  2E35               	decfsz	??_calibration^0,f,c
  8297   002CC6  D7FC               	bra	u4077
  8298   002CC8  2E36               	decfsz	(??_calibration+1)^0,f,c
  8299   002CCA  D7FA               	bra	u4077
  8300   002CCC  0000               	nop	
  8301   002CCE                     
  8302                           ;dc_motor.c: 518:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8303   002CCE  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8304   002CD2  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8305   002CD6  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8306   002CDA  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8307   002CDE  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8308   002CE2  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8309   002CE6  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8310   002CEA  50DF               	movf	indf2,w,c
  8311   002CEC  6E24               	movwf	turnLeft@turnDuration^0,c
  8312   002CEE  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8313   002CF2  ECB6  F01A         	call	_turnLeft	;wreg free
  8314                           
  8315                           ;dc_motor.c: 519:         _delay((unsigned long)((50)*(64000000/4000.0)));
  8316   002CF6  0E05               	movlw	5
  8317   002CF8  6E36               	movwf	(??_calibration+1)^0,c
  8318   002CFA  0E0F               	movlw	15
  8319   002CFC  6E35               	movwf	??_calibration^0,c
  8320   002CFE  0EF1               	movlw	241
  8321   002D00                     u4087:
  8322   002D00  2EE8               	decfsz	wreg,f,c
  8323   002D02  D7FE               	bra	u4087
  8324   002D04  2E35               	decfsz	??_calibration^0,f,c
  8325   002D06  D7FC               	bra	u4087
  8326   002D08  2E36               	decfsz	(??_calibration+1)^0,f,c
  8327   002D0A  D7FA               	bra	u4087
  8328   002D0C  0000               	nop	
  8329   002D0E                     
  8330                           ;dc_motor.c: 520:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8331   002D0E  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8332   002D12  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8333   002D16  C02F  F021         	movff	calibration@mR,turnRight@mR
  8334   002D1A  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8335   002D1E  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8336   002D22  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8337   002D26  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8338   002D2A  50DF               	movf	indf2,w,c
  8339   002D2C  6E24               	movwf	turnRight@turnDuration^0,c
  8340   002D2E  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8341   002D32  ECCC  F019         	call	_turnRight	;wreg free
  8342   002D36                     
  8343                           ;dc_motor.c: 521:         _delay((unsigned long)((50)*(64000000/4000.0)));
  8344   002D36  0E05               	movlw	5
  8345   002D38  6E36               	movwf	(??_calibration+1)^0,c
  8346   002D3A  0E0F               	movlw	15
  8347   002D3C  6E35               	movwf	??_calibration^0,c
  8348   002D3E  0EF1               	movlw	241
  8349   002D40                     u4097:
  8350   002D40  2EE8               	decfsz	wreg,f,c
  8351   002D42  D7FE               	bra	u4097
  8352   002D44  2E35               	decfsz	??_calibration^0,f,c
  8353   002D46  D7FC               	bra	u4097
  8354   002D48  2E36               	decfsz	(??_calibration+1)^0,f,c
  8355   002D4A  D7FA               	bra	u4097
  8356   002D4C  0000               	nop	
  8357                           
  8358                           ;dc_motor.c: 522:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8359   002D4E  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8360   002D52  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8361   002D56  C02F  F021         	movff	calibration@mR,turnRight@mR
  8362   002D5A  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8363   002D5E  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8364   002D62  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8365   002D66  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8366   002D6A  50DF               	movf	indf2,w,c
  8367   002D6C  6E24               	movwf	turnRight@turnDuration^0,c
  8368   002D6E  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8369   002D72  ECCC  F019         	call	_turnRight	;wreg free
  8370   002D76  EFF5  F015         	goto	l657
  8371   002D7A                     l666:
  8372                           
  8373                           ;dc_motor.c: 527:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8374   002D7A  8680               	bsf	128,3,c	;volatile
  8375   002D7C  8E7C               	bsf	124,7,c	;volatile
  8376   002D7E                     
  8377                           ;dc_motor.c: 528:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8378   002D7E  0E09               	movlw	9
  8379   002D80  6E36               	movwf	(??_calibration+1)^0,c
  8380   002D82  0E1E               	movlw	30
  8381   002D84  6E35               	movwf	??_calibration^0,c
  8382   002D86  0EE4               	movlw	228
  8383   002D88                     u4107:
  8384   002D88  2EE8               	decfsz	wreg,f,c
  8385   002D8A  D7FE               	bra	u4107
  8386   002D8C  2E35               	decfsz	??_calibration^0,f,c
  8387   002D8E  D7FC               	bra	u4107
  8388   002D90  2E36               	decfsz	(??_calibration+1)^0,f,c
  8389   002D92  D7FA               	bra	u4107
  8390   002D94  D000               	nop2	
  8391   002D96                     
  8392                           ;dc_motor.c: 529:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8393   002D96  9680               	bcf	128,3,c	;volatile
  8394   002D98  9E7C               	bcf	124,7,c	;volatile
  8395   002D9A  0012               	return		;funcret
  8396   002D9C                     __end_of_calibration:
  8397                           	callstack 0
  8398                           
  8399 ;; *************** function _turnRight *****************
  8400 ;; Defined at:
  8401 ;;		line 400 in file "dc_motor.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8404 ;;		 -> main@motorL(10), 
  8405 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8406 ;;		 -> main@motorR(10), 
  8407 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  8408 ;;  turnDuration    1   35[COMRAM] unsigned char 
  8409 ;;  turnRamp        1   36[COMRAM] unsigned char 
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;  cur_power       2   42[COMRAM] int 
  8412 ;;  i               2   40[COMRAM] int 
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  1    wreg      void 
  8415 ;; Registers used:
  8416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8422 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8423 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8424 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8425 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8426 ;;Total ram usage:       14 bytes
  8427 ;; Hardware stack levels used: 1
  8428 ;; Hardware stack levels required when called: 7
  8429 ;; This function calls:
  8430 ;;		_setMotorPWM
  8431 ;; This function is called by:
  8432 ;;		_move
  8433 ;;		_returnHome
  8434 ;;		_lostReturnHome
  8435 ;;		_calibration
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text33
  8440   003398                     __ptext33:
  8441                           	callstack 0
  8442   003398                     _turnRight:
  8443                           	callstack 22
  8444   003398                     
  8445                           ;dc_motor.c: 400: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 401: {;dc_motor.c: 402:     mL->dir
      +                          ection = 1;
  8446   003398  EE20 F001          	lfsr	2,1
  8447   00339C  501F               	movf	turnRight@mL^0,w,c
  8448   00339E  26D9               	addwf	fsr2l,f,c
  8449   0033A0  5020               	movf	(turnRight@mL+1)^0,w,c
  8450   0033A2  22DA               	addwfc	fsr2h,f,c
  8451   0033A4  0E01               	movlw	1
  8452   0033A6  6EDF               	movwf	indf2,c
  8453                           
  8454                           ;dc_motor.c: 403:     mR->direction = 0;
  8455   0033A8  EE20 F001          	lfsr	2,1
  8456   0033AC  5021               	movf	turnRight@mR^0,w,c
  8457   0033AE  26D9               	addwf	fsr2l,f,c
  8458   0033B0  5022               	movf	(turnRight@mR+1)^0,w,c
  8459   0033B2  22DA               	addwfc	fsr2h,f,c
  8460   0033B4  6ADF               	clrf	indf2,c
  8461   0033B6                     
  8462                           ;dc_motor.c: 404:     int i;;dc_motor.c: 405:     int cur_power;;dc_motor.c: 406:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  8463   0033B6  0E00               	movlw	0
  8464   0033B8  6E2C               	movwf	(turnRight@cur_power+1)^0,c
  8465   0033BA  0E01               	movlw	1
  8466   0033BC  6E2B               	movwf	turnRight@cur_power^0,c
  8467   0033BE  EF2A  F01A         	goto	l2767
  8468   0033C2                     l2753:
  8469                           
  8470                           ;dc_motor.c: 407:         mL->power = cur_power+mL->compensation;
  8471   0033C2  EE20 F009          	lfsr	2,9
  8472   0033C6  501F               	movf	turnRight@mL^0,w,c
  8473   0033C8  26D9               	addwf	fsr2l,f,c
  8474   0033CA  5020               	movf	(turnRight@mL+1)^0,w,c
  8475   0033CC  22DA               	addwfc	fsr2h,f,c
  8476   0033CE  50DF               	movf	indf2,w,c
  8477   0033D0  242B               	addwf	turnRight@cur_power^0,w,c
  8478   0033D2  C01F  FFD9         	movff	turnRight@mL,fsr2l
  8479   0033D6  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  8480   0033DA  6EDF               	movwf	indf2,c
  8481                           
  8482                           ;dc_motor.c: 408:         mR->power = cur_power+mR->compensation;
  8483   0033DC  EE20 F009          	lfsr	2,9
  8484   0033E0  5021               	movf	turnRight@mR^0,w,c
  8485   0033E2  26D9               	addwf	fsr2l,f,c
  8486   0033E4  5022               	movf	(turnRight@mR+1)^0,w,c
  8487   0033E6  22DA               	addwfc	fsr2h,f,c
  8488   0033E8  50DF               	movf	indf2,w,c
  8489   0033EA  242B               	addwf	turnRight@cur_power^0,w,c
  8490   0033EC  C021  FFD9         	movff	turnRight@mR,fsr2l
  8491   0033F0  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  8492   0033F4  6EDF               	movwf	indf2,c
  8493   0033F6                     
  8494                           ;dc_motor.c: 409:         setMotorPWM(mL);
  8495   0033F6  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  8496   0033FA  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  8497   0033FE  ECA0  F01B         	call	_setMotorPWM	;wreg free
  8498   003402                     
  8499                           ;dc_motor.c: 410:         setMotorPWM(mR);
  8500   003402  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  8501   003406  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  8502   00340A  ECA0  F01B         	call	_setMotorPWM	;wreg free
  8503   00340E                     
  8504                           ;dc_motor.c: 411:         for (i=0;i<turnRamp;i++) {
  8505   00340E  0E00               	movlw	0
  8506   003410  6E2A               	movwf	(turnRight@i+1)^0,c
  8507   003412  0E00               	movlw	0
  8508   003414  6E29               	movwf	turnRight@i^0,c
  8509   003416  EF16  F01A         	goto	l615
  8510   00341A                     l2761:
  8511                           
  8512                           ;dc_motor.c: 412:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8513   00341A  0ED0               	movlw	208
  8514   00341C  6E26               	movwf	??_turnRight^0,c
  8515   00341E  0ECA               	movlw	202
  8516   003420                     u4117:
  8517   003420  2EE8               	decfsz	wreg,f,c
  8518   003422  D7FE               	bra	u4117
  8519   003424  2E26               	decfsz	??_turnRight^0,f,c
  8520   003426  D7FC               	bra	u4117
  8521   003428                     
  8522                           ;dc_motor.c: 413:         }
  8523   003428  4A29               	infsnz	turnRight@i^0,f,c
  8524   00342A  2A2A               	incf	(turnRight@i+1)^0,f,c
  8525   00342C                     l615:
  8526   00342C  5025               	movf	turnRight@turnRamp^0,w,c
  8527   00342E  6E26               	movwf	??_turnRight^0,c
  8528   003430  6A27               	clrf	(??_turnRight+1)^0,c
  8529   003432  5026               	movf	??_turnRight^0,w,c
  8530   003434  5C29               	subwf	turnRight@i^0,w,c
  8531   003436  502A               	movf	(turnRight@i+1)^0,w,c
  8532   003438  0A80               	xorlw	128
  8533   00343A  6E28               	movwf	(??_turnRight+2)^0,c
  8534   00343C  5027               	movf	(??_turnRight+1)^0,w,c
  8535   00343E  0A80               	xorlw	128
  8536   003440  5828               	subwfb	(??_turnRight+2)^0,w,c
  8537   003442  A0D8               	btfss	status,0,c
  8538   003444  EF26  F01A         	goto	u1531
  8539   003448  EF28  F01A         	goto	u1530
  8540   00344C                     u1531:
  8541   00344C  EF0D  F01A         	goto	l2761
  8542   003450                     u1530:
  8543   003450                     
  8544                           ;dc_motor.c: 414:     }
  8545   003450  4A2B               	infsnz	turnRight@cur_power^0,f,c
  8546   003452  2A2C               	incf	(turnRight@cur_power+1)^0,f,c
  8547   003454                     l2767:
  8548   003454  5023               	movf	turnRight@turnSpeed^0,w,c
  8549   003456  6E26               	movwf	??_turnRight^0,c
  8550   003458  6A27               	clrf	(??_turnRight+1)^0,c
  8551   00345A  502B               	movf	turnRight@cur_power^0,w,c
  8552   00345C  5C26               	subwf	??_turnRight^0,w,c
  8553   00345E  5027               	movf	(??_turnRight+1)^0,w,c
  8554   003460  0A80               	xorlw	128
  8555   003462  6E28               	movwf	(??_turnRight+2)^0,c
  8556   003464  502C               	movf	(turnRight@cur_power+1)^0,w,c
  8557   003466  0A80               	xorlw	128
  8558   003468  5828               	subwfb	(??_turnRight+2)^0,w,c
  8559   00346A  B0D8               	btfsc	status,0,c
  8560   00346C  EF3A  F01A         	goto	u1541
  8561   003470  EF3C  F01A         	goto	u1540
  8562   003474                     u1541:
  8563   003474  EFE1  F019         	goto	l2753
  8564   003478                     u1540:
  8565   003478                     
  8566                           ;dc_motor.c: 416:     for (i=0;i<turnDuration;i++) {
  8567   003478  0E00               	movlw	0
  8568   00347A  6E2A               	movwf	(turnRight@i+1)^0,c
  8569   00347C  0E00               	movlw	0
  8570   00347E  6E29               	movwf	turnRight@i^0,c
  8571   003480  EF4B  F01A         	goto	l619
  8572   003484                     l2771:
  8573                           
  8574                           ;dc_motor.c: 417:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8575   003484  0ED0               	movlw	208
  8576   003486  6E26               	movwf	??_turnRight^0,c
  8577   003488  0ECA               	movlw	202
  8578   00348A                     u4127:
  8579   00348A  2EE8               	decfsz	wreg,f,c
  8580   00348C  D7FE               	bra	u4127
  8581   00348E  2E26               	decfsz	??_turnRight^0,f,c
  8582   003490  D7FC               	bra	u4127
  8583   003492                     
  8584                           ;dc_motor.c: 418:         }
  8585   003492  4A29               	infsnz	turnRight@i^0,f,c
  8586   003494  2A2A               	incf	(turnRight@i+1)^0,f,c
  8587   003496                     l619:
  8588   003496  5024               	movf	turnRight@turnDuration^0,w,c
  8589   003498  6E26               	movwf	??_turnRight^0,c
  8590   00349A  6A27               	clrf	(??_turnRight+1)^0,c
  8591   00349C  5026               	movf	??_turnRight^0,w,c
  8592   00349E  5C29               	subwf	turnRight@i^0,w,c
  8593   0034A0  502A               	movf	(turnRight@i+1)^0,w,c
  8594   0034A2  0A80               	xorlw	128
  8595   0034A4  6E28               	movwf	(??_turnRight+2)^0,c
  8596   0034A6  5027               	movf	(??_turnRight+1)^0,w,c
  8597   0034A8  0A80               	xorlw	128
  8598   0034AA  5828               	subwfb	(??_turnRight+2)^0,w,c
  8599   0034AC  A0D8               	btfss	status,0,c
  8600   0034AE  EF5B  F01A         	goto	u1551
  8601   0034B2  EF5D  F01A         	goto	u1550
  8602   0034B6                     u1551:
  8603   0034B6  EF42  F01A         	goto	l2771
  8604   0034BA                     u1550:
  8605   0034BA                     
  8606                           ;dc_motor.c: 420:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  8607   0034BA  C023  F02B         	movff	turnRight@turnSpeed,turnRight@cur_power
  8608   0034BE  6A2C               	clrf	(turnRight@cur_power+1)^0,c
  8609   0034C0                     l2775:
  8610   0034C0  BE2C               	btfsc	(turnRight@cur_power+1)^0,7,c
  8611   0034C2  EF67  F01A         	goto	u1560
  8612   0034C6  EF65  F01A         	goto	u1561
  8613   0034CA                     u1561:
  8614   0034CA  EF69  F01A         	goto	l2779
  8615   0034CE                     u1560:
  8616   0034CE  EFB5  F01A         	goto	l627
  8617   0034D2                     l2779:
  8618                           
  8619                           ;dc_motor.c: 421:         mL->power = cur_power+mL->compensation;
  8620   0034D2  EE20 F009          	lfsr	2,9
  8621   0034D6  501F               	movf	turnRight@mL^0,w,c
  8622   0034D8  26D9               	addwf	fsr2l,f,c
  8623   0034DA  5020               	movf	(turnRight@mL+1)^0,w,c
  8624   0034DC  22DA               	addwfc	fsr2h,f,c
  8625   0034DE  50DF               	movf	indf2,w,c
  8626   0034E0  242B               	addwf	turnRight@cur_power^0,w,c
  8627   0034E2  C01F  FFD9         	movff	turnRight@mL,fsr2l
  8628   0034E6  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  8629   0034EA  6EDF               	movwf	indf2,c
  8630                           
  8631                           ;dc_motor.c: 422:         mR->power = cur_power+mR->compensation;
  8632   0034EC  EE20 F009          	lfsr	2,9
  8633   0034F0  5021               	movf	turnRight@mR^0,w,c
  8634   0034F2  26D9               	addwf	fsr2l,f,c
  8635   0034F4  5022               	movf	(turnRight@mR+1)^0,w,c
  8636   0034F6  22DA               	addwfc	fsr2h,f,c
  8637   0034F8  50DF               	movf	indf2,w,c
  8638   0034FA  242B               	addwf	turnRight@cur_power^0,w,c
  8639   0034FC  C021  FFD9         	movff	turnRight@mR,fsr2l
  8640   003500  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  8641   003504  6EDF               	movwf	indf2,c
  8642   003506                     
  8643                           ;dc_motor.c: 423:         setMotorPWM(mL);
  8644   003506  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  8645   00350A  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  8646   00350E  ECA0  F01B         	call	_setMotorPWM	;wreg free
  8647   003512                     
  8648                           ;dc_motor.c: 424:         setMotorPWM(mR);
  8649   003512  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  8650   003516  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  8651   00351A  ECA0  F01B         	call	_setMotorPWM	;wreg free
  8652   00351E                     
  8653                           ;dc_motor.c: 425:         for (i=0;i<turnRamp;i++) {
  8654   00351E  0E00               	movlw	0
  8655   003520  6E2A               	movwf	(turnRight@i+1)^0,c
  8656   003522  0E00               	movlw	0
  8657   003524  6E29               	movwf	turnRight@i^0,c
  8658   003526  EF9E  F01A         	goto	l624
  8659   00352A                     l2787:
  8660                           
  8661                           ;dc_motor.c: 426:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8662   00352A  0ED0               	movlw	208
  8663   00352C  6E26               	movwf	??_turnRight^0,c
  8664   00352E  0ECA               	movlw	202
  8665   003530                     u4137:
  8666   003530  2EE8               	decfsz	wreg,f,c
  8667   003532  D7FE               	bra	u4137
  8668   003534  2E26               	decfsz	??_turnRight^0,f,c
  8669   003536  D7FC               	bra	u4137
  8670   003538                     
  8671                           ;dc_motor.c: 427:         }
  8672   003538  4A29               	infsnz	turnRight@i^0,f,c
  8673   00353A  2A2A               	incf	(turnRight@i+1)^0,f,c
  8674   00353C                     l624:
  8675   00353C  5025               	movf	turnRight@turnRamp^0,w,c
  8676   00353E  6E26               	movwf	??_turnRight^0,c
  8677   003540  6A27               	clrf	(??_turnRight+1)^0,c
  8678   003542  5026               	movf	??_turnRight^0,w,c
  8679   003544  5C29               	subwf	turnRight@i^0,w,c
  8680   003546  502A               	movf	(turnRight@i+1)^0,w,c
  8681   003548  0A80               	xorlw	128
  8682   00354A  6E28               	movwf	(??_turnRight+2)^0,c
  8683   00354C  5027               	movf	(??_turnRight+1)^0,w,c
  8684   00354E  0A80               	xorlw	128
  8685   003550  5828               	subwfb	(??_turnRight+2)^0,w,c
  8686   003552  A0D8               	btfss	status,0,c
  8687   003554  EFAE  F01A         	goto	u1571
  8688   003558  EFB0  F01A         	goto	u1570
  8689   00355C                     u1571:
  8690   00355C  EF95  F01A         	goto	l2787
  8691   003560                     u1570:
  8692   003560                     
  8693                           ;dc_motor.c: 428:     }
  8694   003560  062B               	decf	turnRight@cur_power^0,f,c
  8695   003562  A0D8               	btfss	status,0,c
  8696   003564  062C               	decf	(turnRight@cur_power+1)^0,f,c
  8697   003566  EF60  F01A         	goto	l2775
  8698   00356A                     l627:
  8699   00356A  0012               	return		;funcret
  8700   00356C                     __end_of_turnRight:
  8701                           	callstack 0
  8702                           
  8703 ;; *************** function _turnLeft *****************
  8704 ;; Defined at:
  8705 ;;		line 368 in file "dc_motor.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8708 ;;		 -> main@motorL(10), 
  8709 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8710 ;;		 -> main@motorR(10), 
  8711 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  8712 ;;  turnDuration    1   35[COMRAM] unsigned char 
  8713 ;;  turnRamp        1   36[COMRAM] unsigned char 
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;  cur_power       2   42[COMRAM] int 
  8716 ;;  i               2   40[COMRAM] int 
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  1    wreg      void 
  8719 ;; Registers used:
  8720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8726 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8727 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8728 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8729 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8730 ;;Total ram usage:       14 bytes
  8731 ;; Hardware stack levels used: 1
  8732 ;; Hardware stack levels required when called: 7
  8733 ;; This function calls:
  8734 ;;		_setMotorPWM
  8735 ;; This function is called by:
  8736 ;;		_move
  8737 ;;		_returnHome
  8738 ;;		_lostReturnHome
  8739 ;;		_calibration
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text34
  8744   00356C                     __ptext34:
  8745                           	callstack 0
  8746   00356C                     _turnLeft:
  8747                           	callstack 22
  8748   00356C                     
  8749                           ;dc_motor.c: 368: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 369: {;dc_motor.c: 370:     mL->dire
      +                          ction = 0;
  8750   00356C  EE20 F001          	lfsr	2,1
  8751   003570  501F               	movf	turnLeft@mL^0,w,c
  8752   003572  26D9               	addwf	fsr2l,f,c
  8753   003574  5020               	movf	(turnLeft@mL+1)^0,w,c
  8754   003576  22DA               	addwfc	fsr2h,f,c
  8755   003578  6ADF               	clrf	indf2,c
  8756                           
  8757                           ;dc_motor.c: 371:     mR->direction = 1;
  8758   00357A  EE20 F001          	lfsr	2,1
  8759   00357E  5021               	movf	turnLeft@mR^0,w,c
  8760   003580  26D9               	addwf	fsr2l,f,c
  8761   003582  5022               	movf	(turnLeft@mR+1)^0,w,c
  8762   003584  22DA               	addwfc	fsr2h,f,c
  8763   003586  0E01               	movlw	1
  8764   003588  6EDF               	movwf	indf2,c
  8765   00358A                     
  8766                           ;dc_motor.c: 372:     int i;;dc_motor.c: 373:     int cur_power;;dc_motor.c: 374:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  8767   00358A  0E00               	movlw	0
  8768   00358C  6E2C               	movwf	(turnLeft@cur_power+1)^0,c
  8769   00358E  0E01               	movlw	1
  8770   003590  6E2B               	movwf	turnLeft@cur_power^0,c
  8771   003592  EF14  F01B         	goto	l2813
  8772   003596                     l2799:
  8773                           
  8774                           ;dc_motor.c: 375:         mL->power = cur_power+mL->compensation;
  8775   003596  EE20 F009          	lfsr	2,9
  8776   00359A  501F               	movf	turnLeft@mL^0,w,c
  8777   00359C  26D9               	addwf	fsr2l,f,c
  8778   00359E  5020               	movf	(turnLeft@mL+1)^0,w,c
  8779   0035A0  22DA               	addwfc	fsr2h,f,c
  8780   0035A2  50DF               	movf	indf2,w,c
  8781   0035A4  242B               	addwf	turnLeft@cur_power^0,w,c
  8782   0035A6  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  8783   0035AA  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  8784   0035AE  6EDF               	movwf	indf2,c
  8785                           
  8786                           ;dc_motor.c: 376:         mR->power = cur_power+mR->compensation;
  8787   0035B0  EE20 F009          	lfsr	2,9
  8788   0035B4  5021               	movf	turnLeft@mR^0,w,c
  8789   0035B6  26D9               	addwf	fsr2l,f,c
  8790   0035B8  5022               	movf	(turnLeft@mR+1)^0,w,c
  8791   0035BA  22DA               	addwfc	fsr2h,f,c
  8792   0035BC  50DF               	movf	indf2,w,c
  8793   0035BE  242B               	addwf	turnLeft@cur_power^0,w,c
  8794   0035C0  C021  FFD9         	movff	turnLeft@mR,fsr2l
  8795   0035C4  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  8796   0035C8  6EDF               	movwf	indf2,c
  8797   0035CA                     
  8798                           ;dc_motor.c: 377:         setMotorPWM(mL);
  8799   0035CA  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  8800   0035CE  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8801   0035D2  ECA0  F01B         	call	_setMotorPWM	;wreg free
  8802   0035D6                     
  8803                           ;dc_motor.c: 378:         setMotorPWM(mR);
  8804   0035D6  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  8805   0035DA  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8806   0035DE  ECA0  F01B         	call	_setMotorPWM	;wreg free
  8807   0035E2                     
  8808                           ;dc_motor.c: 379:         for (i=0;i<turnRamp;i++) {
  8809   0035E2  0E00               	movlw	0
  8810   0035E4  6E2A               	movwf	(turnLeft@i+1)^0,c
  8811   0035E6  0E00               	movlw	0
  8812   0035E8  6E29               	movwf	turnLeft@i^0,c
  8813   0035EA  EF00  F01B         	goto	l598
  8814   0035EE                     l2807:
  8815                           
  8816                           ;dc_motor.c: 380:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8817   0035EE  0ED0               	movlw	208
  8818   0035F0  6E26               	movwf	??_turnLeft^0,c
  8819   0035F2  0ECA               	movlw	202
  8820   0035F4                     u4147:
  8821   0035F4  2EE8               	decfsz	wreg,f,c
  8822   0035F6  D7FE               	bra	u4147
  8823   0035F8  2E26               	decfsz	??_turnLeft^0,f,c
  8824   0035FA  D7FC               	bra	u4147
  8825   0035FC                     
  8826                           ;dc_motor.c: 381:         }
  8827   0035FC  4A29               	infsnz	turnLeft@i^0,f,c
  8828   0035FE  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8829   003600                     l598:
  8830   003600  5025               	movf	turnLeft@turnRamp^0,w,c
  8831   003602  6E26               	movwf	??_turnLeft^0,c
  8832   003604  6A27               	clrf	(??_turnLeft+1)^0,c
  8833   003606  5026               	movf	??_turnLeft^0,w,c
  8834   003608  5C29               	subwf	turnLeft@i^0,w,c
  8835   00360A  502A               	movf	(turnLeft@i+1)^0,w,c
  8836   00360C  0A80               	xorlw	128
  8837   00360E  6E28               	movwf	(??_turnLeft+2)^0,c
  8838   003610  5027               	movf	(??_turnLeft+1)^0,w,c
  8839   003612  0A80               	xorlw	128
  8840   003614  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8841   003616  A0D8               	btfss	status,0,c
  8842   003618  EF10  F01B         	goto	u1581
  8843   00361C  EF12  F01B         	goto	u1580
  8844   003620                     u1581:
  8845   003620  EFF7  F01A         	goto	l2807
  8846   003624                     u1580:
  8847   003624                     
  8848                           ;dc_motor.c: 382:     }
  8849   003624  4A2B               	infsnz	turnLeft@cur_power^0,f,c
  8850   003626  2A2C               	incf	(turnLeft@cur_power+1)^0,f,c
  8851   003628                     l2813:
  8852   003628  5023               	movf	turnLeft@turnSpeed^0,w,c
  8853   00362A  6E26               	movwf	??_turnLeft^0,c
  8854   00362C  6A27               	clrf	(??_turnLeft+1)^0,c
  8855   00362E  502B               	movf	turnLeft@cur_power^0,w,c
  8856   003630  5C26               	subwf	??_turnLeft^0,w,c
  8857   003632  5027               	movf	(??_turnLeft+1)^0,w,c
  8858   003634  0A80               	xorlw	128
  8859   003636  6E28               	movwf	(??_turnLeft+2)^0,c
  8860   003638  502C               	movf	(turnLeft@cur_power+1)^0,w,c
  8861   00363A  0A80               	xorlw	128
  8862   00363C  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8863   00363E  B0D8               	btfsc	status,0,c
  8864   003640  EF24  F01B         	goto	u1591
  8865   003644  EF26  F01B         	goto	u1590
  8866   003648                     u1591:
  8867   003648  EFCB  F01A         	goto	l2799
  8868   00364C                     u1590:
  8869   00364C                     
  8870                           ;dc_motor.c: 384:     for (i=0;i<turnDuration;i++) {
  8871   00364C  0E00               	movlw	0
  8872   00364E  6E2A               	movwf	(turnLeft@i+1)^0,c
  8873   003650  0E00               	movlw	0
  8874   003652  6E29               	movwf	turnLeft@i^0,c
  8875   003654  EF35  F01B         	goto	l602
  8876   003658                     l2817:
  8877                           
  8878                           ;dc_motor.c: 385:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8879   003658  0ED0               	movlw	208
  8880   00365A  6E26               	movwf	??_turnLeft^0,c
  8881   00365C  0ECA               	movlw	202
  8882   00365E                     u4157:
  8883   00365E  2EE8               	decfsz	wreg,f,c
  8884   003660  D7FE               	bra	u4157
  8885   003662  2E26               	decfsz	??_turnLeft^0,f,c
  8886   003664  D7FC               	bra	u4157
  8887   003666                     
  8888                           ;dc_motor.c: 386:         }
  8889   003666  4A29               	infsnz	turnLeft@i^0,f,c
  8890   003668  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8891   00366A                     l602:
  8892   00366A  5024               	movf	turnLeft@turnDuration^0,w,c
  8893   00366C  6E26               	movwf	??_turnLeft^0,c
  8894   00366E  6A27               	clrf	(??_turnLeft+1)^0,c
  8895   003670  5026               	movf	??_turnLeft^0,w,c
  8896   003672  5C29               	subwf	turnLeft@i^0,w,c
  8897   003674  502A               	movf	(turnLeft@i+1)^0,w,c
  8898   003676  0A80               	xorlw	128
  8899   003678  6E28               	movwf	(??_turnLeft+2)^0,c
  8900   00367A  5027               	movf	(??_turnLeft+1)^0,w,c
  8901   00367C  0A80               	xorlw	128
  8902   00367E  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8903   003680  A0D8               	btfss	status,0,c
  8904   003682  EF45  F01B         	goto	u1601
  8905   003686  EF47  F01B         	goto	u1600
  8906   00368A                     u1601:
  8907   00368A  EF2C  F01B         	goto	l2817
  8908   00368E                     u1600:
  8909   00368E                     
  8910                           ;dc_motor.c: 388:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  8911   00368E  C023  F02B         	movff	turnLeft@turnSpeed,turnLeft@cur_power
  8912   003692  6A2C               	clrf	(turnLeft@cur_power+1)^0,c
  8913   003694                     l2821:
  8914   003694  BE2C               	btfsc	(turnLeft@cur_power+1)^0,7,c
  8915   003696  EF51  F01B         	goto	u1610
  8916   00369A  EF4F  F01B         	goto	u1611
  8917   00369E                     u1611:
  8918   00369E  EF53  F01B         	goto	l2825
  8919   0036A2                     u1610:
  8920   0036A2  EF9F  F01B         	goto	l610
  8921   0036A6                     l2825:
  8922                           
  8923                           ;dc_motor.c: 389:         mL->power = cur_power+mL->compensation;
  8924   0036A6  EE20 F009          	lfsr	2,9
  8925   0036AA  501F               	movf	turnLeft@mL^0,w,c
  8926   0036AC  26D9               	addwf	fsr2l,f,c
  8927   0036AE  5020               	movf	(turnLeft@mL+1)^0,w,c
  8928   0036B0  22DA               	addwfc	fsr2h,f,c
  8929   0036B2  50DF               	movf	indf2,w,c
  8930   0036B4  242B               	addwf	turnLeft@cur_power^0,w,c
  8931   0036B6  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  8932   0036BA  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  8933   0036BE  6EDF               	movwf	indf2,c
  8934                           
  8935                           ;dc_motor.c: 390:         mR->power = cur_power+mR->compensation;
  8936   0036C0  EE20 F009          	lfsr	2,9
  8937   0036C4  5021               	movf	turnLeft@mR^0,w,c
  8938   0036C6  26D9               	addwf	fsr2l,f,c
  8939   0036C8  5022               	movf	(turnLeft@mR+1)^0,w,c
  8940   0036CA  22DA               	addwfc	fsr2h,f,c
  8941   0036CC  50DF               	movf	indf2,w,c
  8942   0036CE  242B               	addwf	turnLeft@cur_power^0,w,c
  8943   0036D0  C021  FFD9         	movff	turnLeft@mR,fsr2l
  8944   0036D4  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  8945   0036D8  6EDF               	movwf	indf2,c
  8946   0036DA                     
  8947                           ;dc_motor.c: 391:         setMotorPWM(mL);
  8948   0036DA  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  8949   0036DE  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8950   0036E2  ECA0  F01B         	call	_setMotorPWM	;wreg free
  8951   0036E6                     
  8952                           ;dc_motor.c: 392:         setMotorPWM(mR);
  8953   0036E6  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  8954   0036EA  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8955   0036EE  ECA0  F01B         	call	_setMotorPWM	;wreg free
  8956   0036F2                     
  8957                           ;dc_motor.c: 393:         for (i=0;i<turnRamp;i++) {
  8958   0036F2  0E00               	movlw	0
  8959   0036F4  6E2A               	movwf	(turnLeft@i+1)^0,c
  8960   0036F6  0E00               	movlw	0
  8961   0036F8  6E29               	movwf	turnLeft@i^0,c
  8962   0036FA  EF88  F01B         	goto	l607
  8963   0036FE                     l2833:
  8964                           
  8965                           ;dc_motor.c: 394:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8966   0036FE  0ED0               	movlw	208
  8967   003700  6E26               	movwf	??_turnLeft^0,c
  8968   003702  0ECA               	movlw	202
  8969   003704                     u4167:
  8970   003704  2EE8               	decfsz	wreg,f,c
  8971   003706  D7FE               	bra	u4167
  8972   003708  2E26               	decfsz	??_turnLeft^0,f,c
  8973   00370A  D7FC               	bra	u4167
  8974   00370C                     
  8975                           ;dc_motor.c: 395:         }
  8976   00370C  4A29               	infsnz	turnLeft@i^0,f,c
  8977   00370E  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8978   003710                     l607:
  8979   003710  5025               	movf	turnLeft@turnRamp^0,w,c
  8980   003712  6E26               	movwf	??_turnLeft^0,c
  8981   003714  6A27               	clrf	(??_turnLeft+1)^0,c
  8982   003716  5026               	movf	??_turnLeft^0,w,c
  8983   003718  5C29               	subwf	turnLeft@i^0,w,c
  8984   00371A  502A               	movf	(turnLeft@i+1)^0,w,c
  8985   00371C  0A80               	xorlw	128
  8986   00371E  6E28               	movwf	(??_turnLeft+2)^0,c
  8987   003720  5027               	movf	(??_turnLeft+1)^0,w,c
  8988   003722  0A80               	xorlw	128
  8989   003724  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8990   003726  A0D8               	btfss	status,0,c
  8991   003728  EF98  F01B         	goto	u1621
  8992   00372C  EF9A  F01B         	goto	u1620
  8993   003730                     u1621:
  8994   003730  EF7F  F01B         	goto	l2833
  8995   003734                     u1620:
  8996   003734                     
  8997                           ;dc_motor.c: 396:     }
  8998   003734  062B               	decf	turnLeft@cur_power^0,f,c
  8999   003736  A0D8               	btfss	status,0,c
  9000   003738  062C               	decf	(turnLeft@cur_power+1)^0,f,c
  9001   00373A  EF4A  F01B         	goto	l2821
  9002   00373E                     l610:
  9003   00373E  0012               	return		;funcret
  9004   003740                     __end_of_turnLeft:
  9005                           	callstack 0
  9006                           
  9007 ;; *************** function _setMotorPWM *****************
  9008 ;; Defined at:
  9009 ;;		line 68 in file "dc_motor.c"
  9010 ;; Parameters:    Size  Location     Type
  9011 ;;  m               2   24[COMRAM] PTR struct DC_motor
  9012 ;;		 -> main@motorR(10), main@motorL(10), 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;  negDuty         1   29[COMRAM] unsigned char 
  9015 ;;  posDuty         1   28[COMRAM] unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1    wreg      void 
  9018 ;; Registers used:
  9019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9026 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9028 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9029 ;;Total ram usage:        6 bytes
  9030 ;; Hardware stack levels used: 1
  9031 ;; Hardware stack levels required when called: 6
  9032 ;; This function calls:
  9033 ;;		___lwdiv
  9034 ;;		___wmul
  9035 ;; This function is called by:
  9036 ;;		_stop
  9037 ;;		_turnLeft
  9038 ;;		_turnRight
  9039 ;;		_fullSpeedAhead
  9040 ;;		_reverseOneSquare
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text35
  9045   003740                     __ptext35:
  9046                           	callstack 0
  9047   003740                     _setMotorPWM:
  9048                           	callstack 23
  9049   003740                     
  9050                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  9051   003740  EE20 F002          	lfsr	2,2
  9052   003744  5019               	movf	setMotorPWM@m^0,w,c
  9053   003746  26D9               	addwf	fsr2l,f,c
  9054   003748  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9055   00374A  22DA               	addwfc	fsr2h,f,c
  9056   00374C  50DF               	movf	indf2,w,c
  9057   00374E  B4D8               	btfsc	status,2,c
  9058   003750  EFAC  F01B         	goto	u1431
  9059   003754  EFAE  F01B         	goto	u1430
  9060   003758                     u1431:
  9061   003758  EFE2  F01B         	goto	l2661
  9062   00375C                     u1430:
  9063   00375C                     
  9064                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  9065   00375C  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  9066   003760  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9067   003764  50DF               	movf	indf2,w,c
  9068   003766  6E1B               	movwf	??_setMotorPWM^0,c
  9069   003768  501B               	movf	??_setMotorPWM^0,w,c
  9070   00376A  6E0C               	movwf	___wmul@multiplier^0,c
  9071   00376C  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  9072   00376E  EE20 F003          	lfsr	2,3
  9073   003772  5019               	movf	setMotorPWM@m^0,w,c
  9074   003774  26D9               	addwf	fsr2l,f,c
  9075   003776  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9076   003778  22DA               	addwfc	fsr2h,f,c
  9077   00377A  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  9078   00377E  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  9079   003782  ECCC  F021         	call	___wmul	;wreg free
  9080   003786  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  9081   00378A  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  9082   00378E  0E00               	movlw	0
  9083   003790  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  9084   003792  0E64               	movlw	100
  9085   003794  6E14               	movwf	___lwdiv@divisor^0,c
  9086   003796  EC30  F020         	call	___lwdiv	;wreg free
  9087   00379A  EE20 F003          	lfsr	2,3
  9088   00379E  5019               	movf	setMotorPWM@m^0,w,c
  9089   0037A0  26D9               	addwf	fsr2l,f,c
  9090   0037A2  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9091   0037A4  22DA               	addwfc	fsr2h,f,c
  9092   0037A6  50DF               	movf	indf2,w,c
  9093   0037A8  6E1C               	movwf	(??_setMotorPWM+1)^0,c
  9094   0037AA  5012               	movf	?___lwdiv^0,w,c
  9095   0037AC  5C1C               	subwf	(??_setMotorPWM+1)^0,w,c
  9096   0037AE  6E1D               	movwf	setMotorPWM@posDuty^0,c
  9097   0037B0                     
  9098                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  9099   0037B0  EE20 F003          	lfsr	2,3
  9100   0037B4  5019               	movf	setMotorPWM@m^0,w,c
  9101   0037B6  26D9               	addwf	fsr2l,f,c
  9102   0037B8  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9103   0037BA  22DA               	addwfc	fsr2h,f,c
  9104   0037BC  50DF               	movf	indf2,w,c
  9105   0037BE  6E1E               	movwf	setMotorPWM@negDuty^0,c
  9106                           
  9107                           ;dc_motor.c: 75:     }
  9108   0037C0  EF05  F01C         	goto	l2665
  9109   0037C4                     l2661:
  9110                           
  9111                           ;dc_motor.c: 77:         posDuty=0;
  9112   0037C4  0E00               	movlw	0
  9113   0037C6  6E1D               	movwf	setMotorPWM@posDuty^0,c
  9114   0037C8                     
  9115                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9116   0037C8  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  9117   0037CC  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9118   0037D0  50DF               	movf	indf2,w,c
  9119   0037D2  6E1B               	movwf	??_setMotorPWM^0,c
  9120   0037D4  501B               	movf	??_setMotorPWM^0,w,c
  9121   0037D6  6E0C               	movwf	___wmul@multiplier^0,c
  9122   0037D8  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  9123   0037DA  EE20 F003          	lfsr	2,3
  9124   0037DE  5019               	movf	setMotorPWM@m^0,w,c
  9125   0037E0  26D9               	addwf	fsr2l,f,c
  9126   0037E2  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9127   0037E4  22DA               	addwfc	fsr2h,f,c
  9128   0037E6  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  9129   0037EA  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  9130   0037EE  ECCC  F021         	call	___wmul	;wreg free
  9131   0037F2  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  9132   0037F6  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  9133   0037FA  0E00               	movlw	0
  9134   0037FC  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  9135   0037FE  0E64               	movlw	100
  9136   003800  6E14               	movwf	___lwdiv@divisor^0,c
  9137   003802  EC30  F020         	call	___lwdiv	;wreg free
  9138   003806  5012               	movf	?___lwdiv^0,w,c
  9139   003808  6E1E               	movwf	setMotorPWM@negDuty^0,c
  9140   00380A                     l2665:
  9141                           
  9142                           ;dc_motor.c: 81:     if (m->direction) {
  9143   00380A  EE20 F001          	lfsr	2,1
  9144   00380E  5019               	movf	setMotorPWM@m^0,w,c
  9145   003810  26D9               	addwf	fsr2l,f,c
  9146   003812  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9147   003814  22DA               	addwfc	fsr2h,f,c
  9148   003816  50DF               	movf	indf2,w,c
  9149   003818  B4D8               	btfsc	status,2,c
  9150   00381A  EF11  F01C         	goto	u1441
  9151   00381E  EF13  F01C         	goto	u1440
  9152   003822                     u1441:
  9153   003822  EF35  F01C         	goto	l2669
  9154   003826                     u1440:
  9155   003826                     
  9156                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  9157   003826  EE20 F005          	lfsr	2,5
  9158   00382A  5019               	movf	setMotorPWM@m^0,w,c
  9159   00382C  26D9               	addwf	fsr2l,f,c
  9160   00382E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9161   003830  22DA               	addwfc	fsr2h,f,c
  9162   003832  CFDE F01B          	movff	postinc2,??_setMotorPWM
  9163   003836  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  9164   00383A  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9165   00383E  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9166   003842  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  9167                           
  9168                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  9169   003846  EE20 F007          	lfsr	2,7
  9170   00384A  5019               	movf	setMotorPWM@m^0,w,c
  9171   00384C  26D9               	addwf	fsr2l,f,c
  9172   00384E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9173   003850  22DA               	addwfc	fsr2h,f,c
  9174   003852  CFDE F01B          	movff	postinc2,??_setMotorPWM
  9175   003856  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  9176   00385A  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9177   00385E  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9178   003862  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  9179                           
  9180                           ;dc_motor.c: 84:     } else {
  9181   003866  EF55  F01C         	goto	l516
  9182   00386A                     l2669:
  9183                           
  9184                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  9185   00386A  EE20 F005          	lfsr	2,5
  9186   00386E  5019               	movf	setMotorPWM@m^0,w,c
  9187   003870  26D9               	addwf	fsr2l,f,c
  9188   003872  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9189   003874  22DA               	addwfc	fsr2h,f,c
  9190   003876  CFDE F01B          	movff	postinc2,??_setMotorPWM
  9191   00387A  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  9192   00387E  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9193   003882  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9194   003886  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  9195                           
  9196                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  9197   00388A  EE20 F007          	lfsr	2,7
  9198   00388E  5019               	movf	setMotorPWM@m^0,w,c
  9199   003890  26D9               	addwf	fsr2l,f,c
  9200   003892  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9201   003894  22DA               	addwfc	fsr2h,f,c
  9202   003896  CFDE F01B          	movff	postinc2,??_setMotorPWM
  9203   00389A  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  9204   00389E  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9205   0038A2  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9206   0038A6  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  9207   0038AA                     l516:
  9208   0038AA  0012               	return		;funcret
  9209   0038AC                     __end_of_setMotorPWM:
  9210                           	callstack 0
  9211                           
  9212 ;; *************** function ___wmul *****************
  9213 ;; Defined at:
  9214 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  multiplier      2   11[COMRAM] unsigned int 
  9217 ;;  multiplicand    2   13[COMRAM] unsigned int 
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;  product         2   15[COMRAM] unsigned int 
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  2   11[COMRAM] unsigned int 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0, prodl, prodh
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9232 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9233 ;;Total ram usage:        6 bytes
  9234 ;; Hardware stack levels used: 1
  9235 ;; Hardware stack levels required when called: 5
  9236 ;; This function calls:
  9237 ;;		Nothing
  9238 ;; This function is called by:
  9239 ;;		_setMotorPWM
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           	psect	text36
  9244   004398                     __ptext36:
  9245                           	callstack 0
  9246   004398                     ___wmul:
  9247                           	callstack 23
  9248   004398  500C               	movf	___wmul@multiplier^0,w,c
  9249   00439A  020E               	mulwf	___wmul@multiplicand^0,c
  9250   00439C  CFF3 F010          	movff	prodl,___wmul@product
  9251   0043A0  CFF4 F011          	movff	prodh,___wmul@product+1
  9252   0043A4  500C               	movf	___wmul@multiplier^0,w,c
  9253   0043A6  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  9254   0043A8  50F3               	movf	243,w,c
  9255   0043AA  2611               	addwf	(___wmul@product+1)^0,f,c
  9256   0043AC  500D               	movf	(___wmul@multiplier+1)^0,w,c
  9257   0043AE  020E               	mulwf	___wmul@multiplicand^0,c
  9258   0043B0  50F3               	movf	243,w,c
  9259   0043B2  2611               	addwf	(___wmul@product+1)^0,f,c
  9260   0043B4  C010  F00C         	movff	___wmul@product,?___wmul
  9261   0043B8  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  9262   0043BC  0012               	return		;funcret
  9263   0043BE                     __end_of___wmul:
  9264                           	callstack 0
  9265                           
  9266 ;; *************** function ___lwdiv *****************
  9267 ;; Defined at:
  9268 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;  dividend        2   17[COMRAM] unsigned int 
  9271 ;;  divisor         2   19[COMRAM] unsigned int 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  quotient        2   21[COMRAM] unsigned int 
  9274 ;;  counter         1   23[COMRAM] unsigned char 
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  2   17[COMRAM] unsigned int 
  9277 ;; Registers used:
  9278 ;;		wreg, status,2, status,0
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9284 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9285 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9287 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9288 ;;Total ram usage:        7 bytes
  9289 ;; Hardware stack levels used: 1
  9290 ;; Hardware stack levels required when called: 5
  9291 ;; This function calls:
  9292 ;;		Nothing
  9293 ;; This function is called by:
  9294 ;;		_setMotorPWM
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	text37
  9299   004060                     __ptext37:
  9300                           	callstack 0
  9301   004060                     ___lwdiv:
  9302                           	callstack 23
  9303   004060  0E00               	movlw	0
  9304   004062  6E17               	movwf	(___lwdiv@quotient+1)^0,c
  9305   004064  0E00               	movlw	0
  9306   004066  6E16               	movwf	___lwdiv@quotient^0,c
  9307   004068  5014               	movf	___lwdiv@divisor^0,w,c
  9308   00406A  1015               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9309   00406C  B4D8               	btfsc	status,2,c
  9310   00406E  EF3B  F020         	goto	u1401
  9311   004072  EF3D  F020         	goto	u1400
  9312   004076                     u1401:
  9313   004076  EF65  F020         	goto	l1179
  9314   00407A                     u1400:
  9315   00407A  0E01               	movlw	1
  9316   00407C  6E18               	movwf	___lwdiv@counter^0,c
  9317   00407E  EF45  F020         	goto	l2629
  9318   004082                     l2627:
  9319   004082  90D8               	bcf	status,0,c
  9320   004084  3614               	rlcf	___lwdiv@divisor^0,f,c
  9321   004086  3615               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9322   004088  2A18               	incf	___lwdiv@counter^0,f,c
  9323   00408A                     l2629:
  9324   00408A  AE15               	btfss	(___lwdiv@divisor+1)^0,7,c
  9325   00408C  EF4A  F020         	goto	u1411
  9326   004090  EF4C  F020         	goto	u1410
  9327   004094                     u1411:
  9328   004094  EF41  F020         	goto	l2627
  9329   004098                     u1410:
  9330   004098                     l2631:
  9331   004098  90D8               	bcf	status,0,c
  9332   00409A  3616               	rlcf	___lwdiv@quotient^0,f,c
  9333   00409C  3617               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9334   00409E  5014               	movf	___lwdiv@divisor^0,w,c
  9335   0040A0  5C12               	subwf	___lwdiv@dividend^0,w,c
  9336   0040A2  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  9337   0040A4  5813               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9338   0040A6  A0D8               	btfss	status,0,c
  9339   0040A8  EF58  F020         	goto	u1421
  9340   0040AC  EF5A  F020         	goto	u1420
  9341   0040B0                     u1421:
  9342   0040B0  EF5F  F020         	goto	l2639
  9343   0040B4                     u1420:
  9344   0040B4  5014               	movf	___lwdiv@divisor^0,w,c
  9345   0040B6  5E12               	subwf	___lwdiv@dividend^0,f,c
  9346   0040B8  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  9347   0040BA  5A13               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9348   0040BC  8016               	bsf	___lwdiv@quotient^0,0,c
  9349   0040BE                     l2639:
  9350   0040BE  90D8               	bcf	status,0,c
  9351   0040C0  3215               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9352   0040C2  3214               	rrcf	___lwdiv@divisor^0,f,c
  9353   0040C4  2E18               	decfsz	___lwdiv@counter^0,f,c
  9354   0040C6  EF4C  F020         	goto	l2631
  9355   0040CA                     l1179:
  9356   0040CA  C016  F012         	movff	___lwdiv@quotient,?___lwdiv
  9357   0040CE  C017  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9358   0040D2  0012               	return		;funcret
  9359   0040D4                     __end_of___lwdiv:
  9360                           	callstack 0
  9361                           
  9362 ;; *************** function _batteryLevel *****************
  9363 ;; Defined at:
  9364 ;;		line 6 in file "battery.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;		None
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;  batteryQuart    1   20[COMRAM] unsigned char 
  9369 ;;  batteryVolta    1   19[COMRAM] unsigned char 
  9370 ;; Return value:  Size  Location     Type
  9371 ;;                  1    wreg      void 
  9372 ;; Registers used:
  9373 ;;		wreg, status,2, status,0, cstack
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9383 ;;Total ram usage:        2 bytes
  9384 ;; Hardware stack levels used: 1
  9385 ;; Hardware stack levels required when called: 6
  9386 ;; This function calls:
  9387 ;;		_ADC_getval
  9388 ;;		_ADC_init
  9389 ;;		___awdiv
  9390 ;; This function is called by:
  9391 ;;		_main
  9392 ;; This function uses a non-reentrant model
  9393 ;;
  9394                           
  9395                           	psect	text38
  9396   0041A0                     __ptext38:
  9397                           	callstack 0
  9398   0041A0                     _batteryLevel:
  9399                           	callstack 24
  9400   0041A0                     
  9401                           ;battery.c: 7:     ADC_init();
  9402   0041A0  EC56  F022         	call	_ADC_init	;wreg free
  9403                           
  9404                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
  9405   0041A4  EC63  F022         	call	_ADC_getval	;wreg free
  9406   0041A8  6E14               	movwf	batteryLevel@batteryVoltage^0,c
  9407   0041AA                     
  9408                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
  9409   0041AA  C014  F00C         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
  9410   0041AE  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  9411   0041B0  0E00               	movlw	0
  9412   0041B2  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  9413   0041B4  0E18               	movlw	24
  9414   0041B6  6E0E               	movwf	___awdiv@divisor^0,c
  9415   0041B8  EC77  F01E         	call	___awdiv	;wreg free
  9416   0041BC  500C               	movf	?___awdiv^0,w,c
  9417   0041BE  6E15               	movwf	batteryLevel@batteryQuarter^0,c
  9418   0041C0                     
  9419                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
  9420   0041C0  A215               	btfss	batteryLevel@batteryQuarter^0,1,c
  9421   0041C2  EFE5  F020         	goto	u1991
  9422   0041C6  EFE7  F020         	goto	u1990
  9423   0041CA                     u1991:
  9424   0041CA  EFEA  F020         	goto	l430
  9425   0041CE                     u1990:
  9426   0041CE  8E7C               	bsf	124,7,c	;volatile
  9427   0041D0  EFEB  F020         	goto	l431
  9428   0041D4                     l430:
  9429   0041D4  9E7C               	bcf	124,7,c	;volatile
  9430   0041D6                     l431:
  9431                           
  9432                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
  9433   0041D6  A015               	btfss	batteryLevel@batteryQuarter^0,0,c
  9434   0041D8  EFF0  F020         	goto	u2001
  9435   0041DC  EFF2  F020         	goto	u2000
  9436   0041E0                     u2001:
  9437   0041E0  EFF5  F020         	goto	l432
  9438   0041E4                     u2000:
  9439   0041E4  8680               	bsf	128,3,c	;volatile
  9440   0041E6  EFF6  F020         	goto	l434
  9441   0041EA                     l432:
  9442   0041EA  9680               	bcf	128,3,c	;volatile
  9443   0041EC                     l434:
  9444   0041EC  0012               	return		;funcret
  9445   0041EE                     __end_of_batteryLevel:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function ___awdiv *****************
  9449 ;; Defined at:
  9450 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  dividend        2   11[COMRAM] int 
  9453 ;;  divisor         2   13[COMRAM] int 
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;  quotient        2   17[COMRAM] int 
  9456 ;;  sign            1   16[COMRAM] unsigned char 
  9457 ;;  counter         1   15[COMRAM] unsigned char 
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  2   11[COMRAM] int 
  9460 ;; Registers used:
  9461 ;;		wreg, status,2, status,0
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/0
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9467 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9468 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9470 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9471 ;;Total ram usage:        8 bytes
  9472 ;; Hardware stack levels used: 1
  9473 ;; Hardware stack levels required when called: 5
  9474 ;; This function calls:
  9475 ;;		Nothing
  9476 ;; This function is called by:
  9477 ;;		_batteryLevel
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           	psect	text39
  9482   003CEE                     __ptext39:
  9483                           	callstack 0
  9484   003CEE                     ___awdiv:
  9485                           	callstack 24
  9486   003CEE  0E00               	movlw	0
  9487   003CF0  6E11               	movwf	___awdiv@sign^0,c
  9488   003CF2  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  9489   003CF4  EF80  F01E         	goto	u1930
  9490   003CF8  EF7E  F01E         	goto	u1931
  9491   003CFC                     u1931:
  9492   003CFC  EF86  F01E         	goto	l3183
  9493   003D00                     u1930:
  9494   003D00  6C0E               	negf	___awdiv@divisor^0,c
  9495   003D02  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  9496   003D04  B0D8               	btfsc	status,0,c
  9497   003D06  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  9498   003D08  0E01               	movlw	1
  9499   003D0A  6E11               	movwf	___awdiv@sign^0,c
  9500   003D0C                     l3183:
  9501   003D0C  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  9502   003D0E  EF8D  F01E         	goto	u1940
  9503   003D12  EF8B  F01E         	goto	u1941
  9504   003D16                     u1941:
  9505   003D16  EF93  F01E         	goto	l3189
  9506   003D1A                     u1940:
  9507   003D1A  6C0C               	negf	___awdiv@dividend^0,c
  9508   003D1C  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  9509   003D1E  B0D8               	btfsc	status,0,c
  9510   003D20  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  9511   003D22  0E01               	movlw	1
  9512   003D24  1A11               	xorwf	___awdiv@sign^0,f,c
  9513   003D26                     l3189:
  9514   003D26  0E00               	movlw	0
  9515   003D28  6E13               	movwf	(___awdiv@quotient+1)^0,c
  9516   003D2A  0E00               	movlw	0
  9517   003D2C  6E12               	movwf	___awdiv@quotient^0,c
  9518   003D2E  500E               	movf	___awdiv@divisor^0,w,c
  9519   003D30  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  9520   003D32  B4D8               	btfsc	status,2,c
  9521   003D34  EF9E  F01E         	goto	u1951
  9522   003D38  EFA0  F01E         	goto	u1950
  9523   003D3C                     u1951:
  9524   003D3C  EFC8  F01E         	goto	l3211
  9525   003D40                     u1950:
  9526   003D40  0E01               	movlw	1
  9527   003D42  6E10               	movwf	___awdiv@counter^0,c
  9528   003D44  EFA8  F01E         	goto	l3197
  9529   003D48                     l3195:
  9530   003D48  90D8               	bcf	status,0,c
  9531   003D4A  360E               	rlcf	___awdiv@divisor^0,f,c
  9532   003D4C  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  9533   003D4E  2A10               	incf	___awdiv@counter^0,f,c
  9534   003D50                     l3197:
  9535   003D50  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  9536   003D52  EFAD  F01E         	goto	u1961
  9537   003D56  EFAF  F01E         	goto	u1960
  9538   003D5A                     u1961:
  9539   003D5A  EFA4  F01E         	goto	l3195
  9540   003D5E                     u1960:
  9541   003D5E                     l3199:
  9542   003D5E  90D8               	bcf	status,0,c
  9543   003D60  3612               	rlcf	___awdiv@quotient^0,f,c
  9544   003D62  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  9545   003D64  500E               	movf	___awdiv@divisor^0,w,c
  9546   003D66  5C0C               	subwf	___awdiv@dividend^0,w,c
  9547   003D68  500F               	movf	(___awdiv@divisor+1)^0,w,c
  9548   003D6A  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  9549   003D6C  A0D8               	btfss	status,0,c
  9550   003D6E  EFBB  F01E         	goto	u1971
  9551   003D72  EFBD  F01E         	goto	u1970
  9552   003D76                     u1971:
  9553   003D76  EFC2  F01E         	goto	l3207
  9554   003D7A                     u1970:
  9555   003D7A  500E               	movf	___awdiv@divisor^0,w,c
  9556   003D7C  5E0C               	subwf	___awdiv@dividend^0,f,c
  9557   003D7E  500F               	movf	(___awdiv@divisor+1)^0,w,c
  9558   003D80  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  9559   003D82  8012               	bsf	___awdiv@quotient^0,0,c
  9560   003D84                     l3207:
  9561   003D84  90D8               	bcf	status,0,c
  9562   003D86  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  9563   003D88  320E               	rrcf	___awdiv@divisor^0,f,c
  9564   003D8A  2E10               	decfsz	___awdiv@counter^0,f,c
  9565   003D8C  EFAF  F01E         	goto	l3199
  9566   003D90                     l3211:
  9567   003D90  5011               	movf	___awdiv@sign^0,w,c
  9568   003D92  B4D8               	btfsc	status,2,c
  9569   003D94  EFCE  F01E         	goto	u1981
  9570   003D98  EFD0  F01E         	goto	u1980
  9571   003D9C                     u1981:
  9572   003D9C  EFD4  F01E         	goto	l3215
  9573   003DA0                     u1980:
  9574   003DA0  6C12               	negf	___awdiv@quotient^0,c
  9575   003DA2  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  9576   003DA4  B0D8               	btfsc	status,0,c
  9577   003DA6  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  9578   003DA8                     l3215:
  9579   003DA8  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  9580   003DAC  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  9581   003DB0  0012               	return		;funcret
  9582   003DB2                     __end_of___awdiv:
  9583                           	callstack 0
  9584                           
  9585 ;; *************** function _ADC_init *****************
  9586 ;; Defined at:
  9587 ;;		line 9 in file "ADC.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;		None
  9590 ;; Auto vars:     Size  Location     Type
  9591 ;;		None
  9592 ;; Return value:  Size  Location     Type
  9593 ;;                  1    wreg      void 
  9594 ;; Registers used:
  9595 ;;		wreg, status,2
  9596 ;; Tracked objects:
  9597 ;;		On entry : 0/0
  9598 ;;		On exit  : 0/0
  9599 ;;		Unchanged: 0/0
  9600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9605 ;;Total ram usage:        0 bytes
  9606 ;; Hardware stack levels used: 1
  9607 ;; Hardware stack levels required when called: 5
  9608 ;; This function calls:
  9609 ;;		Nothing
  9610 ;; This function is called by:
  9611 ;;		_batteryLevel
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615                           	psect	text40
  9616   0044AC                     __ptext40:
  9617                           	callstack 0
  9618   0044AC                     _ADC_init:
  9619                           	callstack 24
  9620   0044AC                     
  9621                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  9622   0044AC  8C86               	bsf	134,6,c	;volatile
  9623                           
  9624                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  9625   0044AE  010E               	movlb	14	; () banked
  9626   0044B0  8DB4               	bsf	180,6,b	;volatile
  9627                           
  9628                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  9629   0044B2  010F               	movlb	15	; () banked
  9630   0044B4  9958               	bcf	88,4,b	;volatile
  9631   0044B6                     
  9632                           ; BSR set to: 15
  9633                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  9634   0044B6  0EFC               	movlw	-4
  9635   0044B8  1758               	andwf	88,f,b	;volatile
  9636                           
  9637                           ;ADC.c: 17:     ADPCH=0b101110;
  9638   0044BA  0E2E               	movlw	46
  9639   0044BC  6F5F               	movwf	95,b	;volatile
  9640   0044BE                     
  9641                           ; BSR set to: 15
  9642                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  9643   0044BE  9460               	bcf	96,2,c	;volatile
  9644   0044C0                     
  9645                           ; BSR set to: 15
  9646                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  9647   0044C0  8860               	bsf	96,4,c	;volatile
  9648   0044C2                     
  9649                           ; BSR set to: 15
  9650                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  9651   0044C2  8E60               	bsf	96,7,c	;volatile
  9652   0044C4                     
  9653                           ; BSR set to: 15
  9654   0044C4  0012               	return		;funcret
  9655   0044C6                     __end_of_ADC_init:
  9656                           	callstack 0
  9657                           
  9658 ;; *************** function _ADC_getval *****************
  9659 ;; Defined at:
  9660 ;;		line 23 in file "ADC.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;		None
  9663 ;; Auto vars:     Size  Location     Type
  9664 ;;  tmpval          1   11[COMRAM] unsigned char 
  9665 ;; Return value:  Size  Location     Type
  9666 ;;                  1    wreg      unsigned char 
  9667 ;; Registers used:
  9668 ;;		wreg, status,2
  9669 ;; Tracked objects:
  9670 ;;		On entry : 0/0
  9671 ;;		On exit  : 0/0
  9672 ;;		Unchanged: 0/0
  9673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9677 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9678 ;;Total ram usage:        1 bytes
  9679 ;; Hardware stack levels used: 1
  9680 ;; Hardware stack levels required when called: 5
  9681 ;; This function calls:
  9682 ;;		Nothing
  9683 ;; This function is called by:
  9684 ;;		_batteryLevel
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           	psect	text41
  9689   0044C6                     __ptext41:
  9690                           	callstack 0
  9691   0044C6                     _ADC_getval:
  9692                           	callstack 24
  9693   0044C6                     
  9694                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  9695   0044C6  8060               	bsf	96,0,c	;volatile
  9696   0044C8                     l416:
  9697   0044C8  B060               	btfsc	96,0,c	;volatile
  9698   0044CA  EF69  F022         	goto	u1791
  9699   0044CE  EF6B  F022         	goto	u1790
  9700   0044D2                     u1791:
  9701   0044D2  EF64  F022         	goto	l416
  9702   0044D6                     u1790:
  9703   0044D6                     
  9704                           ;ADC.c: 31:     tmpval = ADRESH;
  9705   0044D6  CF64 F00C          	movff	3940,ADC_getval@tmpval	;volatile
  9706   0044DA                     
  9707                           ;ADC.c: 35:     return tmpval;
  9708   0044DA  500C               	movf	ADC_getval@tmpval^0,w,c
  9709   0044DC  0012               	return		;funcret
  9710   0044DE                     __end_of_ADC_getval:
  9711                           	callstack 0
  9712                           
  9713 ;; *************** function _Timer0_init *****************
  9714 ;; Defined at:
  9715 ;;		line 7 in file "timers.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;		None
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;		None
  9720 ;; Return value:  Size  Location     Type
  9721 ;;                  1    wreg      void 
  9722 ;; Registers used:
  9723 ;;		wreg, status,2
  9724 ;; Tracked objects:
  9725 ;;		On entry : 0/0
  9726 ;;		On exit  : 0/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9733 ;;Total ram usage:        0 bytes
  9734 ;; Hardware stack levels used: 1
  9735 ;; Hardware stack levels required when called: 5
  9736 ;; This function calls:
  9737 ;;		Nothing
  9738 ;; This function is called by:
  9739 ;;		_main
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           	psect	text42
  9744   00444E                     __ptext42:
  9745                           	callstack 0
  9746   00444E                     _Timer0_init:
  9747                           	callstack 25
  9748   00444E                     
  9749                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  9750   00444E  50D6               	movf	214,w,c	;volatile
  9751   004450  0B1F               	andlw	-225
  9752   004452  0940               	iorlw	64
  9753   004454  6ED6               	movwf	214,c	;volatile
  9754   004456                     
  9755                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  9756   004456  88D6               	bsf	214,4,c	;volatile
  9757                           
  9758                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
  9759   004458  50D6               	movf	214,w,c	;volatile
  9760   00445A  0BF0               	andlw	-16
  9761   00445C  090B               	iorlw	11
  9762   00445E  6ED6               	movwf	214,c	;volatile
  9763   004460                     
  9764                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  9765   004460  88D5               	bsf	213,4,c	;volatile
  9766                           
  9767                           ;timers.c: 15:     TMR0H=0;
  9768   004462  0E00               	movlw	0
  9769   004464  6ED4               	movwf	212,c	;volatile
  9770                           
  9771                           ;timers.c: 16:     TMR0L=0;
  9772   004466  0E00               	movlw	0
  9773   004468  6ED3               	movwf	211,c	;volatile
  9774   00446A                     
  9775                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  9776   00446A  8ED5               	bsf	213,7,c	;volatile
  9777   00446C  0012               	return		;funcret
  9778   00446E                     __end_of_Timer0_init:
  9779                           	callstack 0
  9780                           
  9781 ;; *************** function _Buggy_init *****************
  9782 ;; Defined at:
  9783 ;;		line 7 in file "buggysetup.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;		None
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1    wreg      void 
  9790 ;; Registers used:
  9791 ;;		None
  9792 ;; Tracked objects:
  9793 ;;		On entry : 0/0
  9794 ;;		On exit  : 0/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9801 ;;Total ram usage:        0 bytes
  9802 ;; Hardware stack levels used: 1
  9803 ;; Hardware stack levels required when called: 5
  9804 ;; This function calls:
  9805 ;;		Nothing
  9806 ;; This function is called by:
  9807 ;;		_main
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text43
  9812   004268                     __ptext43:
  9813                           	callstack 0
  9814   004268                     _Buggy_init:
  9815                           	callstack 25
  9816   004268                     
  9817                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
  9818   004268  9E7C               	bcf	124,7,c	;volatile
  9819                           
  9820                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
  9821   00426A  9E84               	bcf	132,7,c	;volatile
  9822                           
  9823                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
  9824   00426C  9680               	bcf	128,3,c	;volatile
  9825                           
  9826                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
  9827   00426E  9688               	bcf	136,3,c	;volatile
  9828                           
  9829                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
  9830   004270  8486               	bsf	134,2,c	;volatile
  9831                           
  9832                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
  9833   004272  010E               	movlb	14	; () banked
  9834   004274  95B4               	bcf	180,2,b	;volatile
  9835                           
  9836                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
  9837   004276  8686               	bsf	134,3,c	;volatile
  9838                           
  9839                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
  9840   004278  97B4               	bcf	180,3,b	;volatile
  9841                           
  9842                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
  9843   00427A  9280               	bcf	128,1,c	;volatile
  9844                           
  9845                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
  9846   00427C  9288               	bcf	136,1,c	;volatile
  9847                           
  9848                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
  9849   00427E  987C               	bcf	124,4,c	;volatile
  9850                           
  9851                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
  9852   004280  9884               	bcf	132,4,c	;volatile
  9853                           
  9854                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
  9855   004282  967C               	bcf	124,3,c	;volatile
  9856                           
  9857                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
  9858   004284  9684               	bcf	132,3,c	;volatile
  9859                           
  9860                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
  9861   004286  97A7               	bcf	167,3,b	;volatile
  9862                           
  9863                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
  9864   004288  9080               	bcf	128,0,c	;volatile
  9865                           
  9866                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
  9867   00428A  9088               	bcf	136,0,c	;volatile
  9868                           
  9869                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
  9870   00428C  907E               	bcf	126,0,c	;volatile
  9871                           
  9872                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
  9873   00428E  9086               	bcf	134,0,c	;volatile
  9874                           
  9875                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
  9876   004290  907F               	bcf	127,0,c	;volatile
  9877                           
  9878                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
  9879   004292  9087               	bcf	135,0,c	;volatile
  9880                           
  9881                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
  9882   004294  9E7D               	bcf	125,7,c	;volatile
  9883                           
  9884                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
  9885   004296  9E85               	bcf	133,7,c	;volatile
  9886                           
  9887                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
  9888   004298  9679               	bcf	121,3,c	;volatile
  9889                           
  9890                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
  9891   00429A  9681               	bcf	129,3,c	;volatile
  9892   00429C                     
  9893                           ; BSR set to: 14
  9894   00429C  0012               	return		;funcret
  9895   00429E                     __end_of_Buggy_init:
  9896                           	callstack 0
  9897                           
  9898 ;; *************** function _HighISR *****************
  9899 ;; Defined at:
  9900 ;;		line 33 in file "interrupts.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;		None
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;		None
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  1    wreg      void 
  9907 ;; Registers used:
  9908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/0
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9918 ;;Total ram usage:        2 bytes
  9919 ;; Hardware stack levels used: 1
  9920 ;; Hardware stack levels required when called: 4
  9921 ;; This function calls:
  9922 ;;		_getCharFromTxBuf
  9923 ;;		_isDataInTxBuf
  9924 ;;		_putCharToRxBuf
  9925 ;;		i2_color_clear_init_interrupts
  9926 ;; This function is called by:
  9927 ;;		Interrupt level 2
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           	psect	intcode
  9932   000008                     __pintcode:
  9933                           	callstack 0
  9934   000008                     _HighISR:
  9935                           	callstack 21
  9936                           
  9937                           ; BSR set to: 14
  9938                           ;incstack = 0
  9939   000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9940   00000A  CFD9 F00A          	movff	fsr2l,??_HighISR
  9941   00000E  CFDA F00B          	movff	fsr2h,??_HighISR+1
  9942   000012                     
  9943                           ;interrupts.c: 37:     if(PIR0bits.INT0IF){
  9944   000012  010E               	movlb	14	; () banked
  9945   000014  A133               	btfss	51,0,b	;volatile
  9946   000016  EF0F  F000         	goto	i2u267_41
  9947   00001A  EF11  F000         	goto	i2u267_40
  9948   00001E                     i2u267_41:
  9949   00001E  EF18  F000         	goto	i2l3817
  9950   000022                     i2u267_40:
  9951   000022                     
  9952                           ; BSR set to: 14
  9953                           ;interrupts.c: 38:         wall = 1;
  9954   000022  0E01               	movlw	1
  9955   000024  0100               	movlb	0	; () banked
  9956   000026  6FB1               	movwf	_wall& (0+255),b
  9957   000028                     
  9958                           ; BSR set to: 0
  9959                           ;interrupts.c: 39:         color_clear_init_interrupts();
  9960   000028  ECF3  F01F         	call	i2_color_clear_init_interrupts	;wreg free
  9961   00002C                     
  9962                           ;interrupts.c: 40:         PIR0bits.INT0IF = 0;
  9963   00002C  010E               	movlb	14	; () banked
  9964   00002E  9133               	bcf	51,0,b	;volatile
  9965   000030                     i2l3817:
  9966                           
  9967                           ; BSR set to: 14
  9968                           ;interrupts.c: 47:     if(TMR0IF){
  9969   000030  AB33               	btfss	51,5,b	;volatile
  9970   000032  EF1D  F000         	goto	i2u268_41
  9971   000036  EF1F  F000         	goto	i2u268_40
  9972   00003A                     i2u268_41:
  9973   00003A  EF24  F000         	goto	i2l3823
  9974   00003E                     i2u268_40:
  9975   00003E                     
  9976                           ; BSR set to: 14
  9977                           ;interrupts.c: 48:         lost = 1;
  9978   00003E  0E01               	movlw	1
  9979   000040  0100               	movlb	0	; () banked
  9980   000042  6FB0               	movwf	_lost& (0+255),b
  9981   000044                     
  9982                           ; BSR set to: 0
  9983                           ;interrupts.c: 49:         TMR0IF=0;
  9984   000044  010E               	movlb	14	; () banked
  9985   000046  9B33               	bcf	51,5,b	;volatile
  9986   000048                     i2l3823:
  9987                           
  9988                           ; BSR set to: 14
  9989                           ;interrupts.c: 56:     if(PIR4bits.RC4IF){
  9990   000048  A737               	btfss	55,3,b	;volatile
  9991   00004A  EF29  F000         	goto	i2u269_41
  9992   00004E  EF2B  F000         	goto	i2u269_40
  9993   000052                     i2u269_41:
  9994   000052  EF2E  F000         	goto	i2l3827
  9995   000056                     i2u269_40:
  9996   000056                     
  9997                           ; BSR set to: 14
  9998                           ;interrupts.c: 58:         putCharToRxBuf(RC4REG);
  9999   000056  51E3               	movf	227,w,b	;volatile
 10000   000058  ECDF  F021         	call	_putCharToRxBuf
 10001   00005C                     i2l3827:
 10002                           
 10003                           ;interrupts.c: 62:     if(PIR4bits.TX4IF){
 10004   00005C  010E               	movlb	14	; () banked
 10005   00005E  A537               	btfss	55,2,b	;volatile
 10006   000060  EF34  F000         	goto	i2u270_41
 10007   000064  EF36  F000         	goto	i2u270_40
 10008   000068                     i2u270_41:
 10009   000068  EF46  F000         	goto	i2l335
 10010   00006C                     i2u270_40:
 10011   00006C                     
 10012                           ; BSR set to: 14
 10013                           ;interrupts.c: 64:         TX4REG = getCharFromTxBuf();
 10014   00006C  ECF2  F021         	call	_getCharFromTxBuf	;wreg free
 10015   000070  010E               	movlb	14	; () banked
 10016   000072  6FE4               	movwf	228,b	;volatile
 10017   000074                     
 10018                           ; BSR set to: 14
 10019                           ;interrupts.c: 65:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
 10020   000074  EC6F  F022         	call	_isDataInTxBuf	;wreg free
 10021   000078  0900               	iorlw	0
 10022   00007A  A4D8               	btfss	status,2,c
 10023   00007C  EF42  F000         	goto	i2u271_41
 10024   000080  EF44  F000         	goto	i2u271_40
 10025   000084                     i2u271_41:
 10026   000084  EF46  F000         	goto	i2l335
 10027   000088                     i2u271_40:
 10028   000088  010E               	movlb	14	; () banked
 10029   00008A  952D               	bcf	45,2,b	;volatile
 10030   00008C                     i2l335:
 10031   00008C  C00B  FFDA         	movff	??_HighISR+1,fsr2h
 10032   000090  C00A  FFD9         	movff	??_HighISR,fsr2l
 10033   000094  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10034   000096  0011               	retfie		f
 10035   000098                     __end_of_HighISR:
 10036                           	callstack 0
 10037                           
 10038 ;; *************** function i2_color_clear_init_interrupts *****************
 10039 ;; Defined at:
 10040 ;;		line 27 in file "color.c"
 10041 ;; Parameters:    Size  Location     Type
 10042 ;;		None
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;  low_threshol    2    7[COMRAM] unsigned int 
 10045 ;;  high_thresho    2    5[COMRAM] unsigned int 
 10046 ;; Return value:  Size  Location     Type
 10047 ;;                  1    wreg      void 
 10048 ;; Registers used:
 10049 ;;		wreg, status,2, status,0, cstack
 10050 ;; Tracked objects:
 10051 ;;		On entry : 0/0
 10052 ;;		On exit  : 0/0
 10053 ;;		Unchanged: 0/0
 10054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10056 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10058 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10059 ;;Total ram usage:        5 bytes
 10060 ;; Hardware stack levels used: 1
 10061 ;; Hardware stack levels required when called: 3
 10062 ;; This function calls:
 10063 ;;		i2_I2C_2_Master_Start
 10064 ;;		i2_I2C_2_Master_Stop
 10065 ;;		i2_I2C_2_Master_Write
 10066 ;;		i2_color_writetoaddr
 10067 ;; This function is called by:
 10068 ;;		_HighISR
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text45
 10073   003FE6                     __ptext45:
 10074                           	callstack 0
 10075   003FE6                     i2_color_clear_init_interrupts:
 10076                           	callstack 21
 10077   003FE6                     
 10078                           ;color.c: 29:     I2C_2_Master_Start();
 10079   003FE6  ECA0  F022         	call	i2_I2C_2_Master_Start	;wreg free
 10080                           
 10081                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
 10082   003FEA  0E52               	movlw	82
 10083   003FEC  EC81  F022         	call	i2_I2C_2_Master_Write
 10084                           
 10085                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
 10086   003FF0  0EE6               	movlw	230
 10087   003FF2  EC81  F022         	call	i2_I2C_2_Master_Write
 10088                           
 10089                           ;color.c: 32:     I2C_2_Master_Stop();
 10090   003FF6  EC9B  F022         	call	i2_I2C_2_Master_Stop	;wreg free
 10091   003FFA                     
 10092                           ;color.c: 35:     unsigned int high_threshold = ambient + 12;
 10093   003FFA  0E0C               	movlw	12
 10094   003FFC  244E               	addwf	_ambient^0,w,c
 10095   003FFE  6E06               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
 10096   004000  0E00               	movlw	0
 10097   004002  204F               	addwfc	(_ambient+1)^0,w,c
 10098   004004  6E07               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
 10099   004006                     
 10100                           ;color.c: 36:     unsigned int low_threshold = ambient - 12;
 10101   004006  0EF4               	movlw	244
 10102   004008  244E               	addwf	_ambient^0,w,c
 10103   00400A  6E08               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
 10104   00400C  0EFF               	movlw	255
 10105   00400E  204F               	addwfc	(_ambient+1)^0,w,c
 10106   004010  6E09               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
 10107                           
 10108                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
 10109   004012  0E13               	movlw	19
 10110   004014  6E03               	movwf	i2color_writetoaddr@value^0,c
 10111   004016  0E00               	movlw	0
 10112   004018  EC37  F022         	call	i2_color_writetoaddr
 10113   00401C                     
 10114                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10115   00401C  0E3F               	movlw	63
 10116   00401E  6E05               	movwf	??i2_color_clear_init_interrupts^0,c
 10117   004020  0E55               	movlw	85
 10118   004022                     i2u417_47:
 10119   004022  2EE8               	decfsz	wreg,f,c
 10120   004024  D7FE               	bra	i2u417_47
 10121   004026  2E05               	decfsz	??i2_color_clear_init_interrupts^0,f,c
 10122   004028  D7FC               	bra	i2u417_47
 10123   00402A  0000               	nop	
 10124   00402C                     
 10125                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
 10126   00402C  5007               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
 10127   00402E  6E03               	movwf	i2color_writetoaddr@value^0,c
 10128   004030  0E07               	movlw	7
 10129   004032  EC37  F022         	call	i2_color_writetoaddr
 10130   004036                     
 10131                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
 10132   004036  C006  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
 10133   00403A  0E06               	movlw	6
 10134   00403C  EC37  F022         	call	i2_color_writetoaddr
 10135   004040                     
 10136                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
 10137   004040  5009               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
 10138   004042  6E03               	movwf	i2color_writetoaddr@value^0,c
 10139   004044  0E05               	movlw	5
 10140   004046  EC37  F022         	call	i2_color_writetoaddr
 10141   00404A                     
 10142                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
 10143   00404A  C008  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
 10144   00404E  0E04               	movlw	4
 10145   004050  EC37  F022         	call	i2_color_writetoaddr
 10146   004054                     
 10147                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
 10148   004054  0E04               	movlw	4
 10149   004056  6E03               	movwf	i2color_writetoaddr@value^0,c
 10150   004058  0E0C               	movlw	12
 10151   00405A  EC37  F022         	call	i2_color_writetoaddr
 10152   00405E  0012               	return		;funcret
 10153   004060                     __end_ofi2_color_clear_init_interrupts:
 10154                           	callstack 0
 10155                           
 10156 ;; *************** function i2_color_writetoaddr *****************
 10157 ;; Defined at:
 10158 ;;		line 50 in file "color.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;  address         1    wreg     unsigned char 
 10161 ;;  value           1    2[COMRAM] unsigned char 
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;  address         1    3[COMRAM] unsigned char 
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  1    wreg      void 
 10166 ;; Registers used:
 10167 ;;		wreg, status,2, status,0, cstack
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10173 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10177 ;;Total ram usage:        2 bytes
 10178 ;; Hardware stack levels used: 1
 10179 ;; Hardware stack levels required when called: 2
 10180 ;; This function calls:
 10181 ;;		i2_I2C_2_Master_Start
 10182 ;;		i2_I2C_2_Master_Stop
 10183 ;;		i2_I2C_2_Master_Write
 10184 ;; This function is called by:
 10185 ;;		i2_color_clear_init_interrupts
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           	psect	text46
 10190   00446E                     __ptext46:
 10191                           	callstack 0
 10192   00446E                     i2_color_writetoaddr:
 10193                           	callstack 21
 10194                           
 10195                           ;incstack = 0
 10196                           ;i2color_writetoaddr@address stored from wreg
 10197   00446E  6E04               	movwf	i2color_writetoaddr@address^0,c
 10198   004470                     
 10199                           ;color.c: 51:     I2C_2_Master_Start();
 10200   004470  ECA0  F022         	call	i2_I2C_2_Master_Start	;wreg free
 10201                           
 10202                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
 10203   004474  0E52               	movlw	82
 10204   004476  EC81  F022         	call	i2_I2C_2_Master_Write
 10205                           
 10206                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
 10207   00447A  5004               	movf	i2color_writetoaddr@address^0,w,c
 10208   00447C  0980               	iorlw	128
 10209   00447E  EC81  F022         	call	i2_I2C_2_Master_Write
 10210                           
 10211                           ;color.c: 54:     I2C_2_Master_Write(value);
 10212   004482  5003               	movf	i2color_writetoaddr@value^0,w,c
 10213   004484  EC81  F022         	call	i2_I2C_2_Master_Write
 10214                           
 10215                           ;color.c: 55:     I2C_2_Master_Stop();
 10216   004488  EC9B  F022         	call	i2_I2C_2_Master_Stop	;wreg free
 10217   00448C  0012               	return		;funcret
 10218   00448E                     __end_ofi2_color_writetoaddr:
 10219                           	callstack 0
 10220                           
 10221 ;; *************** function i2_I2C_2_Master_Write *****************
 10222 ;; Defined at:
 10223 ;;		line 45 in file "i2c.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;  data_byte       1    wreg     unsigned char 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;  data_byte       1    1[COMRAM] unsigned char 
 10228 ;; Return value:  Size  Location     Type
 10229 ;;                  1    wreg      void 
 10230 ;; Registers used:
 10231 ;;		wreg, status,2, status,0, cstack
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10240 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10241 ;;Total ram usage:        1 bytes
 10242 ;; Hardware stack levels used: 1
 10243 ;; Hardware stack levels required when called: 1
 10244 ;; This function calls:
 10245 ;;		i2_I2C_2_Master_Idle
 10246 ;; This function is called by:
 10247 ;;		i2_color_clear_init_interrupts
 10248 ;;		i2_color_writetoaddr
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text47
 10253   004502                     __ptext47:
 10254                           	callstack 0
 10255   004502                     i2_I2C_2_Master_Write:
 10256                           	callstack 21
 10257                           
 10258                           ;incstack = 0
 10259                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 10260   004502  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 10261   004504                     
 10262                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10263   004504  ECB8  F021         	call	i2_I2C_2_Master_Idle	;wreg free
 10264   004508                     
 10265                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10266   004508  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 10267   00450C  0012               	return		;funcret
 10268   00450E                     __end_ofi2_I2C_2_Master_Write:
 10269                           	callstack 0
 10270                           
 10271 ;; *************** function i2_I2C_2_Master_Stop *****************
 10272 ;; Defined at:
 10273 ;;		line 39 in file "i2c.c"
 10274 ;; Parameters:    Size  Location     Type
 10275 ;;		None
 10276 ;; Auto vars:     Size  Location     Type
 10277 ;;		None
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  1    wreg      void 
 10280 ;; Registers used:
 10281 ;;		wreg, status,2, status,0, cstack
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10291 ;;Total ram usage:        0 bytes
 10292 ;; Hardware stack levels used: 1
 10293 ;; Hardware stack levels required when called: 1
 10294 ;; This function calls:
 10295 ;;		i2_I2C_2_Master_Idle
 10296 ;; This function is called by:
 10297 ;;		i2_color_clear_init_interrupts
 10298 ;;		i2_color_writetoaddr
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           	psect	text48
 10303   004536                     __ptext48:
 10304                           	callstack 0
 10305   004536                     i2_I2C_2_Master_Stop:
 10306                           	callstack 21
 10307   004536                     
 10308                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10309   004536  ECB8  F021         	call	i2_I2C_2_Master_Idle	;wreg free
 10310   00453A                     
 10311                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10312   00453A  010E               	movlb	14	; () banked
 10313   00453C  85DA               	bsf	218,2,b	;volatile
 10314   00453E                     
 10315                           ; BSR set to: 14
 10316   00453E  0012               	return		;funcret
 10317   004540                     __end_ofi2_I2C_2_Master_Stop:
 10318                           	callstack 0
 10319                           
 10320 ;; *************** function i2_I2C_2_Master_Start *****************
 10321 ;; Defined at:
 10322 ;;		line 27 in file "i2c.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;		None
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;		None
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      void 
 10329 ;; Registers used:
 10330 ;;		wreg, status,2, status,0, cstack
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10340 ;;Total ram usage:        0 bytes
 10341 ;; Hardware stack levels used: 1
 10342 ;; Hardware stack levels required when called: 1
 10343 ;; This function calls:
 10344 ;;		i2_I2C_2_Master_Idle
 10345 ;; This function is called by:
 10346 ;;		i2_color_clear_init_interrupts
 10347 ;;		i2_color_writetoaddr
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           	psect	text49
 10352   004540                     __ptext49:
 10353                           	callstack 0
 10354   004540                     i2_I2C_2_Master_Start:
 10355                           	callstack 21
 10356   004540                     
 10357                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10358   004540  ECB8  F021         	call	i2_I2C_2_Master_Idle	;wreg free
 10359   004544                     
 10360                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10361   004544  010E               	movlb	14	; () banked
 10362   004546  81DA               	bsf	218,0,b	;volatile
 10363   004548                     
 10364                           ; BSR set to: 14
 10365   004548  0012               	return		;funcret
 10366   00454A                     __end_ofi2_I2C_2_Master_Start:
 10367                           	callstack 0
 10368                           
 10369 ;; *************** function i2_I2C_2_Master_Idle *****************
 10370 ;; Defined at:
 10371 ;;		line 22 in file "i2c.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;		None
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;		None
 10376 ;; Return value:  Size  Location     Type
 10377 ;;                  1    wreg      void 
 10378 ;; Registers used:
 10379 ;;		wreg, status,2, status,0
 10380 ;; Tracked objects:
 10381 ;;		On entry : 0/0
 10382 ;;		On exit  : 0/0
 10383 ;;		Unchanged: 0/0
 10384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10387 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10389 ;;Total ram usage:        1 bytes
 10390 ;; Hardware stack levels used: 1
 10391 ;; This function calls:
 10392 ;;		Nothing
 10393 ;; This function is called by:
 10394 ;;		i2_I2C_2_Master_Start
 10395 ;;		i2_I2C_2_Master_Stop
 10396 ;;		i2_I2C_2_Master_Write
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           
 10400                           	psect	text50
 10401   004370                     __ptext50:
 10402                           	callstack 0
 10403   004370                     i2_I2C_2_Master_Idle:
 10404                           	callstack 21
 10405   004370                     i2l225:
 10406   004370  010E               	movlb	14	; () banked
 10407   004372  B5D8               	btfsc	216,2,b	;volatile
 10408   004374  EFBE  F021         	goto	i2u145_41
 10409   004378  EFC0  F021         	goto	i2u145_40
 10410   00437C                     i2u145_41:
 10411   00437C  EFB8  F021         	goto	i2l225
 10412   004380                     i2u145_40:
 10413   004380                     
 10414                           ; BSR set to: 14
 10415   004380  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 10416   004384  0E1F               	movlw	31
 10417   004386  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 10418   004388  A4D8               	btfss	status,2,c
 10419   00438A  EFC9  F021         	goto	i2u146_41
 10420   00438E  EFCB  F021         	goto	i2u146_40
 10421   004392                     i2u146_41:
 10422   004392  EFB8  F021         	goto	i2l225
 10423   004396                     i2u146_40:
 10424   004396                     
 10425                           ; BSR set to: 14
 10426   004396  0012               	return		;funcret
 10427   004398                     __end_ofi2_I2C_2_Master_Idle:
 10428                           	callstack 0
 10429                           
 10430 ;; *************** function _putCharToRxBuf *****************
 10431 ;; Defined at:
 10432 ;;		line 33 in file "serial.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  byte            1    wreg     unsigned char 
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;  byte            1    0[COMRAM] unsigned char 
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  1    wreg      void 
 10439 ;; Registers used:
 10440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10449 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10450 ;;Total ram usage:        1 bytes
 10451 ;; Hardware stack levels used: 1
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		_HighISR
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           	psect	text51
 10460   0043BE                     __ptext51:
 10461                           	callstack 0
 10462   0043BE                     _putCharToRxBuf:
 10463                           	callstack 24
 10464                           
 10465                           ; BSR set to: 14
 10466                           ;incstack = 0
 10467                           ;putCharToRxBuf@byte stored from wreg
 10468   0043BE  6E01               	movwf	putCharToRxBuf@byte^0,c
 10469   0043C0                     
 10470                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
 10471   0043C0  0E13               	movlw	19
 10472   0043C2  644D               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
 10473   0043C4  EFE6  F021         	goto	i2u241_41
 10474   0043C8  EFE8  F021         	goto	i2u241_40
 10475   0043CC                     i2u241_41:
 10476   0043CC  EFEA  F021         	goto	i2l3631
 10477   0043D0                     i2u241_40:
 10478   0043D0  0E00               	movlw	0
 10479   0043D2  6E4D               	movwf	_RxBufWriteCnt^0,c	;volatile
 10480   0043D4                     i2l3631:
 10481                           
 10482                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
 10483   0043D4  504D               	movf	_RxBufWriteCnt^0,w,c
 10484   0043D6  0F9C               	addlw	low _EUSART4RXbuf
 10485   0043D8  6ED9               	movwf	fsr2l,c
 10486   0043DA  6ADA               	clrf	fsr2h,c
 10487   0043DC  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
 10488   0043E0  2A4D               	incf	_RxBufWriteCnt^0,f,c	;volatile
 10489   0043E2  0012               	return		;funcret
 10490   0043E4                     __end_of_putCharToRxBuf:
 10491                           	callstack 0
 10492                           
 10493 ;; *************** function _isDataInTxBuf *****************
 10494 ;; Defined at:
 10495 ;;		line 61 in file "serial.c"
 10496 ;; Parameters:    Size  Location     Type
 10497 ;;		None
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;		None
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  1    wreg      unsigned char 
 10502 ;; Registers used:
 10503 ;;		wreg, status,2, status,0
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10513 ;;Total ram usage:        0 bytes
 10514 ;; Hardware stack levels used: 1
 10515 ;; This function calls:
 10516 ;;		Nothing
 10517 ;; This function is called by:
 10518 ;;		_HighISR
 10519 ;;		_sendTxBuf
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523                           	psect	text52
 10524   0044DE                     __ptext52:
 10525                           	callstack 0
 10526   0044DE                     _isDataInTxBuf:
 10527                           	callstack 24
 10528   0044DE                     
 10529                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
 10530   0044DE  504A               	movf	_TxBufReadCnt^0,w,c	;volatile
 10531   0044E0  184B               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
 10532   0044E2  A4D8               	btfss	status,2,c
 10533   0044E4  EF76  F022         	goto	i2u243_41
 10534   0044E8  EF79  F022         	goto	i2u243_40
 10535   0044EC                     i2u243_41:
 10536   0044EC  0E01               	movlw	1
 10537   0044EE  EF7A  F022         	goto	i2u244_40
 10538   0044F2                     i2u243_40:
 10539   0044F2  0E00               	movlw	0
 10540   0044F4                     i2u244_40:
 10541   0044F4  0012               	return		;funcret
 10542   0044F6                     __end_of_isDataInTxBuf:
 10543                           	callstack 0
 10544                           
 10545 ;; *************** function _getCharFromTxBuf *****************
 10546 ;; Defined at:
 10547 ;;		line 47 in file "serial.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;		None
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;		None
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  1    wreg      unsigned char 
 10554 ;; Registers used:
 10555 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10565 ;;Total ram usage:        1 bytes
 10566 ;; Hardware stack levels used: 1
 10567 ;; This function calls:
 10568 ;;		Nothing
 10569 ;; This function is called by:
 10570 ;;		_HighISR
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           	psect	text53
 10575   0043E4                     __ptext53:
 10576                           	callstack 0
 10577   0043E4                     _getCharFromTxBuf:
 10578                           	callstack 24
 10579   0043E4                     
 10580                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
 10581   0043E4  0E3B               	movlw	59
 10582   0043E6  644A               	cpfsgt	_TxBufReadCnt^0,c	;volatile
 10583   0043E8  EFF8  F021         	goto	i2u242_41
 10584   0043EC  EFFA  F021         	goto	i2u242_40
 10585   0043F0                     i2u242_41:
 10586   0043F0  EFFC  F021         	goto	i2l3639
 10587   0043F4                     i2u242_40:
 10588   0043F4  0E00               	movlw	0
 10589   0043F6  6E4A               	movwf	_TxBufReadCnt^0,c	;volatile
 10590   0043F8                     i2l3639:
 10591                           
 10592                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
 10593   0043F8  2A4A               	incf	_TxBufReadCnt^0,f,c	;volatile
 10594   0043FA  044A               	decf	_TxBufReadCnt^0,w,c	;volatile
 10595   0043FC  6E01               	movwf	??_getCharFromTxBuf^0,c
 10596   0043FE  5001               	movf	??_getCharFromTxBuf^0,w,c
 10597   004400  0F60               	addlw	low _EUSART4TXbuf
 10598   004402  6ED9               	movwf	fsr2l,c
 10599   004404  6ADA               	clrf	fsr2h,c
 10600   004406  50DF               	movf	indf2,w,c
 10601   004408  0012               	return		;funcret
 10602   00440A                     __end_of_getCharFromTxBuf:
 10603                           	callstack 0
 10604                           
 10605                           	psect	smallconst
 10606   000E00                     __psmallconst:
 10607                           	callstack 0
 10608   000E00  00                 	db	0
 10609   000E01  00                 	db	0	; dummy byte at the end
 10610   000000                     
 10611                           	psect	rparam
 10612   000000                     
 10613                           	psect	temp
 10614   000050                     btemp:
 10615                           	callstack 0
 10616   000050                     	ds	1
 10617   000000                     int$flags	set	btemp
 10618   000000                     wtemp8	set	btemp+1
 10619   000000                     ttemp5	set	btemp+1
 10620   000000                     ttemp6	set	btemp+4
 10621   000000                     ttemp7	set	btemp+8
 10622                           
 10623                           	psect	config
 10624                           
 10625                           ;Config register CONFIG1L @ 0x300000
 10626                           ;	External Oscillator mode Selection bits
 10627                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10628                           ;	Power-up default value for COSC bits
 10629                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10630   300000                     	org	3145728
 10631   300000  AA                 	db	170
 10632                           
 10633                           ;Config register CONFIG1H @ 0x300001
 10634                           ;	unspecified, using default values
 10635                           ;	Clock Out Enable bit
 10636                           ;	CLKOUTEN = 0x1, unprogrammed default
 10637                           ;	Clock Switch Enable bit
 10638                           ;	CSWEN = 0x1, unprogrammed default
 10639                           ;	Fail-Safe Clock Monitor Enable bit
 10640                           ;	FCMEN = 0x1, unprogrammed default
 10641   300001                     	org	3145729
 10642   300001  FF                 	db	255
 10643                           
 10644                           ;Config register CONFIG3L @ 0x300004
 10645                           ;	WDT Period Select bits
 10646                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10647                           ;	WDT operating mode
 10648                           ;	WDTE = OFF, WDT Disabled
 10649   300004                     	org	3145732
 10650   300004  9F                 	db	159
 10651                           
 10652                           ;Config register CONFIG3H @ 0x300005
 10653                           ;	unspecified, using default values
 10654                           ;	WDT Window Select bits
 10655                           ;	WDTCWS = 0x7, unprogrammed default
 10656                           ;	WDT input clock selector
 10657                           ;	WDTCCS = 0x7, unprogrammed default
 10658   300005                     	org	3145733
 10659   300005  FF                 	db	255
 10660                           tosu	equ	0xFFF
 10661                           tosh	equ	0xFFE
 10662                           tosl	equ	0xFFD
 10663                           stkptr	equ	0xFFC
 10664                           pclatu	equ	0xFFB
 10665                           pclath	equ	0xFFA
 10666                           pcl	equ	0xFF9
 10667                           tblptru	equ	0xFF8
 10668                           tblptrh	equ	0xFF7
 10669                           tblptrl	equ	0xFF6
 10670                           tablat	equ	0xFF5
 10671                           prodh	equ	0xFF4
 10672                           prodl	equ	0xFF3
 10673                           indf0	equ	0xFEF
 10674                           postinc0	equ	0xFEE
 10675                           postdec0	equ	0xFED
 10676                           preinc0	equ	0xFEC
 10677                           plusw0	equ	0xFEB
 10678                           fsr0h	equ	0xFEA
 10679                           fsr0l	equ	0xFE9
 10680                           wreg	equ	0xFE8
 10681                           indf1	equ	0xFE7
 10682                           postinc1	equ	0xFE6
 10683                           postdec1	equ	0xFE5
 10684                           preinc1	equ	0xFE4
 10685                           plusw1	equ	0xFE3
 10686                           fsr1h	equ	0xFE2
 10687                           fsr1l	equ	0xFE1
 10688                           bsr	equ	0xFE0
 10689                           indf2	equ	0xFDF
 10690                           postinc2	equ	0xFDE
 10691                           postdec2	equ	0xFDD
 10692                           preinc2	equ	0xFDC
 10693                           plusw2	equ	0xFDB
 10694                           fsr2h	equ	0xFDA
 10695                           fsr2l	equ	0xFD9
 10696                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      79
    BANK0           160     66     152
    BANK1           256    220     220
    BANK2           256      0     162
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK1[1]), 

    color_calibration@blue	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@blue(BANK1[6]), 

    color_calibration@green	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@green(BANK1[6]), 

    color_calibration@lightblue	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@lightblue(BANK1[6]), 

    color_calibration@orange	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@orange(BANK1[6]), 

    color_calibration@pink	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@pink(BANK1[6]), 

    color_calibration@red	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@red(BANK1[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    color_calibration@RGBC_n	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC_n(BANK1[8]), 

    color_calibration@white	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@white(BANK1[6]), 

    color_calibration@yellow	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@yellow(BANK1[6]), 

    color_normalise@RGBC_n	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC_n(BANK1[8]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    rgb_2_hsv@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK1[6]), 

    S33DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S33DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), main@motorR(BANK1[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_calibration
    _rgb_2_hsv->___aldiv
    ___lldiv->___lmul
    _move->_returnHome
    _returnHome->_reverseOneSquare
    _returnHome->_turnLeft
    _returnHome->_turnRight
    _lostReturnHome->_reverseOneSquare
    _lostReturnHome->_turnLeft
    _lostReturnHome->_turnRight
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_color_normalise
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___aldiv
    ___aldiv->___lmul
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_rgb_2_hsv

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               268   268      0  227876
                                             71 COMRAM     2     2      0
                                             22 BANK0     44    44      0
                                              0 BANK1    220   220      0
                         _Buggy_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
                   _color_click_init
                       _color_detect
                    _color_normalise
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                          _rgb_2_hsv
                               _stop
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _rgb_2_hsv                                           44    34     10    7833
                                             37 COMRAM    22    12     10
                                              0 BANK0     22    22      0
                            ___aldiv
                            ___lldiv
                             ___lmul
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (2) _min                                                  4     0      4     484
                                             11 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _max                                                  4     0      4     484
                                             11 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1141
                                             23 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _move                                                18     2     16  103098
                                             64 COMRAM     2     2      0
                                              0 BANK0     16     0     16
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          20     5     15   53152
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      20     5     15   52272
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    4053
                                             30 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    14     7      7    5257
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2      69
                                             11 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    6245
                                             30 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        59     3     56     847
                                             11 COMRAM    59     3     56
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    1612
                                             20 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0     862
                                             15 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             13 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20    7781
                                             49 COMRAM    22     2     20
                    _color_normalise
                         _color_read
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2     787
                                             15 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                             12 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                     12     2     10    5235
                                             37 COMRAM    12     2     10
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2436
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1525
                                             23 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   33814
                                             44 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   12433
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   20033
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2285
                                             24 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             17 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     543
                                             19 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0     356
                                              9 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (7) i2_color_clear_init_interrupts                        5     5      0     334
                                              4 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_normalise
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _white_Light
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_writetoaddr
   _color_detect
   _color_normalise
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _turnLeft
     _turnRight
   _resetTimer
   _rgb_2_hsv
     ___aldiv
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _max
     _min
   _stop
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A2       9       63.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     DC      DC       7       85.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     42      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      4F       1       84.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     265      66        0.0%
DATA                 0      0     265       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 18:01:36 2024

                                _white_Light 440A                      color_calibration@RGBC_n 0034  
                                         l91 279E                                           l89 2790  
                               ___awdiv@sign 0011                          ___wmul@multiplicand 000E  
                           main@turnDuration 01B7                                          l100 2AFE  
                                        l141 444C                                          l222 431E  
                                        l231 452A                                          l135 4266  
                                        l152 39F4                                          l240 4500  
                                        l144 4426                                          l225 4348  
                                        l161 3F6A                                          l234 4534  
                                        l146 442C                                          l170 2F0E  
                                        l138 3FE4                                          l243 422E  
                                        l228 436E                                          l172 2F1C  
                                        l164 2DA6                                          l156 3F68  
                                        l413 44C4                                          l237 4520  
                                        l149 31B0                                          l173 2FC2  
                                        l181 42C0                                          l430 41D4  
                                        l166 2DB4                                          l182 42C8  
                                        l190 25F8                                          l431 41D6  
                                        l167 2E5A                                          l416 44C8  
                                        l432 41EA                                          l176 42EC  
                                        l169 2E68                                          l177 42F4  
                                        l274 429C                                          l418 44D6  
                                        l434 41EC                                          l610 373E  
                                        l602 366A                                          l419 44DC  
                                        l195 268E                                          l516 38AA  
                                        l604 368E                                          l700 413C  
                                        l621 34BA                                          l509 3EE4  
                                        l366 44AA                                          l550 1442  
                                        l607 3710                                          l615 342C  
                                        l535 21B2                                          l624 353C  
                                        l632 3CA0                                          l560 14BC  
                                        l544 1442                                          l641 3244  
                                        l650 3354                                          l722 3E54  
                                        l627 356A                                          l619 3496  
                                        l715 3E44                                          l636 3CEC  
                                        l661 2C06                                          l653 3396  
                                        l645 32AE                                          l662 2C3C  
                                        l590 3BC6                                          l647 32D2  
                                        l575 1AE2                                          l665 2C8A  
                                        l657 2BEA                                          l593 3C08  
                                        l585 1B5C                                          l569 1AE2  
                                        l666 2D7A                                          l682 4516  
                                        l668 2D9A                                          l685 4346  
                                        l598 3600                                          l679 446C  
                                        l919 3DB0                                          l767 3B00  
                                        l688 43BC                                          l699 412C  
                                        _max 42CA                                          _min 429E  
                              ?_color_detect 000C                                          prod 0FF3  
                        i2_color_writetoaddr 446E                                          wreg 0FE8  
                            color_detect@red 0014    color_clear_init_interrupts@high_threshold 0011  
i2color_clear_init_interrupts@high_threshold 0006                              _color_normalise 38AC  
                                       l3001 3F8C                                         l3011 3FD0  
                                       l3003 3FA2                                         l3013 3FDA  
                                       l3005 3FB2                                         l3101 11B8  
                                       l3031 44BE                                         l3007 3FBC  
                                       l3111 124A                                         l3103 11D0  
                                       l3033 44C0                                         l3201 3D64  
                                       l4001 2E6C                                         l3009 3FC6  
                                       l3113 126A                                         l3121 12DE  
                                       l3105 1208                                         l1186 40D2  
                                       l3035 44C2                                         l3027 44AC  
                                       l3203 3D7A                                         l3211 3D90  
                                       l1179 40CA                                         l4011 2EF2  
                                       l4003 2E78                                         l3123 12FC  
                                       l3115 1282                                         l3051 0E92  
                                       l3043 0E02                                         l3221 4268  
                                       l3037 44C6                                         l3029 44B6  
                                       l3213 3DA0                                         l3205 3D82  
                                       l4021 2F66                                         l4013 2F0A  
                                       l4005 2E9A                                         l3141 141E  
                                       l3125 131C                                         l3133 1390  
                                       l3117 12BA                                         l3109 122C  
                                       l3061 0F34                                         l3053 0ECA  
                                       l3045 0E22                                         l4101 2042  
                                       l3039 44DA                                         l3215 3DA8  
                                       l3207 3D84                                         l4023 2F86  
                                       l4015 2F20                                         l4007 2EB2  
                                       l3231 4258                                         l3223 4230  
                                       l3135 13AE                                         l3127 1334  
                                       l3071 0F92                                         l3151 14AC  
                                       l3063 0F4C                                         l3055 0EE2  
                                       l3047 0E3A                                         l4111 20E4  
                                       l4103 2054                                         l4031 1B70  
                                       l3241 446A                                         l3209 3D8A  
                                       l3401 2D36                                         l4025 2FA6  
                                       l4017 2F2C                                         l4009 2ED2  
                                       l3233 4262                                         l3225 4234  
                                       l3145 145E                                         l3137 13CE  
                                       l3129 136C                                         l3081 103C  
                                       l3073 0FAA                                         l3065 0F54  
                                       l3057 0EFE                                         l3049 0E72  
                                       l4105 2074                                         l4113 211C  
                                       l4041 1C12                                         l4033 1B90  
                                       l4201 2860                                         l4121 269C  
                                       l3235 444E                                         l3403 2D7E  
                                       l2611 4348                                         l4027 2FBE  
                                       l4019 2F4E                                         l3227 423E  
                                       l3411 3F08                                         l3251 44A6  
                                       l3243 448E                                         l3147 1462  
                                       l3139 13E6                                         l3091 1106  
                                       l3083 1078                                         l3075 0FE6  
                                       l3067 0F56                                         l3059 0F02  
                                       l4115 212E                                         l4107 208C  
                                       l4051 1CB4                                         l4043 1C32  
                                       l4035 1BA8                                         l4211 28A6  
                                       l4203 2868                                         l4131 26D2  
                                       l4123 269C                                         l3237 4456  
                                       l3181 3D08                                         l2621 4060  
                                       l3405 2D96                                         l2613 4358  
                                       l3229 424E                                         l3421 3F64  
                                       l3413 3F10                                         l3261 3E90  
                                       l3253 44A8                                         l3245 4498  
                                       l2701 433E                                         l3149 1494  
                                       l3093 1126                                         l3085 1096  
                                       l3077 1004                                         l3069 0F72  
                                       l4117 2172                                         l4109 20C4  
                                       l4061 1D7C                                         l4053 1CD4  
                                       l4045 1C4A                                         l4037 1BE0  
                                       l4029 1B5E                                         l4221 290E  
                                       l4213 28AA                                         l4205 2880  
                                       l4141 26F0                                         l4133 26D6  
                                       l4125 26BA                                         l3239 4460  
                                       l3191 3D2E                                         l3183 3D0C  
                                       l3175 3CEE                                         l2631 4098  
                                       l2623 4068                                         l2615 4398  
                                       l3415 3F32                                         l3407 3EE6  
                                       l3271 3ECC                                         l3263 3EB4  
                                       l3255 3E56                                         l3247 449A  
                                       l2711 3B5C                                         l3095 115E  
                                       l3087 10B6                                         l3079 1024  
                                       l4071 1DFE                                         l4063 1D94  
                                       l4055 1CEC                                         l4047 1C82  
                                       l4039 1C00                                         l4231 2A38  
                                       l4223 292C                                         l4215 28BC  
                                       l4207 289C                                         l4151 2710  
                                       l4143 26F4                                         l4135 26DA  
                                       l4127 26BE                                         l4119 2690  
                                       l3193 3D40                                         l3185 3D1A  
                                       l3177 3CF2                                         l3281 41AA  
                                       l2641 40C4                                         l2633 409E  
                                       l2625 407A                                         l2617 43B4  
                                       l2801 35CA                                         l3417 3F3A  
                                       l3409 3EE6                                         l3273 3ED6  
                                       l3265 3EBE                                         l3257 3E66  
                                       l3249 44A4                                         l2721 3BC2  
                                       l2713 3B90                                         l2705 3B02  
                                       l3601 19D4                                         l3521 152E  
                                       l3089 10CE                                         l3097 117A  
                                       l4081 1EC0                                         l4073 1E36  
                                       l4057 1D24                                         l4065 1DB4  
                                       l4049 1CA2                                         l4233 2A40  
                                       l4225 29D6                                         l4217 28CC  
                                       l4241 2A5E                                         l4209 28A0  
                                       l4161 2728                                         l4153 2714  
                                       l4145 26F8                                         l4137 26DE  
                                       l4129 26CE                                         l3195 3D48  
                                       l3187 3D22                                         l3179 3D00  
                                       l3283 41C0                                         l2635 40B4  
                                       l2627 4082                                         l2811 3624  
                                       l2803 35D6                                         l3371 2B82  
                                       l2731 452C                                         l2643 4522  
                                       l2651 4518                                         l3419 3F5C  
                                       l3275 3ED8                                         l3267 3EC0  
                                       l3259 3E8C                                         l2723 3BEA  
                                       l2715 3B9C                                         l2707 3B4A  
                                       l3611 1A6E                                         l3603 1A0C  
                                       l3531 15BE                                         l3523 154E  
                                       l3515 14BE                                         l3099 1198  
                                       l4091 1F7A                                         l4083 1ED8  
                                       l4075 1E56                                         l4067 1DC6  
                                       l4059 1D44                                         l4243 2A6E  
                                       l4251 2AD8                                         l4235 2A44  
                                       l4227 29E6                                         l4219 2902  
                                       l4171 2744                                         l4163 2730  
                                       l4155 2718                                         l4147 2700  
                                       l4139 26EA                                         l3197 3D50  
                                       l3189 3D26                                         l3285 41CE  
                                       l2637 40BC                                         l2629 408A  
                                       l2661 37C4                                         l2821 3694  
                                       l2805 35E2                                         l2813 3628  
                                       l3381 2C36                                         l3373 2BAA  
                                       l3365 2B02                                         l2741 4204  
                                       l2733 4530                                         l2645 4526  
                                       l2653 451C                                         l3277 3EE2  
                                       l3269 3ECA                                         l2717 3BA8  
                                       l3621 1B02                                         l3613 1A86  
                                       l3541 15F6                                         l3533 15C4  
                                       l3525 1586                                         l3517 14DE  
                                       l4093 1F9A                                         l4085 1F10  
                                       l4069 1DE6                                         l4077 1E8E  
                                       l4253 2AEC                                         l4245 2A72  
                                       l4237 2A48                                         l4229 2A2C  
                                       l4181 2758                                         l4173 2748  
                                       l4165 2738                                         l4157 271C  
                                       l4149 2708                                         l3199 3D5E  
                                       l3287 41E4                                         l3279 41A0  
                                       l2639 40BE                                         l2663 37C8  
                                       l2655 3740                                         l2831 36F2  
                                       l2815 364C                                         l2807 35EE  
                                       l2751 33B6                                         l3391 2C7C  
                                       l3383 2C4A                                         l3375 2BF8  
                                       l3367 2B2A                                         l2743 422A  
                                       l2735 41F0                                         l2647 44F8  
                                       l2719 3BB4                                         l2727 3BF4  
                                       l3623 1B34                                         l3615 1ABE  
                                       l3607 1A30                                         l3551 16A4  
                                       l3543 1612                                         l3535 15D4  
                                       l3527 159E                                         l3519 14F6  
                                       l4095 1FB2                                         l4087 1F30  
                                       l4079 1EA0                                         l4247 2ACA  
                                       l4239 2A58                                         l4191 27BE  
                                       l4183 2762                                         l4175 274C  
                                       l4167 273C                                         l4159 2720  
                                       l2665 380A                                         l2657 375C  
                                       l2833 36FE                                         l2825 36A6  
                                       l2817 3658                                         l2809 35FC  
                                       l2761 341A                                         l2753 33C2  
                                       l3393 2C8E                                         l3385 2C54  
                                       l3377 2C14                                         l3369 2B42  
                                       l2745 422C                                         l2737 41F4  
                                       l2649 44FC                                         l2729 4430  
                                       l2681 3C6A                                         l2841 31B2  
                                       l3609 1A4E                                         l3561 1756  
                                       l3553 16C4                                         l3545 1632  
                                       l3625 1B4C                                         l3537 15EC  
                                       l3529 15BA                                         l4097 1FEA  
                                       l4089 1F68                                         l4249 2ACE  
                                       l4193 2812                                         l4185 276A  
                                       l4177 2750                                         l4169 2740  
                                       l2667 3826                                         l2659 37B0  
                                       l2835 370C                                         l2827 36DA  
                                       l2819 3666                                         l2771 3484  
                                       l2763 3428                                         l2755 33F6  
                                       l3395 2CB6                                         l3387 2C56  
                                       l3379 2C2C                                         l2739 41FC  
                                       l2691 3CC4                                         l2683 3C76  
                                       l2675 3C0A                                         l2851 3226  
                                       l2843 31CE                                         l3619 1AFE  
                                       l3563 176E                                         l3571 181A  
                                       l3555 16DC                                         l3547 164A  
                                       l3539 15F4                                         l4099 200A  
                                       l4195 2836                                         l4187 2772  
                                       l4179 2754                                         l2669 386A  
                                       l2837 3734                                         l2829 36E6  
                                       l2781 3506                                         l2773 3492  
                                       l2765 3450                                         l2757 3402  
                                       l2749 3398                                         l3397 2CCE  
                                       l3389 2C6E                                         l3901 3ACA  
                                       l2685 3C82                                         l2693 3CC8  
                                       l2677 3C2A                                         l2861 3290  
                                       l2853 3232                                         l2845 31DA  
                                       l3573 1838                                         l3565 17A6  
                                       l3557 1718                                         l3549 1686  
                                       l4197 283C                                         l4189 27A6  
                                       l2791 3560                                         l2783 3512  
                                       l2775 34C0                                         l2759 340E  
                                       l2767 3454                                         l3399 2D0E  
                                       l3903 3AD0                                         l3911 38AC  
                                       l2687 3C8E                                         l2679 3C36  
                                       l2695 450E                                         l2871 32EA  
                                       l2863 329C                                         l2855 3240  
                                       l2847 320E                                         l3591 195A  
                                       l3575 1858                                         l3583 18CC  
                                       l3567 17C6                                         l3559 1736  
                                       l4199 2854                                         l2785 351E  
                                       l2769 3478                                         l3905 3AE0  
                                       l3913 38C0                                         l2961 2FDE  
                                       l2689 3C9C                                         l2697 4320  
                                       l2881 3350                                         l2873 331E  
                                       l2865 32AA                                         l2857 3268  
                                       l2849 321A                                         l3585 18EA  
                                       l3577 1870                                         l3569 17FE  
                                       l3921 42E0                                         l2795 356C  
                                       l2787 352A                                         l2779 34D2  
                                       l3907 3AF0                                         l3915 3924  
                                       l2971 30EC                                         l2963 2FF8  
                                       l2955 440C                                         l2699 432C  
                                       l2883 3378                                         l2875 332A  
                                       l2867 32D8                                         l2859 326C  
                                       l3587 190A                                         l3595 197E  
                                       l3579 18A8                                         l3931 3DB2  
                                       l2797 358A                                         l2789 3538  
                                       l3861 40F2                                         l3917 398C  
                                       l2973 314C                                         l2965 3050  
                                       l2957 441C                                         l2877 3336  
                                       l3597 199C                                         l3589 1922  
                                       l3941 3DFA                                         l3933 3DC2  
                                       l3925 429E                                         ?_max 000C  
                                       l2799 3596                                         l3871 3A08  
                                       l3863 4102                                         l2975 316A  
                                       l2967 306E                                         l2959 2FC4  
                                       l2991 4308                                         l2879 3342  
                                       l2887 3382                                         l3599 19BC  
                                       l3951 3E3E                                         l3943 3E04  
                                       l3935 3DD8                                         l3919 42CA  
                                       l3927 42B4                                         l3881 3A3E  
                                       l3873 3A18                                         l3865 410C  
                                       l3857 40D4                                         l2969 30CE  
                                       l2993 430A                                         l2985 42F6  
                                       l3945 3E22                                         l3937 3DE0  
                                       l3961 2350                                         l3953 21B4  
                                main@curMove 01AF                                         l3891 3A86  
                                       l3883 3A4E                                         l3875 3A1C  
                                       l3867 39F6                                         l3859 40E4  
                                       l2995 430C                                         l2987 4300  
                                       l3947 3E32                                         l3939 3DEC  
                                       l3971 24A0                                         l3963 23B4  
                                       l3955 2308                                         ?_min 000C  
                                       l3893 3A90                                         l3885 3A64  
                                       l3877 3A2A                                         l3869 39FA  
                                       l2989 4306                                         l2997 3F6C  
                                       l3949 3E34                                         l3981 267A  
                                       l3973 253A                                         l3965 23CA  
                                       l3957 2322                                         l3895 3AAE  
                                       l3887 3A6C                                         l3879 3A3A  
                                       l3991 2DE6                                         l3983 2D9C  
                                       l2999 3F80                                         l3975 2552  
                                       l3967 242C                                         l3959 233A  
                                       l3897 3ABE                                         l3889 3A78  
                                       l3993 2DFE                                         l3985 2DA2  
                                       l3977 2650                                         l3969 2488  
                                       l3899 3AC0                                         l3995 2E1E  
                                       l3987 2DB8                                         l3979 266E  
                                       l3997 2E3E                                         l3989 2DC4  
                                       l3999 2E56                                         u2000 41E4  
                                       u2001 41E0                                         u1400 407A  
                                       u2200 3F08                                         u1401 4076  
                                       u3001 2F3A                                         u2201 3F04  
                                       u1410 4098                                         u2210 3F32  
                                       u3010 1B70                                         u1411 4094  
                                       u2211 3F2E                                         u3011 1B6C  
                                       u1420 40B4                                         u2140 2BF8  
                                       u2220 3F5C                                         u1500 3BEA  
                                       u3020 1C12                                         u1421 40B0  
                                       u2141 2BF4                                         u2221 3F58  
                                       u1501 3BE6                                         u3021 1C0E  
                                       u3101 26A8                                         u1430 375C  
                                       u2150 2C06                                         u1510 4218  
                                       u2310 15D4                                         u3030 1CB4  
                                       u1431 3758                                         u2151 2C02  
                                       u1511 4210                                         u2311 15D0  
                                       u3031 1CB0                                         u3111 26B4  
                                       u1440 3826                                         u1600 368E  
                                       u2160 2C14                                         u2400 1B5C  
                                       u2320 1612                                         u3040 1DC6  
                    color_calibration@orange 0040                                 _BAUD4CONbits 0EE9  
                                       u1441 3822                                         u1601 368A  
                                       u2161 2C10                                         u2401 1B58  
                                       u2321 160E                                         u3041 1DC2  
                                       u3201 296C                                         u3121 277C  
                                       u1610 36A2                                         u1530 3450  
                                       u2170 2C2C                                         u2330 16A4  
                                       u3050 1EA0                                         u3130 279E  
                                       u1611 369E                                         u1531 344C  
                                       u2171 2C28                                         u2331 16A0  
                                       u3051 1E9C                                         u3211 297E  
                                       u3131 279A                                         u1620 3734  
                                       u1540 3478                                         u2180 2C4A  
                                       u1380 4358                                         u2340 1736  
                                       u3060 1F7A                                         u3140 28BC  
                                       u1621 3730                                         u1541 3474  
                                       u2181 2C46                                         u1381 4354  
                                       u2341 1732                                         u3061 1F76  
                                       u3221 2990                                         u3141 28B8  
                                       u1550 34BA                                         u2190 2C7C  
                                       u1390 436E                                         u1470 3CC4  
                                       u1630 3268                                         u2350 1838  
                                       u3070 2054                                         u1551 34B6  
                                       u2191 2C78                                         u1391 436A  
                                       u4007 2E48                                         u1471 3CC0  
                                       u1631 3264                                         u2351 1834  
                                       u3071 2050                                         u3231 29A2  
                                       u1560 34CE                                         u1528 421A  
                                       u1480 3CEC                                         u1640 3290  
                                       u2360 18EA                                         u1800 0F34  
                                       u3080 212E                                         u1561 34CA  
                                       u4017 2EFC                                         u1481 3CE8  
                                       u1641 328C                                         u2361 18E6  
                                       u1801 0F30                                         u3081 212A  
                                       u3241 29B4                                         u3161 2918  
                                       u1570 3560                                         u1650 32D2  
                                       u1490 3B58                                         u2370 199C  
                                       u1810 0F72                                         _T2PR 0FBC  
                                       u1571 355C                                         u4107 2D88  
                                       u4027 2FB0                                         u1651 32CE  
                                       u1491 3B54                                         u2371 1998  
                                       u1811 0F6E                                         u3251 29C6  
                                       u3171 2936                                         u3155 28C8  
                                       u3307 27B0                                         u3091 2696  
                                       u1580 3624                                         u1660 32E6  
                                       u2380 1A4E                                         u1820 1004  
                                       u1581 3620                                         u4117 3420  
                                       u4037 2B34                                         u1661 32E2  
                                       u2381 1A4A                                         u1821 1000  
                                       u3181 2948                                         u3157 28CC  
                                       u3317 2846                                         u1590 364C  
                                       u1670 3378                                         u2390 1B34  
                                       u1830 1096                                         u3270 2A6E  
                                       u1591 3648                                         u4127 348A  
                                       u4047 2B74                                         u1671 3374  
                                       u2391 1B30                                         u1831 1092  
                                       u3407 1D86                                         u3271 2A6A  
                                       u3191 295A                                         u3327 2872  
                                       u2800 3A86                                         u1760 441C  
                                       u1840 1198                                         u3280 2AEC  
                                       u4137 3530                                         u4057 2BB4  
                                       u2801 3A82                                         u1761 4418  
                                       u1841 1194                                         u3417 1DF0  
                                       u3337 1B9A                                         u3281 2AE8  
                                       u3265 2A54                                         u1930 3D00  
                                       u2810 3AAE                                         u1850 124A  
                                       u3290 2AFE                                         u1931 3CFC  
                                       u4147 35F4                                         u4067 2C60  
                                       u2811 3AAA                                         u1851 1246  
                                       u3507 207E                                         u3427 1E28  
                                       u3347 1BD2                                         u3291 2AFA  
                                       u3267 2A58                                         u1940 3D1A  
                                       u2820 3AE0                                         u1860 12FC  
                                       u2900 23CA                                         u1941 3D16  
                                       u4157 365E                                         u4077 2CC0  
                                       u2821 3ADC                                         u1861 12F8  
                                       u3517 20B6                                         u3437 1E60  
                                       u3357 1C3C                                         u2901 23C6  
                                       u1790 44D6                                         u1950 3D40  
                                       u2750 40F2                                         u1870 13AE  
                                       u2830 42E0                                         u2910 24A0  
                                       u1791 44D2                                         u1951 3D3C  
                                       u4167 3704                                         u4087 2D00  
                                       u2751 40EE                                         u1871 13AA  
                                       u3607 1066                                         u3527 20EE  
                                       u3447 1ECA                                         u3367 1C74  
                                       u2831 42DC                                         u2911 249C  
                                       u1960 3D5E                                         u2760 412C  
                                       u1880 1494                                         u2840 42B4  
                                       u2920 2552                                         u1961 3D5A  
                                       u4097 2D40                                         u2761 4128  
                                       u1881 1490                                         u3617 10C0  
                                       u3537 0E2C                                         u3457 1F02  
                                       u3377 1CDE                                         u2841 42B0  
                                       u2921 254E                                         u1970 3D7A  
                                       u2770 3A08                                         u1890 14BC  
                                       u2850 3DD8                                         u1971 3D76  
                                       u2771 3A04                                         u1891 14B8  
                                       u3707 135E                                         u3627 10F8  
                                       u3547 0E64                                         u3467 1F3A  
                                       u3387 1D16                                         u2851 3DD4  
                                       u1980 3DA0                                         u2780 3A2A  
                                       u2860 3DFA                                         u2940 266E  
                                       u1981 3D9C                                         u2781 3A26  
                                       u3717 13D8                                         u3637 1130  
                                       u3557 0E9C                                         u3477 1FA4  
                                       u3397 1D4E                                         u2861 3DF6  
                                       u2941 266A                                         u1990 41CE  
                                       u2790 3A64                                         u2950 2DB4  
                                       u2870 3E22                                         u1991 41CA  
                                       u2791 3A60                                         u2951 2DB0  
                                       u3807 1706                                         u3727 1410  
                                       u3647 1168                                         u3567 0ED4  
                                       u3487 1FDC                                         u2871 3E1E  
                                       u2935 2570                                         u2880 233A  
                                       u2961 2DD2                                         u3817 1760  
                                       u3737 14E8                                         u3657 11C2  
                                       u3577 0F9C                                         u3497 2014  
                                       u2881 2336                                         u2970 2E68  
                                       u2890 2350                                         u2971 2E64  
                                       u3907 19FE                                         u3827 1798  
                                       u3747 1520                                         u3667 11FA  
                                       u3587 0FD4                                         u2891 234C  
                                       u2981 2E86                                         u3917 1A78  
                                       u3837 17D0                                         u3757 1558  
                                       u3677 1274                                         u3597 102E  
                                       u2990 2F1C                                         u2991 2F18  
                                       u3927 1AB0                                         u3847 1808  
                                       u3767 1590                                         u3687 12AC  
                                       u3937 3BBA                                         u3857 1862  
                                       u3777 163C                                         u3697 1326  
                                       u3947 3238                                         u3867 189A  
                                       u3787 1674                                         u3957 32A2  
                                       u3877 1914                                         u3797 16CE  
                                       u3967 3348                                         u3887 194C  
                                       u3977 3C94                                         u3897 19C6  
                                       u3987 4244                                         u3997 3FA8  
                    color_calibration@yellow 003C                  lostReturnHome@straightSpeed 0036  
                                       _main 2690                                         _move 1B5E  
                                       _lost 00B0                                         _wall 00B1  
                                       fsr1h 0FE2                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         max@a 000C  
                                       max@b 000E                                         btemp 0050  
                                       _stop 3B02                                         min@a 000C  
                                       min@b 000E                                         prodh 0FF4  
                                       prodl 0FF3                                         start 0098  
                           color_detect@blue 0020                          main@reverseDuration 0198  
                           __end_of_ADC_init 44C6                         ?i2_color_writetoaddr 0003  
                           color_detect@pink 002C                              __end_of_HighISR 0098  
                      lostReturnHome@curMove 0035                                 ___param_bank 0000  
                       __end_of_batteryLevel 41EE                                        ??_max 0010  
                                      ??_min 0010                              __end_of___aldiv 3B02  
                                      ?_main 0001                                        _ADPCH 0F5F  
                            __end_of___awdiv 3DB2                                        ?_move 00B2  
                            __end_of___lldiv 3E56                                        ?_stop 001F  
                            ___awdiv@divisor 000E                              __end_of___lwdiv 40D4  
                                      i2l141 448C                                        i2l231 4548  
                                      i2l240 450C                                        i2l225 4370  
                                      i2l138 405E                                        i2l228 4396  
                                      i2l237 453E                                        i2l335 008C  
                                      i2l381 4408                                        i2l374 43E2  
                                      i2l388 44F4                              ___awdiv@counter 0010  
                             ??_color_detect 0044                                        _TMR0H 0FD4  
                                      _TMR0L 0FD3                          ___lmul@multiplicand 0010  
                 __end_of_I2C_2_Master_Start 452C                   __end_of_I2C_2_Master_Write 4502  
                                 _Buggy_init 4268                   color_calibration@lightblue 0042  
                     returnHome@straightRamp 0038                       returnHome@straightTime 0033  
                                      tablat 0FF5                                        plusw0 0FEB  
                                      plusw2 0FDB                                        ttemp5 0051  
                                      ttemp6 0054                                        ttemp7 0058  
                                      stop@i 0027                                        status 0FD8  
                                      wtemp8 0051                            color_detect@color 0046  
                          color_detect@green 001A                            color_detect@white 003E  
                      ??i2_color_writetoaddr 0004                                 main@turnRamp 019B  
                      _I2C_2_Master_RepStart 452C                           putCharToRxBuf@byte 0001  
                            __initialization 413E                    get16bitTMR0val@timer_high 0012  
                               __end_of_main 2B02                                 __end_of_move 21B4  
                               __end_of_stop 3C0A                          move@reverseDuration 00BD  
                            _get16bitTMR0val 4320                                       ??_main 0048  
                                     ??_move 0041                                       ??_stop 0024  
                              __activetblptr 0000                                calibration@mL 002D  
                              calibration@mR 002F                      __end_of_color_normalise 39F6  
                     returnHome@turnDuration 003A                                 ?_setMotorPWM 0019  
                                     _ADRESH 0F64                                       _CCPR1H 0FAA  
                                     _CCPR2H 0FA6                                       _CCPR3H 0F25  
                                     _CCPR4H 0F21                             ___awdiv@dividend 000C  
                     lostReturnHome@turnRamp 003B                                       _RC0PPS 0E62  
                                     _RC4REG 0EE3                                       _RE2PPS 0E74  
                                     _RC7PPS 0E69                                       _RD5PPS 0E6F  
                                     _RE4PPS 0E76                                       _RD6PPS 0E70  
                                     i2l3219 4470                                       i2l3631 43D4  
                                     i2l2671 4370                                       i2l3633 43E0  
                                     i2l2673 4380                                       i2l3635 43E4  
                                     i2l3643 44DE                                       i2l3627 43C0  
                                     i2l3811 0022                                       i2l3637 43F4  
                                     i2l3629 43D0                                       i2l3661 401C  
                                     i2l3821 0044                                       i2l3813 0028  
                                     i2l3639 43F8                                       i2l2943 4540  
                                     i2l2951 4504                                       i2l3671 4054  
                                     i2l3663 402C                                       i2l3655 3FE6  
                                     i2l3831 0074                                       i2l3823 0048  
                                     i2l3815 002C                                       i2l2945 4544  
                                     i2l2953 4508                                       i2l3665 4036  
                                     i2l3657 3FFA                                       i2l3833 0088  
                                     i2l3825 0056                                       i2l3817 0030  
                                     i2l3809 0012                                       i2l2947 4536  
                                     i2l3667 4040                                       i2l3659 4006  
                                     i2l3827 005C                                       i2l3819 003E  
                                     _RG6PPS 0E88                                       i2l2949 453A  
                                     i2l3669 404A                                       i2l3829 006C  
                                  ??_HighISR 000A                     __end_of_color_click_init 4268  
                                     _TMR0IE 714D                                       _TMR0IF 719D  
                                     _RX4PPS 0E15                                       _TX4REG 0EE4  
                              main@lightblue 018C                                 ??_ADC_getval 000C  
                              ??_Timer0_init 000C                          calibration@turnRamp 0034  
                    calibration@turnDuration 0032                                 _CCPTMRS0bits 0FAD  
                           _getCharFromTxBuf 43E4                                       ___lmul 40D4  
                                  ??___aldiv 0020                                       ___wmul 4398  
                                  ??___awdiv 0010                                    ??___lldiv 0020  
                                  ??___lwdiv 0016                           color_detect@RGBC_n 000C  
                                     clear_0 417C                                       clear_1 4188  
                           ___awdiv@quotient 0012                                       isa$std 0001  
                    returnHome@straightSpeed 0036                                 __pdataCOMRAM 004E  
                                     move@mL 00B2                                       move@mR 00B4  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                  ?_ADC_init 0001                                       stop@mL 001F  
                                     stop@mR 0021                                  ?_Buggy_init 0001  
                          ??_initDCmotorsPWM 000E                           __end_of_ADC_getval 44DE  
                 i2color_writetoaddr@address 0004                             __end_of_turnLeft 3740  
                         color_detect@orange 0032                   lostReturnHome@moveSequence 0031  
                      __end_of_isDataInTxBuf 44F6                                   __accesstop 0060  
                    __end_of__initialization 4196                           color_detect@yellow 0026  
                            fullSpeedAhead@i 0028                                main@turnSpeed 019A  
                     ?_I2C_2_Master_RepStart 0001                                ___rparam_used 0001  
                       __end_of_color_detect 3F6C                lostReturnHome@reverseDuration 0037  
                             __pcstackCOMRAM 0001                      __end_of_get16bitTMR0val 4348  
                               ?_white_Light 0001                                 __pidataBANK0 454A  
                   get16bitTMR0val@timer_low 0010                     get16bitTMR0val@timer_val 0014  
               ?_color_clear_init_interrupts 0001                             _reverseOneSquare 31B2  
                        __end_of_Timer0_init 446E                             ?_color_normalise 0026  
                                 ??_ADC_init 000C                                 rgb_2_hsv@HSV 002E  
                               _batteryLevel 41A0                                   __pbssBANK0 0060  
                                 __pbssBANK2 0200                               _rgb_2_hsv$3520 00BA  
                             _rgb_2_hsv$3521 00B2                               _rgb_2_hsv$3519 00B8  
                          _color_writetoaddr 442E                                 _T2CLKCONbits 0FBF  
                             _lostReturnHome 14BE                           ?_color_writetoaddr 000E  
                                    ?___lmul 000C                                      ?___wmul 000C  
                             ___lmul@product 0014                ??_color_clear_init_interrupts 0010  
                                move@curMove 00BB                      lostReturnHome@turnSpeed 0039  
                        ??_color_writetoaddr 000F                                      _SP4BRGH 0EE6  
                                    _SP4BRGL 0EE5                   fullSpeedAhead@straightRamp 0024  
                      turnRight@turnDuration 0024                                      _SSP2ADD 0ED6  
                                    _SSP2BUF 0ED5                                   _color_read 2FC4  
                     color_writetoaddr@value 000E                                      _HighISR 0008  
                  __end_of_color_writetoaddr 444E                       __end_of_lostReturnHome 1B5E  
                                  _ADREFbits 0F58                           _I2C_2_Master_Start 4522  
                                 _initUSART4 448E                          i2_I2C_2_Master_Idle 4370  
                         _I2C_2_Master_Write 44F6                                      __Hparam 0000  
                        i2_I2C_2_Master_Stop 4536                                      __Lparam 0000  
                                _Timer0_init 444E                         calibration@turnSpeed 0031  
                           ?_get16bitTMR0val 000C                                      ___aldiv 39F6  
                                    ___awdiv 3CEE                              lostReturnHome@i 0040  
                                    ___lldiv 3DB2                                ??_calibration 0035  
                        ?_I2C_2_Master_Start 0001                                      ___lwdiv 4060  
                        ?_I2C_2_Master_Write 0001                                 __psmallconst 0E00  
                                    _ambient 004E                                      __pcinit 413E  
                                    __ramtop 0E00                                    ?_turnLeft 001F  
                          __end_of_rgb_2_hsv 2690                                      __ptext0 2690  
                                    __ptext1 21B4                                      __ptext2 429E  
                                    __ptext3 42CA                                      __ptext4 3DB2  
                                    __ptext5 1B5E                                      __ptext6 0E02  
                                    __ptext7 14BE                                      __ptext8 3B02  
                                    __ptext9 31B2                         ?i2_I2C_2_Master_Idle 0001  
                                  _T2CONbits 0FBD                         ?i2_I2C_2_Master_Stop 0001  
                           ___aldiv@dividend 0018                                    _T2HLTbits 0FBE  
                              _RxBufWriteCnt 004D                                      main@HSV 01B0  
                   __end_of_getCharFromTxBuf 440A                                      main@buf 00C8  
                                    main@red 019C                         ??_I2C_2_Master_Start 000D  
                       ??_I2C_2_Master_Write 000D                        color_normalise@RGBC_n 002E  
                       end_of_initialization 4196              ??i2_color_clear_init_interrupts 0005  
                __end_ofi2_color_writetoaddr 448E                             ADC_getval@tmpval 000C  
                          reverseOneSquare@i 0029                            ?_color_click_init 0001  
                            ?_lostReturnHome 002D                              ___lldiv@divisor 001C  
                                 _resetTimer 450E                           ??_color_click_init 0015  
                            ___lldiv@counter 0024                             ___aldiv@quotient 0022  
                 batteryLevel@batteryQuarter 0015                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc1 0FE6                                      postinc2 0FDE  
                 batteryLevel@batteryVoltage 0014                                   main@F14640 027A  
                                 main@F14644 0252                                   main@F14646 0200  
                                 main@F14649 00F4                                   _returnHome 0E02  
                            _initDCmotorsPWM 3E56                                   ??_turnLeft 0026  
                                  _PORTFbits 0F8E                           setMotorPWM@negDuty 001E  
                      ??i2_I2C_2_Master_Idle 0001                                move@turnSpeed 00BF  
                          __end_of_turnRight 356C                        ??i2_I2C_2_Master_Stop 0002  
                                 main@RGBC_n 01B8                          __end_of_calibration 2D9C  
                               _color_detect 3EE6                                  returnHome@i 0040  
                                  _TRISAbits 0F81                           setMotorPWM@posDuty 001D  
                                  _TRISBbits 0F82                                    _TRISCbits 0F83  
                                  _TRISDbits 0F84                                    _TRISEbits 0F85  
                                  _TRISFbits 0F86                                    _TRISGbits 0F87  
                                  _TRISHbits 0F88                             white_Light@state 000C  
                               ??_Buggy_init 000C                             fullSpeedAhead@mL 001F  
                           fullSpeedAhead@mR 0021                                  ?_color_read 0010  
                   color_writetoaddr@address 000F                      ??_I2C_2_Master_RepStart 000D  
                   __end_of_reverseOneSquare 3398                                stop@cur_power 0029  
                                _CCP1CONbits 0FAB                       color_calibration@green 0038  
                               _EUSART4RXbuf 009C                          returnHome@turnSpeed 0039  
                               _EUSART4TXbuf 0060                                  _CCP2CONbits 0FA7  
                     color_calibration@white 0044                                  _CCP3CONbits 0F26  
                 lostReturnHome@straightRamp 0038                   lostReturnHome@straightTime 0033  
                                ?_initUSART4 0001                                   main@orange 0186  
                                _CCP4CONbits 0F22                                   main@motorL 01D2  
                                 main@motorR 01C8                                   main@yellow 017A  
                             color_read@RGBC 0010                               _fullSpeedAhead 3C0A  
                             __end_of___lmul 413E                         turnLeft@turnDuration 0024  
                             __end_of___wmul 43BE                           __end_of_Buggy_init 429E  
                              __pidataCOMRAM 454E                          start_initialization 413E  
                                __end_of_max 42F6                                  __end_of_min 42CA  
                              _TxBufWriteCnt 004B                   lostReturnHome@turnDuration 003A  
                                 rgb_2_hsv@b 00C6                                   rgb_2_hsv@g 00C4  
                                 rgb_2_hsv@r 00BC                             move@moveSequence 00B7  
      __end_ofi2_color_clear_init_interrupts 4060                i2_color_clear_init_interrupts 3FE6  
                                ?_resetTimer 0001                      __end_of_initDCmotorsPWM 3EE6  
                     __end_of_fullSpeedAhead 3CEE                           turnRight@cur_power 002B  
                                   ??___lmul 0014                                rgb_2_hsv@RGBC 0026  
                                   ??___wmul 0010                               _putCharToRxBuf 43BE  
                        color_normalise@RGBC 0026                                  __pdataBANK0 00F4  
                              rgb_2_hsv@diff 00C0                i2I2C_2_Master_Write@data_byte 0002  
                                _calibration 2B02                                rgb_2_hsv@cmax 00BE  
                              rgb_2_hsv@cmin 00B6                                  ?_returnHome 002D  
               reverseOneSquare@straightRamp 0025                 __end_ofi2_I2C_2_Master_Start 454A  
               __end_ofi2_I2C_2_Master_Write 450E                            turnLeft@cur_power 002B  
                                __pbssCOMRAM 004A                                __pcstackBANK0 00B2  
                              __pcstackBANK1 0100                                     ?_HighISR 0001  
                           stop@straightRamp 0023                             ___lwdiv@dividend 0012  
                               ?_Timer0_init 0001                       __end_of_putCharToRxBuf 43E4  
                            ?_fullSpeedAhead 001F                                    __pintcode 0008  
                                   ?___aldiv 0018                           turnRight@turnSpeed 0023  
                                   ?___awdiv 000C                                     ?___lldiv 0018  
                                   ?___lwdiv 0012                         I2C_2_Master_Read@ack 000E  
                       I2C_2_Master_Read@tmp 000F                                  __smallconst 0E00  
                           main@moveSequence 0152                            _I2C_2_Master_Idle 4348  
                          _I2C_2_Master_Init 42F6                            _I2C_2_Master_Read 41EE  
                          turnLeft@turnSpeed 0023                            _I2C_2_Master_Stop 4518  
                                  _rgb_2_hsv 21B4                                 _RxBufReadCnt 004C  
                                   _ADC_init 44AC                           ?_I2C_2_Master_Idle 0001  
                         ?_I2C_2_Master_Init 0001                           ?_I2C_2_Master_Read 0001  
                              ??_setMotorPWM 001B                           ?_I2C_2_Master_Stop 0001  
                           ___lwdiv@quotient 0016                     initDCmotorsPWM@PWMperiod 000C  
                          ?_getCharFromTxBuf 0001                             ??_lostReturnHome 003C  
                         ??_getCharFromTxBuf 0001                            move@straightSpeed 00BC  
                            ___aldiv@divisor 001C                          ??_I2C_2_Master_Idle 000C  
                            ___aldiv@counter 0020                          ??_I2C_2_Master_Init 000C  
                        ??_I2C_2_Master_Read 000D                               ___wmul@product 0010  
                                   _LATAbits 0F79                          ??_I2C_2_Master_Stop 000D  
                                   _LATCbits 0F7B                                _isDataInTxBuf 44DE  
                                   _LATDbits 0F7C                                     _LATEbits 0F7D  
                                   _LATFbits 0F7E                                     _LATGbits 0F7F  
                                   _LATHbits 0F80                                     _IPR0bits 0E1F  
                                   _PIE0bits 0E29                                     _PIE4bits 0E2D  
                                turnRight@mL 001F                                  turnRight@mR 0021  
                                   i2u241_40 43D0                                     i2u145_40 4380  
                                   i2u241_41 43CC                                     i2u145_41 437C  
                                   i2u242_40 43F4                                     i2u146_40 4396  
                                   i2u242_41 43F0                                     i2u146_41 4392  
                                   i2u243_40 44F2                                     i2u243_41 44EC  
                                   i2u244_40 44F4                                     i2u270_40 006C  
                                   i2u270_41 0068                                     i2u271_40 0088  
                                   i2u271_41 0084                                     _PIR0bits 0E33  
                                   i2u417_47 4022                                     i2u267_40 0022  
                                   i2u267_41 001E                                     i2u268_40 003E  
                                   i2u268_41 003A                                     i2u269_40 0056  
                                   i2u269_41 0052                                     _PIR4bits 0E37  
                            ?_putCharToRxBuf 0001                             ?_initDCmotorsPWM 000C  
                fullSpeedAhead@straightSpeed 0023          __end_of_color_clear_init_interrupts 3FE6  
             ?i2_color_clear_init_interrupts 0001                  _color_clear_init_interrupts 3F6C  
                                   _SSP2CON2 0EDA                                     _SSP2STAT 0ED8  
                               move@turnRamp 00C1                                   _ADCON0bits 0F60  
                  __end_of_I2C_2_Master_Idle 4370                        color_calibration@RGBC 0032  
                  __end_of_I2C_2_Master_Init 4320                    __end_of_I2C_2_Master_Read 4230  
                          ___wmul@multiplier 000C                    __end_of_I2C_2_Master_Stop 4522  
   color_clear_init_interrupts@low_threshold 0013   i2color_clear_init_interrupts@low_threshold 0008  
                               setMotorPWM@m 0019                  I2C_2_Master_Write@data_byte 000D  
                      color_calibration@blue 003A                           returnHome@turnRamp 003B  
                                  main@color 01AE                        color_calibration@pink 003E  
                                  main@green 01A2                                    main@white 0192  
                                 ?_rgb_2_hsv 0026                                 _TxBufReadCnt 004A  
                   i2color_writetoaddr@value 0003                                    _turnRight 3398  
                  returnHome@reverseDuration 0037                                 ??_color_read 0012  
                          ___lmul@multiplier 000C                                    copy_data0 4152  
                             ?_isDataInTxBuf 0001                __end_of_I2C_2_Master_RepStart 4536  
                          ?_reverseOneSquare 001F                          __end_of_setMotorPWM 38AC  
                               ??_initUSART4 000C                         i2_I2C_2_Master_Start 4540  
            reverseOneSquare@reverseDuration 0024                         i2_I2C_2_Master_Write 4502  
                         ??_reverseOneSquare 0026                                     __Hrparam 0000  
                          ??_color_normalise 0030                                   _ADC_getval 44C6  
                           main@testSequence 00F0                                     __Lrparam 0000  
                              ??_white_Light 000C                  __end_ofi2_I2C_2_Master_Idle 4398  
                __end_ofi2_I2C_2_Master_Stop 4540                             lostReturnHome@mL 002D  
                           lostReturnHome@mR 002F                           __end_of_color_read 31B2  
                                 _ANSELBbits 0E9A                                   _ANSELDbits 0EA7  
                                 _ANSELFbits 0EB4                                   _T0CON0bits 0FD5  
                                 _T0CON1bits 0FD6                            _color_calibration 2D9C  
              reverseOneSquare@straightSpeed 0023                              ___lwdiv@divisor 0014  
                     returnHome@moveSequence 0031                           __end_of_initUSART4 44AC  
                            ___lwdiv@counter 0018                            turnRight@turnRamp 0025  
                                 ?_turnRight 001F                                     __ptext10 450E  
                                   __ptext11 4320                                     __ptext20 2D9C  
                                   __ptext12 3C0A                                     __ptext21 440A  
                                   __ptext13 448E                                     __ptext30 40D4  
                                   __ptext22 2FC4                                     __ptext14 3E56  
                                   __ptext31 39F6                                     __ptext23 44F6  
                                   __ptext15 3EE6                                     __ptext40 44AC  
                                   __ptext32 2B02                                     __ptext24 4518  
                                   __ptext16 4230                                     __ptext41 44C6  
                                   __ptext33 3398                                     __ptext25 4522  
                                   __ptext17 3F6C                                     __ptext50 4370  
                                   __ptext42 444E                                     __ptext34 356C  
                                   __ptext26 452C                                     __ptext18 442E  
                                   __ptext51 43BE                                     __ptext43 4268  
                                   __ptext35 3740                                     __ptext27 41EE  
                                   __ptext19 42F6                                     __ptext52 44DE  
                                   __ptext36 4398                                     __ptext28 4348  
                                   __ptext53 43E4                                     __ptext45 3FE6  
                                   __ptext37 4060                                     __ptext29 38AC  
                                   __ptext46 446E                                     __ptext38 41A0  
                                   __ptext47 4502                                     __ptext39 3CEE  
                                   __ptext48 4536                                     __ptext49 4540  
                                  move@color 00B6                           ?_color_calibration 0032  
                              ?_batteryLevel 0001                                 _SSP2CON1bits 0ED9  
                               _SSP2CON2bits 0EDA                             turnLeft@turnRamp 0025  
                                 turnLeft@mL 001F                                   turnLeft@mR 0021  
                        ??_color_calibration 0046                        ?i2_I2C_2_Master_Start 0001  
                           move@straightRamp 00BE                        ?i2_I2C_2_Master_Write 0001  
                           move@straightTime 00B9                            returnHome@curMove 0035  
                               ??_resetTimer 000C                                   turnRight@i 0029  
                                   isa$xinst 0000                                   _RC4STAbits 0EE7  
                                   main@RGBC 01C0                                     int$flags 0050  
                               ?_calibration 002D                                     main@blue 01A8  
                       color_calibration@red 0036                                 ??_returnHome 003C  
                                   main@pink 0180                                     _turnLeft 356C  
                    fullSpeedAhead@cur_power 002A                          __end_of_white_Light 442E  
                  __end_of_color_calibration 2FC4                                   _INTCONbits 0FF2  
                  reverseOneSquare@cur_power 002B                                  ??_rgb_2_hsv 0030  
                         reverseOneSquare@mL 001F                           reverseOneSquare@mR 0021  
                         __end_of_resetTimer 4518                             move@turnDuration 00C0  
                             ??_batteryLevel 0014                                  _setMotorPWM 3740  
                          ??_get16bitTMR0val 000E                              ??_isDataInTxBuf 0001  
                                   intlevel2 0000                             ___lldiv@dividend 0018  
                           ??_fullSpeedAhead 0025                           __end_of_returnHome 14BE  
                                  turnLeft@i 0029                                  ?_ADC_getval 0001  
                          main@straightSpeed 0199                        color_detect@lightBlue 0038  
                           _color_click_init 4230                                   _SSP2DATPPS 0E1D  
                           ___lldiv@quotient 0020                                   _SSP2CLKPPS 0E1C  
                               ___aldiv@sign 0021                                  ??_turnRight 0026  
                           main@straightRamp 01B6                             main@straightTime 0100  
                                 _TX4STAbits 0EE8                       ??i2_I2C_2_Master_Start 0002  
                     ??i2_I2C_2_Master_Write 0002                             ??_putCharToRxBuf 0001  
                               returnHome@mL 002D                                 returnHome@mR 002F  
