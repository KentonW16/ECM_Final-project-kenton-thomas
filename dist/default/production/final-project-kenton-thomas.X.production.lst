

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Mar 04 17:02:24 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 21/07/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F67K40 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     _RC4STAbits	set	3815
    86   000000                     _SP4BRGH	set	3814
    87   000000                     _SP4BRGL	set	3813
    88   000000                     _TX4STAbits	set	3816
    89   000000                     _BAUD4CONbits	set	3817
    90   000000                     _TX4REG	set	3812
    91   000000                     _TRISEbits	set	3973
    92   000000                     _TRISGbits	set	3975
    93   000000                     _LATFbits	set	3966
    94   000000                     _TRISFbits	set	3974
    95   000000                     _TRISHbits	set	3976
    96   000000                     _LATEbits	set	3965
    97   000000                     _LATGbits	set	3967
    98   000000                     _SSP2CON2bits	set	3802
    99   000000                     _RX4PPS	set	3605
   100   000000                     _SSP2CLKPPS	set	3612
   101   000000                     _SSP2DATPPS	set	3613
   102   000000                     _ANSELDbits	set	3751
   103   000000                     _SSP2ADD	set	3798
   104   000000                     _SSP2CON1bits	set	3801
   105   000000                     _LATAbits	set	3961
   106   000000                     _LATDbits	set	3964
   107   000000                     _LATHbits	set	3968
   108   000000                     _TRISAbits	set	3969
   109   000000                     _TRISDbits	set	3972
   110   000000                     _PORTFbits	set	3982
   111   000000                     _INTCONbits	set	4082
   112   000000                     _RC4REG	set	3811
   113   000000                     _SSP2CON2	set	3802
   114   000000                     _SSP2STAT	set	3800
   115   000000                     _ANSELFbits	set	3764
   116   000000                     _SSP2BUF	set	3797
   117   000000                     _PIE4bits	set	3629
   118   000000                     _RD5PPS	set	3695
   119   000000                     _RD6PPS	set	3696
   120   000000                     _PIR4bits	set	3639
   121   000000                     _RC0PPS	set	3682
   122                           
   123                           	psect	smallconst
   124   000E00                     __psmallconst:
   125                           	callstack 0
   126   000E00  00                 	db	0
   127   000E01                     STR_1:
   128   000E01  72                 	db	114	;'r'
   129   000E02  3D                 	db	61	;'='
   130   000E03  25                 	db	37
   131   000E04  64                 	db	100	;'d'
   132   000E05  20                 	db	32
   133   000E06  67                 	db	103	;'g'
   134   000E07  3D                 	db	61	;'='
   135   000E08  25                 	db	37
   136   000E09  64                 	db	100	;'d'
   137   000E0A  20                 	db	32
   138   000E0B  62                 	db	98	;'b'
   139   000E0C  3D                 	db	61	;'='
   140   000E0D  25                 	db	37
   141   000E0E  64                 	db	100	;'d'
   142   000E0F  20                 	db	32
   143   000E10  63                 	db	99	;'c'
   144   000E11  3D                 	db	61	;'='
   145   000E12  25                 	db	37
   146   000E13  64                 	db	100	;'d'
   147   000E14  20                 	db	32
   148   000E15  20                 	db	32
   149   000E16  20                 	db	32
   150   000E17  6E                 	db	110	;'n'
   151   000E18  3A                 	db	58	;':'
   152   000E19  20                 	db	32
   153   000E1A  72                 	db	114	;'r'
   154   000E1B  3D                 	db	61	;'='
   155   000E1C  25                 	db	37
   156   000E1D  64                 	db	100	;'d'
   157   000E1E  20                 	db	32
   158   000E1F  67                 	db	103	;'g'
   159   000E20  3D                 	db	61	;'='
   160   000E21  25                 	db	37
   161   000E22  64                 	db	100	;'d'
   162   000E23  20                 	db	32
   163   000E24  62                 	db	98	;'b'
   164   000E25  3D                 	db	61	;'='
   165   000E26  25                 	db	37
   166   000E27  64                 	db	100	;'d'
   167   000E28  0D                 	db	13
   168   000E29  0A                 	db	10
   169   000E2A  00                 	db	0
   170   000E2B  00                 	db	0	; dummy byte at the end
   171   000000                     
   172                           ; #config settings
   173                           
   174                           	psect	cinit
   175   00191E                     __pcinit:
   176                           	callstack 0
   177   00191E                     start_initialization:
   178                           	callstack 0
   179   00191E                     __initialization:
   180                           	callstack 0
   181                           
   182                           ; Clear objects allocated to BANK1 (40 bytes)
   183   00191E  EE01  F000         	lfsr	0,__pbssBANK1
   184   001922  0E28               	movlw	40
   185   001924                     clear_0:
   186   001924  6AEE               	clrf	postinc0,c
   187   001926  06E8               	decf	wreg,f,c
   188   001928  E1FD               	bnz	clear_0
   189                           
   190                           ; Clear objects allocated to BANK0 (92 bytes)
   191   00192A  EE00  F060         	lfsr	0,__pbssBANK0
   192   00192E  0E5C               	movlw	92
   193   001930                     clear_1:
   194   001930  6AEE               	clrf	postinc0,c
   195   001932  06E8               	decf	wreg,f,c
   196   001934  E1FD               	bnz	clear_1
   197                           
   198                           ; Clear objects allocated to COMRAM (29 bytes)
   199   001936  EE00  F03C         	lfsr	0,__pbssCOMRAM
   200   00193A  0E1D               	movlw	29
   201   00193C                     clear_2:
   202   00193C  6AEE               	clrf	postinc0,c
   203   00193E  06E8               	decf	wreg,f,c
   204   001940  E1FD               	bnz	clear_2
   205   001942                     end_of_initialization:
   206                           	callstack 0
   207   001942                     __end_of__initialization:
   208                           	callstack 0
   209   001942  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   210   001944  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   211   001946  0E00               	movlw	low (__Lmediumconst shr (0+16))
   212   001948  6EF8               	movwf	tblptru,c
   213   00194A  0100               	movlb	0
   214   00194C  EF04  F00A         	goto	_main	;jump to C main() function
   215                           
   216                           	psect	bssCOMRAM
   217   00003C                     __pbssCOMRAM:
   218                           	callstack 0
   219   00003C                     _EUSART4RXbuf:
   220                           	callstack 0
   221   00003C                     	ds	20
   222   000050                     _width:
   223                           	callstack 0
   224   000050                     	ds	2
   225   000052                     _prec:
   226                           	callstack 0
   227   000052                     	ds	2
   228   000054                     _flags:
   229                           	callstack 0
   230   000054                     	ds	1
   231   000055                     _TxBufReadCnt:
   232                           	callstack 0
   233   000055                     	ds	1
   234   000056                     _TxBufWriteCnt:
   235                           	callstack 0
   236   000056                     	ds	1
   237   000057                     _RxBufReadCnt:
   238                           	callstack 0
   239   000057                     	ds	1
   240   000058                     _RxBufWriteCnt:
   241                           	callstack 0
   242   000058                     	ds	1
   243                           
   244                           	psect	bssBANK0
   245   000060                     __pbssBANK0:
   246                           	callstack 0
   247   000060                     _EUSART4TXbuf:
   248                           	callstack 0
   249   000060                     	ds	60
   250   00009C                     _dbuf:
   251                           	callstack 0
   252   00009C                     	ds	32
   253                           
   254                           	psect	bssBANK1
   255   000100                     __pbssBANK1:
   256                           	callstack 0
   257   000100                     	ds	40
   258                           
   259                           	psect	cstackBANK0
   260   0000BC                     __pcstackBANK0:
   261                           	callstack 0
   262   0000BC                     main@buf:
   263                           	callstack 0
   264                           
   265                           ; 40 bytes @ 0x0
   266   0000BC                     	ds	40
   267   0000E4                     main@RGBC_n:
   268                           	callstack 0
   269                           
   270                           ; 8 bytes @ 0x28
   271   0000E4                     	ds	8
   272   0000EC                     main@RGBC:
   273                           	callstack 0
   274                           
   275                           ; 8 bytes @ 0x30
   276   0000EC                     	ds	8
   277                           
   278                           	psect	cstackCOMRAM
   279   000001                     __pcstackCOMRAM:
   280                           	callstack 0
   281   000001                     ??_getCharFromTxBuf:
   282   000001                     putCharToRxBuf@byte:
   283                           	callstack 0
   284   000001                     
   285                           ; 1 bytes @ 0x0
   286   000001                     	ds	1
   287   000002                     ??_HighISR:
   288                           
   289                           ; 1 bytes @ 0x1
   290   000002                     	ds	2
   291   000004                     ??_I2C_2_Master_Idle:
   292   000004                     ?___awdiv:
   293                           	callstack 0
   294   000004                     ?___awmod:
   295                           	callstack 0
   296   000004                     ?___lmul:
   297                           	callstack 0
   298   000004                     white_Light@state:
   299                           	callstack 0
   300   000004                     putCharToTxBuf@byte:
   301                           	callstack 0
   302   000004                     ___awdiv@dividend:
   303                           	callstack 0
   304   000004                     ___awmod@dividend:
   305                           	callstack 0
   306   000004                     fputc@c:
   307                           	callstack 0
   308   000004                     ___lmul@multiplier:
   309                           	callstack 0
   310                           
   311                           ; 4 bytes @ 0x3
   312   000004                     	ds	1
   313   000005                     ??_I2C_2_Master_Read:
   314   000005                     I2C_2_Master_Write@data_byte:
   315                           	callstack 0
   316   000005                     TxBufferedString@string:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x4
   320   000005                     	ds	1
   321   000006                     color_writetoaddr@value:
   322                           	callstack 0
   323   000006                     I2C_2_Master_Read@ack:
   324                           	callstack 0
   325   000006                     fputc@fp:
   326                           	callstack 0
   327   000006                     ___awdiv@divisor:
   328                           	callstack 0
   329   000006                     ___awmod@divisor:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x5
   333   000006                     	ds	1
   334   000007                     ??_fputc:
   335   000007                     color_writetoaddr@address:
   336                           	callstack 0
   337   000007                     I2C_2_Master_Read@tmp:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x6
   341   000007                     	ds	1
   342   000008                     ??_color_click_init:
   343   000008                     color_read@RGBC:
   344                           	callstack 0
   345   000008                     ___awdiv@counter:
   346                           	callstack 0
   347   000008                     ___awmod@counter:
   348                           	callstack 0
   349   000008                     ___lmul@multiplicand:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0x7
   353   000008                     	ds	1
   354   000009                     ??_color_read:
   355   000009                     ___awdiv@sign:
   356                           	callstack 0
   357   000009                     ___awmod@sign:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x8
   361   000009                     	ds	1
   362   00000A                     ?_abs:
   363                           	callstack 0
   364   00000A                     ___awdiv@quotient:
   365                           	callstack 0
   366   00000A                     abs@a:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x9
   370   00000A                     	ds	2
   371   00000C                     ??_abs:
   372   00000C                     ___lmul@product:
   373                           	callstack 0
   374                           
   375                           ; 4 bytes @ 0xB
   376   00000C                     	ds	2
   377   00000E                     vfpfcnvrt@fp:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0xD
   381   00000E                     	ds	1
   382   00000F                     vfpfcnvrt@fmt:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0xE
   386   00000F                     	ds	1
   387   000010                     ?___aldiv:
   388                           	callstack 0
   389   000010                     vfpfcnvrt@ap:
   390                           	callstack 0
   391   000010                     ___aldiv@dividend:
   392                           	callstack 0
   393                           
   394                           ; 4 bytes @ 0xF
   395   000010                     	ds	1
   396   000011                     ??_vfpfcnvrt:
   397                           
   398                           ; 1 bytes @ 0x10
   399   000011                     	ds	1
   400   000012                     vfpfcnvrt@done:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x11
   404   000012                     	ds	1
   405   000013                     vfpfcnvrt@cp:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x12
   409   000013                     	ds	1
   410   000014                     ___aldiv@divisor:
   411                           	callstack 0
   412   000014                     vfpfcnvrt@convarg:
   413                           	callstack 0
   414                           
   415                           ; 4 bytes @ 0x13
   416   000014                     	ds	4
   417   000018                     ___aldiv@counter:
   418                           	callstack 0
   419   000018                     vfpfcnvrt@c:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x17
   423   000018                     	ds	1
   424   000019                     ?_vfprintf:
   425                           	callstack 0
   426   000019                     ___aldiv@sign:
   427                           	callstack 0
   428   000019                     vfprintf@fp:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x18
   432   000019                     	ds	1
   433   00001A                     vfprintf@fmt:
   434                           	callstack 0
   435   00001A                     ___aldiv@quotient:
   436                           	callstack 0
   437                           
   438                           ; 4 bytes @ 0x19
   439   00001A                     	ds	1
   440   00001B                     vfprintf@ap:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x1A
   444   00001B                     	ds	1
   445   00001C                     vfprintf@cfmt:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x1B
   449   00001C                     	ds	1
   450   00001D                     ?_sprintf:
   451                           	callstack 0
   452   00001D                     sprintf@s:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x1C
   456   00001D                     	ds	1
   457   00001E                     sprintf@fmt:
   458                           	callstack 0
   459   00001E                     color_normalise@RGBC:
   460                           	callstack 0
   461                           
   462                           ; 8 bytes @ 0x1D
   463   00001E                     	ds	8
   464   000026                     color_normalise@RGBC_n:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x25
   468   000026                     	ds	1
   469   000027                     ??_color_normalise:
   470                           
   471                           ; 1 bytes @ 0x26
   472   000027                     	ds	6
   473   00002D                     sprintf@ap:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x2C
   477   00002D                     	ds	1
   478   00002E                     sprintf@f:
   479                           	callstack 0
   480                           
   481                           ; 12 bytes @ 0x2D
   482   00002E                     	ds	12
   483   00003A                     ??_main:
   484                           
   485                           ; 1 bytes @ 0x39
   486   00003A                     	ds	2
   487                           
   488 ;;
   489 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   490 ;;
   491 ;; *************** function _main *****************
   492 ;; Defined at:
   493 ;;		line 22 in file "main.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  buf            40    0[BANK0 ] unsigned char [40]
   498 ;;  RGBC            8   48[BANK0 ] struct RGBC_val
   499 ;;  RGBC_n          8   40[BANK0 ] struct RGBC_val
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   510 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   511 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   512 ;;      Totals:         2      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   513 ;;Total ram usage:       58 bytes
   514 ;; Hardware stack levels required when called: 7
   515 ;; This function calls:
   516 ;;		_Buggy_init
   517 ;;		_Interrupts_init
   518 ;;		_TxBufferedString
   519 ;;		_color_click_init
   520 ;;		_color_normalise
   521 ;;		_color_read
   522 ;;		_initUSART4
   523 ;;		_sendTxBuf
   524 ;;		_sprintf
   525 ;;		_white_Light
   526 ;; This function is called by:
   527 ;;		Startup code after reset
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text0
   532   001408                     __ptext0:
   533                           	callstack 0
   534   001408                     _main:
   535                           	callstack 24
   536   001408                     
   537                           ;main.c: 23:     Buggy_init();
   538   001408  EC26  F00C         	call	_Buggy_init	;wreg free
   539   00140C                     
   540                           ;main.c: 24:     color_click_init();
   541   00140C  EC75  F00C         	call	_color_click_init	;wreg free
   542   001410                     
   543                           ;main.c: 25:     initUSART4();
   544   001410  EC2C  F00D         	call	_initUSART4	;wreg free
   545   001414                     
   546                           ;main.c: 26:     Interrupts_init();
   547   001414  EC75  F00D         	call	_Interrupts_init	;wreg free
   548   001418                     
   549                           ;main.c: 27:     char buf[40] = {0};
   550   001418  EE20  F0BC         	lfsr	2,main@buf
   551   00141C  0E27               	movlw	39
   552   00141E                     u1091:
   553   00141E  6ADE               	clrf	postinc2,c
   554   001420  06E8               	decf	wreg,f,c
   555   001422  E2FD               	bc	u1091
   556   001424                     
   557                           ;main.c: 29:     struct RGBC_val RGBC, RGBC_n;;main.c: 32:     LATHbits.LATH1=LATDbits.L
      +                          ATD3=1;
   558   001424  867C               	bsf	124,3,c	;volatile
   559   001426  8280               	bsf	128,1,c	;volatile
   560   001428                     
   561                           ;main.c: 35:     white_Light(1);
   562   001428  0E01               	movlw	1
   563   00142A  EC0A  F00D         	call	_white_Light
   564   00142E                     l48:
   565   00142E  B48E               	btfsc	142,2,c	;volatile
   566   001430  EF1C  F00A         	goto	u1101
   567   001434  EF1E  F00A         	goto	u1100
   568   001438                     u1101:
   569   001438  EF17  F00A         	goto	l48
   570   00143C                     u1100:
   571   00143C                     
   572                           ;main.c: 40:         color_read(&RGBC);
   573   00143C  0EEC               	movlw	low main@RGBC
   574   00143E  6E08               	movwf	color_read@RGBC^0,c
   575   001440  EC16  F007         	call	_color_read	;wreg free
   576   001444                     
   577                           ;main.c: 41:         color_normalise(RGBC, &RGBC_n);
   578   001444  EE20  F0EC         	lfsr	2,main@RGBC
   579   001448  EE00  F01E         	lfsr	0,color_normalise@RGBC
   580   00144C  0E07               	movlw	7
   581   00144E                     u1111:
   582   00144E  CFDB FFEB          	movff	plusw2,plusw0
   583   001452  06E8               	decf	wreg,f,c
   584   001454  E2FC               	bc	u1111
   585   001456  0EE4               	movlw	low main@RGBC_n
   586   001458  6E26               	movwf	color_normalise@RGBC_n^0,c
   587   00145A  ECDD  F008         	call	_color_normalise	;wreg free
   588   00145E                     
   589                           ;main.c: 43:         sprintf(buf,"r=%d g=%d b=%d c=%d   n: r=%d g=%d b=%d\r\n",RGBC.R,RG
      +                          BC.G,RGBC.B,RGBC.C, RGBC_n.R,RGBC_n.G,RGBC_n.B);
   590   00145E  0EBC               	movlw	low main@buf
   591   001460  6E1D               	movwf	sprintf@s^0,c
   592   001462  0E01               	movlw	low STR_1
   593   001464  6E1E               	movwf	sprintf@fmt^0,c
   594   001466  C0EC  F01F         	movff	main@RGBC,?_sprintf+2
   595   00146A  C0ED  F020         	movff	main@RGBC+1,?_sprintf+3
   596   00146E  C0EE  F021         	movff	main@RGBC+2,?_sprintf+4
   597   001472  C0EF  F022         	movff	main@RGBC+3,?_sprintf+5
   598   001476  C0F0  F023         	movff	main@RGBC+4,?_sprintf+6
   599   00147A  C0F1  F024         	movff	main@RGBC+5,?_sprintf+7
   600   00147E  C0F2  F025         	movff	main@RGBC+6,?_sprintf+8
   601   001482  C0F3  F026         	movff	main@RGBC+7,?_sprintf+9
   602   001486  C0E4  F027         	movff	main@RGBC_n,?_sprintf+10
   603   00148A  C0E5  F028         	movff	main@RGBC_n+1,?_sprintf+11
   604   00148E  C0E6  F029         	movff	main@RGBC_n+2,?_sprintf+12
   605   001492  C0E7  F02A         	movff	main@RGBC_n+3,?_sprintf+13
   606   001496  C0E8  F02B         	movff	main@RGBC_n+4,?_sprintf+14
   607   00149A  C0E9  F02C         	movff	main@RGBC_n+5,?_sprintf+15
   608   00149E  EC41  F00C         	call	_sprintf	;wreg free
   609   0014A2                     
   610                           ;main.c: 44:         sendTxBuf();
   611   0014A2  EC3B  F00D         	call	_sendTxBuf	;wreg free
   612   0014A6                     
   613                           ;main.c: 45:         TxBufferedString(buf);
   614   0014A6  0EBC               	movlw	low main@buf
   615   0014A8  6E05               	movwf	TxBufferedString@string^0,c
   616   0014AA  6A06               	clrf	(TxBufferedString@string+1)^0,c
   617   0014AC  ECB5  F00B         	call	_TxBufferedString	;wreg free
   618   0014B0                     
   619                           ;main.c: 46:         sendTxBuf();
   620   0014B0  EC3B  F00D         	call	_sendTxBuf	;wreg free
   621   0014B4                     
   622                           ;main.c: 47:         TxBufferedString("");
   623   0014B4  0E2A               	movlw	low (STR_1+41)
   624   0014B6  6E05               	movwf	TxBufferedString@string^0,c
   625   0014B8  5005               	movf	TxBufferedString@string^0,w,c
   626   0014BA  A4D8               	btfss	status,2,c
   627   0014BC  0E0E               	movlw	high __smallconst
   628   0014BE  6E06               	movwf	(TxBufferedString@string+1)^0,c
   629   0014C0  ECB5  F00B         	call	_TxBufferedString	;wreg free
   630   0014C4                     
   631                           ;main.c: 48:         _delay((unsigned long)((300)*(64000000/4000.0)));
   632   0014C4  0E19               	movlw	25
   633   0014C6  6E3B               	movwf	(??_main+1)^0,c
   634   0014C8  0E5A               	movlw	90
   635   0014CA  6E3A               	movwf	??_main^0,c
   636   0014CC  0EB2               	movlw	178
   637   0014CE                     u1157:
   638   0014CE  2EE8               	decfsz	wreg,f,c
   639   0014D0  D7FE               	bra	u1157
   640   0014D2  2E3A               	decfsz	??_main^0,f,c
   641   0014D4  D7FC               	bra	u1157
   642   0014D6  2E3B               	decfsz	(??_main+1)^0,f,c
   643   0014D8  D7FA               	bra	u1157
   644   0014DA  EF17  F00A         	goto	l48
   645   0014DE  EF32  F000         	goto	start
   646   0014E2                     __end_of_main:
   647                           	callstack 0
   648                           
   649 ;; *************** function _white_Light *****************
   650 ;; Defined at:
   651 ;;		line 32 in file "color.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;  state           1    wreg     unsigned char 
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  state           1    3[COMRAM] unsigned char 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, status,2
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   669 ;;Total ram usage:        1 bytes
   670 ;; Hardware stack levels used: 1
   671 ;; Hardware stack levels required when called: 2
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text1
   680   001A14                     __ptext1:
   681                           	callstack 0
   682   001A14                     _white_Light:
   683                           	callstack 28
   684                           
   685                           ;incstack = 0
   686                           ;white_Light@state stored from wreg
   687   001A14  6E04               	movwf	white_Light@state^0,c
   688   001A16                     
   689                           ;color.c: 32: void white_Light(char state);color.c: 33: {;color.c: 34:     if (state){
   690   001A16  5004               	movf	white_Light@state^0,w,c
   691   001A18  B4D8               	btfsc	status,2,c
   692   001A1A  EF11  F00D         	goto	u1031
   693   001A1E  EF13  F00D         	goto	u1030
   694   001A22                     u1031:
   695   001A22  EF18  F00D         	goto	l84
   696   001A26                     u1030:
   697   001A26                     
   698                           ;color.c: 35:         LATGbits.LATG0 = 1;
   699   001A26  807F               	bsf	127,0,c	;volatile
   700                           
   701                           ;color.c: 36:         LATEbits.LATE7 = 1;
   702   001A28  8E7D               	bsf	125,7,c	;volatile
   703                           
   704                           ;color.c: 37:         LATAbits.LATA3 = 1;
   705   001A2A  8679               	bsf	121,3,c	;volatile
   706                           
   707                           ;color.c: 38:     }
   708   001A2C  EF1B  F00D         	goto	l86
   709   001A30                     l84:
   710                           
   711                           ;color.c: 40:         LATGbits.LATG0 = 0;
   712   001A30  907F               	bcf	127,0,c	;volatile
   713                           
   714                           ;color.c: 41:         LATEbits.LATE7 = 0;
   715   001A32  9E7D               	bcf	125,7,c	;volatile
   716                           
   717                           ;color.c: 42:         LATAbits.LATA3 = 0;
   718   001A34  9679               	bcf	121,3,c	;volatile
   719   001A36                     l86:
   720   001A36  0012               	return		;funcret
   721   001A38                     __end_of_white_Light:
   722                           	callstack 0
   723                           
   724 ;; *************** function _sprintf *****************
   725 ;; Defined at:
   726 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  s               1   28[COMRAM] PTR unsigned char 
   729 ;;		 -> main@buf(40), 
   730 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
   731 ;;		 -> STR_1(42), 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  f              12   45[COMRAM] struct _IO_FILE
   734 ;;  ret             2    0        int 
   735 ;;  ap              1   44[COMRAM] PTR void [1]
   736 ;;		 -> ?_sprintf(2), 
   737 ;; Return value:  Size  Location     Type
   738 ;;                  2   28[COMRAM] int 
   739 ;; Registers used:
   740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   746 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   747 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   749 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   750 ;;Total ram usage:       29 bytes
   751 ;; Hardware stack levels used: 1
   752 ;; Hardware stack levels required when called: 6
   753 ;; This function calls:
   754 ;;		_vfprintf
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text2
   761   001882                     __ptext2:
   762                           	callstack 0
   763   001882                     _sprintf:
   764                           	callstack 24
   765   001882  0E1F               	movlw	low (?_sprintf+2)
   766   001884  6E2D               	movwf	sprintf@ap^0,c
   767   001886  C01D  F02E         	movff	sprintf@s,sprintf@f
   768   00188A  0E00               	movlw	0
   769   00188C  6E32               	movwf	(sprintf@f+4)^0,c
   770   00188E  0E00               	movlw	0
   771   001890  6E31               	movwf	(sprintf@f+3)^0,c
   772   001892  0E00               	movlw	0
   773   001894  6E39               	movwf	(sprintf@f+11)^0,c
   774   001896  0E00               	movlw	0
   775   001898  6E38               	movwf	(sprintf@f+10)^0,c
   776   00189A  0E2E               	movlw	low sprintf@f
   777   00189C  6E19               	movwf	vfprintf@fp^0,c
   778   00189E  C01E  F01A         	movff	sprintf@fmt,vfprintf@fmt
   779   0018A2  0E2D               	movlw	low sprintf@ap
   780   0018A4  6E1B               	movwf	vfprintf@ap^0,c
   781   0018A6  EC07  F00C         	call	_vfprintf	;wreg free
   782   0018AA  501D               	movf	sprintf@s^0,w,c
   783   0018AC  2431               	addwf	(sprintf@f+3)^0,w,c
   784   0018AE  6ED9               	movwf	fsr2l,c
   785   0018B0  6ADA               	clrf	fsr2h,c
   786   0018B2  6ADF               	clrf	indf2,c
   787   0018B4  0012               	return		;funcret
   788   0018B6                     __end_of_sprintf:
   789                           	callstack 0
   790                           
   791 ;; *************** function _vfprintf *****************
   792 ;; Defined at:
   793 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
   796 ;;		 -> sprintf@f(12), 
   797 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
   798 ;;		 -> STR_1(42), 
   799 ;;  ap              1   26[COMRAM] PTR PTR void 
   800 ;;		 -> sprintf@ap(1), 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
   803 ;;		 -> STR_1(42), 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  2   24[COMRAM] int 
   806 ;; Registers used:
   807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   813 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   816 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   817 ;;Total ram usage:        4 bytes
   818 ;; Hardware stack levels used: 1
   819 ;; Hardware stack levels required when called: 5
   820 ;; This function calls:
   821 ;;		_vfpfcnvrt
   822 ;; This function is called by:
   823 ;;		_sprintf
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text3
   828   00180E                     __ptext3:
   829                           	callstack 0
   830   00180E                     _vfprintf:
   831                           	callstack 24
   832   00180E                     
   833                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   834   00180E  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
   835                           
   836                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   837   001812  EF13  F00C         	goto	l1722
   838   001816                     l1720:
   839                           
   840                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   841   001816  C019  F00E         	movff	vfprintf@fp,vfpfcnvrt@fp
   842   00181A  0E1C               	movlw	low vfprintf@cfmt
   843   00181C  6E0F               	movwf	vfpfcnvrt@fmt^0,c
   844   00181E  C01B  F010         	movff	vfprintf@ap,vfpfcnvrt@ap
   845   001822  EC01  F008         	call	_vfpfcnvrt	;wreg free
   846   001826                     l1722:
   847                           
   848                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   849   001826  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
   850   00182A                     	if	1	;There is more than 1 active tblptr byte
   851   00182A  0E0E               	movlw	high __smallconst
   852   00182C  6EF7               	movwf	tblptrh,c
   853   00182E                     	endif
   854   00182E                     	if	0	;tblptru may be non-zero
   855   00182E                     	endif
   856   00182E                     	if	0	;tblptru may be non-zero
   857   00182E                     	endif
   858   00182E  0008               	tblrd		*
   859   001830  50F5               	movf	tablat,w,c
   860   001832  0900               	iorlw	0
   861   001834  A4D8               	btfss	status,2,c
   862   001836  EF1F  F00C         	goto	u1021
   863   00183A  EF21  F00C         	goto	u1020
   864   00183E                     u1021:
   865   00183E  EF0B  F00C         	goto	l1720
   866   001842                     u1020:
   867   001842                     
   868                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   869   001842  0E00               	movlw	0
   870   001844  6E1A               	movwf	(?_vfprintf+1)^0,c
   871   001846  0E00               	movlw	0
   872   001848  6E19               	movwf	?_vfprintf^0,c
   873   00184A  0012               	return		;funcret
   874   00184C                     __end_of_vfprintf:
   875                           	callstack 0
   876                           
   877 ;; *************** function _vfpfcnvrt *****************
   878 ;; Defined at:
   879 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
   882 ;;		 -> sprintf@f(12), 
   883 ;;  fmt             1   14[COMRAM] PTR PTR unsigned char 
   884 ;;		 -> vfprintf@cfmt(1), 
   885 ;;  ap              1   15[COMRAM] PTR PTR void 
   886 ;;		 -> sprintf@ap(1), 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  convarg         4   19[COMRAM] struct .
   889 ;;  c               1   23[COMRAM] unsigned char 
   890 ;;  cp              1   18[COMRAM] PTR unsigned char 
   891 ;;		 -> STR_1(42), 
   892 ;;  done            1   17[COMRAM] _Bool 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   902 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   903 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   904 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   905 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   906 ;;Total ram usage:       11 bytes
   907 ;; Hardware stack levels used: 1
   908 ;; Hardware stack levels required when called: 4
   909 ;; This function calls:
   910 ;;		___awdiv
   911 ;;		___awmod
   912 ;;		_abs
   913 ;;		_fputc
   914 ;; This function is called by:
   915 ;;		_vfprintf
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text4
   920   001002                     __ptext4:
   921                           	callstack 0
   922   001002                     _vfpfcnvrt:
   923                           	callstack 24
   924   001002                     
   925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   926   001002  500F               	movf	vfpfcnvrt@fmt^0,w,c
   927   001004  6ED9               	movwf	fsr2l,c
   928   001006  6ADA               	clrf	fsr2h,c
   929   001008  CFDF FFF6          	movff	indf2,tblptrl
   930   00100C                     	if	1	;There is more than 1 active tblptr byte
   931   00100C  0E0E               	movlw	high __smallconst
   932   00100E  6EF7               	movwf	tblptrh,c
   933   001010                     	endif
   934   001010                     	if	0	;tblptru may be non-zero
   935   001010                     	endif
   936   001010                     	if	0	;tblptru may be non-zero
   937   001010                     	endif
   938   001010  0008               	tblrd		*
   939   001012  50F5               	movf	tablat,w,c
   940   001014  0A25               	xorlw	37
   941   001016  A4D8               	btfss	status,2,c
   942   001018  EF10  F008         	goto	u791
   943   00101C  EF12  F008         	goto	u790
   944   001020                     u791:
   945   001020  EFCB  F008         	goto	l1614
   946   001024                     u790:
   947   001024                     
   948                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   949   001024  500F               	movf	vfpfcnvrt@fmt^0,w,c
   950   001026  6ED9               	movwf	fsr2l,c
   951   001028  6ADA               	clrf	fsr2h,c
   952   00102A  2ADF               	incf	indf2,f,c
   953   00102C                     
   954                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   955   00102C  0E00               	movlw	0
   956   00102E  6E51               	movwf	(_width+1)^0,c
   957   001030  0E00               	movlw	0
   958   001032  6E50               	movwf	_width^0,c
   959   001034  C050  F054         	movff	_width,_flags
   960   001038                     
   961                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   962   001038  6852               	setf	_prec^0,c
   963   00103A  6853               	setf	(_prec+1)^0,c
   964   00103C                     
   965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   966   00103C  500F               	movf	vfpfcnvrt@fmt^0,w,c
   967   00103E  6ED9               	movwf	fsr2l,c
   968   001040  6ADA               	clrf	fsr2h,c
   969   001042  50DF               	movf	indf2,w,c
   970   001044  6E13               	movwf	vfpfcnvrt@cp^0,c
   971   001046                     
   972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   973   001046  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   974   00104A                     	if	1	;There is more than 1 active tblptr byte
   975   00104A  0E0E               	movlw	high __smallconst
   976   00104C  6EF7               	movwf	tblptrh,c
   977   00104E                     	endif
   978   00104E                     	if	0	;tblptru may be non-zero
   979   00104E                     	endif
   980   00104E                     	if	0	;tblptru may be non-zero
   981   00104E                     	endif
   982   00104E  0008               	tblrd		*
   983   001050  50F5               	movf	tablat,w,c
   984   001052  0A64               	xorlw	100
   985   001054  B4D8               	btfsc	status,2,c
   986   001056  EF2F  F008         	goto	u801
   987   00105A  EF31  F008         	goto	u800
   988   00105E                     u801:
   989   00105E  EF3F  F008         	goto	l1584
   990   001062                     u800:
   991   001062  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   992   001066                     	if	1	;There is more than 1 active tblptr byte
   993   001066  0E0E               	movlw	high __smallconst
   994   001068  6EF7               	movwf	tblptrh,c
   995   00106A                     	endif
   996   00106A                     	if	0	;tblptru may be non-zero
   997   00106A                     	endif
   998   00106A                     	if	0	;tblptru may be non-zero
   999   00106A                     	endif
  1000   00106A  0008               	tblrd		*
  1001   00106C  50F5               	movf	tablat,w,c
  1002   00106E  0A69               	xorlw	105
  1003   001070  A4D8               	btfss	status,2,c
  1004   001072  EF3D  F008         	goto	u811
  1005   001076  EF3F  F008         	goto	u810
  1006   00107A                     u811:
  1007   00107A  EFC5  F008         	goto	l1610
  1008   00107E                     u810:
  1009   00107E                     l1584:
  1010                           
  1011                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1012   00107E  5010               	movf	vfpfcnvrt@ap^0,w,c
  1013   001080  6ED9               	movwf	fsr2l,c
  1014   001082  6ADA               	clrf	fsr2h,c
  1015   001084  0E02               	movlw	2
  1016   001086  26DF               	addwf	indf2,f,c
  1017   001088  5CDF               	subwf	indf2,w,c
  1018   00108A  6ED9               	movwf	fsr2l,c
  1019   00108C  6ADA               	clrf	fsr2h,c
  1020   00108E  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1021   001092  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1022   001096                     
  1023                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1024   001096  500F               	movf	vfpfcnvrt@fmt^0,w,c
  1025   001098  6ED9               	movwf	fsr2l,c
  1026   00109A  6ADA               	clrf	fsr2h,c
  1027   00109C  2813               	incf	vfpfcnvrt@cp^0,w,c
  1028   00109E  6EDF               	movwf	indf2,c
  1029   0010A0                     
  1030                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1031   0010A0  0E20               	movlw	32
  1032   0010A2  6E18               	movwf	vfpfcnvrt@c^0,c
  1033                           
  1034                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1035   0010A4  BE15               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1036   0010A6  EF57  F008         	goto	u821
  1037   0010AA  EF5A  F008         	goto	u820
  1038   0010AE                     u821:
  1039   0010AE  0E01               	movlw	1
  1040   0010B0  EF5B  F008         	goto	u830
  1041   0010B4                     u820:
  1042   0010B4  0E00               	movlw	0
  1043   0010B6                     u830:
  1044   0010B6  6E12               	movwf	vfpfcnvrt@done^0,c
  1045   0010B8                     l1590:
  1046                           
  1047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1048   0010B8  0618               	decf	vfpfcnvrt@c^0,f,c
  1049   0010BA  5018               	movf	vfpfcnvrt@c^0,w,c
  1050   0010BC  0F9C               	addlw	low _dbuf
  1051   0010BE  6ED9               	movwf	fsr2l,c
  1052   0010C0  6ADA               	clrf	fsr2h,c
  1053   0010C2  C014  F004         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1054   0010C6  C015  F005         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1055   0010CA  0E00               	movlw	0
  1056   0010CC  6E07               	movwf	(___awmod@divisor+1)^0,c
  1057   0010CE  0E0A               	movlw	10
  1058   0010D0  6E06               	movwf	___awmod@divisor^0,c
  1059   0010D2  ECD3  F00A         	call	___awmod	;wreg free
  1060   0010D6  C004  F00A         	movff	?___awmod,abs@a
  1061   0010DA  C005  F00B         	movff	?___awmod+1,abs@a+1
  1062   0010DE  EC5B  F00C         	call	_abs	;wreg free
  1063   0010E2  500A               	movf	?_abs^0,w,c
  1064   0010E4  0F30               	addlw	48
  1065   0010E6  6EDF               	movwf	indf2,c
  1066   0010E8                     
  1067                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1068   0010E8  C014  F004         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1069   0010EC  C015  F005         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1070   0010F0  0E00               	movlw	0
  1071   0010F2  6E07               	movwf	(___awdiv@divisor+1)^0,c
  1072   0010F4  0E0A               	movlw	10
  1073   0010F6  6E06               	movwf	___awdiv@divisor^0,c
  1074   0010F8  EC71  F00A         	call	___awdiv	;wreg free
  1075   0010FC  C004  F014         	movff	?___awdiv,vfpfcnvrt@convarg
  1076   001100  C005  F015         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1077   001104                     
  1078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1079   001104  5014               	movf	vfpfcnvrt@convarg^0,w,c
  1080   001106  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1081   001108  B4D8               	btfsc	status,2,c
  1082   00110A  EF89  F008         	goto	u841
  1083   00110E  EF8B  F008         	goto	u840
  1084   001112                     u841:
  1085   001112  EF93  F008         	goto	l1598
  1086   001116                     u840:
  1087   001116  5018               	movf	vfpfcnvrt@c^0,w,c
  1088   001118  A4D8               	btfss	status,2,c
  1089   00111A  EF91  F008         	goto	u851
  1090   00111E  EF93  F008         	goto	u850
  1091   001122                     u851:
  1092   001122  EF5C  F008         	goto	l1590
  1093   001126                     u850:
  1094   001126                     l1598:
  1095                           
  1096                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1097   001126  5018               	movf	vfpfcnvrt@c^0,w,c
  1098   001128  B4D8               	btfsc	status,2,c
  1099   00112A  EF99  F008         	goto	u861
  1100   00112E  EF9B  F008         	goto	u860
  1101   001132                     u861:
  1102   001132  EFBA  F008         	goto	l1608
  1103   001136                     u860:
  1104   001136  5012               	movf	vfpfcnvrt@done^0,w,c
  1105   001138  B4D8               	btfsc	status,2,c
  1106   00113A  EFA1  F008         	goto	u871
  1107   00113E  EFA3  F008         	goto	u870
  1108   001142                     u871:
  1109   001142  EFBA  F008         	goto	l1608
  1110   001146                     u870:
  1111   001146                     
  1112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1113   001146  0618               	decf	vfpfcnvrt@c^0,f,c
  1114   001148  5018               	movf	vfpfcnvrt@c^0,w,c
  1115   00114A  0F9C               	addlw	low _dbuf
  1116   00114C  6ED9               	movwf	fsr2l,c
  1117   00114E  6ADA               	clrf	fsr2h,c
  1118   001150  0E2D               	movlw	45
  1119   001152  6EDF               	movwf	indf2,c
  1120   001154  EFBA  F008         	goto	l1608
  1121   001158                     l1604:
  1122                           
  1123                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1124   001158  5018               	movf	vfpfcnvrt@c^0,w,c
  1125   00115A  0F9C               	addlw	low _dbuf
  1126   00115C  6ED9               	movwf	fsr2l,c
  1127   00115E  6ADA               	clrf	fsr2h,c
  1128   001160  50DF               	movf	indf2,w,c
  1129   001162  6E11               	movwf	??_vfpfcnvrt^0,c
  1130   001164  5011               	movf	??_vfpfcnvrt^0,w,c
  1131   001166  6E04               	movwf	fputc@c^0,c
  1132   001168  6A05               	clrf	(fputc@c+1)^0,c
  1133   00116A  C00E  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1134   00116E  EC2B  F00B         	call	_fputc	;wreg free
  1135   001172  2A18               	incf	vfpfcnvrt@c^0,f,c
  1136   001174                     l1608:
  1137                           
  1138                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1139   001174  0E20               	movlw	32
  1140   001176  1818               	xorwf	vfpfcnvrt@c^0,w,c
  1141   001178  A4D8               	btfss	status,2,c
  1142   00117A  EFC1  F008         	goto	u881
  1143   00117E  EFC3  F008         	goto	u880
  1144   001182                     u881:
  1145   001182  EFAC  F008         	goto	l1604
  1146   001186                     u880:
  1147   001186  EFDC  F008         	goto	l992
  1148   00118A                     l1610:
  1149                           
  1150                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1151   00118A  500F               	movf	vfpfcnvrt@fmt^0,w,c
  1152   00118C  6ED9               	movwf	fsr2l,c
  1153   00118E  6ADA               	clrf	fsr2h,c
  1154   001190  2ADF               	incf	indf2,f,c
  1155   001192  EFDC  F008         	goto	l992
  1156   001196                     l1614:
  1157                           
  1158                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1159   001196  500F               	movf	vfpfcnvrt@fmt^0,w,c
  1160   001198  6ED9               	movwf	fsr2l,c
  1161   00119A  6ADA               	clrf	fsr2h,c
  1162   00119C  CFDF FFF6          	movff	indf2,tblptrl
  1163   0011A0                     	if	1	;There is more than 1 active tblptr byte
  1164   0011A0  0E0E               	movlw	high __smallconst
  1165   0011A2  6EF7               	movwf	tblptrh,c
  1166   0011A4                     	endif
  1167   0011A4                     	if	0	;tblptru may be non-zero
  1168   0011A4                     	endif
  1169   0011A4                     	if	0	;tblptru may be non-zero
  1170   0011A4                     	endif
  1171   0011A4  0008               	tblrd		*
  1172   0011A6  50F5               	movf	tablat,w,c
  1173   0011A8  6E04               	movwf	fputc@c^0,c
  1174   0011AA  6A05               	clrf	(fputc@c+1)^0,c
  1175   0011AC  C00E  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1176   0011B0  EC2B  F00B         	call	_fputc	;wreg free
  1177   0011B4  EFC5  F008         	goto	l1610
  1178   0011B8                     l992:
  1179   0011B8  0012               	return		;funcret
  1180   0011BA                     __end_of_vfpfcnvrt:
  1181                           	callstack 0
  1182                           
  1183 ;; *************** function _fputc *****************
  1184 ;; Defined at:
  1185 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  c               2    3[COMRAM] int 
  1188 ;;  fp              1    5[COMRAM] PTR struct _IO_FILE
  1189 ;;		 -> sprintf@f(12), 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  2    3[COMRAM] int 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1201 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1203 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1204 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1205 ;;Total ram usage:        8 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 3
  1208 ;; This function calls:
  1209 ;;		_putch
  1210 ;; This function is called by:
  1211 ;;		_vfpfcnvrt
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text5
  1216   001656                     __ptext5:
  1217                           	callstack 0
  1218   001656                     _fputc:
  1219                           	callstack 24
  1220   001656  5006               	movf	fputc@fp^0,w,c
  1221   001658  B4D8               	btfsc	status,2,c
  1222   00165A  EF31  F00B         	goto	u741
  1223   00165E  EF33  F00B         	goto	u740
  1224   001662                     u741:
  1225   001662  EF3B  F00B         	goto	l1544
  1226   001666                     u740:
  1227   001666  5006               	movf	fputc@fp^0,w,c
  1228   001668  A4D8               	btfss	status,2,c
  1229   00166A  EF39  F00B         	goto	u751
  1230   00166E  EF3B  F00B         	goto	u750
  1231   001672                     u751:
  1232   001672  EF40  F00B         	goto	l1546
  1233   001676                     u750:
  1234   001676                     l1544:
  1235   001676  5004               	movf	fputc@c^0,w,c
  1236   001678  EC7A  F00D         	call	_putch
  1237   00167C  EF7F  F00B         	goto	l1017
  1238   001680                     l1546:
  1239   001680  5006               	movf	fputc@fp^0,w,c
  1240   001682  6ED9               	movwf	fsr2l,c
  1241   001684  6ADA               	clrf	fsr2h,c
  1242   001686  0E0A               	movlw	10
  1243   001688  26D9               	addwf	fsr2l,f,c
  1244   00168A  50DE               	movf	postinc2,w,c
  1245   00168C  10DE               	iorwf	postinc2,w,c
  1246   00168E  B4D8               	btfsc	status,2,c
  1247   001690  EF4C  F00B         	goto	u761
  1248   001694  EF4E  F00B         	goto	u760
  1249   001698                     u761:
  1250   001698  EF67  F00B         	goto	l1550
  1251   00169C                     u760:
  1252   00169C  5006               	movf	fputc@fp^0,w,c
  1253   00169E  6ED9               	movwf	fsr2l,c
  1254   0016A0  6ADA               	clrf	fsr2h,c
  1255   0016A2  0E0A               	movlw	10
  1256   0016A4  26D9               	addwf	fsr2l,f,c
  1257   0016A6  5006               	movf	fputc@fp^0,w,c
  1258   0016A8  6EE1               	movwf	fsr1l,c
  1259   0016AA  6AE2               	clrf	fsr1h,c
  1260   0016AC  0E03               	movlw	3
  1261   0016AE  26E1               	addwf	fsr1l,f,c
  1262   0016B0  50DE               	movf	postinc2,w,c
  1263   0016B2  5CE6               	subwf	postinc1,w,c
  1264   0016B4  50E6               	movf	postinc1,w,c
  1265   0016B6  0A80               	xorlw	128
  1266   0016B8  6E0B               	movwf	(??_fputc+4)^0,c
  1267   0016BA  50DE               	movf	postinc2,w,c
  1268   0016BC  0A80               	xorlw	128
  1269   0016BE  580B               	subwfb	(??_fputc+4)^0,w,c
  1270   0016C0  B0D8               	btfsc	status,0,c
  1271   0016C2  EF65  F00B         	goto	u771
  1272   0016C6  EF67  F00B         	goto	u770
  1273   0016CA                     u771:
  1274   0016CA  EF7F  F00B         	goto	l1017
  1275   0016CE                     u770:
  1276   0016CE                     l1550:
  1277   0016CE  5006               	movf	fputc@fp^0,w,c
  1278   0016D0  6ED9               	movwf	fsr2l,c
  1279   0016D2  6ADA               	clrf	fsr2h,c
  1280   0016D4  0E03               	movlw	3
  1281   0016D6  26D9               	addwf	fsr2l,f,c
  1282   0016D8  50DF               	movf	indf2,w,c
  1283   0016DA  6E07               	movwf	??_fputc^0,c
  1284   0016DC  5006               	movf	fputc@fp^0,w,c
  1285   0016DE  6ED9               	movwf	fsr2l,c
  1286   0016E0  6ADA               	clrf	fsr2h,c
  1287   0016E2  50DF               	movf	indf2,w,c
  1288   0016E4  2407               	addwf	??_fputc^0,w,c
  1289   0016E6  6ED9               	movwf	fsr2l,c
  1290   0016E8  6ADA               	clrf	fsr2h,c
  1291   0016EA  C004  FFDF         	movff	fputc@c,indf2
  1292   0016EE  5006               	movf	fputc@fp^0,w,c
  1293   0016F0  6ED9               	movwf	fsr2l,c
  1294   0016F2  6ADA               	clrf	fsr2h,c
  1295   0016F4  0E03               	movlw	3
  1296   0016F6  26D9               	addwf	fsr2l,f,c
  1297   0016F8  2ADE               	incf	postinc2,f,c
  1298   0016FA  0E00               	movlw	0
  1299   0016FC  22DD               	addwfc	postdec2,f,c
  1300   0016FE                     l1017:
  1301   0016FE  0012               	return		;funcret
  1302   001700                     __end_of_fputc:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _putch *****************
  1306 ;; Defined at:
  1307 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  c               1    wreg     unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  c               1    0[COMRAM] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 2
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_fputc
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text6
  1336   001AF4                     __ptext6:
  1337                           	callstack 0
  1338   001AF4                     _putch:
  1339                           	callstack 24
  1340   001AF4  0012               	return		;funcret
  1341   001AF6                     __end_of_putch:
  1342                           	callstack 0
  1343                           
  1344 ;; *************** function _abs *****************
  1345 ;; Defined at:
  1346 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  a               2    9[COMRAM] int 
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  2    9[COMRAM] int 
  1353 ;; Registers used:
  1354 ;;		wreg, status,2, status,0
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1364 ;;Total ram usage:        4 bytes
  1365 ;; Hardware stack levels used: 1
  1366 ;; Hardware stack levels required when called: 2
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_vfpfcnvrt
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text7
  1375   0018B6                     __ptext7:
  1376                           	callstack 0
  1377   0018B6                     _abs:
  1378                           	callstack 25
  1379   0018B6  BE0B               	btfsc	(abs@a+1)^0,7,c
  1380   0018B8  EF60  F00C         	goto	u781
  1381   0018BC  EF62  F00C         	goto	u780
  1382   0018C0                     u781:
  1383   0018C0  EF68  F00C         	goto	l1002
  1384   0018C4                     u780:
  1385   0018C4  C00A  F00A         	movff	abs@a,?_abs
  1386   0018C8  C00B  F00B         	movff	abs@a+1,?_abs+1
  1387   0018CC  EF74  F00C         	goto	l1005
  1388   0018D0                     l1002:
  1389   0018D0  C00A  F00C         	movff	abs@a,??_abs
  1390   0018D4  C00B  F00D         	movff	abs@a+1,??_abs+1
  1391   0018D8  1E0C               	comf	??_abs^0,f,c
  1392   0018DA  1E0D               	comf	(??_abs+1)^0,f,c
  1393   0018DC  4A0C               	infsnz	??_abs^0,f,c
  1394   0018DE  2A0D               	incf	(??_abs+1)^0,f,c
  1395   0018E0  C00C  F00A         	movff	??_abs,?_abs
  1396   0018E4  C00D  F00B         	movff	??_abs+1,?_abs+1
  1397   0018E8                     l1005:
  1398   0018E8  0012               	return		;funcret
  1399   0018EA                     __end_of_abs:
  1400                           	callstack 0
  1401                           
  1402 ;; *************** function ___awmod *****************
  1403 ;; Defined at:
  1404 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  dividend        2    3[COMRAM] int 
  1407 ;;  divisor         2    5[COMRAM] int 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  sign            1    8[COMRAM] unsigned char 
  1410 ;;  counter         1    7[COMRAM] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  2    3[COMRAM] int 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1423 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1424 ;;Total ram usage:        6 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; Hardware stack levels required when called: 2
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_vfpfcnvrt
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text8
  1435   0015A6                     __ptext8:
  1436                           	callstack 0
  1437   0015A6                     ___awmod:
  1438                           	callstack 25
  1439   0015A6  0E00               	movlw	0
  1440   0015A8  6E09               	movwf	___awmod@sign^0,c
  1441   0015AA  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  1442   0015AC  EFDC  F00A         	goto	u680
  1443   0015B0  EFDA  F00A         	goto	u681
  1444   0015B4                     u681:
  1445   0015B4  EFE2  F00A         	goto	l1512
  1446   0015B8                     u680:
  1447   0015B8  6C04               	negf	___awmod@dividend^0,c
  1448   0015BA  1E05               	comf	(___awmod@dividend+1)^0,f,c
  1449   0015BC  B0D8               	btfsc	status,0,c
  1450   0015BE  2A05               	incf	(___awmod@dividend+1)^0,f,c
  1451   0015C0  0E01               	movlw	1
  1452   0015C2  6E09               	movwf	___awmod@sign^0,c
  1453   0015C4                     l1512:
  1454   0015C4  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  1455   0015C6  EFE9  F00A         	goto	u690
  1456   0015CA  EFE7  F00A         	goto	u691
  1457   0015CE                     u691:
  1458   0015CE  EFED  F00A         	goto	l1516
  1459   0015D2                     u690:
  1460   0015D2  6C06               	negf	___awmod@divisor^0,c
  1461   0015D4  1E07               	comf	(___awmod@divisor+1)^0,f,c
  1462   0015D6  B0D8               	btfsc	status,0,c
  1463   0015D8  2A07               	incf	(___awmod@divisor+1)^0,f,c
  1464   0015DA                     l1516:
  1465   0015DA  5006               	movf	___awmod@divisor^0,w,c
  1466   0015DC  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  1467   0015DE  B4D8               	btfsc	status,2,c
  1468   0015E0  EFF4  F00A         	goto	u701
  1469   0015E4  EFF6  F00A         	goto	u700
  1470   0015E8                     u701:
  1471   0015E8  EF1A  F00B         	goto	l1532
  1472   0015EC                     u700:
  1473   0015EC  0E01               	movlw	1
  1474   0015EE  6E08               	movwf	___awmod@counter^0,c
  1475   0015F0  EFFE  F00A         	goto	l1522
  1476   0015F4                     l1520:
  1477   0015F4  90D8               	bcf	status,0,c
  1478   0015F6  3606               	rlcf	___awmod@divisor^0,f,c
  1479   0015F8  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  1480   0015FA  2A08               	incf	___awmod@counter^0,f,c
  1481   0015FC                     l1522:
  1482   0015FC  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  1483   0015FE  EF03  F00B         	goto	u711
  1484   001602  EF05  F00B         	goto	u710
  1485   001606                     u711:
  1486   001606  EFFA  F00A         	goto	l1520
  1487   00160A                     u710:
  1488   00160A                     l1524:
  1489   00160A  5006               	movf	___awmod@divisor^0,w,c
  1490   00160C  5C04               	subwf	___awmod@dividend^0,w,c
  1491   00160E  5007               	movf	(___awmod@divisor+1)^0,w,c
  1492   001610  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  1493   001612  A0D8               	btfss	status,0,c
  1494   001614  EF0E  F00B         	goto	u721
  1495   001618  EF10  F00B         	goto	u720
  1496   00161C                     u721:
  1497   00161C  EF14  F00B         	goto	l1528
  1498   001620                     u720:
  1499   001620  5006               	movf	___awmod@divisor^0,w,c
  1500   001622  5E04               	subwf	___awmod@dividend^0,f,c
  1501   001624  5007               	movf	(___awmod@divisor+1)^0,w,c
  1502   001626  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  1503   001628                     l1528:
  1504   001628  90D8               	bcf	status,0,c
  1505   00162A  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  1506   00162C  3206               	rrcf	___awmod@divisor^0,f,c
  1507   00162E  2E08               	decfsz	___awmod@counter^0,f,c
  1508   001630  EF05  F00B         	goto	l1524
  1509   001634                     l1532:
  1510   001634  5009               	movf	___awmod@sign^0,w,c
  1511   001636  B4D8               	btfsc	status,2,c
  1512   001638  EF20  F00B         	goto	u731
  1513   00163C  EF22  F00B         	goto	u730
  1514   001640                     u731:
  1515   001640  EF26  F00B         	goto	l1536
  1516   001644                     u730:
  1517   001644  6C04               	negf	___awmod@dividend^0,c
  1518   001646  1E05               	comf	(___awmod@dividend+1)^0,f,c
  1519   001648  B0D8               	btfsc	status,0,c
  1520   00164A  2A05               	incf	(___awmod@dividend+1)^0,f,c
  1521   00164C                     l1536:
  1522   00164C  C004  F004         	movff	___awmod@dividend,?___awmod
  1523   001650  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  1524   001654  0012               	return		;funcret
  1525   001656                     __end_of___awmod:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function ___awdiv *****************
  1529 ;; Defined at:
  1530 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  dividend        2    3[COMRAM] int 
  1533 ;;  divisor         2    5[COMRAM] int 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  quotient        2    9[COMRAM] int 
  1536 ;;  sign            1    8[COMRAM] unsigned char 
  1537 ;;  counter         1    7[COMRAM] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  2    3[COMRAM] int 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1547 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1548 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1550 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1551 ;;Total ram usage:        8 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 2
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_vfpfcnvrt
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text9
  1562   0014E2                     __ptext9:
  1563                           	callstack 0
  1564   0014E2                     ___awdiv:
  1565                           	callstack 25
  1566   0014E2  0E00               	movlw	0
  1567   0014E4  6E09               	movwf	___awdiv@sign^0,c
  1568   0014E6  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  1569   0014E8  EF7A  F00A         	goto	u620
  1570   0014EC  EF78  F00A         	goto	u621
  1571   0014F0                     u621:
  1572   0014F0  EF80  F00A         	goto	l1468
  1573   0014F4                     u620:
  1574   0014F4  6C06               	negf	___awdiv@divisor^0,c
  1575   0014F6  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  1576   0014F8  B0D8               	btfsc	status,0,c
  1577   0014FA  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  1578   0014FC  0E01               	movlw	1
  1579   0014FE  6E09               	movwf	___awdiv@sign^0,c
  1580   001500                     l1468:
  1581   001500  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  1582   001502  EF87  F00A         	goto	u630
  1583   001506  EF85  F00A         	goto	u631
  1584   00150A                     u631:
  1585   00150A  EF8D  F00A         	goto	l1474
  1586   00150E                     u630:
  1587   00150E  6C04               	negf	___awdiv@dividend^0,c
  1588   001510  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  1589   001512  B0D8               	btfsc	status,0,c
  1590   001514  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  1591   001516  0E01               	movlw	1
  1592   001518  1A09               	xorwf	___awdiv@sign^0,f,c
  1593   00151A                     l1474:
  1594   00151A  0E00               	movlw	0
  1595   00151C  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  1596   00151E  0E00               	movlw	0
  1597   001520  6E0A               	movwf	___awdiv@quotient^0,c
  1598   001522  5006               	movf	___awdiv@divisor^0,w,c
  1599   001524  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  1600   001526  B4D8               	btfsc	status,2,c
  1601   001528  EF98  F00A         	goto	u641
  1602   00152C  EF9A  F00A         	goto	u640
  1603   001530                     u641:
  1604   001530  EFC2  F00A         	goto	l1496
  1605   001534                     u640:
  1606   001534  0E01               	movlw	1
  1607   001536  6E08               	movwf	___awdiv@counter^0,c
  1608   001538  EFA2  F00A         	goto	l1482
  1609   00153C                     l1480:
  1610   00153C  90D8               	bcf	status,0,c
  1611   00153E  3606               	rlcf	___awdiv@divisor^0,f,c
  1612   001540  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  1613   001542  2A08               	incf	___awdiv@counter^0,f,c
  1614   001544                     l1482:
  1615   001544  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  1616   001546  EFA7  F00A         	goto	u651
  1617   00154A  EFA9  F00A         	goto	u650
  1618   00154E                     u651:
  1619   00154E  EF9E  F00A         	goto	l1480
  1620   001552                     u650:
  1621   001552                     l1484:
  1622   001552  90D8               	bcf	status,0,c
  1623   001554  360A               	rlcf	___awdiv@quotient^0,f,c
  1624   001556  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  1625   001558  5006               	movf	___awdiv@divisor^0,w,c
  1626   00155A  5C04               	subwf	___awdiv@dividend^0,w,c
  1627   00155C  5007               	movf	(___awdiv@divisor+1)^0,w,c
  1628   00155E  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  1629   001560  A0D8               	btfss	status,0,c
  1630   001562  EFB5  F00A         	goto	u661
  1631   001566  EFB7  F00A         	goto	u660
  1632   00156A                     u661:
  1633   00156A  EFBC  F00A         	goto	l1492
  1634   00156E                     u660:
  1635   00156E  5006               	movf	___awdiv@divisor^0,w,c
  1636   001570  5E04               	subwf	___awdiv@dividend^0,f,c
  1637   001572  5007               	movf	(___awdiv@divisor+1)^0,w,c
  1638   001574  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  1639   001576  800A               	bsf	___awdiv@quotient^0,0,c
  1640   001578                     l1492:
  1641   001578  90D8               	bcf	status,0,c
  1642   00157A  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  1643   00157C  3206               	rrcf	___awdiv@divisor^0,f,c
  1644   00157E  2E08               	decfsz	___awdiv@counter^0,f,c
  1645   001580  EFA9  F00A         	goto	l1484
  1646   001584                     l1496:
  1647   001584  5009               	movf	___awdiv@sign^0,w,c
  1648   001586  B4D8               	btfsc	status,2,c
  1649   001588  EFC8  F00A         	goto	u671
  1650   00158C  EFCA  F00A         	goto	u670
  1651   001590                     u671:
  1652   001590  EFCE  F00A         	goto	l1500
  1653   001594                     u670:
  1654   001594  6C0A               	negf	___awdiv@quotient^0,c
  1655   001596  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  1656   001598  B0D8               	btfsc	status,0,c
  1657   00159A  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  1658   00159C                     l1500:
  1659   00159C  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  1660   0015A0  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  1661   0015A4  0012               	return		;funcret
  1662   0015A6                     __end_of___awdiv:
  1663                           	callstack 0
  1664                           
  1665 ;; *************** function _sendTxBuf *****************
  1666 ;; Defined at:
  1667 ;;		line 74 in file "serial.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1685 ;;Total ram usage:        0 bytes
  1686 ;; Hardware stack levels used: 1
  1687 ;; Hardware stack levels required when called: 3
  1688 ;; This function calls:
  1689 ;;		_isDataInTxBuf
  1690 ;; This function is called by:
  1691 ;;		_main
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text10
  1696   001A76                     __ptext10:
  1697                           	callstack 0
  1698   001A76                     _sendTxBuf:
  1699                           	callstack 27
  1700   001A76                     
  1701                           ;serial.c: 75:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  1702   001A76  EC48  F00D         	call	_isDataInTxBuf	;wreg free
  1703   001A7A  0900               	iorlw	0
  1704   001A7C  B4D8               	btfsc	status,2,c
  1705   001A7E  EF43  F00D         	goto	u1041
  1706   001A82  EF45  F00D         	goto	u1040
  1707   001A86                     u1041:
  1708   001A86  EF47  F00D         	goto	l273
  1709   001A8A                     u1040:
  1710   001A8A  010E               	movlb	14	; () banked
  1711   001A8C  852D               	bsf	45,2,b	;volatile
  1712   001A8E                     l273:
  1713   001A8E  0012               	return		;funcret
  1714   001A90                     __end_of_sendTxBuf:
  1715                           	callstack 0
  1716                           
  1717 ;; *************** function _isDataInTxBuf *****************
  1718 ;; Defined at:
  1719 ;;		line 61 in file "serial.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      unsigned char 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1737 ;;Total ram usage:        0 bytes
  1738 ;; Hardware stack levels used: 1
  1739 ;; Hardware stack levels required when called: 2
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_sendTxBuf
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text11
  1748   001A90                     __ptext11:
  1749                           	callstack 0
  1750   001A90                     _isDataInTxBuf:
  1751                           	callstack 27
  1752   001A90                     
  1753                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  1754   001A90  5055               	movf	_TxBufReadCnt^0,w,c	;volatile
  1755   001A92  1856               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  1756   001A94  A4D8               	btfss	status,2,c
  1757   001A96  EF4F  F00D         	goto	u911
  1758   001A9A  EF52  F00D         	goto	u910
  1759   001A9E                     u911:
  1760   001A9E  0E01               	movlw	1
  1761   001AA0  EF53  F00D         	goto	u920
  1762   001AA4                     u910:
  1763   001AA4  0E00               	movlw	0
  1764   001AA6                     u920:
  1765   001AA6  0012               	return		;funcret
  1766   001AA8                     __end_of_isDataInTxBuf:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _initUSART4 *****************
  1770 ;; Defined at:
  1771 ;;		line 4 in file "serial.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1789 ;;Total ram usage:        0 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 2
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text12
  1800   001A58                     __ptext12:
  1801                           	callstack 0
  1802   001A58                     _initUSART4:
  1803                           	callstack 28
  1804   001A58                     
  1805                           ;serial.c: 7:     RC0PPS = 0x12;
  1806   001A58  0E12               	movlw	18
  1807   001A5A  010E               	movlb	14	; () banked
  1808   001A5C  6F62               	movwf	98,b	;volatile
  1809                           
  1810                           ;serial.c: 8:     RX4PPS = 0x11;
  1811   001A5E  0E11               	movlw	17
  1812   001A60  6F15               	movwf	21,b	;volatile
  1813   001A62                     
  1814                           ; BSR set to: 14
  1815                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  1816   001A62  97E9               	bcf	233,3,b	;volatile
  1817   001A64                     
  1818                           ; BSR set to: 14
  1819                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  1820   001A64  95E8               	bcf	232,2,b	;volatile
  1821                           
  1822                           ;serial.c: 13:     SP4BRGL = 51;
  1823   001A66  0E33               	movlw	51
  1824   001A68  6FE5               	movwf	229,b	;volatile
  1825                           
  1826                           ;serial.c: 14:     SP4BRGH = 0;
  1827   001A6A  0E00               	movlw	0
  1828   001A6C  6FE6               	movwf	230,b	;volatile
  1829   001A6E                     
  1830                           ; BSR set to: 14
  1831                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  1832   001A6E  89E7               	bsf	231,4,b	;volatile
  1833   001A70                     
  1834                           ; BSR set to: 14
  1835                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  1836   001A70  8BE8               	bsf	232,5,b	;volatile
  1837   001A72                     
  1838                           ; BSR set to: 14
  1839                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  1840   001A72  8FE7               	bsf	231,7,b	;volatile
  1841   001A74                     
  1842                           ; BSR set to: 14
  1843   001A74  0012               	return		;funcret
  1844   001A76                     __end_of_initUSART4:
  1845                           	callstack 0
  1846                           
  1847 ;; *************** function _color_read *****************
  1848 ;; Defined at:
  1849 ;;		line 47 in file "color.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  RGBC            1    7[COMRAM] PTR struct RGBC_val
  1852 ;;		 -> main@RGBC(8), 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1864 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1866 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1867 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;Total ram usage:        8 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 4
  1871 ;; This function calls:
  1872 ;;		_I2C_2_Master_Read
  1873 ;;		_I2C_2_Master_RepStart
  1874 ;;		_I2C_2_Master_Start
  1875 ;;		_I2C_2_Master_Stop
  1876 ;;		_I2C_2_Master_Write
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text13
  1883   000E2C                     __ptext13:
  1884                           	callstack 0
  1885   000E2C                     _color_read:
  1886                           	callstack 26
  1887   000E2C                     
  1888                           ;color.c: 47: void color_read(struct RGBC_val *RGBC);color.c: 48: {;color.c: 49:  I2C_2_
      +                          Master_Start();
  1889   000E2C  EC70  F00D         	call	_I2C_2_Master_Start	;wreg free
  1890                           
  1891                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  1892   000E30  0E52               	movlw	82
  1893   000E32  EC60  F00D         	call	_I2C_2_Master_Write
  1894                           
  1895                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x16);
  1896   000E36  0EB6               	movlw	182
  1897   000E38  EC60  F00D         	call	_I2C_2_Master_Write
  1898                           
  1899                           ;color.c: 52:  I2C_2_Master_RepStart();
  1900   000E3C  EC66  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1901                           
  1902                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  1903   000E40  0E53               	movlw	83
  1904   000E42  EC60  F00D         	call	_I2C_2_Master_Write
  1905   000E46                     
  1906                           ;color.c: 54:  RGBC->R=I2C_2_Master_Read(1);
  1907   000E46  0E01               	movlw	1
  1908   000E48  ECE6  F00B         	call	_I2C_2_Master_Read
  1909   000E4C  6E09               	movwf	??_color_read^0,c
  1910   000E4E  6A0A               	clrf	(??_color_read+1)^0,c
  1911   000E50  5008               	movf	color_read@RGBC^0,w,c
  1912   000E52  6ED9               	movwf	fsr2l,c
  1913   000E54  6ADA               	clrf	fsr2h,c
  1914   000E56  C009  FFDE         	movff	??_color_read,postinc2
  1915   000E5A  C00A  FFDD         	movff	??_color_read+1,postdec2
  1916   000E5E                     
  1917                           ;color.c: 55:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  1918   000E5E  5008               	movf	color_read@RGBC^0,w,c
  1919   000E60  6ED9               	movwf	fsr2l,c
  1920   000E62  6ADA               	clrf	fsr2h,c
  1921   000E64  CFDE F009          	movff	postinc2,??_color_read
  1922   000E68  CFDD F00A          	movff	postdec2,??_color_read+1
  1923   000E6C  0E00               	movlw	0
  1924   000E6E  ECE6  F00B         	call	_I2C_2_Master_Read
  1925   000E72  6E0B               	movwf	(??_color_read+2)^0,c
  1926   000E74  500B               	movf	(??_color_read+2)^0,w,c
  1927   000E76  6E0D               	movwf	(??_color_read+4)^0,c
  1928   000E78  6A0C               	clrf	(??_color_read+3)^0,c
  1929   000E7A  5009               	movf	??_color_read^0,w,c
  1930   000E7C  100C               	iorwf	(??_color_read+3)^0,w,c
  1931   000E7E  6E0E               	movwf	(??_color_read+5)^0,c
  1932   000E80  500A               	movf	(??_color_read+1)^0,w,c
  1933   000E82  100D               	iorwf	(??_color_read+4)^0,w,c
  1934   000E84  6E0F               	movwf	(??_color_read+6)^0,c
  1935   000E86  5008               	movf	color_read@RGBC^0,w,c
  1936   000E88  6ED9               	movwf	fsr2l,c
  1937   000E8A  6ADA               	clrf	fsr2h,c
  1938   000E8C  C00E  FFDE         	movff	??_color_read+5,postinc2
  1939   000E90  C00F  FFDD         	movff	??_color_read+6,postdec2
  1940                           
  1941                           ;color.c: 56:  I2C_2_Master_Stop();
  1942   000E94  EC6B  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1943                           
  1944                           ;color.c: 58:     I2C_2_Master_Start();
  1945   000E98  EC70  F00D         	call	_I2C_2_Master_Start	;wreg free
  1946                           
  1947                           ;color.c: 59:  I2C_2_Master_Write(0x52 | 0x00);
  1948   000E9C  0E52               	movlw	82
  1949   000E9E  EC60  F00D         	call	_I2C_2_Master_Write
  1950                           
  1951                           ;color.c: 60:  I2C_2_Master_Write(0xA0 | 0x18);
  1952   000EA2  0EB8               	movlw	184
  1953   000EA4  EC60  F00D         	call	_I2C_2_Master_Write
  1954                           
  1955                           ;color.c: 61:  I2C_2_Master_RepStart();
  1956   000EA8  EC66  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1957                           
  1958                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x01);
  1959   000EAC  0E53               	movlw	83
  1960   000EAE  EC60  F00D         	call	_I2C_2_Master_Write
  1961   000EB2                     
  1962                           ;color.c: 63:  RGBC->G=I2C_2_Master_Read(1);
  1963   000EB2  0E01               	movlw	1
  1964   000EB4  ECE6  F00B         	call	_I2C_2_Master_Read
  1965   000EB8  6E09               	movwf	??_color_read^0,c
  1966   000EBA  6A0A               	clrf	(??_color_read+1)^0,c
  1967   000EBC  5008               	movf	color_read@RGBC^0,w,c
  1968   000EBE  6ED9               	movwf	fsr2l,c
  1969   000EC0  6ADA               	clrf	fsr2h,c
  1970   000EC2  0E02               	movlw	2
  1971   000EC4  26D9               	addwf	fsr2l,f,c
  1972   000EC6  C009  FFDE         	movff	??_color_read,postinc2
  1973   000ECA  C00A  FFDD         	movff	??_color_read+1,postdec2
  1974   000ECE                     
  1975                           ;color.c: 64:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  1976   000ECE  5008               	movf	color_read@RGBC^0,w,c
  1977   000ED0  6ED9               	movwf	fsr2l,c
  1978   000ED2  6ADA               	clrf	fsr2h,c
  1979   000ED4  0E02               	movlw	2
  1980   000ED6  26D9               	addwf	fsr2l,f,c
  1981   000ED8  CFDE F009          	movff	postinc2,??_color_read
  1982   000EDC  CFDD F00A          	movff	postdec2,??_color_read+1
  1983   000EE0  0E00               	movlw	0
  1984   000EE2  ECE6  F00B         	call	_I2C_2_Master_Read
  1985   000EE6  6E0B               	movwf	(??_color_read+2)^0,c
  1986   000EE8  500B               	movf	(??_color_read+2)^0,w,c
  1987   000EEA  6E0D               	movwf	(??_color_read+4)^0,c
  1988   000EEC  6A0C               	clrf	(??_color_read+3)^0,c
  1989   000EEE  5009               	movf	??_color_read^0,w,c
  1990   000EF0  100C               	iorwf	(??_color_read+3)^0,w,c
  1991   000EF2  6E0E               	movwf	(??_color_read+5)^0,c
  1992   000EF4  500A               	movf	(??_color_read+1)^0,w,c
  1993   000EF6  100D               	iorwf	(??_color_read+4)^0,w,c
  1994   000EF8  6E0F               	movwf	(??_color_read+6)^0,c
  1995   000EFA  5008               	movf	color_read@RGBC^0,w,c
  1996   000EFC  6ED9               	movwf	fsr2l,c
  1997   000EFE  6ADA               	clrf	fsr2h,c
  1998   000F00  0E02               	movlw	2
  1999   000F02  26D9               	addwf	fsr2l,f,c
  2000   000F04  C00E  FFDE         	movff	??_color_read+5,postinc2
  2001   000F08  C00F  FFDD         	movff	??_color_read+6,postdec2
  2002                           
  2003                           ;color.c: 65:  I2C_2_Master_Stop();
  2004   000F0C  EC6B  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2005                           
  2006                           ;color.c: 67:     I2C_2_Master_Start();
  2007   000F10  EC70  F00D         	call	_I2C_2_Master_Start	;wreg free
  2008                           
  2009                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  2010   000F14  0E52               	movlw	82
  2011   000F16  EC60  F00D         	call	_I2C_2_Master_Write
  2012                           
  2013                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x1A);
  2014   000F1A  0EBA               	movlw	186
  2015   000F1C  EC60  F00D         	call	_I2C_2_Master_Write
  2016                           
  2017                           ;color.c: 70:  I2C_2_Master_RepStart();
  2018   000F20  EC66  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2019                           
  2020                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  2021   000F24  0E53               	movlw	83
  2022   000F26  EC60  F00D         	call	_I2C_2_Master_Write
  2023   000F2A                     
  2024                           ;color.c: 72:  RGBC->B=I2C_2_Master_Read(1);
  2025   000F2A  0E01               	movlw	1
  2026   000F2C  ECE6  F00B         	call	_I2C_2_Master_Read
  2027   000F30  6E09               	movwf	??_color_read^0,c
  2028   000F32  6A0A               	clrf	(??_color_read+1)^0,c
  2029   000F34  5008               	movf	color_read@RGBC^0,w,c
  2030   000F36  6ED9               	movwf	fsr2l,c
  2031   000F38  6ADA               	clrf	fsr2h,c
  2032   000F3A  0E04               	movlw	4
  2033   000F3C  26D9               	addwf	fsr2l,f,c
  2034   000F3E  C009  FFDE         	movff	??_color_read,postinc2
  2035   000F42  C00A  FFDD         	movff	??_color_read+1,postdec2
  2036   000F46                     
  2037                           ;color.c: 73:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  2038   000F46  5008               	movf	color_read@RGBC^0,w,c
  2039   000F48  6ED9               	movwf	fsr2l,c
  2040   000F4A  6ADA               	clrf	fsr2h,c
  2041   000F4C  0E04               	movlw	4
  2042   000F4E  26D9               	addwf	fsr2l,f,c
  2043   000F50  CFDE F009          	movff	postinc2,??_color_read
  2044   000F54  CFDD F00A          	movff	postdec2,??_color_read+1
  2045   000F58  0E00               	movlw	0
  2046   000F5A  ECE6  F00B         	call	_I2C_2_Master_Read
  2047   000F5E  6E0B               	movwf	(??_color_read+2)^0,c
  2048   000F60  500B               	movf	(??_color_read+2)^0,w,c
  2049   000F62  6E0D               	movwf	(??_color_read+4)^0,c
  2050   000F64  6A0C               	clrf	(??_color_read+3)^0,c
  2051   000F66  5009               	movf	??_color_read^0,w,c
  2052   000F68  100C               	iorwf	(??_color_read+3)^0,w,c
  2053   000F6A  6E0E               	movwf	(??_color_read+5)^0,c
  2054   000F6C  500A               	movf	(??_color_read+1)^0,w,c
  2055   000F6E  100D               	iorwf	(??_color_read+4)^0,w,c
  2056   000F70  6E0F               	movwf	(??_color_read+6)^0,c
  2057   000F72  5008               	movf	color_read@RGBC^0,w,c
  2058   000F74  6ED9               	movwf	fsr2l,c
  2059   000F76  6ADA               	clrf	fsr2h,c
  2060   000F78  0E04               	movlw	4
  2061   000F7A  26D9               	addwf	fsr2l,f,c
  2062   000F7C  C00E  FFDE         	movff	??_color_read+5,postinc2
  2063   000F80  C00F  FFDD         	movff	??_color_read+6,postdec2
  2064                           
  2065                           ;color.c: 74:  I2C_2_Master_Stop();
  2066   000F84  EC6B  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2067                           
  2068                           ;color.c: 76:     I2C_2_Master_Start();
  2069   000F88  EC70  F00D         	call	_I2C_2_Master_Start	;wreg free
  2070                           
  2071                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  2072   000F8C  0E52               	movlw	82
  2073   000F8E  EC60  F00D         	call	_I2C_2_Master_Write
  2074                           
  2075                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x14);
  2076   000F92  0EB4               	movlw	180
  2077   000F94  EC60  F00D         	call	_I2C_2_Master_Write
  2078                           
  2079                           ;color.c: 79:  I2C_2_Master_RepStart();
  2080   000F98  EC66  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2081                           
  2082                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  2083   000F9C  0E53               	movlw	83
  2084   000F9E  EC60  F00D         	call	_I2C_2_Master_Write
  2085   000FA2                     
  2086                           ;color.c: 81:  RGBC->C=I2C_2_Master_Read(1);
  2087   000FA2  0E01               	movlw	1
  2088   000FA4  ECE6  F00B         	call	_I2C_2_Master_Read
  2089   000FA8  6E09               	movwf	??_color_read^0,c
  2090   000FAA  6A0A               	clrf	(??_color_read+1)^0,c
  2091   000FAC  5008               	movf	color_read@RGBC^0,w,c
  2092   000FAE  6ED9               	movwf	fsr2l,c
  2093   000FB0  6ADA               	clrf	fsr2h,c
  2094   000FB2  0E06               	movlw	6
  2095   000FB4  26D9               	addwf	fsr2l,f,c
  2096   000FB6  C009  FFDE         	movff	??_color_read,postinc2
  2097   000FBA  C00A  FFDD         	movff	??_color_read+1,postdec2
  2098   000FBE                     
  2099                           ;color.c: 82:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  2100   000FBE  5008               	movf	color_read@RGBC^0,w,c
  2101   000FC0  6ED9               	movwf	fsr2l,c
  2102   000FC2  6ADA               	clrf	fsr2h,c
  2103   000FC4  0E06               	movlw	6
  2104   000FC6  26D9               	addwf	fsr2l,f,c
  2105   000FC8  CFDE F009          	movff	postinc2,??_color_read
  2106   000FCC  CFDD F00A          	movff	postdec2,??_color_read+1
  2107   000FD0  0E00               	movlw	0
  2108   000FD2  ECE6  F00B         	call	_I2C_2_Master_Read
  2109   000FD6  6E0B               	movwf	(??_color_read+2)^0,c
  2110   000FD8  500B               	movf	(??_color_read+2)^0,w,c
  2111   000FDA  6E0D               	movwf	(??_color_read+4)^0,c
  2112   000FDC  6A0C               	clrf	(??_color_read+3)^0,c
  2113   000FDE  5009               	movf	??_color_read^0,w,c
  2114   000FE0  100C               	iorwf	(??_color_read+3)^0,w,c
  2115   000FE2  6E0E               	movwf	(??_color_read+5)^0,c
  2116   000FE4  500A               	movf	(??_color_read+1)^0,w,c
  2117   000FE6  100D               	iorwf	(??_color_read+4)^0,w,c
  2118   000FE8  6E0F               	movwf	(??_color_read+6)^0,c
  2119   000FEA  5008               	movf	color_read@RGBC^0,w,c
  2120   000FEC  6ED9               	movwf	fsr2l,c
  2121   000FEE  6ADA               	clrf	fsr2h,c
  2122   000FF0  0E06               	movlw	6
  2123   000FF2  26D9               	addwf	fsr2l,f,c
  2124   000FF4  C00E  FFDE         	movff	??_color_read+5,postinc2
  2125   000FF8  C00F  FFDD         	movff	??_color_read+6,postdec2
  2126                           
  2127                           ;color.c: 83:  I2C_2_Master_Stop();
  2128   000FFC  EC6B  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2129   001000  0012               	return		;funcret
  2130   001002                     __end_of_color_read:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _I2C_2_Master_RepStart *****************
  2134 ;; Defined at:
  2135 ;;		line 33 in file "i2c.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 3
  2156 ;; This function calls:
  2157 ;;		_I2C_2_Master_Idle
  2158 ;; This function is called by:
  2159 ;;		_color_read
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text14
  2164   001ACC                     __ptext14:
  2165                           	callstack 0
  2166   001ACC                     _I2C_2_Master_RepStart:
  2167                           	callstack 26
  2168   001ACC                     
  2169                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2170   001ACC  ECBD  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2171   001AD0                     
  2172                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2173   001AD0  010E               	movlb	14	; () banked
  2174   001AD2  83DA               	bsf	218,1,b	;volatile
  2175   001AD4                     
  2176                           ; BSR set to: 14
  2177   001AD4  0012               	return		;funcret
  2178   001AD6                     __end_of_I2C_2_Master_RepStart:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _I2C_2_Master_Read *****************
  2182 ;; Defined at:
  2183 ;;		line 51 in file "i2c.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  ack             1    wreg     unsigned char 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  ack             1    5[COMRAM] unsigned char 
  2188 ;;  tmp             1    6[COMRAM] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      unsigned char 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2200 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2201 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;Total ram usage:        3 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 3
  2205 ;; This function calls:
  2206 ;;		_I2C_2_Master_Idle
  2207 ;; This function is called by:
  2208 ;;		_color_read
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text15
  2213   0017CC                     __ptext15:
  2214                           	callstack 0
  2215   0017CC                     _I2C_2_Master_Read:
  2216                           	callstack 26
  2217                           
  2218                           ; BSR set to: 14
  2219                           ;incstack = 0
  2220                           ;I2C_2_Master_Read@ack stored from wreg
  2221   0017CC  6E06               	movwf	I2C_2_Master_Read@ack^0,c
  2222   0017CE                     
  2223                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2224   0017CE  ECBD  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2225   0017D2                     
  2226                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2227   0017D2  010E               	movlb	14	; () banked
  2228   0017D4  87DA               	bsf	218,3,b	;volatile
  2229                           
  2230                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2231   0017D6  ECBD  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2232   0017DA                     
  2233                           ;i2c.c: 57:   tmp = SSP2BUF;
  2234   0017DA  CED5 F007          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2235                           
  2236                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2237   0017DE  ECBD  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2238   0017E2                     
  2239                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2240   0017E2  5006               	movf	I2C_2_Master_Read@ack^0,w,c
  2241   0017E4  B4D8               	btfsc	status,2,c
  2242   0017E6  EFF7  F00B         	goto	u891
  2243   0017EA  EFFB  F00B         	goto	u890
  2244   0017EE                     u891:
  2245   0017EE  6A05               	clrf	??_I2C_2_Master_Read^0,c
  2246   0017F0  2A05               	incf	??_I2C_2_Master_Read^0,f,c
  2247   0017F2  EFFC  F00B         	goto	u908
  2248   0017F6                     u890:
  2249   0017F6  6A05               	clrf	??_I2C_2_Master_Read^0,c
  2250   0017F8                     u908:
  2251   0017F8  3A05               	swapf	??_I2C_2_Master_Read^0,f,c
  2252   0017FA  4605               	rlncf	??_I2C_2_Master_Read^0,f,c
  2253   0017FC  010E               	movlb	14	; () banked
  2254   0017FE  51DA               	movf	218,w,b	;volatile
  2255   001800  1805               	xorwf	??_I2C_2_Master_Read^0,w,c
  2256   001802  0BDF               	andlw	-33
  2257   001804  1805               	xorwf	??_I2C_2_Master_Read^0,w,c
  2258   001806  6FDA               	movwf	218,b	;volatile
  2259   001808                     
  2260                           ; BSR set to: 14
  2261                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2262   001808  89DA               	bsf	218,4,b	;volatile
  2263   00180A                     
  2264                           ; BSR set to: 14
  2265                           ;i2c.c: 61:   return tmp;
  2266   00180A  5007               	movf	I2C_2_Master_Read@tmp^0,w,c
  2267   00180C                     
  2268                           ; BSR set to: 14
  2269   00180C  0012               	return		;funcret
  2270   00180E                     __end_of_I2C_2_Master_Read:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function _color_normalise *****************
  2274 ;; Defined at:
  2275 ;;		line 87 in file "color.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  RGBC            8   29[COMRAM] struct RGBC_val
  2278 ;;  RGBC_n          1   37[COMRAM] PTR struct RGBC_val
  2279 ;;		 -> main@RGBC_n(8), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2291 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;Total ram usage:       11 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 3
  2298 ;; This function calls:
  2299 ;;		___aldiv
  2300 ;;		___lmul
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text16
  2307   0011BA                     __ptext16:
  2308                           	callstack 0
  2309   0011BA                     _color_normalise:
  2310                           	callstack 27
  2311   0011BA                     
  2312                           ;color.c: 105:     RGBC_n->C = RGBC.C;
  2313   0011BA  5026               	movf	color_normalise@RGBC_n^0,w,c
  2314   0011BC  6ED9               	movwf	fsr2l,c
  2315   0011BE  6ADA               	clrf	fsr2h,c
  2316   0011C0  0E06               	movlw	6
  2317   0011C2  26D9               	addwf	fsr2l,f,c
  2318   0011C4  C024  FFDE         	movff	color_normalise@RGBC+6,postinc2
  2319   0011C8  C025  FFDD         	movff	color_normalise@RGBC+7,postdec2
  2320   0011CC                     
  2321                           ;color.c: 106:     RGBC_n->R = 1000L*RGBC.R/(RGBC.R+RGBC.G+RGBC.B);
  2322   0011CC  C01E  F004         	movff	color_normalise@RGBC,___lmul@multiplier
  2323   0011D0  C01F  F005         	movff	color_normalise@RGBC+1,___lmul@multiplier+1
  2324   0011D4  6A06               	clrf	(___lmul@multiplier+2)^0,c
  2325   0011D6  6A07               	clrf	(___lmul@multiplier+3)^0,c
  2326   0011D8  0EE8               	movlw	232
  2327   0011DA  6E08               	movwf	___lmul@multiplicand^0,c
  2328   0011DC  0E03               	movlw	3
  2329   0011DE  6E09               	movwf	(___lmul@multiplicand+1)^0,c
  2330   0011E0  0E00               	movlw	0
  2331   0011E2  6E0A               	movwf	(___lmul@multiplicand+2)^0,c
  2332   0011E4  0E00               	movlw	0
  2333   0011E6  6E0B               	movwf	(___lmul@multiplicand+3)^0,c
  2334   0011E8  EC80  F00B         	call	___lmul	;wreg free
  2335   0011EC  C004  F010         	movff	?___lmul,___aldiv@dividend
  2336   0011F0  C005  F011         	movff	?___lmul+1,___aldiv@dividend+1
  2337   0011F4  C006  F012         	movff	?___lmul+2,___aldiv@dividend+2
  2338   0011F8  C007  F013         	movff	?___lmul+3,___aldiv@dividend+3
  2339   0011FC  5022               	movf	(color_normalise@RGBC+4)^0,w,c
  2340   0011FE  2420               	addwf	(color_normalise@RGBC+2)^0,w,c
  2341   001200  6E27               	movwf	??_color_normalise^0,c
  2342   001202  5023               	movf	(color_normalise@RGBC+5)^0,w,c
  2343   001204  2021               	addwfc	(color_normalise@RGBC+3)^0,w,c
  2344   001206  6E28               	movwf	(??_color_normalise+1)^0,c
  2345   001208  501E               	movf	color_normalise@RGBC^0,w,c
  2346   00120A  2627               	addwf	??_color_normalise^0,f,c
  2347   00120C  501F               	movf	(color_normalise@RGBC+1)^0,w,c
  2348   00120E  2228               	addwfc	(??_color_normalise+1)^0,f,c
  2349   001210  C027  F014         	movff	??_color_normalise,___aldiv@divisor
  2350   001214  C028  F015         	movff	??_color_normalise+1,___aldiv@divisor+1
  2351   001218  6A16               	clrf	(___aldiv@divisor+2)^0,c
  2352   00121A  6A17               	clrf	(___aldiv@divisor+3)^0,c
  2353   00121C  EC7E  F009         	call	___aldiv	;wreg free
  2354   001220  5026               	movf	color_normalise@RGBC_n^0,w,c
  2355   001222  6ED9               	movwf	fsr2l,c
  2356   001224  6ADA               	clrf	fsr2h,c
  2357   001226  C010  FFDE         	movff	?___aldiv,postinc2
  2358   00122A  C011  FFDD         	movff	?___aldiv+1,postdec2
  2359   00122E                     
  2360                           ;color.c: 107:     RGBC_n->G = 1000L*RGBC.G/(RGBC.R+RGBC.G+RGBC.B);
  2361   00122E  C020  F004         	movff	color_normalise@RGBC+2,___lmul@multiplier
  2362   001232  C021  F005         	movff	color_normalise@RGBC+3,___lmul@multiplier+1
  2363   001236  6A06               	clrf	(___lmul@multiplier+2)^0,c
  2364   001238  6A07               	clrf	(___lmul@multiplier+3)^0,c
  2365   00123A  0EE8               	movlw	232
  2366   00123C  6E08               	movwf	___lmul@multiplicand^0,c
  2367   00123E  0E03               	movlw	3
  2368   001240  6E09               	movwf	(___lmul@multiplicand+1)^0,c
  2369   001242  0E00               	movlw	0
  2370   001244  6E0A               	movwf	(___lmul@multiplicand+2)^0,c
  2371   001246  0E00               	movlw	0
  2372   001248  6E0B               	movwf	(___lmul@multiplicand+3)^0,c
  2373   00124A  EC80  F00B         	call	___lmul	;wreg free
  2374   00124E  C004  F010         	movff	?___lmul,___aldiv@dividend
  2375   001252  C005  F011         	movff	?___lmul+1,___aldiv@dividend+1
  2376   001256  C006  F012         	movff	?___lmul+2,___aldiv@dividend+2
  2377   00125A  C007  F013         	movff	?___lmul+3,___aldiv@dividend+3
  2378   00125E  5022               	movf	(color_normalise@RGBC+4)^0,w,c
  2379   001260  2420               	addwf	(color_normalise@RGBC+2)^0,w,c
  2380   001262  6E27               	movwf	??_color_normalise^0,c
  2381   001264  5023               	movf	(color_normalise@RGBC+5)^0,w,c
  2382   001266  2021               	addwfc	(color_normalise@RGBC+3)^0,w,c
  2383   001268  6E28               	movwf	(??_color_normalise+1)^0,c
  2384   00126A  501E               	movf	color_normalise@RGBC^0,w,c
  2385   00126C  2627               	addwf	??_color_normalise^0,f,c
  2386   00126E  501F               	movf	(color_normalise@RGBC+1)^0,w,c
  2387   001270  2228               	addwfc	(??_color_normalise+1)^0,f,c
  2388   001272  C027  F014         	movff	??_color_normalise,___aldiv@divisor
  2389   001276  C028  F015         	movff	??_color_normalise+1,___aldiv@divisor+1
  2390   00127A  6A16               	clrf	(___aldiv@divisor+2)^0,c
  2391   00127C  6A17               	clrf	(___aldiv@divisor+3)^0,c
  2392   00127E  EC7E  F009         	call	___aldiv	;wreg free
  2393   001282  5026               	movf	color_normalise@RGBC_n^0,w,c
  2394   001284  6ED9               	movwf	fsr2l,c
  2395   001286  6ADA               	clrf	fsr2h,c
  2396   001288  0E02               	movlw	2
  2397   00128A  26D9               	addwf	fsr2l,f,c
  2398   00128C  C010  FFDE         	movff	?___aldiv,postinc2
  2399   001290  C011  FFDD         	movff	?___aldiv+1,postdec2
  2400   001294                     
  2401                           ;color.c: 108:     RGBC_n->B = 1000L*RGBC.B/(RGBC.R+RGBC.G+RGBC.B);
  2402   001294  C022  F004         	movff	color_normalise@RGBC+4,___lmul@multiplier
  2403   001298  C023  F005         	movff	color_normalise@RGBC+5,___lmul@multiplier+1
  2404   00129C  6A06               	clrf	(___lmul@multiplier+2)^0,c
  2405   00129E  6A07               	clrf	(___lmul@multiplier+3)^0,c
  2406   0012A0  0EE8               	movlw	232
  2407   0012A2  6E08               	movwf	___lmul@multiplicand^0,c
  2408   0012A4  0E03               	movlw	3
  2409   0012A6  6E09               	movwf	(___lmul@multiplicand+1)^0,c
  2410   0012A8  0E00               	movlw	0
  2411   0012AA  6E0A               	movwf	(___lmul@multiplicand+2)^0,c
  2412   0012AC  0E00               	movlw	0
  2413   0012AE  6E0B               	movwf	(___lmul@multiplicand+3)^0,c
  2414   0012B0  EC80  F00B         	call	___lmul	;wreg free
  2415   0012B4  C004  F010         	movff	?___lmul,___aldiv@dividend
  2416   0012B8  C005  F011         	movff	?___lmul+1,___aldiv@dividend+1
  2417   0012BC  C006  F012         	movff	?___lmul+2,___aldiv@dividend+2
  2418   0012C0  C007  F013         	movff	?___lmul+3,___aldiv@dividend+3
  2419   0012C4  5022               	movf	(color_normalise@RGBC+4)^0,w,c
  2420   0012C6  2420               	addwf	(color_normalise@RGBC+2)^0,w,c
  2421   0012C8  6E27               	movwf	??_color_normalise^0,c
  2422   0012CA  5023               	movf	(color_normalise@RGBC+5)^0,w,c
  2423   0012CC  2021               	addwfc	(color_normalise@RGBC+3)^0,w,c
  2424   0012CE  6E28               	movwf	(??_color_normalise+1)^0,c
  2425   0012D0  501E               	movf	color_normalise@RGBC^0,w,c
  2426   0012D2  2627               	addwf	??_color_normalise^0,f,c
  2427   0012D4  501F               	movf	(color_normalise@RGBC+1)^0,w,c
  2428   0012D6  2228               	addwfc	(??_color_normalise+1)^0,f,c
  2429   0012D8  C027  F014         	movff	??_color_normalise,___aldiv@divisor
  2430   0012DC  C028  F015         	movff	??_color_normalise+1,___aldiv@divisor+1
  2431   0012E0  6A16               	clrf	(___aldiv@divisor+2)^0,c
  2432   0012E2  6A17               	clrf	(___aldiv@divisor+3)^0,c
  2433   0012E4  EC7E  F009         	call	___aldiv	;wreg free
  2434   0012E8  5026               	movf	color_normalise@RGBC_n^0,w,c
  2435   0012EA  6ED9               	movwf	fsr2l,c
  2436   0012EC  6ADA               	clrf	fsr2h,c
  2437   0012EE  0E04               	movlw	4
  2438   0012F0  26D9               	addwf	fsr2l,f,c
  2439   0012F2  C010  FFDE         	movff	?___aldiv,postinc2
  2440   0012F6  C011  FFDD         	movff	?___aldiv+1,postdec2
  2441   0012FA  0012               	return		;funcret
  2442   0012FC                     __end_of_color_normalise:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function ___lmul *****************
  2446 ;; Defined at:
  2447 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  multiplier      4    3[COMRAM] unsigned long 
  2450 ;;  multiplicand    4    7[COMRAM] unsigned long 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  product         4   11[COMRAM] unsigned long 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  4    3[COMRAM] unsigned long 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2462 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2466 ;;Total ram usage:       12 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 2
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_color_normalise
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text17
  2477   001700                     __ptext17:
  2478                           	callstack 0
  2479   001700                     ___lmul:
  2480                           	callstack 27
  2481   001700  0E00               	movlw	0
  2482   001702  6E0C               	movwf	___lmul@product^0,c
  2483   001704  0E00               	movlw	0
  2484   001706  6E0D               	movwf	(___lmul@product+1)^0,c
  2485   001708  0E00               	movlw	0
  2486   00170A  6E0E               	movwf	(___lmul@product+2)^0,c
  2487   00170C  0E00               	movlw	0
  2488   00170E  6E0F               	movwf	(___lmul@product+3)^0,c
  2489   001710                     l1666:
  2490   001710  A004               	btfss	___lmul@multiplier^0,0,c
  2491   001712  EF8D  F00B         	goto	u941
  2492   001716  EF8F  F00B         	goto	u940
  2493   00171A                     u941:
  2494   00171A  EF97  F00B         	goto	l1670
  2495   00171E                     u940:
  2496   00171E  5008               	movf	___lmul@multiplicand^0,w,c
  2497   001720  260C               	addwf	___lmul@product^0,f,c
  2498   001722  5009               	movf	(___lmul@multiplicand+1)^0,w,c
  2499   001724  220D               	addwfc	(___lmul@product+1)^0,f,c
  2500   001726  500A               	movf	(___lmul@multiplicand+2)^0,w,c
  2501   001728  220E               	addwfc	(___lmul@product+2)^0,f,c
  2502   00172A  500B               	movf	(___lmul@multiplicand+3)^0,w,c
  2503   00172C  220F               	addwfc	(___lmul@product+3)^0,f,c
  2504   00172E                     l1670:
  2505   00172E  90D8               	bcf	status,0,c
  2506   001730  3608               	rlcf	___lmul@multiplicand^0,f,c
  2507   001732  3609               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2508   001734  360A               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2509   001736  360B               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2510   001738  90D8               	bcf	status,0,c
  2511   00173A  3207               	rrcf	(___lmul@multiplier+3)^0,f,c
  2512   00173C  3206               	rrcf	(___lmul@multiplier+2)^0,f,c
  2513   00173E  3205               	rrcf	(___lmul@multiplier+1)^0,f,c
  2514   001740  3204               	rrcf	___lmul@multiplier^0,f,c
  2515   001742  5004               	movf	___lmul@multiplier^0,w,c
  2516   001744  1005               	iorwf	(___lmul@multiplier+1)^0,w,c
  2517   001746  1006               	iorwf	(___lmul@multiplier+2)^0,w,c
  2518   001748  1007               	iorwf	(___lmul@multiplier+3)^0,w,c
  2519   00174A  A4D8               	btfss	status,2,c
  2520   00174C  EFAA  F00B         	goto	u951
  2521   001750  EFAC  F00B         	goto	u950
  2522   001754                     u951:
  2523   001754  EF88  F00B         	goto	l1666
  2524   001758                     u950:
  2525   001758  C00C  F004         	movff	___lmul@product,?___lmul
  2526   00175C  C00D  F005         	movff	___lmul@product+1,?___lmul+1
  2527   001760  C00E  F006         	movff	___lmul@product+2,?___lmul+2
  2528   001764  C00F  F007         	movff	___lmul@product+3,?___lmul+3
  2529   001768  0012               	return		;funcret
  2530   00176A                     __end_of___lmul:
  2531                           	callstack 0
  2532                           
  2533 ;; *************** function ___aldiv *****************
  2534 ;; Defined at:
  2535 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  dividend        4   15[COMRAM] long 
  2538 ;;  divisor         4   19[COMRAM] long 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  quotient        4   25[COMRAM] long 
  2541 ;;  sign            1   24[COMRAM] unsigned char 
  2542 ;;  counter         1   23[COMRAM] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  4   15[COMRAM] long 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2552 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2553 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2555 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2556 ;;Total ram usage:       14 bytes
  2557 ;; Hardware stack levels used: 1
  2558 ;; Hardware stack levels required when called: 2
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_color_normalise
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text18
  2567   0012FC                     __ptext18:
  2568                           	callstack 0
  2569   0012FC                     ___aldiv:
  2570                           	callstack 27
  2571   0012FC  0E00               	movlw	0
  2572   0012FE  6E19               	movwf	___aldiv@sign^0,c
  2573   001300  BE17               	btfsc	(___aldiv@divisor+3)^0,7,c
  2574   001302  EF87  F009         	goto	u960
  2575   001306  EF85  F009         	goto	u961
  2576   00130A                     u961:
  2577   00130A  EF91  F009         	goto	l1682
  2578   00130E                     u960:
  2579   00130E  1E17               	comf	(___aldiv@divisor+3)^0,f,c
  2580   001310  1E16               	comf	(___aldiv@divisor+2)^0,f,c
  2581   001312  1E15               	comf	(___aldiv@divisor+1)^0,f,c
  2582   001314  6C14               	negf	___aldiv@divisor^0,c
  2583   001316  0E00               	movlw	0
  2584   001318  2215               	addwfc	(___aldiv@divisor+1)^0,f,c
  2585   00131A  2216               	addwfc	(___aldiv@divisor+2)^0,f,c
  2586   00131C  2217               	addwfc	(___aldiv@divisor+3)^0,f,c
  2587   00131E  0E01               	movlw	1
  2588   001320  6E19               	movwf	___aldiv@sign^0,c
  2589   001322                     l1682:
  2590   001322  BE13               	btfsc	(___aldiv@dividend+3)^0,7,c
  2591   001324  EF98  F009         	goto	u970
  2592   001328  EF96  F009         	goto	u971
  2593   00132C                     u971:
  2594   00132C  EFA2  F009         	goto	l1688
  2595   001330                     u970:
  2596   001330  1E13               	comf	(___aldiv@dividend+3)^0,f,c
  2597   001332  1E12               	comf	(___aldiv@dividend+2)^0,f,c
  2598   001334  1E11               	comf	(___aldiv@dividend+1)^0,f,c
  2599   001336  6C10               	negf	___aldiv@dividend^0,c
  2600   001338  0E00               	movlw	0
  2601   00133A  2211               	addwfc	(___aldiv@dividend+1)^0,f,c
  2602   00133C  2212               	addwfc	(___aldiv@dividend+2)^0,f,c
  2603   00133E  2213               	addwfc	(___aldiv@dividend+3)^0,f,c
  2604   001340  0E01               	movlw	1
  2605   001342  1A19               	xorwf	___aldiv@sign^0,f,c
  2606   001344                     l1688:
  2607   001344  0E00               	movlw	0
  2608   001346  6E1A               	movwf	___aldiv@quotient^0,c
  2609   001348  0E00               	movlw	0
  2610   00134A  6E1B               	movwf	(___aldiv@quotient+1)^0,c
  2611   00134C  0E00               	movlw	0
  2612   00134E  6E1C               	movwf	(___aldiv@quotient+2)^0,c
  2613   001350  0E00               	movlw	0
  2614   001352  6E1D               	movwf	(___aldiv@quotient+3)^0,c
  2615   001354  5014               	movf	___aldiv@divisor^0,w,c
  2616   001356  1015               	iorwf	(___aldiv@divisor+1)^0,w,c
  2617   001358  1016               	iorwf	(___aldiv@divisor+2)^0,w,c
  2618   00135A  1017               	iorwf	(___aldiv@divisor+3)^0,w,c
  2619   00135C  B4D8               	btfsc	status,2,c
  2620   00135E  EFB3  F009         	goto	u981
  2621   001362  EFB5  F009         	goto	u980
  2622   001366                     u981:
  2623   001366  EFEB  F009         	goto	l1710
  2624   00136A                     u980:
  2625   00136A  0E01               	movlw	1
  2626   00136C  6E18               	movwf	___aldiv@counter^0,c
  2627   00136E  EFBF  F009         	goto	l1696
  2628   001372                     l1694:
  2629   001372  90D8               	bcf	status,0,c
  2630   001374  3614               	rlcf	___aldiv@divisor^0,f,c
  2631   001376  3615               	rlcf	(___aldiv@divisor+1)^0,f,c
  2632   001378  3616               	rlcf	(___aldiv@divisor+2)^0,f,c
  2633   00137A  3617               	rlcf	(___aldiv@divisor+3)^0,f,c
  2634   00137C  2A18               	incf	___aldiv@counter^0,f,c
  2635   00137E                     l1696:
  2636   00137E  AE17               	btfss	(___aldiv@divisor+3)^0,7,c
  2637   001380  EFC4  F009         	goto	u991
  2638   001384  EFC6  F009         	goto	u990
  2639   001388                     u991:
  2640   001388  EFB9  F009         	goto	l1694
  2641   00138C                     u990:
  2642   00138C                     l1698:
  2643   00138C  90D8               	bcf	status,0,c
  2644   00138E  361A               	rlcf	___aldiv@quotient^0,f,c
  2645   001390  361B               	rlcf	(___aldiv@quotient+1)^0,f,c
  2646   001392  361C               	rlcf	(___aldiv@quotient+2)^0,f,c
  2647   001394  361D               	rlcf	(___aldiv@quotient+3)^0,f,c
  2648   001396  5014               	movf	___aldiv@divisor^0,w,c
  2649   001398  5C10               	subwf	___aldiv@dividend^0,w,c
  2650   00139A  5015               	movf	(___aldiv@divisor+1)^0,w,c
  2651   00139C  5811               	subwfb	(___aldiv@dividend+1)^0,w,c
  2652   00139E  5016               	movf	(___aldiv@divisor+2)^0,w,c
  2653   0013A0  5812               	subwfb	(___aldiv@dividend+2)^0,w,c
  2654   0013A2  5017               	movf	(___aldiv@divisor+3)^0,w,c
  2655   0013A4  5813               	subwfb	(___aldiv@dividend+3)^0,w,c
  2656   0013A6  A0D8               	btfss	status,0,c
  2657   0013A8  EFD8  F009         	goto	u1001
  2658   0013AC  EFDA  F009         	goto	u1000
  2659   0013B0                     u1001:
  2660   0013B0  EFE3  F009         	goto	l1706
  2661   0013B4                     u1000:
  2662   0013B4  5014               	movf	___aldiv@divisor^0,w,c
  2663   0013B6  5E10               	subwf	___aldiv@dividend^0,f,c
  2664   0013B8  5015               	movf	(___aldiv@divisor+1)^0,w,c
  2665   0013BA  5A11               	subwfb	(___aldiv@dividend+1)^0,f,c
  2666   0013BC  5016               	movf	(___aldiv@divisor+2)^0,w,c
  2667   0013BE  5A12               	subwfb	(___aldiv@dividend+2)^0,f,c
  2668   0013C0  5017               	movf	(___aldiv@divisor+3)^0,w,c
  2669   0013C2  5A13               	subwfb	(___aldiv@dividend+3)^0,f,c
  2670   0013C4  801A               	bsf	___aldiv@quotient^0,0,c
  2671   0013C6                     l1706:
  2672   0013C6  90D8               	bcf	status,0,c
  2673   0013C8  3217               	rrcf	(___aldiv@divisor+3)^0,f,c
  2674   0013CA  3216               	rrcf	(___aldiv@divisor+2)^0,f,c
  2675   0013CC  3215               	rrcf	(___aldiv@divisor+1)^0,f,c
  2676   0013CE  3214               	rrcf	___aldiv@divisor^0,f,c
  2677   0013D0  2E18               	decfsz	___aldiv@counter^0,f,c
  2678   0013D2  EFC6  F009         	goto	l1698
  2679   0013D6                     l1710:
  2680   0013D6  5019               	movf	___aldiv@sign^0,w,c
  2681   0013D8  B4D8               	btfsc	status,2,c
  2682   0013DA  EFF1  F009         	goto	u1011
  2683   0013DE  EFF3  F009         	goto	u1010
  2684   0013E2                     u1011:
  2685   0013E2  EFFB  F009         	goto	l1714
  2686   0013E6                     u1010:
  2687   0013E6  1E1D               	comf	(___aldiv@quotient+3)^0,f,c
  2688   0013E8  1E1C               	comf	(___aldiv@quotient+2)^0,f,c
  2689   0013EA  1E1B               	comf	(___aldiv@quotient+1)^0,f,c
  2690   0013EC  6C1A               	negf	___aldiv@quotient^0,c
  2691   0013EE  0E00               	movlw	0
  2692   0013F0  221B               	addwfc	(___aldiv@quotient+1)^0,f,c
  2693   0013F2  221C               	addwfc	(___aldiv@quotient+2)^0,f,c
  2694   0013F4  221D               	addwfc	(___aldiv@quotient+3)^0,f,c
  2695   0013F6                     l1714:
  2696   0013F6  C01A  F010         	movff	___aldiv@quotient,?___aldiv
  2697   0013FA  C01B  F011         	movff	___aldiv@quotient+1,?___aldiv+1
  2698   0013FE  C01C  F012         	movff	___aldiv@quotient+2,?___aldiv+2
  2699   001402  C01D  F013         	movff	___aldiv@quotient+3,?___aldiv+3
  2700   001406  0012               	return		;funcret
  2701   001408                     __end_of___aldiv:
  2702                           	callstack 0
  2703                           
  2704 ;; *************** function _color_click_init *****************
  2705 ;; Defined at:
  2706 ;;		line 5 in file "color.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2723 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2724 ;;Total ram usage:        1 bytes
  2725 ;; Hardware stack levels used: 1
  2726 ;; Hardware stack levels required when called: 5
  2727 ;; This function calls:
  2728 ;;		_I2C_2_Master_Init
  2729 ;;		_color_writetoaddr
  2730 ;; This function is called by:
  2731 ;;		_main
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text19
  2736   0018EA                     __ptext19:
  2737                           	callstack 0
  2738   0018EA                     _color_click_init:
  2739                           	callstack 25
  2740   0018EA                     
  2741                           ;color.c: 8:     I2C_2_Master_Init();
  2742   0018EA  ECA8  F00C         	call	_I2C_2_Master_Init	;wreg free
  2743   0018EE                     
  2744                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2745   0018EE  0E01               	movlw	1
  2746   0018F0  6E06               	movwf	color_writetoaddr@value^0,c
  2747   0018F2  0E00               	movlw	0
  2748   0018F4  EC1C  F00D         	call	_color_writetoaddr
  2749   0018F8                     
  2750                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2751   0018F8  0E3F               	movlw	63
  2752   0018FA  6E08               	movwf	??_color_click_init^0,c
  2753   0018FC  0E55               	movlw	85
  2754   0018FE                     u1167:
  2755   0018FE  2EE8               	decfsz	wreg,f,c
  2756   001900  D7FE               	bra	u1167
  2757   001902  2E08               	decfsz	??_color_click_init^0,f,c
  2758   001904  D7FC               	bra	u1167
  2759   001906  0000               	nop	
  2760   001908                     
  2761                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2762   001908  0E03               	movlw	3
  2763   00190A  6E06               	movwf	color_writetoaddr@value^0,c
  2764   00190C  0E00               	movlw	0
  2765   00190E  EC1C  F00D         	call	_color_writetoaddr
  2766   001912                     
  2767                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2768   001912  0ED5               	movlw	213
  2769   001914  6E06               	movwf	color_writetoaddr@value^0,c
  2770   001916  0E01               	movlw	1
  2771   001918  EC1C  F00D         	call	_color_writetoaddr
  2772   00191C  0012               	return		;funcret
  2773   00191E                     __end_of_color_click_init:
  2774                           	callstack 0
  2775                           
  2776 ;; *************** function _color_writetoaddr *****************
  2777 ;; Defined at:
  2778 ;;		line 23 in file "color.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  address         1    wreg     unsigned char 
  2781 ;;  value           1    5[COMRAM] unsigned char 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  address         1    6[COMRAM] unsigned char 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2793 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2797 ;;Total ram usage:        2 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 4
  2800 ;; This function calls:
  2801 ;;		_I2C_2_Master_Start
  2802 ;;		_I2C_2_Master_Stop
  2803 ;;		_I2C_2_Master_Write
  2804 ;; This function is called by:
  2805 ;;		_color_click_init
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text20
  2810   001A38                     __ptext20:
  2811                           	callstack 0
  2812   001A38                     _color_writetoaddr:
  2813                           	callstack 25
  2814                           
  2815                           ;incstack = 0
  2816                           ;color_writetoaddr@address stored from wreg
  2817   001A38  6E07               	movwf	color_writetoaddr@address^0,c
  2818   001A3A                     
  2819                           ;color.c: 24:     I2C_2_Master_Start();
  2820   001A3A  EC70  F00D         	call	_I2C_2_Master_Start	;wreg free
  2821                           
  2822                           ;color.c: 25:     I2C_2_Master_Write(0x52 | 0x00);
  2823   001A3E  0E52               	movlw	82
  2824   001A40  EC60  F00D         	call	_I2C_2_Master_Write
  2825                           
  2826                           ;color.c: 26:     I2C_2_Master_Write(0x80 | address);
  2827   001A44  5007               	movf	color_writetoaddr@address^0,w,c
  2828   001A46  0980               	iorlw	128
  2829   001A48  EC60  F00D         	call	_I2C_2_Master_Write
  2830                           
  2831                           ;color.c: 27:     I2C_2_Master_Write(value);
  2832   001A4C  5006               	movf	color_writetoaddr@value^0,w,c
  2833   001A4E  EC60  F00D         	call	_I2C_2_Master_Write
  2834                           
  2835                           ;color.c: 28:     I2C_2_Master_Stop();
  2836   001A52  EC6B  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2837   001A56  0012               	return		;funcret
  2838   001A58                     __end_of_color_writetoaddr:
  2839                           	callstack 0
  2840                           
  2841 ;; *************** function _I2C_2_Master_Write *****************
  2842 ;; Defined at:
  2843 ;;		line 45 in file "i2c.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  data_byte       1    wreg     unsigned char 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  data_byte       1    4[COMRAM] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;Total ram usage:        1 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 3
  2864 ;; This function calls:
  2865 ;;		_I2C_2_Master_Idle
  2866 ;; This function is called by:
  2867 ;;		_color_writetoaddr
  2868 ;;		_color_read
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text21
  2873   001AC0                     __ptext21:
  2874                           	callstack 0
  2875   001AC0                     _I2C_2_Master_Write:
  2876                           	callstack 26
  2877                           
  2878                           ;incstack = 0
  2879                           ;I2C_2_Master_Write@data_byte stored from wreg
  2880   001AC0  6E05               	movwf	I2C_2_Master_Write@data_byte^0,c
  2881   001AC2                     
  2882                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2883   001AC2  ECBD  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2884   001AC6                     
  2885                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2886   001AC6  C005  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2887   001ACA  0012               	return		;funcret
  2888   001ACC                     __end_of_I2C_2_Master_Write:
  2889                           	callstack 0
  2890                           
  2891 ;; *************** function _I2C_2_Master_Stop *****************
  2892 ;; Defined at:
  2893 ;;		line 39 in file "i2c.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;		None
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;Total ram usage:        0 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 3
  2914 ;; This function calls:
  2915 ;;		_I2C_2_Master_Idle
  2916 ;; This function is called by:
  2917 ;;		_color_writetoaddr
  2918 ;;		_color_read
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text22
  2923   001AD6                     __ptext22:
  2924                           	callstack 0
  2925   001AD6                     _I2C_2_Master_Stop:
  2926                           	callstack 26
  2927   001AD6                     
  2928                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2929   001AD6  ECBD  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2930   001ADA                     
  2931                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2932   001ADA  010E               	movlb	14	; () banked
  2933   001ADC  85DA               	bsf	218,2,b	;volatile
  2934   001ADE                     
  2935                           ; BSR set to: 14
  2936   001ADE  0012               	return		;funcret
  2937   001AE0                     __end_of_I2C_2_Master_Stop:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function _I2C_2_Master_Start *****************
  2941 ;; Defined at:
  2942 ;;		line 27 in file "i2c.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2960 ;;Total ram usage:        0 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 3
  2963 ;; This function calls:
  2964 ;;		_I2C_2_Master_Idle
  2965 ;; This function is called by:
  2966 ;;		_color_writetoaddr
  2967 ;;		_color_read
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text23
  2972   001AE0                     __ptext23:
  2973                           	callstack 0
  2974   001AE0                     _I2C_2_Master_Start:
  2975                           	callstack 26
  2976   001AE0                     
  2977                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2978   001AE0  ECBD  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2979   001AE4                     
  2980                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2981   001AE4  010E               	movlb	14	; () banked
  2982   001AE6  81DA               	bsf	218,0,b	;volatile
  2983   001AE8                     
  2984                           ; BSR set to: 14
  2985   001AE8  0012               	return		;funcret
  2986   001AEA                     __end_of_I2C_2_Master_Start:
  2987                           	callstack 0
  2988                           
  2989 ;; *************** function _I2C_2_Master_Idle *****************
  2990 ;; Defined at:
  2991 ;;		line 22 in file "i2c.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3009 ;;Total ram usage:        1 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 2
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_I2C_2_Master_Start
  3016 ;;		_I2C_2_Master_RepStart
  3017 ;;		_I2C_2_Master_Stop
  3018 ;;		_I2C_2_Master_Write
  3019 ;;		_I2C_2_Master_Read
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text24
  3024   00197A                     __ptext24:
  3025                           	callstack 0
  3026   00197A                     _I2C_2_Master_Idle:
  3027                           	callstack 26
  3028   00197A                     l122:
  3029   00197A  010E               	movlb	14	; () banked
  3030   00197C  B5D8               	btfsc	216,2,b	;volatile
  3031   00197E  EFC3  F00C         	goto	u601
  3032   001982  EFC5  F00C         	goto	u600
  3033   001986                     u601:
  3034   001986  EFBD  F00C         	goto	l122
  3035   00198A                     u600:
  3036   00198A                     
  3037                           ; BSR set to: 14
  3038   00198A  CEDA F004          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3039   00198E  0E1F               	movlw	31
  3040   001990  1604               	andwf	??_I2C_2_Master_Idle^0,f,c
  3041   001992  A4D8               	btfss	status,2,c
  3042   001994  EFCE  F00C         	goto	u611
  3043   001998  EFD0  F00C         	goto	u610
  3044   00199C                     u611:
  3045   00199C  EFBD  F00C         	goto	l122
  3046   0019A0                     u610:
  3047   0019A0                     
  3048                           ; BSR set to: 14
  3049   0019A0  0012               	return		;funcret
  3050   0019A2                     __end_of_I2C_2_Master_Idle:
  3051                           	callstack 0
  3052                           
  3053 ;; *************** function _I2C_2_Master_Init *****************
  3054 ;; Defined at:
  3055 ;;		line 4 in file "i2c.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;		None
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3073 ;;Total ram usage:        0 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; Hardware stack levels required when called: 2
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_color_click_init
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text25
  3084   001950                     __ptext25:
  3085                           	callstack 0
  3086   001950                     _I2C_2_Master_Init:
  3087                           	callstack 27
  3088   001950                     
  3089                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3090   001950  010E               	movlb	14	; () banked
  3091   001952  51D9               	movf	217,w,b	;volatile
  3092   001954  0BF0               	andlw	-16
  3093   001956  0908               	iorlw	8
  3094   001958  6FD9               	movwf	217,b	;volatile
  3095   00195A                     
  3096                           ; BSR set to: 14
  3097                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3098   00195A  8BD9               	bsf	217,5,b	;volatile
  3099                           
  3100                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3101   00195C  0E9F               	movlw	159
  3102   00195E  6FD6               	movwf	214,b	;volatile
  3103   001960                     
  3104                           ; BSR set to: 14
  3105                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3106   001960  8A84               	bsf	132,5,c	;volatile
  3107   001962                     
  3108                           ; BSR set to: 14
  3109                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3110   001962  8C84               	bsf	132,6,c	;volatile
  3111   001964                     
  3112                           ; BSR set to: 14
  3113                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3114   001964  9BA7               	bcf	167,5,b	;volatile
  3115   001966                     
  3116                           ; BSR set to: 14
  3117                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3118   001966  9DA7               	bcf	167,6,b	;volatile
  3119                           
  3120                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3121   001968  0E1D               	movlw	29
  3122   00196A  6F1D               	movwf	29,b	;volatile
  3123                           
  3124                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3125   00196C  0E1E               	movlw	30
  3126   00196E  6F1C               	movwf	28,b	;volatile
  3127                           
  3128                           ;i2c.c: 18:   RD5PPS=0x1C;
  3129   001970  0E1C               	movlw	28
  3130   001972  6F6F               	movwf	111,b	;volatile
  3131                           
  3132                           ;i2c.c: 19:   RD6PPS=0x1B;
  3133   001974  0E1B               	movlw	27
  3134   001976  6F70               	movwf	112,b	;volatile
  3135   001978                     
  3136                           ; BSR set to: 14
  3137   001978  0012               	return		;funcret
  3138   00197A                     __end_of_I2C_2_Master_Init:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function _TxBufferedString *****************
  3142 ;; Defined at:
  3143 ;;		line 66 in file "serial.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  string          2    4[COMRAM] PTR unsigned char 
  3146 ;;		 -> STR_2(1), main@buf(40), 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;Total ram usage:        2 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; Hardware stack levels required when called: 3
  3165 ;; This function calls:
  3166 ;;		_putCharToTxBuf
  3167 ;; This function is called by:
  3168 ;;		_main
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text26
  3173   00176A                     __ptext26:
  3174                           	callstack 0
  3175   00176A                     _TxBufferedString:
  3176                           	callstack 27
  3177   00176A                     
  3178                           ;serial.c: 67:     while(*string != 0){
  3179   00176A  EFCC  F00B         	goto	l1806
  3180   00176E                     l1802:
  3181                           
  3182                           ;serial.c: 68:   putCharToTxBuf(*string++);
  3183   00176E  C005  FFF6         	movff	TxBufferedString@string,tblptrl
  3184   001772  C006  FFF7         	movff	TxBufferedString@string+1,tblptrh
  3185   001776  0E00               	movlw	low (__smallconst shr (0+16))
  3186   001778  6EF8               	movwf	tblptru,c
  3187   00177A  0E0D               	movlw	(high __ramtop+-1)
  3188   00177C  64F7               	cpfsgt	tblptrh,c
  3189   00177E  D003               	bra	u1057
  3190   001780  0008               	tblrd		*
  3191   001782  50F5               	movf	tablat,w,c
  3192   001784  D005               	bra	u1050
  3193   001786                     u1057:
  3194   001786  CFF6 FFE9          	movff	tblptrl,fsr0l
  3195   00178A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3196   00178E  50EF               	movf	indf0,w,c
  3197   001790                     u1050:
  3198   001790  ECD1  F00C         	call	_putCharToTxBuf
  3199   001794  4A05               	infsnz	TxBufferedString@string^0,f,c
  3200   001796  2A06               	incf	(TxBufferedString@string+1)^0,f,c
  3201   001798                     l1806:
  3202                           
  3203                           ;serial.c: 67:     while(*string != 0){
  3204   001798  C005  FFF6         	movff	TxBufferedString@string,tblptrl
  3205   00179C  C006  FFF7         	movff	TxBufferedString@string+1,tblptrh
  3206   0017A0  0E00               	movlw	low (__smallconst shr (0+16))
  3207   0017A2  6EF8               	movwf	tblptru,c
  3208   0017A4  0E0D               	movlw	(high __ramtop+-1)
  3209   0017A6  64F7               	cpfsgt	tblptrh,c
  3210   0017A8  D003               	bra	u1067
  3211   0017AA  0008               	tblrd		*
  3212   0017AC  50F5               	movf	tablat,w,c
  3213   0017AE  D005               	bra	u1060
  3214   0017B0                     u1067:
  3215   0017B0  CFF6 FFE9          	movff	tblptrl,fsr0l
  3216   0017B4  CFF7 FFEA          	movff	tblptrh,fsr0h
  3217   0017B8  50EF               	movf	indf0,w,c
  3218   0017BA                     u1060:
  3219   0017BA  0900               	iorlw	0
  3220   0017BC  A4D8               	btfss	status,2,c
  3221   0017BE  EFE3  F00B         	goto	u1071
  3222   0017C2  EFE5  F00B         	goto	u1070
  3223   0017C6                     u1071:
  3224   0017C6  EFB7  F00B         	goto	l1802
  3225   0017CA                     u1070:
  3226   0017CA  0012               	return		;funcret
  3227   0017CC                     __end_of_TxBufferedString:
  3228                           	callstack 0
  3229                           
  3230 ;; *************** function _putCharToTxBuf *****************
  3231 ;; Defined at:
  3232 ;;		line 53 in file "serial.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  byte            1    wreg     unsigned char 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  byte            1    3[COMRAM] unsigned char 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;Total ram usage:        1 bytes
  3251 ;; Hardware stack levels used: 1
  3252 ;; Hardware stack levels required when called: 2
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		_TxBufferedString
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text27
  3261   0019A2                     __ptext27:
  3262                           	callstack 0
  3263   0019A2                     _putCharToTxBuf:
  3264                           	callstack 27
  3265                           
  3266                           ;incstack = 0
  3267                           ;putCharToTxBuf@byte stored from wreg
  3268   0019A2  6E04               	movwf	putCharToTxBuf@byte^0,c
  3269   0019A4                     
  3270                           ;serial.c: 54:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  3271   0019A4  0E3B               	movlw	59
  3272   0019A6  6456               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3273   0019A8  EFD8  F00C         	goto	u931
  3274   0019AC  EFDA  F00C         	goto	u930
  3275   0019B0                     u931:
  3276   0019B0  EFDC  F00C         	goto	l1660
  3277   0019B4                     u930:
  3278   0019B4  0E00               	movlw	0
  3279   0019B6  6E56               	movwf	_TxBufWriteCnt^0,c	;volatile
  3280   0019B8                     l1660:
  3281                           
  3282                           ;serial.c: 55:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3283   0019B8  5056               	movf	_TxBufWriteCnt^0,w,c
  3284   0019BA  0F60               	addlw	low _EUSART4TXbuf
  3285   0019BC  6ED9               	movwf	fsr2l,c
  3286   0019BE  6ADA               	clrf	fsr2h,c
  3287   0019C0  C004  FFDF         	movff	putCharToTxBuf@byte,indf2
  3288   0019C4  2A56               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3289   0019C6  0012               	return		;funcret
  3290   0019C8                     __end_of_putCharToTxBuf:
  3291                           	callstack 0
  3292                           
  3293 ;; *************** function _Interrupts_init *****************
  3294 ;; Defined at:
  3295 ;;		line 9 in file "interrupts.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		None
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3313 ;;Total ram usage:        0 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 2
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text28
  3324   001AEA                     __ptext28:
  3325                           	callstack 0
  3326   001AEA                     _Interrupts_init:
  3327                           	callstack 28
  3328   001AEA                     
  3329                           ;interrupts.c: 13:     PIE4bits.RC4IE=1;
  3330   001AEA  010E               	movlb	14	; () banked
  3331   001AEC  872D               	bsf	45,3,b	;volatile
  3332                           
  3333                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  3334   001AEE  8CF2               	bsf	242,6,c	;volatile
  3335                           
  3336                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  3337   001AF0  8EF2               	bsf	242,7,c	;volatile
  3338   001AF2                     
  3339                           ; BSR set to: 14
  3340   001AF2  0012               	return		;funcret
  3341   001AF4                     __end_of_Interrupts_init:
  3342                           	callstack 0
  3343                           
  3344 ;; *************** function _Buggy_init *****************
  3345 ;; Defined at:
  3346 ;;		line 7 in file "buggysetup.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		None
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3364 ;;Total ram usage:        0 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 2
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text29
  3375   00184C                     __ptext29:
  3376                           	callstack 0
  3377   00184C                     _Buggy_init:
  3378                           	callstack 28
  3379   00184C                     
  3380                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
  3381   00184C  9E7C               	bcf	124,7,c	;volatile
  3382                           
  3383                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
  3384   00184E  9E84               	bcf	132,7,c	;volatile
  3385                           
  3386                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
  3387   001850  9680               	bcf	128,3,c	;volatile
  3388                           
  3389                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
  3390   001852  9688               	bcf	136,3,c	;volatile
  3391                           
  3392                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
  3393   001854  8486               	bsf	134,2,c	;volatile
  3394                           
  3395                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
  3396   001856  010E               	movlb	14	; () banked
  3397   001858  95B4               	bcf	180,2,b	;volatile
  3398                           
  3399                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
  3400   00185A  8686               	bsf	134,3,c	;volatile
  3401                           
  3402                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
  3403   00185C  97B4               	bcf	180,3,b	;volatile
  3404                           
  3405                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
  3406   00185E  9280               	bcf	128,1,c	;volatile
  3407                           
  3408                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
  3409   001860  9288               	bcf	136,1,c	;volatile
  3410                           
  3411                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
  3412   001862  987C               	bcf	124,4,c	;volatile
  3413                           
  3414                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
  3415   001864  9884               	bcf	132,4,c	;volatile
  3416                           
  3417                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
  3418   001866  967C               	bcf	124,3,c	;volatile
  3419                           
  3420                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
  3421   001868  9684               	bcf	132,3,c	;volatile
  3422                           
  3423                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
  3424   00186A  97A7               	bcf	167,3,b	;volatile
  3425                           
  3426                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
  3427   00186C  9080               	bcf	128,0,c	;volatile
  3428                           
  3429                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
  3430   00186E  9088               	bcf	136,0,c	;volatile
  3431                           
  3432                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
  3433   001870  907E               	bcf	126,0,c	;volatile
  3434                           
  3435                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
  3436   001872  9086               	bcf	134,0,c	;volatile
  3437                           
  3438                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
  3439   001874  907F               	bcf	127,0,c	;volatile
  3440                           
  3441                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
  3442   001876  9087               	bcf	135,0,c	;volatile
  3443                           
  3444                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
  3445   001878  9E7D               	bcf	125,7,c	;volatile
  3446                           
  3447                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
  3448   00187A  9E85               	bcf	133,7,c	;volatile
  3449                           
  3450                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
  3451   00187C  9679               	bcf	121,3,c	;volatile
  3452                           
  3453                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
  3454   00187E  9681               	bcf	129,3,c	;volatile
  3455   001880                     
  3456                           ; BSR set to: 14
  3457   001880  0012               	return		;funcret
  3458   001882                     __end_of_Buggy_init:
  3459                           	callstack 0
  3460                           
  3461 ;; *************** function _HighISR *****************
  3462 ;; Defined at:
  3463 ;;		line 23 in file "interrupts.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;Total ram usage:        2 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; Hardware stack levels required when called: 1
  3484 ;; This function calls:
  3485 ;;		_getCharFromTxBuf
  3486 ;;		_putCharToRxBuf
  3487 ;;		i2_isDataInTxBuf
  3488 ;; This function is called by:
  3489 ;;		Interrupt level 2
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	intcode
  3494   000008                     __pintcode:
  3495                           	callstack 0
  3496   000008                     _HighISR:
  3497                           	callstack 24
  3498                           
  3499                           ; BSR set to: 14
  3500                           ;incstack = 0
  3501   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3502   00000A  CFD9 F002          	movff	fsr2l,??_HighISR
  3503   00000E  CFDA F003          	movff	fsr2h,??_HighISR+1
  3504   000012                     
  3505                           ;interrupts.c: 27:     if(PIR4bits.RC4IF){
  3506   000012  010E               	movlb	14	; () banked
  3507   000014  A737               	btfss	55,3,b	;volatile
  3508   000016  EF0F  F000         	goto	i2u112_41
  3509   00001A  EF11  F000         	goto	i2u112_40
  3510   00001E                     i2u112_41:
  3511   00001E  EF14  F000         	goto	i2l1850
  3512   000022                     i2u112_40:
  3513   000022                     
  3514                           ; BSR set to: 14
  3515                           ;interrupts.c: 29:     putCharToRxBuf(RC4REG);
  3516   000022  51E3               	movf	227,w,b	;volatile
  3517   000024  ECE4  F00C         	call	_putCharToRxBuf
  3518   000028                     i2l1850:
  3519                           
  3520                           ;interrupts.c: 33:     if(PIR4bits.TX4IF){
  3521   000028  010E               	movlb	14	; () banked
  3522   00002A  A537               	btfss	55,2,b	;volatile
  3523   00002C  EF1A  F000         	goto	i2u113_41
  3524   000030  EF1C  F000         	goto	i2u113_40
  3525   000034                     i2u113_41:
  3526   000034  EF2C  F000         	goto	i2l210
  3527   000038                     i2u113_40:
  3528   000038                     
  3529                           ; BSR set to: 14
  3530                           ;interrupts.c: 35:     TX4REG = getCharFromTxBuf();
  3531   000038  ECF7  F00C         	call	_getCharFromTxBuf	;wreg free
  3532   00003C  010E               	movlb	14	; () banked
  3533   00003E  6FE4               	movwf	228,b	;volatile
  3534   000040                     
  3535                           ; BSR set to: 14
  3536                           ;interrupts.c: 36:     if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
  3537   000040  EC54  F00D         	call	i2_isDataInTxBuf	;wreg free
  3538   000044  0900               	iorlw	0
  3539   000046  A4D8               	btfss	status,2,c
  3540   000048  EF28  F000         	goto	i2u114_41
  3541   00004C  EF2A  F000         	goto	i2u114_40
  3542   000050                     i2u114_41:
  3543   000050  EF2C  F000         	goto	i2l210
  3544   000054                     i2u114_40:
  3545   000054  010E               	movlb	14	; () banked
  3546   000056  952D               	bcf	45,2,b	;volatile
  3547   000058                     i2l210:
  3548   000058  C003  FFDA         	movff	??_HighISR+1,fsr2h
  3549   00005C  C002  FFD9         	movff	??_HighISR,fsr2l
  3550   000060  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3551   000062  0011               	retfie		f
  3552   000064                     __end_of_HighISR:
  3553                           	callstack 0
  3554                           
  3555 ;; *************** function i2_isDataInTxBuf *****************
  3556 ;; Defined at:
  3557 ;;		line 61 in file "serial.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;		None
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;		None
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  1    wreg      unsigned char 
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3575 ;;Total ram usage:        0 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; This function calls:
  3578 ;;		Nothing
  3579 ;; This function is called by:
  3580 ;;		_HighISR
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text31
  3585   001AA8                     __ptext31:
  3586                           	callstack 0
  3587   001AA8                     i2_isDataInTxBuf:
  3588                           	callstack 24
  3589   001AA8                     
  3590                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  3591   001AA8  5055               	movf	_TxBufReadCnt^0,w,c	;volatile
  3592   001AAA  1856               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3593   001AAC  A4D8               	btfss	status,2,c
  3594   001AAE  EF5B  F00D         	goto	i2u51_41
  3595   001AB2  EF5E  F00D         	goto	i2u51_40
  3596   001AB6                     i2u51_41:
  3597   001AB6  0E01               	movlw	1
  3598   001AB8  EF5F  F00D         	goto	i2u52_40
  3599   001ABC                     i2u51_40:
  3600   001ABC  0E00               	movlw	0
  3601   001ABE                     i2u52_40:
  3602   001ABE  0012               	return		;funcret
  3603   001AC0                     __end_ofi2_isDataInTxBuf:
  3604                           	callstack 0
  3605                           
  3606 ;; *************** function _putCharToRxBuf *****************
  3607 ;; Defined at:
  3608 ;;		line 33 in file "serial.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  byte            1    wreg     unsigned char 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  byte            1    0[COMRAM] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;Total ram usage:        1 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_HighISR
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text32
  3636   0019C8                     __ptext32:
  3637                           	callstack 0
  3638   0019C8                     _putCharToRxBuf:
  3639                           	callstack 24
  3640                           
  3641                           ;incstack = 0
  3642                           ;putCharToRxBuf@byte stored from wreg
  3643   0019C8  6E01               	movwf	putCharToRxBuf@byte^0,c
  3644   0019CA                     
  3645                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3646   0019CA  0E13               	movlw	19
  3647   0019CC  6458               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3648   0019CE  EFEB  F00C         	goto	i2u49_41
  3649   0019D2  EFED  F00C         	goto	i2u49_40
  3650   0019D6                     i2u49_41:
  3651   0019D6  EFEF  F00C         	goto	i2l1386
  3652   0019DA                     i2u49_40:
  3653   0019DA  0E00               	movlw	0
  3654   0019DC  6E58               	movwf	_RxBufWriteCnt^0,c	;volatile
  3655   0019DE                     i2l1386:
  3656                           
  3657                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3658   0019DE  5058               	movf	_RxBufWriteCnt^0,w,c
  3659   0019E0  0F3C               	addlw	low _EUSART4RXbuf
  3660   0019E2  6ED9               	movwf	fsr2l,c
  3661   0019E4  6ADA               	clrf	fsr2h,c
  3662   0019E6  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3663   0019EA  2A58               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3664   0019EC  0012               	return		;funcret
  3665   0019EE                     __end_of_putCharToRxBuf:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _getCharFromTxBuf *****************
  3669 ;; Defined at:
  3670 ;;		line 47 in file "serial.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      unsigned char 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;Total ram usage:        1 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_HighISR
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text33
  3698   0019EE                     __ptext33:
  3699                           	callstack 0
  3700   0019EE                     _getCharFromTxBuf:
  3701                           	callstack 24
  3702   0019EE                     
  3703                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  3704   0019EE  0E3B               	movlw	59
  3705   0019F0  6455               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  3706   0019F2  EFFD  F00C         	goto	i2u108_41
  3707   0019F6  EFFF  F00C         	goto	i2u108_40
  3708   0019FA                     i2u108_41:
  3709   0019FA  EF01  F00D         	goto	i2l1812
  3710   0019FE                     i2u108_40:
  3711   0019FE  0E00               	movlw	0
  3712   001A00  6E55               	movwf	_TxBufReadCnt^0,c	;volatile
  3713   001A02                     i2l1812:
  3714                           
  3715                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
  3716   001A02  2A55               	incf	_TxBufReadCnt^0,f,c	;volatile
  3717   001A04  0455               	decf	_TxBufReadCnt^0,w,c	;volatile
  3718   001A06  6E01               	movwf	??_getCharFromTxBuf^0,c
  3719   001A08  5001               	movf	??_getCharFromTxBuf^0,w,c
  3720   001A0A  0F60               	addlw	low _EUSART4TXbuf
  3721   001A0C  6ED9               	movwf	fsr2l,c
  3722   001A0E  6ADA               	clrf	fsr2h,c
  3723   001A10  50DF               	movf	indf2,w,c
  3724   001A12  0012               	return		;funcret
  3725   001A14                     __end_of_getCharFromTxBuf:
  3726                           	callstack 0
  3727                           
  3728                           	psect	rparam
  3729   000000                     
  3730                           	psect	temp
  3731   000059                     btemp:
  3732                           	callstack 0
  3733   000059                     	ds	1
  3734   000000                     int$flags	set	btemp
  3735   000000                     wtemp8	set	btemp+1
  3736   000000                     ttemp5	set	btemp+1
  3737   000000                     ttemp6	set	btemp+4
  3738   000000                     ttemp7	set	btemp+8
  3739                           
  3740                           	psect	config
  3741                           
  3742                           ;Config register CONFIG1L @ 0x300000
  3743                           ;	External Oscillator mode Selection bits
  3744                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3745                           ;	Power-up default value for COSC bits
  3746                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3747   300000                     	org	3145728
  3748   300000  AA                 	db	170
  3749                           
  3750                           ;Config register CONFIG1H @ 0x300001
  3751                           ;	unspecified, using default values
  3752                           ;	Clock Out Enable bit
  3753                           ;	CLKOUTEN = 0x1, unprogrammed default
  3754                           ;	Clock Switch Enable bit
  3755                           ;	CSWEN = 0x1, unprogrammed default
  3756                           ;	Fail-Safe Clock Monitor Enable bit
  3757                           ;	FCMEN = 0x1, unprogrammed default
  3758   300001                     	org	3145729
  3759   300001  FF                 	db	255
  3760                           
  3761                           ;Config register CONFIG3L @ 0x300004
  3762                           ;	WDT Period Select bits
  3763                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3764                           ;	WDT operating mode
  3765                           ;	WDTE = OFF, WDT Disabled
  3766   300004                     	org	3145732
  3767   300004  9F                 	db	159
  3768                           
  3769                           ;Config register CONFIG3H @ 0x300005
  3770                           ;	unspecified, using default values
  3771                           ;	WDT Window Select bits
  3772                           ;	WDTCWS = 0x7, unprogrammed default
  3773                           ;	WDT input clock selector
  3774                           ;	WDTCCS = 0x7, unprogrammed default
  3775   300005                     	org	3145733
  3776   300005  FF                 	db	255
  3777                           tosu	equ	0xFFF
  3778                           tosh	equ	0xFFE
  3779                           tosl	equ	0xFFD
  3780                           stkptr	equ	0xFFC
  3781                           pclatu	equ	0xFFB
  3782                           pclath	equ	0xFFA
  3783                           pcl	equ	0xFF9
  3784                           tblptru	equ	0xFF8
  3785                           tblptrh	equ	0xFF7
  3786                           tblptrl	equ	0xFF6
  3787                           tablat	equ	0xFF5
  3788                           prodh	equ	0xFF4
  3789                           prodl	equ	0xFF3
  3790                           indf0	equ	0xFEF
  3791                           postinc0	equ	0xFEE
  3792                           postdec0	equ	0xFED
  3793                           preinc0	equ	0xFEC
  3794                           plusw0	equ	0xFEB
  3795                           fsr0h	equ	0xFEA
  3796                           fsr0l	equ	0xFE9
  3797                           wreg	equ	0xFE8
  3798                           indf1	equ	0xFE7
  3799                           postinc1	equ	0xFE6
  3800                           postdec1	equ	0xFE5
  3801                           preinc1	equ	0xFE4
  3802                           plusw1	equ	0xFE3
  3803                           fsr1h	equ	0xFE2
  3804                           fsr1l	equ	0xFE1
  3805                           bsr	equ	0xFE0
  3806                           indf2	equ	0xFDF
  3807                           postinc2	equ	0xFDE
  3808                           postdec2	equ	0xFDD
  3809                           preinc2	equ	0xFDC
  3810                           plusw2	equ	0xFDB
  3811                           fsr2h	equ	0xFDA
  3812                           fsr2l	equ	0xFD9
  3813                           status	equ	0xFD8

Data Sizes:
    Strings     42
    Constant    0
    Data        0
    BSS         161
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      88
    BANK0           160     56     148
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    color_normalise@RGBC_n	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_n(BANK0[8]), 

    color_read@RGBC	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC(BANK0[8]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S1683$buffer	PTR unsigned char  size(2) Largest target is 0

    S1683$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 42
		 -> STR_1(CODE[42]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK0[40]), 

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), STR_2(CODE[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 42
		 -> STR_1(CODE[42]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 42
		 -> STR_1(CODE[42]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 42
		 -> STR_1(CODE[42]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___aldiv
    ___aldiv->___lmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf
    _HighISR->_putCharToRxBuf

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0    6498
                                             57 COMRAM     2     2      0
                                              0 BANK0     56    56      0
                         _Buggy_init
                    _Interrupts_init
                   _TxBufferedString
                   _color_click_init
                    _color_normalise
                         _color_read
                         _initUSART4
                          _sendTxBuf
                            _sprintf
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    15     16    3287
                                             28 COMRAM    29    13     16
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2936
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    2586
                                             13 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              3 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              9 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read                                           8     7      1     407
                                              7 COMRAM     8     7      1
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              4 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                     11     2      9    1965
                                             29 COMRAM    11     2      9
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             15 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              7 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              5 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     219
                                              4 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0      15
                                              1 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (7) i2_isDataInTxBuf                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_normalise
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _color_read
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initUSART4
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      94       5       92.5%
BITBIGSFRlllhhh     8F      0       0      37        0.0%
BITBIGSFRhhl        63      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      58       1       93.6%
BITBIGSFRllllll     36      0       0      42        0.0%
BITBIGSFRllllll     2A      0       0      44        0.0%
BITBIGSFRllllll     26      0       0      48        0.0%
BITBIGSFRlllllh     20      0       0      40        0.0%
BITBIGSFRllllll      F      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      43        0.0%
BITBIGSFRlllllh      C      0       0      41        0.0%
BITBIGSFRllllll      9      0       0      45        0.0%
BITBIGSFRlllhl       8      0       0      38        0.0%
BITBIGSFRllllll      6      0       0      47        0.0%
BITBIGSFRhlhh        5      0       0      34        0.0%
BITBIGSFRllh         2      0       0      36        0.0%
BITBIGSFRhll         2      0       0      35        0.0%
BITBIGSFRllllh       1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     114      49        0.0%
DATA                 0      0     114       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Mar 04 17:02:24 2024

                  _white_Light 1A14                             l48 142E                             l81 1A56  
                           l92 12FA                             l84 1A30                             l78 191C  
                           l86 1A36                             l89 1000                   ___awdiv@sign 0009  
            ??_Interrupts_init 0004                            l202 1AF2                            l122 197A  
                          l131 1AD4                            l140 180C                            l125 19A0  
                          l134 1ADE                            l119 1978                            l128 1AE8  
                          l137 1ACA                            l241 1A74                            l171 1880  
                          l260 19C6                            l263 1AA6                            l520 1654  
                          l273 1A8E                            l355 1406                            l507 15A4  
                          l269 17CA                            l287 1758                            l288 1768  
                          l954 18B4                            l992 11B8                            l998 184A  
                          u600 198A                            u601 1986                            u610 19A0  
                          u611 199C                            u620 14F4                            u700 15EC  
                          u621 14F0                            u701 15E8                            u630 150E  
                          u710 160A                            u631 150A                            u711 1606  
                          u640 1534                            u720 1620                            u800 1062  
                          u641 1530                            u721 161C                            u801 105E  
                          u650 1552                            u730 1644                            u810 107E  
                          u651 154E                            u731 1640                            u811 107A  
                          u660 156E                            u740 1666                            u820 10B4  
                          u661 156A                            u741 1662                            u821 10AE  
                          u910 1AA4                            u670 1594                            u750 1676  
                          u830 10B6                            u911 1A9E                            u671 1590  
                          u751 1672                            u920 1AA6                            u680 15B8  
                          u760 169C                            u840 1116                            u681 15B4  
                          u761 1698                            u841 1112                            u930 19B4  
                          u690 15D2                            u770 16CE                            u850 1126  
                          u931 19B0                            u691 15CE                            u771 16CA  
                          u851 1122                            u940 171E                            u908 17F8  
                          u780 18C4                            u860 1136                            u941 171A  
                          u781 18C0                            u861 1132                            u950 1758  
                          u870 1146                            u790 1024                            u951 1754  
                          u871 1142                            u791 1020                            u960 130E  
                          u880 1186                            u961 130A                            u881 1182  
                          u970 1330                            u890 17F6                            u971 132C  
                          u891 17EE                            u980 136A                            u981 1366  
                          u990 138C                            u991 1388                            _abs 18B6  
                 ___awmod@sign 0009                            wreg 0FE8                _color_normalise 11BA  
                         l1002 18D0                           l1005 18E8                           l1017 16FE  
                         ?_abs 000A                           l1028 1AF4                           l1500 159C  
                         l1510 15C0                           l1520 15F4                           l1512 15C4  
                         l1504 15A6                           l1600 1136                           l1530 162E  
                         l1522 15FC                           l1514 15D2                           l1506 15AA  
                         l1602 1146                           l1610 118A                           l1620 1950  
                         l1700 1396                           l1460 14E2                           l1524 160A  
                         l1532 1634                           l1516 15DA                           l1508 15B8  
                         l1540 1656                           l1604 1158                           l1630 1966  
                         l1622 195A                           l1702 13B4                           l1710 13D6  
                         l1470 150E                           l1462 14E6                           l1534 1644  
                         l1526 1620                           l1518 15EC                           l1550 16CE  
                         l1542 1666                           l1606 1172                           l1614 1196  
                         l1800 176A                           l1624 1960                           l1456 197A  
                         l1560 1AE4                           l1632 1A3A                           l1712 13E6  
                         l1704 13C4                           l1640 17D2                           l1480 153C  
                         l1472 1516                           l1464 14F4                           l1536 164C  
                         l1528 1628                           l1544 1676                           l1608 1174  
                         l1720 1816                           l1802 176E                           l1626 1962  
                         l1458 198A                           l1562 1AC2                           l1730 18EA  
                         l1714 13F6                           l1706 13C6                           l1642 17DA  
                         l1634 1ACC                           l1490 1576                           l1482 1544  
                         l1474 151A                           l1466 14FC                           l1554 18B6  
                         l1546 1680                           l1570 1002                           l1722 1826  
                         l1660 19B8                           l1804 1794                           l1628 1964  
                         l1564 1AC6                           l1732 18EE                           l1708 13D0  
                         l1644 17E2                           l1636 1AD0                           l1740 1A58  
                         l1652 1A90                           l1492 1578                           l1484 1552  
                         l1476 1522                           l1468 1500                           l1556 18C4  
                         l1548 169C                           l1580 1046                           l1572 1024  
                         l1724 1842                           l1820 1410                           l1662 19C4  
                         l1806 1798                           l1558 1AE0                           l1566 1AD6  
                         l1734 18F8                           l1670 172E                           l1646 1808  
                         l1638 17CE                           l1750 1A72                           l1742 1A62  
                         l1494 157E                           l1486 1558                           l1478 1534  
                         l1590 10B8                           l1582 1062                           l1574 102C  
                         l1718 180E                           l1830 143C                           l1822 1414  
                         l1728 184C                           l1752 1AEA                           l1656 19A4  
                         l1568 1ADA                           l1736 1908                           l1680 131E  
                         l1672 1738                           l1664 1700                           l1648 180A  
                         l1760 0E46                           l1744 1A64                           l1488 156E  
                         l1496 1584                           l1592 10E8                           l1584 107E  
                         l1576 1038                           l1840 14B0                           l1832 1444  
                         l1824 1418                           l1816 1408                           l1658 19B4  
                         l1738 1912                           l1690 1354                           l1682 1322  
                         l1674 12FC                           l1666 1710                           l1770 0F46  
                         l1762 0E5E                           l1746 1A6E                           l1498 1594  
                         l1594 1104                           l1586 1096                           l1578 103C  
                         l1754 1A16                           l1842 14B4                           l1834 145E  
                         l1826 1424                           l1818 140C                           l1692 136A  
                         l1684 1330                           l1676 1300                           l1668 171E  
                         l1780 122E                           l1772 0FA2                           l1764 0EB2  
                         l1748 1A70                           l1596 1116                           l1588 10A0  
                         l1756 1A26                           l1844 14C4                           l1836 14A2  
                         l1828 1428                           l1694 1372                           l1686 1340  
                         l1678 130E                           l1782 1294                           l1774 0FBE  
                         l1766 0ECE                           l1758 0E2C                           l1598 1126  
                         l1790 189A                           l1838 14A6                           l1696 137E  
                         l1688 1344                           l1776 11BA                           l1768 0F2A  
                         l1792 18AA                           l1784 1882                           l1698 138C  
                         l1778 11CC                           l1786 188A                           l1796 1A76  
                         l1788 1892                           l1798 1A8A                           STR_1 0E01  
                         STR_2 0E2A                           u1000 13B4                           u1001 13B0  
                         u1010 13E6                           u1011 13E2                           u1020 1842  
                         u1100 143C                           u1021 183E                           u1101 1438  
                         u1030 1A26                           u1031 1A22                           u1111 144E  
                         u1040 1A8A                           u1041 1A86                           u1050 1790  
                         u1060 17BA                           u1070 17CA                           u1071 17C6  
                         u1057 1786                           u1067 17B0                           u1091 141E  
                         u1157 14CE                           u1167 18FE                   _BAUD4CONbits 0EE9  
                         abs@a 000A                           _dbuf 009C                           _main 1408  
                         _prec 0052                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 0059                           start 0064                __end_of_HighISR 0064  
                 ___param_bank 0000                          ??_abs 000C                __end_of___aldiv 1408  
                        ?_main 0001                __end_of___awdiv 15A6                __end_of___awmod 1656  
              ___awdiv@divisor 0006                          i2l210 0058                          i2l263 1ABE  
                        i2l256 1A12                          i2l249 19EC                ___awdiv@counter 0008  
                 vfpfcnvrt@fmt 000F            ___lmul@multiplicand 0008     __end_of_I2C_2_Master_Start 1AEA  
   __end_of_I2C_2_Master_Write 1ACC                          _flags 0054                     _Buggy_init 184C  
                        _fputc 1656                          _width 0050                          _putch 1AF4  
                        tablat 0FF5                          plusw0 0FEB                          plusw2 0FDB  
                        ttemp5 005A                          ttemp6 005D                          ttemp7 0061  
                        status 0FD8                          wtemp8 005A                __end_of_sprintf 18B6  
        _I2C_2_Master_RepStart 1ACC             putCharToRxBuf@byte 0001                __initialization 191E  
                 __end_of_main 14E2                i2_isDataInTxBuf 1AA8             putCharToTxBuf@byte 0004  
                       ??_main 003A                  __activetblptr 0002        __end_of_color_normalise 12FC  
                       ?_fputc 0004               ___awdiv@dividend 0004                         ?_putch 0001  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RD5PPS 0E6F  
                       _RD6PPS 0E70                         i2l1382 19CA                         i2l1384 19DA  
                       i2l1810 19FE                         i2l1386 19DE                         i2l1812 1A02  
                       i2l1388 19EA                         i2l1398 1AA8                         i2l1808 19EE  
                       i2l1850 0028                         i2l1852 0038                         i2l1854 0040  
                       i2l1846 0012                         i2l1856 0054                         i2l1848 0022  
                vfpfcnvrt@done 0012                      ??_HighISR 0002       __end_of_color_click_init 191E  
                       _RX4PPS 0E15                         _TX4REG 0EE4                   vfprintf@cfmt 001C  
             _getCharFromTxBuf 19EE                         ___lmul 1700                      ??___aldiv 0018  
                    ??___awdiv 0008                      ??___awmod 0008                         clear_0 1924  
                       clear_1 1930                         clear_2 193C               ___awdiv@quotient 000A  
              ___awmod@divisor 0006                         isa$std 0001                ___awmod@counter 0008  
                       fputc@c 0004              ?_TxBufferedString 0005                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
           ??_TxBufferedString 0007                         putch@c 0001               __end_of_vfprintf 184C  
                  ?_Buggy_init 0001                      ??_sprintf 002D          __end_of_isDataInTxBuf 1AA8  
                   __accesstop 0060        __end_of__initialization 1942         ?_I2C_2_Master_RepStart 0001  
      __end_ofi2_isDataInTxBuf 1AC0                  ___rparam_used 0001                _Interrupts_init 1AEA  
               __pcstackCOMRAM 0001                   ?_white_Light 0001                  __end_of_fputc 1700  
                __end_of_putch 1AF6               ?_color_normalise 001E                        ??_fputc 0007  
                      ??_putch 0004                     __pbssBANK0 0060                     __pbssBANK1 0100  
            _color_writetoaddr 1A38             ?_color_writetoaddr 0006                        ?___lmul 0004  
               ___lmul@product 000C            ??_color_writetoaddr 0007                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                        i2u51_40 1ABC                        i2u51_41 1AB6  
                      i2u52_40 1ABE                        i2u49_40 19DA                        i2u49_41 19D6  
                      _SSP2ADD 0ED6                        _SSP2BUF 0ED5                     _color_read 0E2C  
      __end_of_Interrupts_init 1AF4         color_writetoaddr@value 0006                        _HighISR 0008  
    __end_of_color_writetoaddr 1A58               ?i2_isDataInTxBuf 0001             _I2C_2_Master_Start 1AE0  
                   _initUSART4 1A58             _I2C_2_Master_Write 1AC0                        __Hparam 0000  
                      __Lparam 0000                        ___aldiv 12FC                        ___awdiv 14E2  
                      ___awmod 15A6            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0019                   __psmallconst 0E00                        __pcinit 191E  
                      __ramtop 0E00                        __ptext0 1408                        __ptext1 1A14  
                      __ptext2 1882                        __ptext3 180E                        __ptext4 1002  
                      __ptext5 1656                        __ptext6 1AF4                        __ptext7 18B6  
                      __ptext8 15A6                        __ptext9 14E2               ___awmod@dividend 0004  
             ___aldiv@dividend 0010                  _RxBufWriteCnt 0058       __end_of_getCharFromTxBuf 1A14  
                      main@buf 00BC                        _sprintf 1882           ??_I2C_2_Master_Start 0005  
         ??_I2C_2_Master_Write 0005          color_normalise@RGBC_n 0026           end_of_initialization 1942  
            __end_of_sendTxBuf 1A90                        fputc@fp 0006                  __Lmediumconst 0000  
            ?_color_click_init 0001             ??_color_click_init 0008              __end_of_vfpfcnvrt 11BA  
             ___aldiv@quotient 001A                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 0014  
                   main@F14504 0100                     ??_vfprintf 001C                      _PORTFbits 0F8E  
                   main@RGBC_n 00E4                      _TRISAbits 0F81                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88               white_Light@state 0004                   ??_Buggy_init 0004  
                  ?_color_read 0008       color_writetoaddr@address 0007        ??_I2C_2_Master_RepStart 0005  
             ?_Interrupts_init 0001                   _EUSART4RXbuf 003C                   _EUSART4TXbuf 0060  
                  ?_initUSART4 0001                 color_read@RGBC 0008                 __end_of___lmul 176A  
                  vfpfcnvrt@ap 0010                    vfpfcnvrt@cp 0013                    vfpfcnvrt@fp 000E  
           __end_of_Buggy_init 1882            start_initialization 191E                    __end_of_abs 18EA  
                _TxBufWriteCnt 0056                    vfprintf@fmt 001A                       ??___lmul 000C  
               _putCharToRxBuf 19C8                 _putCharToTxBuf 19A2            color_normalise@RGBC 001E  
                  __pbssCOMRAM 003C                  __pcstackBANK0 00BC                       ?_HighISR 0001  
       __end_of_putCharToRxBuf 19EE         __end_of_putCharToTxBuf 19C8                      __pintcode 0008  
                     ?___aldiv 0010                       ?___awdiv 0004                       ?___awmod 0004  
       TxBufferedString@string 0005           I2C_2_Master_Read@ack 0006           I2C_2_Master_Read@tmp 0007  
                  __smallconst 0E00              _I2C_2_Master_Idle 197A              _I2C_2_Master_Init 1950  
            _I2C_2_Master_Read 17CC              _I2C_2_Master_Stop 1AD6                   _RxBufReadCnt 0057  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                       ?_sprintf 001D              ?_getCharFromTxBuf 0001  
           ??_getCharFromTxBuf 0001                ___aldiv@divisor 0014            ??_I2C_2_Master_Idle 0004  
              ___aldiv@counter 0018            ??_I2C_2_Master_Init 0004            ??_I2C_2_Master_Read 0005  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0005                  _isDataInTxBuf 1A90  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
             _TxBufferedString 176A                       _LATGbits 0F7F                       _LATHbits 0F80  
                    _sendTxBuf 1A76                       _PIE4bits 0E2D                       i2u112_40 0022  
                     i2u112_41 001E                       i2u113_40 0038                       i2u113_41 0034  
                     i2u114_40 0054                       i2u114_41 0050                       i2u108_40 19FE  
                     i2u108_41 19FA                       _PIR4bits 0E37                ?_putCharToRxBuf 0001  
              ?_putCharToTxBuf 0001                       _SSP2CON2 0EDA                       _SSP2STAT 0ED8  
                    _vfpfcnvrt 1002      __end_of_I2C_2_Master_Idle 19A2      __end_of_I2C_2_Master_Init 197A  
    __end_of_I2C_2_Master_Read 180E      __end_of_I2C_2_Master_Stop 1AE0    I2C_2_Master_Write@data_byte 0005  
                 _TxBufReadCnt 0055                     vfpfcnvrt@c 0018                   ??_color_read 0009  
            ___lmul@multiplier 0004                 ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 1AD6  
                   ?_sendTxBuf 0001                   ??_initUSART4 0004                       __Hrparam 0000  
            ??_color_normalise 0027                     vfprintf@ap 001B                       __Lrparam 0000  
                   vfprintf@fp 0019                  ??_white_Light 0004                     ?_vfpfcnvrt 000E  
           __end_of_color_read 1002                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                   sprintf@fmt 001E             __end_of_initUSART4 1A76                       __ptext10 1A76  
                     __ptext11 1A90                       __ptext20 1A38                       __ptext12 1A58  
                     __ptext21 1AC0                       __ptext13 0E2C                       __ptext22 1AD6  
                     __ptext14 1ACC                       __ptext31 1AA8                       __ptext23 1AE0  
                     __ptext15 17CC                       __ptext32 19C8                       __ptext24 197A  
                     __ptext16 11BA                       __ptext33 19EE                       __ptext25 1950  
                     __ptext17 1700                       __ptext26 176A                       __ptext18 12FC  
                     __ptext27 19A2                       __ptext19 18EA                       __ptext28 1AEA  
                     __ptext29 184C                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       main@RGBC 00EC  
                     int$flags 0059                       _vfprintf 180E            __end_of_white_Light 1A38  
                   _INTCONbits 0FF2              ??i2_isDataInTxBuf 0001                ??_isDataInTxBuf 0004  
                     intlevel2 0000                      sprintf@ap 002D                    ??_sendTxBuf 0004  
                  ??_vfpfcnvrt 0011               _color_click_init 18EA       __end_of_TxBufferedString 17CC  
                     sprintf@f 002E                       sprintf@s 001D                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C                   ___aldiv@sign 0019                     _TX4STAbits 0EE8  
             ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0004  
