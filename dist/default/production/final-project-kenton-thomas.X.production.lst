

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Mar 10 15:01:19 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70   000000                     
    71                           ; Generated 21/07/2023 GMT
    72                           ; 
    73                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F67K40 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105   000000                     
   106                           	psect	idataCOMRAM
   107   00390A                     __pidataCOMRAM:
   108                           	callstack 0
   109                           
   110                           ;initializer for _ambient
   111   00390A  01F4               	dw	500
   112                           
   113                           	psect	idataBANK1
   114   003906                     __pidataBANK1:
   115                           	callstack 0
   116                           
   117                           ;initializer for main@F14616
   118   003906  01                 	db	1
   119   003907  03                 	db	3
   120   003908  09                 	db	9
   121   003909  08                 	db	8
   122   000000                     _TRISCbits	set	3971
   123   000000                     _RC4STAbits	set	3815
   124   000000                     _SP4BRGH	set	3814
   125   000000                     _SP4BRGL	set	3813
   126   000000                     _TX4STAbits	set	3816
   127   000000                     _BAUD4CONbits	set	3817
   128   000000                     _TX4REG	set	3812
   129   000000                     _TRISBbits	set	3970
   130   000000                     _TRISAbits	set	3969
   131   000000                     _TRISEbits	set	3973
   132   000000                     _TRISGbits	set	3975
   133   000000                     _LATFbits	set	3966
   134   000000                     _TRISFbits	set	3974
   135   000000                     _TRISHbits	set	3976
   136   000000                     _TRISDbits	set	3972
   137   000000                     _LATEbits	set	3965
   138   000000                     _LATGbits	set	3967
   139   000000                     _LATHbits	set	3968
   140   000000                     _SSP2CON2bits	set	3802
   141   000000                     _TMR0IF	set	29085
   142   000000                     _TMR0IE	set	29005
   143   000000                     _RX4PPS	set	3605
   144   000000                     _SSP2CLKPPS	set	3612
   145   000000                     _SSP2DATPPS	set	3613
   146   000000                     _PIE0bits	set	3625
   147   000000                     _CCPR4H	set	3873
   148   000000                     _CCPR3H	set	3877
   149   000000                     _CCPR2H	set	4006
   150   000000                     _CCPR1H	set	4010
   151   000000                     _CCP1CONbits	set	4011
   152   000000                     _CCPTMRS0bits	set	4013
   153   000000                     _T2PR	set	4028
   154   000000                     _T2CONbits	set	4029
   155   000000                     _INTCONbits	set	4082
   156   000000                     _CCP2CONbits	set	4007
   157   000000                     _CCP3CONbits	set	3878
   158   000000                     _ADREFbits	set	3928
   159   000000                     _LATAbits	set	3961
   160   000000                     _LATDbits	set	3964
   161   000000                     _PORTFbits	set	3982
   162   000000                     _CCP4CONbits	set	3874
   163   000000                     _PIE4bits	set	3629
   164   000000                     _RD5PPS	set	3695
   165   000000                     _ANSELDbits	set	3751
   166   000000                     _SSP2ADD	set	3798
   167   000000                     _SSP2CON1bits	set	3801
   168   000000                     _LATCbits	set	3963
   169   000000                     _RC4REG	set	3811
   170   000000                     _SSP2CON2	set	3802
   171   000000                     _SSP2STAT	set	3800
   172   000000                     _ANSELFbits	set	3764
   173   000000                     _SSP2BUF	set	3797
   174   000000                     _IPR0bits	set	3615
   175   000000                     _RE2PPS	set	3700
   176   000000                     _ANSELBbits	set	3738
   177   000000                     _RD6PPS	set	3696
   178   000000                     _PIR0bits	set	3635
   179   000000                     _PIR4bits	set	3639
   180   000000                     _RC0PPS	set	3682
   181   000000                     _RC7PPS	set	3689
   182   000000                     _ADPCH	set	3935
   183   000000                     _ADRESH	set	3940
   184   000000                     _ADCON0bits	set	3936
   185   000000                     _RE4PPS	set	3702
   186   000000                     _RG6PPS	set	3720
   187   000000                     _TMR0L	set	4051
   188   000000                     _TMR0H	set	4052
   189   000000                     _T0CON0bits	set	4053
   190   000000                     _T0CON1bits	set	4054
   191   000000                     _T2CLKCONbits	set	4031
   192   000000                     _T2HLTbits	set	4030
   193                           
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197   0034C6                     __pcinit:
   198                           	callstack 0
   199   0034C6                     start_initialization:
   200                           	callstack 0
   201   0034C6                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Initialize objects allocated to BANK1 (4 bytes)
   205                           ; load TBLPTR registers with __pidataBANK1
   206   0034C6  0E06               	movlw	low __pidataBANK1
   207   0034C8  6EF6               	movwf	tblptrl,c
   208   0034CA  0E39               	movlw	high __pidataBANK1
   209   0034CC  6EF7               	movwf	tblptrh,c
   210   0034CE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   211   0034D0  6EF8               	movwf	tblptru,c
   212   0034D2  EE01  F0FC         	lfsr	0,__pdataBANK1
   213   0034D6  EE10 F004          	lfsr	1,4
   214   0034DA                     copy_data0:
   215   0034DA  0009               	tblrd		*+
   216   0034DC  CFF5 FFEE          	movff	tablat,postinc0
   217   0034E0  50E5               	movf	postdec1,w,c
   218   0034E2  50E1               	movf	fsr1l,w,c
   219   0034E4  E1FA               	bnz	copy_data0
   220                           
   221                           ; Initialize objects allocated to COMRAM (2 bytes)
   222                           ; load TBLPTR registers with __pidataCOMRAM
   223   0034E6  0E0A               	movlw	low __pidataCOMRAM
   224   0034E8  6EF6               	movwf	tblptrl,c
   225   0034EA  0E39               	movlw	high __pidataCOMRAM
   226   0034EC  6EF7               	movwf	tblptrh,c
   227   0034EE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   228   0034F0  6EF8               	movwf	tblptru,c
   229   0034F2  0009               	tblrd		*+	;fetch initializer
   230   0034F4  CFF5 F049          	movff	tablat,__pdataCOMRAM
   231   0034F8  0009               	tblrd		*+	;fetch initializer
   232   0034FA  CFF5 F04A          	movff	tablat,__pdataCOMRAM+1
   233                           
   234                           ; Clear objects allocated to BANK2 (82 bytes)
   235   0034FE  EE02  F000         	lfsr	0,__pbssBANK2
   236   003502  0E52               	movlw	82
   237   003504                     clear_0:
   238   003504  6AEE               	clrf	postinc0,c
   239   003506  06E8               	decf	wreg,f,c
   240   003508  E1FD               	bnz	clear_0
   241                           
   242                           ; Clear objects allocated to BANK1 (42 bytes)
   243   00350A  EE01  F0D2         	lfsr	0,__pbssBANK1
   244   00350E  0E2A               	movlw	42
   245   003510                     clear_1:
   246   003510  6AEE               	clrf	postinc0,c
   247   003512  06E8               	decf	wreg,f,c
   248   003514  E1FD               	bnz	clear_1
   249                           
   250                           ; Clear objects allocated to BANK0 (120 bytes)
   251   003516  EE00  F060         	lfsr	0,__pbssBANK0
   252   00351A  0E78               	movlw	120
   253   00351C                     clear_2:
   254   00351C  6AEE               	clrf	postinc0,c
   255   00351E  06E8               	decf	wreg,f,c
   256   003520  E1FD               	bnz	clear_2
   257                           
   258                           ; Clear objects allocated to COMRAM (4 bytes)
   259   003522  6A48               	clrf	(__pbssCOMRAM+3)& (0+255),c
   260   003524  6A47               	clrf	(__pbssCOMRAM+2)& (0+255),c
   261   003526  6A46               	clrf	(__pbssCOMRAM+1)& (0+255),c
   262   003528  6A45               	clrf	__pbssCOMRAM& (0+255),c
   263   00352A                     end_of_initialization:
   264                           	callstack 0
   265   00352A                     __end_of__initialization:
   266                           	callstack 0
   267   00352A  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   268   00352C  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   269   00352E  0100               	movlb	0
   270   003530  EFDA  F010         	goto	_main	;jump to C main() function
   271                           
   272                           	psect	bssCOMRAM
   273   000045                     __pbssCOMRAM:
   274                           	callstack 0
   275   000045                     _TxBufReadCnt:
   276                           	callstack 0
   277   000045                     	ds	1
   278   000046                     _TxBufWriteCnt:
   279                           	callstack 0
   280   000046                     	ds	1
   281   000047                     _RxBufReadCnt:
   282                           	callstack 0
   283   000047                     	ds	1
   284   000048                     _RxBufWriteCnt:
   285                           	callstack 0
   286   000048                     	ds	1
   287                           
   288                           	psect	dataCOMRAM
   289   000049                     __pdataCOMRAM:
   290                           	callstack 0
   291   000049                     _ambient:
   292                           	callstack 0
   293   000049                     	ds	2
   294                           
   295                           	psect	bssBANK0
   296   000060                     __pbssBANK0:
   297                           	callstack 0
   298   000060                     _EUSART4TXbuf:
   299                           	callstack 0
   300   000060                     	ds	60
   301   00009C                     	ds	40
   302   0000C4                     _EUSART4RXbuf:
   303                           	callstack 0
   304   0000C4                     	ds	20
   305                           
   306                           	psect	bssBANK1
   307   0001D2                     __pbssBANK1:
   308                           	callstack 0
   309   0001D2                     	ds	40
   310   0001FA                     _lost:
   311                           	callstack 0
   312   0001FA                     	ds	1
   313   0001FB                     _wall:
   314                           	callstack 0
   315   0001FB                     	ds	1
   316                           
   317                           	psect	dataBANK1
   318   0001FC                     __pdataBANK1:
   319                           	callstack 0
   320   0001FC                     main@F14616:
   321                           	callstack 0
   322   0001FC                     	ds	4
   323                           
   324                           	psect	bssBANK2
   325   000200                     __pbssBANK2:
   326                           	callstack 0
   327   000200                     	ds	82
   328                           
   329                           	psect	cstackBANK1
   330   000100                     __pcstackBANK1:
   331                           	callstack 0
   332   000100                     main@buf:
   333                           	callstack 0
   334                           
   335                           ; 40 bytes @ 0x0
   336   000100                     	ds	40
   337   000128                     main@straightTime:
   338                           	callstack 0
   339                           
   340                           ; 82 bytes @ 0x28
   341   000128                     	ds	82
   342   00017A                     main@moveSequence:
   343                           	callstack 0
   344                           
   345                           ; 40 bytes @ 0x7A
   346   00017A                     	ds	40
   347   0001A2                     main@testSequence:
   348                           	callstack 0
   349                           
   350                           ; 4 bytes @ 0xA2
   351   0001A2                     	ds	4
   352   0001A6                     main@RGBC_n:
   353                           	callstack 0
   354                           
   355                           ; 8 bytes @ 0xA6
   356   0001A6                     	ds	8
   357   0001AE                     main@reverseDuration:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0xAE
   361   0001AE                     	ds	1
   362   0001AF                     main@turnSpeed:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0xAF
   366   0001AF                     	ds	1
   367   0001B0                     main@turnDuration:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0xB0
   371   0001B0                     	ds	1
   372   0001B1                     main@turnRamp:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0xB1
   376   0001B1                     	ds	1
   377   0001B2                     main@straightSpeed:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0xB2
   381   0001B2                     	ds	1
   382   0001B3                     main@color:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0xB3
   386   0001B3                     	ds	1
   387   0001B4                     main@straightRamp:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0xB4
   391   0001B4                     	ds	1
   392   0001B5                     main@curMove:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0xB5
   396   0001B5                     	ds	1
   397   0001B6                     main@RGBC:
   398                           	callstack 0
   399                           
   400                           ; 8 bytes @ 0xB6
   401   0001B6                     	ds	8
   402   0001BE                     main@motorR:
   403                           	callstack 0
   404                           
   405                           ; 10 bytes @ 0xBE
   406   0001BE                     	ds	10
   407   0001C8                     main@motorL:
   408                           	callstack 0
   409                           
   410                           ; 10 bytes @ 0xC8
   411   0001C8                     	ds	10
   412                           
   413                           	psect	cstackBANK0
   414   0000D8                     __pcstackBANK0:
   415                           	callstack 0
   416   0000D8                     move@mL:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x0
   420   0000D8                     	ds	2
   421   0000DA                     move@mR:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x2
   425   0000DA                     	ds	2
   426   0000DC                     move@color:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x4
   430   0000DC                     	ds	1
   431   0000DD                     move@moveSequence:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x5
   435   0000DD                     	ds	2
   436   0000DF                     move@straightTime:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x7
   440   0000DF                     	ds	2
   441   0000E1                     move@curMove:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x9
   445   0000E1                     	ds	1
   446   0000E2                     move@straightSpeed:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0xA
   450   0000E2                     	ds	1
   451   0000E3                     move@reverseDuration:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0xB
   455   0000E3                     	ds	1
   456   0000E4                     move@straightRamp:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0xC
   460   0000E4                     	ds	1
   461   0000E5                     move@turnSpeed:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0xD
   465   0000E5                     	ds	1
   466   0000E6                     move@turnDuration:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0xE
   470   0000E6                     	ds	1
   471   0000E7                     move@turnRamp:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0xF
   475   0000E7                     	ds	1
   476                           
   477                           	psect	cstackCOMRAM
   478   000001                     __pcstackCOMRAM:
   479                           	callstack 0
   480   000001                     ??_getCharFromTxBuf:
   481   000001                     ??i2_I2C_2_Master_Idle:
   482   000001                     putCharToRxBuf@byte:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x0
   486   000001                     	ds	1
   487   000002                     i2I2C_2_Master_Write@data_byte:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x1
   491   000002                     	ds	1
   492   000003                     i2color_writetoaddr@value:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x2
   496   000003                     	ds	1
   497   000004                     i2color_writetoaddr@address:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x3
   501   000004                     	ds	1
   502   000005                     ??i2_color_clear_init_interrupts:
   503                           
   504                           ; 1 bytes @ 0x4
   505   000005                     	ds	1
   506   000006                     i2color_clear_init_interrupts@high_threshold:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x5
   510   000006                     	ds	2
   511   000008                     i2color_clear_init_interrupts@low_threshold:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x7
   515   000008                     	ds	2
   516   00000A                     ??_HighISR:
   517                           
   518                           ; 1 bytes @ 0x9
   519   00000A                     	ds	2
   520   00000C                     ??_I2C_2_Master_Idle:
   521   00000C                     ?_get16bitTMR0val:
   522                           	callstack 0
   523   00000C                     ?___wmul:
   524                           	callstack 0
   525   00000C                     ?___awdiv:
   526                           	callstack 0
   527   00000C                     ?___lmul:
   528                           	callstack 0
   529   00000C                     white_Light@state:
   530                           	callstack 0
   531   00000C                     ADC_getval@tmpval:
   532                           	callstack 0
   533   00000C                     initDCmotorsPWM@PWMperiod:
   534                           	callstack 0
   535   00000C                     ___wmul@multiplier:
   536                           	callstack 0
   537   00000C                     ___awdiv@dividend:
   538                           	callstack 0
   539   00000C                     ___lmul@multiplier:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0xB
   543   00000C                     	ds	1
   544   00000D                     ??_I2C_2_Master_Read:
   545   00000D                     I2C_2_Master_Write@data_byte:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0xC
   549   00000D                     	ds	1
   550   00000E                     ??_get16bitTMR0val:
   551   00000E                     color_writetoaddr@value:
   552                           	callstack 0
   553   00000E                     I2C_2_Master_Read@ack:
   554                           	callstack 0
   555   00000E                     ___wmul@multiplicand:
   556                           	callstack 0
   557   00000E                     ___awdiv@divisor:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0xD
   561   00000E                     	ds	1
   562   00000F                     color_writetoaddr@address:
   563                           	callstack 0
   564   00000F                     I2C_2_Master_Read@tmp:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0xE
   568   00000F                     	ds	1
   569   000010                     ??_color_clear_init_interrupts:
   570   000010                     ___awdiv@counter:
   571                           	callstack 0
   572   000010                     color_read@RGBC:
   573                           	callstack 0
   574   000010                     get16bitTMR0val@timer_low:
   575                           	callstack 0
   576   000010                     ___wmul@product:
   577                           	callstack 0
   578   000010                     ___lmul@multiplicand:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0xF
   582   000010                     	ds	1
   583   000011                     ___awdiv@sign:
   584                           	callstack 0
   585   000011                     color_clear_init_interrupts@high_threshold:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x10
   589   000011                     	ds	1
   590   000012                     ??_color_read:
   591   000012                     ?___lwdiv:
   592                           	callstack 0
   593   000012                     get16bitTMR0val@timer_high:
   594                           	callstack 0
   595   000012                     ___awdiv@quotient:
   596                           	callstack 0
   597   000012                     ___lwdiv@dividend:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x11
   601   000012                     	ds	1
   602   000013                     color_clear_init_interrupts@low_threshold:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x12
   606   000013                     	ds	1
   607   000014                     batteryLevel@batteryVoltage:
   608                           	callstack 0
   609   000014                     get16bitTMR0val@timer_val:
   610                           	callstack 0
   611   000014                     ___lwdiv@divisor:
   612                           	callstack 0
   613   000014                     ___lmul@product:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x13
   617   000014                     	ds	1
   618   000015                     ??_color_click_init:
   619   000015                     batteryLevel@batteryQuarter:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x14
   623   000015                     	ds	1
   624   000016                     ___lwdiv@quotient:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x15
   628   000016                     	ds	2
   629   000018                     ?___aldiv:
   630                           	callstack 0
   631   000018                     ___lwdiv@counter:
   632                           	callstack 0
   633   000018                     ___aldiv@dividend:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x17
   637   000018                     	ds	1
   638   000019                     setMotorPWM@m:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x18
   642   000019                     	ds	2
   643   00001B                     ??_setMotorPWM:
   644                           
   645                           ; 1 bytes @ 0x1A
   646   00001B                     	ds	1
   647   00001C                     ___aldiv@divisor:
   648                           	callstack 0
   649                           
   650                           ; 4 bytes @ 0x1B
   651   00001C                     	ds	1
   652   00001D                     setMotorPWM@posDuty:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x1C
   656   00001D                     	ds	1
   657   00001E                     setMotorPWM@negDuty:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x1D
   661   00001E                     	ds	1
   662   00001F                     stop@mL:
   663                           	callstack 0
   664   00001F                     turnLeft@mL:
   665                           	callstack 0
   666   00001F                     turnRight@mL:
   667                           	callstack 0
   668   00001F                     fullSpeedAhead@mL:
   669                           	callstack 0
   670   00001F                     reverseOneSquare@mL:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x1E
   674   00001F                     	ds	1
   675   000020                     ___aldiv@counter:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x1F
   679   000020                     	ds	1
   680   000021                     ___aldiv@sign:
   681                           	callstack 0
   682   000021                     stop@mR:
   683                           	callstack 0
   684   000021                     turnLeft@mR:
   685                           	callstack 0
   686   000021                     turnRight@mR:
   687                           	callstack 0
   688   000021                     fullSpeedAhead@mR:
   689                           	callstack 0
   690   000021                     reverseOneSquare@mR:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x20
   694   000021                     	ds	1
   695   000022                     ___aldiv@quotient:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0x21
   699   000022                     	ds	1
   700   000023                     stop@straightRamp:
   701                           	callstack 0
   702   000023                     turnLeft@turnSpeed:
   703                           	callstack 0
   704   000023                     turnRight@turnSpeed:
   705                           	callstack 0
   706   000023                     fullSpeedAhead@straightSpeed:
   707                           	callstack 0
   708   000023                     reverseOneSquare@straightSpeed:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x22
   712   000023                     	ds	1
   713   000024                     ??_stop:
   714   000024                     turnLeft@turnDuration:
   715                           	callstack 0
   716   000024                     turnRight@turnDuration:
   717                           	callstack 0
   718   000024                     fullSpeedAhead@straightRamp:
   719                           	callstack 0
   720   000024                     reverseOneSquare@reverseDuration:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x23
   724   000024                     	ds	1
   725   000025                     ??_fullSpeedAhead:
   726   000025                     turnLeft@turnRamp:
   727                           	callstack 0
   728   000025                     turnRight@turnRamp:
   729                           	callstack 0
   730   000025                     reverseOneSquare@straightRamp:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x24
   734   000025                     	ds	1
   735   000026                     ??_turnRight:
   736   000026                     ??_turnLeft:
   737   000026                     ??_reverseOneSquare:
   738   000026                     color_normalise@RGBC:
   739                           	callstack 0
   740                           
   741                           ; 8 bytes @ 0x25
   742   000026                     	ds	1
   743   000027                     stop@i:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x26
   747   000027                     	ds	1
   748   000028                     fullSpeedAhead@i:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x27
   752   000028                     	ds	1
   753   000029                     stop@cur_power:
   754                           	callstack 0
   755   000029                     turnLeft@i:
   756                           	callstack 0
   757   000029                     turnRight@i:
   758                           	callstack 0
   759   000029                     reverseOneSquare@i:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x28
   763   000029                     	ds	1
   764   00002A                     fullSpeedAhead@cur_power:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x29
   768   00002A                     	ds	1
   769   00002B                     turnLeft@cur_power:
   770                           	callstack 0
   771   00002B                     turnRight@cur_power:
   772                           	callstack 0
   773   00002B                     reverseOneSquare@cur_power:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x2A
   777   00002B                     	ds	2
   778   00002D                     returnHome@mL:
   779                           	callstack 0
   780   00002D                     lostReturnHome@mL:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x2C
   784   00002D                     	ds	1
   785   00002E                     color_normalise@RGBC_n:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x2D
   789   00002E                     	ds	1
   790   00002F                     returnHome@mR:
   791                           	callstack 0
   792   00002F                     lostReturnHome@mR:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x2E
   796   00002F                     	ds	1
   797   000030                     ??_color_normalise:
   798                           
   799                           ; 1 bytes @ 0x2F
   800   000030                     	ds	1
   801   000031                     returnHome@moveSequence:
   802                           	callstack 0
   803   000031                     lostReturnHome@moveSequence:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x30
   807   000031                     	ds	2
   808   000033                     returnHome@straightTime:
   809                           	callstack 0
   810   000033                     lostReturnHome@straightTime:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x32
   814   000033                     	ds	2
   815   000035                     returnHome@curMove:
   816                           	callstack 0
   817   000035                     lostReturnHome@curMove:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x34
   821   000035                     	ds	1
   822   000036                     returnHome@straightSpeed:
   823                           	callstack 0
   824   000036                     lostReturnHome@straightSpeed:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x35
   828   000036                     	ds	1
   829   000037                     returnHome@reverseDuration:
   830                           	callstack 0
   831   000037                     lostReturnHome@reverseDuration:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x36
   835   000037                     	ds	1
   836   000038                     returnHome@straightRamp:
   837                           	callstack 0
   838   000038                     lostReturnHome@straightRamp:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x37
   842   000038                     	ds	1
   843   000039                     returnHome@turnSpeed:
   844                           	callstack 0
   845   000039                     lostReturnHome@turnSpeed:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x38
   849   000039                     	ds	1
   850   00003A                     returnHome@turnDuration:
   851                           	callstack 0
   852   00003A                     lostReturnHome@turnDuration:
   853                           	callstack 0
   854                           
   855                           ; 1 bytes @ 0x39
   856   00003A                     	ds	1
   857   00003B                     returnHome@turnRamp:
   858                           	callstack 0
   859   00003B                     lostReturnHome@turnRamp:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0x3A
   863   00003B                     	ds	1
   864   00003C                     ??_lostReturnHome:
   865   00003C                     ??_returnHome:
   866                           
   867                           ; 1 bytes @ 0x3B
   868   00003C                     	ds	4
   869   000040                     returnHome@i:
   870                           	callstack 0
   871   000040                     lostReturnHome@i:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x3F
   875   000040                     	ds	1
   876   000041                     ??_move:
   877                           
   878                           ; 1 bytes @ 0x40
   879   000041                     	ds	2
   880   000043                     ??_main:
   881                           
   882                           ; 1 bytes @ 0x42
   883   000043                     	ds	2
   884                           
   885 ;;
   886 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   887 ;;
   888 ;; *************** function _main *****************
   889 ;; Defined at:
   890 ;;		line 28 in file "main.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  straightTime   82   40[BANK1 ] unsigned int [41]
   895 ;;  moveSequence   40  122[BANK1 ] unsigned char [40]
   896 ;;  buf            40    0[BANK1 ] unsigned char [40]
   897 ;;  motorL         10  200[BANK1 ] struct DC_motor
   898 ;;  motorR         10  190[BANK1 ] struct DC_motor
   899 ;;  RGBC            8  182[BANK1 ] struct RGBC_val
   900 ;;  RGBC_n          8  166[BANK1 ] struct RGBC_val
   901 ;;  testSequence    4  162[BANK1 ] unsigned char [4]
   902 ;;  PWMcycle        2    0        unsigned int 
   903 ;;  curMove         1  181[BANK1 ] unsigned char 
   904 ;;  straightRamp    1  180[BANK1 ] unsigned char 
   905 ;;  color           1  179[BANK1 ] unsigned char 
   906 ;;  straightSpee    1  178[BANK1 ] unsigned char 
   907 ;;  turnRamp        1  177[BANK1 ] unsigned char 
   908 ;;  turnDuration    1  176[BANK1 ] unsigned char 
   909 ;;  turnSpeed       1  175[BANK1 ] unsigned char 
   910 ;;  reverseDurat    1  174[BANK1 ] unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   921 ;;      Locals:         0       0     210       0       0       0       0       0       0       0       0       0       
      +0       0       0
   922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   923 ;;      Totals:         2       0     210       0       0       0       0       0       0       0       0       0       
      +0       0       0
   924 ;;Total ram usage:      212 bytes
   925 ;; Hardware stack levels required when called: 10
   926 ;; This function calls:
   927 ;;		_Buggy_init
   928 ;;		_Interrupts_init
   929 ;;		_Timer0_init
   930 ;;		_batteryLevel
   931 ;;		_color_click_init
   932 ;;		_color_normalise
   933 ;;		_color_read
   934 ;;		_fullSpeedAhead
   935 ;;		_get16bitTMR0val
   936 ;;		_initDCmotorsPWM
   937 ;;		_initUSART4
   938 ;;		_lostReturnHome
   939 ;;		_move
   940 ;;		_resetTimer
   941 ;;		_stop
   942 ;;		_white_Light
   943 ;; This function is called by:
   944 ;;		Startup code after reset
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text0
   949   0021B4                     __ptext0:
   950                           	callstack 0
   951   0021B4                     _main:
   952                           	callstack 21
   953   0021B4                     
   954                           ;main.c: 30:     char buf[40] = {0};
   955   0021B4  EE21  F000         	lfsr	2,main@buf
   956   0021B8  0E27               	movlw	39
   957   0021BA                     u2241:
   958   0021BA  6ADE               	clrf	postinc2,c
   959   0021BC  06E8               	decf	wreg,f,c
   960   0021BE  E2FD               	bc	u2241
   961   0021C0                     
   962                           ;main.c: 32:     unsigned char color = 0;
   963   0021C0  0E00               	movlw	0
   964   0021C2  0101               	movlb	1	; () banked
   965   0021C4  6FB3               	movwf	main@color& (0+255),b
   966                           
   967                           ;main.c: 33:     unsigned char moveSequence[40] = {0};
   968   0021C6  EE21  F07A         	lfsr	2,main@moveSequence
   969   0021CA  0E27               	movlw	39
   970   0021CC                     u2251:
   971   0021CC  6ADE               	clrf	postinc2,c
   972   0021CE  06E8               	decf	wreg,f,c
   973   0021D0  E2FD               	bc	u2251
   974                           
   975                           ;main.c: 34:     unsigned int straightTime[41] = {0};
   976   0021D2  EE21  F028         	lfsr	2,main@straightTime
   977   0021D6  0E51               	movlw	81
   978   0021D8                     u2261:
   979   0021D8  6ADE               	clrf	postinc2,c
   980   0021DA  06E8               	decf	wreg,f,c
   981   0021DC  E2FD               	bc	u2261
   982   0021DE                     
   983                           ; BSR set to: 1
   984                           ;main.c: 35:     char curMove = 0;
   985   0021DE  0E00               	movlw	0
   986   0021E0  6FB5               	movwf	main@curMove& (0+255),b
   987   0021E2                     
   988                           ; BSR set to: 1
   989                           ;main.c: 37:     unsigned char testSequence[4] = {1,3,9,8};
   990   0021E2  C1FC  F1A2         	movff	main@F14616,main@testSequence
   991   0021E6  C1FD  F1A3         	movff	main@F14616+1,main@testSequence+1
   992   0021EA  C1FE  F1A4         	movff	main@F14616+2,main@testSequence+2
   993   0021EE  C1FF  F1A5         	movff	main@F14616+3,main@testSequence+3
   994   0021F2                     
   995                           ; BSR set to: 1
   996                           ;main.c: 40:     struct RGBC_val RGBC, RGBC_n;;main.c: 41:     struct DC_motor motorL, m
      +                          otorR;;main.c: 44:     Buggy_init();
   997   0021F2  EC33  F01B         	call	_Buggy_init	;wreg free
   998   0021F6                     
   999                           ;main.c: 45:     color_click_init();
  1000   0021F6  EC17  F01B         	call	_color_click_init	;wreg free
  1001   0021FA                     
  1002                           ;main.c: 46:     Timer0_init();
  1003   0021FA  ECFA  F01B         	call	_Timer0_init	;wreg free
  1004   0021FE                     
  1005                           ;main.c: 47:     Interrupts_init();
  1006   0021FE  EC4E  F01C         	call	_Interrupts_init	;wreg free
  1007   002202                     
  1008                           ;main.c: 48:     initUSART4();
  1009   002202  EC1A  F01C         	call	_initUSART4	;wreg free
  1010   002206                     
  1011                           ;main.c: 49:     initDCmotorsPWM(PWMcycle);
  1012   002206  0E00               	movlw	0
  1013   002208  6E0D               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1014   00220A  0EC7               	movlw	199
  1015   00220C  6E0C               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1016   00220E  EC67  F019         	call	_initDCmotorsPWM	;wreg free
  1017   002212                     
  1018                           ;main.c: 51:     motorL.power=0;
  1019   002212  0E00               	movlw	0
  1020   002214  0101               	movlb	1	; () banked
  1021   002216  6FC8               	movwf	main@motorL& (0+255),b
  1022   002218                     
  1023                           ; BSR set to: 1
  1024                           ;main.c: 52:     motorL.direction=1;
  1025   002218  0E01               	movlw	1
  1026   00221A  6FC9               	movwf	(main@motorL+1)& (0+255),b
  1027   00221C                     
  1028                           ; BSR set to: 1
  1029                           ;main.c: 53:     motorL.brakemode=1;
  1030   00221C  0E01               	movlw	1
  1031   00221E  6FCA               	movwf	(main@motorL+2)& (0+255),b
  1032   002220                     
  1033                           ; BSR set to: 1
  1034                           ;main.c: 54:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1035   002220  0EAA               	movlw	170
  1036   002222  6FCD               	movwf	(main@motorL+5)& (0+255),b
  1037   002224  0E0F               	movlw	15
  1038   002226  6FCE               	movwf	(main@motorL+6)& (0+255),b
  1039   002228                     
  1040                           ; BSR set to: 1
  1041                           ;main.c: 55:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1042   002228  0EA6               	movlw	166
  1043   00222A  6FCF               	movwf	(main@motorL+7)& (0+255),b
  1044   00222C  0E0F               	movlw	15
  1045   00222E  6FD0               	movwf	(main@motorL+8)& (0+255),b
  1046   002230                     
  1047                           ; BSR set to: 1
  1048                           ;main.c: 56:     motorL.PWMperiod=PWMcycle;
  1049   002230  0E00               	movlw	0
  1050   002232  6FCC               	movwf	(main@motorL+4)& (0+255),b
  1051   002234  0EC7               	movlw	199
  1052   002236  6FCB               	movwf	(main@motorL+3)& (0+255),b
  1053   002238                     
  1054                           ; BSR set to: 1
  1055                           ;main.c: 57:     motorL.compensation=3;
  1056   002238  0E03               	movlw	3
  1057   00223A  6FD1               	movwf	(main@motorL+9)& (0+255),b
  1058   00223C                     
  1059                           ; BSR set to: 1
  1060                           ;main.c: 59:     motorR.power=0;
  1061   00223C  0E00               	movlw	0
  1062   00223E  6FBE               	movwf	main@motorR& (0+255),b
  1063   002240                     
  1064                           ; BSR set to: 1
  1065                           ;main.c: 60:     motorR.direction=1;
  1066   002240  0E01               	movlw	1
  1067   002242  6FBF               	movwf	(main@motorR+1)& (0+255),b
  1068   002244                     
  1069                           ; BSR set to: 1
  1070                           ;main.c: 61:     motorR.brakemode=1;
  1071   002244  0E01               	movlw	1
  1072   002246  6FC0               	movwf	(main@motorR+2)& (0+255),b
  1073   002248                     
  1074                           ; BSR set to: 1
  1075                           ;main.c: 62:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1076   002248  0E25               	movlw	37
  1077   00224A  6FC3               	movwf	(main@motorR+5)& (0+255),b
  1078   00224C  0E0F               	movlw	15
  1079   00224E  6FC4               	movwf	(main@motorR+6)& (0+255),b
  1080   002250                     
  1081                           ; BSR set to: 1
  1082                           ;main.c: 63:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1083   002250  0E21               	movlw	33
  1084   002252  6FC5               	movwf	(main@motorR+7)& (0+255),b
  1085   002254  0E0F               	movlw	15
  1086   002256  6FC6               	movwf	(main@motorR+8)& (0+255),b
  1087   002258                     
  1088                           ; BSR set to: 1
  1089                           ;main.c: 64:     motorR.PWMperiod=PWMcycle;
  1090   002258  0E00               	movlw	0
  1091   00225A  6FC2               	movwf	(main@motorR+4)& (0+255),b
  1092   00225C  0EC7               	movlw	199
  1093   00225E  6FC1               	movwf	(main@motorR+3)& (0+255),b
  1094   002260                     
  1095                           ; BSR set to: 1
  1096                           ;main.c: 65:     motorR.compensation=0;
  1097   002260  0E00               	movlw	0
  1098   002262  6FC7               	movwf	(main@motorR+9)& (0+255),b
  1099   002264                     
  1100                           ; BSR set to: 1
  1101                           ;main.c: 68:     char straightSpeed=25;
  1102   002264  0E19               	movlw	25
  1103   002266  6FB2               	movwf	main@straightSpeed& (0+255),b
  1104   002268                     
  1105                           ; BSR set to: 1
  1106                           ;main.c: 69:     unsigned char straightRamp=2;
  1107   002268  0E02               	movlw	2
  1108   00226A  6FB4               	movwf	main@straightRamp& (0+255),b
  1109   00226C                     
  1110                           ; BSR set to: 1
  1111                           ;main.c: 71:     unsigned char reverseDuration=10;
  1112   00226C  0E0A               	movlw	10
  1113   00226E  6FAE               	movwf	main@reverseDuration& (0+255),b
  1114   002270                     
  1115                           ; BSR set to: 1
  1116                           ;main.c: 73:     char turnSpeed=21;
  1117   002270  0E15               	movlw	21
  1118   002272  6FAF               	movwf	main@turnSpeed& (0+255),b
  1119   002274                     
  1120                           ; BSR set to: 1
  1121                           ;main.c: 74:     unsigned char turnDuration=10;
  1122   002274  0E0A               	movlw	10
  1123   002276  6FB0               	movwf	main@turnDuration& (0+255),b
  1124   002278                     
  1125                           ; BSR set to: 1
  1126                           ;main.c: 75:     unsigned char turnRamp=4;
  1127   002278  0E04               	movlw	4
  1128   00227A  6FB1               	movwf	main@turnRamp& (0+255),b
  1129   00227C                     
  1130                           ; BSR set to: 1
  1131                           ;main.c: 78:     batteryLevel();
  1132   00227C  ECCF  F01A         	call	_batteryLevel	;wreg free
  1133   002280                     l83:
  1134   002280  B48E               	btfsc	142,2,c	;volatile
  1135   002282  EF45  F011         	goto	u2271
  1136   002286  EF47  F011         	goto	u2270
  1137   00228A                     u2271:
  1138   00228A  EF40  F011         	goto	l83
  1139   00228E                     u2270:
  1140   00228E                     
  1141                           ;main.c: 82:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1142   00228E  9680               	bcf	128,3,c	;volatile
  1143   002290  9E7C               	bcf	124,7,c	;volatile
  1144                           
  1145                           ;main.c: 105:     LATHbits.LATH1=LATDbits.LATD3=1;
  1146   002292  867C               	bsf	124,3,c	;volatile
  1147   002294  8280               	bsf	128,1,c	;volatile
  1148   002296                     
  1149                           ;main.c: 106:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1150   002296  0E29               	movlw	41
  1151   002298  6E44               	movwf	(??_main+1)^0,c
  1152   00229A  0E96               	movlw	150
  1153   00229C  6E43               	movwf	??_main^0,c
  1154   00229E  0E7F               	movlw	127
  1155   0022A0                     u2357:
  1156   0022A0  2EE8               	decfsz	wreg,f,c
  1157   0022A2  D7FE               	bra	u2357
  1158   0022A4  2E43               	decfsz	??_main^0,f,c
  1159   0022A6  D7FC               	bra	u2357
  1160   0022A8  2E44               	decfsz	(??_main+1)^0,f,c
  1161   0022AA  D7FA               	bra	u2357
  1162   0022AC  0000               	nop	
  1163   0022AE                     
  1164                           ;main.c: 112:     white_Light(1);
  1165   0022AE  0E01               	movlw	1
  1166   0022B0  ECD8  F01B         	call	_white_Light
  1167   0022B4                     
  1168                           ;main.c: 113:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1169   0022B4  0E52               	movlw	82
  1170   0022B6  6E44               	movwf	(??_main+1)^0,c
  1171   0022B8  0E2B               	movlw	43
  1172   0022BA  6E43               	movwf	??_main^0,c
  1173   0022BC  0E00               	movlw	0
  1174   0022BE                     u2367:
  1175   0022BE  2EE8               	decfsz	wreg,f,c
  1176   0022C0  D7FE               	bra	u2367
  1177   0022C2  2E43               	decfsz	??_main^0,f,c
  1178   0022C4  D7FC               	bra	u2367
  1179   0022C6  2E44               	decfsz	(??_main+1)^0,f,c
  1180   0022C8  D7FA               	bra	u2367
  1181   0022CA  D000               	nop2	
  1182   0022CC                     
  1183                           ;main.c: 116:     color_read(&RGBC);
  1184   0022CC  0EB6               	movlw	low main@RGBC
  1185   0022CE  6E10               	movwf	color_read@RGBC^0,c
  1186   0022D0  0E01               	movlw	high main@RGBC
  1187   0022D2  6E11               	movwf	(color_read@RGBC+1)^0,c
  1188   0022D4  EC65  F012         	call	_color_read	;wreg free
  1189   0022D8                     
  1190                           ;main.c: 117:     ambient=RGBC.C;
  1191   0022D8  C1BC  F049         	movff	main@RGBC+6,_ambient
  1192   0022DC  C1BD  F04A         	movff	main@RGBC+7,_ambient+1
  1193   0022E0                     
  1194                           ;main.c: 118:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1195   0022E0  0E29               	movlw	41
  1196   0022E2  6E44               	movwf	(??_main+1)^0,c
  1197   0022E4  0E96               	movlw	150
  1198   0022E6  6E43               	movwf	??_main^0,c
  1199   0022E8  0E7F               	movlw	127
  1200   0022EA                     u2377:
  1201   0022EA  2EE8               	decfsz	wreg,f,c
  1202   0022EC  D7FE               	bra	u2377
  1203   0022EE  2E43               	decfsz	??_main^0,f,c
  1204   0022F0  D7FC               	bra	u2377
  1205   0022F2  2E44               	decfsz	(??_main+1)^0,f,c
  1206   0022F4  D7FA               	bra	u2377
  1207   0022F6  0000               	nop	
  1208   0022F8                     
  1209                           ;main.c: 120:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1210   0022F8  0EC8               	movlw	low main@motorL
  1211   0022FA  6E1F               	movwf	fullSpeedAhead@mL^0,c
  1212   0022FC  0E01               	movlw	high main@motorL
  1213   0022FE  6E20               	movwf	(fullSpeedAhead@mL+1)^0,c
  1214   002300  0EBE               	movlw	low main@motorR
  1215   002302  6E21               	movwf	fullSpeedAhead@mR^0,c
  1216   002304  0E01               	movlw	high main@motorR
  1217   002306  6E22               	movwf	(fullSpeedAhead@mR+1)^0,c
  1218   002308  0E19               	movlw	25
  1219   00230A  6E23               	movwf	fullSpeedAhead@straightSpeed^0,c
  1220   00230C  0E02               	movlw	2
  1221   00230E  6E24               	movwf	fullSpeedAhead@straightRamp^0,c
  1222   002310  EC92  F018         	call	_fullSpeedAhead	;wreg free
  1223   002314                     
  1224                           ;main.c: 121:     resetTimer();
  1225   002314  EC65  F01C         	call	_resetTimer	;wreg free
  1226   002318                     
  1227                           ;main.c: 123:     wall=0;
  1228   002318  0E00               	movlw	0
  1229   00231A  0101               	movlb	1	; () banked
  1230   00231C  6FFB               	movwf	_wall& (0+255),b
  1231   00231E                     
  1232                           ; BSR set to: 1
  1233                           ;main.c: 124:     lost=0;
  1234   00231E  0E00               	movlw	0
  1235   002320  6FFA               	movwf	_lost& (0+255),b
  1236   002322                     l3721:
  1237                           
  1238                           ; BSR set to: 1
  1239                           ;main.c: 127:         if (wall == 1) {
  1240   002322  05FB               	decf	_wall& (0+255),w,b
  1241   002324  A4D8               	btfss	status,2,c
  1242   002326  EF97  F011         	goto	u2281
  1243   00232A  EF99  F011         	goto	u2280
  1244   00232E                     u2281:
  1245   00232E  EF14  F012         	goto	l3745
  1246   002332                     u2280:
  1247   002332                     
  1248                           ; BSR set to: 1
  1249                           ;main.c: 128:             PIE0bits.INT0IE=TMR0IE=0;
  1250   002332  010E               	movlb	14	; () banked
  1251   002334  9B29               	bcf	41,5,b	;volatile
  1252   002336  AB29               	btfss	41,5,b	;volatile
  1253   002338  D002               	bra	u2295
  1254   00233A  8129               	bsf	41,0,b	;volatile
  1255   00233C  D002               	bra	u2297
  1256   00233E                     u2295:
  1257   00233E  010E               	movlb	14	; () banked
  1258   002340  9129               	bcf	41,0,b	;volatile
  1259   002342                     u2297:
  1260   002342                     
  1261                           ; BSR set to: 14
  1262                           ;main.c: 129:             straightTime[curMove] = get16bitTMR0val();
  1263   002342  EC63  F01B         	call	_get16bitTMR0val	;wreg free
  1264   002346  0101               	movlb	1	; () banked
  1265   002348  51B5               	movf	main@curMove& (0+255),w,b
  1266   00234A  0D02               	mullw	2
  1267   00234C  0E28               	movlw	low main@straightTime
  1268   00234E  24F3               	addwf	243,w,c
  1269   002350  6ED9               	movwf	fsr2l,c
  1270   002352  0E01               	movlw	high main@straightTime
  1271   002354  20F4               	addwfc	prodh,w,c
  1272   002356  6EDA               	movwf	fsr2h,c
  1273   002358  C00C  FFDE         	movff	?_get16bitTMR0val,postinc2
  1274   00235C  C00D  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1275                           
  1276                           ;main.c: 132:             stop(&motorL, &motorR, straightRamp);
  1277   002360  0EC8               	movlw	low main@motorL
  1278   002362  6E1F               	movwf	stop@mL^0,c
  1279   002364  0E01               	movlw	high main@motorL
  1280   002366  6E20               	movwf	(stop@mL+1)^0,c
  1281   002368  0EBE               	movlw	low main@motorR
  1282   00236A  6E21               	movwf	stop@mR^0,c
  1283   00236C  0E01               	movlw	high main@motorR
  1284   00236E  6E22               	movwf	(stop@mR+1)^0,c
  1285   002370  C1B4  F023         	movff	main@straightRamp,stop@straightRamp
  1286   002374  EC0D  F018         	call	_stop	;wreg free
  1287   002378                     
  1288                           ;main.c: 133:             color_read(&RGBC);
  1289   002378  0EB6               	movlw	low main@RGBC
  1290   00237A  6E10               	movwf	color_read@RGBC^0,c
  1291   00237C  0E01               	movlw	high main@RGBC
  1292   00237E  6E11               	movwf	(color_read@RGBC+1)^0,c
  1293   002380  EC65  F012         	call	_color_read	;wreg free
  1294   002384                     
  1295                           ;main.c: 134:             color_normalise(RGBC, &RGBC_n);
  1296   002384  EE21  F0B6         	lfsr	2,main@RGBC
  1297   002388  EE00  F026         	lfsr	0,color_normalise@RGBC
  1298   00238C  0E07               	movlw	7
  1299   00238E                     u2301:
  1300   00238E  CFDB FFEB          	movff	plusw2,plusw0
  1301   002392  06E8               	decf	wreg,f,c
  1302   002394  E2FC               	bc	u2301
  1303   002396  0EA6               	movlw	low main@RGBC_n
  1304   002398  6E2E               	movwf	color_normalise@RGBC_n^0,c
  1305   00239A  0E01               	movlw	high main@RGBC_n
  1306   00239C  6E2F               	movwf	(color_normalise@RGBC_n+1)^0,c
  1307   00239E  ECE2  F016         	call	_color_normalise	;wreg free
  1308   0023A2                     
  1309                           ;main.c: 136:             color = testSequence[curMove];
  1310   0023A2  0EA2               	movlw	low main@testSequence
  1311   0023A4  0101               	movlb	1	; () banked
  1312   0023A6  25B5               	addwf	main@curMove& (0+255),w,b
  1313   0023A8  6ED9               	movwf	fsr2l,c
  1314   0023AA  6ADA               	clrf	fsr2h,c
  1315   0023AC  0E01               	movlw	high main@testSequence
  1316   0023AE  22DA               	addwfc	fsr2h,f,c
  1317   0023B0  50DF               	movf	indf2,w,c
  1318   0023B2  6FB3               	movwf	main@color& (0+255),b
  1319   0023B4                     
  1320                           ; BSR set to: 1
  1321                           ;main.c: 137:             moveSequence[curMove] = color;
  1322   0023B4  0E7A               	movlw	low main@moveSequence
  1323   0023B6  25B5               	addwf	main@curMove& (0+255),w,b
  1324   0023B8  6ED9               	movwf	fsr2l,c
  1325   0023BA  6ADA               	clrf	fsr2h,c
  1326   0023BC  0E01               	movlw	high main@moveSequence
  1327   0023BE  22DA               	addwfc	fsr2h,f,c
  1328   0023C0  C1B3  FFDF         	movff	main@color,indf2
  1329   0023C4                     
  1330                           ; BSR set to: 1
  1331                           ;main.c: 140:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1332   0023C4  0EC8               	movlw	low main@motorL
  1333   0023C6  0100               	movlb	0	; () banked
  1334   0023C8  6FD8               	movwf	move@mL& (0+255),b
  1335   0023CA  0E01               	movlw	high main@motorL
  1336   0023CC  6FD9               	movwf	(move@mL+1)& (0+255),b
  1337   0023CE  0EBE               	movlw	low main@motorR
  1338   0023D0  6FDA               	movwf	move@mR& (0+255),b
  1339   0023D2  0E01               	movlw	high main@motorR
  1340   0023D4  6FDB               	movwf	(move@mR+1)& (0+255),b
  1341   0023D6  C1B3  F0DC         	movff	main@color,move@color
  1342   0023DA  0E7A               	movlw	low main@moveSequence
  1343   0023DC  6FDD               	movwf	move@moveSequence& (0+255),b
  1344   0023DE  0E01               	movlw	high main@moveSequence
  1345   0023E0  6FDE               	movwf	(move@moveSequence+1)& (0+255),b
  1346   0023E2  0E28               	movlw	low main@straightTime
  1347   0023E4  6FDF               	movwf	move@straightTime& (0+255),b
  1348   0023E6  0E01               	movlw	high main@straightTime
  1349   0023E8  6FE0               	movwf	(move@straightTime+1)& (0+255),b
  1350   0023EA  C1B5  F0E1         	movff	main@curMove,move@curMove
  1351   0023EE  C1B2  F0E2         	movff	main@straightSpeed,move@straightSpeed
  1352   0023F2  C1AE  F0E3         	movff	main@reverseDuration,move@reverseDuration
  1353   0023F6  C1B4  F0E4         	movff	main@straightRamp,move@straightRamp
  1354   0023FA  C1AF  F0E5         	movff	main@turnSpeed,move@turnSpeed
  1355   0023FE  C1B0  F0E6         	movff	main@turnDuration,move@turnDuration
  1356   002402  C1B1  F0E7         	movff	main@turnRamp,move@turnRamp
  1357   002406  ECAF  F00D         	call	_move	;wreg free
  1358   00240A                     
  1359                           ;main.c: 142:             curMove++;
  1360   00240A  0101               	movlb	1	; () banked
  1361   00240C  2BB5               	incf	main@curMove& (0+255),f,b
  1362   00240E                     
  1363                           ; BSR set to: 1
  1364                           ;main.c: 143:             resetTimer();
  1365   00240E  EC65  F01C         	call	_resetTimer	;wreg free
  1366   002412                     
  1367                           ;main.c: 144:             PIE0bits.INT0IE=TMR0IE=1;
  1368   002412  010E               	movlb	14	; () banked
  1369   002414  8B29               	bsf	41,5,b	;volatile
  1370   002416  AB29               	btfss	41,5,b	;volatile
  1371   002418  D002               	bra	u2315
  1372   00241A  8129               	bsf	41,0,b	;volatile
  1373   00241C  D002               	bra	u2317
  1374   00241E                     u2315:
  1375   00241E  010E               	movlb	14	; () banked
  1376   002420  9129               	bcf	41,0,b	;volatile
  1377   002422                     u2317:
  1378   002422                     
  1379                           ; BSR set to: 14
  1380                           ;main.c: 145:             wall = 0;
  1381   002422  0E00               	movlw	0
  1382   002424  0101               	movlb	1	; () banked
  1383   002426  6FFB               	movwf	_wall& (0+255),b
  1384   002428                     l3745:
  1385                           
  1386                           ; BSR set to: 1
  1387                           ;main.c: 157:         if (lost == 1) {
  1388   002428  05FA               	decf	_lost& (0+255),w,b
  1389   00242A  A4D8               	btfss	status,2,c
  1390   00242C  EF1A  F012         	goto	u2321
  1391   002430  EF1C  F012         	goto	u2320
  1392   002434                     u2321:
  1393   002434  EF51  F012         	goto	l3755
  1394   002438                     u2320:
  1395   002438                     
  1396                           ; BSR set to: 1
  1397                           ;main.c: 158:             PIE0bits.INT0IE=0;
  1398   002438  010E               	movlb	14	; () banked
  1399   00243A  9129               	bcf	41,0,b	;volatile
  1400   00243C                     
  1401                           ; BSR set to: 14
  1402                           ;main.c: 159:             stop(&motorL, &motorR, straightRamp);
  1403   00243C  0EC8               	movlw	low main@motorL
  1404   00243E  6E1F               	movwf	stop@mL^0,c
  1405   002440  0E01               	movlw	high main@motorL
  1406   002442  6E20               	movwf	(stop@mL+1)^0,c
  1407   002444  0EBE               	movlw	low main@motorR
  1408   002446  6E21               	movwf	stop@mR^0,c
  1409   002448  0E01               	movlw	high main@motorR
  1410   00244A  6E22               	movwf	(stop@mR+1)^0,c
  1411   00244C  C1B4  F023         	movff	main@straightRamp,stop@straightRamp
  1412   002450  EC0D  F018         	call	_stop	;wreg free
  1413                           
  1414                           ;main.c: 160:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1415   002454  0EC8               	movlw	low main@motorL
  1416   002456  6E2D               	movwf	lostReturnHome@mL^0,c
  1417   002458  0E01               	movlw	high main@motorL
  1418   00245A  6E2E               	movwf	(lostReturnHome@mL+1)^0,c
  1419   00245C  0EBE               	movlw	low main@motorR
  1420   00245E  6E2F               	movwf	lostReturnHome@mR^0,c
  1421   002460  0E01               	movlw	high main@motorR
  1422   002462  6E30               	movwf	(lostReturnHome@mR+1)^0,c
  1423   002464  0E7A               	movlw	low main@moveSequence
  1424   002466  6E31               	movwf	lostReturnHome@moveSequence^0,c
  1425   002468  0E01               	movlw	high main@moveSequence
  1426   00246A  6E32               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1427   00246C  0E28               	movlw	low main@straightTime
  1428   00246E  6E33               	movwf	lostReturnHome@straightTime^0,c
  1429   002470  0E01               	movlw	high main@straightTime
  1430   002472  6E34               	movwf	(lostReturnHome@straightTime+1)^0,c
  1431   002474  C1B5  F035         	movff	main@curMove,lostReturnHome@curMove
  1432   002478  C1B2  F036         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1433   00247C  C1AE  F037         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1434   002480  C1B4  F038         	movff	main@straightRamp,lostReturnHome@straightRamp
  1435   002484  C1AF  F039         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1436   002488  C1B0  F03A         	movff	main@turnDuration,lostReturnHome@turnDuration
  1437   00248C  C1B1  F03B         	movff	main@turnRamp,lostReturnHome@turnRamp
  1438   002490  EC5F  F00A         	call	_lostReturnHome	;wreg free
  1439   002494                     
  1440                           ;main.c: 161:             PIE0bits.INT0IE=1;
  1441   002494  010E               	movlb	14	; () banked
  1442   002496  8129               	bsf	41,0,b	;volatile
  1443   002498                     
  1444                           ; BSR set to: 14
  1445                           ;main.c: 162:             lost = 0;
  1446   002498  0E00               	movlw	0
  1447   00249A  0101               	movlb	1	; () banked
  1448   00249C  6FFA               	movwf	_lost& (0+255),b
  1449                           
  1450                           ;main.c: 163:             break;
  1451   00249E  EF63  F012         	goto	l94
  1452   0024A2                     l3755:
  1453                           
  1454                           ; BSR set to: 1
  1455                           ;main.c: 166:         if (color == 8 || color == 9) {break;}
  1456   0024A2  0E08               	movlw	8
  1457   0024A4  19B3               	xorwf	main@color& (0+255),w,b
  1458   0024A6  B4D8               	btfsc	status,2,c
  1459   0024A8  EF58  F012         	goto	u2331
  1460   0024AC  EF5A  F012         	goto	u2330
  1461   0024B0                     u2331:
  1462   0024B0  EF63  F012         	goto	l94
  1463   0024B4                     u2330:
  1464   0024B4                     
  1465                           ; BSR set to: 1
  1466   0024B4  0E09               	movlw	9
  1467   0024B6  19B3               	xorwf	main@color& (0+255),w,b
  1468   0024B8  A4D8               	btfss	status,2,c
  1469   0024BA  EF61  F012         	goto	u2341
  1470   0024BE  EF63  F012         	goto	u2340
  1471   0024C2                     u2341:
  1472   0024C2  EF91  F011         	goto	l3721
  1473   0024C6                     u2340:
  1474   0024C6                     l94:
  1475                           
  1476                           ; BSR set to: 1
  1477   0024C6  EF4C  F000         	goto	start
  1478   0024CA                     __end_of_main:
  1479                           	callstack 0
  1480                           
  1481 ;; *************** function _white_Light *****************
  1482 ;; Defined at:
  1483 ;;		line 57 in file "color.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  state           1    wreg     unsigned char 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  state           1   11[COMRAM] unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1500 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1501 ;;Total ram usage:        1 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; Hardware stack levels required when called: 5
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text1
  1512   0037B0                     __ptext1:
  1513                           	callstack 0
  1514   0037B0                     _white_Light:
  1515                           	callstack 25
  1516                           
  1517                           ; BSR set to: 1
  1518                           ;incstack = 0
  1519                           ;white_Light@state stored from wreg
  1520   0037B0  6E0C               	movwf	white_Light@state^0,c
  1521   0037B2                     
  1522                           ;color.c: 57: void white_Light(char state);color.c: 58: {;color.c: 59:     if (state){
  1523   0037B2  500C               	movf	white_Light@state^0,w,c
  1524   0037B4  B4D8               	btfsc	status,2,c
  1525   0037B6  EFDF  F01B         	goto	u1671
  1526   0037BA  EFE1  F01B         	goto	u1670
  1527   0037BE                     u1671:
  1528   0037BE  EFE6  F01B         	goto	l132
  1529   0037C2                     u1670:
  1530   0037C2                     
  1531                           ;color.c: 60:         LATGbits.LATG0 = 1;
  1532   0037C2  807F               	bsf	127,0,c	;volatile
  1533                           
  1534                           ;color.c: 61:         LATEbits.LATE7 = 1;
  1535   0037C4  8E7D               	bsf	125,7,c	;volatile
  1536                           
  1537                           ;color.c: 62:         LATAbits.LATA3 = 1;
  1538   0037C6  8679               	bsf	121,3,c	;volatile
  1539                           
  1540                           ;color.c: 63:     }
  1541   0037C8  EFE9  F01B         	goto	l134
  1542   0037CC                     l132:
  1543                           
  1544                           ;color.c: 65:         LATGbits.LATG0 = 0;
  1545   0037CC  907F               	bcf	127,0,c	;volatile
  1546                           
  1547                           ;color.c: 66:         LATEbits.LATE7 = 0;
  1548   0037CE  9E7D               	bcf	125,7,c	;volatile
  1549                           
  1550                           ;color.c: 67:         LATAbits.LATA3 = 0;
  1551   0037D0  9679               	bcf	121,3,c	;volatile
  1552   0037D2                     l134:
  1553   0037D2  0012               	return		;funcret
  1554   0037D4                     __end_of_white_Light:
  1555                           	callstack 0
  1556                           
  1557 ;; *************** function _move *****************
  1558 ;; Defined at:
  1559 ;;		line 90 in file "dc_motor.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  1562 ;;		 -> main@motorL(10), 
  1563 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  1564 ;;		 -> main@motorR(10), 
  1565 ;;  color           1    4[BANK0 ] unsigned char 
  1566 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  1567 ;;		 -> main@moveSequence(40), 
  1568 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  1569 ;;		 -> main@straightTime(82), 
  1570 ;;  curMove         1    9[BANK0 ] unsigned char 
  1571 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  1572 ;;  reverseDurat    1   11[BANK0 ] unsigned char 
  1573 ;;  straightRamp    1   12[BANK0 ] unsigned char 
  1574 ;;  turnSpeed       1   13[BANK0 ] unsigned char 
  1575 ;;  turnDuration    1   14[BANK0 ] unsigned char 
  1576 ;;  turnRamp        1   15[BANK0 ] unsigned char 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1588 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1590 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1591 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1592 ;;Total ram usage:       18 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 9
  1595 ;; This function calls:
  1596 ;;		_fullSpeedAhead
  1597 ;;		_returnHome
  1598 ;;		_reverseOneSquare
  1599 ;;		_turnLeft
  1600 ;;		_turnRight
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text2
  1607   001B5E                     __ptext2:
  1608                           	callstack 0
  1609   001B5E                     _move:
  1610                           	callstack 21
  1611   001B5E                     
  1612                           ;dc_motor.c: 90: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reve
      +                          rseDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, uns
      +                          igned char turnRamp);dc_motor.c: 91: {;dc_motor.c: 92:     if (color == 1) {
  1613   001B5E  0100               	movlb	0	; () banked
  1614   001B60  05DC               	decf	move@color& (0+255),w,b
  1615   001B62  A4D8               	btfss	status,2,c
  1616   001B64  EFB6  F00D         	goto	u2161
  1617   001B68  EFB8  F00D         	goto	u2160
  1618   001B6C                     u2161:
  1619   001B6C  EF00  F00E         	goto	l3557
  1620   001B70                     u2160:
  1621   001B70                     
  1622                           ; BSR set to: 0
  1623                           ;dc_motor.c: 93:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1624   001B70  C0D8  F01F         	movff	move@mL,turnRight@mL
  1625   001B74  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  1626   001B78  C0DA  F021         	movff	move@mR,turnRight@mR
  1627   001B7C  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  1628   001B80  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1629   001B84  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  1630   001B88  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  1631   001B8C  EC52  F014         	call	_turnRight	;wreg free
  1632   001B90                     
  1633                           ;dc_motor.c: 94:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1634   001B90  0E05               	movlw	5
  1635   001B92  6E42               	movwf	(??_move+1)^0,c
  1636   001B94  0E0F               	movlw	15
  1637   001B96  6E41               	movwf	??_move^0,c
  1638   001B98  0EF1               	movlw	241
  1639   001B9A                     u2387:
  1640   001B9A  2EE8               	decfsz	wreg,f,c
  1641   001B9C  D7FE               	bra	u2387
  1642   001B9E  2E41               	decfsz	??_move^0,f,c
  1643   001BA0  D7FC               	bra	u2387
  1644   001BA2  2E42               	decfsz	(??_move+1)^0,f,c
  1645   001BA4  D7FA               	bra	u2387
  1646   001BA6  0000               	nop	
  1647   001BA8                     
  1648                           ;dc_motor.c: 95:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1649   001BA8  C0D8  F01F         	movff	move@mL,turnRight@mL
  1650   001BAC  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  1651   001BB0  C0DA  F021         	movff	move@mR,turnRight@mR
  1652   001BB4  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  1653   001BB8  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1654   001BBC  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  1655   001BC0  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  1656   001BC4  EC52  F014         	call	_turnRight	;wreg free
  1657                           
  1658                           ;dc_motor.c: 96:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1659   001BC8  0E05               	movlw	5
  1660   001BCA  6E42               	movwf	(??_move+1)^0,c
  1661   001BCC  0E0F               	movlw	15
  1662   001BCE  6E41               	movwf	??_move^0,c
  1663   001BD0  0EF1               	movlw	241
  1664   001BD2                     u2397:
  1665   001BD2  2EE8               	decfsz	wreg,f,c
  1666   001BD4  D7FE               	bra	u2397
  1667   001BD6  2E41               	decfsz	??_move^0,f,c
  1668   001BD8  D7FC               	bra	u2397
  1669   001BDA  2E42               	decfsz	(??_move+1)^0,f,c
  1670   001BDC  D7FA               	bra	u2397
  1671   001BDE  0000               	nop	
  1672   001BE0                     
  1673                           ;dc_motor.c: 97:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1674   001BE0  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  1675   001BE4  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1676   001BE8  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  1677   001BEC  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1678   001BF0  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1679   001BF4  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1680   001BF8  EC92  F018         	call	_fullSpeedAhead	;wreg free
  1681                           
  1682                           ;dc_motor.c: 98:     }
  1683   001BFC  EFD9  F010         	goto	l489
  1684   001C00                     l3557:
  1685                           
  1686                           ; BSR set to: 0
  1687   001C00  0E02               	movlw	2
  1688   001C02  19DC               	xorwf	move@color& (0+255),w,b
  1689   001C04  A4D8               	btfss	status,2,c
  1690   001C06  EF07  F00E         	goto	u2171
  1691   001C0A  EF09  F00E         	goto	u2170
  1692   001C0E                     u2171:
  1693   001C0E  EF51  F00E         	goto	l3567
  1694   001C12                     u2170:
  1695   001C12                     
  1696                           ; BSR set to: 0
  1697                           ;dc_motor.c: 101:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1698   001C12  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1699   001C16  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1700   001C1A  C0DA  F021         	movff	move@mR,turnLeft@mR
  1701   001C1E  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1702   001C22  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1703   001C26  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1704   001C2A  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1705   001C2E  EC3F  F015         	call	_turnLeft	;wreg free
  1706   001C32                     
  1707                           ;dc_motor.c: 102:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1708   001C32  0E05               	movlw	5
  1709   001C34  6E42               	movwf	(??_move+1)^0,c
  1710   001C36  0E0F               	movlw	15
  1711   001C38  6E41               	movwf	??_move^0,c
  1712   001C3A  0EF1               	movlw	241
  1713   001C3C                     u2407:
  1714   001C3C  2EE8               	decfsz	wreg,f,c
  1715   001C3E  D7FE               	bra	u2407
  1716   001C40  2E41               	decfsz	??_move^0,f,c
  1717   001C42  D7FC               	bra	u2407
  1718   001C44  2E42               	decfsz	(??_move+1)^0,f,c
  1719   001C46  D7FA               	bra	u2407
  1720   001C48  0000               	nop	
  1721   001C4A                     
  1722                           ;dc_motor.c: 103:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1723   001C4A  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1724   001C4E  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1725   001C52  C0DA  F021         	movff	move@mR,turnLeft@mR
  1726   001C56  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1727   001C5A  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1728   001C5E  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1729   001C62  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1730   001C66  EC3F  F015         	call	_turnLeft	;wreg free
  1731                           
  1732                           ;dc_motor.c: 104:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1733   001C6A  0E05               	movlw	5
  1734   001C6C  6E42               	movwf	(??_move+1)^0,c
  1735   001C6E  0E0F               	movlw	15
  1736   001C70  6E41               	movwf	??_move^0,c
  1737   001C72  0EF1               	movlw	241
  1738   001C74                     u2417:
  1739   001C74  2EE8               	decfsz	wreg,f,c
  1740   001C76  D7FE               	bra	u2417
  1741   001C78  2E41               	decfsz	??_move^0,f,c
  1742   001C7A  D7FC               	bra	u2417
  1743   001C7C  2E42               	decfsz	(??_move+1)^0,f,c
  1744   001C7E  D7FA               	bra	u2417
  1745   001C80  0000               	nop	
  1746   001C82                     
  1747                           ;dc_motor.c: 105:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1748   001C82  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  1749   001C86  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1750   001C8A  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  1751   001C8E  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1752   001C92  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1753   001C96  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1754   001C9A  EC92  F018         	call	_fullSpeedAhead	;wreg free
  1755                           
  1756                           ;dc_motor.c: 106:     }
  1757   001C9E  EFD9  F010         	goto	l489
  1758   001CA2                     l3567:
  1759                           
  1760                           ; BSR set to: 0
  1761   001CA2  0E03               	movlw	3
  1762   001CA4  19DC               	xorwf	move@color& (0+255),w,b
  1763   001CA6  A4D8               	btfss	status,2,c
  1764   001CA8  EF58  F00E         	goto	u2181
  1765   001CAC  EF5A  F00E         	goto	u2180
  1766   001CB0                     u2181:
  1767   001CB0  EFDA  F00E         	goto	l3583
  1768   001CB4                     u2180:
  1769   001CB4                     
  1770                           ; BSR set to: 0
  1771                           ;dc_motor.c: 109:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1772   001CB4  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1773   001CB8  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1774   001CBC  C0DA  F021         	movff	move@mR,turnLeft@mR
  1775   001CC0  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1776   001CC4  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1777   001CC8  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1778   001CCC  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1779   001CD0  EC3F  F015         	call	_turnLeft	;wreg free
  1780   001CD4                     
  1781                           ;dc_motor.c: 110:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1782   001CD4  0E05               	movlw	5
  1783   001CD6  6E42               	movwf	(??_move+1)^0,c
  1784   001CD8  0E0F               	movlw	15
  1785   001CDA  6E41               	movwf	??_move^0,c
  1786   001CDC  0EF1               	movlw	241
  1787   001CDE                     u2427:
  1788   001CDE  2EE8               	decfsz	wreg,f,c
  1789   001CE0  D7FE               	bra	u2427
  1790   001CE2  2E41               	decfsz	??_move^0,f,c
  1791   001CE4  D7FC               	bra	u2427
  1792   001CE6  2E42               	decfsz	(??_move+1)^0,f,c
  1793   001CE8  D7FA               	bra	u2427
  1794   001CEA  0000               	nop	
  1795   001CEC                     
  1796                           ;dc_motor.c: 111:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1797   001CEC  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1798   001CF0  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1799   001CF4  C0DA  F021         	movff	move@mR,turnLeft@mR
  1800   001CF8  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1801   001CFC  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1802   001D00  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1803   001D04  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1804   001D08  EC3F  F015         	call	_turnLeft	;wreg free
  1805                           
  1806                           ;dc_motor.c: 112:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1807   001D0C  0E05               	movlw	5
  1808   001D0E  6E42               	movwf	(??_move+1)^0,c
  1809   001D10  0E0F               	movlw	15
  1810   001D12  6E41               	movwf	??_move^0,c
  1811   001D14  0EF1               	movlw	241
  1812   001D16                     u2437:
  1813   001D16  2EE8               	decfsz	wreg,f,c
  1814   001D18  D7FE               	bra	u2437
  1815   001D1A  2E41               	decfsz	??_move^0,f,c
  1816   001D1C  D7FC               	bra	u2437
  1817   001D1E  2E42               	decfsz	(??_move+1)^0,f,c
  1818   001D20  D7FA               	bra	u2437
  1819   001D22  0000               	nop	
  1820   001D24                     
  1821                           ;dc_motor.c: 113:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1822   001D24  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1823   001D28  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1824   001D2C  C0DA  F021         	movff	move@mR,turnLeft@mR
  1825   001D30  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1826   001D34  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1827   001D38  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1828   001D3C  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1829   001D40  EC3F  F015         	call	_turnLeft	;wreg free
  1830   001D44                     
  1831                           ;dc_motor.c: 114:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1832   001D44  0E05               	movlw	5
  1833   001D46  6E42               	movwf	(??_move+1)^0,c
  1834   001D48  0E0F               	movlw	15
  1835   001D4A  6E41               	movwf	??_move^0,c
  1836   001D4C  0EF1               	movlw	241
  1837   001D4E                     u2447:
  1838   001D4E  2EE8               	decfsz	wreg,f,c
  1839   001D50  D7FE               	bra	u2447
  1840   001D52  2E41               	decfsz	??_move^0,f,c
  1841   001D54  D7FC               	bra	u2447
  1842   001D56  2E42               	decfsz	(??_move+1)^0,f,c
  1843   001D58  D7FA               	bra	u2447
  1844   001D5A  0000               	nop	
  1845                           
  1846                           ;dc_motor.c: 115:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1847   001D5C  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1848   001D60  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1849   001D64  C0DA  F021         	movff	move@mR,turnLeft@mR
  1850   001D68  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1851   001D6C  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1852   001D70  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1853   001D74  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1854   001D78  EC3F  F015         	call	_turnLeft	;wreg free
  1855   001D7C                     
  1856                           ;dc_motor.c: 116:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1857   001D7C  0E05               	movlw	5
  1858   001D7E  6E42               	movwf	(??_move+1)^0,c
  1859   001D80  0E0F               	movlw	15
  1860   001D82  6E41               	movwf	??_move^0,c
  1861   001D84  0EF1               	movlw	241
  1862   001D86                     u2457:
  1863   001D86  2EE8               	decfsz	wreg,f,c
  1864   001D88  D7FE               	bra	u2457
  1865   001D8A  2E41               	decfsz	??_move^0,f,c
  1866   001D8C  D7FC               	bra	u2457
  1867   001D8E  2E42               	decfsz	(??_move+1)^0,f,c
  1868   001D90  D7FA               	bra	u2457
  1869   001D92  0000               	nop	
  1870   001D94                     
  1871                           ;dc_motor.c: 117:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1872   001D94  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  1873   001D98  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1874   001D9C  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  1875   001DA0  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1876   001DA4  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1877   001DA8  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1878   001DAC  EC92  F018         	call	_fullSpeedAhead	;wreg free
  1879                           
  1880                           ;dc_motor.c: 118:     }
  1881   001DB0  EFD9  F010         	goto	l489
  1882   001DB4                     l3583:
  1883                           
  1884                           ; BSR set to: 0
  1885   001DB4  0E04               	movlw	4
  1886   001DB6  19DC               	xorwf	move@color& (0+255),w,b
  1887   001DB8  A4D8               	btfss	status,2,c
  1888   001DBA  EFE1  F00E         	goto	u2191
  1889   001DBE  EFE3  F00E         	goto	u2190
  1890   001DC2                     u2191:
  1891   001DC2  EF47  F00F         	goto	l3595
  1892   001DC6                     u2190:
  1893   001DC6                     
  1894                           ; BSR set to: 0
  1895                           ;dc_motor.c: 121:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  1896   001DC6  C0D8  F01F         	movff	move@mL,reverseOneSquare@mL
  1897   001DCA  C0D9  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  1898   001DCE  C0DA  F021         	movff	move@mR,reverseOneSquare@mR
  1899   001DD2  C0DB  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  1900   001DD6  C0E2  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  1901   001DDA  C0E3  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  1902   001DDE  C0E4  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  1903   001DE2  EC5C  F013         	call	_reverseOneSquare	;wreg free
  1904   001DE6                     
  1905                           ;dc_motor.c: 122:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1906   001DE6  0E05               	movlw	5
  1907   001DE8  6E42               	movwf	(??_move+1)^0,c
  1908   001DEA  0E0F               	movlw	15
  1909   001DEC  6E41               	movwf	??_move^0,c
  1910   001DEE  0EF1               	movlw	241
  1911   001DF0                     u2467:
  1912   001DF0  2EE8               	decfsz	wreg,f,c
  1913   001DF2  D7FE               	bra	u2467
  1914   001DF4  2E41               	decfsz	??_move^0,f,c
  1915   001DF6  D7FC               	bra	u2467
  1916   001DF8  2E42               	decfsz	(??_move+1)^0,f,c
  1917   001DFA  D7FA               	bra	u2467
  1918   001DFC  0000               	nop	
  1919   001DFE                     
  1920                           ;dc_motor.c: 123:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1921   001DFE  C0D8  F01F         	movff	move@mL,turnRight@mL
  1922   001E02  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  1923   001E06  C0DA  F021         	movff	move@mR,turnRight@mR
  1924   001E0A  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  1925   001E0E  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1926   001E12  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  1927   001E16  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  1928   001E1A  EC52  F014         	call	_turnRight	;wreg free
  1929                           
  1930                           ;dc_motor.c: 124:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1931   001E1E  0E05               	movlw	5
  1932   001E20  6E42               	movwf	(??_move+1)^0,c
  1933   001E22  0E0F               	movlw	15
  1934   001E24  6E41               	movwf	??_move^0,c
  1935   001E26  0EF1               	movlw	241
  1936   001E28                     u2477:
  1937   001E28  2EE8               	decfsz	wreg,f,c
  1938   001E2A  D7FE               	bra	u2477
  1939   001E2C  2E41               	decfsz	??_move^0,f,c
  1940   001E2E  D7FC               	bra	u2477
  1941   001E30  2E42               	decfsz	(??_move+1)^0,f,c
  1942   001E32  D7FA               	bra	u2477
  1943   001E34  0000               	nop	
  1944   001E36                     
  1945                           ;dc_motor.c: 125:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1946   001E36  C0D8  F01F         	movff	move@mL,turnRight@mL
  1947   001E3A  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  1948   001E3E  C0DA  F021         	movff	move@mR,turnRight@mR
  1949   001E42  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  1950   001E46  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1951   001E4A  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  1952   001E4E  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  1953   001E52  EC52  F014         	call	_turnRight	;wreg free
  1954   001E56                     
  1955                           ;dc_motor.c: 126:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1956   001E56  0E05               	movlw	5
  1957   001E58  6E42               	movwf	(??_move+1)^0,c
  1958   001E5A  0E0F               	movlw	15
  1959   001E5C  6E41               	movwf	??_move^0,c
  1960   001E5E  0EF1               	movlw	241
  1961   001E60                     u2487:
  1962   001E60  2EE8               	decfsz	wreg,f,c
  1963   001E62  D7FE               	bra	u2487
  1964   001E64  2E41               	decfsz	??_move^0,f,c
  1965   001E66  D7FC               	bra	u2487
  1966   001E68  2E42               	decfsz	(??_move+1)^0,f,c
  1967   001E6A  D7FA               	bra	u2487
  1968   001E6C  0000               	nop	
  1969                           
  1970                           ;dc_motor.c: 127:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1971   001E6E  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  1972   001E72  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1973   001E76  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  1974   001E7A  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1975   001E7E  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1976   001E82  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1977   001E86  EC92  F018         	call	_fullSpeedAhead	;wreg free
  1978                           
  1979                           ;dc_motor.c: 128:     }
  1980   001E8A  EFD9  F010         	goto	l489
  1981   001E8E                     l3595:
  1982                           
  1983                           ; BSR set to: 0
  1984   001E8E  0E05               	movlw	5
  1985   001E90  19DC               	xorwf	move@color& (0+255),w,b
  1986   001E92  A4D8               	btfss	status,2,c
  1987   001E94  EF4E  F00F         	goto	u2201
  1988   001E98  EF50  F00F         	goto	u2200
  1989   001E9C                     u2201:
  1990   001E9C  EFB4  F00F         	goto	l3607
  1991   001EA0                     u2200:
  1992   001EA0                     
  1993                           ; BSR set to: 0
  1994                           ;dc_motor.c: 131:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  1995   001EA0  C0D8  F01F         	movff	move@mL,reverseOneSquare@mL
  1996   001EA4  C0D9  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  1997   001EA8  C0DA  F021         	movff	move@mR,reverseOneSquare@mR
  1998   001EAC  C0DB  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  1999   001EB0  C0E2  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2000   001EB4  C0E3  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2001   001EB8  C0E4  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2002   001EBC  EC5C  F013         	call	_reverseOneSquare	;wreg free
  2003   001EC0                     
  2004                           ;dc_motor.c: 132:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2005   001EC0  0E05               	movlw	5
  2006   001EC2  6E42               	movwf	(??_move+1)^0,c
  2007   001EC4  0E0F               	movlw	15
  2008   001EC6  6E41               	movwf	??_move^0,c
  2009   001EC8  0EF1               	movlw	241
  2010   001ECA                     u2497:
  2011   001ECA  2EE8               	decfsz	wreg,f,c
  2012   001ECC  D7FE               	bra	u2497
  2013   001ECE  2E41               	decfsz	??_move^0,f,c
  2014   001ED0  D7FC               	bra	u2497
  2015   001ED2  2E42               	decfsz	(??_move+1)^0,f,c
  2016   001ED4  D7FA               	bra	u2497
  2017   001ED6  0000               	nop	
  2018   001ED8                     
  2019                           ;dc_motor.c: 133:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2020   001ED8  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2021   001EDC  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2022   001EE0  C0DA  F021         	movff	move@mR,turnLeft@mR
  2023   001EE4  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2024   001EE8  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2025   001EEC  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2026   001EF0  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2027   001EF4  EC3F  F015         	call	_turnLeft	;wreg free
  2028                           
  2029                           ;dc_motor.c: 134:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2030   001EF8  0E05               	movlw	5
  2031   001EFA  6E42               	movwf	(??_move+1)^0,c
  2032   001EFC  0E0F               	movlw	15
  2033   001EFE  6E41               	movwf	??_move^0,c
  2034   001F00  0EF1               	movlw	241
  2035   001F02                     u2507:
  2036   001F02  2EE8               	decfsz	wreg,f,c
  2037   001F04  D7FE               	bra	u2507
  2038   001F06  2E41               	decfsz	??_move^0,f,c
  2039   001F08  D7FC               	bra	u2507
  2040   001F0A  2E42               	decfsz	(??_move+1)^0,f,c
  2041   001F0C  D7FA               	bra	u2507
  2042   001F0E  0000               	nop	
  2043   001F10                     
  2044                           ;dc_motor.c: 135:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2045   001F10  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2046   001F14  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2047   001F18  C0DA  F021         	movff	move@mR,turnLeft@mR
  2048   001F1C  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2049   001F20  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2050   001F24  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2051   001F28  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2052   001F2C  EC3F  F015         	call	_turnLeft	;wreg free
  2053   001F30                     
  2054                           ;dc_motor.c: 136:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2055   001F30  0E05               	movlw	5
  2056   001F32  6E42               	movwf	(??_move+1)^0,c
  2057   001F34  0E0F               	movlw	15
  2058   001F36  6E41               	movwf	??_move^0,c
  2059   001F38  0EF1               	movlw	241
  2060   001F3A                     u2517:
  2061   001F3A  2EE8               	decfsz	wreg,f,c
  2062   001F3C  D7FE               	bra	u2517
  2063   001F3E  2E41               	decfsz	??_move^0,f,c
  2064   001F40  D7FC               	bra	u2517
  2065   001F42  2E42               	decfsz	(??_move+1)^0,f,c
  2066   001F44  D7FA               	bra	u2517
  2067   001F46  0000               	nop	
  2068                           
  2069                           ;dc_motor.c: 137:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2070   001F48  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2071   001F4C  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2072   001F50  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2073   001F54  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2074   001F58  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2075   001F5C  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2076   001F60  EC92  F018         	call	_fullSpeedAhead	;wreg free
  2077                           
  2078                           ;dc_motor.c: 138:     }
  2079   001F64  EFD9  F010         	goto	l489
  2080   001F68                     l3607:
  2081                           
  2082                           ; BSR set to: 0
  2083   001F68  0E06               	movlw	6
  2084   001F6A  19DC               	xorwf	move@color& (0+255),w,b
  2085   001F6C  A4D8               	btfss	status,2,c
  2086   001F6E  EFBB  F00F         	goto	u2211
  2087   001F72  EFBD  F00F         	goto	u2210
  2088   001F76                     u2211:
  2089   001F76  EF21  F010         	goto	l3619
  2090   001F7A                     u2210:
  2091   001F7A                     
  2092                           ; BSR set to: 0
  2093                           ;dc_motor.c: 141:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2094   001F7A  C0D8  F01F         	movff	move@mL,turnRight@mL
  2095   001F7E  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2096   001F82  C0DA  F021         	movff	move@mR,turnRight@mR
  2097   001F86  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2098   001F8A  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2099   001F8E  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2100   001F92  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2101   001F96  EC52  F014         	call	_turnRight	;wreg free
  2102   001F9A                     
  2103                           ;dc_motor.c: 142:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2104   001F9A  0E05               	movlw	5
  2105   001F9C  6E42               	movwf	(??_move+1)^0,c
  2106   001F9E  0E0F               	movlw	15
  2107   001FA0  6E41               	movwf	??_move^0,c
  2108   001FA2  0EF1               	movlw	241
  2109   001FA4                     u2527:
  2110   001FA4  2EE8               	decfsz	wreg,f,c
  2111   001FA6  D7FE               	bra	u2527
  2112   001FA8  2E41               	decfsz	??_move^0,f,c
  2113   001FAA  D7FC               	bra	u2527
  2114   001FAC  2E42               	decfsz	(??_move+1)^0,f,c
  2115   001FAE  D7FA               	bra	u2527
  2116   001FB0  0000               	nop	
  2117   001FB2                     
  2118                           ;dc_motor.c: 143:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2119   001FB2  C0D8  F01F         	movff	move@mL,turnRight@mL
  2120   001FB6  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2121   001FBA  C0DA  F021         	movff	move@mR,turnRight@mR
  2122   001FBE  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2123   001FC2  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2124   001FC6  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2125   001FCA  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2126   001FCE  EC52  F014         	call	_turnRight	;wreg free
  2127                           
  2128                           ;dc_motor.c: 144:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2129   001FD2  0E05               	movlw	5
  2130   001FD4  6E42               	movwf	(??_move+1)^0,c
  2131   001FD6  0E0F               	movlw	15
  2132   001FD8  6E41               	movwf	??_move^0,c
  2133   001FDA  0EF1               	movlw	241
  2134   001FDC                     u2537:
  2135   001FDC  2EE8               	decfsz	wreg,f,c
  2136   001FDE  D7FE               	bra	u2537
  2137   001FE0  2E41               	decfsz	??_move^0,f,c
  2138   001FE2  D7FC               	bra	u2537
  2139   001FE4  2E42               	decfsz	(??_move+1)^0,f,c
  2140   001FE6  D7FA               	bra	u2537
  2141   001FE8  0000               	nop	
  2142   001FEA                     
  2143                           ;dc_motor.c: 145:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2144   001FEA  C0D8  F01F         	movff	move@mL,turnRight@mL
  2145   001FEE  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2146   001FF2  C0DA  F021         	movff	move@mR,turnRight@mR
  2147   001FF6  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2148   001FFA  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2149   001FFE  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2150   002002  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2151   002006  EC52  F014         	call	_turnRight	;wreg free
  2152   00200A                     
  2153                           ;dc_motor.c: 146:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2154   00200A  0E05               	movlw	5
  2155   00200C  6E42               	movwf	(??_move+1)^0,c
  2156   00200E  0E0F               	movlw	15
  2157   002010  6E41               	movwf	??_move^0,c
  2158   002012  0EF1               	movlw	241
  2159   002014                     u2547:
  2160   002014  2EE8               	decfsz	wreg,f,c
  2161   002016  D7FE               	bra	u2547
  2162   002018  2E41               	decfsz	??_move^0,f,c
  2163   00201A  D7FC               	bra	u2547
  2164   00201C  2E42               	decfsz	(??_move+1)^0,f,c
  2165   00201E  D7FA               	bra	u2547
  2166   002020  0000               	nop	
  2167                           
  2168                           ;dc_motor.c: 147:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2169   002022  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2170   002026  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2171   00202A  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2172   00202E  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2173   002032  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2174   002036  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2175   00203A  EC92  F018         	call	_fullSpeedAhead	;wreg free
  2176                           
  2177                           ;dc_motor.c: 148:     }
  2178   00203E  EFD9  F010         	goto	l489
  2179   002042                     l3619:
  2180                           
  2181                           ; BSR set to: 0
  2182   002042  0E07               	movlw	7
  2183   002044  19DC               	xorwf	move@color& (0+255),w,b
  2184   002046  A4D8               	btfss	status,2,c
  2185   002048  EF28  F010         	goto	u2221
  2186   00204C  EF2A  F010         	goto	u2220
  2187   002050                     u2221:
  2188   002050  EF8E  F010         	goto	l3631
  2189   002054                     u2220:
  2190   002054                     
  2191                           ; BSR set to: 0
  2192                           ;dc_motor.c: 151:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2193   002054  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2194   002058  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2195   00205C  C0DA  F021         	movff	move@mR,turnLeft@mR
  2196   002060  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2197   002064  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2198   002068  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2199   00206C  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2200   002070  EC3F  F015         	call	_turnLeft	;wreg free
  2201   002074                     
  2202                           ;dc_motor.c: 152:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2203   002074  0E05               	movlw	5
  2204   002076  6E42               	movwf	(??_move+1)^0,c
  2205   002078  0E0F               	movlw	15
  2206   00207A  6E41               	movwf	??_move^0,c
  2207   00207C  0EF1               	movlw	241
  2208   00207E                     u2557:
  2209   00207E  2EE8               	decfsz	wreg,f,c
  2210   002080  D7FE               	bra	u2557
  2211   002082  2E41               	decfsz	??_move^0,f,c
  2212   002084  D7FC               	bra	u2557
  2213   002086  2E42               	decfsz	(??_move+1)^0,f,c
  2214   002088  D7FA               	bra	u2557
  2215   00208A  0000               	nop	
  2216   00208C                     
  2217                           ;dc_motor.c: 153:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2218   00208C  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2219   002090  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2220   002094  C0DA  F021         	movff	move@mR,turnLeft@mR
  2221   002098  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2222   00209C  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2223   0020A0  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2224   0020A4  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2225   0020A8  EC3F  F015         	call	_turnLeft	;wreg free
  2226                           
  2227                           ;dc_motor.c: 154:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2228   0020AC  0E05               	movlw	5
  2229   0020AE  6E42               	movwf	(??_move+1)^0,c
  2230   0020B0  0E0F               	movlw	15
  2231   0020B2  6E41               	movwf	??_move^0,c
  2232   0020B4  0EF1               	movlw	241
  2233   0020B6                     u2567:
  2234   0020B6  2EE8               	decfsz	wreg,f,c
  2235   0020B8  D7FE               	bra	u2567
  2236   0020BA  2E41               	decfsz	??_move^0,f,c
  2237   0020BC  D7FC               	bra	u2567
  2238   0020BE  2E42               	decfsz	(??_move+1)^0,f,c
  2239   0020C0  D7FA               	bra	u2567
  2240   0020C2  0000               	nop	
  2241   0020C4                     
  2242                           ;dc_motor.c: 155:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2243   0020C4  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2244   0020C8  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2245   0020CC  C0DA  F021         	movff	move@mR,turnLeft@mR
  2246   0020D0  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2247   0020D4  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2248   0020D8  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2249   0020DC  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2250   0020E0  EC3F  F015         	call	_turnLeft	;wreg free
  2251   0020E4                     
  2252                           ;dc_motor.c: 156:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2253   0020E4  0E05               	movlw	5
  2254   0020E6  6E42               	movwf	(??_move+1)^0,c
  2255   0020E8  0E0F               	movlw	15
  2256   0020EA  6E41               	movwf	??_move^0,c
  2257   0020EC  0EF1               	movlw	241
  2258   0020EE                     u2577:
  2259   0020EE  2EE8               	decfsz	wreg,f,c
  2260   0020F0  D7FE               	bra	u2577
  2261   0020F2  2E41               	decfsz	??_move^0,f,c
  2262   0020F4  D7FC               	bra	u2577
  2263   0020F6  2E42               	decfsz	(??_move+1)^0,f,c
  2264   0020F8  D7FA               	bra	u2577
  2265   0020FA  0000               	nop	
  2266                           
  2267                           ;dc_motor.c: 157:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2268   0020FC  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2269   002100  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2270   002104  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2271   002108  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2272   00210C  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2273   002110  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2274   002114  EC92  F018         	call	_fullSpeedAhead	;wreg free
  2275                           
  2276                           ;dc_motor.c: 158:     }
  2277   002118  EFD9  F010         	goto	l489
  2278   00211C                     l3631:
  2279                           
  2280                           ; BSR set to: 0
  2281   00211C  0E08               	movlw	8
  2282   00211E  19DC               	xorwf	move@color& (0+255),w,b
  2283   002120  A4D8               	btfss	status,2,c
  2284   002122  EF95  F010         	goto	u2231
  2285   002126  EF97  F010         	goto	u2230
  2286   00212A                     u2231:
  2287   00212A  EFB9  F010         	goto	l3635
  2288   00212E                     u2230:
  2289   00212E                     
  2290                           ; BSR set to: 0
  2291                           ;dc_motor.c: 161:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2292   00212E  C0D8  F02D         	movff	move@mL,returnHome@mL
  2293   002132  C0D9  F02E         	movff	move@mL+1,returnHome@mL+1
  2294   002136  C0DA  F02F         	movff	move@mR,returnHome@mR
  2295   00213A  C0DB  F030         	movff	move@mR+1,returnHome@mR+1
  2296   00213E  C0DD  F031         	movff	move@moveSequence,returnHome@moveSequence
  2297   002142  C0DE  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2298   002146  C0DF  F033         	movff	move@straightTime,returnHome@straightTime
  2299   00214A  C0E0  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2300   00214E  C0E1  F035         	movff	move@curMove,returnHome@curMove
  2301   002152  C0E2  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2302   002156  C0E3  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2303   00215A  C0E4  F038         	movff	move@straightRamp,returnHome@straightRamp
  2304   00215E  C0E5  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2305   002162  C0E6  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2306   002166  C0E7  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2307   00216A  EC01  F007         	call	_returnHome	;wreg free
  2308                           
  2309                           ;dc_motor.c: 162:     }
  2310   00216E  EFD9  F010         	goto	l489
  2311   002172                     l3635:
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;dc_motor.c: 165:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2315   002172  C0D8  F02D         	movff	move@mL,returnHome@mL
  2316   002176  C0D9  F02E         	movff	move@mL+1,returnHome@mL+1
  2317   00217A  C0DA  F02F         	movff	move@mR,returnHome@mR
  2318   00217E  C0DB  F030         	movff	move@mR+1,returnHome@mR+1
  2319   002182  C0DD  F031         	movff	move@moveSequence,returnHome@moveSequence
  2320   002186  C0DE  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2321   00218A  C0DF  F033         	movff	move@straightTime,returnHome@straightTime
  2322   00218E  C0E0  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2323   002192  C0E1  F035         	movff	move@curMove,returnHome@curMove
  2324   002196  C0E2  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2325   00219A  C0E3  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2326   00219E  C0E4  F038         	movff	move@straightRamp,returnHome@straightRamp
  2327   0021A2  C0E5  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2328   0021A6  C0E6  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2329   0021AA  C0E7  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2330   0021AE  EC01  F007         	call	_returnHome	;wreg free
  2331   0021B2                     l489:
  2332   0021B2  0012               	return		;funcret
  2333   0021B4                     __end_of_move:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _returnHome *****************
  2337 ;; Defined at:
  2338 ;;		line 170 in file "dc_motor.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2341 ;;		 -> main@motorL(10), 
  2342 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2343 ;;		 -> main@motorR(10), 
  2344 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  2345 ;;		 -> main@moveSequence(40), 
  2346 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  2347 ;;		 -> main@straightTime(82), 
  2348 ;;  curMove         1   52[COMRAM] unsigned char 
  2349 ;;  straightSpee    1   53[COMRAM] unsigned char 
  2350 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  2351 ;;  straightRamp    1   55[COMRAM] unsigned char 
  2352 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  2353 ;;  turnDuration    1   57[COMRAM] unsigned char 
  2354 ;;  turnRamp        1   58[COMRAM] unsigned char 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  i               1   63[COMRAM] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2366 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;Total ram usage:       20 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 8
  2373 ;; This function calls:
  2374 ;;		_fullSpeedAhead
  2375 ;;		_get16bitTMR0val
  2376 ;;		_resetTimer
  2377 ;;		_reverseOneSquare
  2378 ;;		_stop
  2379 ;;		_turnLeft
  2380 ;;		_turnRight
  2381 ;; This function is called by:
  2382 ;;		_move
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text3
  2387   000E02                     __ptext3:
  2388                           	callstack 0
  2389   000E02                     _returnHome:
  2390                           	callstack 21
  2391   000E02                     
  2392                           ;dc_motor.c: 170: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reverseDu
      +                          ration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned
      +                           char turnRamp);dc_motor.c: 171: {;dc_motor.c: 172:     turnLeft(mL, mR, turnSpeed, turn
      +                          Duration, turnRamp);
  2393   000E02  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2394   000E06  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2395   000E0A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2396   000E0E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2397   000E12  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2398   000E16  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2399   000E1A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2400   000E1E  EC3F  F015         	call	_turnLeft	;wreg free
  2401   000E22                     
  2402                           ;dc_motor.c: 173:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2403   000E22  0E05               	movlw	5
  2404   000E24  6E3D               	movwf	(??_returnHome+1)^0,c
  2405   000E26  0E0F               	movlw	15
  2406   000E28  6E3C               	movwf	??_returnHome^0,c
  2407   000E2A  0EF1               	movlw	241
  2408   000E2C                     u2587:
  2409   000E2C  2EE8               	decfsz	wreg,f,c
  2410   000E2E  D7FE               	bra	u2587
  2411   000E30  2E3C               	decfsz	??_returnHome^0,f,c
  2412   000E32  D7FC               	bra	u2587
  2413   000E34  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2414   000E36  D7FA               	bra	u2587
  2415   000E38  0000               	nop	
  2416   000E3A                     
  2417                           ;dc_motor.c: 174:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2418   000E3A  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2419   000E3E  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2420   000E42  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2421   000E46  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2422   000E4A  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2423   000E4E  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2424   000E52  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2425   000E56  EC3F  F015         	call	_turnLeft	;wreg free
  2426                           
  2427                           ;dc_motor.c: 175:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2428   000E5A  0E05               	movlw	5
  2429   000E5C  6E3D               	movwf	(??_returnHome+1)^0,c
  2430   000E5E  0E0F               	movlw	15
  2431   000E60  6E3C               	movwf	??_returnHome^0,c
  2432   000E62  0EF1               	movlw	241
  2433   000E64                     u2597:
  2434   000E64  2EE8               	decfsz	wreg,f,c
  2435   000E66  D7FE               	bra	u2597
  2436   000E68  2E3C               	decfsz	??_returnHome^0,f,c
  2437   000E6A  D7FC               	bra	u2597
  2438   000E6C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2439   000E6E  D7FA               	bra	u2597
  2440   000E70  0000               	nop	
  2441   000E72                     
  2442                           ;dc_motor.c: 176:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2443   000E72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2444   000E76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2445   000E7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2446   000E7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2447   000E82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2448   000E86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2449   000E8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2450   000E8E  EC3F  F015         	call	_turnLeft	;wreg free
  2451   000E92                     
  2452                           ;dc_motor.c: 177:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2453   000E92  0E05               	movlw	5
  2454   000E94  6E3D               	movwf	(??_returnHome+1)^0,c
  2455   000E96  0E0F               	movlw	15
  2456   000E98  6E3C               	movwf	??_returnHome^0,c
  2457   000E9A  0EF1               	movlw	241
  2458   000E9C                     u2607:
  2459   000E9C  2EE8               	decfsz	wreg,f,c
  2460   000E9E  D7FE               	bra	u2607
  2461   000EA0  2E3C               	decfsz	??_returnHome^0,f,c
  2462   000EA2  D7FC               	bra	u2607
  2463   000EA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2464   000EA6  D7FA               	bra	u2607
  2465   000EA8  0000               	nop	
  2466                           
  2467                           ;dc_motor.c: 178:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2468   000EAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2469   000EAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2470   000EB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2471   000EB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2472   000EBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2473   000EBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2474   000EC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2475   000EC6  EC3F  F015         	call	_turnLeft	;wreg free
  2476   000ECA                     
  2477                           ;dc_motor.c: 179:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2478   000ECA  0E05               	movlw	5
  2479   000ECC  6E3D               	movwf	(??_returnHome+1)^0,c
  2480   000ECE  0E0F               	movlw	15
  2481   000ED0  6E3C               	movwf	??_returnHome^0,c
  2482   000ED2  0EF1               	movlw	241
  2483   000ED4                     u2617:
  2484   000ED4  2EE8               	decfsz	wreg,f,c
  2485   000ED6  D7FE               	bra	u2617
  2486   000ED8  2E3C               	decfsz	??_returnHome^0,f,c
  2487   000EDA  D7FC               	bra	u2617
  2488   000EDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2489   000EDE  D7FA               	bra	u2617
  2490   000EE0  0000               	nop	
  2491   000EE2                     
  2492                           ;dc_motor.c: 180:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2493   000EE2  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  2494   000EE6  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  2495   000EEA  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  2496   000EEE  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  2497   000EF2  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  2498   000EF6  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  2499   000EFA  EC92  F018         	call	_fullSpeedAhead	;wreg free
  2500   000EFE                     
  2501                           ;dc_motor.c: 181:     resetTimer();
  2502   000EFE  EC65  F01C         	call	_resetTimer	;wreg free
  2503   000F02                     l2793:
  2504   000F02  5035               	movf	returnHome@curMove^0,w,c
  2505   000F04  0D02               	mullw	2
  2506   000F06  CFF3 F03C          	movff	prodl,??_returnHome
  2507   000F0A  CFF4 F03D          	movff	prodh,??_returnHome+1
  2508   000F0E  503C               	movf	??_returnHome^0,w,c
  2509   000F10  2433               	addwf	returnHome@straightTime^0,w,c
  2510   000F12  6ED9               	movwf	fsr2l,c
  2511   000F14  503D               	movf	(??_returnHome+1)^0,w,c
  2512   000F16  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  2513   000F18  6EDA               	movwf	fsr2h,c
  2514   000F1A  EC63  F01B         	call	_get16bitTMR0val	;wreg free
  2515   000F1E  50DE               	movf	postinc2,w,c
  2516   000F20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  2517   000F22  50DE               	movf	postinc2,w,c
  2518   000F24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  2519   000F26  A0D8               	btfss	status,0,c
  2520   000F28  EF98  F007         	goto	u1411
  2521   000F2C  EF9A  F007         	goto	u1410
  2522   000F30                     u1411:
  2523   000F30  EF81  F007         	goto	l2793
  2524   000F34                     u1410:
  2525   000F34                     
  2526                           ;dc_motor.c: 183:     stop(mL, mR, straightRamp);
  2527   000F34  C02D  F01F         	movff	returnHome@mL,stop@mL
  2528   000F38  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  2529   000F3C  C02F  F021         	movff	returnHome@mR,stop@mR
  2530   000F40  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  2531   000F44  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  2532   000F48  EC0D  F018         	call	_stop	;wreg free
  2533   000F4C                     
  2534                           ;dc_motor.c: 185:     char i=curMove;
  2535   000F4C  C035  F040         	movff	returnHome@curMove,returnHome@i
  2536                           
  2537                           ;dc_motor.c: 186:     while (i>0) {
  2538   000F50  EF56  F00A         	goto	l2885
  2539   000F54                     l2799:
  2540                           
  2541                           ;dc_motor.c: 187:         i--;
  2542   000F54  0640               	decf	returnHome@i^0,f,c
  2543   000F56                     
  2544                           ;dc_motor.c: 189:         if (moveSequence[i] == 1) {
  2545   000F56  5040               	movf	returnHome@i^0,w,c
  2546   000F58  2431               	addwf	returnHome@moveSequence^0,w,c
  2547   000F5A  6ED9               	movwf	fsr2l,c
  2548   000F5C  0E00               	movlw	0
  2549   000F5E  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2550   000F60  6EDA               	movwf	fsr2h,c
  2551   000F62  04DE               	decf	postinc2,w,c
  2552   000F64  A4D8               	btfss	status,2,c
  2553   000F66  EFB7  F007         	goto	u1421
  2554   000F6A  EFB9  F007         	goto	u1420
  2555   000F6E                     u1421:
  2556   000F6E  EFF3  F007         	goto	l2809
  2557   000F72                     u1420:
  2558   000F72                     
  2559                           ;dc_motor.c: 190:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2560   000F72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2561   000F76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2562   000F7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2563   000F7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2564   000F82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2565   000F86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2566   000F8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2567   000F8E  EC3F  F015         	call	_turnLeft	;wreg free
  2568   000F92                     
  2569                           ;dc_motor.c: 191:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2570   000F92  0E05               	movlw	5
  2571   000F94  6E3D               	movwf	(??_returnHome+1)^0,c
  2572   000F96  0E0F               	movlw	15
  2573   000F98  6E3C               	movwf	??_returnHome^0,c
  2574   000F9A  0EF1               	movlw	241
  2575   000F9C                     u2627:
  2576   000F9C  2EE8               	decfsz	wreg,f,c
  2577   000F9E  D7FE               	bra	u2627
  2578   000FA0  2E3C               	decfsz	??_returnHome^0,f,c
  2579   000FA2  D7FC               	bra	u2627
  2580   000FA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2581   000FA6  D7FA               	bra	u2627
  2582   000FA8  0000               	nop	
  2583   000FAA                     
  2584                           ;dc_motor.c: 192:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2585   000FAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2586   000FAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2587   000FB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2588   000FB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2589   000FBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2590   000FBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2591   000FC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2592   000FC6  EC3F  F015         	call	_turnLeft	;wreg free
  2593                           
  2594                           ;dc_motor.c: 193:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2595   000FCA  0E05               	movlw	5
  2596   000FCC  6E3D               	movwf	(??_returnHome+1)^0,c
  2597   000FCE  0E0F               	movlw	15
  2598   000FD0  6E3C               	movwf	??_returnHome^0,c
  2599   000FD2  0EF1               	movlw	241
  2600   000FD4                     u2637:
  2601   000FD4  2EE8               	decfsz	wreg,f,c
  2602   000FD6  D7FE               	bra	u2637
  2603   000FD8  2E3C               	decfsz	??_returnHome^0,f,c
  2604   000FDA  D7FC               	bra	u2637
  2605   000FDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2606   000FDE  D7FA               	bra	u2637
  2607   000FE0  0000               	nop	
  2608                           
  2609                           ;dc_motor.c: 194:         }
  2610   000FE2  EF21  F00A         	goto	l498
  2611   000FE6                     l2809:
  2612   000FE6  5040               	movf	returnHome@i^0,w,c
  2613   000FE8  2431               	addwf	returnHome@moveSequence^0,w,c
  2614   000FEA  6ED9               	movwf	fsr2l,c
  2615   000FEC  0E00               	movlw	0
  2616   000FEE  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2617   000FF0  6EDA               	movwf	fsr2h,c
  2618   000FF2  0E02               	movlw	2
  2619   000FF4  18DE               	xorwf	postinc2,w,c
  2620   000FF6  A4D8               	btfss	status,2,c
  2621   000FF8  EF00  F008         	goto	u1431
  2622   000FFC  EF02  F008         	goto	u1430
  2623   001000                     u1431:
  2624   001000  EF3C  F008         	goto	l2817
  2625   001004                     u1430:
  2626   001004                     
  2627                           ;dc_motor.c: 197:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2628   001004  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2629   001008  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2630   00100C  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2631   001010  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2632   001014  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2633   001018  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2634   00101C  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2635   001020  EC52  F014         	call	_turnRight	;wreg free
  2636   001024                     
  2637                           ;dc_motor.c: 198:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2638   001024  0E05               	movlw	5
  2639   001026  6E3D               	movwf	(??_returnHome+1)^0,c
  2640   001028  0E0F               	movlw	15
  2641   00102A  6E3C               	movwf	??_returnHome^0,c
  2642   00102C  0EF1               	movlw	241
  2643   00102E                     u2647:
  2644   00102E  2EE8               	decfsz	wreg,f,c
  2645   001030  D7FE               	bra	u2647
  2646   001032  2E3C               	decfsz	??_returnHome^0,f,c
  2647   001034  D7FC               	bra	u2647
  2648   001036  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2649   001038  D7FA               	bra	u2647
  2650   00103A  0000               	nop	
  2651   00103C                     
  2652                           ;dc_motor.c: 199:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2653   00103C  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2654   001040  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2655   001044  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2656   001048  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2657   00104C  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2658   001050  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2659   001054  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2660   001058  EC52  F014         	call	_turnRight	;wreg free
  2661                           
  2662                           ;dc_motor.c: 200:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2663   00105C  0E05               	movlw	5
  2664   00105E  6E3D               	movwf	(??_returnHome+1)^0,c
  2665   001060  0E0F               	movlw	15
  2666   001062  6E3C               	movwf	??_returnHome^0,c
  2667   001064  0EF1               	movlw	241
  2668   001066                     u2657:
  2669   001066  2EE8               	decfsz	wreg,f,c
  2670   001068  D7FE               	bra	u2657
  2671   00106A  2E3C               	decfsz	??_returnHome^0,f,c
  2672   00106C  D7FC               	bra	u2657
  2673   00106E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2674   001070  D7FA               	bra	u2657
  2675   001072  0000               	nop	
  2676                           
  2677                           ;dc_motor.c: 201:         }
  2678   001074  EF21  F00A         	goto	l498
  2679   001078                     l2817:
  2680   001078  5040               	movf	returnHome@i^0,w,c
  2681   00107A  2431               	addwf	returnHome@moveSequence^0,w,c
  2682   00107C  6ED9               	movwf	fsr2l,c
  2683   00107E  0E00               	movlw	0
  2684   001080  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2685   001082  6EDA               	movwf	fsr2h,c
  2686   001084  0E03               	movlw	3
  2687   001086  18DE               	xorwf	postinc2,w,c
  2688   001088  A4D8               	btfss	status,2,c
  2689   00108A  EF49  F008         	goto	u1441
  2690   00108E  EF4B  F008         	goto	u1440
  2691   001092                     u1441:
  2692   001092  EFBD  F008         	goto	l2831
  2693   001096                     u1440:
  2694   001096                     
  2695                           ;dc_motor.c: 204:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2696   001096  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2697   00109A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2698   00109E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2699   0010A2  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2700   0010A6  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2701   0010AA  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2702   0010AE  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2703   0010B2  EC3F  F015         	call	_turnLeft	;wreg free
  2704   0010B6                     
  2705                           ;dc_motor.c: 205:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2706   0010B6  0E05               	movlw	5
  2707   0010B8  6E3D               	movwf	(??_returnHome+1)^0,c
  2708   0010BA  0E0F               	movlw	15
  2709   0010BC  6E3C               	movwf	??_returnHome^0,c
  2710   0010BE  0EF1               	movlw	241
  2711   0010C0                     u2667:
  2712   0010C0  2EE8               	decfsz	wreg,f,c
  2713   0010C2  D7FE               	bra	u2667
  2714   0010C4  2E3C               	decfsz	??_returnHome^0,f,c
  2715   0010C6  D7FC               	bra	u2667
  2716   0010C8  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2717   0010CA  D7FA               	bra	u2667
  2718   0010CC  0000               	nop	
  2719   0010CE                     
  2720                           ;dc_motor.c: 206:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2721   0010CE  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2722   0010D2  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2723   0010D6  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2724   0010DA  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2725   0010DE  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2726   0010E2  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2727   0010E6  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2728   0010EA  EC3F  F015         	call	_turnLeft	;wreg free
  2729                           
  2730                           ;dc_motor.c: 207:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2731   0010EE  0E05               	movlw	5
  2732   0010F0  6E3D               	movwf	(??_returnHome+1)^0,c
  2733   0010F2  0E0F               	movlw	15
  2734   0010F4  6E3C               	movwf	??_returnHome^0,c
  2735   0010F6  0EF1               	movlw	241
  2736   0010F8                     u2677:
  2737   0010F8  2EE8               	decfsz	wreg,f,c
  2738   0010FA  D7FE               	bra	u2677
  2739   0010FC  2E3C               	decfsz	??_returnHome^0,f,c
  2740   0010FE  D7FC               	bra	u2677
  2741   001100  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2742   001102  D7FA               	bra	u2677
  2743   001104  0000               	nop	
  2744   001106                     
  2745                           ;dc_motor.c: 208:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2746   001106  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2747   00110A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2748   00110E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2749   001112  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2750   001116  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2751   00111A  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2752   00111E  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2753   001122  EC3F  F015         	call	_turnLeft	;wreg free
  2754   001126                     
  2755                           ;dc_motor.c: 209:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2756   001126  0E05               	movlw	5
  2757   001128  6E3D               	movwf	(??_returnHome+1)^0,c
  2758   00112A  0E0F               	movlw	15
  2759   00112C  6E3C               	movwf	??_returnHome^0,c
  2760   00112E  0EF1               	movlw	241
  2761   001130                     u2687:
  2762   001130  2EE8               	decfsz	wreg,f,c
  2763   001132  D7FE               	bra	u2687
  2764   001134  2E3C               	decfsz	??_returnHome^0,f,c
  2765   001136  D7FC               	bra	u2687
  2766   001138  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2767   00113A  D7FA               	bra	u2687
  2768   00113C  0000               	nop	
  2769                           
  2770                           ;dc_motor.c: 210:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2771   00113E  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2772   001142  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2773   001146  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2774   00114A  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2775   00114E  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2776   001152  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2777   001156  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2778   00115A  EC3F  F015         	call	_turnLeft	;wreg free
  2779   00115E                     l2829:
  2780                           
  2781                           ;dc_motor.c: 211:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2782   00115E  0E05               	movlw	5
  2783   001160  6E3D               	movwf	(??_returnHome+1)^0,c
  2784   001162  0E0F               	movlw	15
  2785   001164  6E3C               	movwf	??_returnHome^0,c
  2786   001166  0EF1               	movlw	241
  2787   001168                     u2697:
  2788   001168  2EE8               	decfsz	wreg,f,c
  2789   00116A  D7FE               	bra	u2697
  2790   00116C  2E3C               	decfsz	??_returnHome^0,f,c
  2791   00116E  D7FC               	bra	u2697
  2792   001170  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2793   001172  D7FA               	bra	u2697
  2794   001174  0000               	nop	
  2795                           
  2796                           ;dc_motor.c: 212:         }
  2797   001176  EF21  F00A         	goto	l498
  2798   00117A                     l2831:
  2799   00117A  5040               	movf	returnHome@i^0,w,c
  2800   00117C  2431               	addwf	returnHome@moveSequence^0,w,c
  2801   00117E  6ED9               	movwf	fsr2l,c
  2802   001180  0E00               	movlw	0
  2803   001182  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2804   001184  6EDA               	movwf	fsr2h,c
  2805   001186  0E04               	movlw	4
  2806   001188  18DE               	xorwf	postinc2,w,c
  2807   00118A  A4D8               	btfss	status,2,c
  2808   00118C  EFCA  F008         	goto	u1451
  2809   001190  EFCC  F008         	goto	u1450
  2810   001194                     u1451:
  2811   001194  EF16  F009         	goto	l2843
  2812   001198                     u1450:
  2813   001198                     
  2814                           ;dc_motor.c: 215:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2815   001198  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2816   00119C  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2817   0011A0  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2818   0011A4  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2819   0011A8  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2820   0011AC  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2821   0011B0  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2822   0011B4  EC3F  F015         	call	_turnLeft	;wreg free
  2823   0011B8                     
  2824                           ;dc_motor.c: 216:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2825   0011B8  0E05               	movlw	5
  2826   0011BA  6E3D               	movwf	(??_returnHome+1)^0,c
  2827   0011BC  0E0F               	movlw	15
  2828   0011BE  6E3C               	movwf	??_returnHome^0,c
  2829   0011C0  0EF1               	movlw	241
  2830   0011C2                     u2707:
  2831   0011C2  2EE8               	decfsz	wreg,f,c
  2832   0011C4  D7FE               	bra	u2707
  2833   0011C6  2E3C               	decfsz	??_returnHome^0,f,c
  2834   0011C8  D7FC               	bra	u2707
  2835   0011CA  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2836   0011CC  D7FA               	bra	u2707
  2837   0011CE  0000               	nop	
  2838   0011D0                     
  2839                           ;dc_motor.c: 217:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2840   0011D0  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2841   0011D4  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2842   0011D8  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2843   0011DC  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2844   0011E0  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2845   0011E4  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2846   0011E8  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2847   0011EC  EC3F  F015         	call	_turnLeft	;wreg free
  2848                           
  2849                           ;dc_motor.c: 218:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2850   0011F0  0E05               	movlw	5
  2851   0011F2  6E3D               	movwf	(??_returnHome+1)^0,c
  2852   0011F4  0E0F               	movlw	15
  2853   0011F6  6E3C               	movwf	??_returnHome^0,c
  2854   0011F8  0EF1               	movlw	241
  2855   0011FA                     u2717:
  2856   0011FA  2EE8               	decfsz	wreg,f,c
  2857   0011FC  D7FE               	bra	u2717
  2858   0011FE  2E3C               	decfsz	??_returnHome^0,f,c
  2859   001200  D7FC               	bra	u2717
  2860   001202  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2861   001204  D7FA               	bra	u2717
  2862   001206  0000               	nop	
  2863   001208                     
  2864                           ;dc_motor.c: 219:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  2865   001208  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  2866   00120C  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  2867   001210  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  2868   001214  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  2869   001218  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  2870   00121C  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  2871   001220  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  2872   001224  EC5C  F013         	call	_reverseOneSquare	;wreg free
  2873   001228  EFAF  F008         	goto	l2829
  2874   00122C                     l2843:
  2875   00122C  5040               	movf	returnHome@i^0,w,c
  2876   00122E  2431               	addwf	returnHome@moveSequence^0,w,c
  2877   001230  6ED9               	movwf	fsr2l,c
  2878   001232  0E00               	movlw	0
  2879   001234  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2880   001236  6EDA               	movwf	fsr2h,c
  2881   001238  0E05               	movlw	5
  2882   00123A  18DE               	xorwf	postinc2,w,c
  2883   00123C  A4D8               	btfss	status,2,c
  2884   00123E  EF23  F009         	goto	u1461
  2885   001242  EF25  F009         	goto	u1460
  2886   001246                     u1461:
  2887   001246  EF6F  F009         	goto	l2855
  2888   00124A                     u1460:
  2889   00124A                     
  2890                           ;dc_motor.c: 224:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2891   00124A  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2892   00124E  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2893   001252  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2894   001256  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2895   00125A  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2896   00125E  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2897   001262  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2898   001266  EC52  F014         	call	_turnRight	;wreg free
  2899   00126A                     
  2900                           ;dc_motor.c: 225:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2901   00126A  0E05               	movlw	5
  2902   00126C  6E3D               	movwf	(??_returnHome+1)^0,c
  2903   00126E  0E0F               	movlw	15
  2904   001270  6E3C               	movwf	??_returnHome^0,c
  2905   001272  0EF1               	movlw	241
  2906   001274                     u2727:
  2907   001274  2EE8               	decfsz	wreg,f,c
  2908   001276  D7FE               	bra	u2727
  2909   001278  2E3C               	decfsz	??_returnHome^0,f,c
  2910   00127A  D7FC               	bra	u2727
  2911   00127C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2912   00127E  D7FA               	bra	u2727
  2913   001280  0000               	nop	
  2914   001282                     
  2915                           ;dc_motor.c: 226:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2916   001282  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2917   001286  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2918   00128A  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2919   00128E  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2920   001292  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2921   001296  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2922   00129A  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2923   00129E  EC52  F014         	call	_turnRight	;wreg free
  2924                           
  2925                           ;dc_motor.c: 227:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2926   0012A2  0E05               	movlw	5
  2927   0012A4  6E3D               	movwf	(??_returnHome+1)^0,c
  2928   0012A6  0E0F               	movlw	15
  2929   0012A8  6E3C               	movwf	??_returnHome^0,c
  2930   0012AA  0EF1               	movlw	241
  2931   0012AC                     u2737:
  2932   0012AC  2EE8               	decfsz	wreg,f,c
  2933   0012AE  D7FE               	bra	u2737
  2934   0012B0  2E3C               	decfsz	??_returnHome^0,f,c
  2935   0012B2  D7FC               	bra	u2737
  2936   0012B4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2937   0012B6  D7FA               	bra	u2737
  2938   0012B8  0000               	nop	
  2939   0012BA                     
  2940                           ;dc_motor.c: 228:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  2941   0012BA  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  2942   0012BE  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  2943   0012C2  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  2944   0012C6  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  2945   0012CA  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  2946   0012CE  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  2947   0012D2  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  2948   0012D6  EC5C  F013         	call	_reverseOneSquare	;wreg free
  2949   0012DA  EFAF  F008         	goto	l2829
  2950   0012DE                     l2855:
  2951   0012DE  5040               	movf	returnHome@i^0,w,c
  2952   0012E0  2431               	addwf	returnHome@moveSequence^0,w,c
  2953   0012E2  6ED9               	movwf	fsr2l,c
  2954   0012E4  0E00               	movlw	0
  2955   0012E6  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2956   0012E8  6EDA               	movwf	fsr2h,c
  2957   0012EA  0E06               	movlw	6
  2958   0012EC  18DE               	xorwf	postinc2,w,c
  2959   0012EE  A4D8               	btfss	status,2,c
  2960   0012F0  EF7C  F009         	goto	u1471
  2961   0012F4  EF7E  F009         	goto	u1470
  2962   0012F8                     u1471:
  2963   0012F8  EFC8  F009         	goto	l2867
  2964   0012FC                     u1470:
  2965   0012FC                     
  2966                           ;dc_motor.c: 233:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2967   0012FC  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2968   001300  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2969   001304  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2970   001308  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2971   00130C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2972   001310  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2973   001314  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2974   001318  EC3F  F015         	call	_turnLeft	;wreg free
  2975   00131C                     
  2976                           ;dc_motor.c: 234:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2977   00131C  0E05               	movlw	5
  2978   00131E  6E3D               	movwf	(??_returnHome+1)^0,c
  2979   001320  0E0F               	movlw	15
  2980   001322  6E3C               	movwf	??_returnHome^0,c
  2981   001324  0EF1               	movlw	241
  2982   001326                     u2747:
  2983   001326  2EE8               	decfsz	wreg,f,c
  2984   001328  D7FE               	bra	u2747
  2985   00132A  2E3C               	decfsz	??_returnHome^0,f,c
  2986   00132C  D7FC               	bra	u2747
  2987   00132E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2988   001330  D7FA               	bra	u2747
  2989   001332  0000               	nop	
  2990   001334                     
  2991                           ;dc_motor.c: 235:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2992   001334  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2993   001338  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2994   00133C  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2995   001340  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2996   001344  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2997   001348  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2998   00134C  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2999   001350  EC3F  F015         	call	_turnLeft	;wreg free
  3000                           
  3001                           ;dc_motor.c: 236:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3002   001354  0E05               	movlw	5
  3003   001356  6E3D               	movwf	(??_returnHome+1)^0,c
  3004   001358  0E0F               	movlw	15
  3005   00135A  6E3C               	movwf	??_returnHome^0,c
  3006   00135C  0EF1               	movlw	241
  3007   00135E                     u2757:
  3008   00135E  2EE8               	decfsz	wreg,f,c
  3009   001360  D7FE               	bra	u2757
  3010   001362  2E3C               	decfsz	??_returnHome^0,f,c
  3011   001364  D7FC               	bra	u2757
  3012   001366  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3013   001368  D7FA               	bra	u2757
  3014   00136A  0000               	nop	
  3015   00136C                     
  3016                           ;dc_motor.c: 237:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3017   00136C  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3018   001370  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3019   001374  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3020   001378  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3021   00137C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3022   001380  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3023   001384  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3024   001388  EC3F  F015         	call	_turnLeft	;wreg free
  3025   00138C  EFAF  F008         	goto	l2829
  3026   001390                     l2867:
  3027   001390  5040               	movf	returnHome@i^0,w,c
  3028   001392  2431               	addwf	returnHome@moveSequence^0,w,c
  3029   001394  6ED9               	movwf	fsr2l,c
  3030   001396  0E00               	movlw	0
  3031   001398  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3032   00139A  6EDA               	movwf	fsr2h,c
  3033   00139C  0E07               	movlw	7
  3034   00139E  18DE               	xorwf	postinc2,w,c
  3035   0013A0  A4D8               	btfss	status,2,c
  3036   0013A2  EFD5  F009         	goto	u1481
  3037   0013A6  EFD7  F009         	goto	u1480
  3038   0013AA                     u1481:
  3039   0013AA  EF21  F00A         	goto	l504
  3040   0013AE                     u1480:
  3041   0013AE                     
  3042                           ;dc_motor.c: 242:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3043   0013AE  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3044   0013B2  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3045   0013B6  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3046   0013BA  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3047   0013BE  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3048   0013C2  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3049   0013C6  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3050   0013CA  EC52  F014         	call	_turnRight	;wreg free
  3051   0013CE                     
  3052                           ;dc_motor.c: 243:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3053   0013CE  0E05               	movlw	5
  3054   0013D0  6E3D               	movwf	(??_returnHome+1)^0,c
  3055   0013D2  0E0F               	movlw	15
  3056   0013D4  6E3C               	movwf	??_returnHome^0,c
  3057   0013D6  0EF1               	movlw	241
  3058   0013D8                     u2767:
  3059   0013D8  2EE8               	decfsz	wreg,f,c
  3060   0013DA  D7FE               	bra	u2767
  3061   0013DC  2E3C               	decfsz	??_returnHome^0,f,c
  3062   0013DE  D7FC               	bra	u2767
  3063   0013E0  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3064   0013E2  D7FA               	bra	u2767
  3065   0013E4  0000               	nop	
  3066   0013E6                     
  3067                           ;dc_motor.c: 244:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3068   0013E6  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3069   0013EA  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3070   0013EE  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3071   0013F2  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3072   0013F6  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3073   0013FA  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3074   0013FE  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3075   001402  EC52  F014         	call	_turnRight	;wreg free
  3076                           
  3077                           ;dc_motor.c: 245:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3078   001406  0E05               	movlw	5
  3079   001408  6E3D               	movwf	(??_returnHome+1)^0,c
  3080   00140A  0E0F               	movlw	15
  3081   00140C  6E3C               	movwf	??_returnHome^0,c
  3082   00140E  0EF1               	movlw	241
  3083   001410                     u2777:
  3084   001410  2EE8               	decfsz	wreg,f,c
  3085   001412  D7FE               	bra	u2777
  3086   001414  2E3C               	decfsz	??_returnHome^0,f,c
  3087   001416  D7FC               	bra	u2777
  3088   001418  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3089   00141A  D7FA               	bra	u2777
  3090   00141C  0000               	nop	
  3091   00141E                     
  3092                           ;dc_motor.c: 246:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3093   00141E  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3094   001422  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3095   001426  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3096   00142A  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3097   00142E  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3098   001432  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3099   001436  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3100   00143A  EC52  F014         	call	_turnRight	;wreg free
  3101   00143E  EFAF  F008         	goto	l2829
  3102   001442                     l504:
  3103   001442                     l498:
  3104                           
  3105                           ;dc_motor.c: 250:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3106   001442  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  3107   001446  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  3108   00144A  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  3109   00144E  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  3110   001452  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3111   001456  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  3112   00145A  EC92  F018         	call	_fullSpeedAhead	;wreg free
  3113   00145E                     
  3114                           ;dc_motor.c: 251:         resetTimer();
  3115   00145E  EC65  F01C         	call	_resetTimer	;wreg free
  3116   001462                     l2881:
  3117   001462  5040               	movf	returnHome@i^0,w,c
  3118   001464  0D02               	mullw	2
  3119   001466  CFF3 F03C          	movff	prodl,??_returnHome
  3120   00146A  CFF4 F03D          	movff	prodh,??_returnHome+1
  3121   00146E  503C               	movf	??_returnHome^0,w,c
  3122   001470  2433               	addwf	returnHome@straightTime^0,w,c
  3123   001472  6ED9               	movwf	fsr2l,c
  3124   001474  503D               	movf	(??_returnHome+1)^0,w,c
  3125   001476  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  3126   001478  6EDA               	movwf	fsr2h,c
  3127   00147A  EC63  F01B         	call	_get16bitTMR0val	;wreg free
  3128   00147E  50DE               	movf	postinc2,w,c
  3129   001480  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  3130   001482  50DE               	movf	postinc2,w,c
  3131   001484  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  3132   001486  A0D8               	btfss	status,0,c
  3133   001488  EF48  F00A         	goto	u1491
  3134   00148C  EF4A  F00A         	goto	u1490
  3135   001490                     u1491:
  3136   001490  EF31  F00A         	goto	l2881
  3137   001494                     u1490:
  3138   001494                     
  3139                           ;dc_motor.c: 253:         stop(mL, mR, straightRamp);
  3140   001494  C02D  F01F         	movff	returnHome@mL,stop@mL
  3141   001498  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  3142   00149C  C02F  F021         	movff	returnHome@mR,stop@mR
  3143   0014A0  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  3144   0014A4  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  3145   0014A8  EC0D  F018         	call	_stop	;wreg free
  3146   0014AC                     l2885:
  3147                           
  3148                           ;dc_motor.c: 186:     while (i>0) {
  3149   0014AC  5040               	movf	returnHome@i^0,w,c
  3150   0014AE  A4D8               	btfss	status,2,c
  3151   0014B0  EF5C  F00A         	goto	u1501
  3152   0014B4  EF5E  F00A         	goto	u1500
  3153   0014B8                     u1501:
  3154   0014B8  EFAA  F007         	goto	l2799
  3155   0014BC                     u1500:
  3156   0014BC  0012               	return		;funcret
  3157   0014BE                     __end_of_returnHome:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _lostReturnHome *****************
  3161 ;; Defined at:
  3162 ;;		line 258 in file "dc_motor.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  3165 ;;		 -> main@motorL(10), 
  3166 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  3167 ;;		 -> main@motorR(10), 
  3168 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  3169 ;;		 -> main@moveSequence(40), 
  3170 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  3171 ;;		 -> main@straightTime(82), 
  3172 ;;  curMove         1   52[COMRAM] unsigned char 
  3173 ;;  straightSpee    1   53[COMRAM] unsigned char 
  3174 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  3175 ;;  straightRamp    1   55[COMRAM] unsigned char 
  3176 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  3177 ;;  turnDuration    1   57[COMRAM] unsigned char 
  3178 ;;  turnRamp        1   58[COMRAM] unsigned char 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  i               1   63[COMRAM] unsigned char 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3190 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3192 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3193 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3194 ;;Total ram usage:       20 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 8
  3197 ;; This function calls:
  3198 ;;		_fullSpeedAhead
  3199 ;;		_get16bitTMR0val
  3200 ;;		_resetTimer
  3201 ;;		_reverseOneSquare
  3202 ;;		_stop
  3203 ;;		_turnLeft
  3204 ;;		_turnRight
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text4
  3211   0014BE                     __ptext4:
  3212                           	callstack 0
  3213   0014BE                     _lostReturnHome:
  3214                           	callstack 22
  3215   0014BE                     
  3216                           ;dc_motor.c: 258: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 259: {;dc_motor.c: 260:     turnLeft(mL, mR, turnSpeed, 
      +                          turnDuration, turnRamp);
  3217   0014BE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3218   0014C2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3219   0014C6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3220   0014CA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3221   0014CE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3222   0014D2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3223   0014D6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3224   0014DA  EC3F  F015         	call	_turnLeft	;wreg free
  3225   0014DE                     
  3226                           ;dc_motor.c: 261:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3227   0014DE  0E05               	movlw	5
  3228   0014E0  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3229   0014E2  0E0F               	movlw	15
  3230   0014E4  6E3C               	movwf	??_lostReturnHome^0,c
  3231   0014E6  0EF1               	movlw	241
  3232   0014E8                     u2787:
  3233   0014E8  2EE8               	decfsz	wreg,f,c
  3234   0014EA  D7FE               	bra	u2787
  3235   0014EC  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3236   0014EE  D7FC               	bra	u2787
  3237   0014F0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3238   0014F2  D7FA               	bra	u2787
  3239   0014F4  0000               	nop	
  3240   0014F6                     
  3241                           ;dc_motor.c: 262:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3242   0014F6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3243   0014FA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3244   0014FE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3245   001502  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3246   001506  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3247   00150A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3248   00150E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3249   001512  EC3F  F015         	call	_turnLeft	;wreg free
  3250                           
  3251                           ;dc_motor.c: 263:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3252   001516  0E05               	movlw	5
  3253   001518  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3254   00151A  0E0F               	movlw	15
  3255   00151C  6E3C               	movwf	??_lostReturnHome^0,c
  3256   00151E  0EF1               	movlw	241
  3257   001520                     u2797:
  3258   001520  2EE8               	decfsz	wreg,f,c
  3259   001522  D7FE               	bra	u2797
  3260   001524  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3261   001526  D7FC               	bra	u2797
  3262   001528  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3263   00152A  D7FA               	bra	u2797
  3264   00152C  0000               	nop	
  3265   00152E                     
  3266                           ;dc_motor.c: 264:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3267   00152E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3268   001532  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3269   001536  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3270   00153A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3271   00153E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3272   001542  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3273   001546  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3274   00154A  EC3F  F015         	call	_turnLeft	;wreg free
  3275   00154E                     
  3276                           ;dc_motor.c: 265:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3277   00154E  0E05               	movlw	5
  3278   001550  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3279   001552  0E0F               	movlw	15
  3280   001554  6E3C               	movwf	??_lostReturnHome^0,c
  3281   001556  0EF1               	movlw	241
  3282   001558                     u2807:
  3283   001558  2EE8               	decfsz	wreg,f,c
  3284   00155A  D7FE               	bra	u2807
  3285   00155C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3286   00155E  D7FC               	bra	u2807
  3287   001560  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3288   001562  D7FA               	bra	u2807
  3289   001564  0000               	nop	
  3290                           
  3291                           ;dc_motor.c: 266:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3292   001566  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3293   00156A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3294   00156E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3295   001572  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3296   001576  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3297   00157A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3298   00157E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3299   001582  EC3F  F015         	call	_turnLeft	;wreg free
  3300   001586                     
  3301                           ;dc_motor.c: 267:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3302   001586  0E05               	movlw	5
  3303   001588  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3304   00158A  0E0F               	movlw	15
  3305   00158C  6E3C               	movwf	??_lostReturnHome^0,c
  3306   00158E  0EF1               	movlw	241
  3307   001590                     u2817:
  3308   001590  2EE8               	decfsz	wreg,f,c
  3309   001592  D7FE               	bra	u2817
  3310   001594  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3311   001596  D7FC               	bra	u2817
  3312   001598  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3313   00159A  D7FA               	bra	u2817
  3314   00159C  0000               	nop	
  3315   00159E                     
  3316                           ;dc_motor.c: 268:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3317   00159E  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  3318   0015A2  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  3319   0015A6  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  3320   0015AA  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  3321   0015AE  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3322   0015B2  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  3323   0015B6  EC92  F018         	call	_fullSpeedAhead	;wreg free
  3324   0015BA                     
  3325                           ;dc_motor.c: 269:     resetTimer();
  3326   0015BA  EC65  F01C         	call	_resetTimer	;wreg free
  3327   0015BE                     
  3328                           ;dc_motor.c: 270:     lost = 0;
  3329   0015BE  0E00               	movlw	0
  3330   0015C0  0101               	movlb	1	; () banked
  3331   0015C2  6FFA               	movwf	_lost& (0+255),b
  3332   0015C4                     l3195:
  3333                           
  3334                           ; BSR set to: 1
  3335   0015C4  51FA               	movf	_lost& (0+255),w,b
  3336   0015C6  B4D8               	btfsc	status,2,c
  3337   0015C8  EFE8  F00A         	goto	u1761
  3338   0015CC  EFEA  F00A         	goto	u1760
  3339   0015D0                     u1761:
  3340   0015D0  EFE2  F00A         	goto	l3195
  3341   0015D4                     u1760:
  3342   0015D4                     
  3343                           ; BSR set to: 1
  3344                           ;dc_motor.c: 272:     stop(mL, mR, straightRamp);
  3345   0015D4  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  3346   0015D8  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  3347   0015DC  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  3348   0015E0  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  3349   0015E4  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  3350   0015E8  EC0D  F018         	call	_stop	;wreg free
  3351   0015EC                     
  3352                           ;dc_motor.c: 274:     char i=curMove;
  3353   0015EC  C035  F040         	movff	lostReturnHome@curMove,lostReturnHome@i
  3354                           
  3355                           ;dc_motor.c: 275:     while (i>0) {
  3356   0015F0  EFA6  F00D         	goto	l3287
  3357   0015F4                     l3201:
  3358                           
  3359                           ;dc_motor.c: 276:         i--;
  3360   0015F4  0640               	decf	lostReturnHome@i^0,f,c
  3361   0015F6                     
  3362                           ;dc_motor.c: 278:         if (moveSequence[i] == 1) {
  3363   0015F6  5040               	movf	lostReturnHome@i^0,w,c
  3364   0015F8  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3365   0015FA  6ED9               	movwf	fsr2l,c
  3366   0015FC  0E00               	movlw	0
  3367   0015FE  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3368   001600  6EDA               	movwf	fsr2h,c
  3369   001602  04DE               	decf	postinc2,w,c
  3370   001604  A4D8               	btfss	status,2,c
  3371   001606  EF07  F00B         	goto	u1771
  3372   00160A  EF09  F00B         	goto	u1770
  3373   00160E                     u1771:
  3374   00160E  EF43  F00B         	goto	l3211
  3375   001612                     u1770:
  3376   001612                     
  3377                           ;dc_motor.c: 279:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3378   001612  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3379   001616  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3380   00161A  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3381   00161E  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3382   001622  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3383   001626  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3384   00162A  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3385   00162E  EC3F  F015         	call	_turnLeft	;wreg free
  3386   001632                     
  3387                           ;dc_motor.c: 280:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3388   001632  0E05               	movlw	5
  3389   001634  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3390   001636  0E0F               	movlw	15
  3391   001638  6E3C               	movwf	??_lostReturnHome^0,c
  3392   00163A  0EF1               	movlw	241
  3393   00163C                     u2827:
  3394   00163C  2EE8               	decfsz	wreg,f,c
  3395   00163E  D7FE               	bra	u2827
  3396   001640  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3397   001642  D7FC               	bra	u2827
  3398   001644  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3399   001646  D7FA               	bra	u2827
  3400   001648  0000               	nop	
  3401   00164A                     
  3402                           ;dc_motor.c: 281:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3403   00164A  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3404   00164E  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3405   001652  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3406   001656  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3407   00165A  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3408   00165E  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3409   001662  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3410   001666  EC3F  F015         	call	_turnLeft	;wreg free
  3411                           
  3412                           ;dc_motor.c: 282:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3413   00166A  0E05               	movlw	5
  3414   00166C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3415   00166E  0E0F               	movlw	15
  3416   001670  6E3C               	movwf	??_lostReturnHome^0,c
  3417   001672  0EF1               	movlw	241
  3418   001674                     u2837:
  3419   001674  2EE8               	decfsz	wreg,f,c
  3420   001676  D7FE               	bra	u2837
  3421   001678  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3422   00167A  D7FC               	bra	u2837
  3423   00167C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3424   00167E  D7FA               	bra	u2837
  3425   001680  0000               	nop	
  3426                           
  3427                           ;dc_motor.c: 283:         }
  3428   001682  EF71  F00D         	goto	l523
  3429   001686                     l3211:
  3430   001686  5040               	movf	lostReturnHome@i^0,w,c
  3431   001688  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3432   00168A  6ED9               	movwf	fsr2l,c
  3433   00168C  0E00               	movlw	0
  3434   00168E  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3435   001690  6EDA               	movwf	fsr2h,c
  3436   001692  0E02               	movlw	2
  3437   001694  18DE               	xorwf	postinc2,w,c
  3438   001696  A4D8               	btfss	status,2,c
  3439   001698  EF50  F00B         	goto	u1781
  3440   00169C  EF52  F00B         	goto	u1780
  3441   0016A0                     u1781:
  3442   0016A0  EF8C  F00B         	goto	l3219
  3443   0016A4                     u1780:
  3444   0016A4                     
  3445                           ;dc_motor.c: 286:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3446   0016A4  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3447   0016A8  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3448   0016AC  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3449   0016B0  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3450   0016B4  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3451   0016B8  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3452   0016BC  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3453   0016C0  EC52  F014         	call	_turnRight	;wreg free
  3454   0016C4                     
  3455                           ;dc_motor.c: 287:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3456   0016C4  0E05               	movlw	5
  3457   0016C6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3458   0016C8  0E0F               	movlw	15
  3459   0016CA  6E3C               	movwf	??_lostReturnHome^0,c
  3460   0016CC  0EF1               	movlw	241
  3461   0016CE                     u2847:
  3462   0016CE  2EE8               	decfsz	wreg,f,c
  3463   0016D0  D7FE               	bra	u2847
  3464   0016D2  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3465   0016D4  D7FC               	bra	u2847
  3466   0016D6  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3467   0016D8  D7FA               	bra	u2847
  3468   0016DA  0000               	nop	
  3469   0016DC                     
  3470                           ;dc_motor.c: 288:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3471   0016DC  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3472   0016E0  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3473   0016E4  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3474   0016E8  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3475   0016EC  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3476   0016F0  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3477   0016F4  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3478   0016F8  EC52  F014         	call	_turnRight	;wreg free
  3479                           
  3480                           ;dc_motor.c: 289:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3481   0016FC  0E05               	movlw	5
  3482   0016FE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3483   001700  0E0F               	movlw	15
  3484   001702  6E3C               	movwf	??_lostReturnHome^0,c
  3485   001704  0EF1               	movlw	241
  3486   001706                     u2857:
  3487   001706  2EE8               	decfsz	wreg,f,c
  3488   001708  D7FE               	bra	u2857
  3489   00170A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3490   00170C  D7FC               	bra	u2857
  3491   00170E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3492   001710  D7FA               	bra	u2857
  3493   001712  0000               	nop	
  3494                           
  3495                           ;dc_motor.c: 290:         }
  3496   001714  EF71  F00D         	goto	l523
  3497   001718                     l3219:
  3498   001718  5040               	movf	lostReturnHome@i^0,w,c
  3499   00171A  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3500   00171C  6ED9               	movwf	fsr2l,c
  3501   00171E  0E00               	movlw	0
  3502   001720  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3503   001722  6EDA               	movwf	fsr2h,c
  3504   001724  0E03               	movlw	3
  3505   001726  18DE               	xorwf	postinc2,w,c
  3506   001728  A4D8               	btfss	status,2,c
  3507   00172A  EF99  F00B         	goto	u1791
  3508   00172E  EF9B  F00B         	goto	u1790
  3509   001732                     u1791:
  3510   001732  EF0D  F00C         	goto	l3233
  3511   001736                     u1790:
  3512   001736                     
  3513                           ;dc_motor.c: 293:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3514   001736  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3515   00173A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3516   00173E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3517   001742  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3518   001746  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3519   00174A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3520   00174E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3521   001752  EC3F  F015         	call	_turnLeft	;wreg free
  3522   001756                     
  3523                           ;dc_motor.c: 294:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3524   001756  0E05               	movlw	5
  3525   001758  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3526   00175A  0E0F               	movlw	15
  3527   00175C  6E3C               	movwf	??_lostReturnHome^0,c
  3528   00175E  0EF1               	movlw	241
  3529   001760                     u2867:
  3530   001760  2EE8               	decfsz	wreg,f,c
  3531   001762  D7FE               	bra	u2867
  3532   001764  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3533   001766  D7FC               	bra	u2867
  3534   001768  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3535   00176A  D7FA               	bra	u2867
  3536   00176C  0000               	nop	
  3537   00176E                     
  3538                           ;dc_motor.c: 295:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3539   00176E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3540   001772  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3541   001776  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3542   00177A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3543   00177E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3544   001782  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3545   001786  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3546   00178A  EC3F  F015         	call	_turnLeft	;wreg free
  3547                           
  3548                           ;dc_motor.c: 296:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3549   00178E  0E05               	movlw	5
  3550   001790  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3551   001792  0E0F               	movlw	15
  3552   001794  6E3C               	movwf	??_lostReturnHome^0,c
  3553   001796  0EF1               	movlw	241
  3554   001798                     u2877:
  3555   001798  2EE8               	decfsz	wreg,f,c
  3556   00179A  D7FE               	bra	u2877
  3557   00179C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3558   00179E  D7FC               	bra	u2877
  3559   0017A0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3560   0017A2  D7FA               	bra	u2877
  3561   0017A4  0000               	nop	
  3562   0017A6                     
  3563                           ;dc_motor.c: 297:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3564   0017A6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3565   0017AA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3566   0017AE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3567   0017B2  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3568   0017B6  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3569   0017BA  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3570   0017BE  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3571   0017C2  EC3F  F015         	call	_turnLeft	;wreg free
  3572   0017C6                     
  3573                           ;dc_motor.c: 298:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3574   0017C6  0E05               	movlw	5
  3575   0017C8  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3576   0017CA  0E0F               	movlw	15
  3577   0017CC  6E3C               	movwf	??_lostReturnHome^0,c
  3578   0017CE  0EF1               	movlw	241
  3579   0017D0                     u2887:
  3580   0017D0  2EE8               	decfsz	wreg,f,c
  3581   0017D2  D7FE               	bra	u2887
  3582   0017D4  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3583   0017D6  D7FC               	bra	u2887
  3584   0017D8  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3585   0017DA  D7FA               	bra	u2887
  3586   0017DC  0000               	nop	
  3587                           
  3588                           ;dc_motor.c: 299:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3589   0017DE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3590   0017E2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3591   0017E6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3592   0017EA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3593   0017EE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3594   0017F2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3595   0017F6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3596   0017FA  EC3F  F015         	call	_turnLeft	;wreg free
  3597   0017FE                     l3231:
  3598                           
  3599                           ;dc_motor.c: 300:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3600   0017FE  0E05               	movlw	5
  3601   001800  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3602   001802  0E0F               	movlw	15
  3603   001804  6E3C               	movwf	??_lostReturnHome^0,c
  3604   001806  0EF1               	movlw	241
  3605   001808                     u2897:
  3606   001808  2EE8               	decfsz	wreg,f,c
  3607   00180A  D7FE               	bra	u2897
  3608   00180C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3609   00180E  D7FC               	bra	u2897
  3610   001810  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3611   001812  D7FA               	bra	u2897
  3612   001814  0000               	nop	
  3613                           
  3614                           ;dc_motor.c: 301:         }
  3615   001816  EF71  F00D         	goto	l523
  3616   00181A                     l3233:
  3617   00181A  5040               	movf	lostReturnHome@i^0,w,c
  3618   00181C  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3619   00181E  6ED9               	movwf	fsr2l,c
  3620   001820  0E00               	movlw	0
  3621   001822  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3622   001824  6EDA               	movwf	fsr2h,c
  3623   001826  0E04               	movlw	4
  3624   001828  18DE               	xorwf	postinc2,w,c
  3625   00182A  A4D8               	btfss	status,2,c
  3626   00182C  EF1A  F00C         	goto	u1801
  3627   001830  EF1C  F00C         	goto	u1800
  3628   001834                     u1801:
  3629   001834  EF66  F00C         	goto	l3245
  3630   001838                     u1800:
  3631   001838                     
  3632                           ;dc_motor.c: 304:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3633   001838  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3634   00183C  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3635   001840  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3636   001844  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3637   001848  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3638   00184C  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3639   001850  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3640   001854  EC3F  F015         	call	_turnLeft	;wreg free
  3641   001858                     
  3642                           ;dc_motor.c: 305:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3643   001858  0E05               	movlw	5
  3644   00185A  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3645   00185C  0E0F               	movlw	15
  3646   00185E  6E3C               	movwf	??_lostReturnHome^0,c
  3647   001860  0EF1               	movlw	241
  3648   001862                     u2907:
  3649   001862  2EE8               	decfsz	wreg,f,c
  3650   001864  D7FE               	bra	u2907
  3651   001866  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3652   001868  D7FC               	bra	u2907
  3653   00186A  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3654   00186C  D7FA               	bra	u2907
  3655   00186E  0000               	nop	
  3656   001870                     
  3657                           ;dc_motor.c: 306:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3658   001870  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3659   001874  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3660   001878  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3661   00187C  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3662   001880  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3663   001884  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3664   001888  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3665   00188C  EC3F  F015         	call	_turnLeft	;wreg free
  3666                           
  3667                           ;dc_motor.c: 307:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3668   001890  0E05               	movlw	5
  3669   001892  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3670   001894  0E0F               	movlw	15
  3671   001896  6E3C               	movwf	??_lostReturnHome^0,c
  3672   001898  0EF1               	movlw	241
  3673   00189A                     u2917:
  3674   00189A  2EE8               	decfsz	wreg,f,c
  3675   00189C  D7FE               	bra	u2917
  3676   00189E  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3677   0018A0  D7FC               	bra	u2917
  3678   0018A2  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3679   0018A4  D7FA               	bra	u2917
  3680   0018A6  0000               	nop	
  3681   0018A8                     
  3682                           ;dc_motor.c: 308:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3683   0018A8  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3684   0018AC  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3685   0018B0  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3686   0018B4  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3687   0018B8  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3688   0018BC  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3689   0018C0  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3690   0018C4  EC5C  F013         	call	_reverseOneSquare	;wreg free
  3691   0018C8  EFFF  F00B         	goto	l3231
  3692   0018CC                     l3245:
  3693   0018CC  5040               	movf	lostReturnHome@i^0,w,c
  3694   0018CE  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3695   0018D0  6ED9               	movwf	fsr2l,c
  3696   0018D2  0E00               	movlw	0
  3697   0018D4  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3698   0018D6  6EDA               	movwf	fsr2h,c
  3699   0018D8  0E05               	movlw	5
  3700   0018DA  18DE               	xorwf	postinc2,w,c
  3701   0018DC  A4D8               	btfss	status,2,c
  3702   0018DE  EF73  F00C         	goto	u1811
  3703   0018E2  EF75  F00C         	goto	u1810
  3704   0018E6                     u1811:
  3705   0018E6  EFBF  F00C         	goto	l3257
  3706   0018EA                     u1810:
  3707   0018EA                     
  3708                           ;dc_motor.c: 313:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3709   0018EA  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3710   0018EE  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3711   0018F2  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3712   0018F6  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3713   0018FA  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3714   0018FE  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3715   001902  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3716   001906  EC52  F014         	call	_turnRight	;wreg free
  3717   00190A                     
  3718                           ;dc_motor.c: 314:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3719   00190A  0E05               	movlw	5
  3720   00190C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3721   00190E  0E0F               	movlw	15
  3722   001910  6E3C               	movwf	??_lostReturnHome^0,c
  3723   001912  0EF1               	movlw	241
  3724   001914                     u2927:
  3725   001914  2EE8               	decfsz	wreg,f,c
  3726   001916  D7FE               	bra	u2927
  3727   001918  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3728   00191A  D7FC               	bra	u2927
  3729   00191C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3730   00191E  D7FA               	bra	u2927
  3731   001920  0000               	nop	
  3732   001922                     
  3733                           ;dc_motor.c: 315:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3734   001922  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3735   001926  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3736   00192A  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3737   00192E  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3738   001932  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3739   001936  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3740   00193A  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3741   00193E  EC52  F014         	call	_turnRight	;wreg free
  3742                           
  3743                           ;dc_motor.c: 316:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3744   001942  0E05               	movlw	5
  3745   001944  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3746   001946  0E0F               	movlw	15
  3747   001948  6E3C               	movwf	??_lostReturnHome^0,c
  3748   00194A  0EF1               	movlw	241
  3749   00194C                     u2937:
  3750   00194C  2EE8               	decfsz	wreg,f,c
  3751   00194E  D7FE               	bra	u2937
  3752   001950  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3753   001952  D7FC               	bra	u2937
  3754   001954  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3755   001956  D7FA               	bra	u2937
  3756   001958  0000               	nop	
  3757   00195A                     
  3758                           ;dc_motor.c: 317:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3759   00195A  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3760   00195E  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3761   001962  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3762   001966  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3763   00196A  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3764   00196E  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3765   001972  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3766   001976  EC5C  F013         	call	_reverseOneSquare	;wreg free
  3767   00197A  EFFF  F00B         	goto	l3231
  3768   00197E                     l3257:
  3769   00197E  5040               	movf	lostReturnHome@i^0,w,c
  3770   001980  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3771   001982  6ED9               	movwf	fsr2l,c
  3772   001984  0E00               	movlw	0
  3773   001986  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3774   001988  6EDA               	movwf	fsr2h,c
  3775   00198A  0E06               	movlw	6
  3776   00198C  18DE               	xorwf	postinc2,w,c
  3777   00198E  A4D8               	btfss	status,2,c
  3778   001990  EFCC  F00C         	goto	u1821
  3779   001994  EFCE  F00C         	goto	u1820
  3780   001998                     u1821:
  3781   001998  EF18  F00D         	goto	l3269
  3782   00199C                     u1820:
  3783   00199C                     
  3784                           ;dc_motor.c: 322:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3785   00199C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3786   0019A0  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3787   0019A4  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3788   0019A8  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3789   0019AC  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3790   0019B0  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3791   0019B4  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3792   0019B8  EC3F  F015         	call	_turnLeft	;wreg free
  3793   0019BC                     
  3794                           ;dc_motor.c: 323:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3795   0019BC  0E05               	movlw	5
  3796   0019BE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3797   0019C0  0E0F               	movlw	15
  3798   0019C2  6E3C               	movwf	??_lostReturnHome^0,c
  3799   0019C4  0EF1               	movlw	241
  3800   0019C6                     u2947:
  3801   0019C6  2EE8               	decfsz	wreg,f,c
  3802   0019C8  D7FE               	bra	u2947
  3803   0019CA  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3804   0019CC  D7FC               	bra	u2947
  3805   0019CE  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3806   0019D0  D7FA               	bra	u2947
  3807   0019D2  0000               	nop	
  3808   0019D4                     
  3809                           ;dc_motor.c: 324:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3810   0019D4  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3811   0019D8  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3812   0019DC  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3813   0019E0  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3814   0019E4  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3815   0019E8  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3816   0019EC  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3817   0019F0  EC3F  F015         	call	_turnLeft	;wreg free
  3818                           
  3819                           ;dc_motor.c: 325:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3820   0019F4  0E05               	movlw	5
  3821   0019F6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3822   0019F8  0E0F               	movlw	15
  3823   0019FA  6E3C               	movwf	??_lostReturnHome^0,c
  3824   0019FC  0EF1               	movlw	241
  3825   0019FE                     u2957:
  3826   0019FE  2EE8               	decfsz	wreg,f,c
  3827   001A00  D7FE               	bra	u2957
  3828   001A02  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3829   001A04  D7FC               	bra	u2957
  3830   001A06  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3831   001A08  D7FA               	bra	u2957
  3832   001A0A  0000               	nop	
  3833   001A0C                     
  3834                           ;dc_motor.c: 326:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3835   001A0C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3836   001A10  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3837   001A14  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3838   001A18  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3839   001A1C  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3840   001A20  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3841   001A24  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3842   001A28  EC3F  F015         	call	_turnLeft	;wreg free
  3843   001A2C  EFFF  F00B         	goto	l3231
  3844   001A30                     l3269:
  3845   001A30  5040               	movf	lostReturnHome@i^0,w,c
  3846   001A32  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3847   001A34  6ED9               	movwf	fsr2l,c
  3848   001A36  0E00               	movlw	0
  3849   001A38  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3850   001A3A  6EDA               	movwf	fsr2h,c
  3851   001A3C  0E07               	movlw	7
  3852   001A3E  18DE               	xorwf	postinc2,w,c
  3853   001A40  A4D8               	btfss	status,2,c
  3854   001A42  EF25  F00D         	goto	u1831
  3855   001A46  EF27  F00D         	goto	u1830
  3856   001A4A                     u1831:
  3857   001A4A  EF71  F00D         	goto	l529
  3858   001A4E                     u1830:
  3859   001A4E                     
  3860                           ;dc_motor.c: 331:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3861   001A4E  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3862   001A52  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3863   001A56  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3864   001A5A  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3865   001A5E  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3866   001A62  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3867   001A66  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3868   001A6A  EC52  F014         	call	_turnRight	;wreg free
  3869   001A6E                     
  3870                           ;dc_motor.c: 332:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3871   001A6E  0E05               	movlw	5
  3872   001A70  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3873   001A72  0E0F               	movlw	15
  3874   001A74  6E3C               	movwf	??_lostReturnHome^0,c
  3875   001A76  0EF1               	movlw	241
  3876   001A78                     u2967:
  3877   001A78  2EE8               	decfsz	wreg,f,c
  3878   001A7A  D7FE               	bra	u2967
  3879   001A7C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3880   001A7E  D7FC               	bra	u2967
  3881   001A80  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3882   001A82  D7FA               	bra	u2967
  3883   001A84  0000               	nop	
  3884   001A86                     
  3885                           ;dc_motor.c: 333:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3886   001A86  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3887   001A8A  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3888   001A8E  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3889   001A92  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3890   001A96  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3891   001A9A  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3892   001A9E  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3893   001AA2  EC52  F014         	call	_turnRight	;wreg free
  3894                           
  3895                           ;dc_motor.c: 334:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3896   001AA6  0E05               	movlw	5
  3897   001AA8  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3898   001AAA  0E0F               	movlw	15
  3899   001AAC  6E3C               	movwf	??_lostReturnHome^0,c
  3900   001AAE  0EF1               	movlw	241
  3901   001AB0                     u2977:
  3902   001AB0  2EE8               	decfsz	wreg,f,c
  3903   001AB2  D7FE               	bra	u2977
  3904   001AB4  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3905   001AB6  D7FC               	bra	u2977
  3906   001AB8  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3907   001ABA  D7FA               	bra	u2977
  3908   001ABC  0000               	nop	
  3909   001ABE                     
  3910                           ;dc_motor.c: 335:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3911   001ABE  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3912   001AC2  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3913   001AC6  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3914   001ACA  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3915   001ACE  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3916   001AD2  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3917   001AD6  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3918   001ADA  EC52  F014         	call	_turnRight	;wreg free
  3919   001ADE  EFFF  F00B         	goto	l3231
  3920   001AE2                     l529:
  3921   001AE2                     l523:
  3922                           
  3923                           ;dc_motor.c: 339:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3924   001AE2  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  3925   001AE6  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  3926   001AEA  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  3927   001AEE  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  3928   001AF2  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3929   001AF6  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  3930   001AFA  EC92  F018         	call	_fullSpeedAhead	;wreg free
  3931   001AFE                     
  3932                           ;dc_motor.c: 340:         resetTimer();
  3933   001AFE  EC65  F01C         	call	_resetTimer	;wreg free
  3934   001B02                     l3283:
  3935   001B02  5040               	movf	lostReturnHome@i^0,w,c
  3936   001B04  0D02               	mullw	2
  3937   001B06  CFF3 F03C          	movff	prodl,??_lostReturnHome
  3938   001B0A  CFF4 F03D          	movff	prodh,??_lostReturnHome+1
  3939   001B0E  503C               	movf	??_lostReturnHome^0,w,c
  3940   001B10  2433               	addwf	lostReturnHome@straightTime^0,w,c
  3941   001B12  6ED9               	movwf	fsr2l,c
  3942   001B14  503D               	movf	(??_lostReturnHome+1)^0,w,c
  3943   001B16  2034               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  3944   001B18  6EDA               	movwf	fsr2h,c
  3945   001B1A  EC63  F01B         	call	_get16bitTMR0val	;wreg free
  3946   001B1E  50DE               	movf	postinc2,w,c
  3947   001B20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  3948   001B22  50DE               	movf	postinc2,w,c
  3949   001B24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  3950   001B26  A0D8               	btfss	status,0,c
  3951   001B28  EF98  F00D         	goto	u1841
  3952   001B2C  EF9A  F00D         	goto	u1840
  3953   001B30                     u1841:
  3954   001B30  EF81  F00D         	goto	l3283
  3955   001B34                     u1840:
  3956   001B34                     
  3957                           ;dc_motor.c: 342:         stop(mL, mR, straightRamp);
  3958   001B34  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  3959   001B38  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  3960   001B3C  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  3961   001B40  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  3962   001B44  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  3963   001B48  EC0D  F018         	call	_stop	;wreg free
  3964   001B4C                     l3287:
  3965                           
  3966                           ;dc_motor.c: 275:     while (i>0) {
  3967   001B4C  5040               	movf	lostReturnHome@i^0,w,c
  3968   001B4E  A4D8               	btfss	status,2,c
  3969   001B50  EFAC  F00D         	goto	u1851
  3970   001B54  EFAE  F00D         	goto	u1850
  3971   001B58                     u1851:
  3972   001B58  EFFA  F00A         	goto	l3201
  3973   001B5C                     u1850:
  3974   001B5C  0012               	return		;funcret
  3975   001B5E                     __end_of_lostReturnHome:
  3976                           	callstack 0
  3977                           
  3978 ;; *************** function _turnRight *****************
  3979 ;; Defined at:
  3980 ;;		line 399 in file "dc_motor.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  3983 ;;		 -> main@motorL(10), 
  3984 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  3985 ;;		 -> main@motorR(10), 
  3986 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  3987 ;;  turnDuration    1   35[COMRAM] unsigned char 
  3988 ;;  turnRamp        1   36[COMRAM] unsigned char 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  cur_power       2   42[COMRAM] int 
  3991 ;;  i               2   40[COMRAM] int 
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4001 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4004 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4005 ;;Total ram usage:       14 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; Hardware stack levels required when called: 7
  4008 ;; This function calls:
  4009 ;;		_setMotorPWM
  4010 ;; This function is called by:
  4011 ;;		_move
  4012 ;;		_returnHome
  4013 ;;		_lostReturnHome
  4014 ;;		_calibration
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text5
  4019   0028A4                     __ptext5:
  4020                           	callstack 0
  4021   0028A4                     _turnRight:
  4022                           	callstack 22
  4023   0028A4                     
  4024                           ;dc_motor.c: 399: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 400: {;dc_motor.c: 401:     mL->dir
      +                          ection = 1;
  4025   0028A4  EE20 F001          	lfsr	2,1
  4026   0028A8  501F               	movf	turnRight@mL^0,w,c
  4027   0028AA  26D9               	addwf	fsr2l,f,c
  4028   0028AC  5020               	movf	(turnRight@mL+1)^0,w,c
  4029   0028AE  22DA               	addwfc	fsr2h,f,c
  4030   0028B0  0E01               	movlw	1
  4031   0028B2  6EDF               	movwf	indf2,c
  4032                           
  4033                           ;dc_motor.c: 402:     mR->direction = 0;
  4034   0028B4  EE20 F001          	lfsr	2,1
  4035   0028B8  5021               	movf	turnRight@mR^0,w,c
  4036   0028BA  26D9               	addwf	fsr2l,f,c
  4037   0028BC  5022               	movf	(turnRight@mR+1)^0,w,c
  4038   0028BE  22DA               	addwfc	fsr2h,f,c
  4039   0028C0  6ADF               	clrf	indf2,c
  4040   0028C2                     
  4041                           ;dc_motor.c: 403:     int i;;dc_motor.c: 404:     int cur_power;;dc_motor.c: 405:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  4042   0028C2  0E00               	movlw	0
  4043   0028C4  6E2C               	movwf	(turnRight@cur_power+1)^0,c
  4044   0028C6  0E01               	movlw	1
  4045   0028C8  6E2B               	movwf	turnRight@cur_power^0,c
  4046   0028CA  EFB1  F014         	goto	l2579
  4047   0028CE                     l2565:
  4048                           
  4049                           ;dc_motor.c: 406:         mL->power = cur_power+mL->compensation;
  4050   0028CE  EE20 F009          	lfsr	2,9
  4051   0028D2  501F               	movf	turnRight@mL^0,w,c
  4052   0028D4  26D9               	addwf	fsr2l,f,c
  4053   0028D6  5020               	movf	(turnRight@mL+1)^0,w,c
  4054   0028D8  22DA               	addwfc	fsr2h,f,c
  4055   0028DA  50DF               	movf	indf2,w,c
  4056   0028DC  242B               	addwf	turnRight@cur_power^0,w,c
  4057   0028DE  C01F  FFD9         	movff	turnRight@mL,fsr2l
  4058   0028E2  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  4059   0028E6  6EDF               	movwf	indf2,c
  4060                           
  4061                           ;dc_motor.c: 407:         mR->power = cur_power+mR->compensation;
  4062   0028E8  EE20 F009          	lfsr	2,9
  4063   0028EC  5021               	movf	turnRight@mR^0,w,c
  4064   0028EE  26D9               	addwf	fsr2l,f,c
  4065   0028F0  5022               	movf	(turnRight@mR+1)^0,w,c
  4066   0028F2  22DA               	addwfc	fsr2h,f,c
  4067   0028F4  50DF               	movf	indf2,w,c
  4068   0028F6  242B               	addwf	turnRight@cur_power^0,w,c
  4069   0028F8  C021  FFD9         	movff	turnRight@mR,fsr2l
  4070   0028FC  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  4071   002900  6EDF               	movwf	indf2,c
  4072   002902                     
  4073                           ;dc_motor.c: 408:         setMotorPWM(mL);
  4074   002902  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  4075   002906  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  4076   00290A  EC2C  F016         	call	_setMotorPWM	;wreg free
  4077   00290E                     
  4078                           ;dc_motor.c: 409:         setMotorPWM(mR);
  4079   00290E  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  4080   002912  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  4081   002916  EC2C  F016         	call	_setMotorPWM	;wreg free
  4082   00291A                     
  4083                           ;dc_motor.c: 410:         for (i=0;i<turnRamp;i++) {
  4084   00291A  0E00               	movlw	0
  4085   00291C  6E2A               	movwf	(turnRight@i+1)^0,c
  4086   00291E  0E00               	movlw	0
  4087   002920  6E29               	movwf	turnRight@i^0,c
  4088   002922  EF9D  F014         	goto	l569
  4089   002926                     l2573:
  4090                           
  4091                           ;dc_motor.c: 411:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4092   002926  0E68               	movlw	104
  4093   002928  6E26               	movwf	??_turnRight^0,c
  4094   00292A  0EE4               	movlw	228
  4095   00292C                     u2987:
  4096   00292C  2EE8               	decfsz	wreg,f,c
  4097   00292E  D7FE               	bra	u2987
  4098   002930  2E26               	decfsz	??_turnRight^0,f,c
  4099   002932  D7FC               	bra	u2987
  4100   002934  D000               	nop2	
  4101   002936                     
  4102                           ;dc_motor.c: 412:         }
  4103   002936  4A29               	infsnz	turnRight@i^0,f,c
  4104   002938  2A2A               	incf	(turnRight@i+1)^0,f,c
  4105   00293A                     l569:
  4106   00293A  5025               	movf	turnRight@turnRamp^0,w,c
  4107   00293C  6E26               	movwf	??_turnRight^0,c
  4108   00293E  6A27               	clrf	(??_turnRight+1)^0,c
  4109   002940  5026               	movf	??_turnRight^0,w,c
  4110   002942  5C29               	subwf	turnRight@i^0,w,c
  4111   002944  502A               	movf	(turnRight@i+1)^0,w,c
  4112   002946  0A80               	xorlw	128
  4113   002948  6E28               	movwf	(??_turnRight+2)^0,c
  4114   00294A  5027               	movf	(??_turnRight+1)^0,w,c
  4115   00294C  0A80               	xorlw	128
  4116   00294E  5828               	subwfb	(??_turnRight+2)^0,w,c
  4117   002950  A0D8               	btfss	status,0,c
  4118   002952  EFAD  F014         	goto	u1231
  4119   002956  EFAF  F014         	goto	u1230
  4120   00295A                     u1231:
  4121   00295A  EF93  F014         	goto	l2573
  4122   00295E                     u1230:
  4123   00295E                     
  4124                           ;dc_motor.c: 413:     }
  4125   00295E  4A2B               	infsnz	turnRight@cur_power^0,f,c
  4126   002960  2A2C               	incf	(turnRight@cur_power+1)^0,f,c
  4127   002962                     l2579:
  4128   002962  5023               	movf	turnRight@turnSpeed^0,w,c
  4129   002964  6E26               	movwf	??_turnRight^0,c
  4130   002966  6A27               	clrf	(??_turnRight+1)^0,c
  4131   002968  502B               	movf	turnRight@cur_power^0,w,c
  4132   00296A  5C26               	subwf	??_turnRight^0,w,c
  4133   00296C  5027               	movf	(??_turnRight+1)^0,w,c
  4134   00296E  0A80               	xorlw	128
  4135   002970  6E28               	movwf	(??_turnRight+2)^0,c
  4136   002972  502C               	movf	(turnRight@cur_power+1)^0,w,c
  4137   002974  0A80               	xorlw	128
  4138   002976  5828               	subwfb	(??_turnRight+2)^0,w,c
  4139   002978  B0D8               	btfsc	status,0,c
  4140   00297A  EFC1  F014         	goto	u1241
  4141   00297E  EFC3  F014         	goto	u1240
  4142   002982                     u1241:
  4143   002982  EF67  F014         	goto	l2565
  4144   002986                     u1240:
  4145   002986                     
  4146                           ;dc_motor.c: 415:     for (i=0;i<turnDuration;i++) {
  4147   002986  0E00               	movlw	0
  4148   002988  6E2A               	movwf	(turnRight@i+1)^0,c
  4149   00298A  0E00               	movlw	0
  4150   00298C  6E29               	movwf	turnRight@i^0,c
  4151   00298E  EFD3  F014         	goto	l573
  4152   002992                     l2583:
  4153                           
  4154                           ;dc_motor.c: 416:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4155   002992  0E68               	movlw	104
  4156   002994  6E26               	movwf	??_turnRight^0,c
  4157   002996  0EE4               	movlw	228
  4158   002998                     u2997:
  4159   002998  2EE8               	decfsz	wreg,f,c
  4160   00299A  D7FE               	bra	u2997
  4161   00299C  2E26               	decfsz	??_turnRight^0,f,c
  4162   00299E  D7FC               	bra	u2997
  4163   0029A0  D000               	nop2	
  4164   0029A2                     
  4165                           ;dc_motor.c: 417:         }
  4166   0029A2  4A29               	infsnz	turnRight@i^0,f,c
  4167   0029A4  2A2A               	incf	(turnRight@i+1)^0,f,c
  4168   0029A6                     l573:
  4169   0029A6  5024               	movf	turnRight@turnDuration^0,w,c
  4170   0029A8  6E26               	movwf	??_turnRight^0,c
  4171   0029AA  6A27               	clrf	(??_turnRight+1)^0,c
  4172   0029AC  5026               	movf	??_turnRight^0,w,c
  4173   0029AE  5C29               	subwf	turnRight@i^0,w,c
  4174   0029B0  502A               	movf	(turnRight@i+1)^0,w,c
  4175   0029B2  0A80               	xorlw	128
  4176   0029B4  6E28               	movwf	(??_turnRight+2)^0,c
  4177   0029B6  5027               	movf	(??_turnRight+1)^0,w,c
  4178   0029B8  0A80               	xorlw	128
  4179   0029BA  5828               	subwfb	(??_turnRight+2)^0,w,c
  4180   0029BC  A0D8               	btfss	status,0,c
  4181   0029BE  EFE3  F014         	goto	u1251
  4182   0029C2  EFE5  F014         	goto	u1250
  4183   0029C6                     u1251:
  4184   0029C6  EFC9  F014         	goto	l2583
  4185   0029CA                     u1250:
  4186   0029CA                     
  4187                           ;dc_motor.c: 419:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  4188   0029CA  C023  F02B         	movff	turnRight@turnSpeed,turnRight@cur_power
  4189   0029CE  6A2C               	clrf	(turnRight@cur_power+1)^0,c
  4190   0029D0                     l2587:
  4191   0029D0  BE2C               	btfsc	(turnRight@cur_power+1)^0,7,c
  4192   0029D2  EFEF  F014         	goto	u1260
  4193   0029D6  EFED  F014         	goto	u1261
  4194   0029DA                     u1261:
  4195   0029DA  EFF1  F014         	goto	l2591
  4196   0029DE                     u1260:
  4197   0029DE  EF3E  F015         	goto	l581
  4198   0029E2                     l2591:
  4199                           
  4200                           ;dc_motor.c: 420:         mL->power = cur_power+mL->compensation;
  4201   0029E2  EE20 F009          	lfsr	2,9
  4202   0029E6  501F               	movf	turnRight@mL^0,w,c
  4203   0029E8  26D9               	addwf	fsr2l,f,c
  4204   0029EA  5020               	movf	(turnRight@mL+1)^0,w,c
  4205   0029EC  22DA               	addwfc	fsr2h,f,c
  4206   0029EE  50DF               	movf	indf2,w,c
  4207   0029F0  242B               	addwf	turnRight@cur_power^0,w,c
  4208   0029F2  C01F  FFD9         	movff	turnRight@mL,fsr2l
  4209   0029F6  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  4210   0029FA  6EDF               	movwf	indf2,c
  4211                           
  4212                           ;dc_motor.c: 421:         mR->power = cur_power+mR->compensation;
  4213   0029FC  EE20 F009          	lfsr	2,9
  4214   002A00  5021               	movf	turnRight@mR^0,w,c
  4215   002A02  26D9               	addwf	fsr2l,f,c
  4216   002A04  5022               	movf	(turnRight@mR+1)^0,w,c
  4217   002A06  22DA               	addwfc	fsr2h,f,c
  4218   002A08  50DF               	movf	indf2,w,c
  4219   002A0A  242B               	addwf	turnRight@cur_power^0,w,c
  4220   002A0C  C021  FFD9         	movff	turnRight@mR,fsr2l
  4221   002A10  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  4222   002A14  6EDF               	movwf	indf2,c
  4223   002A16                     
  4224                           ;dc_motor.c: 422:         setMotorPWM(mL);
  4225   002A16  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  4226   002A1A  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  4227   002A1E  EC2C  F016         	call	_setMotorPWM	;wreg free
  4228   002A22                     
  4229                           ;dc_motor.c: 423:         setMotorPWM(mR);
  4230   002A22  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  4231   002A26  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  4232   002A2A  EC2C  F016         	call	_setMotorPWM	;wreg free
  4233   002A2E                     
  4234                           ;dc_motor.c: 424:         for (i=0;i<turnRamp;i++) {
  4235   002A2E  0E00               	movlw	0
  4236   002A30  6E2A               	movwf	(turnRight@i+1)^0,c
  4237   002A32  0E00               	movlw	0
  4238   002A34  6E29               	movwf	turnRight@i^0,c
  4239   002A36  EF27  F015         	goto	l578
  4240   002A3A                     l2599:
  4241                           
  4242                           ;dc_motor.c: 425:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4243   002A3A  0E68               	movlw	104
  4244   002A3C  6E26               	movwf	??_turnRight^0,c
  4245   002A3E  0EE4               	movlw	228
  4246   002A40                     u3007:
  4247   002A40  2EE8               	decfsz	wreg,f,c
  4248   002A42  D7FE               	bra	u3007
  4249   002A44  2E26               	decfsz	??_turnRight^0,f,c
  4250   002A46  D7FC               	bra	u3007
  4251   002A48  D000               	nop2	
  4252   002A4A                     
  4253                           ;dc_motor.c: 426:         }
  4254   002A4A  4A29               	infsnz	turnRight@i^0,f,c
  4255   002A4C  2A2A               	incf	(turnRight@i+1)^0,f,c
  4256   002A4E                     l578:
  4257   002A4E  5025               	movf	turnRight@turnRamp^0,w,c
  4258   002A50  6E26               	movwf	??_turnRight^0,c
  4259   002A52  6A27               	clrf	(??_turnRight+1)^0,c
  4260   002A54  5026               	movf	??_turnRight^0,w,c
  4261   002A56  5C29               	subwf	turnRight@i^0,w,c
  4262   002A58  502A               	movf	(turnRight@i+1)^0,w,c
  4263   002A5A  0A80               	xorlw	128
  4264   002A5C  6E28               	movwf	(??_turnRight+2)^0,c
  4265   002A5E  5027               	movf	(??_turnRight+1)^0,w,c
  4266   002A60  0A80               	xorlw	128
  4267   002A62  5828               	subwfb	(??_turnRight+2)^0,w,c
  4268   002A64  A0D8               	btfss	status,0,c
  4269   002A66  EF37  F015         	goto	u1271
  4270   002A6A  EF39  F015         	goto	u1270
  4271   002A6E                     u1271:
  4272   002A6E  EF1D  F015         	goto	l2599
  4273   002A72                     u1270:
  4274   002A72                     
  4275                           ;dc_motor.c: 427:     }
  4276   002A72  062B               	decf	turnRight@cur_power^0,f,c
  4277   002A74  A0D8               	btfss	status,0,c
  4278   002A76  062C               	decf	(turnRight@cur_power+1)^0,f,c
  4279   002A78  EFE8  F014         	goto	l2587
  4280   002A7C                     l581:
  4281   002A7C  0012               	return		;funcret
  4282   002A7E                     __end_of_turnRight:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function _turnLeft *****************
  4286 ;; Defined at:
  4287 ;;		line 367 in file "dc_motor.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4290 ;;		 -> main@motorL(10), 
  4291 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4292 ;;		 -> main@motorR(10), 
  4293 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  4294 ;;  turnDuration    1   35[COMRAM] unsigned char 
  4295 ;;  turnRamp        1   36[COMRAM] unsigned char 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  cur_power       2   42[COMRAM] int 
  4298 ;;  i               2   40[COMRAM] int 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4308 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4309 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4310 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4311 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4312 ;;Total ram usage:       14 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 7
  4315 ;; This function calls:
  4316 ;;		_setMotorPWM
  4317 ;; This function is called by:
  4318 ;;		_move
  4319 ;;		_returnHome
  4320 ;;		_lostReturnHome
  4321 ;;		_calibration
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text6
  4326   002A7E                     __ptext6:
  4327                           	callstack 0
  4328   002A7E                     _turnLeft:
  4329                           	callstack 22
  4330   002A7E                     
  4331                           ;dc_motor.c: 367: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 368: {;dc_motor.c: 369:     mL->dire
      +                          ction = 0;
  4332   002A7E  EE20 F001          	lfsr	2,1
  4333   002A82  501F               	movf	turnLeft@mL^0,w,c
  4334   002A84  26D9               	addwf	fsr2l,f,c
  4335   002A86  5020               	movf	(turnLeft@mL+1)^0,w,c
  4336   002A88  22DA               	addwfc	fsr2h,f,c
  4337   002A8A  6ADF               	clrf	indf2,c
  4338                           
  4339                           ;dc_motor.c: 370:     mR->direction = 1;
  4340   002A8C  EE20 F001          	lfsr	2,1
  4341   002A90  5021               	movf	turnLeft@mR^0,w,c
  4342   002A92  26D9               	addwf	fsr2l,f,c
  4343   002A94  5022               	movf	(turnLeft@mR+1)^0,w,c
  4344   002A96  22DA               	addwfc	fsr2h,f,c
  4345   002A98  0E01               	movlw	1
  4346   002A9A  6EDF               	movwf	indf2,c
  4347   002A9C                     
  4348                           ;dc_motor.c: 371:     int i;;dc_motor.c: 372:     int cur_power;;dc_motor.c: 373:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  4349   002A9C  0E00               	movlw	0
  4350   002A9E  6E2C               	movwf	(turnLeft@cur_power+1)^0,c
  4351   002AA0  0E01               	movlw	1
  4352   002AA2  6E2B               	movwf	turnLeft@cur_power^0,c
  4353   002AA4  EF9E  F015         	goto	l2625
  4354   002AA8                     l2611:
  4355                           
  4356                           ;dc_motor.c: 374:         mL->power = cur_power+mL->compensation;
  4357   002AA8  EE20 F009          	lfsr	2,9
  4358   002AAC  501F               	movf	turnLeft@mL^0,w,c
  4359   002AAE  26D9               	addwf	fsr2l,f,c
  4360   002AB0  5020               	movf	(turnLeft@mL+1)^0,w,c
  4361   002AB2  22DA               	addwfc	fsr2h,f,c
  4362   002AB4  50DF               	movf	indf2,w,c
  4363   002AB6  242B               	addwf	turnLeft@cur_power^0,w,c
  4364   002AB8  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  4365   002ABC  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  4366   002AC0  6EDF               	movwf	indf2,c
  4367                           
  4368                           ;dc_motor.c: 375:         mR->power = cur_power+mR->compensation;
  4369   002AC2  EE20 F009          	lfsr	2,9
  4370   002AC6  5021               	movf	turnLeft@mR^0,w,c
  4371   002AC8  26D9               	addwf	fsr2l,f,c
  4372   002ACA  5022               	movf	(turnLeft@mR+1)^0,w,c
  4373   002ACC  22DA               	addwfc	fsr2h,f,c
  4374   002ACE  50DF               	movf	indf2,w,c
  4375   002AD0  242B               	addwf	turnLeft@cur_power^0,w,c
  4376   002AD2  C021  FFD9         	movff	turnLeft@mR,fsr2l
  4377   002AD6  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  4378   002ADA  6EDF               	movwf	indf2,c
  4379   002ADC                     
  4380                           ;dc_motor.c: 376:         setMotorPWM(mL);
  4381   002ADC  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  4382   002AE0  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  4383   002AE4  EC2C  F016         	call	_setMotorPWM	;wreg free
  4384   002AE8                     
  4385                           ;dc_motor.c: 377:         setMotorPWM(mR);
  4386   002AE8  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  4387   002AEC  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  4388   002AF0  EC2C  F016         	call	_setMotorPWM	;wreg free
  4389   002AF4                     
  4390                           ;dc_motor.c: 378:         for (i=0;i<turnRamp;i++) {
  4391   002AF4  0E00               	movlw	0
  4392   002AF6  6E2A               	movwf	(turnLeft@i+1)^0,c
  4393   002AF8  0E00               	movlw	0
  4394   002AFA  6E29               	movwf	turnLeft@i^0,c
  4395   002AFC  EF8A  F015         	goto	l552
  4396   002B00                     l2619:
  4397                           
  4398                           ;dc_motor.c: 379:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4399   002B00  0E68               	movlw	104
  4400   002B02  6E26               	movwf	??_turnLeft^0,c
  4401   002B04  0EE4               	movlw	228
  4402   002B06                     u3017:
  4403   002B06  2EE8               	decfsz	wreg,f,c
  4404   002B08  D7FE               	bra	u3017
  4405   002B0A  2E26               	decfsz	??_turnLeft^0,f,c
  4406   002B0C  D7FC               	bra	u3017
  4407   002B0E  D000               	nop2	
  4408   002B10                     
  4409                           ;dc_motor.c: 380:         }
  4410   002B10  4A29               	infsnz	turnLeft@i^0,f,c
  4411   002B12  2A2A               	incf	(turnLeft@i+1)^0,f,c
  4412   002B14                     l552:
  4413   002B14  5025               	movf	turnLeft@turnRamp^0,w,c
  4414   002B16  6E26               	movwf	??_turnLeft^0,c
  4415   002B18  6A27               	clrf	(??_turnLeft+1)^0,c
  4416   002B1A  5026               	movf	??_turnLeft^0,w,c
  4417   002B1C  5C29               	subwf	turnLeft@i^0,w,c
  4418   002B1E  502A               	movf	(turnLeft@i+1)^0,w,c
  4419   002B20  0A80               	xorlw	128
  4420   002B22  6E28               	movwf	(??_turnLeft+2)^0,c
  4421   002B24  5027               	movf	(??_turnLeft+1)^0,w,c
  4422   002B26  0A80               	xorlw	128
  4423   002B28  5828               	subwfb	(??_turnLeft+2)^0,w,c
  4424   002B2A  A0D8               	btfss	status,0,c
  4425   002B2C  EF9A  F015         	goto	u1281
  4426   002B30  EF9C  F015         	goto	u1280
  4427   002B34                     u1281:
  4428   002B34  EF80  F015         	goto	l2619
  4429   002B38                     u1280:
  4430   002B38                     
  4431                           ;dc_motor.c: 381:     }
  4432   002B38  4A2B               	infsnz	turnLeft@cur_power^0,f,c
  4433   002B3A  2A2C               	incf	(turnLeft@cur_power+1)^0,f,c
  4434   002B3C                     l2625:
  4435   002B3C  5023               	movf	turnLeft@turnSpeed^0,w,c
  4436   002B3E  6E26               	movwf	??_turnLeft^0,c
  4437   002B40  6A27               	clrf	(??_turnLeft+1)^0,c
  4438   002B42  502B               	movf	turnLeft@cur_power^0,w,c
  4439   002B44  5C26               	subwf	??_turnLeft^0,w,c
  4440   002B46  5027               	movf	(??_turnLeft+1)^0,w,c
  4441   002B48  0A80               	xorlw	128
  4442   002B4A  6E28               	movwf	(??_turnLeft+2)^0,c
  4443   002B4C  502C               	movf	(turnLeft@cur_power+1)^0,w,c
  4444   002B4E  0A80               	xorlw	128
  4445   002B50  5828               	subwfb	(??_turnLeft+2)^0,w,c
  4446   002B52  B0D8               	btfsc	status,0,c
  4447   002B54  EFAE  F015         	goto	u1291
  4448   002B58  EFB0  F015         	goto	u1290
  4449   002B5C                     u1291:
  4450   002B5C  EF54  F015         	goto	l2611
  4451   002B60                     u1290:
  4452   002B60                     
  4453                           ;dc_motor.c: 383:     for (i=0;i<turnDuration;i++) {
  4454   002B60  0E00               	movlw	0
  4455   002B62  6E2A               	movwf	(turnLeft@i+1)^0,c
  4456   002B64  0E00               	movlw	0
  4457   002B66  6E29               	movwf	turnLeft@i^0,c
  4458   002B68  EFC0  F015         	goto	l556
  4459   002B6C                     l2629:
  4460                           
  4461                           ;dc_motor.c: 384:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4462   002B6C  0E68               	movlw	104
  4463   002B6E  6E26               	movwf	??_turnLeft^0,c
  4464   002B70  0EE4               	movlw	228
  4465   002B72                     u3027:
  4466   002B72  2EE8               	decfsz	wreg,f,c
  4467   002B74  D7FE               	bra	u3027
  4468   002B76  2E26               	decfsz	??_turnLeft^0,f,c
  4469   002B78  D7FC               	bra	u3027
  4470   002B7A  D000               	nop2	
  4471   002B7C                     
  4472                           ;dc_motor.c: 385:         }
  4473   002B7C  4A29               	infsnz	turnLeft@i^0,f,c
  4474   002B7E  2A2A               	incf	(turnLeft@i+1)^0,f,c
  4475   002B80                     l556:
  4476   002B80  5024               	movf	turnLeft@turnDuration^0,w,c
  4477   002B82  6E26               	movwf	??_turnLeft^0,c
  4478   002B84  6A27               	clrf	(??_turnLeft+1)^0,c
  4479   002B86  5026               	movf	??_turnLeft^0,w,c
  4480   002B88  5C29               	subwf	turnLeft@i^0,w,c
  4481   002B8A  502A               	movf	(turnLeft@i+1)^0,w,c
  4482   002B8C  0A80               	xorlw	128
  4483   002B8E  6E28               	movwf	(??_turnLeft+2)^0,c
  4484   002B90  5027               	movf	(??_turnLeft+1)^0,w,c
  4485   002B92  0A80               	xorlw	128
  4486   002B94  5828               	subwfb	(??_turnLeft+2)^0,w,c
  4487   002B96  A0D8               	btfss	status,0,c
  4488   002B98  EFD0  F015         	goto	u1301
  4489   002B9C  EFD2  F015         	goto	u1300
  4490   002BA0                     u1301:
  4491   002BA0  EFB6  F015         	goto	l2629
  4492   002BA4                     u1300:
  4493   002BA4                     
  4494                           ;dc_motor.c: 387:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  4495   002BA4  C023  F02B         	movff	turnLeft@turnSpeed,turnLeft@cur_power
  4496   002BA8  6A2C               	clrf	(turnLeft@cur_power+1)^0,c
  4497   002BAA                     l2633:
  4498   002BAA  BE2C               	btfsc	(turnLeft@cur_power+1)^0,7,c
  4499   002BAC  EFDC  F015         	goto	u1310
  4500   002BB0  EFDA  F015         	goto	u1311
  4501   002BB4                     u1311:
  4502   002BB4  EFDE  F015         	goto	l2637
  4503   002BB8                     u1310:
  4504   002BB8  EF2B  F016         	goto	l564
  4505   002BBC                     l2637:
  4506                           
  4507                           ;dc_motor.c: 388:         mL->power = cur_power+mL->compensation;
  4508   002BBC  EE20 F009          	lfsr	2,9
  4509   002BC0  501F               	movf	turnLeft@mL^0,w,c
  4510   002BC2  26D9               	addwf	fsr2l,f,c
  4511   002BC4  5020               	movf	(turnLeft@mL+1)^0,w,c
  4512   002BC6  22DA               	addwfc	fsr2h,f,c
  4513   002BC8  50DF               	movf	indf2,w,c
  4514   002BCA  242B               	addwf	turnLeft@cur_power^0,w,c
  4515   002BCC  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  4516   002BD0  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  4517   002BD4  6EDF               	movwf	indf2,c
  4518                           
  4519                           ;dc_motor.c: 389:         mR->power = cur_power+mR->compensation;
  4520   002BD6  EE20 F009          	lfsr	2,9
  4521   002BDA  5021               	movf	turnLeft@mR^0,w,c
  4522   002BDC  26D9               	addwf	fsr2l,f,c
  4523   002BDE  5022               	movf	(turnLeft@mR+1)^0,w,c
  4524   002BE0  22DA               	addwfc	fsr2h,f,c
  4525   002BE2  50DF               	movf	indf2,w,c
  4526   002BE4  242B               	addwf	turnLeft@cur_power^0,w,c
  4527   002BE6  C021  FFD9         	movff	turnLeft@mR,fsr2l
  4528   002BEA  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  4529   002BEE  6EDF               	movwf	indf2,c
  4530   002BF0                     
  4531                           ;dc_motor.c: 390:         setMotorPWM(mL);
  4532   002BF0  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  4533   002BF4  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  4534   002BF8  EC2C  F016         	call	_setMotorPWM	;wreg free
  4535   002BFC                     
  4536                           ;dc_motor.c: 391:         setMotorPWM(mR);
  4537   002BFC  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  4538   002C00  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  4539   002C04  EC2C  F016         	call	_setMotorPWM	;wreg free
  4540   002C08                     
  4541                           ;dc_motor.c: 392:         for (i=0;i<turnRamp;i++) {
  4542   002C08  0E00               	movlw	0
  4543   002C0A  6E2A               	movwf	(turnLeft@i+1)^0,c
  4544   002C0C  0E00               	movlw	0
  4545   002C0E  6E29               	movwf	turnLeft@i^0,c
  4546   002C10  EF14  F016         	goto	l561
  4547   002C14                     l2645:
  4548                           
  4549                           ;dc_motor.c: 393:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4550   002C14  0E68               	movlw	104
  4551   002C16  6E26               	movwf	??_turnLeft^0,c
  4552   002C18  0EE4               	movlw	228
  4553   002C1A                     u3037:
  4554   002C1A  2EE8               	decfsz	wreg,f,c
  4555   002C1C  D7FE               	bra	u3037
  4556   002C1E  2E26               	decfsz	??_turnLeft^0,f,c
  4557   002C20  D7FC               	bra	u3037
  4558   002C22  D000               	nop2	
  4559   002C24                     
  4560                           ;dc_motor.c: 394:         }
  4561   002C24  4A29               	infsnz	turnLeft@i^0,f,c
  4562   002C26  2A2A               	incf	(turnLeft@i+1)^0,f,c
  4563   002C28                     l561:
  4564   002C28  5025               	movf	turnLeft@turnRamp^0,w,c
  4565   002C2A  6E26               	movwf	??_turnLeft^0,c
  4566   002C2C  6A27               	clrf	(??_turnLeft+1)^0,c
  4567   002C2E  5026               	movf	??_turnLeft^0,w,c
  4568   002C30  5C29               	subwf	turnLeft@i^0,w,c
  4569   002C32  502A               	movf	(turnLeft@i+1)^0,w,c
  4570   002C34  0A80               	xorlw	128
  4571   002C36  6E28               	movwf	(??_turnLeft+2)^0,c
  4572   002C38  5027               	movf	(??_turnLeft+1)^0,w,c
  4573   002C3A  0A80               	xorlw	128
  4574   002C3C  5828               	subwfb	(??_turnLeft+2)^0,w,c
  4575   002C3E  A0D8               	btfss	status,0,c
  4576   002C40  EF24  F016         	goto	u1321
  4577   002C44  EF26  F016         	goto	u1320
  4578   002C48                     u1321:
  4579   002C48  EF0A  F016         	goto	l2645
  4580   002C4C                     u1320:
  4581   002C4C                     
  4582                           ;dc_motor.c: 395:     }
  4583   002C4C  062B               	decf	turnLeft@cur_power^0,f,c
  4584   002C4E  A0D8               	btfss	status,0,c
  4585   002C50  062C               	decf	(turnLeft@cur_power+1)^0,f,c
  4586   002C52  EFD5  F015         	goto	l2633
  4587   002C56                     l564:
  4588   002C56  0012               	return		;funcret
  4589   002C58                     __end_of_turnLeft:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _stop *****************
  4593 ;; Defined at:
  4594 ;;		line 347 in file "dc_motor.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4597 ;;		 -> main@motorL(10), 
  4598 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4599 ;;		 -> main@motorR(10), 
  4600 ;;  straightRamp    1   34[COMRAM] unsigned char 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  cur_power       2   40[COMRAM] int 
  4603 ;;  i               2   38[COMRAM] int 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4613 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;Total ram usage:       12 bytes
  4618 ;; Hardware stack levels used: 1
  4619 ;; Hardware stack levels required when called: 7
  4620 ;; This function calls:
  4621 ;;		_setMotorPWM
  4622 ;; This function is called by:
  4623 ;;		_main
  4624 ;;		_returnHome
  4625 ;;		_lostReturnHome
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text7
  4630   00301A                     __ptext7:
  4631                           	callstack 0
  4632   00301A                     _stop:
  4633                           	callstack 23
  4634   00301A                     
  4635                           ;dc_motor.c: 347: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 348: {;dc_motor.c: 349:     mL->direction = 1;
  4636   00301A  EE20 F001          	lfsr	2,1
  4637   00301E  501F               	movf	stop@mL^0,w,c
  4638   003020  26D9               	addwf	fsr2l,f,c
  4639   003022  5020               	movf	(stop@mL+1)^0,w,c
  4640   003024  22DA               	addwfc	fsr2h,f,c
  4641   003026  0E01               	movlw	1
  4642   003028  6EDF               	movwf	indf2,c
  4643                           
  4644                           ;dc_motor.c: 350:     mR->direction = 1;
  4645   00302A  EE20 F001          	lfsr	2,1
  4646   00302E  5021               	movf	stop@mR^0,w,c
  4647   003030  26D9               	addwf	fsr2l,f,c
  4648   003032  5022               	movf	(stop@mR+1)^0,w,c
  4649   003034  22DA               	addwfc	fsr2h,f,c
  4650   003036  0E01               	movlw	1
  4651   003038  6EDF               	movwf	indf2,c
  4652                           
  4653                           ;dc_motor.c: 351:     int i;;dc_motor.c: 352:     int cur_power;;dc_motor.c: 353:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  4654   00303A  C01F  FFD9         	movff	stop@mL,fsr2l
  4655   00303E  C020  FFDA         	movff	stop@mL+1,fsr2h
  4656   003042  50DF               	movf	indf2,w,c
  4657   003044  6E24               	movwf	??_stop^0,c
  4658   003046  EE20 F009          	lfsr	2,9
  4659   00304A  501F               	movf	stop@mL^0,w,c
  4660   00304C  26D9               	addwf	fsr2l,f,c
  4661   00304E  5020               	movf	(stop@mL+1)^0,w,c
  4662   003050  22DA               	addwfc	fsr2h,f,c
  4663   003052  50DF               	movf	indf2,w,c
  4664   003054  6E25               	movwf	(??_stop+1)^0,c
  4665   003056  5025               	movf	(??_stop+1)^0,w,c
  4666   003058  5C24               	subwf	??_stop^0,w,c
  4667   00305A  6E29               	movwf	stop@cur_power^0,c
  4668   00305C  6A2A               	clrf	(stop@cur_power+1)^0,c
  4669   00305E  A0D8               	btfss	status,0,c
  4670   003060  062A               	decf	(stop@cur_power+1)^0,f,c
  4671   003062                     l2537:
  4672   003062  BE2A               	btfsc	(stop@cur_power+1)^0,7,c
  4673   003064  EF38  F018         	goto	u1210
  4674   003068  EF36  F018         	goto	u1211
  4675   00306C                     u1211:
  4676   00306C  EF3A  F018         	goto	l2541
  4677   003070                     u1210:
  4678   003070  EF87  F018         	goto	l2557
  4679   003074                     l2541:
  4680                           
  4681                           ;dc_motor.c: 354:         mL->power = cur_power+mL->compensation;
  4682   003074  EE20 F009          	lfsr	2,9
  4683   003078  501F               	movf	stop@mL^0,w,c
  4684   00307A  26D9               	addwf	fsr2l,f,c
  4685   00307C  5020               	movf	(stop@mL+1)^0,w,c
  4686   00307E  22DA               	addwfc	fsr2h,f,c
  4687   003080  50DF               	movf	indf2,w,c
  4688   003082  2429               	addwf	stop@cur_power^0,w,c
  4689   003084  C01F  FFD9         	movff	stop@mL,fsr2l
  4690   003088  C020  FFDA         	movff	stop@mL+1,fsr2h
  4691   00308C  6EDF               	movwf	indf2,c
  4692                           
  4693                           ;dc_motor.c: 355:         mR->power = cur_power+mR->compensation;
  4694   00308E  EE20 F009          	lfsr	2,9
  4695   003092  5021               	movf	stop@mR^0,w,c
  4696   003094  26D9               	addwf	fsr2l,f,c
  4697   003096  5022               	movf	(stop@mR+1)^0,w,c
  4698   003098  22DA               	addwfc	fsr2h,f,c
  4699   00309A  50DF               	movf	indf2,w,c
  4700   00309C  2429               	addwf	stop@cur_power^0,w,c
  4701   00309E  C021  FFD9         	movff	stop@mR,fsr2l
  4702   0030A2  C022  FFDA         	movff	stop@mR+1,fsr2h
  4703   0030A6  6EDF               	movwf	indf2,c
  4704   0030A8                     
  4705                           ;dc_motor.c: 356:         setMotorPWM(mL);
  4706   0030A8  C01F  F019         	movff	stop@mL,setMotorPWM@m
  4707   0030AC  C020  F01A         	movff	stop@mL+1,setMotorPWM@m+1
  4708   0030B0  EC2C  F016         	call	_setMotorPWM	;wreg free
  4709   0030B4                     
  4710                           ;dc_motor.c: 357:         setMotorPWM(mR);
  4711   0030B4  C021  F019         	movff	stop@mR,setMotorPWM@m
  4712   0030B8  C022  F01A         	movff	stop@mR+1,setMotorPWM@m+1
  4713   0030BC  EC2C  F016         	call	_setMotorPWM	;wreg free
  4714   0030C0                     
  4715                           ;dc_motor.c: 358:         for (i=0;i<straightRamp;i++) {
  4716   0030C0  0E00               	movlw	0
  4717   0030C2  6E28               	movwf	(stop@i+1)^0,c
  4718   0030C4  0E00               	movlw	0
  4719   0030C6  6E27               	movwf	stop@i^0,c
  4720   0030C8  EF70  F018         	goto	l544
  4721   0030CC                     l2549:
  4722                           
  4723                           ;dc_motor.c: 359:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4724   0030CC  0E68               	movlw	104
  4725   0030CE  6E24               	movwf	??_stop^0,c
  4726   0030D0  0EE4               	movlw	228
  4727   0030D2                     u3047:
  4728   0030D2  2EE8               	decfsz	wreg,f,c
  4729   0030D4  D7FE               	bra	u3047
  4730   0030D6  2E24               	decfsz	??_stop^0,f,c
  4731   0030D8  D7FC               	bra	u3047
  4732   0030DA  D000               	nop2	
  4733   0030DC                     
  4734                           ;dc_motor.c: 360:         }
  4735   0030DC  4A27               	infsnz	stop@i^0,f,c
  4736   0030DE  2A28               	incf	(stop@i+1)^0,f,c
  4737   0030E0                     l544:
  4738   0030E0  5023               	movf	stop@straightRamp^0,w,c
  4739   0030E2  6E24               	movwf	??_stop^0,c
  4740   0030E4  6A25               	clrf	(??_stop+1)^0,c
  4741   0030E6  5024               	movf	??_stop^0,w,c
  4742   0030E8  5C27               	subwf	stop@i^0,w,c
  4743   0030EA  5028               	movf	(stop@i+1)^0,w,c
  4744   0030EC  0A80               	xorlw	128
  4745   0030EE  6E26               	movwf	(??_stop+2)^0,c
  4746   0030F0  5025               	movf	(??_stop+1)^0,w,c
  4747   0030F2  0A80               	xorlw	128
  4748   0030F4  5826               	subwfb	(??_stop+2)^0,w,c
  4749   0030F6  A0D8               	btfss	status,0,c
  4750   0030F8  EF80  F018         	goto	u1221
  4751   0030FC  EF82  F018         	goto	u1220
  4752   003100                     u1221:
  4753   003100  EF66  F018         	goto	l2549
  4754   003104                     u1220:
  4755   003104                     
  4756                           ;dc_motor.c: 361:     }
  4757   003104  0629               	decf	stop@cur_power^0,f,c
  4758   003106  A0D8               	btfss	status,0,c
  4759   003108  062A               	decf	(stop@cur_power+1)^0,f,c
  4760   00310A  EF31  F018         	goto	l2537
  4761   00310E                     l2557:
  4762                           
  4763                           ;dc_motor.c: 362:     mL->power = 0;
  4764   00310E  C01F  FFD9         	movff	stop@mL,fsr2l
  4765   003112  C020  FFDA         	movff	stop@mL+1,fsr2h
  4766   003116  6ADF               	clrf	indf2,c
  4767                           
  4768                           ;dc_motor.c: 363:     mR->power = 0;
  4769   003118  C021  FFD9         	movff	stop@mR,fsr2l
  4770   00311C  C022  FFDA         	movff	stop@mR+1,fsr2h
  4771   003120  6ADF               	clrf	indf2,c
  4772   003122  0012               	return		;funcret
  4773   003124                     __end_of_stop:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _reverseOneSquare *****************
  4777 ;; Defined at:
  4778 ;;		line 448 in file "dc_motor.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4781 ;;		 -> main@motorL(10), 
  4782 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4783 ;;		 -> main@motorR(10), 
  4784 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4785 ;;  reverseDurat    1   35[COMRAM] unsigned char 
  4786 ;;  straightRamp    1   36[COMRAM] unsigned char 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  cur_power       2   42[COMRAM] int 
  4789 ;;  i               2   40[COMRAM] int 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4799 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;Total ram usage:       14 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 7
  4806 ;; This function calls:
  4807 ;;		_setMotorPWM
  4808 ;; This function is called by:
  4809 ;;		_move
  4810 ;;		_returnHome
  4811 ;;		_lostReturnHome
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text8
  4816   0026B8                     __ptext8:
  4817                           	callstack 0
  4818   0026B8                     _reverseOneSquare:
  4819                           	callstack 22
  4820   0026B8                     
  4821                           ;dc_motor.c: 448: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned char reverseDuration, unsigned char straightRamp);dc_motor.c: 449: {;dc_motor.c
      +                          : 450:     mL->direction = 0;
  4822   0026B8  EE20 F001          	lfsr	2,1
  4823   0026BC  501F               	movf	reverseOneSquare@mL^0,w,c
  4824   0026BE  26D9               	addwf	fsr2l,f,c
  4825   0026C0  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4826   0026C2  22DA               	addwfc	fsr2h,f,c
  4827   0026C4  6ADF               	clrf	indf2,c
  4828                           
  4829                           ;dc_motor.c: 451:     mR->direction = 0;
  4830   0026C6  EE20 F001          	lfsr	2,1
  4831   0026CA  5021               	movf	reverseOneSquare@mR^0,w,c
  4832   0026CC  26D9               	addwf	fsr2l,f,c
  4833   0026CE  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4834   0026D0  22DA               	addwfc	fsr2h,f,c
  4835   0026D2  6ADF               	clrf	indf2,c
  4836   0026D4                     
  4837                           ;dc_motor.c: 452:     int i;;dc_motor.c: 453:     int cur_power;;dc_motor.c: 454:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4838   0026D4  0E00               	movlw	0
  4839   0026D6  6E2C               	movwf	(reverseOneSquare@cur_power+1)^0,c
  4840   0026D8  0E01               	movlw	1
  4841   0026DA  6E2B               	movwf	reverseOneSquare@cur_power^0,c
  4842   0026DC  EFBA  F013         	goto	l2671
  4843   0026E0                     l2657:
  4844                           
  4845                           ;dc_motor.c: 455:         mL->power = cur_power+mL->compensation;
  4846   0026E0  EE20 F009          	lfsr	2,9
  4847   0026E4  501F               	movf	reverseOneSquare@mL^0,w,c
  4848   0026E6  26D9               	addwf	fsr2l,f,c
  4849   0026E8  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4850   0026EA  22DA               	addwfc	fsr2h,f,c
  4851   0026EC  50DF               	movf	indf2,w,c
  4852   0026EE  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4853   0026F0  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4854   0026F4  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4855   0026F8  6EDF               	movwf	indf2,c
  4856                           
  4857                           ;dc_motor.c: 456:         mR->power = cur_power+mR->compensation;
  4858   0026FA  EE20 F009          	lfsr	2,9
  4859   0026FE  5021               	movf	reverseOneSquare@mR^0,w,c
  4860   002700  26D9               	addwf	fsr2l,f,c
  4861   002702  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4862   002704  22DA               	addwfc	fsr2h,f,c
  4863   002706  50DF               	movf	indf2,w,c
  4864   002708  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4865   00270A  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4866   00270E  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4867   002712  6EDF               	movwf	indf2,c
  4868   002714                     
  4869                           ;dc_motor.c: 457:         setMotorPWM(mL);
  4870   002714  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4871   002718  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4872   00271C  EC2C  F016         	call	_setMotorPWM	;wreg free
  4873   002720                     
  4874                           ;dc_motor.c: 458:         setMotorPWM(mR);
  4875   002720  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4876   002724  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4877   002728  EC2C  F016         	call	_setMotorPWM	;wreg free
  4878   00272C                     
  4879                           ;dc_motor.c: 459:         for (i=0;i<straightRamp;i++) {
  4880   00272C  0E00               	movlw	0
  4881   00272E  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4882   002730  0E00               	movlw	0
  4883   002732  6E29               	movwf	reverseOneSquare@i^0,c
  4884   002734  EFA6  F013         	goto	l595
  4885   002738                     l2665:
  4886                           
  4887                           ;dc_motor.c: 460:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4888   002738  0E68               	movlw	104
  4889   00273A  6E26               	movwf	??_reverseOneSquare^0,c
  4890   00273C  0EE4               	movlw	228
  4891   00273E                     u3057:
  4892   00273E  2EE8               	decfsz	wreg,f,c
  4893   002740  D7FE               	bra	u3057
  4894   002742  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4895   002744  D7FC               	bra	u3057
  4896   002746  D000               	nop2	
  4897   002748                     
  4898                           ;dc_motor.c: 461:         }
  4899   002748  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4900   00274A  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4901   00274C                     l595:
  4902   00274C  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4903   00274E  6E26               	movwf	??_reverseOneSquare^0,c
  4904   002750  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4905   002752  5026               	movf	??_reverseOneSquare^0,w,c
  4906   002754  5C29               	subwf	reverseOneSquare@i^0,w,c
  4907   002756  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4908   002758  0A80               	xorlw	128
  4909   00275A  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4910   00275C  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4911   00275E  0A80               	xorlw	128
  4912   002760  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4913   002762  A0D8               	btfss	status,0,c
  4914   002764  EFB6  F013         	goto	u1331
  4915   002768  EFB8  F013         	goto	u1330
  4916   00276C                     u1331:
  4917   00276C  EF9C  F013         	goto	l2665
  4918   002770                     u1330:
  4919   002770                     
  4920                           ;dc_motor.c: 462:     }
  4921   002770  4A2B               	infsnz	reverseOneSquare@cur_power^0,f,c
  4922   002772  2A2C               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  4923   002774                     l2671:
  4924   002774  5023               	movf	reverseOneSquare@straightSpeed^0,w,c
  4925   002776  6E26               	movwf	??_reverseOneSquare^0,c
  4926   002778  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4927   00277A  502B               	movf	reverseOneSquare@cur_power^0,w,c
  4928   00277C  5C26               	subwf	??_reverseOneSquare^0,w,c
  4929   00277E  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4930   002780  0A80               	xorlw	128
  4931   002782  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4932   002784  502C               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  4933   002786  0A80               	xorlw	128
  4934   002788  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4935   00278A  B0D8               	btfsc	status,0,c
  4936   00278C  EFCA  F013         	goto	u1341
  4937   002790  EFCC  F013         	goto	u1340
  4938   002794                     u1341:
  4939   002794  EF70  F013         	goto	l2657
  4940   002798                     u1340:
  4941   002798                     
  4942                           ;dc_motor.c: 464:     for (i=0;i<reverseDuration;i++) {
  4943   002798  0E00               	movlw	0
  4944   00279A  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4945   00279C  0E00               	movlw	0
  4946   00279E  6E29               	movwf	reverseOneSquare@i^0,c
  4947   0027A0  EFDC  F013         	goto	l599
  4948   0027A4                     l2675:
  4949                           
  4950                           ;dc_motor.c: 465:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4951   0027A4  0E68               	movlw	104
  4952   0027A6  6E26               	movwf	??_reverseOneSquare^0,c
  4953   0027A8  0EE4               	movlw	228
  4954   0027AA                     u3067:
  4955   0027AA  2EE8               	decfsz	wreg,f,c
  4956   0027AC  D7FE               	bra	u3067
  4957   0027AE  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4958   0027B0  D7FC               	bra	u3067
  4959   0027B2  D000               	nop2	
  4960   0027B4                     
  4961                           ;dc_motor.c: 466:         }
  4962   0027B4  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4963   0027B6  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4964   0027B8                     l599:
  4965   0027B8  5024               	movf	reverseOneSquare@reverseDuration^0,w,c
  4966   0027BA  6E26               	movwf	??_reverseOneSquare^0,c
  4967   0027BC  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4968   0027BE  5026               	movf	??_reverseOneSquare^0,w,c
  4969   0027C0  5C29               	subwf	reverseOneSquare@i^0,w,c
  4970   0027C2  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4971   0027C4  0A80               	xorlw	128
  4972   0027C6  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4973   0027C8  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4974   0027CA  0A80               	xorlw	128
  4975   0027CC  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4976   0027CE  A0D8               	btfss	status,0,c
  4977   0027D0  EFEC  F013         	goto	u1351
  4978   0027D4  EFEE  F013         	goto	u1350
  4979   0027D8                     u1351:
  4980   0027D8  EFD2  F013         	goto	l2675
  4981   0027DC                     u1350:
  4982   0027DC                     
  4983                           ;dc_motor.c: 468:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  4984   0027DC  C023  F02B         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  4985   0027E0  6A2C               	clrf	(reverseOneSquare@cur_power+1)^0,c
  4986   0027E2                     l2679:
  4987   0027E2  BE2C               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  4988   0027E4  EFF8  F013         	goto	u1360
  4989   0027E8  EFF6  F013         	goto	u1361
  4990   0027EC                     u1361:
  4991   0027EC  EFFA  F013         	goto	l2683
  4992   0027F0                     u1360:
  4993   0027F0  EF47  F014         	goto	l2699
  4994   0027F4                     l2683:
  4995                           
  4996                           ;dc_motor.c: 469:         mL->power = cur_power+mL->compensation;
  4997   0027F4  EE20 F009          	lfsr	2,9
  4998   0027F8  501F               	movf	reverseOneSquare@mL^0,w,c
  4999   0027FA  26D9               	addwf	fsr2l,f,c
  5000   0027FC  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  5001   0027FE  22DA               	addwfc	fsr2h,f,c
  5002   002800  50DF               	movf	indf2,w,c
  5003   002802  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  5004   002804  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5005   002808  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5006   00280C  6EDF               	movwf	indf2,c
  5007                           
  5008                           ;dc_motor.c: 470:         mR->power = cur_power+mR->compensation;
  5009   00280E  EE20 F009          	lfsr	2,9
  5010   002812  5021               	movf	reverseOneSquare@mR^0,w,c
  5011   002814  26D9               	addwf	fsr2l,f,c
  5012   002816  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  5013   002818  22DA               	addwfc	fsr2h,f,c
  5014   00281A  50DF               	movf	indf2,w,c
  5015   00281C  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  5016   00281E  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5017   002822  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5018   002826  6EDF               	movwf	indf2,c
  5019   002828                     
  5020                           ;dc_motor.c: 471:         setMotorPWM(mL);
  5021   002828  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  5022   00282C  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  5023   002830  EC2C  F016         	call	_setMotorPWM	;wreg free
  5024   002834                     
  5025                           ;dc_motor.c: 472:         setMotorPWM(mR);
  5026   002834  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  5027   002838  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  5028   00283C  EC2C  F016         	call	_setMotorPWM	;wreg free
  5029   002840                     
  5030                           ;dc_motor.c: 473:         for (i=0;i<straightRamp;i++) {
  5031   002840  0E00               	movlw	0
  5032   002842  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  5033   002844  0E00               	movlw	0
  5034   002846  6E29               	movwf	reverseOneSquare@i^0,c
  5035   002848  EF30  F014         	goto	l604
  5036   00284C                     l2691:
  5037                           
  5038                           ;dc_motor.c: 474:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5039   00284C  0E68               	movlw	104
  5040   00284E  6E26               	movwf	??_reverseOneSquare^0,c
  5041   002850  0EE4               	movlw	228
  5042   002852                     u3077:
  5043   002852  2EE8               	decfsz	wreg,f,c
  5044   002854  D7FE               	bra	u3077
  5045   002856  2E26               	decfsz	??_reverseOneSquare^0,f,c
  5046   002858  D7FC               	bra	u3077
  5047   00285A  D000               	nop2	
  5048   00285C                     
  5049                           ;dc_motor.c: 475:         }
  5050   00285C  4A29               	infsnz	reverseOneSquare@i^0,f,c
  5051   00285E  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  5052   002860                     l604:
  5053   002860  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  5054   002862  6E26               	movwf	??_reverseOneSquare^0,c
  5055   002864  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  5056   002866  5026               	movf	??_reverseOneSquare^0,w,c
  5057   002868  5C29               	subwf	reverseOneSquare@i^0,w,c
  5058   00286A  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  5059   00286C  0A80               	xorlw	128
  5060   00286E  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  5061   002870  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  5062   002872  0A80               	xorlw	128
  5063   002874  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5064   002876  A0D8               	btfss	status,0,c
  5065   002878  EF40  F014         	goto	u1371
  5066   00287C  EF42  F014         	goto	u1370
  5067   002880                     u1371:
  5068   002880  EF26  F014         	goto	l2691
  5069   002884                     u1370:
  5070   002884                     
  5071                           ;dc_motor.c: 476:     }
  5072   002884  062B               	decf	reverseOneSquare@cur_power^0,f,c
  5073   002886  A0D8               	btfss	status,0,c
  5074   002888  062C               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  5075   00288A  EFF1  F013         	goto	l2679
  5076   00288E                     l2699:
  5077                           
  5078                           ;dc_motor.c: 477:     mL->power = 0;
  5079   00288E  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5080   002892  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5081   002896  6ADF               	clrf	indf2,c
  5082                           
  5083                           ;dc_motor.c: 478:     mR->power = 0;
  5084   002898  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5085   00289C  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5086   0028A0  6ADF               	clrf	indf2,c
  5087   0028A2  0012               	return		;funcret
  5088   0028A4                     __end_of_reverseOneSquare:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function _resetTimer *****************
  5092 ;; Defined at:
  5093 ;;		line 23 in file "timers.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		wreg, status,2
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5111 ;;Total ram usage:        0 bytes
  5112 ;; Hardware stack levels used: 1
  5113 ;; Hardware stack levels required when called: 5
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_main
  5118 ;;		_returnHome
  5119 ;;		_lostReturnHome
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text9
  5124   0038CA                     __ptext9:
  5125                           	callstack 0
  5126   0038CA                     _resetTimer:
  5127                           	callstack 25
  5128   0038CA                     
  5129                           ;timers.c: 25:     TMR0H=0;
  5130   0038CA  0E00               	movlw	0
  5131   0038CC  6ED4               	movwf	212,c	;volatile
  5132                           
  5133                           ;timers.c: 26:     TMR0L=0;
  5134   0038CE  0E00               	movlw	0
  5135   0038D0  6ED3               	movwf	211,c	;volatile
  5136   0038D2  0012               	return		;funcret
  5137   0038D4                     __end_of_resetTimer:
  5138                           	callstack 0
  5139                           
  5140 ;; *************** function _get16bitTMR0val *****************
  5141 ;; Defined at:
  5142 ;;		line 33 in file "timers.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  timer_val       2   19[COMRAM] unsigned int 
  5147 ;;  timer_high      2   17[COMRAM] unsigned int 
  5148 ;;  timer_low       2   15[COMRAM] unsigned int 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  2   11[COMRAM] unsigned int 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5159 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5161 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5162 ;;Total ram usage:       10 bytes
  5163 ;; Hardware stack levels used: 1
  5164 ;; Hardware stack levels required when called: 5
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_main
  5169 ;;		_returnHome
  5170 ;;		_lostReturnHome
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text10
  5175   0036C6                     __ptext10:
  5176                           	callstack 0
  5177   0036C6                     _get16bitTMR0val:
  5178                           	callstack 23
  5179   0036C6                     
  5180                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  5181   0036C6  CFD3 F010          	movff	4051,get16bitTMR0val@timer_low	;volatile
  5182   0036CA  6A11               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  5183                           
  5184                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  5185   0036CC  CFD4 F012          	movff	4052,get16bitTMR0val@timer_high	;volatile
  5186   0036D0  6A13               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  5187   0036D2                     
  5188                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  5189   0036D2  5012               	movf	get16bitTMR0val@timer_high^0,w,c
  5190   0036D4  6E0F               	movwf	(??_get16bitTMR0val+1)^0,c
  5191   0036D6  6A0E               	clrf	??_get16bitTMR0val^0,c
  5192   0036D8  5010               	movf	get16bitTMR0val@timer_low^0,w,c
  5193   0036DA  100E               	iorwf	??_get16bitTMR0val^0,w,c
  5194   0036DC  6E14               	movwf	get16bitTMR0val@timer_val^0,c
  5195   0036DE  5011               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  5196   0036E0  100F               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  5197   0036E2  6E15               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  5198   0036E4                     
  5199                           ;timers.c: 39:     return timer_val;
  5200   0036E4  C014  F00C         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  5201   0036E8  C015  F00D         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  5202   0036EC  0012               	return		;funcret
  5203   0036EE                     __end_of_get16bitTMR0val:
  5204                           	callstack 0
  5205                           
  5206 ;; *************** function _fullSpeedAhead *****************
  5207 ;; Defined at:
  5208 ;;		line 431 in file "dc_motor.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  5211 ;;		 -> main@motorL(10), 
  5212 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  5213 ;;		 -> main@motorR(10), 
  5214 ;;  straightSpee    1   34[COMRAM] unsigned char 
  5215 ;;  straightRamp    1   35[COMRAM] unsigned char 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  cur_power       2   41[COMRAM] int 
  5218 ;;  i               2   39[COMRAM] int 
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      void 
  5221 ;; Registers used:
  5222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5228 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5229 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5231 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;Total ram usage:       13 bytes
  5233 ;; Hardware stack levels used: 1
  5234 ;; Hardware stack levels required when called: 7
  5235 ;; This function calls:
  5236 ;;		_setMotorPWM
  5237 ;; This function is called by:
  5238 ;;		_main
  5239 ;;		_move
  5240 ;;		_returnHome
  5241 ;;		_lostReturnHome
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text11
  5246   003124                     __ptext11:
  5247                           	callstack 0
  5248   003124                     _fullSpeedAhead:
  5249                           	callstack 21
  5250   003124                     
  5251                           ;dc_motor.c: 431: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 432: {;dc_motor.c: 433:     mL->direction = 1;
  5252   003124  EE20 F001          	lfsr	2,1
  5253   003128  501F               	movf	fullSpeedAhead@mL^0,w,c
  5254   00312A  26D9               	addwf	fsr2l,f,c
  5255   00312C  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  5256   00312E  22DA               	addwfc	fsr2h,f,c
  5257   003130  0E01               	movlw	1
  5258   003132  6EDF               	movwf	indf2,c
  5259                           
  5260                           ;dc_motor.c: 434:     mR->direction = 1;
  5261   003134  EE20 F001          	lfsr	2,1
  5262   003138  5021               	movf	fullSpeedAhead@mR^0,w,c
  5263   00313A  26D9               	addwf	fsr2l,f,c
  5264   00313C  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  5265   00313E  22DA               	addwfc	fsr2h,f,c
  5266   003140  0E01               	movlw	1
  5267   003142  6EDF               	movwf	indf2,c
  5268   003144                     
  5269                           ;dc_motor.c: 435:     int i;;dc_motor.c: 436:     int cur_power;;dc_motor.c: 437:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  5270   003144  0E00               	movlw	0
  5271   003146  6E2B               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  5272   003148  0E01               	movlw	1
  5273   00314A  6E2A               	movwf	fullSpeedAhead@cur_power^0,c
  5274   00314C  EFF2  F018         	goto	l2523
  5275   003150                     l2509:
  5276                           
  5277                           ;dc_motor.c: 438:         mL->power = cur_power+mL->compensation;
  5278   003150  EE20 F009          	lfsr	2,9
  5279   003154  501F               	movf	fullSpeedAhead@mL^0,w,c
  5280   003156  26D9               	addwf	fsr2l,f,c
  5281   003158  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  5282   00315A  22DA               	addwfc	fsr2h,f,c
  5283   00315C  50DF               	movf	indf2,w,c
  5284   00315E  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  5285   003160  C01F  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5286   003164  C020  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5287   003168  6EDF               	movwf	indf2,c
  5288                           
  5289                           ;dc_motor.c: 439:         mR->power = cur_power+mR->compensation;
  5290   00316A  EE20 F009          	lfsr	2,9
  5291   00316E  5021               	movf	fullSpeedAhead@mR^0,w,c
  5292   003170  26D9               	addwf	fsr2l,f,c
  5293   003172  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  5294   003174  22DA               	addwfc	fsr2h,f,c
  5295   003176  50DF               	movf	indf2,w,c
  5296   003178  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  5297   00317A  C021  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5298   00317E  C022  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5299   003182  6EDF               	movwf	indf2,c
  5300   003184                     
  5301                           ;dc_motor.c: 440:         setMotorPWM(mL);
  5302   003184  C01F  F019         	movff	fullSpeedAhead@mL,setMotorPWM@m
  5303   003188  C020  F01A         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  5304   00318C  EC2C  F016         	call	_setMotorPWM	;wreg free
  5305   003190                     
  5306                           ;dc_motor.c: 441:         setMotorPWM(mR);
  5307   003190  C021  F019         	movff	fullSpeedAhead@mR,setMotorPWM@m
  5308   003194  C022  F01A         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  5309   003198  EC2C  F016         	call	_setMotorPWM	;wreg free
  5310   00319C                     
  5311                           ;dc_motor.c: 442:         for (i=0;i<straightRamp;i++) {
  5312   00319C  0E00               	movlw	0
  5313   00319E  6E29               	movwf	(fullSpeedAhead@i+1)^0,c
  5314   0031A0  0E00               	movlw	0
  5315   0031A2  6E28               	movwf	fullSpeedAhead@i^0,c
  5316   0031A4  EFDE  F018         	goto	l586
  5317   0031A8                     l2517:
  5318                           
  5319                           ;dc_motor.c: 443:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5320   0031A8  0E68               	movlw	104
  5321   0031AA  6E25               	movwf	??_fullSpeedAhead^0,c
  5322   0031AC  0EE4               	movlw	228
  5323   0031AE                     u3087:
  5324   0031AE  2EE8               	decfsz	wreg,f,c
  5325   0031B0  D7FE               	bra	u3087
  5326   0031B2  2E25               	decfsz	??_fullSpeedAhead^0,f,c
  5327   0031B4  D7FC               	bra	u3087
  5328   0031B6  D000               	nop2	
  5329   0031B8                     
  5330                           ;dc_motor.c: 444:         }
  5331   0031B8  4A28               	infsnz	fullSpeedAhead@i^0,f,c
  5332   0031BA  2A29               	incf	(fullSpeedAhead@i+1)^0,f,c
  5333   0031BC                     l586:
  5334   0031BC  5024               	movf	fullSpeedAhead@straightRamp^0,w,c
  5335   0031BE  6E25               	movwf	??_fullSpeedAhead^0,c
  5336   0031C0  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  5337   0031C2  5025               	movf	??_fullSpeedAhead^0,w,c
  5338   0031C4  5C28               	subwf	fullSpeedAhead@i^0,w,c
  5339   0031C6  5029               	movf	(fullSpeedAhead@i+1)^0,w,c
  5340   0031C8  0A80               	xorlw	128
  5341   0031CA  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  5342   0031CC  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  5343   0031CE  0A80               	xorlw	128
  5344   0031D0  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  5345   0031D2  A0D8               	btfss	status,0,c
  5346   0031D4  EFEE  F018         	goto	u1191
  5347   0031D8  EFF0  F018         	goto	u1190
  5348   0031DC                     u1191:
  5349   0031DC  EFD4  F018         	goto	l2517
  5350   0031E0                     u1190:
  5351   0031E0                     
  5352                           ;dc_motor.c: 445:     }
  5353   0031E0  4A2A               	infsnz	fullSpeedAhead@cur_power^0,f,c
  5354   0031E2  2A2B               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  5355   0031E4                     l2523:
  5356   0031E4  5023               	movf	fullSpeedAhead@straightSpeed^0,w,c
  5357   0031E6  6E25               	movwf	??_fullSpeedAhead^0,c
  5358   0031E8  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  5359   0031EA  502A               	movf	fullSpeedAhead@cur_power^0,w,c
  5360   0031EC  5C25               	subwf	??_fullSpeedAhead^0,w,c
  5361   0031EE  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  5362   0031F0  0A80               	xorlw	128
  5363   0031F2  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  5364   0031F4  502B               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  5365   0031F6  0A80               	xorlw	128
  5366   0031F8  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  5367   0031FA  B0D8               	btfsc	status,0,c
  5368   0031FC  EF02  F019         	goto	u1201
  5369   003200  EF04  F019         	goto	u1200
  5370   003204                     u1201:
  5371   003204  EFA8  F018         	goto	l2509
  5372   003208                     u1200:
  5373   003208  0012               	return		;funcret
  5374   00320A                     __end_of_fullSpeedAhead:
  5375                           	callstack 0
  5376                           
  5377 ;; *************** function _setMotorPWM *****************
  5378 ;; Defined at:
  5379 ;;		line 67 in file "dc_motor.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;  m               2   24[COMRAM] PTR struct DC_motor
  5382 ;;		 -> main@motorR(10), main@motorL(10), 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  negDuty         1   29[COMRAM] unsigned char 
  5385 ;;  posDuty         1   28[COMRAM] unsigned char 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;Total ram usage:        6 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 6
  5402 ;; This function calls:
  5403 ;;		___lwdiv
  5404 ;;		___wmul
  5405 ;; This function is called by:
  5406 ;;		_stop
  5407 ;;		_turnLeft
  5408 ;;		_turnRight
  5409 ;;		_fullSpeedAhead
  5410 ;;		_reverseOneSquare
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text12
  5415   002C58                     __ptext12:
  5416                           	callstack 0
  5417   002C58                     _setMotorPWM:
  5418                           	callstack 23
  5419   002C58                     
  5420                           ;dc_motor.c: 67: void setMotorPWM(DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
  5421   002C58  EE20 F002          	lfsr	2,2
  5422   002C5C  5019               	movf	setMotorPWM@m^0,w,c
  5423   002C5E  26D9               	addwf	fsr2l,f,c
  5424   002C60  501A               	movf	(setMotorPWM@m+1)^0,w,c
  5425   002C62  22DA               	addwfc	fsr2h,f,c
  5426   002C64  50DF               	movf	indf2,w,c
  5427   002C66  B4D8               	btfsc	status,2,c
  5428   002C68  EF38  F016         	goto	u1151
  5429   002C6C  EF3A  F016         	goto	u1150
  5430   002C70                     u1151:
  5431   002C70  EF6E  F016         	goto	l2491
  5432   002C74                     u1150:
  5433   002C74                     
  5434                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  5435   002C74  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  5436   002C78  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5437   002C7C  50DF               	movf	indf2,w,c
  5438   002C7E  6E1B               	movwf	??_setMotorPWM^0,c
  5439   002C80  501B               	movf	??_setMotorPWM^0,w,c
  5440   002C82  6E0C               	movwf	___wmul@multiplier^0,c
  5441   002C84  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  5442   002C86  EE20 F003          	lfsr	2,3
  5443   002C8A  5019               	movf	setMotorPWM@m^0,w,c
  5444   002C8C  26D9               	addwf	fsr2l,f,c
  5445   002C8E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  5446   002C90  22DA               	addwfc	fsr2h,f,c
  5447   002C92  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  5448   002C96  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  5449   002C9A  EC9F  F01B         	call	___wmul	;wreg free
  5450   002C9E  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  5451   002CA2  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  5452   002CA6  0E00               	movlw	0
  5453   002CA8  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  5454   002CAA  0E64               	movlw	100
  5455   002CAC  6E14               	movwf	___lwdiv@divisor^0,c
  5456   002CAE  EC29  F01A         	call	___lwdiv	;wreg free
  5457   002CB2  EE20 F003          	lfsr	2,3
  5458   002CB6  5019               	movf	setMotorPWM@m^0,w,c
  5459   002CB8  26D9               	addwf	fsr2l,f,c
  5460   002CBA  501A               	movf	(setMotorPWM@m+1)^0,w,c
  5461   002CBC  22DA               	addwfc	fsr2h,f,c
  5462   002CBE  50DF               	movf	indf2,w,c
  5463   002CC0  6E1C               	movwf	(??_setMotorPWM+1)^0,c
  5464   002CC2  5012               	movf	?___lwdiv^0,w,c
  5465   002CC4  5C1C               	subwf	(??_setMotorPWM+1)^0,w,c
  5466   002CC6  6E1D               	movwf	setMotorPWM@posDuty^0,c
  5467   002CC8                     
  5468                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
  5469   002CC8  EE20 F003          	lfsr	2,3
  5470   002CCC  5019               	movf	setMotorPWM@m^0,w,c
  5471   002CCE  26D9               	addwf	fsr2l,f,c
  5472   002CD0  501A               	movf	(setMotorPWM@m+1)^0,w,c
  5473   002CD2  22DA               	addwfc	fsr2h,f,c
  5474   002CD4  50DF               	movf	indf2,w,c
  5475   002CD6  6E1E               	movwf	setMotorPWM@negDuty^0,c
  5476                           
  5477                           ;dc_motor.c: 74:     }
  5478   002CD8  EF91  F016         	goto	l2495
  5479   002CDC                     l2491:
  5480                           
  5481                           ;dc_motor.c: 76:         posDuty=0;
  5482   002CDC  0E00               	movlw	0
  5483   002CDE  6E1D               	movwf	setMotorPWM@posDuty^0,c
  5484   002CE0                     
  5485                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  5486   002CE0  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  5487   002CE4  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5488   002CE8  50DF               	movf	indf2,w,c
  5489   002CEA  6E1B               	movwf	??_setMotorPWM^0,c
  5490   002CEC  501B               	movf	??_setMotorPWM^0,w,c
  5491   002CEE  6E0C               	movwf	___wmul@multiplier^0,c
  5492   002CF0  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  5493   002CF2  EE20 F003          	lfsr	2,3
  5494   002CF6  5019               	movf	setMotorPWM@m^0,w,c
  5495   002CF8  26D9               	addwf	fsr2l,f,c
  5496   002CFA  501A               	movf	(setMotorPWM@m+1)^0,w,c
  5497   002CFC  22DA               	addwfc	fsr2h,f,c
  5498   002CFE  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  5499   002D02  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  5500   002D06  EC9F  F01B         	call	___wmul	;wreg free
  5501   002D0A  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  5502   002D0E  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  5503   002D12  0E00               	movlw	0
  5504   002D14  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  5505   002D16  0E64               	movlw	100
  5506   002D18  6E14               	movwf	___lwdiv@divisor^0,c
  5507   002D1A  EC29  F01A         	call	___lwdiv	;wreg free
  5508   002D1E  5012               	movf	?___lwdiv^0,w,c
  5509   002D20  6E1E               	movwf	setMotorPWM@negDuty^0,c
  5510   002D22                     l2495:
  5511                           
  5512                           ;dc_motor.c: 80:     if (m->direction) {
  5513   002D22  EE20 F001          	lfsr	2,1
  5514   002D26  5019               	movf	setMotorPWM@m^0,w,c
  5515   002D28  26D9               	addwf	fsr2l,f,c
  5516   002D2A  501A               	movf	(setMotorPWM@m+1)^0,w,c
  5517   002D2C  22DA               	addwfc	fsr2h,f,c
  5518   002D2E  50DF               	movf	indf2,w,c
  5519   002D30  B4D8               	btfsc	status,2,c
  5520   002D32  EF9D  F016         	goto	u1161
  5521   002D36  EF9F  F016         	goto	u1160
  5522   002D3A                     u1161:
  5523   002D3A  EFC1  F016         	goto	l2499
  5524   002D3E                     u1160:
  5525   002D3E                     
  5526                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=posDuty;
  5527   002D3E  EE20 F005          	lfsr	2,5
  5528   002D42  5019               	movf	setMotorPWM@m^0,w,c
  5529   002D44  26D9               	addwf	fsr2l,f,c
  5530   002D46  501A               	movf	(setMotorPWM@m+1)^0,w,c
  5531   002D48  22DA               	addwfc	fsr2h,f,c
  5532   002D4A  CFDE F01B          	movff	postinc2,??_setMotorPWM
  5533   002D4E  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  5534   002D52  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  5535   002D56  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5536   002D5A  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  5537                           
  5538                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=negDuty;
  5539   002D5E  EE20 F007          	lfsr	2,7
  5540   002D62  5019               	movf	setMotorPWM@m^0,w,c
  5541   002D64  26D9               	addwf	fsr2l,f,c
  5542   002D66  501A               	movf	(setMotorPWM@m+1)^0,w,c
  5543   002D68  22DA               	addwfc	fsr2h,f,c
  5544   002D6A  CFDE F01B          	movff	postinc2,??_setMotorPWM
  5545   002D6E  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  5546   002D72  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  5547   002D76  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5548   002D7A  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  5549                           
  5550                           ;dc_motor.c: 83:     } else {
  5551   002D7E  EFE1  F016         	goto	l470
  5552   002D82                     l2499:
  5553                           
  5554                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=negDuty;
  5555   002D82  EE20 F005          	lfsr	2,5
  5556   002D86  5019               	movf	setMotorPWM@m^0,w,c
  5557   002D88  26D9               	addwf	fsr2l,f,c
  5558   002D8A  501A               	movf	(setMotorPWM@m+1)^0,w,c
  5559   002D8C  22DA               	addwfc	fsr2h,f,c
  5560   002D8E  CFDE F01B          	movff	postinc2,??_setMotorPWM
  5561   002D92  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  5562   002D96  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  5563   002D9A  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5564   002D9E  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  5565                           
  5566                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=posDuty;
  5567   002DA2  EE20 F007          	lfsr	2,7
  5568   002DA6  5019               	movf	setMotorPWM@m^0,w,c
  5569   002DA8  26D9               	addwf	fsr2l,f,c
  5570   002DAA  501A               	movf	(setMotorPWM@m+1)^0,w,c
  5571   002DAC  22DA               	addwfc	fsr2h,f,c
  5572   002DAE  CFDE F01B          	movff	postinc2,??_setMotorPWM
  5573   002DB2  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  5574   002DB6  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  5575   002DBA  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5576   002DBE  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  5577   002DC2                     l470:
  5578   002DC2  0012               	return		;funcret
  5579   002DC4                     __end_of_setMotorPWM:
  5580                           	callstack 0
  5581                           
  5582 ;; *************** function ___wmul *****************
  5583 ;; Defined at:
  5584 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  multiplier      2   11[COMRAM] unsigned int 
  5587 ;;  multiplicand    2   13[COMRAM] unsigned int 
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;  product         2   15[COMRAM] unsigned int 
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  2   11[COMRAM] unsigned int 
  5592 ;; Registers used:
  5593 ;;		wreg, status,2, status,0, prodl, prodh
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5602 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5603 ;;Total ram usage:        6 bytes
  5604 ;; Hardware stack levels used: 1
  5605 ;; Hardware stack levels required when called: 5
  5606 ;; This function calls:
  5607 ;;		Nothing
  5608 ;; This function is called by:
  5609 ;;		_setMotorPWM
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text13
  5614   00373E                     __ptext13:
  5615                           	callstack 0
  5616   00373E                     ___wmul:
  5617                           	callstack 23
  5618   00373E  500C               	movf	___wmul@multiplier^0,w,c
  5619   003740  020E               	mulwf	___wmul@multiplicand^0,c
  5620   003742  CFF3 F010          	movff	prodl,___wmul@product
  5621   003746  CFF4 F011          	movff	prodh,___wmul@product+1
  5622   00374A  500C               	movf	___wmul@multiplier^0,w,c
  5623   00374C  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  5624   00374E  50F3               	movf	243,w,c
  5625   003750  2611               	addwf	(___wmul@product+1)^0,f,c
  5626   003752  500D               	movf	(___wmul@multiplier+1)^0,w,c
  5627   003754  020E               	mulwf	___wmul@multiplicand^0,c
  5628   003756  50F3               	movf	243,w,c
  5629   003758  2611               	addwf	(___wmul@product+1)^0,f,c
  5630   00375A  C010  F00C         	movff	___wmul@product,?___wmul
  5631   00375E  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  5632   003762  0012               	return		;funcret
  5633   003764                     __end_of___wmul:
  5634                           	callstack 0
  5635                           
  5636 ;; *************** function ___lwdiv *****************
  5637 ;; Defined at:
  5638 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;  dividend        2   17[COMRAM] unsigned int 
  5641 ;;  divisor         2   19[COMRAM] unsigned int 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  quotient        2   21[COMRAM] unsigned int 
  5644 ;;  counter         1   23[COMRAM] unsigned char 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  2   17[COMRAM] unsigned int 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5655 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5657 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5658 ;;Total ram usage:        7 bytes
  5659 ;; Hardware stack levels used: 1
  5660 ;; Hardware stack levels required when called: 5
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_setMotorPWM
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text14
  5669   003452                     __ptext14:
  5670                           	callstack 0
  5671   003452                     ___lwdiv:
  5672                           	callstack 23
  5673   003452  0E00               	movlw	0
  5674   003454  6E17               	movwf	(___lwdiv@quotient+1)^0,c
  5675   003456  0E00               	movlw	0
  5676   003458  6E16               	movwf	___lwdiv@quotient^0,c
  5677   00345A  5014               	movf	___lwdiv@divisor^0,w,c
  5678   00345C  1015               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5679   00345E  B4D8               	btfsc	status,2,c
  5680   003460  EF34  F01A         	goto	u1121
  5681   003464  EF36  F01A         	goto	u1120
  5682   003468                     u1121:
  5683   003468  EF5E  F01A         	goto	l1133
  5684   00346C                     u1120:
  5685   00346C  0E01               	movlw	1
  5686   00346E  6E18               	movwf	___lwdiv@counter^0,c
  5687   003470  EF3E  F01A         	goto	l2459
  5688   003474                     l2457:
  5689   003474  90D8               	bcf	status,0,c
  5690   003476  3614               	rlcf	___lwdiv@divisor^0,f,c
  5691   003478  3615               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5692   00347A  2A18               	incf	___lwdiv@counter^0,f,c
  5693   00347C                     l2459:
  5694   00347C  AE15               	btfss	(___lwdiv@divisor+1)^0,7,c
  5695   00347E  EF43  F01A         	goto	u1131
  5696   003482  EF45  F01A         	goto	u1130
  5697   003486                     u1131:
  5698   003486  EF3A  F01A         	goto	l2457
  5699   00348A                     u1130:
  5700   00348A                     l2461:
  5701   00348A  90D8               	bcf	status,0,c
  5702   00348C  3616               	rlcf	___lwdiv@quotient^0,f,c
  5703   00348E  3617               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5704   003490  5014               	movf	___lwdiv@divisor^0,w,c
  5705   003492  5C12               	subwf	___lwdiv@dividend^0,w,c
  5706   003494  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  5707   003496  5813               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5708   003498  A0D8               	btfss	status,0,c
  5709   00349A  EF51  F01A         	goto	u1141
  5710   00349E  EF53  F01A         	goto	u1140
  5711   0034A2                     u1141:
  5712   0034A2  EF58  F01A         	goto	l2469
  5713   0034A6                     u1140:
  5714   0034A6  5014               	movf	___lwdiv@divisor^0,w,c
  5715   0034A8  5E12               	subwf	___lwdiv@dividend^0,f,c
  5716   0034AA  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  5717   0034AC  5A13               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5718   0034AE  8016               	bsf	___lwdiv@quotient^0,0,c
  5719   0034B0                     l2469:
  5720   0034B0  90D8               	bcf	status,0,c
  5721   0034B2  3215               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5722   0034B4  3214               	rrcf	___lwdiv@divisor^0,f,c
  5723   0034B6  2E18               	decfsz	___lwdiv@counter^0,f,c
  5724   0034B8  EF45  F01A         	goto	l2461
  5725   0034BC                     l1133:
  5726   0034BC  C016  F012         	movff	___lwdiv@quotient,?___lwdiv
  5727   0034C0  C017  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5728   0034C4  0012               	return		;funcret
  5729   0034C6                     __end_of___lwdiv:
  5730                           	callstack 0
  5731                           
  5732 ;; *************** function _initUSART4 *****************
  5733 ;; Defined at:
  5734 ;;		line 4 in file "serial.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;		None
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;		None
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;Total ram usage:        0 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; Hardware stack levels required when called: 5
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		_main
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text15
  5763   003834                     __ptext15:
  5764                           	callstack 0
  5765   003834                     _initUSART4:
  5766                           	callstack 25
  5767   003834                     
  5768                           ;serial.c: 7:     RC0PPS = 0x12;
  5769   003834  0E12               	movlw	18
  5770   003836  010E               	movlb	14	; () banked
  5771   003838  6F62               	movwf	98,b	;volatile
  5772                           
  5773                           ;serial.c: 8:     RX4PPS = 0x11;
  5774   00383A  0E11               	movlw	17
  5775   00383C  6F15               	movwf	21,b	;volatile
  5776   00383E                     
  5777                           ; BSR set to: 14
  5778                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  5779   00383E  97E9               	bcf	233,3,b	;volatile
  5780   003840                     
  5781                           ; BSR set to: 14
  5782                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  5783   003840  95E8               	bcf	232,2,b	;volatile
  5784                           
  5785                           ;serial.c: 13:     SP4BRGL = 51;
  5786   003842  0E33               	movlw	51
  5787   003844  6FE5               	movwf	229,b	;volatile
  5788                           
  5789                           ;serial.c: 14:     SP4BRGH = 0;
  5790   003846  0E00               	movlw	0
  5791   003848  6FE6               	movwf	230,b	;volatile
  5792   00384A                     
  5793                           ; BSR set to: 14
  5794                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  5795   00384A  89E7               	bsf	231,4,b	;volatile
  5796   00384C                     
  5797                           ; BSR set to: 14
  5798                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  5799   00384C  8BE8               	bsf	232,5,b	;volatile
  5800   00384E                     
  5801                           ; BSR set to: 14
  5802                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  5803   00384E  8FE7               	bsf	231,7,b	;volatile
  5804   003850                     
  5805                           ; BSR set to: 14
  5806   003850  0012               	return		;funcret
  5807   003852                     __end_of_initUSART4:
  5808                           	callstack 0
  5809                           
  5810 ;; *************** function _initDCmotorsPWM *****************
  5811 ;; Defined at:
  5812 ;;		line 7 in file "dc_motor.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  PWMperiod       2   11[COMRAM] unsigned int 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;		None
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  1    wreg      void 
  5819 ;; Registers used:
  5820 ;;		wreg, status,2
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5830 ;;Total ram usage:        2 bytes
  5831 ;; Hardware stack levels used: 1
  5832 ;; Hardware stack levels required when called: 5
  5833 ;; This function calls:
  5834 ;;		Nothing
  5835 ;; This function is called by:
  5836 ;;		_main
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text16
  5841   0032CE                     __ptext16:
  5842                           	callstack 0
  5843   0032CE                     _initDCmotorsPWM:
  5844                           	callstack 25
  5845   0032CE                     
  5846                           ;dc_motor.c: 10:     LATEbits.LATE2=0;
  5847   0032CE  947D               	bcf	125,2,c	;volatile
  5848                           
  5849                           ;dc_motor.c: 11:     TRISEbits.TRISE2=0;
  5850   0032D0  9485               	bcf	133,2,c	;volatile
  5851                           
  5852                           ;dc_motor.c: 12:     LATEbits.LATE4=0;
  5853   0032D2  987D               	bcf	125,4,c	;volatile
  5854                           
  5855                           ;dc_motor.c: 13:     TRISEbits.TRISE4=0;
  5856   0032D4  9885               	bcf	133,4,c	;volatile
  5857                           
  5858                           ;dc_motor.c: 14:     LATCbits.LATC7=0;
  5859   0032D6  9E7B               	bcf	123,7,c	;volatile
  5860                           
  5861                           ;dc_motor.c: 15:     TRISCbits.TRISC7=0;
  5862   0032D8  9E83               	bcf	131,7,c	;volatile
  5863                           
  5864                           ;dc_motor.c: 16:     LATGbits.LATG6=0;
  5865   0032DA  9C7F               	bcf	127,6,c	;volatile
  5866                           
  5867                           ;dc_motor.c: 17:     TRISGbits.TRISG6=0;
  5868   0032DC  9C87               	bcf	135,6,c	;volatile
  5869   0032DE                     
  5870                           ;dc_motor.c: 20:     RE2PPS=0x05;
  5871   0032DE  0E05               	movlw	5
  5872   0032E0  010E               	movlb	14	; () banked
  5873   0032E2  6F74               	movwf	116,b	;volatile
  5874                           
  5875                           ;dc_motor.c: 21:     RE4PPS=0x06;
  5876   0032E4  0E06               	movlw	6
  5877   0032E6  6F76               	movwf	118,b	;volatile
  5878                           
  5879                           ;dc_motor.c: 22:     RC7PPS=0x07;
  5880   0032E8  0E07               	movlw	7
  5881   0032EA  6F69               	movwf	105,b	;volatile
  5882                           
  5883                           ;dc_motor.c: 23:     RG6PPS=0x08;
  5884   0032EC  0E08               	movlw	8
  5885   0032EE  6F88               	movwf	136,b	;volatile
  5886                           
  5887                           ;dc_motor.c: 26:     T2CONbits.CKPS=0b011;
  5888   0032F0  50BD               	movf	189,w,c	;volatile
  5889   0032F2  0B8F               	andlw	-113
  5890   0032F4  0930               	iorlw	48
  5891   0032F6  6EBD               	movwf	189,c	;volatile
  5892                           
  5893                           ;dc_motor.c: 27:     T2HLTbits.MODE=0b00000;
  5894   0032F8  0EE0               	movlw	-32
  5895   0032FA  16BE               	andwf	190,f,c	;volatile
  5896                           
  5897                           ;dc_motor.c: 28:     T2CLKCONbits.CS=0b0001;
  5898   0032FC  50BF               	movf	191,w,c	;volatile
  5899   0032FE  0BF0               	andlw	-16
  5900   003300  0901               	iorlw	1
  5901   003302  6EBF               	movwf	191,c	;volatile
  5902   003304                     
  5903                           ; BSR set to: 14
  5904                           ;dc_motor.c: 32:     T2PR=PWMperiod;
  5905   003304  C00C  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  5906   003308                     
  5907                           ; BSR set to: 14
  5908                           ;dc_motor.c: 33:     T2CONbits.ON=1;
  5909   003308  8EBD               	bsf	189,7,c	;volatile
  5910                           
  5911                           ;dc_motor.c: 37:     CCPR1H=0;
  5912   00330A  0E00               	movlw	0
  5913   00330C  6EAA               	movwf	170,c	;volatile
  5914                           
  5915                           ;dc_motor.c: 38:     CCPR2H=0;
  5916   00330E  0E00               	movlw	0
  5917   003310  6EA6               	movwf	166,c	;volatile
  5918                           
  5919                           ;dc_motor.c: 39:     CCPR3H=0;
  5920   003312  0E00               	movlw	0
  5921   003314  010F               	movlb	15	; () banked
  5922   003316  6F25               	movwf	37,b	;volatile
  5923                           
  5924                           ;dc_motor.c: 40:     CCPR4H=0;
  5925   003318  0E00               	movlw	0
  5926   00331A  6F21               	movwf	33,b	;volatile
  5927                           
  5928                           ;dc_motor.c: 43:     CCPTMRS0bits.C1TSEL=0;
  5929   00331C  0EFC               	movlw	-4
  5930   00331E  16AD               	andwf	173,f,c	;volatile
  5931                           
  5932                           ;dc_motor.c: 44:     CCPTMRS0bits.C2TSEL=0;
  5933   003320  0EF3               	movlw	-13
  5934   003322  16AD               	andwf	173,f,c	;volatile
  5935                           
  5936                           ;dc_motor.c: 45:     CCPTMRS0bits.C3TSEL=0;
  5937   003324  0ECF               	movlw	-49
  5938   003326  16AD               	andwf	173,f,c	;volatile
  5939                           
  5940                           ;dc_motor.c: 46:     CCPTMRS0bits.C4TSEL=0;
  5941   003328  0E3F               	movlw	-193
  5942   00332A  16AD               	andwf	173,f,c	;volatile
  5943   00332C                     
  5944                           ; BSR set to: 15
  5945                           ;dc_motor.c: 49:     CCP1CONbits.FMT=1;
  5946   00332C  88AB               	bsf	171,4,c	;volatile
  5947                           
  5948                           ;dc_motor.c: 50:     CCP1CONbits.CCP1MODE=0b1100;
  5949   00332E  50AB               	movf	171,w,c	;volatile
  5950   003330  0BF0               	andlw	-16
  5951   003332  090C               	iorlw	12
  5952   003334  6EAB               	movwf	171,c	;volatile
  5953   003336                     
  5954                           ; BSR set to: 15
  5955                           ;dc_motor.c: 51:     CCP1CONbits.EN=1;
  5956   003336  8EAB               	bsf	171,7,c	;volatile
  5957   003338                     
  5958                           ; BSR set to: 15
  5959                           ;dc_motor.c: 53:     CCP2CONbits.FMT=1;
  5960   003338  88A7               	bsf	167,4,c	;volatile
  5961                           
  5962                           ;dc_motor.c: 54:     CCP2CONbits.CCP2MODE=0b1100;
  5963   00333A  50A7               	movf	167,w,c	;volatile
  5964   00333C  0BF0               	andlw	-16
  5965   00333E  090C               	iorlw	12
  5966   003340  6EA7               	movwf	167,c	;volatile
  5967   003342                     
  5968                           ; BSR set to: 15
  5969                           ;dc_motor.c: 55:     CCP2CONbits.EN=1;
  5970   003342  8EA7               	bsf	167,7,c	;volatile
  5971   003344                     
  5972                           ; BSR set to: 15
  5973                           ;dc_motor.c: 57:     CCP3CONbits.FMT=1;
  5974   003344  8926               	bsf	38,4,b	;volatile
  5975                           
  5976                           ;dc_motor.c: 58:     CCP3CONbits.CCP3MODE=0b1100;
  5977   003346  5126               	movf	38,w,b	;volatile
  5978   003348  0BF0               	andlw	-16
  5979   00334A  090C               	iorlw	12
  5980   00334C  6F26               	movwf	38,b	;volatile
  5981   00334E                     
  5982                           ; BSR set to: 15
  5983                           ;dc_motor.c: 59:     CCP3CONbits.EN=1;
  5984   00334E  8F26               	bsf	38,7,b	;volatile
  5985   003350                     
  5986                           ; BSR set to: 15
  5987                           ;dc_motor.c: 61:     CCP4CONbits.FMT=1;
  5988   003350  8922               	bsf	34,4,b	;volatile
  5989                           
  5990                           ;dc_motor.c: 62:     CCP4CONbits.CCP4MODE=0b1100;
  5991   003352  5122               	movf	34,w,b	;volatile
  5992   003354  0BF0               	andlw	-16
  5993   003356  090C               	iorlw	12
  5994   003358  6F22               	movwf	34,b	;volatile
  5995   00335A                     
  5996                           ; BSR set to: 15
  5997                           ;dc_motor.c: 63:     CCP4CONbits.EN=1;
  5998   00335A  8F22               	bsf	34,7,b	;volatile
  5999   00335C                     
  6000                           ; BSR set to: 15
  6001   00335C  0012               	return		;funcret
  6002   00335E                     __end_of_initDCmotorsPWM:
  6003                           	callstack 0
  6004                           
  6005 ;; *************** function _color_read *****************
  6006 ;; Defined at:
  6007 ;;		line 72 in file "color.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;  RGBC            2   15[COMRAM] PTR struct RGBC_val
  6010 ;;		 -> main@RGBC(8), 
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;		None
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  1    wreg      void 
  6015 ;; Registers used:
  6016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6024 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6025 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6026 ;;Total ram usage:        9 bytes
  6027 ;; Hardware stack levels used: 1
  6028 ;; Hardware stack levels required when called: 7
  6029 ;; This function calls:
  6030 ;;		_I2C_2_Master_Read
  6031 ;;		_I2C_2_Master_RepStart
  6032 ;;		_I2C_2_Master_Start
  6033 ;;		_I2C_2_Master_Stop
  6034 ;;		_I2C_2_Master_Write
  6035 ;; This function is called by:
  6036 ;;		_main
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           	psect	text17
  6041   0024CA                     __ptext17:
  6042                           	callstack 0
  6043   0024CA                     _color_read:
  6044                           	callstack 23
  6045   0024CA                     
  6046                           ;color.c: 72: void color_read(RGBC_val *RGBC);color.c: 73: {;color.c: 74:  I2C_2_Master_
      +                          Start();
  6047   0024CA  EC74  F01C         	call	_I2C_2_Master_Start	;wreg free
  6048                           
  6049                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  6050   0024CE  0E52               	movlw	82
  6051   0024D0  EC59  F01C         	call	_I2C_2_Master_Write
  6052                           
  6053                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x16);
  6054   0024D4  0EB6               	movlw	182
  6055   0024D6  EC59  F01C         	call	_I2C_2_Master_Write
  6056                           
  6057                           ;color.c: 77:  I2C_2_Master_RepStart();
  6058   0024DA  EC6A  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6059                           
  6060                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  6061   0024DE  0E53               	movlw	83
  6062   0024E0  EC59  F01C         	call	_I2C_2_Master_Write
  6063   0024E4                     
  6064                           ;color.c: 79:  RGBC->R=I2C_2_Master_Read(1);
  6065   0024E4  0E01               	movlw	1
  6066   0024E6  ECF6  F01A         	call	_I2C_2_Master_Read
  6067   0024EA  6E12               	movwf	??_color_read^0,c
  6068   0024EC  6A13               	clrf	(??_color_read+1)^0,c
  6069   0024EE  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6070   0024F2  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6071   0024F6  C012  FFDE         	movff	??_color_read,postinc2
  6072   0024FA  C013  FFDD         	movff	??_color_read+1,postdec2
  6073   0024FE                     
  6074                           ;color.c: 80:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  6075   0024FE  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6076   002502  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6077   002506  CFDE F012          	movff	postinc2,??_color_read
  6078   00250A  CFDD F013          	movff	postdec2,??_color_read+1
  6079   00250E  0E00               	movlw	0
  6080   002510  ECF6  F01A         	call	_I2C_2_Master_Read
  6081   002514  6E14               	movwf	(??_color_read+2)^0,c
  6082   002516  5014               	movf	(??_color_read+2)^0,w,c
  6083   002518  6E16               	movwf	(??_color_read+4)^0,c
  6084   00251A  6A15               	clrf	(??_color_read+3)^0,c
  6085   00251C  5012               	movf	??_color_read^0,w,c
  6086   00251E  1015               	iorwf	(??_color_read+3)^0,w,c
  6087   002520  6E17               	movwf	(??_color_read+5)^0,c
  6088   002522  5013               	movf	(??_color_read+1)^0,w,c
  6089   002524  1016               	iorwf	(??_color_read+4)^0,w,c
  6090   002526  6E18               	movwf	(??_color_read+6)^0,c
  6091   002528  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6092   00252C  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6093   002530  C017  FFDE         	movff	??_color_read+5,postinc2
  6094   002534  C018  FFDD         	movff	??_color_read+6,postdec2
  6095                           
  6096                           ;color.c: 81:  I2C_2_Master_Stop();
  6097   002538  EC6F  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6098                           
  6099                           ;color.c: 83:     I2C_2_Master_Start();
  6100   00253C  EC74  F01C         	call	_I2C_2_Master_Start	;wreg free
  6101                           
  6102                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x00);
  6103   002540  0E52               	movlw	82
  6104   002542  EC59  F01C         	call	_I2C_2_Master_Write
  6105                           
  6106                           ;color.c: 85:  I2C_2_Master_Write(0xA0 | 0x18);
  6107   002546  0EB8               	movlw	184
  6108   002548  EC59  F01C         	call	_I2C_2_Master_Write
  6109                           
  6110                           ;color.c: 86:  I2C_2_Master_RepStart();
  6111   00254C  EC6A  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6112                           
  6113                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x01);
  6114   002550  0E53               	movlw	83
  6115   002552  EC59  F01C         	call	_I2C_2_Master_Write
  6116   002556                     
  6117                           ;color.c: 88:  RGBC->G=I2C_2_Master_Read(1);
  6118   002556  0E01               	movlw	1
  6119   002558  ECF6  F01A         	call	_I2C_2_Master_Read
  6120   00255C  6E12               	movwf	??_color_read^0,c
  6121   00255E  6A13               	clrf	(??_color_read+1)^0,c
  6122   002560  EE20 F002          	lfsr	2,2
  6123   002564  5010               	movf	color_read@RGBC^0,w,c
  6124   002566  26D9               	addwf	fsr2l,f,c
  6125   002568  5011               	movf	(color_read@RGBC+1)^0,w,c
  6126   00256A  22DA               	addwfc	fsr2h,f,c
  6127   00256C  C012  FFDE         	movff	??_color_read,postinc2
  6128   002570  C013  FFDD         	movff	??_color_read+1,postdec2
  6129   002574                     
  6130                           ;color.c: 89:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  6131   002574  EE20 F002          	lfsr	2,2
  6132   002578  5010               	movf	color_read@RGBC^0,w,c
  6133   00257A  26D9               	addwf	fsr2l,f,c
  6134   00257C  5011               	movf	(color_read@RGBC+1)^0,w,c
  6135   00257E  22DA               	addwfc	fsr2h,f,c
  6136   002580  CFDE F012          	movff	postinc2,??_color_read
  6137   002584  CFDD F013          	movff	postdec2,??_color_read+1
  6138   002588  0E00               	movlw	0
  6139   00258A  ECF6  F01A         	call	_I2C_2_Master_Read
  6140   00258E  6E14               	movwf	(??_color_read+2)^0,c
  6141   002590  5014               	movf	(??_color_read+2)^0,w,c
  6142   002592  6E16               	movwf	(??_color_read+4)^0,c
  6143   002594  6A15               	clrf	(??_color_read+3)^0,c
  6144   002596  5012               	movf	??_color_read^0,w,c
  6145   002598  1015               	iorwf	(??_color_read+3)^0,w,c
  6146   00259A  6E17               	movwf	(??_color_read+5)^0,c
  6147   00259C  5013               	movf	(??_color_read+1)^0,w,c
  6148   00259E  1016               	iorwf	(??_color_read+4)^0,w,c
  6149   0025A0  6E18               	movwf	(??_color_read+6)^0,c
  6150   0025A2  EE20 F002          	lfsr	2,2
  6151   0025A6  5010               	movf	color_read@RGBC^0,w,c
  6152   0025A8  26D9               	addwf	fsr2l,f,c
  6153   0025AA  5011               	movf	(color_read@RGBC+1)^0,w,c
  6154   0025AC  22DA               	addwfc	fsr2h,f,c
  6155   0025AE  C017  FFDE         	movff	??_color_read+5,postinc2
  6156   0025B2  C018  FFDD         	movff	??_color_read+6,postdec2
  6157                           
  6158                           ;color.c: 90:  I2C_2_Master_Stop();
  6159   0025B6  EC6F  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6160                           
  6161                           ;color.c: 92:     I2C_2_Master_Start();
  6162   0025BA  EC74  F01C         	call	_I2C_2_Master_Start	;wreg free
  6163                           
  6164                           ;color.c: 93:  I2C_2_Master_Write(0x52 | 0x00);
  6165   0025BE  0E52               	movlw	82
  6166   0025C0  EC59  F01C         	call	_I2C_2_Master_Write
  6167                           
  6168                           ;color.c: 94:  I2C_2_Master_Write(0xA0 | 0x1A);
  6169   0025C4  0EBA               	movlw	186
  6170   0025C6  EC59  F01C         	call	_I2C_2_Master_Write
  6171                           
  6172                           ;color.c: 95:  I2C_2_Master_RepStart();
  6173   0025CA  EC6A  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6174                           
  6175                           ;color.c: 96:  I2C_2_Master_Write(0x52 | 0x01);
  6176   0025CE  0E53               	movlw	83
  6177   0025D0  EC59  F01C         	call	_I2C_2_Master_Write
  6178   0025D4                     
  6179                           ;color.c: 97:  RGBC->B=I2C_2_Master_Read(1);
  6180   0025D4  0E01               	movlw	1
  6181   0025D6  ECF6  F01A         	call	_I2C_2_Master_Read
  6182   0025DA  6E12               	movwf	??_color_read^0,c
  6183   0025DC  6A13               	clrf	(??_color_read+1)^0,c
  6184   0025DE  EE20 F004          	lfsr	2,4
  6185   0025E2  5010               	movf	color_read@RGBC^0,w,c
  6186   0025E4  26D9               	addwf	fsr2l,f,c
  6187   0025E6  5011               	movf	(color_read@RGBC+1)^0,w,c
  6188   0025E8  22DA               	addwfc	fsr2h,f,c
  6189   0025EA  C012  FFDE         	movff	??_color_read,postinc2
  6190   0025EE  C013  FFDD         	movff	??_color_read+1,postdec2
  6191   0025F2                     
  6192                           ;color.c: 98:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  6193   0025F2  EE20 F004          	lfsr	2,4
  6194   0025F6  5010               	movf	color_read@RGBC^0,w,c
  6195   0025F8  26D9               	addwf	fsr2l,f,c
  6196   0025FA  5011               	movf	(color_read@RGBC+1)^0,w,c
  6197   0025FC  22DA               	addwfc	fsr2h,f,c
  6198   0025FE  CFDE F012          	movff	postinc2,??_color_read
  6199   002602  CFDD F013          	movff	postdec2,??_color_read+1
  6200   002606  0E00               	movlw	0
  6201   002608  ECF6  F01A         	call	_I2C_2_Master_Read
  6202   00260C  6E14               	movwf	(??_color_read+2)^0,c
  6203   00260E  5014               	movf	(??_color_read+2)^0,w,c
  6204   002610  6E16               	movwf	(??_color_read+4)^0,c
  6205   002612  6A15               	clrf	(??_color_read+3)^0,c
  6206   002614  5012               	movf	??_color_read^0,w,c
  6207   002616  1015               	iorwf	(??_color_read+3)^0,w,c
  6208   002618  6E17               	movwf	(??_color_read+5)^0,c
  6209   00261A  5013               	movf	(??_color_read+1)^0,w,c
  6210   00261C  1016               	iorwf	(??_color_read+4)^0,w,c
  6211   00261E  6E18               	movwf	(??_color_read+6)^0,c
  6212   002620  EE20 F004          	lfsr	2,4
  6213   002624  5010               	movf	color_read@RGBC^0,w,c
  6214   002626  26D9               	addwf	fsr2l,f,c
  6215   002628  5011               	movf	(color_read@RGBC+1)^0,w,c
  6216   00262A  22DA               	addwfc	fsr2h,f,c
  6217   00262C  C017  FFDE         	movff	??_color_read+5,postinc2
  6218   002630  C018  FFDD         	movff	??_color_read+6,postdec2
  6219                           
  6220                           ;color.c: 99:  I2C_2_Master_Stop();
  6221   002634  EC6F  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6222                           
  6223                           ;color.c: 101:     I2C_2_Master_Start();
  6224   002638  EC74  F01C         	call	_I2C_2_Master_Start	;wreg free
  6225                           
  6226                           ;color.c: 102:  I2C_2_Master_Write(0x52 | 0x00);
  6227   00263C  0E52               	movlw	82
  6228   00263E  EC59  F01C         	call	_I2C_2_Master_Write
  6229                           
  6230                           ;color.c: 103:  I2C_2_Master_Write(0xA0 | 0x14);
  6231   002642  0EB4               	movlw	180
  6232   002644  EC59  F01C         	call	_I2C_2_Master_Write
  6233                           
  6234                           ;color.c: 104:  I2C_2_Master_RepStart();
  6235   002648  EC6A  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6236                           
  6237                           ;color.c: 105:  I2C_2_Master_Write(0x52 | 0x01);
  6238   00264C  0E53               	movlw	83
  6239   00264E  EC59  F01C         	call	_I2C_2_Master_Write
  6240   002652                     
  6241                           ;color.c: 106:  RGBC->C=I2C_2_Master_Read(1);
  6242   002652  0E01               	movlw	1
  6243   002654  ECF6  F01A         	call	_I2C_2_Master_Read
  6244   002658  6E12               	movwf	??_color_read^0,c
  6245   00265A  6A13               	clrf	(??_color_read+1)^0,c
  6246   00265C  EE20 F006          	lfsr	2,6
  6247   002660  5010               	movf	color_read@RGBC^0,w,c
  6248   002662  26D9               	addwf	fsr2l,f,c
  6249   002664  5011               	movf	(color_read@RGBC+1)^0,w,c
  6250   002666  22DA               	addwfc	fsr2h,f,c
  6251   002668  C012  FFDE         	movff	??_color_read,postinc2
  6252   00266C  C013  FFDD         	movff	??_color_read+1,postdec2
  6253   002670                     
  6254                           ;color.c: 107:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  6255   002670  EE20 F006          	lfsr	2,6
  6256   002674  5010               	movf	color_read@RGBC^0,w,c
  6257   002676  26D9               	addwf	fsr2l,f,c
  6258   002678  5011               	movf	(color_read@RGBC+1)^0,w,c
  6259   00267A  22DA               	addwfc	fsr2h,f,c
  6260   00267C  CFDE F012          	movff	postinc2,??_color_read
  6261   002680  CFDD F013          	movff	postdec2,??_color_read+1
  6262   002684  0E00               	movlw	0
  6263   002686  ECF6  F01A         	call	_I2C_2_Master_Read
  6264   00268A  6E14               	movwf	(??_color_read+2)^0,c
  6265   00268C  5014               	movf	(??_color_read+2)^0,w,c
  6266   00268E  6E16               	movwf	(??_color_read+4)^0,c
  6267   002690  6A15               	clrf	(??_color_read+3)^0,c
  6268   002692  5012               	movf	??_color_read^0,w,c
  6269   002694  1015               	iorwf	(??_color_read+3)^0,w,c
  6270   002696  6E17               	movwf	(??_color_read+5)^0,c
  6271   002698  5013               	movf	(??_color_read+1)^0,w,c
  6272   00269A  1016               	iorwf	(??_color_read+4)^0,w,c
  6273   00269C  6E18               	movwf	(??_color_read+6)^0,c
  6274   00269E  EE20 F006          	lfsr	2,6
  6275   0026A2  5010               	movf	color_read@RGBC^0,w,c
  6276   0026A4  26D9               	addwf	fsr2l,f,c
  6277   0026A6  5011               	movf	(color_read@RGBC+1)^0,w,c
  6278   0026A8  22DA               	addwfc	fsr2h,f,c
  6279   0026AA  C017  FFDE         	movff	??_color_read+5,postinc2
  6280   0026AE  C018  FFDD         	movff	??_color_read+6,postdec2
  6281                           
  6282                           ;color.c: 108:  I2C_2_Master_Stop();
  6283   0026B2  EC6F  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6284   0026B6  0012               	return		;funcret
  6285   0026B8                     __end_of_color_read:
  6286                           	callstack 0
  6287                           
  6288 ;; *************** function _I2C_2_Master_RepStart *****************
  6289 ;; Defined at:
  6290 ;;		line 33 in file "i2c.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      void 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6308 ;;Total ram usage:        0 bytes
  6309 ;; Hardware stack levels used: 1
  6310 ;; Hardware stack levels required when called: 6
  6311 ;; This function calls:
  6312 ;;		_I2C_2_Master_Idle
  6313 ;; This function is called by:
  6314 ;;		_color_read
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text18
  6319   0038D4                     __ptext18:
  6320                           	callstack 0
  6321   0038D4                     _I2C_2_Master_RepStart:
  6322                           	callstack 23
  6323   0038D4                     
  6324                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6325   0038D4  EC77  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6326   0038D8                     
  6327                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6328   0038D8  010E               	movlb	14	; () banked
  6329   0038DA  83DA               	bsf	218,1,b	;volatile
  6330   0038DC                     
  6331                           ; BSR set to: 14
  6332   0038DC  0012               	return		;funcret
  6333   0038DE                     __end_of_I2C_2_Master_RepStart:
  6334                           	callstack 0
  6335                           
  6336 ;; *************** function _I2C_2_Master_Read *****************
  6337 ;; Defined at:
  6338 ;;		line 51 in file "i2c.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;  ack             1    wreg     unsigned char 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;  ack             1   13[COMRAM] unsigned char 
  6343 ;;  tmp             1   14[COMRAM] unsigned char 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  1    wreg      unsigned char 
  6346 ;; Registers used:
  6347 ;;		wreg, status,2, status,0, cstack
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6356 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;Total ram usage:        3 bytes
  6358 ;; Hardware stack levels used: 1
  6359 ;; Hardware stack levels required when called: 6
  6360 ;; This function calls:
  6361 ;;		_I2C_2_Master_Idle
  6362 ;; This function is called by:
  6363 ;;		_color_read
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text19
  6368   0035EC                     __ptext19:
  6369                           	callstack 0
  6370   0035EC                     _I2C_2_Master_Read:
  6371                           	callstack 23
  6372                           
  6373                           ; BSR set to: 14
  6374                           ;incstack = 0
  6375                           ;I2C_2_Master_Read@ack stored from wreg
  6376   0035EC  6E0E               	movwf	I2C_2_Master_Read@ack^0,c
  6377   0035EE                     
  6378                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6379   0035EE  EC77  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6380   0035F2                     
  6381                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6382   0035F2  010E               	movlb	14	; () banked
  6383   0035F4  87DA               	bsf	218,3,b	;volatile
  6384                           
  6385                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6386   0035F6  EC77  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6387   0035FA                     
  6388                           ;i2c.c: 57:   tmp = SSP2BUF;
  6389   0035FA  CED5 F00F          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6390                           
  6391                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6392   0035FE  EC77  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6393   003602                     
  6394                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6395   003602  500E               	movf	I2C_2_Master_Read@ack^0,w,c
  6396   003604  B4D8               	btfsc	status,2,c
  6397   003606  EF07  F01B         	goto	u1381
  6398   00360A  EF0B  F01B         	goto	u1380
  6399   00360E                     u1381:
  6400   00360E  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  6401   003610  2A0D               	incf	??_I2C_2_Master_Read^0,f,c
  6402   003612  EF0C  F01B         	goto	u1398
  6403   003616                     u1380:
  6404   003616  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  6405   003618                     u1398:
  6406   003618  3A0D               	swapf	??_I2C_2_Master_Read^0,f,c
  6407   00361A  460D               	rlncf	??_I2C_2_Master_Read^0,f,c
  6408   00361C  010E               	movlb	14	; () banked
  6409   00361E  51DA               	movf	218,w,b	;volatile
  6410   003620  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  6411   003622  0BDF               	andlw	-33
  6412   003624  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  6413   003626  6FDA               	movwf	218,b	;volatile
  6414   003628                     
  6415                           ; BSR set to: 14
  6416                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6417   003628  89DA               	bsf	218,4,b	;volatile
  6418   00362A                     
  6419                           ; BSR set to: 14
  6420                           ;i2c.c: 61:   return tmp;
  6421   00362A  500F               	movf	I2C_2_Master_Read@tmp^0,w,c
  6422   00362C                     
  6423                           ; BSR set to: 14
  6424   00362C  0012               	return		;funcret
  6425   00362E                     __end_of_I2C_2_Master_Read:
  6426                           	callstack 0
  6427                           
  6428 ;; *************** function _color_normalise *****************
  6429 ;; Defined at:
  6430 ;;		line 112 in file "color.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  RGBC            8   37[COMRAM] struct RGBC_val
  6433 ;;  RGBC_n          2   45[COMRAM] PTR struct RGBC_val
  6434 ;;		 -> main@RGBC_n(8), 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1    wreg      void 
  6439 ;; Registers used:
  6440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6446 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6449 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6450 ;;Total ram usage:       12 bytes
  6451 ;; Hardware stack levels used: 1
  6452 ;; Hardware stack levels required when called: 6
  6453 ;; This function calls:
  6454 ;;		___aldiv
  6455 ;;		___lmul
  6456 ;; This function is called by:
  6457 ;;		_main
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text20
  6462   002DC4                     __ptext20:
  6463                           	callstack 0
  6464   002DC4                     _color_normalise:
  6465                           	callstack 24
  6466   002DC4                     
  6467                           ;color.c: 130:     RGBC_n->C = RGBC.C;
  6468   002DC4  EE20 F006          	lfsr	2,6
  6469   002DC8  502E               	movf	color_normalise@RGBC_n^0,w,c
  6470   002DCA  26D9               	addwf	fsr2l,f,c
  6471   002DCC  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  6472   002DCE  22DA               	addwfc	fsr2h,f,c
  6473   002DD0  C02C  FFDE         	movff	color_normalise@RGBC+6,postinc2
  6474   002DD4  C02D  FFDD         	movff	color_normalise@RGBC+7,postdec2
  6475   002DD8                     
  6476                           ;color.c: 131:     RGBC_n->R = 1000L*RGBC.R/(RGBC.R+RGBC.G+RGBC.B);
  6477   002DD8  C026  F00C         	movff	color_normalise@RGBC,___lmul@multiplier
  6478   002DDC  C027  F00D         	movff	color_normalise@RGBC+1,___lmul@multiplier+1
  6479   002DE0  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6480   002DE2  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6481   002DE4  0EE8               	movlw	232
  6482   002DE6  6E10               	movwf	___lmul@multiplicand^0,c
  6483   002DE8  0E03               	movlw	3
  6484   002DEA  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6485   002DEC  0E00               	movlw	0
  6486   002DEE  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6487   002DF0  0E00               	movlw	0
  6488   002DF2  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6489   002DF4  EC9A  F01A         	call	___lmul	;wreg free
  6490   002DF8  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6491   002DFC  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6492   002E00  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6493   002E04  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6494   002E08  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  6495   002E0A  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  6496   002E0C  6E30               	movwf	??_color_normalise^0,c
  6497   002E0E  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  6498   002E10  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  6499   002E12  6E31               	movwf	(??_color_normalise+1)^0,c
  6500   002E14  5026               	movf	color_normalise@RGBC^0,w,c
  6501   002E16  2630               	addwf	??_color_normalise^0,f,c
  6502   002E18  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  6503   002E1A  2231               	addwfc	(??_color_normalise+1)^0,f,c
  6504   002E1C  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  6505   002E20  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  6506   002E24  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  6507   002E26  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  6508   002E28  EC87  F017         	call	___aldiv	;wreg free
  6509   002E2C  C02E  FFD9         	movff	color_normalise@RGBC_n,fsr2l
  6510   002E30  C02F  FFDA         	movff	color_normalise@RGBC_n+1,fsr2h
  6511   002E34  C018  FFDE         	movff	?___aldiv,postinc2
  6512   002E38  C019  FFDD         	movff	?___aldiv+1,postdec2
  6513   002E3C                     
  6514                           ;color.c: 132:     RGBC_n->G = 1000L*RGBC.G/(RGBC.R+RGBC.G+RGBC.B);
  6515   002E3C  C028  F00C         	movff	color_normalise@RGBC+2,___lmul@multiplier
  6516   002E40  C029  F00D         	movff	color_normalise@RGBC+3,___lmul@multiplier+1
  6517   002E44  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6518   002E46  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6519   002E48  0EE8               	movlw	232
  6520   002E4A  6E10               	movwf	___lmul@multiplicand^0,c
  6521   002E4C  0E03               	movlw	3
  6522   002E4E  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6523   002E50  0E00               	movlw	0
  6524   002E52  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6525   002E54  0E00               	movlw	0
  6526   002E56  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6527   002E58  EC9A  F01A         	call	___lmul	;wreg free
  6528   002E5C  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6529   002E60  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6530   002E64  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6531   002E68  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6532   002E6C  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  6533   002E6E  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  6534   002E70  6E30               	movwf	??_color_normalise^0,c
  6535   002E72  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  6536   002E74  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  6537   002E76  6E31               	movwf	(??_color_normalise+1)^0,c
  6538   002E78  5026               	movf	color_normalise@RGBC^0,w,c
  6539   002E7A  2630               	addwf	??_color_normalise^0,f,c
  6540   002E7C  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  6541   002E7E  2231               	addwfc	(??_color_normalise+1)^0,f,c
  6542   002E80  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  6543   002E84  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  6544   002E88  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  6545   002E8A  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  6546   002E8C  EC87  F017         	call	___aldiv	;wreg free
  6547   002E90  EE20 F002          	lfsr	2,2
  6548   002E94  502E               	movf	color_normalise@RGBC_n^0,w,c
  6549   002E96  26D9               	addwf	fsr2l,f,c
  6550   002E98  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  6551   002E9A  22DA               	addwfc	fsr2h,f,c
  6552   002E9C  C018  FFDE         	movff	?___aldiv,postinc2
  6553   002EA0  C019  FFDD         	movff	?___aldiv+1,postdec2
  6554   002EA4                     
  6555                           ;color.c: 133:     RGBC_n->B = 1000L*RGBC.B/(RGBC.R+RGBC.G+RGBC.B);
  6556   002EA4  C02A  F00C         	movff	color_normalise@RGBC+4,___lmul@multiplier
  6557   002EA8  C02B  F00D         	movff	color_normalise@RGBC+5,___lmul@multiplier+1
  6558   002EAC  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6559   002EAE  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6560   002EB0  0EE8               	movlw	232
  6561   002EB2  6E10               	movwf	___lmul@multiplicand^0,c
  6562   002EB4  0E03               	movlw	3
  6563   002EB6  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6564   002EB8  0E00               	movlw	0
  6565   002EBA  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6566   002EBC  0E00               	movlw	0
  6567   002EBE  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6568   002EC0  EC9A  F01A         	call	___lmul	;wreg free
  6569   002EC4  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6570   002EC8  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6571   002ECC  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6572   002ED0  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6573   002ED4  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  6574   002ED6  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  6575   002ED8  6E30               	movwf	??_color_normalise^0,c
  6576   002EDA  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  6577   002EDC  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  6578   002EDE  6E31               	movwf	(??_color_normalise+1)^0,c
  6579   002EE0  5026               	movf	color_normalise@RGBC^0,w,c
  6580   002EE2  2630               	addwf	??_color_normalise^0,f,c
  6581   002EE4  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  6582   002EE6  2231               	addwfc	(??_color_normalise+1)^0,f,c
  6583   002EE8  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  6584   002EEC  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  6585   002EF0  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  6586   002EF2  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  6587   002EF4  EC87  F017         	call	___aldiv	;wreg free
  6588   002EF8  EE20 F004          	lfsr	2,4
  6589   002EFC  502E               	movf	color_normalise@RGBC_n^0,w,c
  6590   002EFE  26D9               	addwf	fsr2l,f,c
  6591   002F00  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  6592   002F02  22DA               	addwfc	fsr2h,f,c
  6593   002F04  C018  FFDE         	movff	?___aldiv,postinc2
  6594   002F08  C019  FFDD         	movff	?___aldiv+1,postdec2
  6595   002F0C  0012               	return		;funcret
  6596   002F0E                     __end_of_color_normalise:
  6597                           	callstack 0
  6598                           
  6599 ;; *************** function ___lmul *****************
  6600 ;; Defined at:
  6601 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  multiplier      4   11[COMRAM] unsigned long 
  6604 ;;  multiplicand    4   15[COMRAM] unsigned long 
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;  product         4   19[COMRAM] unsigned long 
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  4   11[COMRAM] unsigned long 
  6609 ;; Registers used:
  6610 ;;		wreg, status,2, status,0
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6616 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6617 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6619 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6620 ;;Total ram usage:       12 bytes
  6621 ;; Hardware stack levels used: 1
  6622 ;; Hardware stack levels required when called: 5
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_color_normalise
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text21
  6631   003534                     __ptext21:
  6632                           	callstack 0
  6633   003534                     ___lmul:
  6634                           	callstack 24
  6635   003534  0E00               	movlw	0
  6636   003536  6E14               	movwf	___lmul@product^0,c
  6637   003538  0E00               	movlw	0
  6638   00353A  6E15               	movwf	(___lmul@product+1)^0,c
  6639   00353C  0E00               	movlw	0
  6640   00353E  6E16               	movwf	(___lmul@product+2)^0,c
  6641   003540  0E00               	movlw	0
  6642   003542  6E17               	movwf	(___lmul@product+3)^0,c
  6643   003544                     l2889:
  6644   003544  A00C               	btfss	___lmul@multiplier^0,0,c
  6645   003546  EFA7  F01A         	goto	u1511
  6646   00354A  EFA9  F01A         	goto	u1510
  6647   00354E                     u1511:
  6648   00354E  EFB1  F01A         	goto	l2893
  6649   003552                     u1510:
  6650   003552  5010               	movf	___lmul@multiplicand^0,w,c
  6651   003554  2614               	addwf	___lmul@product^0,f,c
  6652   003556  5011               	movf	(___lmul@multiplicand+1)^0,w,c
  6653   003558  2215               	addwfc	(___lmul@product+1)^0,f,c
  6654   00355A  5012               	movf	(___lmul@multiplicand+2)^0,w,c
  6655   00355C  2216               	addwfc	(___lmul@product+2)^0,f,c
  6656   00355E  5013               	movf	(___lmul@multiplicand+3)^0,w,c
  6657   003560  2217               	addwfc	(___lmul@product+3)^0,f,c
  6658   003562                     l2893:
  6659   003562  90D8               	bcf	status,0,c
  6660   003564  3610               	rlcf	___lmul@multiplicand^0,f,c
  6661   003566  3611               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6662   003568  3612               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6663   00356A  3613               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6664   00356C  90D8               	bcf	status,0,c
  6665   00356E  320F               	rrcf	(___lmul@multiplier+3)^0,f,c
  6666   003570  320E               	rrcf	(___lmul@multiplier+2)^0,f,c
  6667   003572  320D               	rrcf	(___lmul@multiplier+1)^0,f,c
  6668   003574  320C               	rrcf	___lmul@multiplier^0,f,c
  6669   003576  500C               	movf	___lmul@multiplier^0,w,c
  6670   003578  100D               	iorwf	(___lmul@multiplier+1)^0,w,c
  6671   00357A  100E               	iorwf	(___lmul@multiplier+2)^0,w,c
  6672   00357C  100F               	iorwf	(___lmul@multiplier+3)^0,w,c
  6673   00357E  A4D8               	btfss	status,2,c
  6674   003580  EFC4  F01A         	goto	u1521
  6675   003584  EFC6  F01A         	goto	u1520
  6676   003588                     u1521:
  6677   003588  EFA2  F01A         	goto	l2889
  6678   00358C                     u1520:
  6679   00358C  C014  F00C         	movff	___lmul@product,?___lmul
  6680   003590  C015  F00D         	movff	___lmul@product+1,?___lmul+1
  6681   003594  C016  F00E         	movff	___lmul@product+2,?___lmul+2
  6682   003598  C017  F00F         	movff	___lmul@product+3,?___lmul+3
  6683   00359C  0012               	return		;funcret
  6684   00359E                     __end_of___lmul:
  6685                           	callstack 0
  6686                           
  6687 ;; *************** function ___aldiv *****************
  6688 ;; Defined at:
  6689 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  dividend        4   23[COMRAM] long 
  6692 ;;  divisor         4   27[COMRAM] long 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  quotient        4   33[COMRAM] long 
  6695 ;;  sign            1   32[COMRAM] unsigned char 
  6696 ;;  counter         1   31[COMRAM] unsigned char 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  4   23[COMRAM] long 
  6699 ;; Registers used:
  6700 ;;		wreg, status,2, status,0
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6706 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6707 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6709 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6710 ;;Total ram usage:       14 bytes
  6711 ;; Hardware stack levels used: 1
  6712 ;; Hardware stack levels required when called: 5
  6713 ;; This function calls:
  6714 ;;		Nothing
  6715 ;; This function is called by:
  6716 ;;		_color_normalise
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text22
  6721   002F0E                     __ptext22:
  6722                           	callstack 0
  6723   002F0E                     ___aldiv:
  6724                           	callstack 24
  6725   002F0E  0E00               	movlw	0
  6726   002F10  6E21               	movwf	___aldiv@sign^0,c
  6727   002F12  BE1F               	btfsc	(___aldiv@divisor+3)^0,7,c
  6728   002F14  EF90  F017         	goto	u1530
  6729   002F18  EF8E  F017         	goto	u1531
  6730   002F1C                     u1531:
  6731   002F1C  EF9A  F017         	goto	l2905
  6732   002F20                     u1530:
  6733   002F20  1E1F               	comf	(___aldiv@divisor+3)^0,f,c
  6734   002F22  1E1E               	comf	(___aldiv@divisor+2)^0,f,c
  6735   002F24  1E1D               	comf	(___aldiv@divisor+1)^0,f,c
  6736   002F26  6C1C               	negf	___aldiv@divisor^0,c
  6737   002F28  0E00               	movlw	0
  6738   002F2A  221D               	addwfc	(___aldiv@divisor+1)^0,f,c
  6739   002F2C  221E               	addwfc	(___aldiv@divisor+2)^0,f,c
  6740   002F2E  221F               	addwfc	(___aldiv@divisor+3)^0,f,c
  6741   002F30  0E01               	movlw	1
  6742   002F32  6E21               	movwf	___aldiv@sign^0,c
  6743   002F34                     l2905:
  6744   002F34  BE1B               	btfsc	(___aldiv@dividend+3)^0,7,c
  6745   002F36  EFA1  F017         	goto	u1540
  6746   002F3A  EF9F  F017         	goto	u1541
  6747   002F3E                     u1541:
  6748   002F3E  EFAB  F017         	goto	l2911
  6749   002F42                     u1540:
  6750   002F42  1E1B               	comf	(___aldiv@dividend+3)^0,f,c
  6751   002F44  1E1A               	comf	(___aldiv@dividend+2)^0,f,c
  6752   002F46  1E19               	comf	(___aldiv@dividend+1)^0,f,c
  6753   002F48  6C18               	negf	___aldiv@dividend^0,c
  6754   002F4A  0E00               	movlw	0
  6755   002F4C  2219               	addwfc	(___aldiv@dividend+1)^0,f,c
  6756   002F4E  221A               	addwfc	(___aldiv@dividend+2)^0,f,c
  6757   002F50  221B               	addwfc	(___aldiv@dividend+3)^0,f,c
  6758   002F52  0E01               	movlw	1
  6759   002F54  1A21               	xorwf	___aldiv@sign^0,f,c
  6760   002F56                     l2911:
  6761   002F56  0E00               	movlw	0
  6762   002F58  6E22               	movwf	___aldiv@quotient^0,c
  6763   002F5A  0E00               	movlw	0
  6764   002F5C  6E23               	movwf	(___aldiv@quotient+1)^0,c
  6765   002F5E  0E00               	movlw	0
  6766   002F60  6E24               	movwf	(___aldiv@quotient+2)^0,c
  6767   002F62  0E00               	movlw	0
  6768   002F64  6E25               	movwf	(___aldiv@quotient+3)^0,c
  6769   002F66  501C               	movf	___aldiv@divisor^0,w,c
  6770   002F68  101D               	iorwf	(___aldiv@divisor+1)^0,w,c
  6771   002F6A  101E               	iorwf	(___aldiv@divisor+2)^0,w,c
  6772   002F6C  101F               	iorwf	(___aldiv@divisor+3)^0,w,c
  6773   002F6E  B4D8               	btfsc	status,2,c
  6774   002F70  EFBC  F017         	goto	u1551
  6775   002F74  EFBE  F017         	goto	u1550
  6776   002F78                     u1551:
  6777   002F78  EFF4  F017         	goto	l2933
  6778   002F7C                     u1550:
  6779   002F7C  0E01               	movlw	1
  6780   002F7E  6E20               	movwf	___aldiv@counter^0,c
  6781   002F80  EFC8  F017         	goto	l2919
  6782   002F84                     l2917:
  6783   002F84  90D8               	bcf	status,0,c
  6784   002F86  361C               	rlcf	___aldiv@divisor^0,f,c
  6785   002F88  361D               	rlcf	(___aldiv@divisor+1)^0,f,c
  6786   002F8A  361E               	rlcf	(___aldiv@divisor+2)^0,f,c
  6787   002F8C  361F               	rlcf	(___aldiv@divisor+3)^0,f,c
  6788   002F8E  2A20               	incf	___aldiv@counter^0,f,c
  6789   002F90                     l2919:
  6790   002F90  AE1F               	btfss	(___aldiv@divisor+3)^0,7,c
  6791   002F92  EFCD  F017         	goto	u1561
  6792   002F96  EFCF  F017         	goto	u1560
  6793   002F9A                     u1561:
  6794   002F9A  EFC2  F017         	goto	l2917
  6795   002F9E                     u1560:
  6796   002F9E                     l2921:
  6797   002F9E  90D8               	bcf	status,0,c
  6798   002FA0  3622               	rlcf	___aldiv@quotient^0,f,c
  6799   002FA2  3623               	rlcf	(___aldiv@quotient+1)^0,f,c
  6800   002FA4  3624               	rlcf	(___aldiv@quotient+2)^0,f,c
  6801   002FA6  3625               	rlcf	(___aldiv@quotient+3)^0,f,c
  6802   002FA8  501C               	movf	___aldiv@divisor^0,w,c
  6803   002FAA  5C18               	subwf	___aldiv@dividend^0,w,c
  6804   002FAC  501D               	movf	(___aldiv@divisor+1)^0,w,c
  6805   002FAE  5819               	subwfb	(___aldiv@dividend+1)^0,w,c
  6806   002FB0  501E               	movf	(___aldiv@divisor+2)^0,w,c
  6807   002FB2  581A               	subwfb	(___aldiv@dividend+2)^0,w,c
  6808   002FB4  501F               	movf	(___aldiv@divisor+3)^0,w,c
  6809   002FB6  581B               	subwfb	(___aldiv@dividend+3)^0,w,c
  6810   002FB8  A0D8               	btfss	status,0,c
  6811   002FBA  EFE1  F017         	goto	u1571
  6812   002FBE  EFE3  F017         	goto	u1570
  6813   002FC2                     u1571:
  6814   002FC2  EFEC  F017         	goto	l2929
  6815   002FC6                     u1570:
  6816   002FC6  501C               	movf	___aldiv@divisor^0,w,c
  6817   002FC8  5E18               	subwf	___aldiv@dividend^0,f,c
  6818   002FCA  501D               	movf	(___aldiv@divisor+1)^0,w,c
  6819   002FCC  5A19               	subwfb	(___aldiv@dividend+1)^0,f,c
  6820   002FCE  501E               	movf	(___aldiv@divisor+2)^0,w,c
  6821   002FD0  5A1A               	subwfb	(___aldiv@dividend+2)^0,f,c
  6822   002FD2  501F               	movf	(___aldiv@divisor+3)^0,w,c
  6823   002FD4  5A1B               	subwfb	(___aldiv@dividend+3)^0,f,c
  6824   002FD6  8022               	bsf	___aldiv@quotient^0,0,c
  6825   002FD8                     l2929:
  6826   002FD8  90D8               	bcf	status,0,c
  6827   002FDA  321F               	rrcf	(___aldiv@divisor+3)^0,f,c
  6828   002FDC  321E               	rrcf	(___aldiv@divisor+2)^0,f,c
  6829   002FDE  321D               	rrcf	(___aldiv@divisor+1)^0,f,c
  6830   002FE0  321C               	rrcf	___aldiv@divisor^0,f,c
  6831   002FE2  2E20               	decfsz	___aldiv@counter^0,f,c
  6832   002FE4  EFCF  F017         	goto	l2921
  6833   002FE8                     l2933:
  6834   002FE8  5021               	movf	___aldiv@sign^0,w,c
  6835   002FEA  B4D8               	btfsc	status,2,c
  6836   002FEC  EFFA  F017         	goto	u1581
  6837   002FF0  EFFC  F017         	goto	u1580
  6838   002FF4                     u1581:
  6839   002FF4  EF04  F018         	goto	l2937
  6840   002FF8                     u1580:
  6841   002FF8  1E25               	comf	(___aldiv@quotient+3)^0,f,c
  6842   002FFA  1E24               	comf	(___aldiv@quotient+2)^0,f,c
  6843   002FFC  1E23               	comf	(___aldiv@quotient+1)^0,f,c
  6844   002FFE  6C22               	negf	___aldiv@quotient^0,c
  6845   003000  0E00               	movlw	0
  6846   003002  2223               	addwfc	(___aldiv@quotient+1)^0,f,c
  6847   003004  2224               	addwfc	(___aldiv@quotient+2)^0,f,c
  6848   003006  2225               	addwfc	(___aldiv@quotient+3)^0,f,c
  6849   003008                     l2937:
  6850   003008  C022  F018         	movff	___aldiv@quotient,?___aldiv
  6851   00300C  C023  F019         	movff	___aldiv@quotient+1,?___aldiv+1
  6852   003010  C024  F01A         	movff	___aldiv@quotient+2,?___aldiv+2
  6853   003014  C025  F01B         	movff	___aldiv@quotient+3,?___aldiv+3
  6854   003018  0012               	return		;funcret
  6855   00301A                     __end_of___aldiv:
  6856                           	callstack 0
  6857                           
  6858 ;; *************** function _color_click_init *****************
  6859 ;; Defined at:
  6860 ;;		line 5 in file "color.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;		None
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;		None
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  1    wreg      void 
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0, cstack
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6877 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6878 ;;Total ram usage:        1 bytes
  6879 ;; Hardware stack levels used: 1
  6880 ;; Hardware stack levels required when called: 9
  6881 ;; This function calls:
  6882 ;;		_I2C_2_Master_Init
  6883 ;;		_color_clear_init_interrupts
  6884 ;;		_color_writetoaddr
  6885 ;; This function is called by:
  6886 ;;		_main
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text23
  6891   00362E                     __ptext23:
  6892                           	callstack 0
  6893   00362E                     _color_click_init:
  6894                           	callstack 21
  6895   00362E                     
  6896                           ;color.c: 8:     I2C_2_Master_Init();
  6897   00362E  EC4E  F01B         	call	_I2C_2_Master_Init	;wreg free
  6898   003632                     
  6899                           ;color.c: 11:  color_writetoaddr(0x00, 0x01);
  6900   003632  0E01               	movlw	1
  6901   003634  6E0E               	movwf	color_writetoaddr@value^0,c
  6902   003636  0E00               	movlw	0
  6903   003638  ECEA  F01B         	call	_color_writetoaddr
  6904   00363C                     
  6905                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6906   00363C  0E3F               	movlw	63
  6907   00363E  6E15               	movwf	??_color_click_init^0,c
  6908   003640  0E55               	movlw	85
  6909   003642                     u3097:
  6910   003642  2EE8               	decfsz	wreg,f,c
  6911   003644  D7FE               	bra	u3097
  6912   003646  2E15               	decfsz	??_color_click_init^0,f,c
  6913   003648  D7FC               	bra	u3097
  6914   00364A  0000               	nop	
  6915   00364C                     
  6916                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  6917   00364C  0E03               	movlw	3
  6918   00364E  6E0E               	movwf	color_writetoaddr@value^0,c
  6919   003650  0E00               	movlw	0
  6920   003652  ECEA  F01B         	call	_color_writetoaddr
  6921   003656                     
  6922                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  6923   003656  0ED5               	movlw	213
  6924   003658  6E0E               	movwf	color_writetoaddr@value^0,c
  6925   00365A  0E01               	movlw	1
  6926   00365C  ECEA  F01B         	call	_color_writetoaddr
  6927   003660                     
  6928                           ;color.c: 21:     color_clear_init_interrupts();
  6929   003660  ECAF  F019         	call	_color_clear_init_interrupts	;wreg free
  6930   003664  0012               	return		;funcret
  6931   003666                     __end_of_color_click_init:
  6932                           	callstack 0
  6933                           
  6934 ;; *************** function _color_clear_init_interrupts *****************
  6935 ;; Defined at:
  6936 ;;		line 25 in file "color.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  low_threshol    2   18[COMRAM] unsigned int 
  6941 ;;  high_thresho    2   16[COMRAM] unsigned int 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      void 
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0, cstack
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6952 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6954 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6955 ;;Total ram usage:        5 bytes
  6956 ;; Hardware stack levels used: 1
  6957 ;; Hardware stack levels required when called: 8
  6958 ;; This function calls:
  6959 ;;		_I2C_2_Master_Start
  6960 ;;		_I2C_2_Master_Stop
  6961 ;;		_I2C_2_Master_Write
  6962 ;;		_color_writetoaddr
  6963 ;; This function is called by:
  6964 ;;		_color_click_init
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           	psect	text24
  6969   00335E                     __ptext24:
  6970                           	callstack 0
  6971   00335E                     _color_clear_init_interrupts:
  6972                           	callstack 21
  6973   00335E                     
  6974                           ;color.c: 27:     I2C_2_Master_Start();
  6975   00335E  EC74  F01C         	call	_I2C_2_Master_Start	;wreg free
  6976                           
  6977                           ;color.c: 28:     I2C_2_Master_Write(0x52 | 0x00);
  6978   003362  0E52               	movlw	82
  6979   003364  EC59  F01C         	call	_I2C_2_Master_Write
  6980                           
  6981                           ;color.c: 29:     I2C_2_Master_Write(0b11100110);
  6982   003368  0EE6               	movlw	230
  6983   00336A  EC59  F01C         	call	_I2C_2_Master_Write
  6984                           
  6985                           ;color.c: 30:     I2C_2_Master_Stop();
  6986   00336E  EC6F  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6987   003372                     
  6988                           ;color.c: 33:     unsigned int high_threshold = ambient + 20;
  6989   003372  0E14               	movlw	20
  6990   003374  2449               	addwf	_ambient^0,w,c
  6991   003376  6E11               	movwf	color_clear_init_interrupts@high_threshold^0,c
  6992   003378  0E00               	movlw	0
  6993   00337A  204A               	addwfc	(_ambient+1)^0,w,c
  6994   00337C  6E12               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  6995   00337E                     
  6996                           ;color.c: 34:     unsigned int low_threshold = ambient - 20;
  6997   00337E  0EEC               	movlw	236
  6998   003380  2449               	addwf	_ambient^0,w,c
  6999   003382  6E13               	movwf	color_clear_init_interrupts@low_threshold^0,c
  7000   003384  0EFF               	movlw	255
  7001   003386  204A               	addwfc	(_ambient+1)^0,w,c
  7002   003388  6E14               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  7003                           
  7004                           ;color.c: 37:  color_writetoaddr(0x00, 0x13);
  7005   00338A  0E13               	movlw	19
  7006   00338C  6E0E               	movwf	color_writetoaddr@value^0,c
  7007   00338E  0E00               	movlw	0
  7008   003390  ECEA  F01B         	call	_color_writetoaddr
  7009   003394                     
  7010                           ;color.c: 38:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7011   003394  0E3F               	movlw	63
  7012   003396  6E10               	movwf	??_color_clear_init_interrupts^0,c
  7013   003398  0E55               	movlw	85
  7014   00339A                     u3107:
  7015   00339A  2EE8               	decfsz	wreg,f,c
  7016   00339C  D7FE               	bra	u3107
  7017   00339E  2E10               	decfsz	??_color_clear_init_interrupts^0,f,c
  7018   0033A0  D7FC               	bra	u3107
  7019   0033A2  0000               	nop	
  7020   0033A4                     
  7021                           ;color.c: 39:     color_writetoaddr(0x07, (high_threshold >> 8));
  7022   0033A4  5012               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  7023   0033A6  6E0E               	movwf	color_writetoaddr@value^0,c
  7024   0033A8  0E07               	movlw	7
  7025   0033AA  ECEA  F01B         	call	_color_writetoaddr
  7026   0033AE                     
  7027                           ;color.c: 40:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  7028   0033AE  C011  F00E         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  7029   0033B2  0E06               	movlw	6
  7030   0033B4  ECEA  F01B         	call	_color_writetoaddr
  7031   0033B8                     
  7032                           ;color.c: 41:     color_writetoaddr(0x05, (low_threshold >> 8));
  7033   0033B8  5014               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  7034   0033BA  6E0E               	movwf	color_writetoaddr@value^0,c
  7035   0033BC  0E05               	movlw	5
  7036   0033BE  ECEA  F01B         	call	_color_writetoaddr
  7037   0033C2                     
  7038                           ;color.c: 42:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  7039   0033C2  C013  F00E         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  7040   0033C6  0E04               	movlw	4
  7041   0033C8  ECEA  F01B         	call	_color_writetoaddr
  7042   0033CC                     
  7043                           ;color.c: 43:     color_writetoaddr(0x0C, 0b0100);
  7044   0033CC  0E04               	movlw	4
  7045   0033CE  6E0E               	movwf	color_writetoaddr@value^0,c
  7046   0033D0  0E0C               	movlw	12
  7047   0033D2  ECEA  F01B         	call	_color_writetoaddr
  7048   0033D6  0012               	return		;funcret
  7049   0033D8                     __end_of_color_clear_init_interrupts:
  7050                           	callstack 0
  7051                           
  7052 ;; *************** function _color_writetoaddr *****************
  7053 ;; Defined at:
  7054 ;;		line 48 in file "color.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;  address         1    wreg     unsigned char 
  7057 ;;  value           1   13[COMRAM] unsigned char 
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;  address         1   14[COMRAM] unsigned char 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  1    wreg      void 
  7062 ;; Registers used:
  7063 ;;		wreg, status,2, status,0, cstack
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7069 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7073 ;;Total ram usage:        2 bytes
  7074 ;; Hardware stack levels used: 1
  7075 ;; Hardware stack levels required when called: 7
  7076 ;; This function calls:
  7077 ;;		_I2C_2_Master_Start
  7078 ;;		_I2C_2_Master_Stop
  7079 ;;		_I2C_2_Master_Write
  7080 ;; This function is called by:
  7081 ;;		_color_click_init
  7082 ;;		_color_clear_init_interrupts
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text25
  7087   0037D4                     __ptext25:
  7088                           	callstack 0
  7089   0037D4                     _color_writetoaddr:
  7090                           	callstack 22
  7091                           
  7092                           ;incstack = 0
  7093                           ;color_writetoaddr@address stored from wreg
  7094   0037D4  6E0F               	movwf	color_writetoaddr@address^0,c
  7095   0037D6                     
  7096                           ;color.c: 49:     I2C_2_Master_Start();
  7097   0037D6  EC74  F01C         	call	_I2C_2_Master_Start	;wreg free
  7098                           
  7099                           ;color.c: 50:     I2C_2_Master_Write(0x52 | 0x00);
  7100   0037DA  0E52               	movlw	82
  7101   0037DC  EC59  F01C         	call	_I2C_2_Master_Write
  7102                           
  7103                           ;color.c: 51:     I2C_2_Master_Write(0x80 | address);
  7104   0037E0  500F               	movf	color_writetoaddr@address^0,w,c
  7105   0037E2  0980               	iorlw	128
  7106   0037E4  EC59  F01C         	call	_I2C_2_Master_Write
  7107                           
  7108                           ;color.c: 52:     I2C_2_Master_Write(value);
  7109   0037E8  500E               	movf	color_writetoaddr@value^0,w,c
  7110   0037EA  EC59  F01C         	call	_I2C_2_Master_Write
  7111                           
  7112                           ;color.c: 53:     I2C_2_Master_Stop();
  7113   0037EE  EC6F  F01C         	call	_I2C_2_Master_Stop	;wreg free
  7114   0037F2  0012               	return		;funcret
  7115   0037F4                     __end_of_color_writetoaddr:
  7116                           	callstack 0
  7117                           
  7118 ;; *************** function _I2C_2_Master_Write *****************
  7119 ;; Defined at:
  7120 ;;		line 45 in file "i2c.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  data_byte       1    wreg     unsigned char 
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;  data_byte       1   12[COMRAM] unsigned char 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  1    wreg      void 
  7127 ;; Registers used:
  7128 ;;		wreg, status,2, status,0, cstack
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7137 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7138 ;;Total ram usage:        1 bytes
  7139 ;; Hardware stack levels used: 1
  7140 ;; Hardware stack levels required when called: 6
  7141 ;; This function calls:
  7142 ;;		_I2C_2_Master_Idle
  7143 ;; This function is called by:
  7144 ;;		_color_clear_init_interrupts
  7145 ;;		_color_writetoaddr
  7146 ;;		_color_read
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text26
  7151   0038B2                     __ptext26:
  7152                           	callstack 0
  7153   0038B2                     _I2C_2_Master_Write:
  7154                           	callstack 23
  7155                           
  7156                           ;incstack = 0
  7157                           ;I2C_2_Master_Write@data_byte stored from wreg
  7158   0038B2  6E0D               	movwf	I2C_2_Master_Write@data_byte^0,c
  7159   0038B4                     
  7160                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7161   0038B4  EC77  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7162   0038B8                     
  7163                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7164   0038B8  C00D  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7165   0038BC  0012               	return		;funcret
  7166   0038BE                     __end_of_I2C_2_Master_Write:
  7167                           	callstack 0
  7168                           
  7169 ;; *************** function _I2C_2_Master_Stop *****************
  7170 ;; Defined at:
  7171 ;;		line 39 in file "i2c.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;		None
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  1    wreg      void 
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7189 ;;Total ram usage:        0 bytes
  7190 ;; Hardware stack levels used: 1
  7191 ;; Hardware stack levels required when called: 6
  7192 ;; This function calls:
  7193 ;;		_I2C_2_Master_Idle
  7194 ;; This function is called by:
  7195 ;;		_color_clear_init_interrupts
  7196 ;;		_color_writetoaddr
  7197 ;;		_color_read
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text27
  7202   0038DE                     __ptext27:
  7203                           	callstack 0
  7204   0038DE                     _I2C_2_Master_Stop:
  7205                           	callstack 23
  7206   0038DE                     
  7207                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7208   0038DE  EC77  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7209   0038E2                     
  7210                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7211   0038E2  010E               	movlb	14	; () banked
  7212   0038E4  85DA               	bsf	218,2,b	;volatile
  7213   0038E6                     
  7214                           ; BSR set to: 14
  7215   0038E6  0012               	return		;funcret
  7216   0038E8                     __end_of_I2C_2_Master_Stop:
  7217                           	callstack 0
  7218                           
  7219 ;; *************** function _I2C_2_Master_Start *****************
  7220 ;; Defined at:
  7221 ;;		line 27 in file "i2c.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;		None
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;		None
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  1    wreg      void 
  7228 ;; Registers used:
  7229 ;;		wreg, status,2, status,0, cstack
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;Total ram usage:        0 bytes
  7240 ;; Hardware stack levels used: 1
  7241 ;; Hardware stack levels required when called: 6
  7242 ;; This function calls:
  7243 ;;		_I2C_2_Master_Idle
  7244 ;; This function is called by:
  7245 ;;		_color_clear_init_interrupts
  7246 ;;		_color_writetoaddr
  7247 ;;		_color_read
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text28
  7252   0038E8                     __ptext28:
  7253                           	callstack 0
  7254   0038E8                     _I2C_2_Master_Start:
  7255                           	callstack 23
  7256   0038E8                     
  7257                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7258   0038E8  EC77  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7259   0038EC                     
  7260                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7261   0038EC  010E               	movlb	14	; () banked
  7262   0038EE  81DA               	bsf	218,0,b	;volatile
  7263   0038F0                     
  7264                           ; BSR set to: 14
  7265   0038F0  0012               	return		;funcret
  7266   0038F2                     __end_of_I2C_2_Master_Start:
  7267                           	callstack 0
  7268                           
  7269 ;; *************** function _I2C_2_Master_Idle *****************
  7270 ;; Defined at:
  7271 ;;		line 22 in file "i2c.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;		None
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7289 ;;Total ram usage:        1 bytes
  7290 ;; Hardware stack levels used: 1
  7291 ;; Hardware stack levels required when called: 5
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_I2C_2_Master_Start
  7296 ;;		_I2C_2_Master_RepStart
  7297 ;;		_I2C_2_Master_Stop
  7298 ;;		_I2C_2_Master_Write
  7299 ;;		_I2C_2_Master_Read
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           	psect	text29
  7304   0036EE                     __ptext29:
  7305                           	callstack 0
  7306   0036EE                     _I2C_2_Master_Idle:
  7307                           	callstack 23
  7308   0036EE                     l179:
  7309   0036EE  010E               	movlb	14	; () banked
  7310   0036F0  B5D8               	btfsc	216,2,b	;volatile
  7311   0036F2  EF7D  F01B         	goto	u1101
  7312   0036F6  EF7F  F01B         	goto	u1100
  7313   0036FA                     u1101:
  7314   0036FA  EF77  F01B         	goto	l179
  7315   0036FE                     u1100:
  7316   0036FE                     
  7317                           ; BSR set to: 14
  7318   0036FE  CEDA F00C          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7319   003702  0E1F               	movlw	31
  7320   003704  160C               	andwf	??_I2C_2_Master_Idle^0,f,c
  7321   003706  A4D8               	btfss	status,2,c
  7322   003708  EF88  F01B         	goto	u1111
  7323   00370C  EF8A  F01B         	goto	u1110
  7324   003710                     u1111:
  7325   003710  EF77  F01B         	goto	l179
  7326   003714                     u1110:
  7327   003714                     
  7328                           ; BSR set to: 14
  7329   003714  0012               	return		;funcret
  7330   003716                     __end_of_I2C_2_Master_Idle:
  7331                           	callstack 0
  7332                           
  7333 ;; *************** function _I2C_2_Master_Init *****************
  7334 ;; Defined at:
  7335 ;;		line 4 in file "i2c.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;		None
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;		None
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  1    wreg      void 
  7342 ;; Registers used:
  7343 ;;		wreg, status,2
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7353 ;;Total ram usage:        0 bytes
  7354 ;; Hardware stack levels used: 1
  7355 ;; Hardware stack levels required when called: 5
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_color_click_init
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           	psect	text30
  7364   00369C                     __ptext30:
  7365                           	callstack 0
  7366   00369C                     _I2C_2_Master_Init:
  7367                           	callstack 24
  7368   00369C                     
  7369                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7370   00369C  010E               	movlb	14	; () banked
  7371   00369E  51D9               	movf	217,w,b	;volatile
  7372   0036A0  0BF0               	andlw	-16
  7373   0036A2  0908               	iorlw	8
  7374   0036A4  6FD9               	movwf	217,b	;volatile
  7375   0036A6                     
  7376                           ; BSR set to: 14
  7377                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7378   0036A6  8BD9               	bsf	217,5,b	;volatile
  7379                           
  7380                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7381   0036A8  0E9F               	movlw	159
  7382   0036AA  6FD6               	movwf	214,b	;volatile
  7383   0036AC                     
  7384                           ; BSR set to: 14
  7385                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7386   0036AC  8A84               	bsf	132,5,c	;volatile
  7387   0036AE                     
  7388                           ; BSR set to: 14
  7389                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7390   0036AE  8C84               	bsf	132,6,c	;volatile
  7391   0036B0                     
  7392                           ; BSR set to: 14
  7393                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7394   0036B0  9BA7               	bcf	167,5,b	;volatile
  7395   0036B2                     
  7396                           ; BSR set to: 14
  7397                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7398   0036B2  9DA7               	bcf	167,6,b	;volatile
  7399                           
  7400                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7401   0036B4  0E1D               	movlw	29
  7402   0036B6  6F1D               	movwf	29,b	;volatile
  7403                           
  7404                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7405   0036B8  0E1E               	movlw	30
  7406   0036BA  6F1C               	movwf	28,b	;volatile
  7407                           
  7408                           ;i2c.c: 18:   RD5PPS=0x1C;
  7409   0036BC  0E1C               	movlw	28
  7410   0036BE  6F6F               	movwf	111,b	;volatile
  7411                           
  7412                           ;i2c.c: 19:   RD6PPS=0x1B;
  7413   0036C0  0E1B               	movlw	27
  7414   0036C2  6F70               	movwf	112,b	;volatile
  7415   0036C4                     
  7416                           ; BSR set to: 14
  7417   0036C4  0012               	return		;funcret
  7418   0036C6                     __end_of_I2C_2_Master_Init:
  7419                           	callstack 0
  7420                           
  7421 ;; *************** function _batteryLevel *****************
  7422 ;; Defined at:
  7423 ;;		line 6 in file "battery.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;		None
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;  batteryQuart    1   20[COMRAM] unsigned char 
  7428 ;;  batteryVolta    1   19[COMRAM] unsigned char 
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      void 
  7431 ;; Registers used:
  7432 ;;		wreg, status,2, status,0, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7441 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7442 ;;Total ram usage:        2 bytes
  7443 ;; Hardware stack levels used: 1
  7444 ;; Hardware stack levels required when called: 6
  7445 ;; This function calls:
  7446 ;;		_ADC_getval
  7447 ;;		_ADC_init
  7448 ;;		___awdiv
  7449 ;; This function is called by:
  7450 ;;		_main
  7451 ;; This function uses a non-reentrant model
  7452 ;;
  7453                           
  7454                           	psect	text31
  7455   00359E                     __ptext31:
  7456                           	callstack 0
  7457   00359E                     _batteryLevel:
  7458                           	callstack 24
  7459   00359E                     
  7460                           ;battery.c: 7:     ADC_init();
  7461   00359E  EC29  F01C         	call	_ADC_init	;wreg free
  7462                           
  7463                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
  7464   0035A2  EC36  F01C         	call	_ADC_getval	;wreg free
  7465   0035A6  6E14               	movwf	batteryLevel@batteryVoltage^0,c
  7466   0035A8                     
  7467                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
  7468   0035A8  C014  F00C         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
  7469   0035AC  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  7470   0035AE  0E00               	movlw	0
  7471   0035B0  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  7472   0035B2  0E18               	movlw	24
  7473   0035B4  6E0E               	movwf	___awdiv@divisor^0,c
  7474   0035B6  EC05  F019         	call	___awdiv	;wreg free
  7475   0035BA  500C               	movf	?___awdiv^0,w,c
  7476   0035BC  6E15               	movwf	batteryLevel@batteryQuarter^0,c
  7477   0035BE                     
  7478                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
  7479   0035BE  A215               	btfss	batteryLevel@batteryQuarter^0,1,c
  7480   0035C0  EFE4  F01A         	goto	u1651
  7481   0035C4  EFE6  F01A         	goto	u1650
  7482   0035C8                     u1651:
  7483   0035C8  EFE9  F01A         	goto	l384
  7484   0035CC                     u1650:
  7485   0035CC  8E7C               	bsf	124,7,c	;volatile
  7486   0035CE  EFEA  F01A         	goto	l385
  7487   0035D2                     l384:
  7488   0035D2  9E7C               	bcf	124,7,c	;volatile
  7489   0035D4                     l385:
  7490                           
  7491                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
  7492   0035D4  A015               	btfss	batteryLevel@batteryQuarter^0,0,c
  7493   0035D6  EFEF  F01A         	goto	u1661
  7494   0035DA  EFF1  F01A         	goto	u1660
  7495   0035DE                     u1661:
  7496   0035DE  EFF4  F01A         	goto	l386
  7497   0035E2                     u1660:
  7498   0035E2  8680               	bsf	128,3,c	;volatile
  7499   0035E4  EFF5  F01A         	goto	l388
  7500   0035E8                     l386:
  7501   0035E8  9680               	bcf	128,3,c	;volatile
  7502   0035EA                     l388:
  7503   0035EA  0012               	return		;funcret
  7504   0035EC                     __end_of_batteryLevel:
  7505                           	callstack 0
  7506                           
  7507 ;; *************** function ___awdiv *****************
  7508 ;; Defined at:
  7509 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  dividend        2   11[COMRAM] int 
  7512 ;;  divisor         2   13[COMRAM] int 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  quotient        2   17[COMRAM] int 
  7515 ;;  sign            1   16[COMRAM] unsigned char 
  7516 ;;  counter         1   15[COMRAM] unsigned char 
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  2   11[COMRAM] int 
  7519 ;; Registers used:
  7520 ;;		wreg, status,2, status,0
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7526 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7527 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7530 ;;Total ram usage:        8 bytes
  7531 ;; Hardware stack levels used: 1
  7532 ;; Hardware stack levels required when called: 5
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		_batteryLevel
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text32
  7541   00320A                     __ptext32:
  7542                           	callstack 0
  7543   00320A                     ___awdiv:
  7544                           	callstack 24
  7545   00320A  0E00               	movlw	0
  7546   00320C  6E11               	movwf	___awdiv@sign^0,c
  7547   00320E  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  7548   003210  EF0E  F019         	goto	u1590
  7549   003214  EF0C  F019         	goto	u1591
  7550   003218                     u1591:
  7551   003218  EF14  F019         	goto	l2949
  7552   00321C                     u1590:
  7553   00321C  6C0E               	negf	___awdiv@divisor^0,c
  7554   00321E  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  7555   003220  B0D8               	btfsc	status,0,c
  7556   003222  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  7557   003224  0E01               	movlw	1
  7558   003226  6E11               	movwf	___awdiv@sign^0,c
  7559   003228                     l2949:
  7560   003228  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  7561   00322A  EF1B  F019         	goto	u1600
  7562   00322E  EF19  F019         	goto	u1601
  7563   003232                     u1601:
  7564   003232  EF21  F019         	goto	l2955
  7565   003236                     u1600:
  7566   003236  6C0C               	negf	___awdiv@dividend^0,c
  7567   003238  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  7568   00323A  B0D8               	btfsc	status,0,c
  7569   00323C  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  7570   00323E  0E01               	movlw	1
  7571   003240  1A11               	xorwf	___awdiv@sign^0,f,c
  7572   003242                     l2955:
  7573   003242  0E00               	movlw	0
  7574   003244  6E13               	movwf	(___awdiv@quotient+1)^0,c
  7575   003246  0E00               	movlw	0
  7576   003248  6E12               	movwf	___awdiv@quotient^0,c
  7577   00324A  500E               	movf	___awdiv@divisor^0,w,c
  7578   00324C  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  7579   00324E  B4D8               	btfsc	status,2,c
  7580   003250  EF2C  F019         	goto	u1611
  7581   003254  EF2E  F019         	goto	u1610
  7582   003258                     u1611:
  7583   003258  EF56  F019         	goto	l2977
  7584   00325C                     u1610:
  7585   00325C  0E01               	movlw	1
  7586   00325E  6E10               	movwf	___awdiv@counter^0,c
  7587   003260  EF36  F019         	goto	l2963
  7588   003264                     l2961:
  7589   003264  90D8               	bcf	status,0,c
  7590   003266  360E               	rlcf	___awdiv@divisor^0,f,c
  7591   003268  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  7592   00326A  2A10               	incf	___awdiv@counter^0,f,c
  7593   00326C                     l2963:
  7594   00326C  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  7595   00326E  EF3B  F019         	goto	u1621
  7596   003272  EF3D  F019         	goto	u1620
  7597   003276                     u1621:
  7598   003276  EF32  F019         	goto	l2961
  7599   00327A                     u1620:
  7600   00327A                     l2965:
  7601   00327A  90D8               	bcf	status,0,c
  7602   00327C  3612               	rlcf	___awdiv@quotient^0,f,c
  7603   00327E  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  7604   003280  500E               	movf	___awdiv@divisor^0,w,c
  7605   003282  5C0C               	subwf	___awdiv@dividend^0,w,c
  7606   003284  500F               	movf	(___awdiv@divisor+1)^0,w,c
  7607   003286  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  7608   003288  A0D8               	btfss	status,0,c
  7609   00328A  EF49  F019         	goto	u1631
  7610   00328E  EF4B  F019         	goto	u1630
  7611   003292                     u1631:
  7612   003292  EF50  F019         	goto	l2973
  7613   003296                     u1630:
  7614   003296  500E               	movf	___awdiv@divisor^0,w,c
  7615   003298  5E0C               	subwf	___awdiv@dividend^0,f,c
  7616   00329A  500F               	movf	(___awdiv@divisor+1)^0,w,c
  7617   00329C  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  7618   00329E  8012               	bsf	___awdiv@quotient^0,0,c
  7619   0032A0                     l2973:
  7620   0032A0  90D8               	bcf	status,0,c
  7621   0032A2  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  7622   0032A4  320E               	rrcf	___awdiv@divisor^0,f,c
  7623   0032A6  2E10               	decfsz	___awdiv@counter^0,f,c
  7624   0032A8  EF3D  F019         	goto	l2965
  7625   0032AC                     l2977:
  7626   0032AC  5011               	movf	___awdiv@sign^0,w,c
  7627   0032AE  B4D8               	btfsc	status,2,c
  7628   0032B0  EF5C  F019         	goto	u1641
  7629   0032B4  EF5E  F019         	goto	u1640
  7630   0032B8                     u1641:
  7631   0032B8  EF62  F019         	goto	l2981
  7632   0032BC                     u1640:
  7633   0032BC  6C12               	negf	___awdiv@quotient^0,c
  7634   0032BE  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  7635   0032C0  B0D8               	btfsc	status,0,c
  7636   0032C2  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  7637   0032C4                     l2981:
  7638   0032C4  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  7639   0032C8  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  7640   0032CC  0012               	return		;funcret
  7641   0032CE                     __end_of___awdiv:
  7642                           	callstack 0
  7643                           
  7644 ;; *************** function _ADC_init *****************
  7645 ;; Defined at:
  7646 ;;		line 9 in file "ADC.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;		None
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;		None
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg, status,2
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7664 ;;Total ram usage:        0 bytes
  7665 ;; Hardware stack levels used: 1
  7666 ;; Hardware stack levels required when called: 5
  7667 ;; This function calls:
  7668 ;;		Nothing
  7669 ;; This function is called by:
  7670 ;;		_batteryLevel
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           	psect	text33
  7675   003852                     __ptext33:
  7676                           	callstack 0
  7677   003852                     _ADC_init:
  7678                           	callstack 24
  7679   003852                     
  7680                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  7681   003852  8C86               	bsf	134,6,c	;volatile
  7682                           
  7683                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  7684   003854  010E               	movlb	14	; () banked
  7685   003856  8DB4               	bsf	180,6,b	;volatile
  7686                           
  7687                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  7688   003858  010F               	movlb	15	; () banked
  7689   00385A  9958               	bcf	88,4,b	;volatile
  7690   00385C                     
  7691                           ; BSR set to: 15
  7692                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  7693   00385C  0EFC               	movlw	-4
  7694   00385E  1758               	andwf	88,f,b	;volatile
  7695                           
  7696                           ;ADC.c: 17:     ADPCH=0b101110;
  7697   003860  0E2E               	movlw	46
  7698   003862  6F5F               	movwf	95,b	;volatile
  7699   003864                     
  7700                           ; BSR set to: 15
  7701                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  7702   003864  9460               	bcf	96,2,c	;volatile
  7703   003866                     
  7704                           ; BSR set to: 15
  7705                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  7706   003866  8860               	bsf	96,4,c	;volatile
  7707   003868                     
  7708                           ; BSR set to: 15
  7709                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  7710   003868  8E60               	bsf	96,7,c	;volatile
  7711   00386A                     
  7712                           ; BSR set to: 15
  7713   00386A  0012               	return		;funcret
  7714   00386C                     __end_of_ADC_init:
  7715                           	callstack 0
  7716                           
  7717 ;; *************** function _ADC_getval *****************
  7718 ;; Defined at:
  7719 ;;		line 23 in file "ADC.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;		None
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;  tmpval          1   11[COMRAM] unsigned char 
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  1    wreg      unsigned char 
  7726 ;; Registers used:
  7727 ;;		wreg, status,2
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7736 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7737 ;;Total ram usage:        1 bytes
  7738 ;; Hardware stack levels used: 1
  7739 ;; Hardware stack levels required when called: 5
  7740 ;; This function calls:
  7741 ;;		Nothing
  7742 ;; This function is called by:
  7743 ;;		_batteryLevel
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text34
  7748   00386C                     __ptext34:
  7749                           	callstack 0
  7750   00386C                     _ADC_getval:
  7751                           	callstack 24
  7752   00386C                     
  7753                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  7754   00386C  8060               	bsf	96,0,c	;volatile
  7755   00386E                     l370:
  7756   00386E  B060               	btfsc	96,0,c	;volatile
  7757   003870  EF3C  F01C         	goto	u1401
  7758   003874  EF3E  F01C         	goto	u1400
  7759   003878                     u1401:
  7760   003878  EF37  F01C         	goto	l370
  7761   00387C                     u1400:
  7762   00387C                     
  7763                           ;ADC.c: 31:     tmpval = ADRESH;
  7764   00387C  CF64 F00C          	movff	3940,ADC_getval@tmpval	;volatile
  7765   003880                     
  7766                           ;ADC.c: 35:     return tmpval;
  7767   003880  500C               	movf	ADC_getval@tmpval^0,w,c
  7768   003882  0012               	return		;funcret
  7769   003884                     __end_of_ADC_getval:
  7770                           	callstack 0
  7771                           
  7772 ;; *************** function _Timer0_init *****************
  7773 ;; Defined at:
  7774 ;;		line 7 in file "timers.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;		None
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;		None
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      void 
  7781 ;; Registers used:
  7782 ;;		wreg, status,2
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7792 ;;Total ram usage:        0 bytes
  7793 ;; Hardware stack levels used: 1
  7794 ;; Hardware stack levels required when called: 5
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_main
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text35
  7803   0037F4                     __ptext35:
  7804                           	callstack 0
  7805   0037F4                     _Timer0_init:
  7806                           	callstack 25
  7807   0037F4                     
  7808                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  7809   0037F4  50D6               	movf	214,w,c	;volatile
  7810   0037F6  0B1F               	andlw	-225
  7811   0037F8  0940               	iorlw	64
  7812   0037FA  6ED6               	movwf	214,c	;volatile
  7813   0037FC                     
  7814                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  7815   0037FC  88D6               	bsf	214,4,c	;volatile
  7816                           
  7817                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
  7818   0037FE  50D6               	movf	214,w,c	;volatile
  7819   003800  0BF0               	andlw	-16
  7820   003802  090B               	iorlw	11
  7821   003804  6ED6               	movwf	214,c	;volatile
  7822   003806                     
  7823                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  7824   003806  88D5               	bsf	213,4,c	;volatile
  7825                           
  7826                           ;timers.c: 15:     TMR0H=0;
  7827   003808  0E00               	movlw	0
  7828   00380A  6ED4               	movwf	212,c	;volatile
  7829                           
  7830                           ;timers.c: 16:     TMR0L=0;
  7831   00380C  0E00               	movlw	0
  7832   00380E  6ED3               	movwf	211,c	;volatile
  7833   003810                     
  7834                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  7835   003810  8ED5               	bsf	213,7,c	;volatile
  7836   003812  0012               	return		;funcret
  7837   003814                     __end_of_Timer0_init:
  7838                           	callstack 0
  7839                           
  7840 ;; *************** function _Interrupts_init *****************
  7841 ;; Defined at:
  7842 ;;		line 11 in file "interrupts.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;		None
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;		None
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  1    wreg      void 
  7849 ;; Registers used:
  7850 ;;		None
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7860 ;;Total ram usage:        0 bytes
  7861 ;; Hardware stack levels used: 1
  7862 ;; Hardware stack levels required when called: 5
  7863 ;; This function calls:
  7864 ;;		Nothing
  7865 ;; This function is called by:
  7866 ;;		_main
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           	psect	text36
  7871   00389C                     __ptext36:
  7872                           	callstack 0
  7873   00389C                     _Interrupts_init:
  7874                           	callstack 25
  7875   00389C                     
  7876                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
  7877   00389C  8082               	bsf	130,0,c	;volatile
  7878                           
  7879                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
  7880   00389E  010E               	movlb	14	; () banked
  7881   0038A0  919A               	bcf	154,0,b	;volatile
  7882                           
  7883                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
  7884   0038A2  8129               	bsf	41,0,b	;volatile
  7885                           
  7886                           ;interrupts.c: 17:     IPR0bits.INT0IP = 1;
  7887   0038A4  811F               	bsf	31,0,b	;volatile
  7888                           
  7889                           ;interrupts.c: 18:     INTCONbits.INT0EDG = 0;
  7890   0038A6  90F2               	bcf	242,0,c	;volatile
  7891                           
  7892                           ;interrupts.c: 22:     TMR0IE=1;
  7893   0038A8  8B29               	bsf	41,5,b	;volatile
  7894                           
  7895                           ;interrupts.c: 23:     PIE4bits.RC4IE=1;
  7896   0038AA  872D               	bsf	45,3,b	;volatile
  7897                           
  7898                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  7899   0038AC  8CF2               	bsf	242,6,c	;volatile
  7900                           
  7901                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  7902   0038AE  8EF2               	bsf	242,7,c	;volatile
  7903   0038B0                     
  7904                           ; BSR set to: 14
  7905   0038B0  0012               	return		;funcret
  7906   0038B2                     __end_of_Interrupts_init:
  7907                           	callstack 0
  7908                           
  7909 ;; *************** function _Buggy_init *****************
  7910 ;; Defined at:
  7911 ;;		line 7 in file "buggysetup.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;		None
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;		None
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		None
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7929 ;;Total ram usage:        0 bytes
  7930 ;; Hardware stack levels used: 1
  7931 ;; Hardware stack levels required when called: 5
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_main
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text37
  7940   003666                     __ptext37:
  7941                           	callstack 0
  7942   003666                     _Buggy_init:
  7943                           	callstack 25
  7944   003666                     
  7945                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
  7946   003666  9E7C               	bcf	124,7,c	;volatile
  7947                           
  7948                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
  7949   003668  9E84               	bcf	132,7,c	;volatile
  7950                           
  7951                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
  7952   00366A  9680               	bcf	128,3,c	;volatile
  7953                           
  7954                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
  7955   00366C  9688               	bcf	136,3,c	;volatile
  7956                           
  7957                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
  7958   00366E  8486               	bsf	134,2,c	;volatile
  7959                           
  7960                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
  7961   003670  010E               	movlb	14	; () banked
  7962   003672  95B4               	bcf	180,2,b	;volatile
  7963                           
  7964                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
  7965   003674  8686               	bsf	134,3,c	;volatile
  7966                           
  7967                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
  7968   003676  97B4               	bcf	180,3,b	;volatile
  7969                           
  7970                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
  7971   003678  9280               	bcf	128,1,c	;volatile
  7972                           
  7973                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
  7974   00367A  9288               	bcf	136,1,c	;volatile
  7975                           
  7976                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
  7977   00367C  987C               	bcf	124,4,c	;volatile
  7978                           
  7979                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
  7980   00367E  9884               	bcf	132,4,c	;volatile
  7981                           
  7982                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
  7983   003680  967C               	bcf	124,3,c	;volatile
  7984                           
  7985                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
  7986   003682  9684               	bcf	132,3,c	;volatile
  7987                           
  7988                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
  7989   003684  97A7               	bcf	167,3,b	;volatile
  7990                           
  7991                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
  7992   003686  9080               	bcf	128,0,c	;volatile
  7993                           
  7994                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
  7995   003688  9088               	bcf	136,0,c	;volatile
  7996                           
  7997                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
  7998   00368A  907E               	bcf	126,0,c	;volatile
  7999                           
  8000                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
  8001   00368C  9086               	bcf	134,0,c	;volatile
  8002                           
  8003                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
  8004   00368E  907F               	bcf	127,0,c	;volatile
  8005                           
  8006                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
  8007   003690  9087               	bcf	135,0,c	;volatile
  8008                           
  8009                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
  8010   003692  9E7D               	bcf	125,7,c	;volatile
  8011                           
  8012                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
  8013   003694  9E85               	bcf	133,7,c	;volatile
  8014                           
  8015                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
  8016   003696  9679               	bcf	121,3,c	;volatile
  8017                           
  8018                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
  8019   003698  9681               	bcf	129,3,c	;volatile
  8020   00369A                     
  8021                           ; BSR set to: 14
  8022   00369A  0012               	return		;funcret
  8023   00369C                     __end_of_Buggy_init:
  8024                           	callstack 0
  8025                           
  8026 ;; *************** function _HighISR *****************
  8027 ;; Defined at:
  8028 ;;		line 33 in file "interrupts.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;		None
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;		None
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  1    wreg      void 
  8035 ;; Registers used:
  8036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8046 ;;Total ram usage:        2 bytes
  8047 ;; Hardware stack levels used: 1
  8048 ;; Hardware stack levels required when called: 4
  8049 ;; This function calls:
  8050 ;;		_getCharFromTxBuf
  8051 ;;		_isDataInTxBuf
  8052 ;;		_putCharToRxBuf
  8053 ;;		i2_color_clear_init_interrupts
  8054 ;; This function is called by:
  8055 ;;		Interrupt level 2
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	intcode
  8060   000008                     __pintcode:
  8061                           	callstack 0
  8062   000008                     _HighISR:
  8063                           	callstack 21
  8064                           
  8065                           ; BSR set to: 14
  8066                           ;incstack = 0
  8067   000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8068   00000A  CFD9 F00A          	movff	fsr2l,??_HighISR
  8069   00000E  CFDA F00B          	movff	fsr2h,??_HighISR+1
  8070   000012                     
  8071                           ;interrupts.c: 37:     if(PIR0bits.INT0IF){
  8072   000012  010E               	movlb	14	; () banked
  8073   000014  A133               	btfss	51,0,b	;volatile
  8074   000016  EF0F  F000         	goto	i2u202_41
  8075   00001A  EF11  F000         	goto	i2u202_40
  8076   00001E                     i2u202_41:
  8077   00001E  EF18  F000         	goto	i2l3465
  8078   000022                     i2u202_40:
  8079   000022                     
  8080                           ; BSR set to: 14
  8081                           ;interrupts.c: 38:         wall = 1;
  8082   000022  0E01               	movlw	1
  8083   000024  0101               	movlb	1	; () banked
  8084   000026  6FFB               	movwf	_wall& (0+255),b
  8085   000028                     
  8086                           ; BSR set to: 1
  8087                           ;interrupts.c: 39:         color_clear_init_interrupts();
  8088   000028  ECEC  F019         	call	i2_color_clear_init_interrupts	;wreg free
  8089   00002C                     
  8090                           ;interrupts.c: 40:         PIR0bits.INT0IF = 0;
  8091   00002C  010E               	movlb	14	; () banked
  8092   00002E  9133               	bcf	51,0,b	;volatile
  8093   000030                     i2l3465:
  8094                           
  8095                           ; BSR set to: 14
  8096                           ;interrupts.c: 47:     if(TMR0IF){
  8097   000030  AB33               	btfss	51,5,b	;volatile
  8098   000032  EF1D  F000         	goto	i2u203_41
  8099   000036  EF1F  F000         	goto	i2u203_40
  8100   00003A                     i2u203_41:
  8101   00003A  EF24  F000         	goto	i2l3471
  8102   00003E                     i2u203_40:
  8103   00003E                     
  8104                           ; BSR set to: 14
  8105                           ;interrupts.c: 48:         lost = 1;
  8106   00003E  0E01               	movlw	1
  8107   000040  0101               	movlb	1	; () banked
  8108   000042  6FFA               	movwf	_lost& (0+255),b
  8109   000044                     
  8110                           ; BSR set to: 1
  8111                           ;interrupts.c: 49:         TMR0IF=0;
  8112   000044  010E               	movlb	14	; () banked
  8113   000046  9B33               	bcf	51,5,b	;volatile
  8114   000048                     i2l3471:
  8115                           
  8116                           ; BSR set to: 14
  8117                           ;interrupts.c: 56:     if(PIR4bits.RC4IF){
  8118   000048  A737               	btfss	55,3,b	;volatile
  8119   00004A  EF29  F000         	goto	i2u204_41
  8120   00004E  EF2B  F000         	goto	i2u204_40
  8121   000052                     i2u204_41:
  8122   000052  EF2E  F000         	goto	i2l3475
  8123   000056                     i2u204_40:
  8124   000056                     
  8125                           ; BSR set to: 14
  8126                           ;interrupts.c: 58:         putCharToRxBuf(RC4REG);
  8127   000056  51E3               	movf	227,w,b	;volatile
  8128   000058  ECB2  F01B         	call	_putCharToRxBuf
  8129   00005C                     i2l3475:
  8130                           
  8131                           ;interrupts.c: 62:     if(PIR4bits.TX4IF){
  8132   00005C  010E               	movlb	14	; () banked
  8133   00005E  A537               	btfss	55,2,b	;volatile
  8134   000060  EF34  F000         	goto	i2u205_41
  8135   000064  EF36  F000         	goto	i2u205_40
  8136   000068                     i2u205_41:
  8137   000068  EF46  F000         	goto	i2l289
  8138   00006C                     i2u205_40:
  8139   00006C                     
  8140                           ; BSR set to: 14
  8141                           ;interrupts.c: 64:         TX4REG = getCharFromTxBuf();
  8142   00006C  ECC5  F01B         	call	_getCharFromTxBuf	;wreg free
  8143   000070  010E               	movlb	14	; () banked
  8144   000072  6FE4               	movwf	228,b	;volatile
  8145   000074                     
  8146                           ; BSR set to: 14
  8147                           ;interrupts.c: 65:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
  8148   000074  EC42  F01C         	call	_isDataInTxBuf	;wreg free
  8149   000078  0900               	iorlw	0
  8150   00007A  A4D8               	btfss	status,2,c
  8151   00007C  EF42  F000         	goto	i2u206_41
  8152   000080  EF44  F000         	goto	i2u206_40
  8153   000084                     i2u206_41:
  8154   000084  EF46  F000         	goto	i2l289
  8155   000088                     i2u206_40:
  8156   000088  010E               	movlb	14	; () banked
  8157   00008A  952D               	bcf	45,2,b	;volatile
  8158   00008C                     i2l289:
  8159   00008C  C00B  FFDA         	movff	??_HighISR+1,fsr2h
  8160   000090  C00A  FFD9         	movff	??_HighISR,fsr2l
  8161   000094  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8162   000096  0011               	retfie		f
  8163   000098                     __end_of_HighISR:
  8164                           	callstack 0
  8165                           
  8166 ;; *************** function i2_color_clear_init_interrupts *****************
  8167 ;; Defined at:
  8168 ;;		line 25 in file "color.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;		None
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;  low_threshol    2    7[COMRAM] unsigned int 
  8173 ;;  high_thresho    2    5[COMRAM] unsigned int 
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		wreg, status,2, status,0, cstack
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8184 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8186 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8187 ;;Total ram usage:        5 bytes
  8188 ;; Hardware stack levels used: 1
  8189 ;; Hardware stack levels required when called: 3
  8190 ;; This function calls:
  8191 ;;		i2_I2C_2_Master_Start
  8192 ;;		i2_I2C_2_Master_Stop
  8193 ;;		i2_I2C_2_Master_Write
  8194 ;;		i2_color_writetoaddr
  8195 ;; This function is called by:
  8196 ;;		_HighISR
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           	psect	text39
  8201   0033D8                     __ptext39:
  8202                           	callstack 0
  8203   0033D8                     i2_color_clear_init_interrupts:
  8204                           	callstack 21
  8205   0033D8                     
  8206                           ;color.c: 27:     I2C_2_Master_Start();
  8207   0033D8  EC7E  F01C         	call	i2_I2C_2_Master_Start	;wreg free
  8208                           
  8209                           ;color.c: 28:     I2C_2_Master_Write(0x52 | 0x00);
  8210   0033DC  0E52               	movlw	82
  8211   0033DE  EC5F  F01C         	call	i2_I2C_2_Master_Write
  8212                           
  8213                           ;color.c: 29:     I2C_2_Master_Write(0b11100110);
  8214   0033E2  0EE6               	movlw	230
  8215   0033E4  EC5F  F01C         	call	i2_I2C_2_Master_Write
  8216                           
  8217                           ;color.c: 30:     I2C_2_Master_Stop();
  8218   0033E8  EC79  F01C         	call	i2_I2C_2_Master_Stop	;wreg free
  8219   0033EC                     
  8220                           ;color.c: 33:     unsigned int high_threshold = ambient + 20;
  8221   0033EC  0E14               	movlw	20
  8222   0033EE  2449               	addwf	_ambient^0,w,c
  8223   0033F0  6E06               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
  8224   0033F2  0E00               	movlw	0
  8225   0033F4  204A               	addwfc	(_ambient+1)^0,w,c
  8226   0033F6  6E07               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
  8227   0033F8                     
  8228                           ;color.c: 34:     unsigned int low_threshold = ambient - 20;
  8229   0033F8  0EEC               	movlw	236
  8230   0033FA  2449               	addwf	_ambient^0,w,c
  8231   0033FC  6E08               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
  8232   0033FE  0EFF               	movlw	255
  8233   003400  204A               	addwfc	(_ambient+1)^0,w,c
  8234   003402  6E09               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
  8235                           
  8236                           ;color.c: 37:  color_writetoaddr(0x00, 0x13);
  8237   003404  0E13               	movlw	19
  8238   003406  6E03               	movwf	i2color_writetoaddr@value^0,c
  8239   003408  0E00               	movlw	0
  8240   00340A  EC0A  F01C         	call	i2_color_writetoaddr
  8241   00340E                     
  8242                           ;color.c: 38:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8243   00340E  0E3F               	movlw	63
  8244   003410  6E05               	movwf	??i2_color_clear_init_interrupts^0,c
  8245   003412  0E55               	movlw	85
  8246   003414                     i2u311_47:
  8247   003414  2EE8               	decfsz	wreg,f,c
  8248   003416  D7FE               	bra	i2u311_47
  8249   003418  2E05               	decfsz	??i2_color_clear_init_interrupts^0,f,c
  8250   00341A  D7FC               	bra	i2u311_47
  8251   00341C  0000               	nop	
  8252   00341E                     
  8253                           ;color.c: 39:     color_writetoaddr(0x07, (high_threshold >> 8));
  8254   00341E  5007               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
  8255   003420  6E03               	movwf	i2color_writetoaddr@value^0,c
  8256   003422  0E07               	movlw	7
  8257   003424  EC0A  F01C         	call	i2_color_writetoaddr
  8258   003428                     
  8259                           ;color.c: 40:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  8260   003428  C006  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
  8261   00342C  0E06               	movlw	6
  8262   00342E  EC0A  F01C         	call	i2_color_writetoaddr
  8263   003432                     
  8264                           ;color.c: 41:     color_writetoaddr(0x05, (low_threshold >> 8));
  8265   003432  5009               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
  8266   003434  6E03               	movwf	i2color_writetoaddr@value^0,c
  8267   003436  0E05               	movlw	5
  8268   003438  EC0A  F01C         	call	i2_color_writetoaddr
  8269   00343C                     
  8270                           ;color.c: 42:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  8271   00343C  C008  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
  8272   003440  0E04               	movlw	4
  8273   003442  EC0A  F01C         	call	i2_color_writetoaddr
  8274   003446                     
  8275                           ;color.c: 43:     color_writetoaddr(0x0C, 0b0100);
  8276   003446  0E04               	movlw	4
  8277   003448  6E03               	movwf	i2color_writetoaddr@value^0,c
  8278   00344A  0E0C               	movlw	12
  8279   00344C  EC0A  F01C         	call	i2_color_writetoaddr
  8280   003450  0012               	return		;funcret
  8281   003452                     __end_ofi2_color_clear_init_interrupts:
  8282                           	callstack 0
  8283                           
  8284 ;; *************** function i2_color_writetoaddr *****************
  8285 ;; Defined at:
  8286 ;;		line 48 in file "color.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  address         1    wreg     unsigned char 
  8289 ;;  value           1    2[COMRAM] unsigned char 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;  address         1    3[COMRAM] unsigned char 
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  1    wreg      void 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0, cstack
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8301 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8305 ;;Total ram usage:        2 bytes
  8306 ;; Hardware stack levels used: 1
  8307 ;; Hardware stack levels required when called: 2
  8308 ;; This function calls:
  8309 ;;		i2_I2C_2_Master_Start
  8310 ;;		i2_I2C_2_Master_Stop
  8311 ;;		i2_I2C_2_Master_Write
  8312 ;; This function is called by:
  8313 ;;		i2_color_clear_init_interrupts
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text40
  8318   003814                     __ptext40:
  8319                           	callstack 0
  8320   003814                     i2_color_writetoaddr:
  8321                           	callstack 21
  8322                           
  8323                           ;incstack = 0
  8324                           ;i2color_writetoaddr@address stored from wreg
  8325   003814  6E04               	movwf	i2color_writetoaddr@address^0,c
  8326   003816                     
  8327                           ;color.c: 49:     I2C_2_Master_Start();
  8328   003816  EC7E  F01C         	call	i2_I2C_2_Master_Start	;wreg free
  8329                           
  8330                           ;color.c: 50:     I2C_2_Master_Write(0x52 | 0x00);
  8331   00381A  0E52               	movlw	82
  8332   00381C  EC5F  F01C         	call	i2_I2C_2_Master_Write
  8333                           
  8334                           ;color.c: 51:     I2C_2_Master_Write(0x80 | address);
  8335   003820  5004               	movf	i2color_writetoaddr@address^0,w,c
  8336   003822  0980               	iorlw	128
  8337   003824  EC5F  F01C         	call	i2_I2C_2_Master_Write
  8338                           
  8339                           ;color.c: 52:     I2C_2_Master_Write(value);
  8340   003828  5003               	movf	i2color_writetoaddr@value^0,w,c
  8341   00382A  EC5F  F01C         	call	i2_I2C_2_Master_Write
  8342                           
  8343                           ;color.c: 53:     I2C_2_Master_Stop();
  8344   00382E  EC79  F01C         	call	i2_I2C_2_Master_Stop	;wreg free
  8345   003832  0012               	return		;funcret
  8346   003834                     __end_ofi2_color_writetoaddr:
  8347                           	callstack 0
  8348                           
  8349 ;; *************** function i2_I2C_2_Master_Write *****************
  8350 ;; Defined at:
  8351 ;;		line 45 in file "i2c.c"
  8352 ;; Parameters:    Size  Location     Type
  8353 ;;  data_byte       1    wreg     unsigned char 
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;  data_byte       1    1[COMRAM] unsigned char 
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  1    wreg      void 
  8358 ;; Registers used:
  8359 ;;		wreg, status,2, status,0, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8369 ;;Total ram usage:        1 bytes
  8370 ;; Hardware stack levels used: 1
  8371 ;; Hardware stack levels required when called: 1
  8372 ;; This function calls:
  8373 ;;		i2_I2C_2_Master_Idle
  8374 ;; This function is called by:
  8375 ;;		i2_color_clear_init_interrupts
  8376 ;;		i2_color_writetoaddr
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text41
  8381   0038BE                     __ptext41:
  8382                           	callstack 0
  8383   0038BE                     i2_I2C_2_Master_Write:
  8384                           	callstack 21
  8385                           
  8386                           ;incstack = 0
  8387                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8388   0038BE  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8389   0038C0                     
  8390                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8391   0038C0  EC8B  F01B         	call	i2_I2C_2_Master_Idle	;wreg free
  8392   0038C4                     
  8393                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8394   0038C4  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8395   0038C8  0012               	return		;funcret
  8396   0038CA                     __end_ofi2_I2C_2_Master_Write:
  8397                           	callstack 0
  8398                           
  8399 ;; *************** function i2_I2C_2_Master_Stop *****************
  8400 ;; Defined at:
  8401 ;;		line 39 in file "i2c.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;		None
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;		None
  8406 ;; Return value:  Size  Location     Type
  8407 ;;                  1    wreg      void 
  8408 ;; Registers used:
  8409 ;;		wreg, status,2, status,0, cstack
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/0
  8412 ;;		On exit  : 0/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8419 ;;Total ram usage:        0 bytes
  8420 ;; Hardware stack levels used: 1
  8421 ;; Hardware stack levels required when called: 1
  8422 ;; This function calls:
  8423 ;;		i2_I2C_2_Master_Idle
  8424 ;; This function is called by:
  8425 ;;		i2_color_clear_init_interrupts
  8426 ;;		i2_color_writetoaddr
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           	psect	text42
  8431   0038F2                     __ptext42:
  8432                           	callstack 0
  8433   0038F2                     i2_I2C_2_Master_Stop:
  8434                           	callstack 21
  8435   0038F2                     
  8436                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8437   0038F2  EC8B  F01B         	call	i2_I2C_2_Master_Idle	;wreg free
  8438   0038F6                     
  8439                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8440   0038F6  010E               	movlb	14	; () banked
  8441   0038F8  85DA               	bsf	218,2,b	;volatile
  8442   0038FA                     
  8443                           ; BSR set to: 14
  8444   0038FA  0012               	return		;funcret
  8445   0038FC                     __end_ofi2_I2C_2_Master_Stop:
  8446                           	callstack 0
  8447                           
  8448 ;; *************** function i2_I2C_2_Master_Start *****************
  8449 ;; Defined at:
  8450 ;;		line 27 in file "i2c.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;		None
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;		None
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  1    wreg      void 
  8457 ;; Registers used:
  8458 ;;		wreg, status,2, status,0, cstack
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8468 ;;Total ram usage:        0 bytes
  8469 ;; Hardware stack levels used: 1
  8470 ;; Hardware stack levels required when called: 1
  8471 ;; This function calls:
  8472 ;;		i2_I2C_2_Master_Idle
  8473 ;; This function is called by:
  8474 ;;		i2_color_clear_init_interrupts
  8475 ;;		i2_color_writetoaddr
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text43
  8480   0038FC                     __ptext43:
  8481                           	callstack 0
  8482   0038FC                     i2_I2C_2_Master_Start:
  8483                           	callstack 21
  8484   0038FC                     
  8485                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8486   0038FC  EC8B  F01B         	call	i2_I2C_2_Master_Idle	;wreg free
  8487   003900                     
  8488                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8489   003900  010E               	movlb	14	; () banked
  8490   003902  81DA               	bsf	218,0,b	;volatile
  8491   003904                     
  8492                           ; BSR set to: 14
  8493   003904  0012               	return		;funcret
  8494   003906                     __end_ofi2_I2C_2_Master_Start:
  8495                           	callstack 0
  8496                           
  8497 ;; *************** function i2_I2C_2_Master_Idle *****************
  8498 ;; Defined at:
  8499 ;;		line 22 in file "i2c.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;		None
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;		None
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  1    wreg      void 
  8506 ;; Registers used:
  8507 ;;		wreg, status,2, status,0
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8517 ;;Total ram usage:        1 bytes
  8518 ;; Hardware stack levels used: 1
  8519 ;; This function calls:
  8520 ;;		Nothing
  8521 ;; This function is called by:
  8522 ;;		i2_I2C_2_Master_Start
  8523 ;;		i2_I2C_2_Master_Stop
  8524 ;;		i2_I2C_2_Master_Write
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           	psect	text44
  8529   003716                     __ptext44:
  8530                           	callstack 0
  8531   003716                     i2_I2C_2_Master_Idle:
  8532                           	callstack 21
  8533   003716                     i2l179:
  8534   003716  010E               	movlb	14	; () banked
  8535   003718  B5D8               	btfsc	216,2,b	;volatile
  8536   00371A  EF91  F01B         	goto	i2u117_41
  8537   00371E  EF93  F01B         	goto	i2u117_40
  8538   003722                     i2u117_41:
  8539   003722  EF8B  F01B         	goto	i2l179
  8540   003726                     i2u117_40:
  8541   003726                     
  8542                           ; BSR set to: 14
  8543   003726  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8544   00372A  0E1F               	movlw	31
  8545   00372C  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8546   00372E  A4D8               	btfss	status,2,c
  8547   003730  EF9C  F01B         	goto	i2u118_41
  8548   003734  EF9E  F01B         	goto	i2u118_40
  8549   003738                     i2u118_41:
  8550   003738  EF8B  F01B         	goto	i2l179
  8551   00373C                     i2u118_40:
  8552   00373C                     
  8553                           ; BSR set to: 14
  8554   00373C  0012               	return		;funcret
  8555   00373E                     __end_ofi2_I2C_2_Master_Idle:
  8556                           	callstack 0
  8557                           
  8558 ;; *************** function _putCharToRxBuf *****************
  8559 ;; Defined at:
  8560 ;;		line 33 in file "serial.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;  byte            1    wreg     unsigned char 
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;  byte            1    0[COMRAM] unsigned char 
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1    wreg      void 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8578 ;;Total ram usage:        1 bytes
  8579 ;; Hardware stack levels used: 1
  8580 ;; This function calls:
  8581 ;;		Nothing
  8582 ;; This function is called by:
  8583 ;;		_HighISR
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           	psect	text45
  8588   003764                     __ptext45:
  8589                           	callstack 0
  8590   003764                     _putCharToRxBuf:
  8591                           	callstack 24
  8592                           
  8593                           ; BSR set to: 14
  8594                           ;incstack = 0
  8595                           ;putCharToRxBuf@byte stored from wreg
  8596   003764  6E01               	movwf	putCharToRxBuf@byte^0,c
  8597   003766                     
  8598                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  8599   003766  0E13               	movlw	19
  8600   003768  6448               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  8601   00376A  EFB9  F01B         	goto	i2u186_41
  8602   00376E  EFBB  F01B         	goto	i2u186_40
  8603   003772                     i2u186_41:
  8604   003772  EFBD  F01B         	goto	i2l3293
  8605   003776                     i2u186_40:
  8606   003776  0E00               	movlw	0
  8607   003778  6E48               	movwf	_RxBufWriteCnt^0,c	;volatile
  8608   00377A                     i2l3293:
  8609                           
  8610                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  8611   00377A  5048               	movf	_RxBufWriteCnt^0,w,c
  8612   00377C  0FC4               	addlw	low _EUSART4RXbuf
  8613   00377E  6ED9               	movwf	fsr2l,c
  8614   003780  6ADA               	clrf	fsr2h,c
  8615   003782  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  8616   003786  2A48               	incf	_RxBufWriteCnt^0,f,c	;volatile
  8617   003788  0012               	return		;funcret
  8618   00378A                     __end_of_putCharToRxBuf:
  8619                           	callstack 0
  8620                           
  8621 ;; *************** function _isDataInTxBuf *****************
  8622 ;; Defined at:
  8623 ;;		line 61 in file "serial.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;		None
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;		None
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  1    wreg      unsigned char 
  8630 ;; Registers used:
  8631 ;;		wreg, status,2, status,0
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8641 ;;Total ram usage:        0 bytes
  8642 ;; Hardware stack levels used: 1
  8643 ;; This function calls:
  8644 ;;		Nothing
  8645 ;; This function is called by:
  8646 ;;		_HighISR
  8647 ;;		_sendTxBuf
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text46
  8652   003884                     __ptext46:
  8653                           	callstack 0
  8654   003884                     _isDataInTxBuf:
  8655                           	callstack 24
  8656   003884                     
  8657                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  8658   003884  5045               	movf	_TxBufReadCnt^0,w,c	;volatile
  8659   003886  1846               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  8660   003888  A4D8               	btfss	status,2,c
  8661   00388A  EF49  F01C         	goto	i2u188_41
  8662   00388E  EF4C  F01C         	goto	i2u188_40
  8663   003892                     i2u188_41:
  8664   003892  0E01               	movlw	1
  8665   003894  EF4D  F01C         	goto	i2u189_40
  8666   003898                     i2u188_40:
  8667   003898  0E00               	movlw	0
  8668   00389A                     i2u189_40:
  8669   00389A  0012               	return		;funcret
  8670   00389C                     __end_of_isDataInTxBuf:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function _getCharFromTxBuf *****************
  8674 ;; Defined at:
  8675 ;;		line 47 in file "serial.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;		None
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;		None
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  1    wreg      unsigned char 
  8682 ;; Registers used:
  8683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;Total ram usage:        1 bytes
  8694 ;; Hardware stack levels used: 1
  8695 ;; This function calls:
  8696 ;;		Nothing
  8697 ;; This function is called by:
  8698 ;;		_HighISR
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text47
  8703   00378A                     __ptext47:
  8704                           	callstack 0
  8705   00378A                     _getCharFromTxBuf:
  8706                           	callstack 24
  8707   00378A                     
  8708                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  8709   00378A  0E3B               	movlw	59
  8710   00378C  6445               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  8711   00378E  EFCB  F01B         	goto	i2u187_41
  8712   003792  EFCD  F01B         	goto	i2u187_40
  8713   003796                     i2u187_41:
  8714   003796  EFCF  F01B         	goto	i2l3301
  8715   00379A                     i2u187_40:
  8716   00379A  0E00               	movlw	0
  8717   00379C  6E45               	movwf	_TxBufReadCnt^0,c	;volatile
  8718   00379E                     i2l3301:
  8719                           
  8720                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
  8721   00379E  2A45               	incf	_TxBufReadCnt^0,f,c	;volatile
  8722   0037A0  0445               	decf	_TxBufReadCnt^0,w,c	;volatile
  8723   0037A2  6E01               	movwf	??_getCharFromTxBuf^0,c
  8724   0037A4  5001               	movf	??_getCharFromTxBuf^0,w,c
  8725   0037A6  0F60               	addlw	low _EUSART4TXbuf
  8726   0037A8  6ED9               	movwf	fsr2l,c
  8727   0037AA  6ADA               	clrf	fsr2h,c
  8728   0037AC  50DF               	movf	indf2,w,c
  8729   0037AE  0012               	return		;funcret
  8730   0037B0                     __end_of_getCharFromTxBuf:
  8731                           	callstack 0
  8732                           
  8733                           	psect	smallconst
  8734   000E00                     __psmallconst:
  8735                           	callstack 0
  8736   000E00  00                 	db	0
  8737   000E01  00                 	db	0	; dummy byte at the end
  8738   000000                     
  8739                           	psect	rparam
  8740   000000                     
  8741                           	psect	temp
  8742   00004B                     btemp:
  8743                           	callstack 0
  8744   00004B                     	ds	1
  8745   000000                     int$flags	set	btemp
  8746   000000                     wtemp8	set	btemp+1
  8747   000000                     ttemp5	set	btemp+1
  8748   000000                     ttemp6	set	btemp+4
  8749   000000                     ttemp7	set	btemp+8
  8750                           
  8751                           	psect	config
  8752                           
  8753                           ;Config register CONFIG1L @ 0x300000
  8754                           ;	External Oscillator mode Selection bits
  8755                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8756                           ;	Power-up default value for COSC bits
  8757                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8758   300000                     	org	3145728
  8759   300000  AA                 	db	170
  8760                           
  8761                           ;Config register CONFIG1H @ 0x300001
  8762                           ;	unspecified, using default values
  8763                           ;	Clock Out Enable bit
  8764                           ;	CLKOUTEN = 0x1, unprogrammed default
  8765                           ;	Clock Switch Enable bit
  8766                           ;	CSWEN = 0x1, unprogrammed default
  8767                           ;	Fail-Safe Clock Monitor Enable bit
  8768                           ;	FCMEN = 0x1, unprogrammed default
  8769   300001                     	org	3145729
  8770   300001  FF                 	db	255
  8771                           
  8772                           ;Config register CONFIG3L @ 0x300004
  8773                           ;	WDT Period Select bits
  8774                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8775                           ;	WDT operating mode
  8776                           ;	WDTE = OFF, WDT Disabled
  8777   300004                     	org	3145732
  8778   300004  9F                 	db	159
  8779                           
  8780                           ;Config register CONFIG3H @ 0x300005
  8781                           ;	unspecified, using default values
  8782                           ;	WDT Window Select bits
  8783                           ;	WDTCWS = 0x7, unprogrammed default
  8784                           ;	WDT input clock selector
  8785                           ;	WDTCCS = 0x7, unprogrammed default
  8786   300005                     	org	3145733
  8787   300005  FF                 	db	255
  8788                           tosu	equ	0xFFF
  8789                           tosh	equ	0xFFE
  8790                           tosl	equ	0xFFD
  8791                           stkptr	equ	0xFFC
  8792                           pclatu	equ	0xFFB
  8793                           pclath	equ	0xFFA
  8794                           pcl	equ	0xFF9
  8795                           tblptru	equ	0xFF8
  8796                           tblptrh	equ	0xFF7
  8797                           tblptrl	equ	0xFF6
  8798                           tablat	equ	0xFF5
  8799                           prodh	equ	0xFF4
  8800                           prodl	equ	0xFF3
  8801                           indf0	equ	0xFEF
  8802                           postinc0	equ	0xFEE
  8803                           postdec0	equ	0xFED
  8804                           preinc0	equ	0xFEC
  8805                           plusw0	equ	0xFEB
  8806                           fsr0h	equ	0xFEA
  8807                           fsr0l	equ	0xFE9
  8808                           wreg	equ	0xFE8
  8809                           indf1	equ	0xFE7
  8810                           postinc1	equ	0xFE6
  8811                           postdec1	equ	0xFE5
  8812                           preinc1	equ	0xFE4
  8813                           plusw1	equ	0xFE3
  8814                           fsr1h	equ	0xFE2
  8815                           fsr1l	equ	0xFE1
  8816                           bsr	equ	0xFE0
  8817                           indf2	equ	0xFDF
  8818                           postinc2	equ	0xFDE
  8819                           postdec2	equ	0xFDD
  8820                           preinc2	equ	0xFDC
  8821                           plusw2	equ	0xFDB
  8822                           fsr2h	equ	0xFDA
  8823                           fsr2l	equ	0xFD9
  8824                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      74
    BANK0           160     16     136
    BANK1           256    210     256
    BANK2           256      0      82
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    color_normalise@RGBC_n	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC_n(BANK1[8]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    S29DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S29DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), main@motorR(BANK1[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_move
    _move->_returnHome
    _returnHome->_reverseOneSquare
    _returnHome->_turnLeft
    _returnHome->_turnRight
    _lostReturnHome->_reverseOneSquare
    _lostReturnHome->_turnLeft
    _lostReturnHome->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___aldiv
    ___aldiv->___lmul
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _batteryLevel->___awdiv

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_move

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               214   214      0  172964
                                             66 COMRAM     2     2      0
                                              0 BANK1    210   210      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                   _color_click_init
                    _color_normalise
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                               _stop
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _move                                                18     2     16  103098
                                             64 COMRAM     2     2      0
                                              0 BANK0     16     0     16
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          20     5     15   53152
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      20     5     15   52272
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   12433
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   20033
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    4053
                                             30 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    14     7      7    5257
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2      69
                                             11 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    6245
                                             30 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2285
                                             24 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             17 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2     483
                                             15 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                             12 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                     12     2     10    1965
                                             37 COMRAM    12     2     10
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             23 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    1612
                                             20 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0     862
                                             15 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             13 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     543
                                             19 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0     356
                                              9 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (7) i2_color_clear_init_interrupts                        5     5      0     334
                                              4 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_writetoaddr
   _color_normalise
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _color_read
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _turnLeft
     _turnRight
   _resetTimer
   _stop
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      52       9       32.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D2     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      88       5       85.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      4A       1       78.7%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     224      66        0.0%
DATA                 0      0     224       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Mar 10 15:01:19 2024

                                _white_Light 37B0                                           l83 2280  
                                         l85 228E                                           l94 24C6  
                               ___awdiv@sign 0011                          ___wmul@multiplicand 000E  
                           main@turnDuration 01B0                            ??_Interrupts_init 000C  
                                        l123 3664                                          l140 2F0C  
                                        l132 37CC                                          l126 33D6  
                                        l134 37D2                                          l320 3850  
                                        l129 37F2                                          l137 26B6  
                                        l228 369A                                          l182 3714  
                                        l191 38E6                                          l176 36C4  
                                        l504 1442                                          l185 38F0  
                                        l601 27DC                                          l370 386E  
                                        l194 38BC                                          l514 14BC  
                                        l179 36EE                                          l523 1AE2  
                                        l372 387C                                          l188 38DC  
                                        l604 2860                                          l373 3882  
                                        l197 362C                                          l470 2DC2  
                                        l279 38B0                                          l367 386A  
                                        l463 335C                                          l607 28A2  
                                        l384 35D2                                          l544 30E0  
                                        l552 2B14                                          l633 3812  
                                        l385 35D4                                          l721 3018  
                                        l561 2C28                                          l529 1AE2  
                                        l386 35E8                                          l642 3762  
                                        l547 3122                                          l539 1B5C  
                                        l388 35EA                                          l636 38D2  
                                        l564 2C56                                          l556 2B80  
                                        l653 358C                                          l581 2A7C  
                                        l573 29A6                                          l654 359C  
                                        l590 3208                                          l558 2BA4  
                                        l639 36EC                                          l575 29CA  
                                        l569 293A                                          l489 21B2  
                                        l586 31BC                                          l578 2A4E  
                                        l498 1442                                          l595 274C  
                                        l599 27B8                                          l873 32CC  
                                        prod 0FF3                          i2_color_writetoaddr 3814  
                                        wreg 0FE8    color_clear_init_interrupts@high_threshold 0011  
i2color_clear_init_interrupts@high_threshold 0006                              _color_normalise 2DC4  
                                       l1140 34C4                                         l1133 34BC  
                                       l3001 37F4                                         l3003 37FC  
                                       l3011 3834                                         l3005 3806  
                                       l3021 384E                                         l3013 383E  
                                       l3007 3810                                         l3031 332C  
                                       l3023 32CE                                         l3015 3840  
                                       l3009 389C                                         l3041 334E  
                                       l3033 3336                                         l3025 32DE  
                                       l3017 384A                                         l3201 15F4  
                                       l3051 35BE                                         l3043 3350  
                                       l3035 3338                                         l3027 3304  
                                       l3019 384C                                         l3211 1686  
                                       l3203 15F6                                         l3053 35CC  
                                       l3061 24CA                                         l3045 335A  
                                       l3037 3342                                         l3029 3308  
                                       l3221 1736                                         l3213 16A4  
                                       l3205 1612                                         l3055 35E2  
                                       l3047 359E                                         l3071 25D4  
                                       l3063 24E4                                         l3039 3344  
                                       l2511 3184                                         l3231 17FE  
                                       l3223 1756                                         l3215 16C4  
                                       l3207 1632                                         l3049 35A8  
                                       l2441 36EE                                         l3081 2DD8  
                                       l3073 25F2                                         l3065 24FE  
                                       l2521 31E0                                         l2513 3190  
                                       l2505 3124                                         l2601 2A4A  
                                       l3241 18A8                                         l3225 176E  
                                       l3233 181A                                         l3217 16DC  
                                       l3209 164A                                         l3057 37B2  
                                       l2443 36FE                                         l3083 2E3C  
                                       l3075 2652                                         l3067 2556  
                                       l2451 3452                                         l2515 319C  
                                       l2523 31E4                                         l2507 3144  
                                       l2531 36E4                                         l2611 2AA8  
                                       l2603 2A72                                         l3251 1922  
                                       l3235 1838                                         l3227 17A6  
                                       l3219 1718                                         l3059 37C2  
                                       l3085 2EA4                                         l3077 2670  
                                       l3069 2574                                         l2461 348A  
                                       l2453 345A                                         l2445 373E  
                                       l2517 31A8                                         l2509 3150  
                                       l2525 38CA                                         l2541 3074  
                                       l2621 2B10                                         l2613 2ADC  
                                       l3261 19BC                                         l3253 195A  
                                       l3237 1858                                         l3245 18CC  
                                       l3229 17C6                                         l3181 14F6  
                                       l3079 2DC4                                         l2471 34B6  
                                       l2463 3490                                         l2455 346C  
                                       l2447 375A                                         l2519 31B8  
                                       l2527 36C6                                         l2551 30DC  
                                       l2543 30A8                                         l2535 301A  
                                       l2631 2B7C                                         l2623 2B38  
                                       l2615 2AE8                                         l2607 2A7E  
                                       l3271 1A4E                                         l3263 19D4  
                                       l3247 18EA                                         l3239 1870  
                                       l3191 15BA                                         l3183 152E  
                                       l2721 36B0                                         l2713 369C  
                                       l2473 38E8                                         l2481 38DE  
                                       l2465 34A6                                         l2457 3474  
                                       l2529 36D2                                         l2553 3104  
                                       l2545 30B4                                         l2537 3062  
                                       l2641 2BFC                                         l2633 2BAA  
                                       l2617 2AF4                                         l2625 2B3C  
                                       l2609 2A9C                                         l2561 28A4  
                                       l3281 1AFE                                         l3273 1A6E  
                                       l3265 1A0C                                         l3249 190A  
                                       l3257 197E                                         l3193 15BE  
                                       l3185 154E                                         l3177 14BE  
                                       l2801 0F56                                         l3601 1ED8  
                                       l2723 36B2                                         l2715 36A6  
                                       l2475 38EC                                         l2483 38E2  
                                       l2731 3394                                         l2467 34AE  
                                       l2459 347C                                         l2491 2CDC  
                                       l2547 30C0                                         l2643 2C08  
                                       l2627 2B60                                         l2619 2B00  
                                       l2571 291A                                         l2563 28C2  
                                       l3283 1B02                                         l3275 1A86  
                                       l3259 199C                                         l3195 15C4  
                                       l3187 1586                                         l3179 14DE  
                                       l2811 1004                                         l2803 0F72  
                                       l3611 1F9A                                         l3603 1F10  
                                       l2717 36AC                                         l2477 38B4  
                                       l2741 33CC                                         l2733 33A4  
                                       l2725 335E                                         l2901 2F20  
                                       l2469 34B0                                         l2493 2CE0  
                                       l2485 2C58                                         l2661 2720  
                                       l2653 26B8                                         l2549 30CC  
                                       l2557 310E                                         l2645 2C14  
                                       l2637 2BBC                                         l2629 2B6C  
                                       l2581 2986                                         l2573 2926  
                                       l2565 28CE                                         l3285 1B34  
                                       l3277 1ABE                                         l3269 1A30  
                                       l3197 15D4                                         l3189 159E  
                                       l2821 10B6                                         l2813 1024  
                                       l2805 0F92                                         l3621 2054  
                                       l3613 1FB2                                         l3605 1F30  
                                       l3701 2296                                         l2719 36AE  
                                       l2479 38B8                                         l2559 37D6  
                                       l2735 33AE                                         l2727 3372  
                                       l2911 2F56                                         l2903 2F30  
                                       l2751 35FA                                         l2743 38D4  
                                       l2495 2D22                                         l2487 2C74  
                                       l2663 272C                                         l2671 2774  
                                       l2655 26D4                                         l2647 2C24  
                                       l2639 2BF0                                         l2591 29E2  
                                       l2583 2992                                         l2575 2936  
                                       l2567 2902                                         l3287 1B4C  
                                       l3199 15EC                                         l2823 10CE  
                                       l2831 117A                                         l2815 103C  
                                       l2807 0FAA                                         l3623 2074  
                                       l3631 211C                                         l3615 1FEA  
                                       l3607 1F68                                         l3551 1B90  
                                       l3711 22E0                                         l3703 22AE  
                                       l2761 3852                                         l2737 33B8  
                                       l2729 337E                                         l2921 2F9E  
                                       l2913 2F66                                         l2905 2F34  
                                       l2753 3602                                         l2745 38D8  
                                       l2497 2D3E                                         l2489 2CC8  
                                       l2673 2798                                         l2665 2738  
                                       l2657 26E0                                         l2649 2C4C  
                                       l2593 2A16                                         l2585 29A2  
                                       l2577 295E                                         l2569 290E  
                                       l2833 1198                                         l2825 1106  
                                       l2817 1078                                         l2809 0FE6  
                                       l3633 212E                                         l3625 208C  
                                       l3617 200A                                         l3609 1F7A  
                                       l3561 1C32                                         l3553 1BA8  
                                       l3721 2322                                         l3713 22F8  
                                       l3705 22B4                                         l3641 21C0  
                                       l2771 386C                                         l2763 385C  
                                       l2739 33C2                                         l2931 2FE2  
                                       l2923 2FA8                                         l2915 2F7C  
                                       l2907 2F42                                         l2755 3628  
                                       l2747 35EE                                         l2499 2D82  
                                       l2691 284C                                         l2683 27F4  
                                       l2675 27A4                                         l2667 2748  
                                       l2659 2714                                         l2595 2A22  
                                       l2587 29D0                                         l2579 2962  
                                       l2851 12BA                                         l2835 11B8  
                                       l2843 122C                                         l2827 1126  
                                       l2819 1096                                         l3635 2172  
                                       l3627 20C4                                         l3619 2042  
                                       l3571 1CD4                                         l3563 1C4A  
                                       l3555 1BE0                                         l3547 1B5E  
                                       l3731 23A2                                         l3723 2332  
                                       l3715 2314                                         l3707 22CC  
                                       l3651 21FA                                         l3643 21DE  
                                       l2773 3880                                         l2765 3864  
                                       l2941 320A                                         l2925 2FC6  
                                       l2917 2F84                                         l2933 2FE8  
                                       l2909 2F52                                         l2757 362A  
                                       l2749 35F2                                         l2693 285C  
                                       l2685 2828                                         l2677 27B4  
                                       l2669 2770                                         l2597 2A2E  
                                       l2861 1334                                         l2845 124A  
                                       l2837 11D0                                         l2829 115E  
                                       l2781 0E3A                                         l3629 20E4  
                                       l3581 1D94                                         l3573 1CEC  
                                       l3565 1C82                                         l3549 1B70  
                                       l3557 1C00                                         l3741 2412  
                                       l3733 23B4                                         l3725 2342  
                                       l3717 2318                                         l3709 22D8  
                                       l3661 2218                                         l3653 21FE  
                                       l3645 21E2                                         l3637 21B4  
                                       l2767 3866                                         l2951 3236  
                                       l2943 320E                                         l2935 2FF8  
                                       l2927 2FD6                                         l2919 2F90  
                                       l2695 2884                                         l2687 2834  
                                       l2679 27E2                                         l2599 2A3A  
                                       l2871 13CE                                         l2863 136C  
                                       l2847 126A                                         l2855 12DE  
                                       l2839 1208                                         l2791 0EFE  
                                       l2783 0E72                                         l3591 1E36  
                                       l3575 1D24                                         l3583 1DB4  
                                       l3559 1C12                                         l3567 1CA2  
                                       l3751 2494                                         l3743 2422  
                                       l3735 23C4                                         l3727 2378  
                                       l3719 231E                                         l3671 2238  
                                       l3663 221C                                         l3655 2202  
                                       l3647 21F2                                         l3639 21C0  
                                       l2769 3868                                         l2961 3264  
                                       l2953 323E                                         l2945 321C  
                                       l2937 3008                                         l2929 2FD8  
                                       l2689 2840                                         l2881 1462  
                                       l2873 13E6                                         l2857 12FC  
                                       l2849 1282                                         l2793 0F02  
                                       l2785 0E92                                         l2777 0E02  
                                       l3593 1E56                                         l3585 1DC6  
                                       l3577 1D44                                         l3569 1CB4  
                                       l3753 2498                                         l3737 240A  
                                       l3729 2384                                         l3745 2428  
                                       l3681 2250                                         l3673 223C  
                                       l3665 2220                                         l3657 2206  
                                       l3649 21F6                                         l2971 329E  
                                       l2963 326C                                         l2955 3242  
                                       l2947 3224                                         l2891 3552  
                                       l2699 288E                                         l2883 1494  
                                       l2875 141E                                         l2859 131C  
                                       l2867 1390                                         l2795 0F34  
                                       l2787 0ECA                                         l2779 0E22  
                                       l3587 1DE6                                         l3595 1E8E  
                                       l3579 1D7C                                         l3747 2438  
                                       l3755 24A2                                         l3739 240E  
                                       l3691 226C                                         l3683 2258  
                                       l3675 2240                                         l3667 2228  
                                       l3659 2212                                         l2981 32C4  
                                       l2973 32A0                                         l2965 327A  
                                       l2957 324A                                         l2949 3228  
                                       l2893 3562                                         l2869 13AE  
                                       l2885 14AC                                         l2797 0F4C  
                                       l2789 0EE2                                         l3597 1EA0  
                                       l3589 1DFE                                         l3757 24B4  
                                       l3749 243C                                         l3693 2270  
                                       l3685 2260                                         l3677 2244  
                                       l3669 2230                                         l2975 32A6  
                                       l2967 3280                                         l2959 325C  
                                       l2991 3632                                         l2895 356C  
                                       l2887 3534                                         l2879 145E  
                                       l2799 0F54                                         l3599 1EC0  
                                       l3695 2274                                         l3687 2264  
                                       l3679 2248                                         l2969 3296  
                                       l2977 32AC                                         l2993 363C  
                                       l2897 2F0E                                         l2889 3544  
                                       l3697 2278                                         l3689 2268  
                                main@curMove 01B5                                         l2987 3666  
                                       l2979 32BC                                         l2995 364C  
                                       l2899 2F12                                         l3699 227C  
                                       l2997 3656                                         l2989 362E  
                                       l2999 3660                                         u1100 36FE  
                                       u1101 36FA                                         u1110 3714  
                                       u1111 3710                                         u1120 346C  
                                       u1200 3208                                         u1121 3468  
                                       u1201 3204                                         u1130 348A  
                                       u1210 3070                                         u1131 3486  
                                       u1211 306C                                         u1140 34A6  
                                       u1220 3104                                         u1300 2BA4  
                                       u1141 34A2                                         u1221 3100  
                                       u1301 2BA0                                         u1150 2C74  
                                       u1310 2BB8                                         u1230 295E  
                                       u1151 2C70                                         u1311 2BB4  
                                       u1231 295A                                         u1400 387C  
                                       u1160 2D3E                                         u1320 2C4C  
                                       u1240 2986                                         u2200 1EA0  
                                       u1401 3878                                         u1161 2D3A  
                                       u1321 2C48                                         u1241 2982  
                                       u2201 1E9C                                         u1330 2770  
                                       u1250 29CA                                         u1410 0F34  
                                       u2210 1F7A                                         u1331 276C  
                                       u1251 29C6                                         u1411 0F30  
                                       u2211 1F76                                         u1340 2798  
                                       u1260 29DE                                         u1500 14BC  
                                       u1420 0F72                                         u2220 2054  
                                       u1341 2794                                         u1261 29DA  
                                       u1501 14B8                                         u1421 0F6E  
                                       u2221 2050                                         u2301 238E  
                                       u1510 3552                                         u1190 31E0  
                                       u1350 27DC                                         u1270 2A72  
                                       u1430 1004                                         u2230 212E  
                                       u1511 354E                                         u1191 31DC  
                                       u1351 27D8                                         u1271 2A6E  
                                       u3007 2A40                                         u1431 1000  
                                       u2231 212A                                         u1600 3236  
                                       u1520 358C                                         u1360 27F0  
                                       u1280 2B38                                         u1440 1096  
                                       u2160 1B70                                         u2320 2438  
                               _BAUD4CONbits 0EE9                                         u1601 3232  
                                       u1521 3588                                         u1361 27EC  
                                       u1281 2B34                                         u3017 2B06  
                                       u1441 1092                                         u2161 1B6C  
                                       u2321 2434                                         u2241 21BA  
                                       u1610 325C                                         u1530 2F20  
                                       u1370 2884                                         u1290 2B60  
                                       u1450 1198                                         u2170 1C12  
                                       u2330 24B4                                         u1611 3258  
                                       u3107 339A                                         u1531 2F1C  
                                       u1371 2880                                         u3027 2B72  
                                       u1291 2B5C                                         u1451 1194  
                                       u2171 1C0E                                         u2331 24B0  
                                       u2315 241E                                         u2251 21CC  
                                       u1620 327A                                         u1540 2F42  
                                       u1380 3616                                         u1460 124A  
                                       u2180 1CB4                                         u2340 24C6  
                                       u1621 3276                                         u1541 2F3E  
                                       u1381 360E                                         u3037 2C1A  
                                       u1461 1246                                         u2181 1CB0  
                                       u2341 24C2                                         u2317 2422  
                                       u2261 21D8                                         u1630 3296  
                                       u1550 2F7C                                         u1470 12FC  
                                       u2190 1DC6                                         u2270 228E  
                                       u1631 3292                                         u1551 2F78  
                                       u3047 30D2                                         u1471 12F8  
                                       u2191 1DC2                                         u2407 1C3C  
                                       u2271 228A                                         u1640 32BC  
                                       u1560 2F9E                                         u1800 1838  
                                       u1480 13AE                                         u2280 2332  
                                       u1641 32B8                                         u1561 2F9A  
                                       u3057 273E                                         u1801 1834  
                                       u1481 13AA                                         u2417 1C74  
                                       u2281 232E                                         u1650 35CC  
                                       u1570 2FC6                                         u1810 18EA  
                                       u1490 1494                                         _T2PR 0FBC  
                                       u1651 35C8                                         u1571 2FC2  
                                       u3067 27AA                                         u1811 18E6  
                                       u1491 1490                                         u2507 1F02  
                                       u2427 1CDE                                         u1660 35E2  
                                       u1580 2FF8                                         u1820 199C  
                                       u1661 35DE                                         u1581 2FF4  
                                       u3077 2852                                         u1821 1998  
                                       u2517 1F3A                                         u2437 1D16  
                                       u2357 22A0                                         u1590 321C  
                                       u1398 3618                                         u1830 1A4E  
                                       u1670 37C2                                         u1591 3218  
                                       u3087 31AE                                         u1831 1A4A  
                                       u2607 0E9C                                         u2527 1FA4  
                                       u2447 1D4E                                         u1671 37BE  
                                       u2295 233E                                         u2367 22BE  
                                       u1840 1B34                                         u1760 15D4  
                                       u3097 3642                                         u1841 1B30  
                                       u1761 15D0                                         u2617 0ED4  
                                       u2537 1FDC                                         u2457 1D86  
                                       u2297 2342                                         u2377 22EA  
                                       u1850 1B5C                                         u1770 1612  
                                       u1851 1B58                                         u1771 160E  
                                       u2707 11C2                                         u2627 0F9C  
                                       u2547 2014                                         u2467 1DF0  
                                       u2387 1B9A                                         u1780 16A4  
                                       u1781 16A0                                         u2717 11FA  
                                       u2637 0FD4                                         u2557 207E  
                                       u2477 1E28                                         u2397 1BD2  
                                       u1790 1736                                         u1791 1732  
                                       u2807 1558                                         u2727 1274  
                                       u2647 102E                                         u2567 20B6  
                                       u2487 1E60                                         u2817 1590  
                                       u2737 12AC                                         u2657 1066  
                                       u2577 20EE                                         u2497 1ECA  
                                       u2907 1862                                         u2827 163C  
                                       u2747 1326                                         u2667 10C0  
                                       u2587 0E2C                                         u2917 189A  
                                       u2837 1674                                         u2757 135E  
                                       u2677 10F8                                         u2597 0E64  
                                       u2927 1914                                         u2847 16CE  
                                       u2767 13D8                                         u2687 1130  
                                       u2937 194C                                         u2857 1706  
                                       u2777 1410                                         u2697 1168  
                                       u2947 19C6                                         u2867 1760  
                                       u2787 14E8                                         u2957 19FE  
                                       u2877 1798                                         u2797 1520  
                                       u2967 1A78                                         u2887 17D0  
                                       u2977 1AB0                                         u2897 1808  
                                       u2987 292C                                         u2997 2998  
                lostReturnHome@straightSpeed 0036                                         _main 21B4  
                                       _move 1B5E                                         _lost 01FA  
                                       _wall 01FB                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         btemp 004B  
                                       _stop 301A                                         prodh 0FF4  
                                       prodl 0FF3                                         start 0098  
                        main@reverseDuration 01AE                             __end_of_ADC_init 386C  
                       ?i2_color_writetoaddr 0003                              __end_of_HighISR 0098  
                      lostReturnHome@curMove 0035                                 ___param_bank 0000  
                       __end_of_batteryLevel 35EC                              __end_of___aldiv 301A  
                                      ?_main 0001                                        _ADPCH 0F5F  
                            __end_of___awdiv 32CE                                        ?_move 00D8  
                                      ?_stop 001F                              ___awdiv@divisor 000E  
                            __end_of___lwdiv 34C6                                        i2l126 3450  
                                      i2l129 3832                                        i2l342 389A  
                                      i2l182 373C                                        i2l335 37AE  
                                      i2l191 38FA                                        i2l328 3788  
                                      i2l185 3904                                        i2l194 38C8  
                                      i2l179 3716                                        i2l289 008C  
                            ___awdiv@counter 0010                                        _TMR0H 0FD4  
                                      _TMR0L 0FD3                          ___lmul@multiplicand 0010  
                 __end_of_I2C_2_Master_Start 38F2                   __end_of_I2C_2_Master_Write 38BE  
                                 _Buggy_init 3666                       returnHome@straightRamp 0038  
                     returnHome@straightTime 0033                                        tablat 0FF5  
                                      plusw0 0FEB                                        plusw2 0FDB  
                                      ttemp5 004C                                        ttemp6 004F  
                                      ttemp7 0053                                        stop@i 0027  
                                      status 0FD8                                        wtemp8 004C  
                      ??i2_color_writetoaddr 0004                                 main@turnRamp 01B1  
                      _I2C_2_Master_RepStart 38D4                           putCharToRxBuf@byte 0001  
                            __initialization 34C6                    get16bitTMR0val@timer_high 0012  
                               __end_of_main 24CA                                 __end_of_move 21B4  
                               __end_of_stop 3124                          move@reverseDuration 00E3  
                            _get16bitTMR0val 36C6                                       ??_main 0043  
                                     ??_move 0041                                       ??_stop 0024  
                              __activetblptr 0000                      __end_of_color_normalise 2F0E  
                     returnHome@turnDuration 003A                                 ?_setMotorPWM 0019  
                                     _ADRESH 0F64                                       _CCPR1H 0FAA  
                                     _CCPR2H 0FA6                                       _CCPR3H 0F25  
                                     _CCPR4H 0F21                             ___awdiv@dividend 000C  
                     lostReturnHome@turnRamp 003B                                       _RC0PPS 0E62  
                                     _RC4REG 0EE3                                       _RE2PPS 0E74  
                                     _RC7PPS 0E69                                       _RD5PPS 0E6F  
                                     _RE4PPS 0E76                                       _RD6PPS 0E70  
                                     i2l3301 379E                                       i2l2501 3716  
                                     i2l2503 3726                                       i2l3305 3884  
                                     i2l3321 33F8                                       i2l3331 343C  
                                     i2l3323 340E                                       i2l2701 38FC  
                                     i2l3333 3446                                       i2l3325 341E  
                                     i2l3317 33D8                                       i2l2703 3900  
                                     i2l2711 38C4                                       i2l3327 3428  
                                     i2l3319 33EC                                       i2l2705 38F2  
                                     i2l3329 3432                                       i2l3291 3776  
                                     i2l2707 38F6                                       i2l3293 377A  
                                     i2l2709 38C0                                       i2l3461 0028  
                                     i2l3295 3786                                       i2l3471 0048  
                                     i2l3463 002C                                       i2l3297 378A  
                                     i2l3289 3766                                       i2l3481 0088  
                                     i2l3473 0056                                       i2l3465 0030  
                                     i2l3457 0012                                       i2l3299 379A  
                                     i2l3475 005C                                       i2l3467 003E  
                                     i2l3459 0022                                       i2l3477 006C  
                                     i2l3469 0044                                       i2l3479 0074  
                                     _RG6PPS 0E88                                       i2l2985 3816  
                                  ??_HighISR 000A                     __end_of_color_click_init 3666  
                                     _TMR0IE 714D                                       _TMR0IF 719D  
                                     _RX4PPS 0E15                                       _TX4REG 0EE4  
                               ??_ADC_getval 000C                                ??_Timer0_init 000C  
                               _CCPTMRS0bits 0FAD                             _getCharFromTxBuf 378A  
                                     ___lmul 3534                                    ??___aldiv 0020  
                                     ___wmul 373E                                    ??___awdiv 0010  
                                  ??___lwdiv 0016                                       clear_0 3504  
                                     clear_1 3510                                       clear_2 351C  
                           ___awdiv@quotient 0012                                       isa$std 0001  
                    returnHome@straightSpeed 0036                                 __pdataCOMRAM 0049  
                                     move@mL 00D8                                       move@mR 00DA  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                  ?_ADC_init 0001                                       stop@mL 001F  
                                     stop@mR 0021                                  ?_Buggy_init 0001  
                          ??_initDCmotorsPWM 000E                           __end_of_ADC_getval 3884  
                 i2color_writetoaddr@address 0004                             __end_of_turnLeft 2C58  
                 lostReturnHome@moveSequence 0031                        __end_of_isDataInTxBuf 389C  
                                 __accesstop 0060                      __end_of__initialization 352A  
                            fullSpeedAhead@i 0028                                main@turnSpeed 01AF  
                     ?_I2C_2_Master_RepStart 0001                                ___rparam_used 0001  
              lostReturnHome@reverseDuration 0037                              _Interrupts_init 389C  
                             __pcstackCOMRAM 0001                      __end_of_get16bitTMR0val 36EE  
                               ?_white_Light 0001                                 __pidataBANK1 3906  
                   get16bitTMR0val@timer_low 0010                     get16bitTMR0val@timer_val 0014  
               ?_color_clear_init_interrupts 0001                             _reverseOneSquare 26B8  
                        __end_of_Timer0_init 3814                             ?_color_normalise 0026  
                                 ??_ADC_init 000C                                 _batteryLevel 359E  
                                 __pbssBANK0 0060                                   __pbssBANK1 01D2  
                                 __pbssBANK2 0200                            _color_writetoaddr 37D4  
                               _T2CLKCONbits 0FBF                               _lostReturnHome 14BE  
                         ?_color_writetoaddr 000E                                      ?___lmul 000C  
                                    ?___wmul 000C                               ___lmul@product 0014  
              ??_color_clear_init_interrupts 0010                                  move@curMove 00E1  
                    lostReturnHome@turnSpeed 0039                          ??_color_writetoaddr 000F  
                                    _SP4BRGH 0EE6                                      _SP4BRGL 0EE5  
                 fullSpeedAhead@straightRamp 0024                        turnRight@turnDuration 0024  
                                    _SSP2ADD 0ED6                                      _SSP2BUF 0ED5  
                                 _color_read 24CA                      __end_of_Interrupts_init 38B2  
                     color_writetoaddr@value 000E                                      _HighISR 0008  
                  __end_of_color_writetoaddr 37F4                       __end_of_lostReturnHome 1B5E  
                                  _ADREFbits 0F58                           _I2C_2_Master_Start 38E8  
                                 _initUSART4 3834                          i2_I2C_2_Master_Idle 3716  
                         _I2C_2_Master_Write 38B2                                      __Hparam 0000  
                        i2_I2C_2_Master_Stop 38F2                                      __Lparam 0000  
                                _Timer0_init 37F4                             ?_get16bitTMR0val 000C  
                                    ___aldiv 2F0E                                      ___awdiv 320A  
                            lostReturnHome@i 0040                          ?_I2C_2_Master_Start 0001  
                                    ___lwdiv 3452                          ?_I2C_2_Master_Write 0001  
                               __psmallconst 0E00                                      _ambient 0049  
                                    __pcinit 34C6                                      __ramtop 0E00  
                                  ?_turnLeft 001F                                      __ptext0 21B4  
                                    __ptext1 37B0                                      __ptext2 1B5E  
                                    __ptext3 0E02                                      __ptext4 14BE  
                                    __ptext5 28A4                                      __ptext6 2A7E  
                                    __ptext7 301A                                      __ptext8 26B8  
                                    __ptext9 38CA                         ?i2_I2C_2_Master_Idle 0001  
                                  _T2CONbits 0FBD                         ?i2_I2C_2_Master_Stop 0001  
                           ___aldiv@dividend 0018                                    _T2HLTbits 0FBE  
                              _RxBufWriteCnt 0048                     __end_of_getCharFromTxBuf 37B0  
                                    main@buf 0100                         ??_I2C_2_Master_Start 000D  
                       ??_I2C_2_Master_Write 000D                        color_normalise@RGBC_n 002E  
                       end_of_initialization 352A              ??i2_color_clear_init_interrupts 0005  
                __end_ofi2_color_writetoaddr 3834                             ADC_getval@tmpval 000C  
                          reverseOneSquare@i 0029                            ?_color_click_init 0001  
                            ?_lostReturnHome 002D                                   _resetTimer 38CA  
                         ??_color_click_init 0015                             ___aldiv@quotient 0022  
                 batteryLevel@batteryQuarter 0015                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc2 0FDE                   batteryLevel@batteryVoltage 0014  
                                 main@F14611 009C                                   main@F14613 0200  
                                 main@F14607 01D2                                   main@F14616 01FC  
                                 _returnHome 0E02                              _initDCmotorsPWM 32CE  
                                 ??_turnLeft 0026                                    _PORTFbits 0F8E  
                         setMotorPWM@negDuty 001E                        ??i2_I2C_2_Master_Idle 0001  
                              move@turnSpeed 00E5                            __end_of_turnRight 2A7E  
                      ??i2_I2C_2_Master_Stop 0002                                   main@RGBC_n 01A6  
                                returnHome@i 0040                                    _TRISAbits 0F81  
                         setMotorPWM@posDuty 001D                                    _TRISBbits 0F82  
                                  _TRISCbits 0F83                                    _TRISDbits 0F84  
                                  _TRISEbits 0F85                                    _TRISFbits 0F86  
                                  _TRISGbits 0F87                                    _TRISHbits 0F88  
                           white_Light@state 000C                                 ??_Buggy_init 000C  
                           fullSpeedAhead@mL 001F                             fullSpeedAhead@mR 0021  
                                ?_color_read 0010                     color_writetoaddr@address 000F  
                    ??_I2C_2_Master_RepStart 000D                     __end_of_reverseOneSquare 28A4  
                           ?_Interrupts_init 0001                                stop@cur_power 0029  
                                _CCP1CONbits 0FAB                                 _EUSART4RXbuf 00C4  
                        returnHome@turnSpeed 0039                                 _EUSART4TXbuf 0060  
                                _CCP2CONbits 0FA7                                  _CCP3CONbits 0F26  
                 lostReturnHome@straightRamp 0038                   lostReturnHome@straightTime 0033  
                                ?_initUSART4 0001                                  _CCP4CONbits 0F22  
                                 main@motorL 01C8                                   main@motorR 01BE  
                             color_read@RGBC 0010                               _fullSpeedAhead 3124  
                             __end_of___lmul 359E                         turnLeft@turnDuration 0024  
                             __end_of___wmul 3764                           __end_of_Buggy_init 369C  
                              __pidataCOMRAM 390A                          start_initialization 34C6  
                              _TxBufWriteCnt 0046                   lostReturnHome@turnDuration 003A  
                           move@moveSequence 00DD        __end_ofi2_color_clear_init_interrupts 3452  
              i2_color_clear_init_interrupts 33D8                                  ?_resetTimer 0001  
                    __end_of_initDCmotorsPWM 335E                       __end_of_fullSpeedAhead 320A  
                         turnRight@cur_power 002B                                     ??___lmul 0014  
                                   ??___wmul 0010                               _putCharToRxBuf 3764  
                        color_normalise@RGBC 0026                                  __pdataBANK1 01FC  
              i2I2C_2_Master_Write@data_byte 0002                                  ?_returnHome 002D  
               reverseOneSquare@straightRamp 0025                 __end_ofi2_I2C_2_Master_Start 3906  
               __end_ofi2_I2C_2_Master_Write 38CA                            turnLeft@cur_power 002B  
                                __pbssCOMRAM 0045                                __pcstackBANK0 00D8  
                              __pcstackBANK1 0100                                     ?_HighISR 0001  
                           stop@straightRamp 0023                             ___lwdiv@dividend 0012  
                               ?_Timer0_init 0001                       __end_of_putCharToRxBuf 378A  
                            ?_fullSpeedAhead 001F                                    __pintcode 0008  
                                   ?___aldiv 0018                           turnRight@turnSpeed 0023  
                                   ?___awdiv 000C                                     ?___lwdiv 0012  
                       I2C_2_Master_Read@ack 000E                         I2C_2_Master_Read@tmp 000F  
                                __smallconst 0E00                             main@moveSequence 017A  
                          _I2C_2_Master_Idle 36EE                            _I2C_2_Master_Init 369C  
                          _I2C_2_Master_Read 35EC                            turnLeft@turnSpeed 0023  
                          _I2C_2_Master_Stop 38DE                                 _RxBufReadCnt 0047  
                                   _ADC_init 3852                           ?_I2C_2_Master_Idle 0001  
                         ?_I2C_2_Master_Init 0001                           ?_I2C_2_Master_Read 0001  
                              ??_setMotorPWM 001B                           ?_I2C_2_Master_Stop 0001  
                           ___lwdiv@quotient 0016                     initDCmotorsPWM@PWMperiod 000C  
                          ?_getCharFromTxBuf 0001                             ??_lostReturnHome 003C  
                         ??_getCharFromTxBuf 0001                            move@straightSpeed 00E2  
                            ___aldiv@divisor 001C                          ??_I2C_2_Master_Idle 000C  
                            ___aldiv@counter 0020                          ??_I2C_2_Master_Init 000C  
                        ??_I2C_2_Master_Read 000D                               ___wmul@product 0010  
                                   _LATAbits 0F79                          ??_I2C_2_Master_Stop 000D  
                                   _LATCbits 0F7B                                _isDataInTxBuf 3884  
                                   _LATDbits 0F7C                                     _LATEbits 0F7D  
                                   _LATFbits 0F7E                                     _LATGbits 0F7F  
                                   _LATHbits 0F80                                     _IPR0bits 0E1F  
                                   _PIE0bits 0E29                                     _PIE4bits 0E2D  
                                   i2u202_40 0022                                     i2u202_41 001E  
                                   i2u203_40 003E                                     i2u203_41 003A  
                                   i2u204_40 0056                                     i2u204_41 0052  
                                   i2u117_40 3726                                     i2u205_40 006C  
                                   i2u117_41 3722                                     i2u205_41 0068  
                                   i2u118_40 373C                                     i2u206_40 0088  
                                   i2u118_41 3738                                     i2u206_41 0084  
                                turnRight@mL 001F                                  turnRight@mR 0021  
                                   i2u311_47 3414                                     _PIR0bits 0E33  
                                   i2u186_40 3776                                     i2u186_41 3772  
                                   i2u187_40 379A                                     i2u187_41 3796  
                                   i2u188_40 3898                                     i2u188_41 3892  
                                   i2u189_40 389A                                     _PIR4bits 0E37  
                            ?_putCharToRxBuf 0001                             ?_initDCmotorsPWM 000C  
                fullSpeedAhead@straightSpeed 0023          __end_of_color_clear_init_interrupts 33D8  
             ?i2_color_clear_init_interrupts 0001                  _color_clear_init_interrupts 335E  
                                   _SSP2CON2 0EDA                                     _SSP2STAT 0ED8  
                               move@turnRamp 00E7                                   _ADCON0bits 0F60  
                  __end_of_I2C_2_Master_Idle 3716                    __end_of_I2C_2_Master_Init 36C6  
                  __end_of_I2C_2_Master_Read 362E                            ___wmul@multiplier 000C  
                  __end_of_I2C_2_Master_Stop 38E8     color_clear_init_interrupts@low_threshold 0013  
 i2color_clear_init_interrupts@low_threshold 0008                                 setMotorPWM@m 0019  
                I2C_2_Master_Write@data_byte 000D                           returnHome@turnRamp 003B  
                                  main@color 01B3                                 _TxBufReadCnt 0045  
                   i2color_writetoaddr@value 0003                                    _turnRight 28A4  
                  returnHome@reverseDuration 0037                                 ??_color_read 0012  
                          ___lmul@multiplier 000C                                    copy_data0 34DA  
                             ?_isDataInTxBuf 0001                __end_of_I2C_2_Master_RepStart 38DE  
                          ?_reverseOneSquare 001F                          __end_of_setMotorPWM 2DC4  
                               ??_initUSART4 000C                         i2_I2C_2_Master_Start 38FC  
            reverseOneSquare@reverseDuration 0024                         i2_I2C_2_Master_Write 38BE  
                         ??_reverseOneSquare 0026                                     __Hrparam 0000  
                          ??_color_normalise 0030                                   _ADC_getval 386C  
                           main@testSequence 01A2                                     __Lrparam 0000  
                              ??_white_Light 000C                  __end_ofi2_I2C_2_Master_Idle 373E  
                __end_ofi2_I2C_2_Master_Stop 38FC                             lostReturnHome@mL 002D  
                           lostReturnHome@mR 002F                           __end_of_color_read 26B8  
                                 _ANSELBbits 0E9A                                   _ANSELDbits 0EA7  
                                 _ANSELFbits 0EB4                                   _T0CON0bits 0FD5  
                                 _T0CON1bits 0FD6                reverseOneSquare@straightSpeed 0023  
                            ___lwdiv@divisor 0014                       returnHome@moveSequence 0031  
                         __end_of_initUSART4 3852                              ___lwdiv@counter 0018  
                          turnRight@turnRamp 0025                                   ?_turnRight 001F  
                                   __ptext10 36C6                                     __ptext11 3124  
                                   __ptext20 2DC4                                     __ptext12 2C58  
                                   __ptext21 3534                                     __ptext13 373E  
                                   __ptext30 369C                                     __ptext22 2F0E  
                                   __ptext14 3452                                     __ptext31 359E  
                                   __ptext23 362E                                     __ptext15 3834  
                                   __ptext40 3814                                     __ptext32 320A  
                                   __ptext24 335E                                     __ptext16 32CE  
                                   __ptext41 38BE                                     __ptext33 3852  
                                   __ptext25 37D4                                     __ptext17 24CA  
                                   __ptext42 38F2                                     __ptext34 386C  
                                   __ptext26 38B2                                     __ptext18 38D4  
                                   __ptext43 38FC                                     __ptext35 37F4  
                                   __ptext27 38DE                                     __ptext19 35EC  
                                   __ptext44 3716                                     __ptext36 389C  
                                   __ptext28 38E8                                     __ptext45 3764  
                                   __ptext37 3666                                     __ptext29 36EE  
                                   __ptext46 3884                                     __ptext47 378A  
                                   __ptext39 33D8                                    move@color 00DC  
                              ?_batteryLevel 0001                                 _SSP2CON1bits 0ED9  
                               _SSP2CON2bits 0EDA                             turnLeft@turnRamp 0025  
                                 turnLeft@mL 001F                                   turnLeft@mR 0021  
                      ?i2_I2C_2_Master_Start 0001                             move@straightRamp 00E4  
                      ?i2_I2C_2_Master_Write 0001                             move@straightTime 00DF  
                          returnHome@curMove 0035                                 ??_resetTimer 000C  
                                 turnRight@i 0029                                     isa$xinst 0000  
                                 _RC4STAbits 0EE7                                     main@RGBC 01B6  
                                   int$flags 004B                                 ??_returnHome 003C  
                                   _turnLeft 2A7E                      fullSpeedAhead@cur_power 002A  
                        __end_of_white_Light 37D4                                   _INTCONbits 0FF2  
                  reverseOneSquare@cur_power 002B                           reverseOneSquare@mL 001F  
                         reverseOneSquare@mR 0021                           __end_of_resetTimer 38D4  
                           move@turnDuration 00E6                               ??_batteryLevel 0014  
                                _setMotorPWM 2C58                            ??_get16bitTMR0val 000E  
                            ??_isDataInTxBuf 0001                                     intlevel2 0000  
                           ??_fullSpeedAhead 0025                           __end_of_returnHome 14BE  
                                  turnLeft@i 0029                                  ?_ADC_getval 0001  
                          main@straightSpeed 01B2                             _color_click_init 362E  
                                 _SSP2DATPPS 0E1D                                   _SSP2CLKPPS 0E1C  
                               ___aldiv@sign 0021                                  ??_turnRight 0026  
                           main@straightRamp 01B4                             main@straightTime 0128  
                                 _TX4STAbits 0EE8                       ??i2_I2C_2_Master_Start 0002  
                     ??i2_I2C_2_Master_Write 0002                             ??_putCharToRxBuf 0001  
                               returnHome@mL 002D                                 returnHome@mR 002F  
