

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 14:14:23 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Generated 21/07/2023 GMT
    75                           ; 
    76                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F67K40 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000000                     
   109                           	psect	idataCOMRAM
   110   003F64                     __pidataCOMRAM:
   111                           	callstack 0
   112                           
   113                           ;initializer for _ambient
   114   003F64  01F4               	dw	500
   115                           
   116                           	psect	idataBANK0
   117   003F60                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for main@F14635
   121   003F60  04                 	db	4
   122   003F61  03                 	db	3
   123   003F62  09                 	db	9
   124   003F63  08                 	db	8
   125   000000                     _TRISCbits	set	3971
   126   000000                     _RC4STAbits	set	3815
   127   000000                     _SP4BRGH	set	3814
   128   000000                     _SP4BRGL	set	3813
   129   000000                     _TX4STAbits	set	3816
   130   000000                     _BAUD4CONbits	set	3817
   131   000000                     _TX4REG	set	3812
   132   000000                     _TRISBbits	set	3970
   133   000000                     _TRISAbits	set	3969
   134   000000                     _TRISEbits	set	3973
   135   000000                     _TRISGbits	set	3975
   136   000000                     _LATFbits	set	3966
   137   000000                     _TRISFbits	set	3974
   138   000000                     _TRISHbits	set	3976
   139   000000                     _TRISDbits	set	3972
   140   000000                     _LATEbits	set	3965
   141   000000                     _LATGbits	set	3967
   142   000000                     _LATHbits	set	3968
   143   000000                     _SSP2CON2bits	set	3802
   144   000000                     _TMR0IF	set	29085
   145   000000                     _TMR0IE	set	29005
   146   000000                     _RX4PPS	set	3605
   147   000000                     _SSP2CLKPPS	set	3612
   148   000000                     _SSP2DATPPS	set	3613
   149   000000                     _PIE0bits	set	3625
   150   000000                     _CCPR4H	set	3873
   151   000000                     _CCPR3H	set	3877
   152   000000                     _CCPR2H	set	4006
   153   000000                     _CCPR1H	set	4010
   154   000000                     _CCP1CONbits	set	4011
   155   000000                     _CCPTMRS0bits	set	4013
   156   000000                     _T2PR	set	4028
   157   000000                     _T2CONbits	set	4029
   158   000000                     _INTCONbits	set	4082
   159   000000                     _CCP2CONbits	set	4007
   160   000000                     _CCP3CONbits	set	3878
   161   000000                     _ADREFbits	set	3928
   162   000000                     _LATAbits	set	3961
   163   000000                     _LATDbits	set	3964
   164   000000                     _PORTFbits	set	3982
   165   000000                     _CCP4CONbits	set	3874
   166   000000                     _PIE4bits	set	3629
   167   000000                     _RD5PPS	set	3695
   168   000000                     _ANSELDbits	set	3751
   169   000000                     _SSP2ADD	set	3798
   170   000000                     _SSP2CON1bits	set	3801
   171   000000                     _LATCbits	set	3963
   172   000000                     _RC4REG	set	3811
   173   000000                     _SSP2CON2	set	3802
   174   000000                     _SSP2STAT	set	3800
   175   000000                     _ANSELFbits	set	3764
   176   000000                     _SSP2BUF	set	3797
   177   000000                     _IPR0bits	set	3615
   178   000000                     _RE2PPS	set	3700
   179   000000                     _ANSELBbits	set	3738
   180   000000                     _RD6PPS	set	3696
   181   000000                     _PIR0bits	set	3635
   182   000000                     _PIR4bits	set	3639
   183   000000                     _RC0PPS	set	3682
   184   000000                     _RC7PPS	set	3689
   185   000000                     _ADPCH	set	3935
   186   000000                     _ADRESH	set	3940
   187   000000                     _ADCON0bits	set	3936
   188   000000                     _RE4PPS	set	3702
   189   000000                     _RG6PPS	set	3720
   190   000000                     _TMR0L	set	4051
   191   000000                     _TMR0H	set	4052
   192   000000                     _T0CON0bits	set	4053
   193   000000                     _T0CON1bits	set	4054
   194   000000                     _T2CLKCONbits	set	4031
   195   000000                     _T2HLTbits	set	4030
   196                           
   197                           ; #config settings
   198                           
   199                           	psect	cinit
   200   003B20                     __pcinit:
   201                           	callstack 0
   202   003B20                     start_initialization:
   203                           	callstack 0
   204   003B20                     __initialization:
   205                           	callstack 0
   206                           
   207                           ; Initialize objects allocated to BANK0 (4 bytes)
   208                           ; load TBLPTR registers with __pidataBANK0
   209   003B20  0E60               	movlw	low __pidataBANK0
   210   003B22  6EF6               	movwf	tblptrl,c
   211   003B24  0E3F               	movlw	high __pidataBANK0
   212   003B26  6EF7               	movwf	tblptrh,c
   213   003B28  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   214   003B2A  6EF8               	movwf	tblptru,c
   215   003B2C  EE00  F0EE         	lfsr	0,__pdataBANK0
   216   003B30  EE10 F004          	lfsr	1,4
   217   003B34                     copy_data0:
   218   003B34  0009               	tblrd		*+
   219   003B36  CFF5 FFEE          	movff	tablat,postinc0
   220   003B3A  50E5               	movf	postdec1,w,c
   221   003B3C  50E1               	movf	fsr1l,w,c
   222   003B3E  E1FA               	bnz	copy_data0
   223                           
   224                           ; Initialize objects allocated to COMRAM (2 bytes)
   225                           ; load TBLPTR registers with __pidataCOMRAM
   226   003B40  0E64               	movlw	low __pidataCOMRAM
   227   003B42  6EF6               	movwf	tblptrl,c
   228   003B44  0E3F               	movlw	high __pidataCOMRAM
   229   003B46  6EF7               	movwf	tblptrh,c
   230   003B48  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   231   003B4A  6EF8               	movwf	tblptru,c
   232   003B4C  0009               	tblrd		*+	;fetch initializer
   233   003B4E  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   234   003B52  0009               	tblrd		*+	;fetch initializer
   235   003B54  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   236                           
   237                           ; Clear objects allocated to BANK2 (122 bytes)
   238   003B58  EE02  F000         	lfsr	0,__pbssBANK2
   239   003B5C  0E7A               	movlw	122
   240   003B5E                     clear_0:
   241   003B5E  6AEE               	clrf	postinc0,c
   242   003B60  06E8               	decf	wreg,f,c
   243   003B62  E1FD               	bnz	clear_0
   244                           
   245                           ; Clear objects allocated to BANK1 (40 bytes)
   246   003B64  EE01  F0D6         	lfsr	0,__pbssBANK1
   247   003B68  0E28               	movlw	40
   248   003B6A                     clear_1:
   249   003B6A  6AEE               	clrf	postinc0,c
   250   003B6C  06E8               	decf	wreg,f,c
   251   003B6E  E1FD               	bnz	clear_1
   252                           
   253                           ; Clear objects allocated to BANK0 (82 bytes)
   254   003B70  EE00  F060         	lfsr	0,__pbssBANK0
   255   003B74  0E52               	movlw	82
   256   003B76                     clear_2:
   257   003B76  6AEE               	clrf	postinc0,c
   258   003B78  06E8               	decf	wreg,f,c
   259   003B7A  E1FD               	bnz	clear_2
   260                           
   261                           ; Clear objects allocated to COMRAM (4 bytes)
   262   003B7C  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   263   003B7E  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   264   003B80  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   265   003B82  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   266   003B84                     end_of_initialization:
   267                           	callstack 0
   268   003B84                     __end_of__initialization:
   269                           	callstack 0
   270   003B84  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   271   003B86  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   272   003B88  0100               	movlb	0
   273   003B8A  EFDA  F010         	goto	_main	;jump to C main() function
   274                           
   275                           	psect	bssCOMRAM
   276   00004A                     __pbssCOMRAM:
   277                           	callstack 0
   278   00004A                     _TxBufReadCnt:
   279                           	callstack 0
   280   00004A                     	ds	1
   281   00004B                     _TxBufWriteCnt:
   282                           	callstack 0
   283   00004B                     	ds	1
   284   00004C                     _RxBufReadCnt:
   285                           	callstack 0
   286   00004C                     	ds	1
   287   00004D                     _RxBufWriteCnt:
   288                           	callstack 0
   289   00004D                     	ds	1
   290                           
   291                           	psect	dataCOMRAM
   292   00004E                     __pdataCOMRAM:
   293                           	callstack 0
   294   00004E                     _ambient:
   295                           	callstack 0
   296   00004E                     	ds	2
   297                           
   298                           	psect	bssBANK0
   299   000060                     __pbssBANK0:
   300                           	callstack 0
   301   000060                     _EUSART4TXbuf:
   302                           	callstack 0
   303   000060                     	ds	60
   304   00009C                     _EUSART4RXbuf:
   305                           	callstack 0
   306   00009C                     	ds	20
   307   0000B0                     _lost:
   308                           	callstack 0
   309   0000B0                     	ds	1
   310   0000B1                     _wall:
   311                           	callstack 0
   312   0000B1                     	ds	1
   313                           
   314                           	psect	dataBANK0
   315   0000EE                     __pdataBANK0:
   316                           	callstack 0
   317   0000EE                     main@F14635:
   318                           	callstack 0
   319   0000EE                     	ds	4
   320                           
   321                           	psect	bssBANK1
   322   0001D6                     __pbssBANK1:
   323                           	callstack 0
   324   0001D6                     	ds	40
   325                           
   326                           	psect	bssBANK2
   327   000200                     __pbssBANK2:
   328                           	callstack 0
   329   000200                     	ds	82
   330   000252                     	ds	40
   331                           
   332                           	psect	cstackBANK1
   333   000100                     __pcstackBANK1:
   334                           	callstack 0
   335   000100                     main@straightTime:
   336                           	callstack 0
   337                           
   338                           ; 82 bytes @ 0x0
   339   000100                     	ds	82
   340   000152                     main@moveSequence:
   341                           	callstack 0
   342                           
   343                           ; 40 bytes @ 0x52
   344   000152                     	ds	40
   345   00017A                     main@yellow:
   346                           	callstack 0
   347                           
   348                           ; 6 bytes @ 0x7A
   349   00017A                     	ds	6
   350   000180                     main@pink:
   351                           	callstack 0
   352                           
   353                           ; 6 bytes @ 0x80
   354   000180                     	ds	6
   355   000186                     main@orange:
   356                           	callstack 0
   357                           
   358                           ; 6 bytes @ 0x86
   359   000186                     	ds	6
   360   00018C                     main@lightblue:
   361                           	callstack 0
   362                           
   363                           ; 6 bytes @ 0x8C
   364   00018C                     	ds	6
   365   000192                     main@white:
   366                           	callstack 0
   367                           
   368                           ; 6 bytes @ 0x92
   369   000192                     	ds	6
   370   000198                     main@reverseDuration:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x98
   374   000198                     	ds	1
   375   000199                     main@red:
   376                           	callstack 0
   377                           
   378                           ; 6 bytes @ 0x99
   379   000199                     	ds	6
   380   00019F                     main@green:
   381                           	callstack 0
   382                           
   383                           ; 6 bytes @ 0x9F
   384   00019F                     	ds	6
   385   0001A5                     main@blue:
   386                           	callstack 0
   387                           
   388                           ; 6 bytes @ 0xA5
   389   0001A5                     	ds	6
   390   0001AB                     main@straightSpeed:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0xAB
   394   0001AB                     	ds	1
   395   0001AC                     main@turnSpeed:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0xAC
   399   0001AC                     	ds	1
   400   0001AD                     main@turnRamp:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0xAD
   404   0001AD                     	ds	1
   405   0001AE                     main@color:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0xAE
   409   0001AE                     	ds	1
   410   0001AF                     main@curMove:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0xAF
   414   0001AF                     	ds	1
   415   0001B0                     main@straightRamp:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0xB0
   419   0001B0                     	ds	1
   420   0001B1                     main@RGBC_n:
   421                           	callstack 0
   422                           
   423                           ; 8 bytes @ 0xB1
   424   0001B1                     	ds	8
   425   0001B9                     main@turnDuration:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0xB9
   429   0001B9                     	ds	1
   430   0001BA                     main@RGBC:
   431                           	callstack 0
   432                           
   433                           ; 8 bytes @ 0xBA
   434   0001BA                     	ds	8
   435   0001C2                     main@motorR:
   436                           	callstack 0
   437                           
   438                           ; 10 bytes @ 0xC2
   439   0001C2                     	ds	10
   440   0001CC                     main@motorL:
   441                           	callstack 0
   442                           
   443                           ; 10 bytes @ 0xCC
   444   0001CC                     	ds	10
   445                           
   446                           	psect	cstackBANK0
   447   0000B2                     __pcstackBANK0:
   448                           	callstack 0
   449   0000B2                     move@mL:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x0
   453   0000B2                     	ds	2
   454   0000B4                     move@mR:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x2
   458   0000B4                     	ds	2
   459   0000B6                     move@color:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x4
   463   0000B6                     	ds	1
   464   0000B7                     move@moveSequence:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x5
   468   0000B7                     	ds	2
   469   0000B9                     move@straightTime:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x7
   473   0000B9                     	ds	2
   474   0000BB                     move@curMove:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x9
   478   0000BB                     	ds	1
   479   0000BC                     move@straightSpeed:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0xA
   483   0000BC                     	ds	1
   484   0000BD                     move@reverseDuration:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0xB
   488   0000BD                     	ds	1
   489   0000BE                     move@straightRamp:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0xC
   493   0000BE                     	ds	1
   494   0000BF                     move@turnSpeed:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xD
   498   0000BF                     	ds	1
   499   0000C0                     move@turnDuration:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0xE
   503   0000C0                     	ds	1
   504   0000C1                     move@turnRamp:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0xF
   508   0000C1                     	ds	1
   509   0000C2                     main@buf:
   510                           	callstack 0
   511                           
   512                           ; 40 bytes @ 0x10
   513   0000C2                     	ds	40
   514   0000EA                     main@testSequence:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x38
   518   0000EA                     	ds	4
   519                           
   520                           	psect	cstackCOMRAM
   521   000001                     __pcstackCOMRAM:
   522                           	callstack 0
   523   000001                     ??_getCharFromTxBuf:
   524   000001                     ??i2_I2C_2_Master_Idle:
   525   000001                     putCharToRxBuf@byte:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x0
   529   000001                     	ds	1
   530   000002                     i2I2C_2_Master_Write@data_byte:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x1
   534   000002                     	ds	1
   535   000003                     i2color_writetoaddr@value:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x2
   539   000003                     	ds	1
   540   000004                     i2color_writetoaddr@address:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x3
   544   000004                     	ds	1
   545   000005                     ??i2_color_clear_init_interrupts:
   546                           
   547                           ; 1 bytes @ 0x4
   548   000005                     	ds	1
   549   000006                     i2color_clear_init_interrupts@high_threshold:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x5
   553   000006                     	ds	2
   554   000008                     i2color_clear_init_interrupts@low_threshold:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x7
   558   000008                     	ds	2
   559   00000A                     ??_HighISR:
   560                           
   561                           ; 1 bytes @ 0x9
   562   00000A                     	ds	2
   563   00000C                     ??_I2C_2_Master_Idle:
   564   00000C                     ?_get16bitTMR0val:
   565                           	callstack 0
   566   00000C                     ?___wmul:
   567                           	callstack 0
   568   00000C                     ?___awdiv:
   569                           	callstack 0
   570   00000C                     ?___lmul:
   571                           	callstack 0
   572   00000C                     white_Light@state:
   573                           	callstack 0
   574   00000C                     ADC_getval@tmpval:
   575                           	callstack 0
   576   00000C                     initDCmotorsPWM@PWMperiod:
   577                           	callstack 0
   578   00000C                     ___wmul@multiplier:
   579                           	callstack 0
   580   00000C                     ___awdiv@dividend:
   581                           	callstack 0
   582   00000C                     ___lmul@multiplier:
   583                           	callstack 0
   584   00000C                     color_detect@RGBC_n:
   585                           	callstack 0
   586                           
   587                           ; 8 bytes @ 0xB
   588   00000C                     	ds	1
   589   00000D                     ??_I2C_2_Master_Read:
   590   00000D                     I2C_2_Master_Write@data_byte:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0xC
   594   00000D                     	ds	1
   595   00000E                     ??_get16bitTMR0val:
   596   00000E                     color_writetoaddr@value:
   597                           	callstack 0
   598   00000E                     I2C_2_Master_Read@ack:
   599                           	callstack 0
   600   00000E                     ___wmul@multiplicand:
   601                           	callstack 0
   602   00000E                     ___awdiv@divisor:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0xD
   606   00000E                     	ds	1
   607   00000F                     color_writetoaddr@address:
   608                           	callstack 0
   609   00000F                     I2C_2_Master_Read@tmp:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0xE
   613   00000F                     	ds	1
   614   000010                     ??_color_clear_init_interrupts:
   615   000010                     ___awdiv@counter:
   616                           	callstack 0
   617   000010                     color_read@RGBC:
   618                           	callstack 0
   619   000010                     get16bitTMR0val@timer_low:
   620                           	callstack 0
   621   000010                     ___wmul@product:
   622                           	callstack 0
   623   000010                     ___lmul@multiplicand:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0xF
   627   000010                     	ds	1
   628   000011                     ___awdiv@sign:
   629                           	callstack 0
   630   000011                     color_clear_init_interrupts@high_threshold:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x10
   634   000011                     	ds	1
   635   000012                     ??_color_read:
   636   000012                     ?___lwdiv:
   637                           	callstack 0
   638   000012                     get16bitTMR0val@timer_high:
   639                           	callstack 0
   640   000012                     ___awdiv@quotient:
   641                           	callstack 0
   642   000012                     ___lwdiv@dividend:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x11
   646   000012                     	ds	1
   647   000013                     color_clear_init_interrupts@low_threshold:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x12
   651   000013                     	ds	1
   652   000014                     batteryLevel@batteryVoltage:
   653                           	callstack 0
   654   000014                     get16bitTMR0val@timer_val:
   655                           	callstack 0
   656   000014                     ___lwdiv@divisor:
   657                           	callstack 0
   658   000014                     ___lmul@product:
   659                           	callstack 0
   660   000014                     color_detect@red:
   661                           	callstack 0
   662                           
   663                           ; 6 bytes @ 0x13
   664   000014                     	ds	1
   665   000015                     ??_color_click_init:
   666   000015                     batteryLevel@batteryQuarter:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x14
   670   000015                     	ds	1
   671   000016                     ___lwdiv@quotient:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x15
   675   000016                     	ds	2
   676   000018                     ?___aldiv:
   677                           	callstack 0
   678   000018                     ___lwdiv@counter:
   679                           	callstack 0
   680   000018                     ___aldiv@dividend:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x17
   684   000018                     	ds	1
   685   000019                     setMotorPWM@m:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x18
   689   000019                     	ds	1
   690   00001A                     color_detect@green:
   691                           	callstack 0
   692                           
   693                           ; 6 bytes @ 0x19
   694   00001A                     	ds	1
   695   00001B                     ??_setMotorPWM:
   696                           
   697                           ; 1 bytes @ 0x1A
   698   00001B                     	ds	1
   699   00001C                     ___aldiv@divisor:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x1B
   703   00001C                     	ds	1
   704   00001D                     setMotorPWM@posDuty:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x1C
   708   00001D                     	ds	1
   709   00001E                     setMotorPWM@negDuty:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x1D
   713   00001E                     	ds	1
   714   00001F                     stop@mL:
   715                           	callstack 0
   716   00001F                     turnLeft@mL:
   717                           	callstack 0
   718   00001F                     turnRight@mL:
   719                           	callstack 0
   720   00001F                     fullSpeedAhead@mL:
   721                           	callstack 0
   722   00001F                     reverseOneSquare@mL:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x1E
   726   00001F                     	ds	1
   727   000020                     ___aldiv@counter:
   728                           	callstack 0
   729   000020                     color_detect@blue:
   730                           	callstack 0
   731                           
   732                           ; 6 bytes @ 0x1F
   733   000020                     	ds	1
   734   000021                     ___aldiv@sign:
   735                           	callstack 0
   736   000021                     stop@mR:
   737                           	callstack 0
   738   000021                     turnLeft@mR:
   739                           	callstack 0
   740   000021                     turnRight@mR:
   741                           	callstack 0
   742   000021                     fullSpeedAhead@mR:
   743                           	callstack 0
   744   000021                     reverseOneSquare@mR:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x20
   748   000021                     	ds	1
   749   000022                     ___aldiv@quotient:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x21
   753   000022                     	ds	1
   754   000023                     stop@straightRamp:
   755                           	callstack 0
   756   000023                     turnLeft@turnSpeed:
   757                           	callstack 0
   758   000023                     turnRight@turnSpeed:
   759                           	callstack 0
   760   000023                     fullSpeedAhead@straightSpeed:
   761                           	callstack 0
   762   000023                     reverseOneSquare@straightSpeed:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x22
   766   000023                     	ds	1
   767   000024                     ??_stop:
   768   000024                     turnLeft@turnDuration:
   769                           	callstack 0
   770   000024                     turnRight@turnDuration:
   771                           	callstack 0
   772   000024                     fullSpeedAhead@straightRamp:
   773                           	callstack 0
   774   000024                     reverseOneSquare@reverseDuration:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x23
   778   000024                     	ds	1
   779   000025                     ??_fullSpeedAhead:
   780   000025                     turnLeft@turnRamp:
   781                           	callstack 0
   782   000025                     turnRight@turnRamp:
   783                           	callstack 0
   784   000025                     reverseOneSquare@straightRamp:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x24
   788   000025                     	ds	1
   789   000026                     ??_turnRight:
   790   000026                     ??_turnLeft:
   791   000026                     ??_reverseOneSquare:
   792   000026                     color_detect@yellow:
   793                           	callstack 0
   794   000026                     color_normalise@RGBC:
   795                           	callstack 0
   796                           
   797                           ; 8 bytes @ 0x25
   798   000026                     	ds	1
   799   000027                     stop@i:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x26
   803   000027                     	ds	1
   804   000028                     fullSpeedAhead@i:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x27
   808   000028                     	ds	1
   809   000029                     stop@cur_power:
   810                           	callstack 0
   811   000029                     turnLeft@i:
   812                           	callstack 0
   813   000029                     turnRight@i:
   814                           	callstack 0
   815   000029                     reverseOneSquare@i:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x28
   819   000029                     	ds	1
   820   00002A                     fullSpeedAhead@cur_power:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x29
   824   00002A                     	ds	1
   825   00002B                     turnLeft@cur_power:
   826                           	callstack 0
   827   00002B                     turnRight@cur_power:
   828                           	callstack 0
   829   00002B                     reverseOneSquare@cur_power:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x2A
   833   00002B                     	ds	1
   834   00002C                     color_detect@pink:
   835                           	callstack 0
   836                           
   837                           ; 6 bytes @ 0x2B
   838   00002C                     	ds	1
   839   00002D                     returnHome@mL:
   840                           	callstack 0
   841   00002D                     lostReturnHome@mL:
   842                           	callstack 0
   843   00002D                     calibration@mL:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x2C
   847   00002D                     	ds	1
   848   00002E                     color_normalise@RGBC_n:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x2D
   852   00002E                     	ds	1
   853   00002F                     returnHome@mR:
   854                           	callstack 0
   855   00002F                     lostReturnHome@mR:
   856                           	callstack 0
   857   00002F                     calibration@mR:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x2E
   861   00002F                     	ds	1
   862   000030                     ??_color_normalise:
   863                           
   864                           ; 1 bytes @ 0x2F
   865   000030                     	ds	1
   866   000031                     calibration@turnSpeed:
   867                           	callstack 0
   868   000031                     returnHome@moveSequence:
   869                           	callstack 0
   870   000031                     lostReturnHome@moveSequence:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x30
   874   000031                     	ds	1
   875   000032                     color_calibration@RGBC:
   876                           	callstack 0
   877   000032                     calibration@turnDuration:
   878                           	callstack 0
   879   000032                     color_detect@orange:
   880                           	callstack 0
   881                           
   882                           ; 6 bytes @ 0x31
   883   000032                     	ds	1
   884   000033                     returnHome@straightTime:
   885                           	callstack 0
   886   000033                     lostReturnHome@straightTime:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x32
   890   000033                     	ds	1
   891   000034                     calibration@turnRamp:
   892                           	callstack 0
   893   000034                     color_calibration@RGBC_n:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x33
   897   000034                     	ds	1
   898   000035                     ??_calibration:
   899   000035                     returnHome@curMove:
   900                           	callstack 0
   901   000035                     lostReturnHome@curMove:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0x34
   905   000035                     	ds	1
   906   000036                     returnHome@straightSpeed:
   907                           	callstack 0
   908   000036                     lostReturnHome@straightSpeed:
   909                           	callstack 0
   910   000036                     color_calibration@red:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x35
   914   000036                     	ds	1
   915   000037                     returnHome@reverseDuration:
   916                           	callstack 0
   917   000037                     lostReturnHome@reverseDuration:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x36
   921   000037                     	ds	1
   922   000038                     returnHome@straightRamp:
   923                           	callstack 0
   924   000038                     lostReturnHome@straightRamp:
   925                           	callstack 0
   926   000038                     color_calibration@green:
   927                           	callstack 0
   928   000038                     color_detect@lightBlue:
   929                           	callstack 0
   930                           
   931                           ; 6 bytes @ 0x37
   932   000038                     	ds	1
   933   000039                     returnHome@turnSpeed:
   934                           	callstack 0
   935   000039                     lostReturnHome@turnSpeed:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x38
   939   000039                     	ds	1
   940   00003A                     returnHome@turnDuration:
   941                           	callstack 0
   942   00003A                     lostReturnHome@turnDuration:
   943                           	callstack 0
   944   00003A                     color_calibration@blue:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x39
   948   00003A                     	ds	1
   949   00003B                     returnHome@turnRamp:
   950                           	callstack 0
   951   00003B                     lostReturnHome@turnRamp:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x3A
   955   00003B                     	ds	1
   956   00003C                     ??_lostReturnHome:
   957   00003C                     ??_returnHome:
   958   00003C                     color_calibration@yellow:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x3B
   962   00003C                     	ds	2
   963   00003E                     color_calibration@pink:
   964                           	callstack 0
   965   00003E                     color_detect@white:
   966                           	callstack 0
   967                           
   968                           ; 6 bytes @ 0x3D
   969   00003E                     	ds	2
   970   000040                     returnHome@i:
   971                           	callstack 0
   972   000040                     lostReturnHome@i:
   973                           	callstack 0
   974   000040                     color_calibration@orange:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x3F
   978   000040                     	ds	1
   979   000041                     ??_move:
   980                           
   981                           ; 1 bytes @ 0x40
   982   000041                     	ds	1
   983   000042                     color_calibration@lightblue:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x41
   987   000042                     	ds	2
   988   000044                     ??_color_detect:
   989   000044                     color_calibration@white:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x43
   993   000044                     	ds	2
   994   000046                     ??_color_calibration:
   995   000046                     color_detect@color:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x45
   999   000046                     	ds	2
  1000   000048                     ??_main:
  1001                           
  1002                           ; 1 bytes @ 0x47
  1003   000048                     	ds	2
  1004                           
  1005 ;;
  1006 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1007 ;;
  1008 ;; *************** function _main *****************
  1009 ;; Defined at:
  1010 ;;		line 28 in file "main.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  straightTime   82    0[BANK1 ] unsigned int [41]
  1015 ;;  moveSequence   40   82[BANK1 ] unsigned char [40]
  1016 ;;  buf            40   16[BANK0 ] unsigned char [40]
  1017 ;;  motorL         10  204[BANK1 ] struct DC_motor
  1018 ;;  motorR         10  194[BANK1 ] struct DC_motor
  1019 ;;  RGBC            8  186[BANK1 ] struct RGBC_val
  1020 ;;  RGBC_n          8  177[BANK1 ] struct RGBC_val
  1021 ;;  blue            6  165[BANK1 ] struct RGB_calib
  1022 ;;  green           6  159[BANK1 ] struct RGB_calib
  1023 ;;  red             6  153[BANK1 ] struct RGB_calib
  1024 ;;  white           6  146[BANK1 ] struct RGB_calib
  1025 ;;  lightblue       6  140[BANK1 ] struct RGB_calib
  1026 ;;  orange          6  134[BANK1 ] struct RGB_calib
  1027 ;;  pink            6  128[BANK1 ] struct RGB_calib
  1028 ;;  yellow          6  122[BANK1 ] struct RGB_calib
  1029 ;;  testSequence    4   56[BANK0 ] unsigned char [4]
  1030 ;;  PWMcycle        2    0        unsigned int 
  1031 ;;  turnDuration    1  185[BANK1 ] unsigned char 
  1032 ;;  straightRamp    1  176[BANK1 ] unsigned char 
  1033 ;;  curMove         1  175[BANK1 ] unsigned char 
  1034 ;;  color           1  174[BANK1 ] unsigned char 
  1035 ;;  turnRamp        1  173[BANK1 ] unsigned char 
  1036 ;;  turnSpeed       1  172[BANK1 ] unsigned char 
  1037 ;;  straightSpee    1  171[BANK1 ] unsigned char 
  1038 ;;  reverseDurat    1  152[BANK1 ] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1049 ;;      Locals:         0      44     214       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1050 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1051 ;;      Totals:         2      44     214       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1052 ;;Total ram usage:      260 bytes
  1053 ;; Hardware stack levels required when called: 10
  1054 ;; This function calls:
  1055 ;;		_Buggy_init
  1056 ;;		_Interrupts_init
  1057 ;;		_Timer0_init
  1058 ;;		_batteryLevel
  1059 ;;		_calibration
  1060 ;;		_color_calibration
  1061 ;;		_color_click_init
  1062 ;;		_color_detect
  1063 ;;		_color_normalise
  1064 ;;		_color_read
  1065 ;;		_fullSpeedAhead
  1066 ;;		_get16bitTMR0val
  1067 ;;		_initDCmotorsPWM
  1068 ;;		_initUSART4
  1069 ;;		_lostReturnHome
  1070 ;;		_move
  1071 ;;		_resetTimer
  1072 ;;		_stop
  1073 ;;		_white_Light
  1074 ;; This function is called by:
  1075 ;;		Startup code after reset
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text0
  1080   0021B4                     __ptext0:
  1081                           	callstack 0
  1082   0021B4                     _main:
  1083                           	callstack 21
  1084   0021B4                     
  1085                           ;main.c: 30:     char buf[40] = {0};
  1086   0021B4  EE20  F0C2         	lfsr	2,main@buf
  1087   0021B8  0E27               	movlw	39
  1088   0021BA                     u2571:
  1089   0021BA  6ADE               	clrf	postinc2,c
  1090   0021BC  06E8               	decf	wreg,f,c
  1091   0021BE  E2FD               	bc	u2571
  1092   0021C0                     
  1093                           ;main.c: 32:     unsigned char color = 0;
  1094   0021C0  0E00               	movlw	0
  1095   0021C2  0101               	movlb	1	; () banked
  1096   0021C4  6FAE               	movwf	main@color& (0+255),b
  1097                           
  1098                           ;main.c: 33:     unsigned char moveSequence[40] = {0};
  1099   0021C6  EE21  F052         	lfsr	2,main@moveSequence
  1100   0021CA  0E27               	movlw	39
  1101   0021CC                     u2581:
  1102   0021CC  6ADE               	clrf	postinc2,c
  1103   0021CE  06E8               	decf	wreg,f,c
  1104   0021D0  E2FD               	bc	u2581
  1105                           
  1106                           ;main.c: 34:     unsigned int straightTime[41] = {0};
  1107   0021D2  EE21  F000         	lfsr	2,main@straightTime
  1108   0021D6  0E51               	movlw	81
  1109   0021D8                     u2591:
  1110   0021D8  6ADE               	clrf	postinc2,c
  1111   0021DA  06E8               	decf	wreg,f,c
  1112   0021DC  E2FD               	bc	u2591
  1113   0021DE                     
  1114                           ; BSR set to: 1
  1115                           ;main.c: 35:     char curMove = 0;
  1116   0021DE  0E00               	movlw	0
  1117   0021E0  6FAF               	movwf	main@curMove& (0+255),b
  1118   0021E2                     
  1119                           ; BSR set to: 1
  1120                           ;main.c: 37:     unsigned char testSequence[4] = {4,3,9,8};
  1121   0021E2  C0EE  F0EA         	movff	main@F14635,main@testSequence
  1122   0021E6  C0EF  F0EB         	movff	main@F14635+1,main@testSequence+1
  1123   0021EA  C0F0  F0EC         	movff	main@F14635+2,main@testSequence+2
  1124   0021EE  C0F1  F0ED         	movff	main@F14635+3,main@testSequence+3
  1125   0021F2                     
  1126                           ; BSR set to: 1
  1127                           ;main.c: 40:     struct RGBC_val RGBC, RGBC_n;;main.c: 41:     struct DC_motor motorL, m
      +                          otorR;;main.c: 44:     Buggy_init();
  1128   0021F2  EC60  F01E         	call	_Buggy_init	;wreg free
  1129   0021F6                     
  1130                           ;main.c: 45:     color_click_init();
  1131   0021F6  EC44  F01E         	call	_color_click_init	;wreg free
  1132   0021FA                     
  1133                           ;main.c: 46:     Timer0_init();
  1134   0021FA  EC27  F01F         	call	_Timer0_init	;wreg free
  1135   0021FE                     
  1136                           ;main.c: 47:     Interrupts_init();
  1137   0021FE  EC7B  F01F         	call	_Interrupts_init	;wreg free
  1138   002202                     
  1139                           ;main.c: 48:     initUSART4();
  1140   002202  EC47  F01F         	call	_initUSART4	;wreg free
  1141   002206                     
  1142                           ;main.c: 49:     initDCmotorsPWM(PWMcycle);
  1143   002206  0E00               	movlw	0
  1144   002208  6E0D               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1145   00220A  0EC7               	movlw	199
  1146   00220C  6E0C               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1147   00220E  EC51  F01C         	call	_initDCmotorsPWM	;wreg free
  1148   002212                     
  1149                           ;main.c: 51:     motorL.power=0;
  1150   002212  0E00               	movlw	0
  1151   002214  0101               	movlb	1	; () banked
  1152   002216  6FCC               	movwf	main@motorL& (0+255),b
  1153   002218                     
  1154                           ; BSR set to: 1
  1155                           ;main.c: 52:     motorL.direction=1;
  1156   002218  0E01               	movlw	1
  1157   00221A  6FCD               	movwf	(main@motorL+1)& (0+255),b
  1158   00221C                     
  1159                           ; BSR set to: 1
  1160                           ;main.c: 53:     motorL.brakemode=1;
  1161   00221C  0E01               	movlw	1
  1162   00221E  6FCE               	movwf	(main@motorL+2)& (0+255),b
  1163   002220                     
  1164                           ; BSR set to: 1
  1165                           ;main.c: 54:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1166   002220  0EAA               	movlw	170
  1167   002222  6FD1               	movwf	(main@motorL+5)& (0+255),b
  1168   002224  0E0F               	movlw	15
  1169   002226  6FD2               	movwf	(main@motorL+6)& (0+255),b
  1170   002228                     
  1171                           ; BSR set to: 1
  1172                           ;main.c: 55:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1173   002228  0EA6               	movlw	166
  1174   00222A  6FD3               	movwf	(main@motorL+7)& (0+255),b
  1175   00222C  0E0F               	movlw	15
  1176   00222E  6FD4               	movwf	(main@motorL+8)& (0+255),b
  1177   002230                     
  1178                           ; BSR set to: 1
  1179                           ;main.c: 56:     motorL.PWMperiod=PWMcycle;
  1180   002230  0E00               	movlw	0
  1181   002232  6FD0               	movwf	(main@motorL+4)& (0+255),b
  1182   002234  0EC7               	movlw	199
  1183   002236  6FCF               	movwf	(main@motorL+3)& (0+255),b
  1184   002238                     
  1185                           ; BSR set to: 1
  1186                           ;main.c: 57:     motorL.compensation=3;
  1187   002238  0E03               	movlw	3
  1188   00223A  6FD5               	movwf	(main@motorL+9)& (0+255),b
  1189   00223C                     
  1190                           ; BSR set to: 1
  1191                           ;main.c: 59:     motorR.power=0;
  1192   00223C  0E00               	movlw	0
  1193   00223E  6FC2               	movwf	main@motorR& (0+255),b
  1194   002240                     
  1195                           ; BSR set to: 1
  1196                           ;main.c: 60:     motorR.direction=1;
  1197   002240  0E01               	movlw	1
  1198   002242  6FC3               	movwf	(main@motorR+1)& (0+255),b
  1199   002244                     
  1200                           ; BSR set to: 1
  1201                           ;main.c: 61:     motorR.brakemode=1;
  1202   002244  0E01               	movlw	1
  1203   002246  6FC4               	movwf	(main@motorR+2)& (0+255),b
  1204   002248                     
  1205                           ; BSR set to: 1
  1206                           ;main.c: 62:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1207   002248  0E25               	movlw	37
  1208   00224A  6FC7               	movwf	(main@motorR+5)& (0+255),b
  1209   00224C  0E0F               	movlw	15
  1210   00224E  6FC8               	movwf	(main@motorR+6)& (0+255),b
  1211   002250                     
  1212                           ; BSR set to: 1
  1213                           ;main.c: 63:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1214   002250  0E21               	movlw	33
  1215   002252  6FC9               	movwf	(main@motorR+7)& (0+255),b
  1216   002254  0E0F               	movlw	15
  1217   002256  6FCA               	movwf	(main@motorR+8)& (0+255),b
  1218   002258                     
  1219                           ; BSR set to: 1
  1220                           ;main.c: 64:     motorR.PWMperiod=PWMcycle;
  1221   002258  0E00               	movlw	0
  1222   00225A  6FC6               	movwf	(main@motorR+4)& (0+255),b
  1223   00225C  0EC7               	movlw	199
  1224   00225E  6FC5               	movwf	(main@motorR+3)& (0+255),b
  1225   002260                     
  1226                           ; BSR set to: 1
  1227                           ;main.c: 65:     motorR.compensation=0;
  1228   002260  0E00               	movlw	0
  1229   002262  6FCB               	movwf	(main@motorR+9)& (0+255),b
  1230   002264                     
  1231                           ; BSR set to: 1
  1232                           ;main.c: 68:     char straightSpeed=25;
  1233   002264  0E19               	movlw	25
  1234   002266  6FAB               	movwf	main@straightSpeed& (0+255),b
  1235   002268                     
  1236                           ; BSR set to: 1
  1237                           ;main.c: 69:     unsigned char straightRamp=1;
  1238   002268  0E01               	movlw	1
  1239   00226A  6FB0               	movwf	main@straightRamp& (0+255),b
  1240   00226C                     
  1241                           ; BSR set to: 1
  1242                           ;main.c: 71:     unsigned char reverseDuration=10;
  1243   00226C  0E0A               	movlw	10
  1244   00226E  6F98               	movwf	main@reverseDuration& (0+255),b
  1245   002270                     
  1246                           ; BSR set to: 1
  1247                           ;main.c: 73:     char turnSpeed=20;
  1248   002270  0E14               	movlw	20
  1249   002272  6FAC               	movwf	main@turnSpeed& (0+255),b
  1250   002274                     
  1251                           ; BSR set to: 1
  1252                           ;main.c: 74:     unsigned char turnDuration=5;
  1253   002274  0E05               	movlw	5
  1254   002276  6FB9               	movwf	main@turnDuration& (0+255),b
  1255   002278                     
  1256                           ; BSR set to: 1
  1257                           ;main.c: 75:     unsigned char turnRamp=2;
  1258   002278  0E02               	movlw	2
  1259   00227A  6FAD               	movwf	main@turnRamp& (0+255),b
  1260   00227C                     
  1261                           ; BSR set to: 1
  1262                           ;main.c: 78:     batteryLevel();
  1263   00227C  ECFC  F01D         	call	_batteryLevel	;wreg free
  1264   002280                     l89:
  1265   002280  B48E               	btfsc	142,2,c	;volatile
  1266   002282  EF45  F011         	goto	u2601
  1267   002286  EF47  F011         	goto	u2600
  1268   00228A                     u2601:
  1269   00228A  EF40  F011         	goto	l89
  1270   00228E                     u2600:
  1271   00228E                     
  1272                           ;main.c: 82:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1273   00228E  9680               	bcf	128,3,c	;volatile
  1274   002290  9E7C               	bcf	124,7,c	;volatile
  1275                           
  1276                           ;main.c: 107:     LATHbits.LATH1=LATDbits.LATD3=1;
  1277   002292  867C               	bsf	124,3,c	;volatile
  1278   002294  8280               	bsf	128,1,c	;volatile
  1279   002296                     
  1280                           ;main.c: 108:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1281   002296  0E29               	movlw	41
  1282   002298  6E49               	movwf	(??_main+1)^0,c
  1283   00229A  0E96               	movlw	150
  1284   00229C  6E48               	movwf	??_main^0,c
  1285   00229E  0E7F               	movlw	127
  1286   0022A0                     u2777:
  1287   0022A0  2EE8               	decfsz	wreg,f,c
  1288   0022A2  D7FE               	bra	u2777
  1289   0022A4  2E48               	decfsz	??_main^0,f,c
  1290   0022A6  D7FC               	bra	u2777
  1291   0022A8  2E49               	decfsz	(??_main+1)^0,f,c
  1292   0022AA  D7FA               	bra	u2777
  1293   0022AC  0000               	nop	
  1294   0022AE                     
  1295                           ;main.c: 111:     struct RGB_calib red, green, blue, yellow, pink, orange, lightblue, wh
      +                          ite;;main.c: 112:     color_calibration(&RGBC, &RGBC_n, &red, &green, &blue, &yellow, &p
      +                          ink, &orange, &lightblue, &white);
  1296   0022AE  0EBA               	movlw	low main@RGBC
  1297   0022B0  6E32               	movwf	color_calibration@RGBC^0,c
  1298   0022B2  0E01               	movlw	high main@RGBC
  1299   0022B4  6E33               	movwf	(color_calibration@RGBC+1)^0,c
  1300   0022B6  0EB1               	movlw	low main@RGBC_n
  1301   0022B8  6E34               	movwf	color_calibration@RGBC_n^0,c
  1302   0022BA  0E01               	movlw	high main@RGBC_n
  1303   0022BC  6E35               	movwf	(color_calibration@RGBC_n+1)^0,c
  1304   0022BE  0E99               	movlw	low main@red
  1305   0022C0  6E36               	movwf	color_calibration@red^0,c
  1306   0022C2  0E01               	movlw	high main@red
  1307   0022C4  6E37               	movwf	(color_calibration@red+1)^0,c
  1308   0022C6  0E9F               	movlw	low main@green
  1309   0022C8  6E38               	movwf	color_calibration@green^0,c
  1310   0022CA  0E01               	movlw	high main@green
  1311   0022CC  6E39               	movwf	(color_calibration@green+1)^0,c
  1312   0022CE  0EA5               	movlw	low main@blue
  1313   0022D0  6E3A               	movwf	color_calibration@blue^0,c
  1314   0022D2  0E01               	movlw	high main@blue
  1315   0022D4  6E3B               	movwf	(color_calibration@blue+1)^0,c
  1316   0022D6  0E7A               	movlw	low main@yellow
  1317   0022D8  6E3C               	movwf	color_calibration@yellow^0,c
  1318   0022DA  0E01               	movlw	high main@yellow
  1319   0022DC  6E3D               	movwf	(color_calibration@yellow+1)^0,c
  1320   0022DE  0E80               	movlw	low main@pink
  1321   0022E0  6E3E               	movwf	color_calibration@pink^0,c
  1322   0022E2  0E01               	movlw	high main@pink
  1323   0022E4  6E3F               	movwf	(color_calibration@pink+1)^0,c
  1324   0022E6  0E86               	movlw	low main@orange
  1325   0022E8  6E40               	movwf	color_calibration@orange^0,c
  1326   0022EA  0E01               	movlw	high main@orange
  1327   0022EC  6E41               	movwf	(color_calibration@orange+1)^0,c
  1328   0022EE  0E8C               	movlw	low main@lightblue
  1329   0022F0  6E42               	movwf	color_calibration@lightblue^0,c
  1330   0022F2  0E01               	movlw	high main@lightblue
  1331   0022F4  6E43               	movwf	(color_calibration@lightblue+1)^0,c
  1332   0022F6  0E92               	movlw	low main@white
  1333   0022F8  6E44               	movwf	color_calibration@white^0,c
  1334   0022FA  0E01               	movlw	high main@white
  1335   0022FC  6E45               	movwf	(color_calibration@white+1)^0,c
  1336   0022FE  EC46  F014         	call	_color_calibration	;wreg free
  1337   002302                     
  1338                           ;main.c: 115:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1339   002302  0ECC               	movlw	low main@motorL
  1340   002304  6E2D               	movwf	calibration@mL^0,c
  1341   002306  0E01               	movlw	high main@motorL
  1342   002308  6E2E               	movwf	(calibration@mL+1)^0,c
  1343   00230A  0EC2               	movlw	low main@motorR
  1344   00230C  6E2F               	movwf	calibration@mR^0,c
  1345   00230E  0E01               	movlw	high main@motorR
  1346   002310  6E30               	movwf	(calibration@mR+1)^0,c
  1347   002312  0E14               	movlw	20
  1348   002314  6E31               	movwf	calibration@turnSpeed^0,c
  1349   002316  0EB9               	movlw	low main@turnDuration
  1350   002318  6E32               	movwf	calibration@turnDuration^0,c
  1351   00231A  0E01               	movlw	high main@turnDuration
  1352   00231C  6E33               	movwf	(calibration@turnDuration+1)^0,c
  1353   00231E  0E02               	movlw	2
  1354   002320  6E34               	movwf	calibration@turnRamp^0,c
  1355   002322  ECF9  F012         	call	_calibration	;wreg free
  1356   002326                     
  1357                           ;main.c: 118:     white_Light(1);
  1358   002326  0E01               	movlw	1
  1359   002328  EC05  F01F         	call	_white_Light
  1360   00232C                     
  1361                           ;main.c: 119:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1362   00232C  0E52               	movlw	82
  1363   00232E  6E49               	movwf	(??_main+1)^0,c
  1364   002330  0E2B               	movlw	43
  1365   002332  6E48               	movwf	??_main^0,c
  1366   002334  0E00               	movlw	0
  1367   002336                     u2787:
  1368   002336  2EE8               	decfsz	wreg,f,c
  1369   002338  D7FE               	bra	u2787
  1370   00233A  2E48               	decfsz	??_main^0,f,c
  1371   00233C  D7FC               	bra	u2787
  1372   00233E  2E49               	decfsz	(??_main+1)^0,f,c
  1373   002340  D7FA               	bra	u2787
  1374   002342  D000               	nop2	
  1375   002344                     
  1376                           ;main.c: 122:     color_read(&RGBC);
  1377   002344  0EBA               	movlw	low main@RGBC
  1378   002346  6E10               	movwf	color_read@RGBC^0,c
  1379   002348  0E01               	movlw	high main@RGBC
  1380   00234A  6E11               	movwf	(color_read@RGBC+1)^0,c
  1381   00234C  EC5A  F015         	call	_color_read	;wreg free
  1382   002350                     
  1383                           ;main.c: 123:     ambient=RGBC.C;
  1384   002350  C1C0  F04E         	movff	main@RGBC+6,_ambient
  1385   002354  C1C1  F04F         	movff	main@RGBC+7,_ambient+1
  1386   002358                     
  1387                           ;main.c: 124:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1388   002358  0E29               	movlw	41
  1389   00235A  6E49               	movwf	(??_main+1)^0,c
  1390   00235C  0E96               	movlw	150
  1391   00235E  6E48               	movwf	??_main^0,c
  1392   002360  0E7F               	movlw	127
  1393   002362                     u2797:
  1394   002362  2EE8               	decfsz	wreg,f,c
  1395   002364  D7FE               	bra	u2797
  1396   002366  2E48               	decfsz	??_main^0,f,c
  1397   002368  D7FC               	bra	u2797
  1398   00236A  2E49               	decfsz	(??_main+1)^0,f,c
  1399   00236C  D7FA               	bra	u2797
  1400   00236E  0000               	nop	
  1401   002370                     
  1402                           ;main.c: 126:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1403   002370  0ECC               	movlw	low main@motorL
  1404   002372  6E1F               	movwf	fullSpeedAhead@mL^0,c
  1405   002374  0E01               	movlw	high main@motorL
  1406   002376  6E20               	movwf	(fullSpeedAhead@mL+1)^0,c
  1407   002378  0EC2               	movlw	low main@motorR
  1408   00237A  6E21               	movwf	fullSpeedAhead@mR^0,c
  1409   00237C  0E01               	movlw	high main@motorR
  1410   00237E  6E22               	movwf	(fullSpeedAhead@mR+1)^0,c
  1411   002380  0E19               	movlw	25
  1412   002382  6E23               	movwf	fullSpeedAhead@straightSpeed^0,c
  1413   002384  0E01               	movlw	1
  1414   002386  6E24               	movwf	fullSpeedAhead@straightRamp^0,c
  1415   002388  EC7D  F01B         	call	_fullSpeedAhead	;wreg free
  1416   00238C                     
  1417                           ;main.c: 127:     resetTimer();
  1418   00238C  EC92  F01F         	call	_resetTimer	;wreg free
  1419   002390                     
  1420                           ;main.c: 129:     wall=0;
  1421   002390  0E00               	movlw	0
  1422   002392  0100               	movlb	0	; () banked
  1423   002394  6FB1               	movwf	_wall& (0+255),b
  1424   002396                     
  1425                           ; BSR set to: 0
  1426                           ;main.c: 130:     lost=0;
  1427   002396  0E00               	movlw	0
  1428   002398  6FB0               	movwf	_lost& (0+255),b
  1429   00239A                     l3875:
  1430                           
  1431                           ;main.c: 133:         if (wall == 1) {
  1432   00239A  0100               	movlb	0	; () banked
  1433   00239C  05B1               	decf	_wall& (0+255),w,b
  1434   00239E  A4D8               	btfss	status,2,c
  1435   0023A0  EFD4  F011         	goto	u2611
  1436   0023A4  EFD6  F011         	goto	u2610
  1437   0023A8                     u2611:
  1438   0023A8  EFA7  F012         	goto	l3903
  1439   0023AC                     u2610:
  1440   0023AC                     
  1441                           ; BSR set to: 0
  1442                           ;main.c: 134:             PIE0bits.INT0IE=TMR0IE=0;
  1443   0023AC  010E               	movlb	14	; () banked
  1444   0023AE  9B29               	bcf	41,5,b	;volatile
  1445   0023B0  AB29               	btfss	41,5,b	;volatile
  1446   0023B2  D002               	bra	u2625
  1447   0023B4  8129               	bsf	41,0,b	;volatile
  1448   0023B6  D002               	bra	u2627
  1449   0023B8                     u2625:
  1450   0023B8  010E               	movlb	14	; () banked
  1451   0023BA  9129               	bcf	41,0,b	;volatile
  1452   0023BC                     u2627:
  1453   0023BC                     
  1454                           ; BSR set to: 14
  1455                           ;main.c: 135:             straightTime[curMove] = get16bitTMR0val();
  1456   0023BC  EC90  F01E         	call	_get16bitTMR0val	;wreg free
  1457   0023C0  0101               	movlb	1	; () banked
  1458   0023C2  51AF               	movf	main@curMove& (0+255),w,b
  1459   0023C4  0D02               	mullw	2
  1460   0023C6  0E00               	movlw	low main@straightTime
  1461   0023C8  24F3               	addwf	243,w,c
  1462   0023CA  6ED9               	movwf	fsr2l,c
  1463   0023CC  0E01               	movlw	high main@straightTime
  1464   0023CE  20F4               	addwfc	prodh,w,c
  1465   0023D0  6EDA               	movwf	fsr2h,c
  1466   0023D2  C00C  FFDE         	movff	?_get16bitTMR0val,postinc2
  1467   0023D6  C00D  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1468                           
  1469                           ;main.c: 138:             stop(&motorL, &motorR, straightRamp);
  1470   0023DA  0ECC               	movlw	low main@motorL
  1471   0023DC  6E1F               	movwf	stop@mL^0,c
  1472   0023DE  0E01               	movlw	high main@motorL
  1473   0023E0  6E20               	movwf	(stop@mL+1)^0,c
  1474   0023E2  0EC2               	movlw	low main@motorR
  1475   0023E4  6E21               	movwf	stop@mR^0,c
  1476   0023E6  0E01               	movlw	high main@motorR
  1477   0023E8  6E22               	movwf	(stop@mR+1)^0,c
  1478   0023EA  C1B0  F023         	movff	main@straightRamp,stop@straightRamp
  1479   0023EE  ECF9  F01A         	call	_stop	;wreg free
  1480   0023F2                     
  1481                           ;main.c: 139:             color_read(&RGBC);
  1482   0023F2  0EBA               	movlw	low main@RGBC
  1483   0023F4  6E10               	movwf	color_read@RGBC^0,c
  1484   0023F6  0E01               	movlw	high main@RGBC
  1485   0023F8  6E11               	movwf	(color_read@RGBC+1)^0,c
  1486   0023FA  EC5A  F015         	call	_color_read	;wreg free
  1487   0023FE                     
  1488                           ;main.c: 140:             color_normalise(RGBC, &RGBC_n);
  1489   0023FE  EE21  F0BA         	lfsr	2,main@RGBC
  1490   002402  EE00  F026         	lfsr	0,color_normalise@RGBC
  1491   002406  0E07               	movlw	7
  1492   002408                     u2631:
  1493   002408  CFDB FFEB          	movff	plusw2,plusw0
  1494   00240C  06E8               	decf	wreg,f,c
  1495   00240E  E2FC               	bc	u2631
  1496   002410  0EB1               	movlw	low main@RGBC_n
  1497   002412  6E2E               	movwf	color_normalise@RGBC_n^0,c
  1498   002414  0E01               	movlw	high main@RGBC_n
  1499   002416  6E2F               	movwf	(color_normalise@RGBC_n+1)^0,c
  1500   002418  ECCE  F019         	call	_color_normalise	;wreg free
  1501   00241C                     
  1502                           ;main.c: 141:             color = color_detect(RGBC_n, red, green, blue, yellow, pink, o
      +                          range, lightblue, white);
  1503   00241C  EE21  F0B1         	lfsr	2,main@RGBC_n
  1504   002420  EE00  F00C         	lfsr	0,color_detect@RGBC_n
  1505   002424  0E07               	movlw	7
  1506   002426                     u2641:
  1507   002426  CFDB FFEB          	movff	plusw2,plusw0
  1508   00242A  06E8               	decf	wreg,f,c
  1509   00242C  E2FC               	bc	u2641
  1510   00242E  EE21  F099         	lfsr	2,main@red
  1511   002432  EE00  F014         	lfsr	0,color_detect@red
  1512   002436  0E05               	movlw	5
  1513   002438                     u2651:
  1514   002438  CFDB FFEB          	movff	plusw2,plusw0
  1515   00243C  06E8               	decf	wreg,f,c
  1516   00243E  E2FC               	bc	u2651
  1517   002440  EE21  F09F         	lfsr	2,main@green
  1518   002444  EE00  F01A         	lfsr	0,color_detect@green
  1519   002448  0E05               	movlw	5
  1520   00244A                     u2661:
  1521   00244A  CFDB FFEB          	movff	plusw2,plusw0
  1522   00244E  06E8               	decf	wreg,f,c
  1523   002450  E2FC               	bc	u2661
  1524   002452  EE21  F0A5         	lfsr	2,main@blue
  1525   002456  EE00  F020         	lfsr	0,color_detect@blue
  1526   00245A  0E05               	movlw	5
  1527   00245C                     u2671:
  1528   00245C  CFDB FFEB          	movff	plusw2,plusw0
  1529   002460  06E8               	decf	wreg,f,c
  1530   002462  E2FC               	bc	u2671
  1531   002464  EE21  F07A         	lfsr	2,main@yellow
  1532   002468  EE00  F026         	lfsr	0,color_detect@yellow
  1533   00246C  0E05               	movlw	5
  1534   00246E                     u2681:
  1535   00246E  CFDB FFEB          	movff	plusw2,plusw0
  1536   002472  06E8               	decf	wreg,f,c
  1537   002474  E2FC               	bc	u2681
  1538   002476  EE21  F080         	lfsr	2,main@pink
  1539   00247A  EE00  F02C         	lfsr	0,color_detect@pink
  1540   00247E  0E05               	movlw	5
  1541   002480                     u2691:
  1542   002480  CFDB FFEB          	movff	plusw2,plusw0
  1543   002484  06E8               	decf	wreg,f,c
  1544   002486  E2FC               	bc	u2691
  1545   002488  EE21  F086         	lfsr	2,main@orange
  1546   00248C  EE00  F032         	lfsr	0,color_detect@orange
  1547   002490  0E05               	movlw	5
  1548   002492                     u2701:
  1549   002492  CFDB FFEB          	movff	plusw2,plusw0
  1550   002496  06E8               	decf	wreg,f,c
  1551   002498  E2FC               	bc	u2701
  1552   00249A  EE21  F08C         	lfsr	2,main@lightblue
  1553   00249E  EE00  F038         	lfsr	0,color_detect@lightBlue
  1554   0024A2  0E05               	movlw	5
  1555   0024A4                     u2711:
  1556   0024A4  CFDB FFEB          	movff	plusw2,plusw0
  1557   0024A8  06E8               	decf	wreg,f,c
  1558   0024AA  E2FC               	bc	u2711
  1559   0024AC  EE21  F092         	lfsr	2,main@white
  1560   0024B0  EE00  F03E         	lfsr	0,color_detect@white
  1561   0024B4  0E05               	movlw	5
  1562   0024B6                     u2721:
  1563   0024B6  CFDB FFEB          	movff	plusw2,plusw0
  1564   0024BA  06E8               	decf	wreg,f,c
  1565   0024BC  E2FC               	bc	u2721
  1566   0024BE  EC99  F01C         	call	_color_detect	;wreg free
  1567   0024C2  0101               	movlb	1	; () banked
  1568   0024C4  6FAE               	movwf	main@color& (0+255),b
  1569   0024C6                     
  1570                           ; BSR set to: 1
  1571                           ;main.c: 143:             moveSequence[curMove] = color;
  1572   0024C6  0E52               	movlw	low main@moveSequence
  1573   0024C8  25AF               	addwf	main@curMove& (0+255),w,b
  1574   0024CA  6ED9               	movwf	fsr2l,c
  1575   0024CC  6ADA               	clrf	fsr2h,c
  1576   0024CE  0E01               	movlw	high main@moveSequence
  1577   0024D0  22DA               	addwfc	fsr2h,f,c
  1578   0024D2  C1AE  FFDF         	movff	main@color,indf2
  1579   0024D6                     
  1580                           ; BSR set to: 1
  1581                           ;main.c: 146:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1582   0024D6  0ECC               	movlw	low main@motorL
  1583   0024D8  0100               	movlb	0	; () banked
  1584   0024DA  6FB2               	movwf	move@mL& (0+255),b
  1585   0024DC  0E01               	movlw	high main@motorL
  1586   0024DE  6FB3               	movwf	(move@mL+1)& (0+255),b
  1587   0024E0  0EC2               	movlw	low main@motorR
  1588   0024E2  6FB4               	movwf	move@mR& (0+255),b
  1589   0024E4  0E01               	movlw	high main@motorR
  1590   0024E6  6FB5               	movwf	(move@mR+1)& (0+255),b
  1591   0024E8  C1AE  F0B6         	movff	main@color,move@color
  1592   0024EC  0E52               	movlw	low main@moveSequence
  1593   0024EE  6FB7               	movwf	move@moveSequence& (0+255),b
  1594   0024F0  0E01               	movlw	high main@moveSequence
  1595   0024F2  6FB8               	movwf	(move@moveSequence+1)& (0+255),b
  1596   0024F4  0E00               	movlw	low main@straightTime
  1597   0024F6  6FB9               	movwf	move@straightTime& (0+255),b
  1598   0024F8  0E01               	movlw	high main@straightTime
  1599   0024FA  6FBA               	movwf	(move@straightTime+1)& (0+255),b
  1600   0024FC  C1AF  F0BB         	movff	main@curMove,move@curMove
  1601   002500  C1AB  F0BC         	movff	main@straightSpeed,move@straightSpeed
  1602   002504  C198  F0BD         	movff	main@reverseDuration,move@reverseDuration
  1603   002508  C1B0  F0BE         	movff	main@straightRamp,move@straightRamp
  1604   00250C  C1AC  F0BF         	movff	main@turnSpeed,move@turnSpeed
  1605   002510  C1B9  F0C0         	movff	main@turnDuration,move@turnDuration
  1606   002514  C1AD  F0C1         	movff	main@turnRamp,move@turnRamp
  1607   002518  ECAF  F00D         	call	_move	;wreg free
  1608   00251C                     
  1609                           ;main.c: 149:             color_read(&RGBC);
  1610   00251C  0EBA               	movlw	low main@RGBC
  1611   00251E  6E10               	movwf	color_read@RGBC^0,c
  1612   002520  0E01               	movlw	high main@RGBC
  1613   002522  6E11               	movwf	(color_read@RGBC+1)^0,c
  1614   002524  EC5A  F015         	call	_color_read	;wreg free
  1615   002528                     
  1616                           ;main.c: 150:             ambient=RGBC.C;
  1617   002528  C1C0  F04E         	movff	main@RGBC+6,_ambient
  1618   00252C  C1C1  F04F         	movff	main@RGBC+7,_ambient+1
  1619   002530                     
  1620                           ;main.c: 152:             curMove++;
  1621   002530  0101               	movlb	1	; () banked
  1622   002532  2BAF               	incf	main@curMove& (0+255),f,b
  1623   002534                     
  1624                           ; BSR set to: 1
  1625                           ;main.c: 153:             resetTimer();
  1626   002534  EC92  F01F         	call	_resetTimer	;wreg free
  1627   002538                     
  1628                           ;main.c: 154:             PIE0bits.INT0IE=TMR0IE=1;
  1629   002538  010E               	movlb	14	; () banked
  1630   00253A  8B29               	bsf	41,5,b	;volatile
  1631   00253C  AB29               	btfss	41,5,b	;volatile
  1632   00253E  D002               	bra	u2735
  1633   002540  8129               	bsf	41,0,b	;volatile
  1634   002542  D002               	bra	u2737
  1635   002544                     u2735:
  1636   002544  010E               	movlb	14	; () banked
  1637   002546  9129               	bcf	41,0,b	;volatile
  1638   002548                     u2737:
  1639   002548                     
  1640                           ; BSR set to: 14
  1641                           ;main.c: 155:             wall = 0;
  1642   002548  0E00               	movlw	0
  1643   00254A  0100               	movlb	0	; () banked
  1644   00254C  6FB1               	movwf	_wall& (0+255),b
  1645   00254E                     l3903:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;main.c: 159:         if (lost == 1) {
  1649   00254E  05B0               	decf	_lost& (0+255),w,b
  1650   002550  A4D8               	btfss	status,2,c
  1651   002552  EFAD  F012         	goto	u2741
  1652   002556  EFAF  F012         	goto	u2740
  1653   00255A                     u2741:
  1654   00255A  EFE4  F012         	goto	l3913
  1655   00255E                     u2740:
  1656   00255E                     
  1657                           ; BSR set to: 0
  1658                           ;main.c: 160:             PIE0bits.INT0IE=0;
  1659   00255E  010E               	movlb	14	; () banked
  1660   002560  9129               	bcf	41,0,b	;volatile
  1661   002562                     
  1662                           ; BSR set to: 14
  1663                           ;main.c: 161:             stop(&motorL, &motorR, straightRamp);
  1664   002562  0ECC               	movlw	low main@motorL
  1665   002564  6E1F               	movwf	stop@mL^0,c
  1666   002566  0E01               	movlw	high main@motorL
  1667   002568  6E20               	movwf	(stop@mL+1)^0,c
  1668   00256A  0EC2               	movlw	low main@motorR
  1669   00256C  6E21               	movwf	stop@mR^0,c
  1670   00256E  0E01               	movlw	high main@motorR
  1671   002570  6E22               	movwf	(stop@mR+1)^0,c
  1672   002572  C1B0  F023         	movff	main@straightRamp,stop@straightRamp
  1673   002576  ECF9  F01A         	call	_stop	;wreg free
  1674                           
  1675                           ;main.c: 162:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1676   00257A  0ECC               	movlw	low main@motorL
  1677   00257C  6E2D               	movwf	lostReturnHome@mL^0,c
  1678   00257E  0E01               	movlw	high main@motorL
  1679   002580  6E2E               	movwf	(lostReturnHome@mL+1)^0,c
  1680   002582  0EC2               	movlw	low main@motorR
  1681   002584  6E2F               	movwf	lostReturnHome@mR^0,c
  1682   002586  0E01               	movlw	high main@motorR
  1683   002588  6E30               	movwf	(lostReturnHome@mR+1)^0,c
  1684   00258A  0E52               	movlw	low main@moveSequence
  1685   00258C  6E31               	movwf	lostReturnHome@moveSequence^0,c
  1686   00258E  0E01               	movlw	high main@moveSequence
  1687   002590  6E32               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1688   002592  0E00               	movlw	low main@straightTime
  1689   002594  6E33               	movwf	lostReturnHome@straightTime^0,c
  1690   002596  0E01               	movlw	high main@straightTime
  1691   002598  6E34               	movwf	(lostReturnHome@straightTime+1)^0,c
  1692   00259A  C1AF  F035         	movff	main@curMove,lostReturnHome@curMove
  1693   00259E  C1AB  F036         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1694   0025A2  C198  F037         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1695   0025A6  C1B0  F038         	movff	main@straightRamp,lostReturnHome@straightRamp
  1696   0025AA  C1AC  F039         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1697   0025AE  C1B9  F03A         	movff	main@turnDuration,lostReturnHome@turnDuration
  1698   0025B2  C1AD  F03B         	movff	main@turnRamp,lostReturnHome@turnRamp
  1699   0025B6  EC5F  F00A         	call	_lostReturnHome	;wreg free
  1700   0025BA                     
  1701                           ;main.c: 163:             PIE0bits.INT0IE=1;
  1702   0025BA  010E               	movlb	14	; () banked
  1703   0025BC  8129               	bsf	41,0,b	;volatile
  1704   0025BE                     
  1705                           ; BSR set to: 14
  1706                           ;main.c: 164:             lost = 0;
  1707   0025BE  0E00               	movlw	0
  1708   0025C0  0100               	movlb	0	; () banked
  1709   0025C2  6FB0               	movwf	_lost& (0+255),b
  1710                           
  1711                           ;main.c: 165:             break;
  1712   0025C4  EFF7  F012         	goto	l100
  1713   0025C8                     l3913:
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;main.c: 168:         if (color == 8 || color == 9) {break;}
  1717   0025C8  0E08               	movlw	8
  1718   0025CA  0101               	movlb	1	; () banked
  1719   0025CC  19AE               	xorwf	main@color& (0+255),w,b
  1720   0025CE  B4D8               	btfsc	status,2,c
  1721   0025D0  EFEC  F012         	goto	u2751
  1722   0025D4  EFEE  F012         	goto	u2750
  1723   0025D8                     u2751:
  1724   0025D8  EFF7  F012         	goto	l100
  1725   0025DC                     u2750:
  1726   0025DC                     
  1727                           ; BSR set to: 1
  1728   0025DC  0E09               	movlw	9
  1729   0025DE  19AE               	xorwf	main@color& (0+255),w,b
  1730   0025E0  A4D8               	btfss	status,2,c
  1731   0025E2  EFF5  F012         	goto	u2761
  1732   0025E6  EFF7  F012         	goto	u2760
  1733   0025EA                     u2761:
  1734   0025EA  EFCD  F011         	goto	l3875
  1735   0025EE                     u2760:
  1736   0025EE                     l100:
  1737   0025EE  EF4C  F000         	goto	start
  1738   0025F2                     __end_of_main:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _move *****************
  1742 ;; Defined at:
  1743 ;;		line 91 in file "dc_motor.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  1746 ;;		 -> main@motorL(10), 
  1747 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  1748 ;;		 -> main@motorR(10), 
  1749 ;;  color           1    4[BANK0 ] unsigned char 
  1750 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  1751 ;;		 -> main@moveSequence(40), 
  1752 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  1753 ;;		 -> main@straightTime(82), 
  1754 ;;  curMove         1    9[BANK0 ] unsigned char 
  1755 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  1756 ;;  reverseDurat    1   11[BANK0 ] unsigned char 
  1757 ;;  straightRamp    1   12[BANK0 ] unsigned char 
  1758 ;;  turnSpeed       1   13[BANK0 ] unsigned char 
  1759 ;;  turnDuration    1   14[BANK0 ] unsigned char 
  1760 ;;  turnRamp        1   15[BANK0 ] unsigned char 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;		None
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1772 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1776 ;;Total ram usage:       18 bytes
  1777 ;; Hardware stack levels used: 1
  1778 ;; Hardware stack levels required when called: 9
  1779 ;; This function calls:
  1780 ;;		_fullSpeedAhead
  1781 ;;		_returnHome
  1782 ;;		_reverseOneSquare
  1783 ;;		_turnLeft
  1784 ;;		_turnRight
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text1
  1791   001B5E                     __ptext1:
  1792                           	callstack 0
  1793   001B5E                     _move:
  1794                           	callstack 21
  1795   001B5E                     
  1796                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reve
      +                          rseDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, uns
      +                          igned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  1797   001B5E  0100               	movlb	0	; () banked
  1798   001B60  05B6               	decf	move@color& (0+255),w,b
  1799   001B62  A4D8               	btfss	status,2,c
  1800   001B64  EFB6  F00D         	goto	u2491
  1801   001B68  EFB8  F00D         	goto	u2490
  1802   001B6C                     u2491:
  1803   001B6C  EF00  F00E         	goto	l3707
  1804   001B70                     u2490:
  1805   001B70                     
  1806                           ; BSR set to: 0
  1807                           ;dc_motor.c: 94:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1808   001B70  C0B2  F01F         	movff	move@mL,turnRight@mL
  1809   001B74  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  1810   001B78  C0B4  F021         	movff	move@mR,turnRight@mR
  1811   001B7C  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  1812   001B80  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1813   001B84  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  1814   001B88  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  1815   001B8C  EC44  F017         	call	_turnRight	;wreg free
  1816   001B90                     
  1817                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1818   001B90  0E05               	movlw	5
  1819   001B92  6E42               	movwf	(??_move+1)^0,c
  1820   001B94  0E0F               	movlw	15
  1821   001B96  6E41               	movwf	??_move^0,c
  1822   001B98  0EF1               	movlw	241
  1823   001B9A                     u2807:
  1824   001B9A  2EE8               	decfsz	wreg,f,c
  1825   001B9C  D7FE               	bra	u2807
  1826   001B9E  2E41               	decfsz	??_move^0,f,c
  1827   001BA0  D7FC               	bra	u2807
  1828   001BA2  2E42               	decfsz	(??_move+1)^0,f,c
  1829   001BA4  D7FA               	bra	u2807
  1830   001BA6  0000               	nop	
  1831   001BA8                     
  1832                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1833   001BA8  C0B2  F01F         	movff	move@mL,turnRight@mL
  1834   001BAC  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  1835   001BB0  C0B4  F021         	movff	move@mR,turnRight@mR
  1836   001BB4  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  1837   001BB8  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1838   001BBC  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  1839   001BC0  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  1840   001BC4  EC44  F017         	call	_turnRight	;wreg free
  1841                           
  1842                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1843   001BC8  0E05               	movlw	5
  1844   001BCA  6E42               	movwf	(??_move+1)^0,c
  1845   001BCC  0E0F               	movlw	15
  1846   001BCE  6E41               	movwf	??_move^0,c
  1847   001BD0  0EF1               	movlw	241
  1848   001BD2                     u2817:
  1849   001BD2  2EE8               	decfsz	wreg,f,c
  1850   001BD4  D7FE               	bra	u2817
  1851   001BD6  2E41               	decfsz	??_move^0,f,c
  1852   001BD8  D7FC               	bra	u2817
  1853   001BDA  2E42               	decfsz	(??_move+1)^0,f,c
  1854   001BDC  D7FA               	bra	u2817
  1855   001BDE  0000               	nop	
  1856   001BE0                     
  1857                           ;dc_motor.c: 98:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1858   001BE0  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  1859   001BE4  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1860   001BE8  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  1861   001BEC  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1862   001BF0  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1863   001BF4  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1864   001BF8  EC7D  F01B         	call	_fullSpeedAhead	;wreg free
  1865                           
  1866                           ;dc_motor.c: 99:     }
  1867   001BFC  EFD9  F010         	goto	l513
  1868   001C00                     l3707:
  1869                           
  1870                           ; BSR set to: 0
  1871   001C00  0E02               	movlw	2
  1872   001C02  19B6               	xorwf	move@color& (0+255),w,b
  1873   001C04  A4D8               	btfss	status,2,c
  1874   001C06  EF07  F00E         	goto	u2501
  1875   001C0A  EF09  F00E         	goto	u2500
  1876   001C0E                     u2501:
  1877   001C0E  EF51  F00E         	goto	l3717
  1878   001C12                     u2500:
  1879   001C12                     
  1880                           ; BSR set to: 0
  1881                           ;dc_motor.c: 102:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1882   001C12  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1883   001C16  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1884   001C1A  C0B4  F021         	movff	move@mR,turnLeft@mR
  1885   001C1E  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1886   001C22  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1887   001C26  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1888   001C2A  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1889   001C2E  EC2E  F018         	call	_turnLeft	;wreg free
  1890   001C32                     
  1891                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1892   001C32  0E05               	movlw	5
  1893   001C34  6E42               	movwf	(??_move+1)^0,c
  1894   001C36  0E0F               	movlw	15
  1895   001C38  6E41               	movwf	??_move^0,c
  1896   001C3A  0EF1               	movlw	241
  1897   001C3C                     u2827:
  1898   001C3C  2EE8               	decfsz	wreg,f,c
  1899   001C3E  D7FE               	bra	u2827
  1900   001C40  2E41               	decfsz	??_move^0,f,c
  1901   001C42  D7FC               	bra	u2827
  1902   001C44  2E42               	decfsz	(??_move+1)^0,f,c
  1903   001C46  D7FA               	bra	u2827
  1904   001C48  0000               	nop	
  1905   001C4A                     
  1906                           ;dc_motor.c: 104:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1907   001C4A  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1908   001C4E  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1909   001C52  C0B4  F021         	movff	move@mR,turnLeft@mR
  1910   001C56  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1911   001C5A  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1912   001C5E  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1913   001C62  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1914   001C66  EC2E  F018         	call	_turnLeft	;wreg free
  1915                           
  1916                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1917   001C6A  0E05               	movlw	5
  1918   001C6C  6E42               	movwf	(??_move+1)^0,c
  1919   001C6E  0E0F               	movlw	15
  1920   001C70  6E41               	movwf	??_move^0,c
  1921   001C72  0EF1               	movlw	241
  1922   001C74                     u2837:
  1923   001C74  2EE8               	decfsz	wreg,f,c
  1924   001C76  D7FE               	bra	u2837
  1925   001C78  2E41               	decfsz	??_move^0,f,c
  1926   001C7A  D7FC               	bra	u2837
  1927   001C7C  2E42               	decfsz	(??_move+1)^0,f,c
  1928   001C7E  D7FA               	bra	u2837
  1929   001C80  0000               	nop	
  1930   001C82                     
  1931                           ;dc_motor.c: 106:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1932   001C82  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  1933   001C86  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1934   001C8A  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  1935   001C8E  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1936   001C92  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1937   001C96  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1938   001C9A  EC7D  F01B         	call	_fullSpeedAhead	;wreg free
  1939                           
  1940                           ;dc_motor.c: 107:     }
  1941   001C9E  EFD9  F010         	goto	l513
  1942   001CA2                     l3717:
  1943                           
  1944                           ; BSR set to: 0
  1945   001CA2  0E03               	movlw	3
  1946   001CA4  19B6               	xorwf	move@color& (0+255),w,b
  1947   001CA6  A4D8               	btfss	status,2,c
  1948   001CA8  EF58  F00E         	goto	u2511
  1949   001CAC  EF5A  F00E         	goto	u2510
  1950   001CB0                     u2511:
  1951   001CB0  EFDA  F00E         	goto	l3733
  1952   001CB4                     u2510:
  1953   001CB4                     
  1954                           ; BSR set to: 0
  1955                           ;dc_motor.c: 110:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1956   001CB4  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1957   001CB8  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1958   001CBC  C0B4  F021         	movff	move@mR,turnLeft@mR
  1959   001CC0  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1960   001CC4  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1961   001CC8  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1962   001CCC  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1963   001CD0  EC2E  F018         	call	_turnLeft	;wreg free
  1964   001CD4                     
  1965                           ;dc_motor.c: 111:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1966   001CD4  0E05               	movlw	5
  1967   001CD6  6E42               	movwf	(??_move+1)^0,c
  1968   001CD8  0E0F               	movlw	15
  1969   001CDA  6E41               	movwf	??_move^0,c
  1970   001CDC  0EF1               	movlw	241
  1971   001CDE                     u2847:
  1972   001CDE  2EE8               	decfsz	wreg,f,c
  1973   001CE0  D7FE               	bra	u2847
  1974   001CE2  2E41               	decfsz	??_move^0,f,c
  1975   001CE4  D7FC               	bra	u2847
  1976   001CE6  2E42               	decfsz	(??_move+1)^0,f,c
  1977   001CE8  D7FA               	bra	u2847
  1978   001CEA  0000               	nop	
  1979   001CEC                     
  1980                           ;dc_motor.c: 112:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1981   001CEC  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1982   001CF0  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1983   001CF4  C0B4  F021         	movff	move@mR,turnLeft@mR
  1984   001CF8  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1985   001CFC  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1986   001D00  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1987   001D04  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1988   001D08  EC2E  F018         	call	_turnLeft	;wreg free
  1989                           
  1990                           ;dc_motor.c: 113:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1991   001D0C  0E05               	movlw	5
  1992   001D0E  6E42               	movwf	(??_move+1)^0,c
  1993   001D10  0E0F               	movlw	15
  1994   001D12  6E41               	movwf	??_move^0,c
  1995   001D14  0EF1               	movlw	241
  1996   001D16                     u2857:
  1997   001D16  2EE8               	decfsz	wreg,f,c
  1998   001D18  D7FE               	bra	u2857
  1999   001D1A  2E41               	decfsz	??_move^0,f,c
  2000   001D1C  D7FC               	bra	u2857
  2001   001D1E  2E42               	decfsz	(??_move+1)^0,f,c
  2002   001D20  D7FA               	bra	u2857
  2003   001D22  0000               	nop	
  2004   001D24                     
  2005                           ;dc_motor.c: 114:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2006   001D24  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2007   001D28  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2008   001D2C  C0B4  F021         	movff	move@mR,turnLeft@mR
  2009   001D30  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2010   001D34  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2011   001D38  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2012   001D3C  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2013   001D40  EC2E  F018         	call	_turnLeft	;wreg free
  2014   001D44                     
  2015                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2016   001D44  0E05               	movlw	5
  2017   001D46  6E42               	movwf	(??_move+1)^0,c
  2018   001D48  0E0F               	movlw	15
  2019   001D4A  6E41               	movwf	??_move^0,c
  2020   001D4C  0EF1               	movlw	241
  2021   001D4E                     u2867:
  2022   001D4E  2EE8               	decfsz	wreg,f,c
  2023   001D50  D7FE               	bra	u2867
  2024   001D52  2E41               	decfsz	??_move^0,f,c
  2025   001D54  D7FC               	bra	u2867
  2026   001D56  2E42               	decfsz	(??_move+1)^0,f,c
  2027   001D58  D7FA               	bra	u2867
  2028   001D5A  0000               	nop	
  2029                           
  2030                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2031   001D5C  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2032   001D60  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2033   001D64  C0B4  F021         	movff	move@mR,turnLeft@mR
  2034   001D68  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2035   001D6C  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2036   001D70  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2037   001D74  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2038   001D78  EC2E  F018         	call	_turnLeft	;wreg free
  2039   001D7C                     
  2040                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2041   001D7C  0E05               	movlw	5
  2042   001D7E  6E42               	movwf	(??_move+1)^0,c
  2043   001D80  0E0F               	movlw	15
  2044   001D82  6E41               	movwf	??_move^0,c
  2045   001D84  0EF1               	movlw	241
  2046   001D86                     u2877:
  2047   001D86  2EE8               	decfsz	wreg,f,c
  2048   001D88  D7FE               	bra	u2877
  2049   001D8A  2E41               	decfsz	??_move^0,f,c
  2050   001D8C  D7FC               	bra	u2877
  2051   001D8E  2E42               	decfsz	(??_move+1)^0,f,c
  2052   001D90  D7FA               	bra	u2877
  2053   001D92  0000               	nop	
  2054   001D94                     
  2055                           ;dc_motor.c: 118:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2056   001D94  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2057   001D98  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2058   001D9C  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2059   001DA0  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2060   001DA4  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2061   001DA8  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2062   001DAC  EC7D  F01B         	call	_fullSpeedAhead	;wreg free
  2063                           
  2064                           ;dc_motor.c: 119:     }
  2065   001DB0  EFD9  F010         	goto	l513
  2066   001DB4                     l3733:
  2067                           
  2068                           ; BSR set to: 0
  2069   001DB4  0E04               	movlw	4
  2070   001DB6  19B6               	xorwf	move@color& (0+255),w,b
  2071   001DB8  A4D8               	btfss	status,2,c
  2072   001DBA  EFE1  F00E         	goto	u2521
  2073   001DBE  EFE3  F00E         	goto	u2520
  2074   001DC2                     u2521:
  2075   001DC2  EF47  F00F         	goto	l3745
  2076   001DC6                     u2520:
  2077   001DC6                     
  2078                           ; BSR set to: 0
  2079                           ;dc_motor.c: 122:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2080   001DC6  C0B2  F01F         	movff	move@mL,reverseOneSquare@mL
  2081   001DCA  C0B3  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2082   001DCE  C0B4  F021         	movff	move@mR,reverseOneSquare@mR
  2083   001DD2  C0B5  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2084   001DD6  C0BC  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2085   001DDA  C0BD  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2086   001DDE  C0BE  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2087   001DE2  EC51  F016         	call	_reverseOneSquare	;wreg free
  2088   001DE6                     
  2089                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2090   001DE6  0E05               	movlw	5
  2091   001DE8  6E42               	movwf	(??_move+1)^0,c
  2092   001DEA  0E0F               	movlw	15
  2093   001DEC  6E41               	movwf	??_move^0,c
  2094   001DEE  0EF1               	movlw	241
  2095   001DF0                     u2887:
  2096   001DF0  2EE8               	decfsz	wreg,f,c
  2097   001DF2  D7FE               	bra	u2887
  2098   001DF4  2E41               	decfsz	??_move^0,f,c
  2099   001DF6  D7FC               	bra	u2887
  2100   001DF8  2E42               	decfsz	(??_move+1)^0,f,c
  2101   001DFA  D7FA               	bra	u2887
  2102   001DFC  0000               	nop	
  2103   001DFE                     
  2104                           ;dc_motor.c: 124:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2105   001DFE  C0B2  F01F         	movff	move@mL,turnRight@mL
  2106   001E02  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2107   001E06  C0B4  F021         	movff	move@mR,turnRight@mR
  2108   001E0A  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2109   001E0E  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2110   001E12  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2111   001E16  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2112   001E1A  EC44  F017         	call	_turnRight	;wreg free
  2113                           
  2114                           ;dc_motor.c: 125:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2115   001E1E  0E05               	movlw	5
  2116   001E20  6E42               	movwf	(??_move+1)^0,c
  2117   001E22  0E0F               	movlw	15
  2118   001E24  6E41               	movwf	??_move^0,c
  2119   001E26  0EF1               	movlw	241
  2120   001E28                     u2897:
  2121   001E28  2EE8               	decfsz	wreg,f,c
  2122   001E2A  D7FE               	bra	u2897
  2123   001E2C  2E41               	decfsz	??_move^0,f,c
  2124   001E2E  D7FC               	bra	u2897
  2125   001E30  2E42               	decfsz	(??_move+1)^0,f,c
  2126   001E32  D7FA               	bra	u2897
  2127   001E34  0000               	nop	
  2128   001E36                     
  2129                           ;dc_motor.c: 126:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2130   001E36  C0B2  F01F         	movff	move@mL,turnRight@mL
  2131   001E3A  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2132   001E3E  C0B4  F021         	movff	move@mR,turnRight@mR
  2133   001E42  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2134   001E46  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2135   001E4A  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2136   001E4E  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2137   001E52  EC44  F017         	call	_turnRight	;wreg free
  2138   001E56                     
  2139                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2140   001E56  0E05               	movlw	5
  2141   001E58  6E42               	movwf	(??_move+1)^0,c
  2142   001E5A  0E0F               	movlw	15
  2143   001E5C  6E41               	movwf	??_move^0,c
  2144   001E5E  0EF1               	movlw	241
  2145   001E60                     u2907:
  2146   001E60  2EE8               	decfsz	wreg,f,c
  2147   001E62  D7FE               	bra	u2907
  2148   001E64  2E41               	decfsz	??_move^0,f,c
  2149   001E66  D7FC               	bra	u2907
  2150   001E68  2E42               	decfsz	(??_move+1)^0,f,c
  2151   001E6A  D7FA               	bra	u2907
  2152   001E6C  0000               	nop	
  2153                           
  2154                           ;dc_motor.c: 128:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2155   001E6E  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2156   001E72  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2157   001E76  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2158   001E7A  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2159   001E7E  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2160   001E82  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2161   001E86  EC7D  F01B         	call	_fullSpeedAhead	;wreg free
  2162                           
  2163                           ;dc_motor.c: 129:     }
  2164   001E8A  EFD9  F010         	goto	l513
  2165   001E8E                     l3745:
  2166                           
  2167                           ; BSR set to: 0
  2168   001E8E  0E05               	movlw	5
  2169   001E90  19B6               	xorwf	move@color& (0+255),w,b
  2170   001E92  A4D8               	btfss	status,2,c
  2171   001E94  EF4E  F00F         	goto	u2531
  2172   001E98  EF50  F00F         	goto	u2530
  2173   001E9C                     u2531:
  2174   001E9C  EFB4  F00F         	goto	l3757
  2175   001EA0                     u2530:
  2176   001EA0                     
  2177                           ; BSR set to: 0
  2178                           ;dc_motor.c: 132:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2179   001EA0  C0B2  F01F         	movff	move@mL,reverseOneSquare@mL
  2180   001EA4  C0B3  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2181   001EA8  C0B4  F021         	movff	move@mR,reverseOneSquare@mR
  2182   001EAC  C0B5  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2183   001EB0  C0BC  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2184   001EB4  C0BD  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2185   001EB8  C0BE  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2186   001EBC  EC51  F016         	call	_reverseOneSquare	;wreg free
  2187   001EC0                     
  2188                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2189   001EC0  0E05               	movlw	5
  2190   001EC2  6E42               	movwf	(??_move+1)^0,c
  2191   001EC4  0E0F               	movlw	15
  2192   001EC6  6E41               	movwf	??_move^0,c
  2193   001EC8  0EF1               	movlw	241
  2194   001ECA                     u2917:
  2195   001ECA  2EE8               	decfsz	wreg,f,c
  2196   001ECC  D7FE               	bra	u2917
  2197   001ECE  2E41               	decfsz	??_move^0,f,c
  2198   001ED0  D7FC               	bra	u2917
  2199   001ED2  2E42               	decfsz	(??_move+1)^0,f,c
  2200   001ED4  D7FA               	bra	u2917
  2201   001ED6  0000               	nop	
  2202   001ED8                     
  2203                           ;dc_motor.c: 134:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2204   001ED8  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2205   001EDC  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2206   001EE0  C0B4  F021         	movff	move@mR,turnLeft@mR
  2207   001EE4  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2208   001EE8  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2209   001EEC  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2210   001EF0  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2211   001EF4  EC2E  F018         	call	_turnLeft	;wreg free
  2212                           
  2213                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2214   001EF8  0E05               	movlw	5
  2215   001EFA  6E42               	movwf	(??_move+1)^0,c
  2216   001EFC  0E0F               	movlw	15
  2217   001EFE  6E41               	movwf	??_move^0,c
  2218   001F00  0EF1               	movlw	241
  2219   001F02                     u2927:
  2220   001F02  2EE8               	decfsz	wreg,f,c
  2221   001F04  D7FE               	bra	u2927
  2222   001F06  2E41               	decfsz	??_move^0,f,c
  2223   001F08  D7FC               	bra	u2927
  2224   001F0A  2E42               	decfsz	(??_move+1)^0,f,c
  2225   001F0C  D7FA               	bra	u2927
  2226   001F0E  0000               	nop	
  2227   001F10                     
  2228                           ;dc_motor.c: 136:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2229   001F10  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2230   001F14  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2231   001F18  C0B4  F021         	movff	move@mR,turnLeft@mR
  2232   001F1C  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2233   001F20  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2234   001F24  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2235   001F28  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2236   001F2C  EC2E  F018         	call	_turnLeft	;wreg free
  2237   001F30                     
  2238                           ;dc_motor.c: 137:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2239   001F30  0E05               	movlw	5
  2240   001F32  6E42               	movwf	(??_move+1)^0,c
  2241   001F34  0E0F               	movlw	15
  2242   001F36  6E41               	movwf	??_move^0,c
  2243   001F38  0EF1               	movlw	241
  2244   001F3A                     u2937:
  2245   001F3A  2EE8               	decfsz	wreg,f,c
  2246   001F3C  D7FE               	bra	u2937
  2247   001F3E  2E41               	decfsz	??_move^0,f,c
  2248   001F40  D7FC               	bra	u2937
  2249   001F42  2E42               	decfsz	(??_move+1)^0,f,c
  2250   001F44  D7FA               	bra	u2937
  2251   001F46  0000               	nop	
  2252                           
  2253                           ;dc_motor.c: 138:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2254   001F48  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2255   001F4C  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2256   001F50  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2257   001F54  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2258   001F58  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2259   001F5C  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2260   001F60  EC7D  F01B         	call	_fullSpeedAhead	;wreg free
  2261                           
  2262                           ;dc_motor.c: 139:     }
  2263   001F64  EFD9  F010         	goto	l513
  2264   001F68                     l3757:
  2265                           
  2266                           ; BSR set to: 0
  2267   001F68  0E06               	movlw	6
  2268   001F6A  19B6               	xorwf	move@color& (0+255),w,b
  2269   001F6C  A4D8               	btfss	status,2,c
  2270   001F6E  EFBB  F00F         	goto	u2541
  2271   001F72  EFBD  F00F         	goto	u2540
  2272   001F76                     u2541:
  2273   001F76  EF21  F010         	goto	l3769
  2274   001F7A                     u2540:
  2275   001F7A                     
  2276                           ; BSR set to: 0
  2277                           ;dc_motor.c: 142:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2278   001F7A  C0B2  F01F         	movff	move@mL,turnRight@mL
  2279   001F7E  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2280   001F82  C0B4  F021         	movff	move@mR,turnRight@mR
  2281   001F86  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2282   001F8A  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2283   001F8E  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2284   001F92  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2285   001F96  EC44  F017         	call	_turnRight	;wreg free
  2286   001F9A                     
  2287                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2288   001F9A  0E05               	movlw	5
  2289   001F9C  6E42               	movwf	(??_move+1)^0,c
  2290   001F9E  0E0F               	movlw	15
  2291   001FA0  6E41               	movwf	??_move^0,c
  2292   001FA2  0EF1               	movlw	241
  2293   001FA4                     u2947:
  2294   001FA4  2EE8               	decfsz	wreg,f,c
  2295   001FA6  D7FE               	bra	u2947
  2296   001FA8  2E41               	decfsz	??_move^0,f,c
  2297   001FAA  D7FC               	bra	u2947
  2298   001FAC  2E42               	decfsz	(??_move+1)^0,f,c
  2299   001FAE  D7FA               	bra	u2947
  2300   001FB0  0000               	nop	
  2301   001FB2                     
  2302                           ;dc_motor.c: 144:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2303   001FB2  C0B2  F01F         	movff	move@mL,turnRight@mL
  2304   001FB6  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2305   001FBA  C0B4  F021         	movff	move@mR,turnRight@mR
  2306   001FBE  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2307   001FC2  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2308   001FC6  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2309   001FCA  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2310   001FCE  EC44  F017         	call	_turnRight	;wreg free
  2311                           
  2312                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2313   001FD2  0E05               	movlw	5
  2314   001FD4  6E42               	movwf	(??_move+1)^0,c
  2315   001FD6  0E0F               	movlw	15
  2316   001FD8  6E41               	movwf	??_move^0,c
  2317   001FDA  0EF1               	movlw	241
  2318   001FDC                     u2957:
  2319   001FDC  2EE8               	decfsz	wreg,f,c
  2320   001FDE  D7FE               	bra	u2957
  2321   001FE0  2E41               	decfsz	??_move^0,f,c
  2322   001FE2  D7FC               	bra	u2957
  2323   001FE4  2E42               	decfsz	(??_move+1)^0,f,c
  2324   001FE6  D7FA               	bra	u2957
  2325   001FE8  0000               	nop	
  2326   001FEA                     
  2327                           ;dc_motor.c: 146:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2328   001FEA  C0B2  F01F         	movff	move@mL,turnRight@mL
  2329   001FEE  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2330   001FF2  C0B4  F021         	movff	move@mR,turnRight@mR
  2331   001FF6  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2332   001FFA  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2333   001FFE  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2334   002002  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2335   002006  EC44  F017         	call	_turnRight	;wreg free
  2336   00200A                     
  2337                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2338   00200A  0E05               	movlw	5
  2339   00200C  6E42               	movwf	(??_move+1)^0,c
  2340   00200E  0E0F               	movlw	15
  2341   002010  6E41               	movwf	??_move^0,c
  2342   002012  0EF1               	movlw	241
  2343   002014                     u2967:
  2344   002014  2EE8               	decfsz	wreg,f,c
  2345   002016  D7FE               	bra	u2967
  2346   002018  2E41               	decfsz	??_move^0,f,c
  2347   00201A  D7FC               	bra	u2967
  2348   00201C  2E42               	decfsz	(??_move+1)^0,f,c
  2349   00201E  D7FA               	bra	u2967
  2350   002020  0000               	nop	
  2351                           
  2352                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2353   002022  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2354   002026  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2355   00202A  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2356   00202E  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2357   002032  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2358   002036  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2359   00203A  EC7D  F01B         	call	_fullSpeedAhead	;wreg free
  2360                           
  2361                           ;dc_motor.c: 149:     }
  2362   00203E  EFD9  F010         	goto	l513
  2363   002042                     l3769:
  2364                           
  2365                           ; BSR set to: 0
  2366   002042  0E07               	movlw	7
  2367   002044  19B6               	xorwf	move@color& (0+255),w,b
  2368   002046  A4D8               	btfss	status,2,c
  2369   002048  EF28  F010         	goto	u2551
  2370   00204C  EF2A  F010         	goto	u2550
  2371   002050                     u2551:
  2372   002050  EF8E  F010         	goto	l3781
  2373   002054                     u2550:
  2374   002054                     
  2375                           ; BSR set to: 0
  2376                           ;dc_motor.c: 152:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2377   002054  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2378   002058  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2379   00205C  C0B4  F021         	movff	move@mR,turnLeft@mR
  2380   002060  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2381   002064  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2382   002068  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2383   00206C  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2384   002070  EC2E  F018         	call	_turnLeft	;wreg free
  2385   002074                     
  2386                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2387   002074  0E05               	movlw	5
  2388   002076  6E42               	movwf	(??_move+1)^0,c
  2389   002078  0E0F               	movlw	15
  2390   00207A  6E41               	movwf	??_move^0,c
  2391   00207C  0EF1               	movlw	241
  2392   00207E                     u2977:
  2393   00207E  2EE8               	decfsz	wreg,f,c
  2394   002080  D7FE               	bra	u2977
  2395   002082  2E41               	decfsz	??_move^0,f,c
  2396   002084  D7FC               	bra	u2977
  2397   002086  2E42               	decfsz	(??_move+1)^0,f,c
  2398   002088  D7FA               	bra	u2977
  2399   00208A  0000               	nop	
  2400   00208C                     
  2401                           ;dc_motor.c: 154:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2402   00208C  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2403   002090  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2404   002094  C0B4  F021         	movff	move@mR,turnLeft@mR
  2405   002098  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2406   00209C  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2407   0020A0  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2408   0020A4  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2409   0020A8  EC2E  F018         	call	_turnLeft	;wreg free
  2410                           
  2411                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2412   0020AC  0E05               	movlw	5
  2413   0020AE  6E42               	movwf	(??_move+1)^0,c
  2414   0020B0  0E0F               	movlw	15
  2415   0020B2  6E41               	movwf	??_move^0,c
  2416   0020B4  0EF1               	movlw	241
  2417   0020B6                     u2987:
  2418   0020B6  2EE8               	decfsz	wreg,f,c
  2419   0020B8  D7FE               	bra	u2987
  2420   0020BA  2E41               	decfsz	??_move^0,f,c
  2421   0020BC  D7FC               	bra	u2987
  2422   0020BE  2E42               	decfsz	(??_move+1)^0,f,c
  2423   0020C0  D7FA               	bra	u2987
  2424   0020C2  0000               	nop	
  2425   0020C4                     
  2426                           ;dc_motor.c: 156:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2427   0020C4  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2428   0020C8  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2429   0020CC  C0B4  F021         	movff	move@mR,turnLeft@mR
  2430   0020D0  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2431   0020D4  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2432   0020D8  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2433   0020DC  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2434   0020E0  EC2E  F018         	call	_turnLeft	;wreg free
  2435   0020E4                     
  2436                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2437   0020E4  0E05               	movlw	5
  2438   0020E6  6E42               	movwf	(??_move+1)^0,c
  2439   0020E8  0E0F               	movlw	15
  2440   0020EA  6E41               	movwf	??_move^0,c
  2441   0020EC  0EF1               	movlw	241
  2442   0020EE                     u2997:
  2443   0020EE  2EE8               	decfsz	wreg,f,c
  2444   0020F0  D7FE               	bra	u2997
  2445   0020F2  2E41               	decfsz	??_move^0,f,c
  2446   0020F4  D7FC               	bra	u2997
  2447   0020F6  2E42               	decfsz	(??_move+1)^0,f,c
  2448   0020F8  D7FA               	bra	u2997
  2449   0020FA  0000               	nop	
  2450                           
  2451                           ;dc_motor.c: 158:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2452   0020FC  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2453   002100  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2454   002104  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2455   002108  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2456   00210C  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2457   002110  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2458   002114  EC7D  F01B         	call	_fullSpeedAhead	;wreg free
  2459                           
  2460                           ;dc_motor.c: 159:     }
  2461   002118  EFD9  F010         	goto	l513
  2462   00211C                     l3781:
  2463                           
  2464                           ; BSR set to: 0
  2465   00211C  0E08               	movlw	8
  2466   00211E  19B6               	xorwf	move@color& (0+255),w,b
  2467   002120  A4D8               	btfss	status,2,c
  2468   002122  EF95  F010         	goto	u2561
  2469   002126  EF97  F010         	goto	u2560
  2470   00212A                     u2561:
  2471   00212A  EFB9  F010         	goto	l3785
  2472   00212E                     u2560:
  2473   00212E                     
  2474                           ; BSR set to: 0
  2475                           ;dc_motor.c: 162:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2476   00212E  C0B2  F02D         	movff	move@mL,returnHome@mL
  2477   002132  C0B3  F02E         	movff	move@mL+1,returnHome@mL+1
  2478   002136  C0B4  F02F         	movff	move@mR,returnHome@mR
  2479   00213A  C0B5  F030         	movff	move@mR+1,returnHome@mR+1
  2480   00213E  C0B7  F031         	movff	move@moveSequence,returnHome@moveSequence
  2481   002142  C0B8  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2482   002146  C0B9  F033         	movff	move@straightTime,returnHome@straightTime
  2483   00214A  C0BA  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2484   00214E  C0BB  F035         	movff	move@curMove,returnHome@curMove
  2485   002152  C0BC  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2486   002156  C0BD  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2487   00215A  C0BE  F038         	movff	move@straightRamp,returnHome@straightRamp
  2488   00215E  C0BF  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2489   002162  C0C0  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2490   002166  C0C1  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2491   00216A  EC01  F007         	call	_returnHome	;wreg free
  2492                           
  2493                           ;dc_motor.c: 163:     }
  2494   00216E  EFD9  F010         	goto	l513
  2495   002172                     l3785:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;dc_motor.c: 166:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2499   002172  C0B2  F02D         	movff	move@mL,returnHome@mL
  2500   002176  C0B3  F02E         	movff	move@mL+1,returnHome@mL+1
  2501   00217A  C0B4  F02F         	movff	move@mR,returnHome@mR
  2502   00217E  C0B5  F030         	movff	move@mR+1,returnHome@mR+1
  2503   002182  C0B7  F031         	movff	move@moveSequence,returnHome@moveSequence
  2504   002186  C0B8  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2505   00218A  C0B9  F033         	movff	move@straightTime,returnHome@straightTime
  2506   00218E  C0BA  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2507   002192  C0BB  F035         	movff	move@curMove,returnHome@curMove
  2508   002196  C0BC  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2509   00219A  C0BD  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2510   00219E  C0BE  F038         	movff	move@straightRamp,returnHome@straightRamp
  2511   0021A2  C0BF  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2512   0021A6  C0C0  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2513   0021AA  C0C1  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2514   0021AE  EC01  F007         	call	_returnHome	;wreg free
  2515   0021B2                     l513:
  2516   0021B2  0012               	return		;funcret
  2517   0021B4                     __end_of_move:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _returnHome *****************
  2521 ;; Defined at:
  2522 ;;		line 171 in file "dc_motor.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2525 ;;		 -> main@motorL(10), 
  2526 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2527 ;;		 -> main@motorR(10), 
  2528 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  2529 ;;		 -> main@moveSequence(40), 
  2530 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  2531 ;;		 -> main@straightTime(82), 
  2532 ;;  curMove         1   52[COMRAM] unsigned char 
  2533 ;;  straightSpee    1   53[COMRAM] unsigned char 
  2534 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  2535 ;;  straightRamp    1   55[COMRAM] unsigned char 
  2536 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  2537 ;;  turnDuration    1   57[COMRAM] unsigned char 
  2538 ;;  turnRamp        1   58[COMRAM] unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  i               1   63[COMRAM] unsigned char 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2550 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2552 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2553 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2554 ;;Total ram usage:       20 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 8
  2557 ;; This function calls:
  2558 ;;		_fullSpeedAhead
  2559 ;;		_get16bitTMR0val
  2560 ;;		_resetTimer
  2561 ;;		_reverseOneSquare
  2562 ;;		_stop
  2563 ;;		_turnLeft
  2564 ;;		_turnRight
  2565 ;; This function is called by:
  2566 ;;		_move
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text2
  2571   000E02                     __ptext2:
  2572                           	callstack 0
  2573   000E02                     _returnHome:
  2574                           	callstack 21
  2575   000E02                     
  2576                           ;dc_motor.c: 171: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reverseDu
      +                          ration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned
      +                           char turnRamp);dc_motor.c: 172: {;dc_motor.c: 173:     turnLeft(mL, mR, turnSpeed, turn
      +                          Duration, turnRamp);
  2577   000E02  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2578   000E06  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2579   000E0A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2580   000E0E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2581   000E12  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2582   000E16  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2583   000E1A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2584   000E1E  EC2E  F018         	call	_turnLeft	;wreg free
  2585   000E22                     
  2586                           ;dc_motor.c: 174:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2587   000E22  0E05               	movlw	5
  2588   000E24  6E3D               	movwf	(??_returnHome+1)^0,c
  2589   000E26  0E0F               	movlw	15
  2590   000E28  6E3C               	movwf	??_returnHome^0,c
  2591   000E2A  0EF1               	movlw	241
  2592   000E2C                     u3007:
  2593   000E2C  2EE8               	decfsz	wreg,f,c
  2594   000E2E  D7FE               	bra	u3007
  2595   000E30  2E3C               	decfsz	??_returnHome^0,f,c
  2596   000E32  D7FC               	bra	u3007
  2597   000E34  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2598   000E36  D7FA               	bra	u3007
  2599   000E38  0000               	nop	
  2600   000E3A                     
  2601                           ;dc_motor.c: 175:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2602   000E3A  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2603   000E3E  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2604   000E42  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2605   000E46  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2606   000E4A  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2607   000E4E  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2608   000E52  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2609   000E56  EC2E  F018         	call	_turnLeft	;wreg free
  2610                           
  2611                           ;dc_motor.c: 176:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2612   000E5A  0E05               	movlw	5
  2613   000E5C  6E3D               	movwf	(??_returnHome+1)^0,c
  2614   000E5E  0E0F               	movlw	15
  2615   000E60  6E3C               	movwf	??_returnHome^0,c
  2616   000E62  0EF1               	movlw	241
  2617   000E64                     u3017:
  2618   000E64  2EE8               	decfsz	wreg,f,c
  2619   000E66  D7FE               	bra	u3017
  2620   000E68  2E3C               	decfsz	??_returnHome^0,f,c
  2621   000E6A  D7FC               	bra	u3017
  2622   000E6C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2623   000E6E  D7FA               	bra	u3017
  2624   000E70  0000               	nop	
  2625   000E72                     
  2626                           ;dc_motor.c: 177:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2627   000E72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2628   000E76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2629   000E7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2630   000E7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2631   000E82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2632   000E86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2633   000E8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2634   000E8E  EC2E  F018         	call	_turnLeft	;wreg free
  2635   000E92                     
  2636                           ;dc_motor.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2637   000E92  0E05               	movlw	5
  2638   000E94  6E3D               	movwf	(??_returnHome+1)^0,c
  2639   000E96  0E0F               	movlw	15
  2640   000E98  6E3C               	movwf	??_returnHome^0,c
  2641   000E9A  0EF1               	movlw	241
  2642   000E9C                     u3027:
  2643   000E9C  2EE8               	decfsz	wreg,f,c
  2644   000E9E  D7FE               	bra	u3027
  2645   000EA0  2E3C               	decfsz	??_returnHome^0,f,c
  2646   000EA2  D7FC               	bra	u3027
  2647   000EA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2648   000EA6  D7FA               	bra	u3027
  2649   000EA8  0000               	nop	
  2650                           
  2651                           ;dc_motor.c: 179:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2652   000EAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2653   000EAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2654   000EB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2655   000EB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2656   000EBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2657   000EBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2658   000EC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2659   000EC6  EC2E  F018         	call	_turnLeft	;wreg free
  2660   000ECA                     
  2661                           ;dc_motor.c: 180:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2662   000ECA  0E05               	movlw	5
  2663   000ECC  6E3D               	movwf	(??_returnHome+1)^0,c
  2664   000ECE  0E0F               	movlw	15
  2665   000ED0  6E3C               	movwf	??_returnHome^0,c
  2666   000ED2  0EF1               	movlw	241
  2667   000ED4                     u3037:
  2668   000ED4  2EE8               	decfsz	wreg,f,c
  2669   000ED6  D7FE               	bra	u3037
  2670   000ED8  2E3C               	decfsz	??_returnHome^0,f,c
  2671   000EDA  D7FC               	bra	u3037
  2672   000EDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2673   000EDE  D7FA               	bra	u3037
  2674   000EE0  0000               	nop	
  2675   000EE2                     
  2676                           ;dc_motor.c: 181:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2677   000EE2  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  2678   000EE6  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  2679   000EEA  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  2680   000EEE  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  2681   000EF2  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  2682   000EF6  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  2683   000EFA  EC7D  F01B         	call	_fullSpeedAhead	;wreg free
  2684   000EFE                     
  2685                           ;dc_motor.c: 182:     resetTimer();
  2686   000EFE  EC92  F01F         	call	_resetTimer	;wreg free
  2687   000F02                     l2955:
  2688   000F02  5035               	movf	returnHome@curMove^0,w,c
  2689   000F04  0D02               	mullw	2
  2690   000F06  CFF3 F03C          	movff	prodl,??_returnHome
  2691   000F0A  CFF4 F03D          	movff	prodh,??_returnHome+1
  2692   000F0E  503C               	movf	??_returnHome^0,w,c
  2693   000F10  2433               	addwf	returnHome@straightTime^0,w,c
  2694   000F12  6ED9               	movwf	fsr2l,c
  2695   000F14  503D               	movf	(??_returnHome+1)^0,w,c
  2696   000F16  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  2697   000F18  6EDA               	movwf	fsr2h,c
  2698   000F1A  EC90  F01E         	call	_get16bitTMR0val	;wreg free
  2699   000F1E  50DE               	movf	postinc2,w,c
  2700   000F20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  2701   000F22  50DE               	movf	postinc2,w,c
  2702   000F24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  2703   000F26  A0D8               	btfss	status,0,c
  2704   000F28  EF98  F007         	goto	u1651
  2705   000F2C  EF9A  F007         	goto	u1650
  2706   000F30                     u1651:
  2707   000F30  EF81  F007         	goto	l2955
  2708   000F34                     u1650:
  2709   000F34                     
  2710                           ;dc_motor.c: 184:     stop(mL, mR, straightRamp);
  2711   000F34  C02D  F01F         	movff	returnHome@mL,stop@mL
  2712   000F38  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  2713   000F3C  C02F  F021         	movff	returnHome@mR,stop@mR
  2714   000F40  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  2715   000F44  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  2716   000F48  ECF9  F01A         	call	_stop	;wreg free
  2717   000F4C                     
  2718                           ;dc_motor.c: 186:     char i=curMove;
  2719   000F4C  C035  F040         	movff	returnHome@curMove,returnHome@i
  2720                           
  2721                           ;dc_motor.c: 187:     while (i>0) {
  2722   000F50  EF56  F00A         	goto	l3047
  2723   000F54                     l2961:
  2724                           
  2725                           ;dc_motor.c: 188:         i--;
  2726   000F54  0640               	decf	returnHome@i^0,f,c
  2727   000F56                     
  2728                           ;dc_motor.c: 190:         if (moveSequence[i] == 1) {
  2729   000F56  5040               	movf	returnHome@i^0,w,c
  2730   000F58  2431               	addwf	returnHome@moveSequence^0,w,c
  2731   000F5A  6ED9               	movwf	fsr2l,c
  2732   000F5C  0E00               	movlw	0
  2733   000F5E  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2734   000F60  6EDA               	movwf	fsr2h,c
  2735   000F62  04DE               	decf	postinc2,w,c
  2736   000F64  A4D8               	btfss	status,2,c
  2737   000F66  EFB7  F007         	goto	u1661
  2738   000F6A  EFB9  F007         	goto	u1660
  2739   000F6E                     u1661:
  2740   000F6E  EFF3  F007         	goto	l2971
  2741   000F72                     u1660:
  2742   000F72                     
  2743                           ;dc_motor.c: 191:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2744   000F72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2745   000F76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2746   000F7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2747   000F7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2748   000F82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2749   000F86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2750   000F8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2751   000F8E  EC2E  F018         	call	_turnLeft	;wreg free
  2752   000F92                     
  2753                           ;dc_motor.c: 192:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2754   000F92  0E05               	movlw	5
  2755   000F94  6E3D               	movwf	(??_returnHome+1)^0,c
  2756   000F96  0E0F               	movlw	15
  2757   000F98  6E3C               	movwf	??_returnHome^0,c
  2758   000F9A  0EF1               	movlw	241
  2759   000F9C                     u3047:
  2760   000F9C  2EE8               	decfsz	wreg,f,c
  2761   000F9E  D7FE               	bra	u3047
  2762   000FA0  2E3C               	decfsz	??_returnHome^0,f,c
  2763   000FA2  D7FC               	bra	u3047
  2764   000FA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2765   000FA6  D7FA               	bra	u3047
  2766   000FA8  0000               	nop	
  2767   000FAA                     
  2768                           ;dc_motor.c: 193:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2769   000FAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2770   000FAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2771   000FB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2772   000FB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2773   000FBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2774   000FBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2775   000FC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2776   000FC6  EC2E  F018         	call	_turnLeft	;wreg free
  2777                           
  2778                           ;dc_motor.c: 194:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2779   000FCA  0E05               	movlw	5
  2780   000FCC  6E3D               	movwf	(??_returnHome+1)^0,c
  2781   000FCE  0E0F               	movlw	15
  2782   000FD0  6E3C               	movwf	??_returnHome^0,c
  2783   000FD2  0EF1               	movlw	241
  2784   000FD4                     u3057:
  2785   000FD4  2EE8               	decfsz	wreg,f,c
  2786   000FD6  D7FE               	bra	u3057
  2787   000FD8  2E3C               	decfsz	??_returnHome^0,f,c
  2788   000FDA  D7FC               	bra	u3057
  2789   000FDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2790   000FDE  D7FA               	bra	u3057
  2791   000FE0  0000               	nop	
  2792                           
  2793                           ;dc_motor.c: 195:         }
  2794   000FE2  EF21  F00A         	goto	l522
  2795   000FE6                     l2971:
  2796   000FE6  5040               	movf	returnHome@i^0,w,c
  2797   000FE8  2431               	addwf	returnHome@moveSequence^0,w,c
  2798   000FEA  6ED9               	movwf	fsr2l,c
  2799   000FEC  0E00               	movlw	0
  2800   000FEE  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2801   000FF0  6EDA               	movwf	fsr2h,c
  2802   000FF2  0E02               	movlw	2
  2803   000FF4  18DE               	xorwf	postinc2,w,c
  2804   000FF6  A4D8               	btfss	status,2,c
  2805   000FF8  EF00  F008         	goto	u1671
  2806   000FFC  EF02  F008         	goto	u1670
  2807   001000                     u1671:
  2808   001000  EF3C  F008         	goto	l2979
  2809   001004                     u1670:
  2810   001004                     
  2811                           ;dc_motor.c: 198:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2812   001004  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2813   001008  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2814   00100C  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2815   001010  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2816   001014  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2817   001018  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2818   00101C  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2819   001020  EC44  F017         	call	_turnRight	;wreg free
  2820   001024                     
  2821                           ;dc_motor.c: 199:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2822   001024  0E05               	movlw	5
  2823   001026  6E3D               	movwf	(??_returnHome+1)^0,c
  2824   001028  0E0F               	movlw	15
  2825   00102A  6E3C               	movwf	??_returnHome^0,c
  2826   00102C  0EF1               	movlw	241
  2827   00102E                     u3067:
  2828   00102E  2EE8               	decfsz	wreg,f,c
  2829   001030  D7FE               	bra	u3067
  2830   001032  2E3C               	decfsz	??_returnHome^0,f,c
  2831   001034  D7FC               	bra	u3067
  2832   001036  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2833   001038  D7FA               	bra	u3067
  2834   00103A  0000               	nop	
  2835   00103C                     
  2836                           ;dc_motor.c: 200:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2837   00103C  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2838   001040  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2839   001044  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2840   001048  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2841   00104C  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2842   001050  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2843   001054  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2844   001058  EC44  F017         	call	_turnRight	;wreg free
  2845                           
  2846                           ;dc_motor.c: 201:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2847   00105C  0E05               	movlw	5
  2848   00105E  6E3D               	movwf	(??_returnHome+1)^0,c
  2849   001060  0E0F               	movlw	15
  2850   001062  6E3C               	movwf	??_returnHome^0,c
  2851   001064  0EF1               	movlw	241
  2852   001066                     u3077:
  2853   001066  2EE8               	decfsz	wreg,f,c
  2854   001068  D7FE               	bra	u3077
  2855   00106A  2E3C               	decfsz	??_returnHome^0,f,c
  2856   00106C  D7FC               	bra	u3077
  2857   00106E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2858   001070  D7FA               	bra	u3077
  2859   001072  0000               	nop	
  2860                           
  2861                           ;dc_motor.c: 202:         }
  2862   001074  EF21  F00A         	goto	l522
  2863   001078                     l2979:
  2864   001078  5040               	movf	returnHome@i^0,w,c
  2865   00107A  2431               	addwf	returnHome@moveSequence^0,w,c
  2866   00107C  6ED9               	movwf	fsr2l,c
  2867   00107E  0E00               	movlw	0
  2868   001080  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2869   001082  6EDA               	movwf	fsr2h,c
  2870   001084  0E03               	movlw	3
  2871   001086  18DE               	xorwf	postinc2,w,c
  2872   001088  A4D8               	btfss	status,2,c
  2873   00108A  EF49  F008         	goto	u1681
  2874   00108E  EF4B  F008         	goto	u1680
  2875   001092                     u1681:
  2876   001092  EFBD  F008         	goto	l2993
  2877   001096                     u1680:
  2878   001096                     
  2879                           ;dc_motor.c: 205:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2880   001096  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2881   00109A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2882   00109E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2883   0010A2  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2884   0010A6  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2885   0010AA  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2886   0010AE  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2887   0010B2  EC2E  F018         	call	_turnLeft	;wreg free
  2888   0010B6                     
  2889                           ;dc_motor.c: 206:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2890   0010B6  0E05               	movlw	5
  2891   0010B8  6E3D               	movwf	(??_returnHome+1)^0,c
  2892   0010BA  0E0F               	movlw	15
  2893   0010BC  6E3C               	movwf	??_returnHome^0,c
  2894   0010BE  0EF1               	movlw	241
  2895   0010C0                     u3087:
  2896   0010C0  2EE8               	decfsz	wreg,f,c
  2897   0010C2  D7FE               	bra	u3087
  2898   0010C4  2E3C               	decfsz	??_returnHome^0,f,c
  2899   0010C6  D7FC               	bra	u3087
  2900   0010C8  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2901   0010CA  D7FA               	bra	u3087
  2902   0010CC  0000               	nop	
  2903   0010CE                     
  2904                           ;dc_motor.c: 207:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2905   0010CE  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2906   0010D2  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2907   0010D6  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2908   0010DA  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2909   0010DE  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2910   0010E2  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2911   0010E6  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2912   0010EA  EC2E  F018         	call	_turnLeft	;wreg free
  2913                           
  2914                           ;dc_motor.c: 208:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2915   0010EE  0E05               	movlw	5
  2916   0010F0  6E3D               	movwf	(??_returnHome+1)^0,c
  2917   0010F2  0E0F               	movlw	15
  2918   0010F4  6E3C               	movwf	??_returnHome^0,c
  2919   0010F6  0EF1               	movlw	241
  2920   0010F8                     u3097:
  2921   0010F8  2EE8               	decfsz	wreg,f,c
  2922   0010FA  D7FE               	bra	u3097
  2923   0010FC  2E3C               	decfsz	??_returnHome^0,f,c
  2924   0010FE  D7FC               	bra	u3097
  2925   001100  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2926   001102  D7FA               	bra	u3097
  2927   001104  0000               	nop	
  2928   001106                     
  2929                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2930   001106  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2931   00110A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2932   00110E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2933   001112  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2934   001116  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2935   00111A  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2936   00111E  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2937   001122  EC2E  F018         	call	_turnLeft	;wreg free
  2938   001126                     
  2939                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2940   001126  0E05               	movlw	5
  2941   001128  6E3D               	movwf	(??_returnHome+1)^0,c
  2942   00112A  0E0F               	movlw	15
  2943   00112C  6E3C               	movwf	??_returnHome^0,c
  2944   00112E  0EF1               	movlw	241
  2945   001130                     u3107:
  2946   001130  2EE8               	decfsz	wreg,f,c
  2947   001132  D7FE               	bra	u3107
  2948   001134  2E3C               	decfsz	??_returnHome^0,f,c
  2949   001136  D7FC               	bra	u3107
  2950   001138  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2951   00113A  D7FA               	bra	u3107
  2952   00113C  0000               	nop	
  2953                           
  2954                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2955   00113E  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2956   001142  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2957   001146  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2958   00114A  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2959   00114E  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2960   001152  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2961   001156  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2962   00115A  EC2E  F018         	call	_turnLeft	;wreg free
  2963   00115E                     l2991:
  2964                           
  2965                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2966   00115E  0E05               	movlw	5
  2967   001160  6E3D               	movwf	(??_returnHome+1)^0,c
  2968   001162  0E0F               	movlw	15
  2969   001164  6E3C               	movwf	??_returnHome^0,c
  2970   001166  0EF1               	movlw	241
  2971   001168                     u3117:
  2972   001168  2EE8               	decfsz	wreg,f,c
  2973   00116A  D7FE               	bra	u3117
  2974   00116C  2E3C               	decfsz	??_returnHome^0,f,c
  2975   00116E  D7FC               	bra	u3117
  2976   001170  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2977   001172  D7FA               	bra	u3117
  2978   001174  0000               	nop	
  2979                           
  2980                           ;dc_motor.c: 213:         }
  2981   001176  EF21  F00A         	goto	l522
  2982   00117A                     l2993:
  2983   00117A  5040               	movf	returnHome@i^0,w,c
  2984   00117C  2431               	addwf	returnHome@moveSequence^0,w,c
  2985   00117E  6ED9               	movwf	fsr2l,c
  2986   001180  0E00               	movlw	0
  2987   001182  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2988   001184  6EDA               	movwf	fsr2h,c
  2989   001186  0E04               	movlw	4
  2990   001188  18DE               	xorwf	postinc2,w,c
  2991   00118A  A4D8               	btfss	status,2,c
  2992   00118C  EFCA  F008         	goto	u1691
  2993   001190  EFCC  F008         	goto	u1690
  2994   001194                     u1691:
  2995   001194  EF16  F009         	goto	l3005
  2996   001198                     u1690:
  2997   001198                     
  2998                           ;dc_motor.c: 216:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2999   001198  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3000   00119C  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3001   0011A0  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3002   0011A4  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3003   0011A8  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3004   0011AC  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3005   0011B0  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3006   0011B4  EC2E  F018         	call	_turnLeft	;wreg free
  3007   0011B8                     
  3008                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3009   0011B8  0E05               	movlw	5
  3010   0011BA  6E3D               	movwf	(??_returnHome+1)^0,c
  3011   0011BC  0E0F               	movlw	15
  3012   0011BE  6E3C               	movwf	??_returnHome^0,c
  3013   0011C0  0EF1               	movlw	241
  3014   0011C2                     u3127:
  3015   0011C2  2EE8               	decfsz	wreg,f,c
  3016   0011C4  D7FE               	bra	u3127
  3017   0011C6  2E3C               	decfsz	??_returnHome^0,f,c
  3018   0011C8  D7FC               	bra	u3127
  3019   0011CA  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3020   0011CC  D7FA               	bra	u3127
  3021   0011CE  0000               	nop	
  3022   0011D0                     
  3023                           ;dc_motor.c: 218:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3024   0011D0  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3025   0011D4  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3026   0011D8  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3027   0011DC  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3028   0011E0  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3029   0011E4  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3030   0011E8  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3031   0011EC  EC2E  F018         	call	_turnLeft	;wreg free
  3032                           
  3033                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3034   0011F0  0E05               	movlw	5
  3035   0011F2  6E3D               	movwf	(??_returnHome+1)^0,c
  3036   0011F4  0E0F               	movlw	15
  3037   0011F6  6E3C               	movwf	??_returnHome^0,c
  3038   0011F8  0EF1               	movlw	241
  3039   0011FA                     u3137:
  3040   0011FA  2EE8               	decfsz	wreg,f,c
  3041   0011FC  D7FE               	bra	u3137
  3042   0011FE  2E3C               	decfsz	??_returnHome^0,f,c
  3043   001200  D7FC               	bra	u3137
  3044   001202  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3045   001204  D7FA               	bra	u3137
  3046   001206  0000               	nop	
  3047   001208                     
  3048                           ;dc_motor.c: 220:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3049   001208  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  3050   00120C  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  3051   001210  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  3052   001214  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  3053   001218  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  3054   00121C  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  3055   001220  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  3056   001224  EC51  F016         	call	_reverseOneSquare	;wreg free
  3057   001228  EFAF  F008         	goto	l2991
  3058   00122C                     l3005:
  3059   00122C  5040               	movf	returnHome@i^0,w,c
  3060   00122E  2431               	addwf	returnHome@moveSequence^0,w,c
  3061   001230  6ED9               	movwf	fsr2l,c
  3062   001232  0E00               	movlw	0
  3063   001234  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3064   001236  6EDA               	movwf	fsr2h,c
  3065   001238  0E05               	movlw	5
  3066   00123A  18DE               	xorwf	postinc2,w,c
  3067   00123C  A4D8               	btfss	status,2,c
  3068   00123E  EF23  F009         	goto	u1701
  3069   001242  EF25  F009         	goto	u1700
  3070   001246                     u1701:
  3071   001246  EF6F  F009         	goto	l3017
  3072   00124A                     u1700:
  3073   00124A                     
  3074                           ;dc_motor.c: 225:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3075   00124A  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3076   00124E  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3077   001252  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3078   001256  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3079   00125A  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3080   00125E  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3081   001262  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3082   001266  EC44  F017         	call	_turnRight	;wreg free
  3083   00126A                     
  3084                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3085   00126A  0E05               	movlw	5
  3086   00126C  6E3D               	movwf	(??_returnHome+1)^0,c
  3087   00126E  0E0F               	movlw	15
  3088   001270  6E3C               	movwf	??_returnHome^0,c
  3089   001272  0EF1               	movlw	241
  3090   001274                     u3147:
  3091   001274  2EE8               	decfsz	wreg,f,c
  3092   001276  D7FE               	bra	u3147
  3093   001278  2E3C               	decfsz	??_returnHome^0,f,c
  3094   00127A  D7FC               	bra	u3147
  3095   00127C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3096   00127E  D7FA               	bra	u3147
  3097   001280  0000               	nop	
  3098   001282                     
  3099                           ;dc_motor.c: 227:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3100   001282  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3101   001286  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3102   00128A  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3103   00128E  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3104   001292  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3105   001296  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3106   00129A  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3107   00129E  EC44  F017         	call	_turnRight	;wreg free
  3108                           
  3109                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3110   0012A2  0E05               	movlw	5
  3111   0012A4  6E3D               	movwf	(??_returnHome+1)^0,c
  3112   0012A6  0E0F               	movlw	15
  3113   0012A8  6E3C               	movwf	??_returnHome^0,c
  3114   0012AA  0EF1               	movlw	241
  3115   0012AC                     u3157:
  3116   0012AC  2EE8               	decfsz	wreg,f,c
  3117   0012AE  D7FE               	bra	u3157
  3118   0012B0  2E3C               	decfsz	??_returnHome^0,f,c
  3119   0012B2  D7FC               	bra	u3157
  3120   0012B4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3121   0012B6  D7FA               	bra	u3157
  3122   0012B8  0000               	nop	
  3123   0012BA                     
  3124                           ;dc_motor.c: 229:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3125   0012BA  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  3126   0012BE  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  3127   0012C2  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  3128   0012C6  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  3129   0012CA  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  3130   0012CE  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  3131   0012D2  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  3132   0012D6  EC51  F016         	call	_reverseOneSquare	;wreg free
  3133   0012DA  EFAF  F008         	goto	l2991
  3134   0012DE                     l3017:
  3135   0012DE  5040               	movf	returnHome@i^0,w,c
  3136   0012E0  2431               	addwf	returnHome@moveSequence^0,w,c
  3137   0012E2  6ED9               	movwf	fsr2l,c
  3138   0012E4  0E00               	movlw	0
  3139   0012E6  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3140   0012E8  6EDA               	movwf	fsr2h,c
  3141   0012EA  0E06               	movlw	6
  3142   0012EC  18DE               	xorwf	postinc2,w,c
  3143   0012EE  A4D8               	btfss	status,2,c
  3144   0012F0  EF7C  F009         	goto	u1711
  3145   0012F4  EF7E  F009         	goto	u1710
  3146   0012F8                     u1711:
  3147   0012F8  EFC8  F009         	goto	l3029
  3148   0012FC                     u1710:
  3149   0012FC                     
  3150                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3151   0012FC  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3152   001300  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3153   001304  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3154   001308  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3155   00130C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3156   001310  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3157   001314  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3158   001318  EC2E  F018         	call	_turnLeft	;wreg free
  3159   00131C                     
  3160                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3161   00131C  0E05               	movlw	5
  3162   00131E  6E3D               	movwf	(??_returnHome+1)^0,c
  3163   001320  0E0F               	movlw	15
  3164   001322  6E3C               	movwf	??_returnHome^0,c
  3165   001324  0EF1               	movlw	241
  3166   001326                     u3167:
  3167   001326  2EE8               	decfsz	wreg,f,c
  3168   001328  D7FE               	bra	u3167
  3169   00132A  2E3C               	decfsz	??_returnHome^0,f,c
  3170   00132C  D7FC               	bra	u3167
  3171   00132E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3172   001330  D7FA               	bra	u3167
  3173   001332  0000               	nop	
  3174   001334                     
  3175                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3176   001334  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3177   001338  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3178   00133C  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3179   001340  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3180   001344  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3181   001348  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3182   00134C  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3183   001350  EC2E  F018         	call	_turnLeft	;wreg free
  3184                           
  3185                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3186   001354  0E05               	movlw	5
  3187   001356  6E3D               	movwf	(??_returnHome+1)^0,c
  3188   001358  0E0F               	movlw	15
  3189   00135A  6E3C               	movwf	??_returnHome^0,c
  3190   00135C  0EF1               	movlw	241
  3191   00135E                     u3177:
  3192   00135E  2EE8               	decfsz	wreg,f,c
  3193   001360  D7FE               	bra	u3177
  3194   001362  2E3C               	decfsz	??_returnHome^0,f,c
  3195   001364  D7FC               	bra	u3177
  3196   001366  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3197   001368  D7FA               	bra	u3177
  3198   00136A  0000               	nop	
  3199   00136C                     
  3200                           ;dc_motor.c: 238:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3201   00136C  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3202   001370  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3203   001374  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3204   001378  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3205   00137C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3206   001380  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3207   001384  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3208   001388  EC2E  F018         	call	_turnLeft	;wreg free
  3209   00138C  EFAF  F008         	goto	l2991
  3210   001390                     l3029:
  3211   001390  5040               	movf	returnHome@i^0,w,c
  3212   001392  2431               	addwf	returnHome@moveSequence^0,w,c
  3213   001394  6ED9               	movwf	fsr2l,c
  3214   001396  0E00               	movlw	0
  3215   001398  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3216   00139A  6EDA               	movwf	fsr2h,c
  3217   00139C  0E07               	movlw	7
  3218   00139E  18DE               	xorwf	postinc2,w,c
  3219   0013A0  A4D8               	btfss	status,2,c
  3220   0013A2  EFD5  F009         	goto	u1721
  3221   0013A6  EFD7  F009         	goto	u1720
  3222   0013AA                     u1721:
  3223   0013AA  EF21  F00A         	goto	l528
  3224   0013AE                     u1720:
  3225   0013AE                     
  3226                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3227   0013AE  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3228   0013B2  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3229   0013B6  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3230   0013BA  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3231   0013BE  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3232   0013C2  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3233   0013C6  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3234   0013CA  EC44  F017         	call	_turnRight	;wreg free
  3235   0013CE                     
  3236                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3237   0013CE  0E05               	movlw	5
  3238   0013D0  6E3D               	movwf	(??_returnHome+1)^0,c
  3239   0013D2  0E0F               	movlw	15
  3240   0013D4  6E3C               	movwf	??_returnHome^0,c
  3241   0013D6  0EF1               	movlw	241
  3242   0013D8                     u3187:
  3243   0013D8  2EE8               	decfsz	wreg,f,c
  3244   0013DA  D7FE               	bra	u3187
  3245   0013DC  2E3C               	decfsz	??_returnHome^0,f,c
  3246   0013DE  D7FC               	bra	u3187
  3247   0013E0  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3248   0013E2  D7FA               	bra	u3187
  3249   0013E4  0000               	nop	
  3250   0013E6                     
  3251                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3252   0013E6  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3253   0013EA  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3254   0013EE  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3255   0013F2  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3256   0013F6  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3257   0013FA  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3258   0013FE  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3259   001402  EC44  F017         	call	_turnRight	;wreg free
  3260                           
  3261                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3262   001406  0E05               	movlw	5
  3263   001408  6E3D               	movwf	(??_returnHome+1)^0,c
  3264   00140A  0E0F               	movlw	15
  3265   00140C  6E3C               	movwf	??_returnHome^0,c
  3266   00140E  0EF1               	movlw	241
  3267   001410                     u3197:
  3268   001410  2EE8               	decfsz	wreg,f,c
  3269   001412  D7FE               	bra	u3197
  3270   001414  2E3C               	decfsz	??_returnHome^0,f,c
  3271   001416  D7FC               	bra	u3197
  3272   001418  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3273   00141A  D7FA               	bra	u3197
  3274   00141C  0000               	nop	
  3275   00141E                     
  3276                           ;dc_motor.c: 247:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3277   00141E  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3278   001422  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3279   001426  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3280   00142A  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3281   00142E  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3282   001432  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3283   001436  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3284   00143A  EC44  F017         	call	_turnRight	;wreg free
  3285   00143E  EFAF  F008         	goto	l2991
  3286   001442                     l528:
  3287   001442                     l522:
  3288                           
  3289                           ;dc_motor.c: 251:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3290   001442  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  3291   001446  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  3292   00144A  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  3293   00144E  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  3294   001452  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3295   001456  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  3296   00145A  EC7D  F01B         	call	_fullSpeedAhead	;wreg free
  3297   00145E                     
  3298                           ;dc_motor.c: 252:         resetTimer();
  3299   00145E  EC92  F01F         	call	_resetTimer	;wreg free
  3300   001462                     l3043:
  3301   001462  5040               	movf	returnHome@i^0,w,c
  3302   001464  0D02               	mullw	2
  3303   001466  CFF3 F03C          	movff	prodl,??_returnHome
  3304   00146A  CFF4 F03D          	movff	prodh,??_returnHome+1
  3305   00146E  503C               	movf	??_returnHome^0,w,c
  3306   001470  2433               	addwf	returnHome@straightTime^0,w,c
  3307   001472  6ED9               	movwf	fsr2l,c
  3308   001474  503D               	movf	(??_returnHome+1)^0,w,c
  3309   001476  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  3310   001478  6EDA               	movwf	fsr2h,c
  3311   00147A  EC90  F01E         	call	_get16bitTMR0val	;wreg free
  3312   00147E  50DE               	movf	postinc2,w,c
  3313   001480  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  3314   001482  50DE               	movf	postinc2,w,c
  3315   001484  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  3316   001486  A0D8               	btfss	status,0,c
  3317   001488  EF48  F00A         	goto	u1731
  3318   00148C  EF4A  F00A         	goto	u1730
  3319   001490                     u1731:
  3320   001490  EF31  F00A         	goto	l3043
  3321   001494                     u1730:
  3322   001494                     
  3323                           ;dc_motor.c: 254:         stop(mL, mR, straightRamp);
  3324   001494  C02D  F01F         	movff	returnHome@mL,stop@mL
  3325   001498  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  3326   00149C  C02F  F021         	movff	returnHome@mR,stop@mR
  3327   0014A0  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  3328   0014A4  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  3329   0014A8  ECF9  F01A         	call	_stop	;wreg free
  3330   0014AC                     l3047:
  3331                           
  3332                           ;dc_motor.c: 187:     while (i>0) {
  3333   0014AC  5040               	movf	returnHome@i^0,w,c
  3334   0014AE  A4D8               	btfss	status,2,c
  3335   0014B0  EF5C  F00A         	goto	u1741
  3336   0014B4  EF5E  F00A         	goto	u1740
  3337   0014B8                     u1741:
  3338   0014B8  EFAA  F007         	goto	l2961
  3339   0014BC                     u1740:
  3340   0014BC  0012               	return		;funcret
  3341   0014BE                     __end_of_returnHome:
  3342                           	callstack 0
  3343                           
  3344 ;; *************** function _lostReturnHome *****************
  3345 ;; Defined at:
  3346 ;;		line 259 in file "dc_motor.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  3349 ;;		 -> main@motorL(10), 
  3350 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  3351 ;;		 -> main@motorR(10), 
  3352 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  3353 ;;		 -> main@moveSequence(40), 
  3354 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  3355 ;;		 -> main@straightTime(82), 
  3356 ;;  curMove         1   52[COMRAM] unsigned char 
  3357 ;;  straightSpee    1   53[COMRAM] unsigned char 
  3358 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  3359 ;;  straightRamp    1   55[COMRAM] unsigned char 
  3360 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  3361 ;;  turnDuration    1   57[COMRAM] unsigned char 
  3362 ;;  turnRamp        1   58[COMRAM] unsigned char 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  i               1   63[COMRAM] unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3374 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;Total ram usage:       20 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; Hardware stack levels required when called: 8
  3381 ;; This function calls:
  3382 ;;		_fullSpeedAhead
  3383 ;;		_get16bitTMR0val
  3384 ;;		_resetTimer
  3385 ;;		_reverseOneSquare
  3386 ;;		_stop
  3387 ;;		_turnLeft
  3388 ;;		_turnRight
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text3
  3395   0014BE                     __ptext3:
  3396                           	callstack 0
  3397   0014BE                     _lostReturnHome:
  3398                           	callstack 22
  3399   0014BE                     
  3400                           ;dc_motor.c: 259: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 260: {;dc_motor.c: 261:     turnLeft(mL, mR, turnSpeed, 
      +                          turnDuration, turnRamp);
  3401   0014BE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3402   0014C2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3403   0014C6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3404   0014CA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3405   0014CE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3406   0014D2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3407   0014D6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3408   0014DA  EC2E  F018         	call	_turnLeft	;wreg free
  3409   0014DE                     
  3410                           ;dc_motor.c: 262:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3411   0014DE  0E05               	movlw	5
  3412   0014E0  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3413   0014E2  0E0F               	movlw	15
  3414   0014E4  6E3C               	movwf	??_lostReturnHome^0,c
  3415   0014E6  0EF1               	movlw	241
  3416   0014E8                     u3207:
  3417   0014E8  2EE8               	decfsz	wreg,f,c
  3418   0014EA  D7FE               	bra	u3207
  3419   0014EC  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3420   0014EE  D7FC               	bra	u3207
  3421   0014F0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3422   0014F2  D7FA               	bra	u3207
  3423   0014F4  0000               	nop	
  3424   0014F6                     
  3425                           ;dc_motor.c: 263:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3426   0014F6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3427   0014FA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3428   0014FE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3429   001502  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3430   001506  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3431   00150A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3432   00150E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3433   001512  EC2E  F018         	call	_turnLeft	;wreg free
  3434                           
  3435                           ;dc_motor.c: 264:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3436   001516  0E05               	movlw	5
  3437   001518  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3438   00151A  0E0F               	movlw	15
  3439   00151C  6E3C               	movwf	??_lostReturnHome^0,c
  3440   00151E  0EF1               	movlw	241
  3441   001520                     u3217:
  3442   001520  2EE8               	decfsz	wreg,f,c
  3443   001522  D7FE               	bra	u3217
  3444   001524  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3445   001526  D7FC               	bra	u3217
  3446   001528  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3447   00152A  D7FA               	bra	u3217
  3448   00152C  0000               	nop	
  3449   00152E                     
  3450                           ;dc_motor.c: 265:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3451   00152E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3452   001532  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3453   001536  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3454   00153A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3455   00153E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3456   001542  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3457   001546  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3458   00154A  EC2E  F018         	call	_turnLeft	;wreg free
  3459   00154E                     
  3460                           ;dc_motor.c: 266:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3461   00154E  0E05               	movlw	5
  3462   001550  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3463   001552  0E0F               	movlw	15
  3464   001554  6E3C               	movwf	??_lostReturnHome^0,c
  3465   001556  0EF1               	movlw	241
  3466   001558                     u3227:
  3467   001558  2EE8               	decfsz	wreg,f,c
  3468   00155A  D7FE               	bra	u3227
  3469   00155C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3470   00155E  D7FC               	bra	u3227
  3471   001560  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3472   001562  D7FA               	bra	u3227
  3473   001564  0000               	nop	
  3474                           
  3475                           ;dc_motor.c: 267:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3476   001566  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3477   00156A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3478   00156E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3479   001572  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3480   001576  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3481   00157A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3482   00157E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3483   001582  EC2E  F018         	call	_turnLeft	;wreg free
  3484   001586                     
  3485                           ;dc_motor.c: 268:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3486   001586  0E05               	movlw	5
  3487   001588  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3488   00158A  0E0F               	movlw	15
  3489   00158C  6E3C               	movwf	??_lostReturnHome^0,c
  3490   00158E  0EF1               	movlw	241
  3491   001590                     u3237:
  3492   001590  2EE8               	decfsz	wreg,f,c
  3493   001592  D7FE               	bra	u3237
  3494   001594  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3495   001596  D7FC               	bra	u3237
  3496   001598  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3497   00159A  D7FA               	bra	u3237
  3498   00159C  0000               	nop	
  3499   00159E                     
  3500                           ;dc_motor.c: 269:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3501   00159E  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  3502   0015A2  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  3503   0015A6  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  3504   0015AA  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  3505   0015AE  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3506   0015B2  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  3507   0015B6  EC7D  F01B         	call	_fullSpeedAhead	;wreg free
  3508   0015BA                     
  3509                           ;dc_motor.c: 270:     resetTimer();
  3510   0015BA  EC92  F01F         	call	_resetTimer	;wreg free
  3511   0015BE                     
  3512                           ;dc_motor.c: 271:     lost = 0;
  3513   0015BE  0E00               	movlw	0
  3514   0015C0  0100               	movlb	0	; () banked
  3515   0015C2  6FB0               	movwf	_lost& (0+255),b
  3516   0015C4                     l3379:
  3517                           
  3518                           ; BSR set to: 0
  3519   0015C4  51B0               	movf	_lost& (0+255),w,b
  3520   0015C6  B4D8               	btfsc	status,2,c
  3521   0015C8  EFE8  F00A         	goto	u2061
  3522   0015CC  EFEA  F00A         	goto	u2060
  3523   0015D0                     u2061:
  3524   0015D0  EFE2  F00A         	goto	l3379
  3525   0015D4                     u2060:
  3526   0015D4                     
  3527                           ; BSR set to: 0
  3528                           ;dc_motor.c: 273:     stop(mL, mR, straightRamp);
  3529   0015D4  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  3530   0015D8  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  3531   0015DC  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  3532   0015E0  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  3533   0015E4  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  3534   0015E8  ECF9  F01A         	call	_stop	;wreg free
  3535   0015EC                     
  3536                           ;dc_motor.c: 275:     char i=curMove;
  3537   0015EC  C035  F040         	movff	lostReturnHome@curMove,lostReturnHome@i
  3538                           
  3539                           ;dc_motor.c: 276:     while (i>0) {
  3540   0015F0  EFA6  F00D         	goto	l3471
  3541   0015F4                     l3385:
  3542                           
  3543                           ;dc_motor.c: 277:         i--;
  3544   0015F4  0640               	decf	lostReturnHome@i^0,f,c
  3545   0015F6                     
  3546                           ;dc_motor.c: 279:         if (moveSequence[i] == 1) {
  3547   0015F6  5040               	movf	lostReturnHome@i^0,w,c
  3548   0015F8  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3549   0015FA  6ED9               	movwf	fsr2l,c
  3550   0015FC  0E00               	movlw	0
  3551   0015FE  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3552   001600  6EDA               	movwf	fsr2h,c
  3553   001602  04DE               	decf	postinc2,w,c
  3554   001604  A4D8               	btfss	status,2,c
  3555   001606  EF07  F00B         	goto	u2071
  3556   00160A  EF09  F00B         	goto	u2070
  3557   00160E                     u2071:
  3558   00160E  EF43  F00B         	goto	l3395
  3559   001612                     u2070:
  3560   001612                     
  3561                           ;dc_motor.c: 280:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3562   001612  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3563   001616  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3564   00161A  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3565   00161E  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3566   001622  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3567   001626  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3568   00162A  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3569   00162E  EC2E  F018         	call	_turnLeft	;wreg free
  3570   001632                     
  3571                           ;dc_motor.c: 281:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3572   001632  0E05               	movlw	5
  3573   001634  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3574   001636  0E0F               	movlw	15
  3575   001638  6E3C               	movwf	??_lostReturnHome^0,c
  3576   00163A  0EF1               	movlw	241
  3577   00163C                     u3247:
  3578   00163C  2EE8               	decfsz	wreg,f,c
  3579   00163E  D7FE               	bra	u3247
  3580   001640  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3581   001642  D7FC               	bra	u3247
  3582   001644  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3583   001646  D7FA               	bra	u3247
  3584   001648  0000               	nop	
  3585   00164A                     
  3586                           ;dc_motor.c: 282:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3587   00164A  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3588   00164E  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3589   001652  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3590   001656  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3591   00165A  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3592   00165E  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3593   001662  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3594   001666  EC2E  F018         	call	_turnLeft	;wreg free
  3595                           
  3596                           ;dc_motor.c: 283:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3597   00166A  0E05               	movlw	5
  3598   00166C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3599   00166E  0E0F               	movlw	15
  3600   001670  6E3C               	movwf	??_lostReturnHome^0,c
  3601   001672  0EF1               	movlw	241
  3602   001674                     u3257:
  3603   001674  2EE8               	decfsz	wreg,f,c
  3604   001676  D7FE               	bra	u3257
  3605   001678  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3606   00167A  D7FC               	bra	u3257
  3607   00167C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3608   00167E  D7FA               	bra	u3257
  3609   001680  0000               	nop	
  3610                           
  3611                           ;dc_motor.c: 284:         }
  3612   001682  EF71  F00D         	goto	l547
  3613   001686                     l3395:
  3614   001686  5040               	movf	lostReturnHome@i^0,w,c
  3615   001688  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3616   00168A  6ED9               	movwf	fsr2l,c
  3617   00168C  0E00               	movlw	0
  3618   00168E  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3619   001690  6EDA               	movwf	fsr2h,c
  3620   001692  0E02               	movlw	2
  3621   001694  18DE               	xorwf	postinc2,w,c
  3622   001696  A4D8               	btfss	status,2,c
  3623   001698  EF50  F00B         	goto	u2081
  3624   00169C  EF52  F00B         	goto	u2080
  3625   0016A0                     u2081:
  3626   0016A0  EF8C  F00B         	goto	l3403
  3627   0016A4                     u2080:
  3628   0016A4                     
  3629                           ;dc_motor.c: 287:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3630   0016A4  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3631   0016A8  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3632   0016AC  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3633   0016B0  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3634   0016B4  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3635   0016B8  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3636   0016BC  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3637   0016C0  EC44  F017         	call	_turnRight	;wreg free
  3638   0016C4                     
  3639                           ;dc_motor.c: 288:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3640   0016C4  0E05               	movlw	5
  3641   0016C6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3642   0016C8  0E0F               	movlw	15
  3643   0016CA  6E3C               	movwf	??_lostReturnHome^0,c
  3644   0016CC  0EF1               	movlw	241
  3645   0016CE                     u3267:
  3646   0016CE  2EE8               	decfsz	wreg,f,c
  3647   0016D0  D7FE               	bra	u3267
  3648   0016D2  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3649   0016D4  D7FC               	bra	u3267
  3650   0016D6  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3651   0016D8  D7FA               	bra	u3267
  3652   0016DA  0000               	nop	
  3653   0016DC                     
  3654                           ;dc_motor.c: 289:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3655   0016DC  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3656   0016E0  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3657   0016E4  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3658   0016E8  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3659   0016EC  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3660   0016F0  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3661   0016F4  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3662   0016F8  EC44  F017         	call	_turnRight	;wreg free
  3663                           
  3664                           ;dc_motor.c: 290:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3665   0016FC  0E05               	movlw	5
  3666   0016FE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3667   001700  0E0F               	movlw	15
  3668   001702  6E3C               	movwf	??_lostReturnHome^0,c
  3669   001704  0EF1               	movlw	241
  3670   001706                     u3277:
  3671   001706  2EE8               	decfsz	wreg,f,c
  3672   001708  D7FE               	bra	u3277
  3673   00170A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3674   00170C  D7FC               	bra	u3277
  3675   00170E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3676   001710  D7FA               	bra	u3277
  3677   001712  0000               	nop	
  3678                           
  3679                           ;dc_motor.c: 291:         }
  3680   001714  EF71  F00D         	goto	l547
  3681   001718                     l3403:
  3682   001718  5040               	movf	lostReturnHome@i^0,w,c
  3683   00171A  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3684   00171C  6ED9               	movwf	fsr2l,c
  3685   00171E  0E00               	movlw	0
  3686   001720  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3687   001722  6EDA               	movwf	fsr2h,c
  3688   001724  0E03               	movlw	3
  3689   001726  18DE               	xorwf	postinc2,w,c
  3690   001728  A4D8               	btfss	status,2,c
  3691   00172A  EF99  F00B         	goto	u2091
  3692   00172E  EF9B  F00B         	goto	u2090
  3693   001732                     u2091:
  3694   001732  EF0D  F00C         	goto	l3417
  3695   001736                     u2090:
  3696   001736                     
  3697                           ;dc_motor.c: 294:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3698   001736  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3699   00173A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3700   00173E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3701   001742  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3702   001746  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3703   00174A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3704   00174E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3705   001752  EC2E  F018         	call	_turnLeft	;wreg free
  3706   001756                     
  3707                           ;dc_motor.c: 295:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3708   001756  0E05               	movlw	5
  3709   001758  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3710   00175A  0E0F               	movlw	15
  3711   00175C  6E3C               	movwf	??_lostReturnHome^0,c
  3712   00175E  0EF1               	movlw	241
  3713   001760                     u3287:
  3714   001760  2EE8               	decfsz	wreg,f,c
  3715   001762  D7FE               	bra	u3287
  3716   001764  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3717   001766  D7FC               	bra	u3287
  3718   001768  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3719   00176A  D7FA               	bra	u3287
  3720   00176C  0000               	nop	
  3721   00176E                     
  3722                           ;dc_motor.c: 296:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3723   00176E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3724   001772  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3725   001776  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3726   00177A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3727   00177E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3728   001782  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3729   001786  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3730   00178A  EC2E  F018         	call	_turnLeft	;wreg free
  3731                           
  3732                           ;dc_motor.c: 297:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3733   00178E  0E05               	movlw	5
  3734   001790  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3735   001792  0E0F               	movlw	15
  3736   001794  6E3C               	movwf	??_lostReturnHome^0,c
  3737   001796  0EF1               	movlw	241
  3738   001798                     u3297:
  3739   001798  2EE8               	decfsz	wreg,f,c
  3740   00179A  D7FE               	bra	u3297
  3741   00179C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3742   00179E  D7FC               	bra	u3297
  3743   0017A0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3744   0017A2  D7FA               	bra	u3297
  3745   0017A4  0000               	nop	
  3746   0017A6                     
  3747                           ;dc_motor.c: 298:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3748   0017A6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3749   0017AA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3750   0017AE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3751   0017B2  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3752   0017B6  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3753   0017BA  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3754   0017BE  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3755   0017C2  EC2E  F018         	call	_turnLeft	;wreg free
  3756   0017C6                     
  3757                           ;dc_motor.c: 299:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3758   0017C6  0E05               	movlw	5
  3759   0017C8  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3760   0017CA  0E0F               	movlw	15
  3761   0017CC  6E3C               	movwf	??_lostReturnHome^0,c
  3762   0017CE  0EF1               	movlw	241
  3763   0017D0                     u3307:
  3764   0017D0  2EE8               	decfsz	wreg,f,c
  3765   0017D2  D7FE               	bra	u3307
  3766   0017D4  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3767   0017D6  D7FC               	bra	u3307
  3768   0017D8  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3769   0017DA  D7FA               	bra	u3307
  3770   0017DC  0000               	nop	
  3771                           
  3772                           ;dc_motor.c: 300:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3773   0017DE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3774   0017E2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3775   0017E6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3776   0017EA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3777   0017EE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3778   0017F2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3779   0017F6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3780   0017FA  EC2E  F018         	call	_turnLeft	;wreg free
  3781   0017FE                     l3415:
  3782                           
  3783                           ;dc_motor.c: 301:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3784   0017FE  0E05               	movlw	5
  3785   001800  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3786   001802  0E0F               	movlw	15
  3787   001804  6E3C               	movwf	??_lostReturnHome^0,c
  3788   001806  0EF1               	movlw	241
  3789   001808                     u3317:
  3790   001808  2EE8               	decfsz	wreg,f,c
  3791   00180A  D7FE               	bra	u3317
  3792   00180C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3793   00180E  D7FC               	bra	u3317
  3794   001810  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3795   001812  D7FA               	bra	u3317
  3796   001814  0000               	nop	
  3797                           
  3798                           ;dc_motor.c: 302:         }
  3799   001816  EF71  F00D         	goto	l547
  3800   00181A                     l3417:
  3801   00181A  5040               	movf	lostReturnHome@i^0,w,c
  3802   00181C  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3803   00181E  6ED9               	movwf	fsr2l,c
  3804   001820  0E00               	movlw	0
  3805   001822  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3806   001824  6EDA               	movwf	fsr2h,c
  3807   001826  0E04               	movlw	4
  3808   001828  18DE               	xorwf	postinc2,w,c
  3809   00182A  A4D8               	btfss	status,2,c
  3810   00182C  EF1A  F00C         	goto	u2101
  3811   001830  EF1C  F00C         	goto	u2100
  3812   001834                     u2101:
  3813   001834  EF66  F00C         	goto	l3429
  3814   001838                     u2100:
  3815   001838                     
  3816                           ;dc_motor.c: 305:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3817   001838  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3818   00183C  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3819   001840  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3820   001844  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3821   001848  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3822   00184C  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3823   001850  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3824   001854  EC2E  F018         	call	_turnLeft	;wreg free
  3825   001858                     
  3826                           ;dc_motor.c: 306:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3827   001858  0E05               	movlw	5
  3828   00185A  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3829   00185C  0E0F               	movlw	15
  3830   00185E  6E3C               	movwf	??_lostReturnHome^0,c
  3831   001860  0EF1               	movlw	241
  3832   001862                     u3327:
  3833   001862  2EE8               	decfsz	wreg,f,c
  3834   001864  D7FE               	bra	u3327
  3835   001866  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3836   001868  D7FC               	bra	u3327
  3837   00186A  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3838   00186C  D7FA               	bra	u3327
  3839   00186E  0000               	nop	
  3840   001870                     
  3841                           ;dc_motor.c: 307:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3842   001870  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3843   001874  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3844   001878  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3845   00187C  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3846   001880  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3847   001884  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3848   001888  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3849   00188C  EC2E  F018         	call	_turnLeft	;wreg free
  3850                           
  3851                           ;dc_motor.c: 308:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3852   001890  0E05               	movlw	5
  3853   001892  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3854   001894  0E0F               	movlw	15
  3855   001896  6E3C               	movwf	??_lostReturnHome^0,c
  3856   001898  0EF1               	movlw	241
  3857   00189A                     u3337:
  3858   00189A  2EE8               	decfsz	wreg,f,c
  3859   00189C  D7FE               	bra	u3337
  3860   00189E  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3861   0018A0  D7FC               	bra	u3337
  3862   0018A2  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3863   0018A4  D7FA               	bra	u3337
  3864   0018A6  0000               	nop	
  3865   0018A8                     
  3866                           ;dc_motor.c: 309:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3867   0018A8  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3868   0018AC  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3869   0018B0  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3870   0018B4  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3871   0018B8  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3872   0018BC  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3873   0018C0  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3874   0018C4  EC51  F016         	call	_reverseOneSquare	;wreg free
  3875   0018C8  EFFF  F00B         	goto	l3415
  3876   0018CC                     l3429:
  3877   0018CC  5040               	movf	lostReturnHome@i^0,w,c
  3878   0018CE  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3879   0018D0  6ED9               	movwf	fsr2l,c
  3880   0018D2  0E00               	movlw	0
  3881   0018D4  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3882   0018D6  6EDA               	movwf	fsr2h,c
  3883   0018D8  0E05               	movlw	5
  3884   0018DA  18DE               	xorwf	postinc2,w,c
  3885   0018DC  A4D8               	btfss	status,2,c
  3886   0018DE  EF73  F00C         	goto	u2111
  3887   0018E2  EF75  F00C         	goto	u2110
  3888   0018E6                     u2111:
  3889   0018E6  EFBF  F00C         	goto	l3441
  3890   0018EA                     u2110:
  3891   0018EA                     
  3892                           ;dc_motor.c: 314:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3893   0018EA  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3894   0018EE  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3895   0018F2  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3896   0018F6  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3897   0018FA  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3898   0018FE  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3899   001902  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3900   001906  EC44  F017         	call	_turnRight	;wreg free
  3901   00190A                     
  3902                           ;dc_motor.c: 315:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3903   00190A  0E05               	movlw	5
  3904   00190C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3905   00190E  0E0F               	movlw	15
  3906   001910  6E3C               	movwf	??_lostReturnHome^0,c
  3907   001912  0EF1               	movlw	241
  3908   001914                     u3347:
  3909   001914  2EE8               	decfsz	wreg,f,c
  3910   001916  D7FE               	bra	u3347
  3911   001918  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3912   00191A  D7FC               	bra	u3347
  3913   00191C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3914   00191E  D7FA               	bra	u3347
  3915   001920  0000               	nop	
  3916   001922                     
  3917                           ;dc_motor.c: 316:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3918   001922  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3919   001926  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3920   00192A  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3921   00192E  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3922   001932  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3923   001936  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3924   00193A  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3925   00193E  EC44  F017         	call	_turnRight	;wreg free
  3926                           
  3927                           ;dc_motor.c: 317:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3928   001942  0E05               	movlw	5
  3929   001944  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3930   001946  0E0F               	movlw	15
  3931   001948  6E3C               	movwf	??_lostReturnHome^0,c
  3932   00194A  0EF1               	movlw	241
  3933   00194C                     u3357:
  3934   00194C  2EE8               	decfsz	wreg,f,c
  3935   00194E  D7FE               	bra	u3357
  3936   001950  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3937   001952  D7FC               	bra	u3357
  3938   001954  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3939   001956  D7FA               	bra	u3357
  3940   001958  0000               	nop	
  3941   00195A                     
  3942                           ;dc_motor.c: 318:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3943   00195A  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3944   00195E  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3945   001962  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3946   001966  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3947   00196A  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3948   00196E  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3949   001972  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3950   001976  EC51  F016         	call	_reverseOneSquare	;wreg free
  3951   00197A  EFFF  F00B         	goto	l3415
  3952   00197E                     l3441:
  3953   00197E  5040               	movf	lostReturnHome@i^0,w,c
  3954   001980  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3955   001982  6ED9               	movwf	fsr2l,c
  3956   001984  0E00               	movlw	0
  3957   001986  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3958   001988  6EDA               	movwf	fsr2h,c
  3959   00198A  0E06               	movlw	6
  3960   00198C  18DE               	xorwf	postinc2,w,c
  3961   00198E  A4D8               	btfss	status,2,c
  3962   001990  EFCC  F00C         	goto	u2121
  3963   001994  EFCE  F00C         	goto	u2120
  3964   001998                     u2121:
  3965   001998  EF18  F00D         	goto	l3453
  3966   00199C                     u2120:
  3967   00199C                     
  3968                           ;dc_motor.c: 323:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3969   00199C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3970   0019A0  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3971   0019A4  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3972   0019A8  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3973   0019AC  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3974   0019B0  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3975   0019B4  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3976   0019B8  EC2E  F018         	call	_turnLeft	;wreg free
  3977   0019BC                     
  3978                           ;dc_motor.c: 324:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3979   0019BC  0E05               	movlw	5
  3980   0019BE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3981   0019C0  0E0F               	movlw	15
  3982   0019C2  6E3C               	movwf	??_lostReturnHome^0,c
  3983   0019C4  0EF1               	movlw	241
  3984   0019C6                     u3367:
  3985   0019C6  2EE8               	decfsz	wreg,f,c
  3986   0019C8  D7FE               	bra	u3367
  3987   0019CA  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3988   0019CC  D7FC               	bra	u3367
  3989   0019CE  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3990   0019D0  D7FA               	bra	u3367
  3991   0019D2  0000               	nop	
  3992   0019D4                     
  3993                           ;dc_motor.c: 325:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3994   0019D4  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3995   0019D8  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3996   0019DC  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3997   0019E0  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3998   0019E4  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3999   0019E8  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4000   0019EC  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4001   0019F0  EC2E  F018         	call	_turnLeft	;wreg free
  4002                           
  4003                           ;dc_motor.c: 326:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4004   0019F4  0E05               	movlw	5
  4005   0019F6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4006   0019F8  0E0F               	movlw	15
  4007   0019FA  6E3C               	movwf	??_lostReturnHome^0,c
  4008   0019FC  0EF1               	movlw	241
  4009   0019FE                     u3377:
  4010   0019FE  2EE8               	decfsz	wreg,f,c
  4011   001A00  D7FE               	bra	u3377
  4012   001A02  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4013   001A04  D7FC               	bra	u3377
  4014   001A06  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4015   001A08  D7FA               	bra	u3377
  4016   001A0A  0000               	nop	
  4017   001A0C                     
  4018                           ;dc_motor.c: 327:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4019   001A0C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4020   001A10  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4021   001A14  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4022   001A18  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4023   001A1C  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4024   001A20  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4025   001A24  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4026   001A28  EC2E  F018         	call	_turnLeft	;wreg free
  4027   001A2C  EFFF  F00B         	goto	l3415
  4028   001A30                     l3453:
  4029   001A30  5040               	movf	lostReturnHome@i^0,w,c
  4030   001A32  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4031   001A34  6ED9               	movwf	fsr2l,c
  4032   001A36  0E00               	movlw	0
  4033   001A38  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4034   001A3A  6EDA               	movwf	fsr2h,c
  4035   001A3C  0E07               	movlw	7
  4036   001A3E  18DE               	xorwf	postinc2,w,c
  4037   001A40  A4D8               	btfss	status,2,c
  4038   001A42  EF25  F00D         	goto	u2131
  4039   001A46  EF27  F00D         	goto	u2130
  4040   001A4A                     u2131:
  4041   001A4A  EF71  F00D         	goto	l553
  4042   001A4E                     u2130:
  4043   001A4E                     
  4044                           ;dc_motor.c: 332:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4045   001A4E  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4046   001A52  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4047   001A56  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4048   001A5A  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4049   001A5E  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4050   001A62  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4051   001A66  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4052   001A6A  EC44  F017         	call	_turnRight	;wreg free
  4053   001A6E                     
  4054                           ;dc_motor.c: 333:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4055   001A6E  0E05               	movlw	5
  4056   001A70  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4057   001A72  0E0F               	movlw	15
  4058   001A74  6E3C               	movwf	??_lostReturnHome^0,c
  4059   001A76  0EF1               	movlw	241
  4060   001A78                     u3387:
  4061   001A78  2EE8               	decfsz	wreg,f,c
  4062   001A7A  D7FE               	bra	u3387
  4063   001A7C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4064   001A7E  D7FC               	bra	u3387
  4065   001A80  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4066   001A82  D7FA               	bra	u3387
  4067   001A84  0000               	nop	
  4068   001A86                     
  4069                           ;dc_motor.c: 334:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4070   001A86  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4071   001A8A  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4072   001A8E  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4073   001A92  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4074   001A96  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4075   001A9A  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4076   001A9E  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4077   001AA2  EC44  F017         	call	_turnRight	;wreg free
  4078                           
  4079                           ;dc_motor.c: 335:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4080   001AA6  0E05               	movlw	5
  4081   001AA8  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4082   001AAA  0E0F               	movlw	15
  4083   001AAC  6E3C               	movwf	??_lostReturnHome^0,c
  4084   001AAE  0EF1               	movlw	241
  4085   001AB0                     u3397:
  4086   001AB0  2EE8               	decfsz	wreg,f,c
  4087   001AB2  D7FE               	bra	u3397
  4088   001AB4  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4089   001AB6  D7FC               	bra	u3397
  4090   001AB8  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4091   001ABA  D7FA               	bra	u3397
  4092   001ABC  0000               	nop	
  4093   001ABE                     
  4094                           ;dc_motor.c: 336:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4095   001ABE  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4096   001AC2  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4097   001AC6  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4098   001ACA  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4099   001ACE  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4100   001AD2  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4101   001AD6  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4102   001ADA  EC44  F017         	call	_turnRight	;wreg free
  4103   001ADE  EFFF  F00B         	goto	l3415
  4104   001AE2                     l553:
  4105   001AE2                     l547:
  4106                           
  4107                           ;dc_motor.c: 340:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4108   001AE2  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4109   001AE6  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4110   001AEA  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4111   001AEE  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4112   001AF2  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4113   001AF6  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4114   001AFA  EC7D  F01B         	call	_fullSpeedAhead	;wreg free
  4115   001AFE                     
  4116                           ;dc_motor.c: 341:         resetTimer();
  4117   001AFE  EC92  F01F         	call	_resetTimer	;wreg free
  4118   001B02                     l3467:
  4119   001B02  5040               	movf	lostReturnHome@i^0,w,c
  4120   001B04  0D02               	mullw	2
  4121   001B06  CFF3 F03C          	movff	prodl,??_lostReturnHome
  4122   001B0A  CFF4 F03D          	movff	prodh,??_lostReturnHome+1
  4123   001B0E  503C               	movf	??_lostReturnHome^0,w,c
  4124   001B10  2433               	addwf	lostReturnHome@straightTime^0,w,c
  4125   001B12  6ED9               	movwf	fsr2l,c
  4126   001B14  503D               	movf	(??_lostReturnHome+1)^0,w,c
  4127   001B16  2034               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  4128   001B18  6EDA               	movwf	fsr2h,c
  4129   001B1A  EC90  F01E         	call	_get16bitTMR0val	;wreg free
  4130   001B1E  50DE               	movf	postinc2,w,c
  4131   001B20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  4132   001B22  50DE               	movf	postinc2,w,c
  4133   001B24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4134   001B26  A0D8               	btfss	status,0,c
  4135   001B28  EF98  F00D         	goto	u2141
  4136   001B2C  EF9A  F00D         	goto	u2140
  4137   001B30                     u2141:
  4138   001B30  EF81  F00D         	goto	l3467
  4139   001B34                     u2140:
  4140   001B34                     
  4141                           ;dc_motor.c: 343:         stop(mL, mR, straightRamp);
  4142   001B34  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  4143   001B38  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  4144   001B3C  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  4145   001B40  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  4146   001B44  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4147   001B48  ECF9  F01A         	call	_stop	;wreg free
  4148   001B4C                     l3471:
  4149                           
  4150                           ;dc_motor.c: 276:     while (i>0) {
  4151   001B4C  5040               	movf	lostReturnHome@i^0,w,c
  4152   001B4E  A4D8               	btfss	status,2,c
  4153   001B50  EFAC  F00D         	goto	u2151
  4154   001B54  EFAE  F00D         	goto	u2150
  4155   001B58                     u2151:
  4156   001B58  EFFA  F00A         	goto	l3385
  4157   001B5C                     u2150:
  4158   001B5C  0012               	return		;funcret
  4159   001B5E                     __end_of_lostReturnHome:
  4160                           	callstack 0
  4161                           
  4162 ;; *************** function _stop *****************
  4163 ;; Defined at:
  4164 ;;		line 348 in file "dc_motor.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4167 ;;		 -> main@motorL(10), 
  4168 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4169 ;;		 -> main@motorR(10), 
  4170 ;;  straightRamp    1   34[COMRAM] unsigned char 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  cur_power       2   40[COMRAM] int 
  4173 ;;  i               2   38[COMRAM] int 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4183 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4184 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4185 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4186 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4187 ;;Total ram usage:       12 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; Hardware stack levels required when called: 7
  4190 ;; This function calls:
  4191 ;;		_setMotorPWM
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;;		_returnHome
  4195 ;;		_lostReturnHome
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text4
  4200   0035F2                     __ptext4:
  4201                           	callstack 0
  4202   0035F2                     _stop:
  4203                           	callstack 23
  4204   0035F2                     
  4205                           ;dc_motor.c: 348: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 349: {;dc_motor.c: 350:     mL->direction = 1;
  4206   0035F2  EE20 F001          	lfsr	2,1
  4207   0035F6  501F               	movf	stop@mL^0,w,c
  4208   0035F8  26D9               	addwf	fsr2l,f,c
  4209   0035FA  5020               	movf	(stop@mL+1)^0,w,c
  4210   0035FC  22DA               	addwfc	fsr2h,f,c
  4211   0035FE  0E01               	movlw	1
  4212   003600  6EDF               	movwf	indf2,c
  4213                           
  4214                           ;dc_motor.c: 351:     mR->direction = 1;
  4215   003602  EE20 F001          	lfsr	2,1
  4216   003606  5021               	movf	stop@mR^0,w,c
  4217   003608  26D9               	addwf	fsr2l,f,c
  4218   00360A  5022               	movf	(stop@mR+1)^0,w,c
  4219   00360C  22DA               	addwfc	fsr2h,f,c
  4220   00360E  0E01               	movlw	1
  4221   003610  6EDF               	movwf	indf2,c
  4222                           
  4223                           ;dc_motor.c: 352:     int i;;dc_motor.c: 353:     int cur_power;;dc_motor.c: 354:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  4224   003612  C01F  FFD9         	movff	stop@mL,fsr2l
  4225   003616  C020  FFDA         	movff	stop@mL+1,fsr2h
  4226   00361A  50DF               	movf	indf2,w,c
  4227   00361C  6E24               	movwf	??_stop^0,c
  4228   00361E  EE20 F009          	lfsr	2,9
  4229   003622  501F               	movf	stop@mL^0,w,c
  4230   003624  26D9               	addwf	fsr2l,f,c
  4231   003626  5020               	movf	(stop@mL+1)^0,w,c
  4232   003628  22DA               	addwfc	fsr2h,f,c
  4233   00362A  50DF               	movf	indf2,w,c
  4234   00362C  6E25               	movwf	(??_stop+1)^0,c
  4235   00362E  5025               	movf	(??_stop+1)^0,w,c
  4236   003630  5C24               	subwf	??_stop^0,w,c
  4237   003632  6E29               	movwf	stop@cur_power^0,c
  4238   003634  6A2A               	clrf	(stop@cur_power+1)^0,c
  4239   003636  A0D8               	btfss	status,0,c
  4240   003638  062A               	decf	(stop@cur_power+1)^0,f,c
  4241   00363A                     l2615:
  4242   00363A  BE2A               	btfsc	(stop@cur_power+1)^0,7,c
  4243   00363C  EF24  F01B         	goto	u1360
  4244   003640  EF22  F01B         	goto	u1361
  4245   003644                     u1361:
  4246   003644  EF26  F01B         	goto	l2619
  4247   003648                     u1360:
  4248   003648  EF72  F01B         	goto	l2635
  4249   00364C                     l2619:
  4250                           
  4251                           ;dc_motor.c: 355:         mL->power = cur_power+mL->compensation;
  4252   00364C  EE20 F009          	lfsr	2,9
  4253   003650  501F               	movf	stop@mL^0,w,c
  4254   003652  26D9               	addwf	fsr2l,f,c
  4255   003654  5020               	movf	(stop@mL+1)^0,w,c
  4256   003656  22DA               	addwfc	fsr2h,f,c
  4257   003658  50DF               	movf	indf2,w,c
  4258   00365A  2429               	addwf	stop@cur_power^0,w,c
  4259   00365C  C01F  FFD9         	movff	stop@mL,fsr2l
  4260   003660  C020  FFDA         	movff	stop@mL+1,fsr2h
  4261   003664  6EDF               	movwf	indf2,c
  4262                           
  4263                           ;dc_motor.c: 356:         mR->power = cur_power+mR->compensation;
  4264   003666  EE20 F009          	lfsr	2,9
  4265   00366A  5021               	movf	stop@mR^0,w,c
  4266   00366C  26D9               	addwf	fsr2l,f,c
  4267   00366E  5022               	movf	(stop@mR+1)^0,w,c
  4268   003670  22DA               	addwfc	fsr2h,f,c
  4269   003672  50DF               	movf	indf2,w,c
  4270   003674  2429               	addwf	stop@cur_power^0,w,c
  4271   003676  C021  FFD9         	movff	stop@mR,fsr2l
  4272   00367A  C022  FFDA         	movff	stop@mR+1,fsr2h
  4273   00367E  6EDF               	movwf	indf2,c
  4274   003680                     
  4275                           ;dc_motor.c: 357:         setMotorPWM(mL);
  4276   003680  C01F  F019         	movff	stop@mL,setMotorPWM@m
  4277   003684  C020  F01A         	movff	stop@mL+1,setMotorPWM@m+1
  4278   003688  EC18  F019         	call	_setMotorPWM	;wreg free
  4279   00368C                     
  4280                           ;dc_motor.c: 358:         setMotorPWM(mR);
  4281   00368C  C021  F019         	movff	stop@mR,setMotorPWM@m
  4282   003690  C022  F01A         	movff	stop@mR+1,setMotorPWM@m+1
  4283   003694  EC18  F019         	call	_setMotorPWM	;wreg free
  4284   003698                     
  4285                           ;dc_motor.c: 359:         for (i=0;i<straightRamp;i++) {
  4286   003698  0E00               	movlw	0
  4287   00369A  6E28               	movwf	(stop@i+1)^0,c
  4288   00369C  0E00               	movlw	0
  4289   00369E  6E27               	movwf	stop@i^0,c
  4290   0036A0  EF5B  F01B         	goto	l568
  4291   0036A4                     l2627:
  4292                           
  4293                           ;dc_motor.c: 360:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4294   0036A4  0ED0               	movlw	208
  4295   0036A6  6E24               	movwf	??_stop^0,c
  4296   0036A8  0ECA               	movlw	202
  4297   0036AA                     u3407:
  4298   0036AA  2EE8               	decfsz	wreg,f,c
  4299   0036AC  D7FE               	bra	u3407
  4300   0036AE  2E24               	decfsz	??_stop^0,f,c
  4301   0036B0  D7FC               	bra	u3407
  4302   0036B2                     
  4303                           ;dc_motor.c: 361:         }
  4304   0036B2  4A27               	infsnz	stop@i^0,f,c
  4305   0036B4  2A28               	incf	(stop@i+1)^0,f,c
  4306   0036B6                     l568:
  4307   0036B6  5023               	movf	stop@straightRamp^0,w,c
  4308   0036B8  6E24               	movwf	??_stop^0,c
  4309   0036BA  6A25               	clrf	(??_stop+1)^0,c
  4310   0036BC  5024               	movf	??_stop^0,w,c
  4311   0036BE  5C27               	subwf	stop@i^0,w,c
  4312   0036C0  5028               	movf	(stop@i+1)^0,w,c
  4313   0036C2  0A80               	xorlw	128
  4314   0036C4  6E26               	movwf	(??_stop+2)^0,c
  4315   0036C6  5025               	movf	(??_stop+1)^0,w,c
  4316   0036C8  0A80               	xorlw	128
  4317   0036CA  5826               	subwfb	(??_stop+2)^0,w,c
  4318   0036CC  A0D8               	btfss	status,0,c
  4319   0036CE  EF6B  F01B         	goto	u1371
  4320   0036D2  EF6D  F01B         	goto	u1370
  4321   0036D6                     u1371:
  4322   0036D6  EF52  F01B         	goto	l2627
  4323   0036DA                     u1370:
  4324   0036DA                     
  4325                           ;dc_motor.c: 362:     }
  4326   0036DA  0629               	decf	stop@cur_power^0,f,c
  4327   0036DC  A0D8               	btfss	status,0,c
  4328   0036DE  062A               	decf	(stop@cur_power+1)^0,f,c
  4329   0036E0  EF1D  F01B         	goto	l2615
  4330   0036E4                     l2635:
  4331                           
  4332                           ;dc_motor.c: 363:     mL->power = 0;
  4333   0036E4  C01F  FFD9         	movff	stop@mL,fsr2l
  4334   0036E8  C020  FFDA         	movff	stop@mL+1,fsr2h
  4335   0036EC  6ADF               	clrf	indf2,c
  4336                           
  4337                           ;dc_motor.c: 364:     mR->power = 0;
  4338   0036EE  C021  FFD9         	movff	stop@mR,fsr2l
  4339   0036F2  C022  FFDA         	movff	stop@mR+1,fsr2h
  4340   0036F6  6ADF               	clrf	indf2,c
  4341   0036F8  0012               	return		;funcret
  4342   0036FA                     __end_of_stop:
  4343                           	callstack 0
  4344                           
  4345 ;; *************** function _reverseOneSquare *****************
  4346 ;; Defined at:
  4347 ;;		line 449 in file "dc_motor.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4350 ;;		 -> main@motorL(10), 
  4351 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4352 ;;		 -> main@motorR(10), 
  4353 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4354 ;;  reverseDurat    1   35[COMRAM] unsigned char 
  4355 ;;  straightRamp    1   36[COMRAM] unsigned char 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  cur_power       2   42[COMRAM] int 
  4358 ;;  i               2   40[COMRAM] int 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  1    wreg      void 
  4361 ;; Registers used:
  4362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4368 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4369 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4370 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4371 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4372 ;;Total ram usage:       14 bytes
  4373 ;; Hardware stack levels used: 1
  4374 ;; Hardware stack levels required when called: 7
  4375 ;; This function calls:
  4376 ;;		_setMotorPWM
  4377 ;; This function is called by:
  4378 ;;		_move
  4379 ;;		_returnHome
  4380 ;;		_lostReturnHome
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text5
  4385   002CA2                     __ptext5:
  4386                           	callstack 0
  4387   002CA2                     _reverseOneSquare:
  4388                           	callstack 22
  4389   002CA2                     
  4390                           ;dc_motor.c: 449: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned char reverseDuration, unsigned char straightRamp);dc_motor.c: 450: {;dc_motor.c
      +                          : 451:     mL->direction = 0;
  4391   002CA2  EE20 F001          	lfsr	2,1
  4392   002CA6  501F               	movf	reverseOneSquare@mL^0,w,c
  4393   002CA8  26D9               	addwf	fsr2l,f,c
  4394   002CAA  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4395   002CAC  22DA               	addwfc	fsr2h,f,c
  4396   002CAE  6ADF               	clrf	indf2,c
  4397                           
  4398                           ;dc_motor.c: 452:     mR->direction = 0;
  4399   002CB0  EE20 F001          	lfsr	2,1
  4400   002CB4  5021               	movf	reverseOneSquare@mR^0,w,c
  4401   002CB6  26D9               	addwf	fsr2l,f,c
  4402   002CB8  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4403   002CBA  22DA               	addwfc	fsr2h,f,c
  4404   002CBC  6ADF               	clrf	indf2,c
  4405   002CBE                     
  4406                           ;dc_motor.c: 453:     int i;;dc_motor.c: 454:     int cur_power;;dc_motor.c: 455:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4407   002CBE  0E00               	movlw	0
  4408   002CC0  6E2C               	movwf	(reverseOneSquare@cur_power+1)^0,c
  4409   002CC2  0E01               	movlw	1
  4410   002CC4  6E2B               	movwf	reverseOneSquare@cur_power^0,c
  4411   002CC6  EFAE  F016         	goto	l2767
  4412   002CCA                     l2753:
  4413                           
  4414                           ;dc_motor.c: 456:         mL->power = cur_power+mL->compensation;
  4415   002CCA  EE20 F009          	lfsr	2,9
  4416   002CCE  501F               	movf	reverseOneSquare@mL^0,w,c
  4417   002CD0  26D9               	addwf	fsr2l,f,c
  4418   002CD2  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4419   002CD4  22DA               	addwfc	fsr2h,f,c
  4420   002CD6  50DF               	movf	indf2,w,c
  4421   002CD8  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4422   002CDA  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4423   002CDE  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4424   002CE2  6EDF               	movwf	indf2,c
  4425                           
  4426                           ;dc_motor.c: 457:         mR->power = cur_power+mR->compensation;
  4427   002CE4  EE20 F009          	lfsr	2,9
  4428   002CE8  5021               	movf	reverseOneSquare@mR^0,w,c
  4429   002CEA  26D9               	addwf	fsr2l,f,c
  4430   002CEC  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4431   002CEE  22DA               	addwfc	fsr2h,f,c
  4432   002CF0  50DF               	movf	indf2,w,c
  4433   002CF2  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4434   002CF4  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4435   002CF8  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4436   002CFC  6EDF               	movwf	indf2,c
  4437   002CFE                     
  4438                           ;dc_motor.c: 458:         setMotorPWM(mL);
  4439   002CFE  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4440   002D02  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4441   002D06  EC18  F019         	call	_setMotorPWM	;wreg free
  4442   002D0A                     
  4443                           ;dc_motor.c: 459:         setMotorPWM(mR);
  4444   002D0A  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4445   002D0E  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4446   002D12  EC18  F019         	call	_setMotorPWM	;wreg free
  4447   002D16                     
  4448                           ;dc_motor.c: 460:         for (i=0;i<straightRamp;i++) {
  4449   002D16  0E00               	movlw	0
  4450   002D18  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4451   002D1A  0E00               	movlw	0
  4452   002D1C  6E29               	movwf	reverseOneSquare@i^0,c
  4453   002D1E  EF9A  F016         	goto	l619
  4454   002D22                     l2761:
  4455                           
  4456                           ;dc_motor.c: 461:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4457   002D22  0ED0               	movlw	208
  4458   002D24  6E26               	movwf	??_reverseOneSquare^0,c
  4459   002D26  0ECA               	movlw	202
  4460   002D28                     u3417:
  4461   002D28  2EE8               	decfsz	wreg,f,c
  4462   002D2A  D7FE               	bra	u3417
  4463   002D2C  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4464   002D2E  D7FC               	bra	u3417
  4465   002D30                     
  4466                           ;dc_motor.c: 462:         }
  4467   002D30  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4468   002D32  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4469   002D34                     l619:
  4470   002D34  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4471   002D36  6E26               	movwf	??_reverseOneSquare^0,c
  4472   002D38  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4473   002D3A  5026               	movf	??_reverseOneSquare^0,w,c
  4474   002D3C  5C29               	subwf	reverseOneSquare@i^0,w,c
  4475   002D3E  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4476   002D40  0A80               	xorlw	128
  4477   002D42  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4478   002D44  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4479   002D46  0A80               	xorlw	128
  4480   002D48  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4481   002D4A  A0D8               	btfss	status,0,c
  4482   002D4C  EFAA  F016         	goto	u1501
  4483   002D50  EFAC  F016         	goto	u1500
  4484   002D54                     u1501:
  4485   002D54  EF91  F016         	goto	l2761
  4486   002D58                     u1500:
  4487   002D58                     
  4488                           ;dc_motor.c: 463:     }
  4489   002D58  4A2B               	infsnz	reverseOneSquare@cur_power^0,f,c
  4490   002D5A  2A2C               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  4491   002D5C                     l2767:
  4492   002D5C  5023               	movf	reverseOneSquare@straightSpeed^0,w,c
  4493   002D5E  6E26               	movwf	??_reverseOneSquare^0,c
  4494   002D60  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4495   002D62  502B               	movf	reverseOneSquare@cur_power^0,w,c
  4496   002D64  5C26               	subwf	??_reverseOneSquare^0,w,c
  4497   002D66  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4498   002D68  0A80               	xorlw	128
  4499   002D6A  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4500   002D6C  502C               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  4501   002D6E  0A80               	xorlw	128
  4502   002D70  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4503   002D72  B0D8               	btfsc	status,0,c
  4504   002D74  EFBE  F016         	goto	u1511
  4505   002D78  EFC0  F016         	goto	u1510
  4506   002D7C                     u1511:
  4507   002D7C  EF65  F016         	goto	l2753
  4508   002D80                     u1510:
  4509   002D80                     
  4510                           ;dc_motor.c: 465:     for (i=0;i<reverseDuration;i++) {
  4511   002D80  0E00               	movlw	0
  4512   002D82  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4513   002D84  0E00               	movlw	0
  4514   002D86  6E29               	movwf	reverseOneSquare@i^0,c
  4515   002D88  EFCF  F016         	goto	l623
  4516   002D8C                     l2771:
  4517                           
  4518                           ;dc_motor.c: 466:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4519   002D8C  0ED0               	movlw	208
  4520   002D8E  6E26               	movwf	??_reverseOneSquare^0,c
  4521   002D90  0ECA               	movlw	202
  4522   002D92                     u3427:
  4523   002D92  2EE8               	decfsz	wreg,f,c
  4524   002D94  D7FE               	bra	u3427
  4525   002D96  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4526   002D98  D7FC               	bra	u3427
  4527   002D9A                     
  4528                           ;dc_motor.c: 467:         }
  4529   002D9A  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4530   002D9C  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4531   002D9E                     l623:
  4532   002D9E  5024               	movf	reverseOneSquare@reverseDuration^0,w,c
  4533   002DA0  6E26               	movwf	??_reverseOneSquare^0,c
  4534   002DA2  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4535   002DA4  5026               	movf	??_reverseOneSquare^0,w,c
  4536   002DA6  5C29               	subwf	reverseOneSquare@i^0,w,c
  4537   002DA8  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4538   002DAA  0A80               	xorlw	128
  4539   002DAC  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4540   002DAE  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4541   002DB0  0A80               	xorlw	128
  4542   002DB2  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4543   002DB4  A0D8               	btfss	status,0,c
  4544   002DB6  EFDF  F016         	goto	u1521
  4545   002DBA  EFE1  F016         	goto	u1520
  4546   002DBE                     u1521:
  4547   002DBE  EFC6  F016         	goto	l2771
  4548   002DC2                     u1520:
  4549   002DC2                     
  4550                           ;dc_motor.c: 469:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  4551   002DC2  C023  F02B         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  4552   002DC6  6A2C               	clrf	(reverseOneSquare@cur_power+1)^0,c
  4553   002DC8                     l2775:
  4554   002DC8  BE2C               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  4555   002DCA  EFEB  F016         	goto	u1530
  4556   002DCE  EFE9  F016         	goto	u1531
  4557   002DD2                     u1531:
  4558   002DD2  EFED  F016         	goto	l2779
  4559   002DD6                     u1530:
  4560   002DD6  EF39  F017         	goto	l2795
  4561   002DDA                     l2779:
  4562                           
  4563                           ;dc_motor.c: 470:         mL->power = cur_power+mL->compensation;
  4564   002DDA  EE20 F009          	lfsr	2,9
  4565   002DDE  501F               	movf	reverseOneSquare@mL^0,w,c
  4566   002DE0  26D9               	addwf	fsr2l,f,c
  4567   002DE2  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4568   002DE4  22DA               	addwfc	fsr2h,f,c
  4569   002DE6  50DF               	movf	indf2,w,c
  4570   002DE8  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4571   002DEA  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4572   002DEE  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4573   002DF2  6EDF               	movwf	indf2,c
  4574                           
  4575                           ;dc_motor.c: 471:         mR->power = cur_power+mR->compensation;
  4576   002DF4  EE20 F009          	lfsr	2,9
  4577   002DF8  5021               	movf	reverseOneSquare@mR^0,w,c
  4578   002DFA  26D9               	addwf	fsr2l,f,c
  4579   002DFC  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4580   002DFE  22DA               	addwfc	fsr2h,f,c
  4581   002E00  50DF               	movf	indf2,w,c
  4582   002E02  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4583   002E04  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4584   002E08  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4585   002E0C  6EDF               	movwf	indf2,c
  4586   002E0E                     
  4587                           ;dc_motor.c: 472:         setMotorPWM(mL);
  4588   002E0E  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4589   002E12  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4590   002E16  EC18  F019         	call	_setMotorPWM	;wreg free
  4591   002E1A                     
  4592                           ;dc_motor.c: 473:         setMotorPWM(mR);
  4593   002E1A  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4594   002E1E  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4595   002E22  EC18  F019         	call	_setMotorPWM	;wreg free
  4596   002E26                     
  4597                           ;dc_motor.c: 474:         for (i=0;i<straightRamp;i++) {
  4598   002E26  0E00               	movlw	0
  4599   002E28  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4600   002E2A  0E00               	movlw	0
  4601   002E2C  6E29               	movwf	reverseOneSquare@i^0,c
  4602   002E2E  EF22  F017         	goto	l628
  4603   002E32                     l2787:
  4604                           
  4605                           ;dc_motor.c: 475:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4606   002E32  0ED0               	movlw	208
  4607   002E34  6E26               	movwf	??_reverseOneSquare^0,c
  4608   002E36  0ECA               	movlw	202
  4609   002E38                     u3437:
  4610   002E38  2EE8               	decfsz	wreg,f,c
  4611   002E3A  D7FE               	bra	u3437
  4612   002E3C  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4613   002E3E  D7FC               	bra	u3437
  4614   002E40                     
  4615                           ;dc_motor.c: 476:         }
  4616   002E40  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4617   002E42  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4618   002E44                     l628:
  4619   002E44  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4620   002E46  6E26               	movwf	??_reverseOneSquare^0,c
  4621   002E48  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4622   002E4A  5026               	movf	??_reverseOneSquare^0,w,c
  4623   002E4C  5C29               	subwf	reverseOneSquare@i^0,w,c
  4624   002E4E  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4625   002E50  0A80               	xorlw	128
  4626   002E52  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4627   002E54  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4628   002E56  0A80               	xorlw	128
  4629   002E58  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4630   002E5A  A0D8               	btfss	status,0,c
  4631   002E5C  EF32  F017         	goto	u1541
  4632   002E60  EF34  F017         	goto	u1540
  4633   002E64                     u1541:
  4634   002E64  EF19  F017         	goto	l2787
  4635   002E68                     u1540:
  4636   002E68                     
  4637                           ;dc_motor.c: 477:     }
  4638   002E68  062B               	decf	reverseOneSquare@cur_power^0,f,c
  4639   002E6A  A0D8               	btfss	status,0,c
  4640   002E6C  062C               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  4641   002E6E  EFE4  F016         	goto	l2775
  4642   002E72                     l2795:
  4643                           
  4644                           ;dc_motor.c: 478:     mL->power = 0;
  4645   002E72  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4646   002E76  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4647   002E7A  6ADF               	clrf	indf2,c
  4648                           
  4649                           ;dc_motor.c: 479:     mR->power = 0;
  4650   002E7C  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4651   002E80  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4652   002E84  6ADF               	clrf	indf2,c
  4653   002E86  0012               	return		;funcret
  4654   002E88                     __end_of_reverseOneSquare:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _resetTimer *****************
  4658 ;; Defined at:
  4659 ;;		line 23 in file "timers.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; Hardware stack levels required when called: 5
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_main
  4684 ;;		_returnHome
  4685 ;;		_lostReturnHome
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text6
  4690   003F24                     __ptext6:
  4691                           	callstack 0
  4692   003F24                     _resetTimer:
  4693                           	callstack 25
  4694   003F24                     
  4695                           ;timers.c: 25:     TMR0H=0;
  4696   003F24  0E00               	movlw	0
  4697   003F26  6ED4               	movwf	212,c	;volatile
  4698                           
  4699                           ;timers.c: 26:     TMR0L=0;
  4700   003F28  0E00               	movlw	0
  4701   003F2A  6ED3               	movwf	211,c	;volatile
  4702   003F2C  0012               	return		;funcret
  4703   003F2E                     __end_of_resetTimer:
  4704                           	callstack 0
  4705                           
  4706 ;; *************** function _get16bitTMR0val *****************
  4707 ;; Defined at:
  4708 ;;		line 33 in file "timers.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;		None
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  timer_val       2   19[COMRAM] unsigned int 
  4713 ;;  timer_high      2   17[COMRAM] unsigned int 
  4714 ;;  timer_low       2   15[COMRAM] unsigned int 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  2   11[COMRAM] unsigned int 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4724 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4727 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4728 ;;Total ram usage:       10 bytes
  4729 ;; Hardware stack levels used: 1
  4730 ;; Hardware stack levels required when called: 5
  4731 ;; This function calls:
  4732 ;;		Nothing
  4733 ;; This function is called by:
  4734 ;;		_main
  4735 ;;		_returnHome
  4736 ;;		_lostReturnHome
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text7
  4741   003D20                     __ptext7:
  4742                           	callstack 0
  4743   003D20                     _get16bitTMR0val:
  4744                           	callstack 23
  4745   003D20                     
  4746                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  4747   003D20  CFD3 F010          	movff	4051,get16bitTMR0val@timer_low	;volatile
  4748   003D24  6A11               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  4749                           
  4750                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  4751   003D26  CFD4 F012          	movff	4052,get16bitTMR0val@timer_high	;volatile
  4752   003D2A  6A13               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  4753   003D2C                     
  4754                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  4755   003D2C  5012               	movf	get16bitTMR0val@timer_high^0,w,c
  4756   003D2E  6E0F               	movwf	(??_get16bitTMR0val+1)^0,c
  4757   003D30  6A0E               	clrf	??_get16bitTMR0val^0,c
  4758   003D32  5010               	movf	get16bitTMR0val@timer_low^0,w,c
  4759   003D34  100E               	iorwf	??_get16bitTMR0val^0,w,c
  4760   003D36  6E14               	movwf	get16bitTMR0val@timer_val^0,c
  4761   003D38  5011               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  4762   003D3A  100F               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  4763   003D3C  6E15               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  4764   003D3E                     
  4765                           ;timers.c: 39:     return timer_val;
  4766   003D3E  C014  F00C         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  4767   003D42  C015  F00D         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  4768   003D46  0012               	return		;funcret
  4769   003D48                     __end_of_get16bitTMR0val:
  4770                           	callstack 0
  4771                           
  4772 ;; *************** function _fullSpeedAhead *****************
  4773 ;; Defined at:
  4774 ;;		line 432 in file "dc_motor.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4777 ;;		 -> main@motorL(10), 
  4778 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4779 ;;		 -> main@motorR(10), 
  4780 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4781 ;;  straightRamp    1   35[COMRAM] unsigned char 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  cur_power       2   41[COMRAM] int 
  4784 ;;  i               2   39[COMRAM] int 
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4794 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4795 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4796 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4797 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4798 ;;Total ram usage:       13 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; Hardware stack levels required when called: 7
  4801 ;; This function calls:
  4802 ;;		_setMotorPWM
  4803 ;; This function is called by:
  4804 ;;		_main
  4805 ;;		_move
  4806 ;;		_returnHome
  4807 ;;		_lostReturnHome
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text8
  4812   0036FA                     __ptext8:
  4813                           	callstack 0
  4814   0036FA                     _fullSpeedAhead:
  4815                           	callstack 21
  4816   0036FA                     
  4817                           ;dc_motor.c: 432: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 433: {;dc_motor.c: 434:     mL->direction = 1;
  4818   0036FA  EE20 F001          	lfsr	2,1
  4819   0036FE  501F               	movf	fullSpeedAhead@mL^0,w,c
  4820   003700  26D9               	addwf	fsr2l,f,c
  4821   003702  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4822   003704  22DA               	addwfc	fsr2h,f,c
  4823   003706  0E01               	movlw	1
  4824   003708  6EDF               	movwf	indf2,c
  4825                           
  4826                           ;dc_motor.c: 435:     mR->direction = 1;
  4827   00370A  EE20 F001          	lfsr	2,1
  4828   00370E  5021               	movf	fullSpeedAhead@mR^0,w,c
  4829   003710  26D9               	addwf	fsr2l,f,c
  4830   003712  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4831   003714  22DA               	addwfc	fsr2h,f,c
  4832   003716  0E01               	movlw	1
  4833   003718  6EDF               	movwf	indf2,c
  4834   00371A                     
  4835                           ;dc_motor.c: 436:     int i;;dc_motor.c: 437:     int cur_power;;dc_motor.c: 438:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4836   00371A  0E00               	movlw	0
  4837   00371C  6E2B               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  4838   00371E  0E01               	movlw	1
  4839   003720  6E2A               	movwf	fullSpeedAhead@cur_power^0,c
  4840   003722  EFDC  F01B         	goto	l2601
  4841   003726                     l2587:
  4842                           
  4843                           ;dc_motor.c: 439:         mL->power = cur_power+mL->compensation;
  4844   003726  EE20 F009          	lfsr	2,9
  4845   00372A  501F               	movf	fullSpeedAhead@mL^0,w,c
  4846   00372C  26D9               	addwf	fsr2l,f,c
  4847   00372E  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4848   003730  22DA               	addwfc	fsr2h,f,c
  4849   003732  50DF               	movf	indf2,w,c
  4850   003734  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4851   003736  C01F  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4852   00373A  C020  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4853   00373E  6EDF               	movwf	indf2,c
  4854                           
  4855                           ;dc_motor.c: 440:         mR->power = cur_power+mR->compensation;
  4856   003740  EE20 F009          	lfsr	2,9
  4857   003744  5021               	movf	fullSpeedAhead@mR^0,w,c
  4858   003746  26D9               	addwf	fsr2l,f,c
  4859   003748  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4860   00374A  22DA               	addwfc	fsr2h,f,c
  4861   00374C  50DF               	movf	indf2,w,c
  4862   00374E  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4863   003750  C021  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4864   003754  C022  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4865   003758  6EDF               	movwf	indf2,c
  4866   00375A                     
  4867                           ;dc_motor.c: 441:         setMotorPWM(mL);
  4868   00375A  C01F  F019         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4869   00375E  C020  F01A         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4870   003762  EC18  F019         	call	_setMotorPWM	;wreg free
  4871   003766                     
  4872                           ;dc_motor.c: 442:         setMotorPWM(mR);
  4873   003766  C021  F019         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4874   00376A  C022  F01A         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4875   00376E  EC18  F019         	call	_setMotorPWM	;wreg free
  4876   003772                     
  4877                           ;dc_motor.c: 443:         for (i=0;i<straightRamp;i++) {
  4878   003772  0E00               	movlw	0
  4879   003774  6E29               	movwf	(fullSpeedAhead@i+1)^0,c
  4880   003776  0E00               	movlw	0
  4881   003778  6E28               	movwf	fullSpeedAhead@i^0,c
  4882   00377A  EFC8  F01B         	goto	l610
  4883   00377E                     l2595:
  4884                           
  4885                           ;dc_motor.c: 444:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4886   00377E  0ED0               	movlw	208
  4887   003780  6E25               	movwf	??_fullSpeedAhead^0,c
  4888   003782  0ECA               	movlw	202
  4889   003784                     u3447:
  4890   003784  2EE8               	decfsz	wreg,f,c
  4891   003786  D7FE               	bra	u3447
  4892   003788  2E25               	decfsz	??_fullSpeedAhead^0,f,c
  4893   00378A  D7FC               	bra	u3447
  4894   00378C                     
  4895                           ;dc_motor.c: 445:         }
  4896   00378C  4A28               	infsnz	fullSpeedAhead@i^0,f,c
  4897   00378E  2A29               	incf	(fullSpeedAhead@i+1)^0,f,c
  4898   003790                     l610:
  4899   003790  5024               	movf	fullSpeedAhead@straightRamp^0,w,c
  4900   003792  6E25               	movwf	??_fullSpeedAhead^0,c
  4901   003794  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  4902   003796  5025               	movf	??_fullSpeedAhead^0,w,c
  4903   003798  5C28               	subwf	fullSpeedAhead@i^0,w,c
  4904   00379A  5029               	movf	(fullSpeedAhead@i+1)^0,w,c
  4905   00379C  0A80               	xorlw	128
  4906   00379E  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  4907   0037A0  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  4908   0037A2  0A80               	xorlw	128
  4909   0037A4  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  4910   0037A6  A0D8               	btfss	status,0,c
  4911   0037A8  EFD8  F01B         	goto	u1341
  4912   0037AC  EFDA  F01B         	goto	u1340
  4913   0037B0                     u1341:
  4914   0037B0  EFBF  F01B         	goto	l2595
  4915   0037B4                     u1340:
  4916   0037B4                     
  4917                           ;dc_motor.c: 446:     }
  4918   0037B4  4A2A               	infsnz	fullSpeedAhead@cur_power^0,f,c
  4919   0037B6  2A2B               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  4920   0037B8                     l2601:
  4921   0037B8  5023               	movf	fullSpeedAhead@straightSpeed^0,w,c
  4922   0037BA  6E25               	movwf	??_fullSpeedAhead^0,c
  4923   0037BC  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  4924   0037BE  502A               	movf	fullSpeedAhead@cur_power^0,w,c
  4925   0037C0  5C25               	subwf	??_fullSpeedAhead^0,w,c
  4926   0037C2  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  4927   0037C4  0A80               	xorlw	128
  4928   0037C6  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  4929   0037C8  502B               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  4930   0037CA  0A80               	xorlw	128
  4931   0037CC  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  4932   0037CE  B0D8               	btfsc	status,0,c
  4933   0037D0  EFEC  F01B         	goto	u1351
  4934   0037D4  EFEE  F01B         	goto	u1350
  4935   0037D8                     u1351:
  4936   0037D8  EF93  F01B         	goto	l2587
  4937   0037DC                     u1350:
  4938   0037DC  0012               	return		;funcret
  4939   0037DE                     __end_of_fullSpeedAhead:
  4940                           	callstack 0
  4941                           
  4942 ;; *************** function _initUSART4 *****************
  4943 ;; Defined at:
  4944 ;;		line 4 in file "serial.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used: 1
  4964 ;; Hardware stack levels required when called: 5
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_main
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text9
  4973   003E8E                     __ptext9:
  4974                           	callstack 0
  4975   003E8E                     _initUSART4:
  4976                           	callstack 25
  4977   003E8E                     
  4978                           ;serial.c: 7:     RC0PPS = 0x12;
  4979   003E8E  0E12               	movlw	18
  4980   003E90  010E               	movlb	14	; () banked
  4981   003E92  6F62               	movwf	98,b	;volatile
  4982                           
  4983                           ;serial.c: 8:     RX4PPS = 0x11;
  4984   003E94  0E11               	movlw	17
  4985   003E96  6F15               	movwf	21,b	;volatile
  4986   003E98                     
  4987                           ; BSR set to: 14
  4988                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  4989   003E98  97E9               	bcf	233,3,b	;volatile
  4990   003E9A                     
  4991                           ; BSR set to: 14
  4992                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  4993   003E9A  95E8               	bcf	232,2,b	;volatile
  4994                           
  4995                           ;serial.c: 13:     SP4BRGL = 51;
  4996   003E9C  0E33               	movlw	51
  4997   003E9E  6FE5               	movwf	229,b	;volatile
  4998                           
  4999                           ;serial.c: 14:     SP4BRGH = 0;
  5000   003EA0  0E00               	movlw	0
  5001   003EA2  6FE6               	movwf	230,b	;volatile
  5002   003EA4                     
  5003                           ; BSR set to: 14
  5004                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  5005   003EA4  89E7               	bsf	231,4,b	;volatile
  5006   003EA6                     
  5007                           ; BSR set to: 14
  5008                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  5009   003EA6  8BE8               	bsf	232,5,b	;volatile
  5010   003EA8                     
  5011                           ; BSR set to: 14
  5012                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  5013   003EA8  8FE7               	bsf	231,7,b	;volatile
  5014   003EAA                     
  5015                           ; BSR set to: 14
  5016   003EAA  0012               	return		;funcret
  5017   003EAC                     __end_of_initUSART4:
  5018                           	callstack 0
  5019                           
  5020 ;; *************** function _initDCmotorsPWM *****************
  5021 ;; Defined at:
  5022 ;;		line 8 in file "dc_motor.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  PWMperiod       2   11[COMRAM] unsigned int 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      void 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5039 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5040 ;;Total ram usage:        2 bytes
  5041 ;; Hardware stack levels used: 1
  5042 ;; Hardware stack levels required when called: 5
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_main
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text10
  5051   0038A2                     __ptext10:
  5052                           	callstack 0
  5053   0038A2                     _initDCmotorsPWM:
  5054                           	callstack 25
  5055   0038A2                     
  5056                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  5057   0038A2  947D               	bcf	125,2,c	;volatile
  5058                           
  5059                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  5060   0038A4  9485               	bcf	133,2,c	;volatile
  5061                           
  5062                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  5063   0038A6  987D               	bcf	125,4,c	;volatile
  5064                           
  5065                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  5066   0038A8  9885               	bcf	133,4,c	;volatile
  5067                           
  5068                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  5069   0038AA  9E7B               	bcf	123,7,c	;volatile
  5070                           
  5071                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  5072   0038AC  9E83               	bcf	131,7,c	;volatile
  5073                           
  5074                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  5075   0038AE  9C7F               	bcf	127,6,c	;volatile
  5076                           
  5077                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  5078   0038B0  9C87               	bcf	135,6,c	;volatile
  5079   0038B2                     
  5080                           ;dc_motor.c: 21:     RE2PPS=0x05;
  5081   0038B2  0E05               	movlw	5
  5082   0038B4  010E               	movlb	14	; () banked
  5083   0038B6  6F74               	movwf	116,b	;volatile
  5084                           
  5085                           ;dc_motor.c: 22:     RE4PPS=0x06;
  5086   0038B8  0E06               	movlw	6
  5087   0038BA  6F76               	movwf	118,b	;volatile
  5088                           
  5089                           ;dc_motor.c: 23:     RC7PPS=0x07;
  5090   0038BC  0E07               	movlw	7
  5091   0038BE  6F69               	movwf	105,b	;volatile
  5092                           
  5093                           ;dc_motor.c: 24:     RG6PPS=0x08;
  5094   0038C0  0E08               	movlw	8
  5095   0038C2  6F88               	movwf	136,b	;volatile
  5096                           
  5097                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  5098   0038C4  50BD               	movf	189,w,c	;volatile
  5099   0038C6  0B8F               	andlw	-113
  5100   0038C8  0930               	iorlw	48
  5101   0038CA  6EBD               	movwf	189,c	;volatile
  5102                           
  5103                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  5104   0038CC  0EE0               	movlw	-32
  5105   0038CE  16BE               	andwf	190,f,c	;volatile
  5106                           
  5107                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  5108   0038D0  50BF               	movf	191,w,c	;volatile
  5109   0038D2  0BF0               	andlw	-16
  5110   0038D4  0901               	iorlw	1
  5111   0038D6  6EBF               	movwf	191,c	;volatile
  5112   0038D8                     
  5113                           ; BSR set to: 14
  5114                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  5115   0038D8  C00C  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  5116   0038DC                     
  5117                           ; BSR set to: 14
  5118                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  5119   0038DC  8EBD               	bsf	189,7,c	;volatile
  5120                           
  5121                           ;dc_motor.c: 38:     CCPR1H=0;
  5122   0038DE  0E00               	movlw	0
  5123   0038E0  6EAA               	movwf	170,c	;volatile
  5124                           
  5125                           ;dc_motor.c: 39:     CCPR2H=0;
  5126   0038E2  0E00               	movlw	0
  5127   0038E4  6EA6               	movwf	166,c	;volatile
  5128                           
  5129                           ;dc_motor.c: 40:     CCPR3H=0;
  5130   0038E6  0E00               	movlw	0
  5131   0038E8  010F               	movlb	15	; () banked
  5132   0038EA  6F25               	movwf	37,b	;volatile
  5133                           
  5134                           ;dc_motor.c: 41:     CCPR4H=0;
  5135   0038EC  0E00               	movlw	0
  5136   0038EE  6F21               	movwf	33,b	;volatile
  5137                           
  5138                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  5139   0038F0  0EFC               	movlw	-4
  5140   0038F2  16AD               	andwf	173,f,c	;volatile
  5141                           
  5142                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  5143   0038F4  0EF3               	movlw	-13
  5144   0038F6  16AD               	andwf	173,f,c	;volatile
  5145                           
  5146                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  5147   0038F8  0ECF               	movlw	-49
  5148   0038FA  16AD               	andwf	173,f,c	;volatile
  5149                           
  5150                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  5151   0038FC  0E3F               	movlw	-193
  5152   0038FE  16AD               	andwf	173,f,c	;volatile
  5153   003900                     
  5154                           ; BSR set to: 15
  5155                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  5156   003900  88AB               	bsf	171,4,c	;volatile
  5157                           
  5158                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  5159   003902  50AB               	movf	171,w,c	;volatile
  5160   003904  0BF0               	andlw	-16
  5161   003906  090C               	iorlw	12
  5162   003908  6EAB               	movwf	171,c	;volatile
  5163   00390A                     
  5164                           ; BSR set to: 15
  5165                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  5166   00390A  8EAB               	bsf	171,7,c	;volatile
  5167   00390C                     
  5168                           ; BSR set to: 15
  5169                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  5170   00390C  88A7               	bsf	167,4,c	;volatile
  5171                           
  5172                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  5173   00390E  50A7               	movf	167,w,c	;volatile
  5174   003910  0BF0               	andlw	-16
  5175   003912  090C               	iorlw	12
  5176   003914  6EA7               	movwf	167,c	;volatile
  5177   003916                     
  5178                           ; BSR set to: 15
  5179                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  5180   003916  8EA7               	bsf	167,7,c	;volatile
  5181   003918                     
  5182                           ; BSR set to: 15
  5183                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  5184   003918  8926               	bsf	38,4,b	;volatile
  5185                           
  5186                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  5187   00391A  5126               	movf	38,w,b	;volatile
  5188   00391C  0BF0               	andlw	-16
  5189   00391E  090C               	iorlw	12
  5190   003920  6F26               	movwf	38,b	;volatile
  5191   003922                     
  5192                           ; BSR set to: 15
  5193                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  5194   003922  8F26               	bsf	38,7,b	;volatile
  5195   003924                     
  5196                           ; BSR set to: 15
  5197                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  5198   003924  8922               	bsf	34,4,b	;volatile
  5199                           
  5200                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  5201   003926  5122               	movf	34,w,b	;volatile
  5202   003928  0BF0               	andlw	-16
  5203   00392A  090C               	iorlw	12
  5204   00392C  6F22               	movwf	34,b	;volatile
  5205   00392E                     
  5206                           ; BSR set to: 15
  5207                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  5208   00392E  8F22               	bsf	34,7,b	;volatile
  5209   003930                     
  5210                           ; BSR set to: 15
  5211   003930  0012               	return		;funcret
  5212   003932                     __end_of_initDCmotorsPWM:
  5213                           	callstack 0
  5214                           
  5215 ;; *************** function _color_detect *****************
  5216 ;; Defined at:
  5217 ;;		line 138 in file "color.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  RGBC_n          8   11[COMRAM] struct RGBC_val
  5220 ;;  red             6   19[COMRAM] struct RGB_calib
  5221 ;;  green           6   25[COMRAM] struct RGB_calib
  5222 ;;  blue            6   31[COMRAM] struct RGB_calib
  5223 ;;  yellow          6   37[COMRAM] struct RGB_calib
  5224 ;;  pink            6   43[COMRAM] struct RGB_calib
  5225 ;;  orange          6   49[COMRAM] struct RGB_calib
  5226 ;;  lightBlue       6   55[COMRAM] struct RGB_calib
  5227 ;;  white           6   61[COMRAM] struct RGB_calib
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  color           1   69[COMRAM] unsigned char 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      unsigned char 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5239 ;;      Params:        56       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5242 ;;      Totals:        59       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5243 ;;Total ram usage:       59 bytes
  5244 ;; Hardware stack levels used: 1
  5245 ;; Hardware stack levels required when called: 5
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_main
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           	psect	text11
  5254   003932                     __ptext11:
  5255                           	callstack 0
  5256   003932                     _color_detect:
  5257                           	callstack 25
  5258   003932                     
  5259                           ;color.c: 142:     if ((red.R)-40 < RGBC_n.R) {
  5260   003932  0ED8               	movlw	216
  5261   003934  2414               	addwf	color_detect@red^0,w,c
  5262   003936  6E44               	movwf	??_color_detect^0,c
  5263   003938  0EFF               	movlw	255
  5264   00393A  2015               	addwfc	(color_detect@red+1)^0,w,c
  5265   00393C  6E45               	movwf	(??_color_detect+1)^0,c
  5266   00393E  500C               	movf	color_detect@RGBC_n^0,w,c
  5267   003940  5C44               	subwf	??_color_detect^0,w,c
  5268   003942  500D               	movf	(color_detect@RGBC_n+1)^0,w,c
  5269   003944  5845               	subwfb	(??_color_detect+1)^0,w,c
  5270   003946  B0D8               	btfsc	status,0,c
  5271   003948  EFA8  F01C         	goto	u1951
  5272   00394C  EFAA  F01C         	goto	u1950
  5273   003950                     u1951:
  5274   003950  EFAE  F01C         	goto	l3259
  5275   003954                     u1950:
  5276   003954                     
  5277                           ;color.c: 143:         color = 1;
  5278   003954  0E01               	movlw	1
  5279   003956  6E46               	movwf	color_detect@color^0,c
  5280                           
  5281                           ;color.c: 144:     }
  5282   003958  EFDA  F01C         	goto	l156
  5283   00395C                     l3259:
  5284   00395C  0EE7               	movlw	231
  5285   00395E  241C               	addwf	(color_detect@green+2)^0,w,c
  5286   003960  6E44               	movwf	??_color_detect^0,c
  5287   003962  0EFF               	movlw	255
  5288   003964  201D               	addwfc	(color_detect@green+3)^0,w,c
  5289   003966  6E45               	movwf	(??_color_detect+1)^0,c
  5290   003968  500E               	movf	(color_detect@RGBC_n+2)^0,w,c
  5291   00396A  5C44               	subwf	??_color_detect^0,w,c
  5292   00396C  500F               	movf	(color_detect@RGBC_n+3)^0,w,c
  5293   00396E  5845               	subwfb	(??_color_detect+1)^0,w,c
  5294   003970  B0D8               	btfsc	status,0,c
  5295   003972  EFBD  F01C         	goto	u1961
  5296   003976  EFBF  F01C         	goto	u1960
  5297   00397A                     u1961:
  5298   00397A  EFC3  F01C         	goto	l3263
  5299   00397E                     u1960:
  5300   00397E                     
  5301                           ;color.c: 147:         color = 2;
  5302   00397E  0E02               	movlw	2
  5303   003980  6E46               	movwf	color_detect@color^0,c
  5304                           
  5305                           ;color.c: 148:     }
  5306   003982  EFDA  F01C         	goto	l156
  5307   003986                     l3263:
  5308   003986  0ED8               	movlw	216
  5309   003988  2424               	addwf	(color_detect@blue+4)^0,w,c
  5310   00398A  6E44               	movwf	??_color_detect^0,c
  5311   00398C  0EFF               	movlw	255
  5312   00398E  2025               	addwfc	(color_detect@blue+5)^0,w,c
  5313   003990  6E45               	movwf	(??_color_detect+1)^0,c
  5314   003992  5010               	movf	(color_detect@RGBC_n+4)^0,w,c
  5315   003994  5C44               	subwf	??_color_detect^0,w,c
  5316   003996  5011               	movf	(color_detect@RGBC_n+5)^0,w,c
  5317   003998  5845               	subwfb	(??_color_detect+1)^0,w,c
  5318   00399A  B0D8               	btfsc	status,0,c
  5319   00399C  EFD2  F01C         	goto	u1971
  5320   0039A0  EFD4  F01C         	goto	u1970
  5321   0039A4                     u1971:
  5322   0039A4  EFD8  F01C         	goto	l3267
  5323   0039A8                     u1970:
  5324   0039A8                     
  5325                           ;color.c: 151:         color = 3;
  5326   0039A8  0E03               	movlw	3
  5327   0039AA  6E46               	movwf	color_detect@color^0,c
  5328                           
  5329                           ;color.c: 152:     }
  5330   0039AC  EFDA  F01C         	goto	l156
  5331   0039B0                     l3267:
  5332   0039B0  0E09               	movlw	9
  5333   0039B2  6E46               	movwf	color_detect@color^0,c
  5334   0039B4                     l156:
  5335                           
  5336                           ;color.c: 204:     return color;
  5337   0039B4  5046               	movf	color_detect@color^0,w,c
  5338   0039B6  0012               	return		;funcret
  5339   0039B8                     __end_of_color_detect:
  5340                           	callstack 0
  5341                           
  5342 ;; *************** function _color_click_init *****************
  5343 ;; Defined at:
  5344 ;;		line 7 in file "color.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;		None
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;		None
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg, status,2, status,0, cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5362 ;;Total ram usage:        1 bytes
  5363 ;; Hardware stack levels used: 1
  5364 ;; Hardware stack levels required when called: 9
  5365 ;; This function calls:
  5366 ;;		_I2C_2_Master_Init
  5367 ;;		_color_clear_init_interrupts
  5368 ;;		_color_writetoaddr
  5369 ;; This function is called by:
  5370 ;;		_main
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text12
  5375   003C88                     __ptext12:
  5376                           	callstack 0
  5377   003C88                     _color_click_init:
  5378                           	callstack 21
  5379   003C88                     
  5380                           ;color.c: 10:     I2C_2_Master_Init();
  5381   003C88  EC7B  F01E         	call	_I2C_2_Master_Init	;wreg free
  5382   003C8C                     
  5383                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  5384   003C8C  0E01               	movlw	1
  5385   003C8E  6E0E               	movwf	color_writetoaddr@value^0,c
  5386   003C90  0E00               	movlw	0
  5387   003C92  EC17  F01F         	call	_color_writetoaddr
  5388   003C96                     
  5389                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5390   003C96  0E3F               	movlw	63
  5391   003C98  6E15               	movwf	??_color_click_init^0,c
  5392   003C9A  0E55               	movlw	85
  5393   003C9C                     u3457:
  5394   003C9C  2EE8               	decfsz	wreg,f,c
  5395   003C9E  D7FE               	bra	u3457
  5396   003CA0  2E15               	decfsz	??_color_click_init^0,f,c
  5397   003CA2  D7FC               	bra	u3457
  5398   003CA4  0000               	nop	
  5399   003CA6                     
  5400                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  5401   003CA6  0E03               	movlw	3
  5402   003CA8  6E0E               	movwf	color_writetoaddr@value^0,c
  5403   003CAA  0E00               	movlw	0
  5404   003CAC  EC17  F01F         	call	_color_writetoaddr
  5405   003CB0                     
  5406                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  5407   003CB0  0ED5               	movlw	213
  5408   003CB2  6E0E               	movwf	color_writetoaddr@value^0,c
  5409   003CB4  0E01               	movlw	1
  5410   003CB6  EC17  F01F         	call	_color_writetoaddr
  5411   003CBA                     
  5412                           ;color.c: 23:     color_clear_init_interrupts();
  5413   003CBA  ECDC  F01C         	call	_color_clear_init_interrupts	;wreg free
  5414   003CBE  0012               	return		;funcret
  5415   003CC0                     __end_of_color_click_init:
  5416                           	callstack 0
  5417                           
  5418 ;; *************** function _color_clear_init_interrupts *****************
  5419 ;; Defined at:
  5420 ;;		line 27 in file "color.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;		None
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  low_threshol    2   18[COMRAM] unsigned int 
  5425 ;;  high_thresho    2   16[COMRAM] unsigned int 
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  1    wreg      void 
  5428 ;; Registers used:
  5429 ;;		wreg, status,2, status,0, cstack
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5438 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5439 ;;Total ram usage:        5 bytes
  5440 ;; Hardware stack levels used: 1
  5441 ;; Hardware stack levels required when called: 8
  5442 ;; This function calls:
  5443 ;;		_I2C_2_Master_Start
  5444 ;;		_I2C_2_Master_Stop
  5445 ;;		_I2C_2_Master_Write
  5446 ;;		_color_writetoaddr
  5447 ;; This function is called by:
  5448 ;;		_color_click_init
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text13
  5453   0039B8                     __ptext13:
  5454                           	callstack 0
  5455   0039B8                     _color_clear_init_interrupts:
  5456                           	callstack 21
  5457   0039B8                     
  5458                           ;color.c: 29:     I2C_2_Master_Start();
  5459   0039B8  EC9C  F01F         	call	_I2C_2_Master_Start	;wreg free
  5460                           
  5461                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  5462   0039BC  0E52               	movlw	82
  5463   0039BE  EC86  F01F         	call	_I2C_2_Master_Write
  5464                           
  5465                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  5466   0039C2  0EE6               	movlw	230
  5467   0039C4  EC86  F01F         	call	_I2C_2_Master_Write
  5468                           
  5469                           ;color.c: 32:     I2C_2_Master_Stop();
  5470   0039C8  EC97  F01F         	call	_I2C_2_Master_Stop	;wreg free
  5471   0039CC                     
  5472                           ;color.c: 35:     unsigned int high_threshold = ambient + 12;
  5473   0039CC  0E0C               	movlw	12
  5474   0039CE  244E               	addwf	_ambient^0,w,c
  5475   0039D0  6E11               	movwf	color_clear_init_interrupts@high_threshold^0,c
  5476   0039D2  0E00               	movlw	0
  5477   0039D4  204F               	addwfc	(_ambient+1)^0,w,c
  5478   0039D6  6E12               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  5479   0039D8                     
  5480                           ;color.c: 36:     unsigned int low_threshold = ambient - 12;
  5481   0039D8  0EF4               	movlw	244
  5482   0039DA  244E               	addwf	_ambient^0,w,c
  5483   0039DC  6E13               	movwf	color_clear_init_interrupts@low_threshold^0,c
  5484   0039DE  0EFF               	movlw	255
  5485   0039E0  204F               	addwfc	(_ambient+1)^0,w,c
  5486   0039E2  6E14               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  5487                           
  5488                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
  5489   0039E4  0E13               	movlw	19
  5490   0039E6  6E0E               	movwf	color_writetoaddr@value^0,c
  5491   0039E8  0E00               	movlw	0
  5492   0039EA  EC17  F01F         	call	_color_writetoaddr
  5493   0039EE                     
  5494                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5495   0039EE  0E3F               	movlw	63
  5496   0039F0  6E10               	movwf	??_color_clear_init_interrupts^0,c
  5497   0039F2  0E55               	movlw	85
  5498   0039F4                     u3467:
  5499   0039F4  2EE8               	decfsz	wreg,f,c
  5500   0039F6  D7FE               	bra	u3467
  5501   0039F8  2E10               	decfsz	??_color_clear_init_interrupts^0,f,c
  5502   0039FA  D7FC               	bra	u3467
  5503   0039FC  0000               	nop	
  5504   0039FE                     
  5505                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
  5506   0039FE  5012               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  5507   003A00  6E0E               	movwf	color_writetoaddr@value^0,c
  5508   003A02  0E07               	movlw	7
  5509   003A04  EC17  F01F         	call	_color_writetoaddr
  5510   003A08                     
  5511                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  5512   003A08  C011  F00E         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  5513   003A0C  0E06               	movlw	6
  5514   003A0E  EC17  F01F         	call	_color_writetoaddr
  5515   003A12                     
  5516                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
  5517   003A12  5014               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  5518   003A14  6E0E               	movwf	color_writetoaddr@value^0,c
  5519   003A16  0E05               	movlw	5
  5520   003A18  EC17  F01F         	call	_color_writetoaddr
  5521   003A1C                     
  5522                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  5523   003A1C  C013  F00E         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  5524   003A20  0E04               	movlw	4
  5525   003A22  EC17  F01F         	call	_color_writetoaddr
  5526   003A26                     
  5527                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
  5528   003A26  0E04               	movlw	4
  5529   003A28  6E0E               	movwf	color_writetoaddr@value^0,c
  5530   003A2A  0E0C               	movlw	12
  5531   003A2C  EC17  F01F         	call	_color_writetoaddr
  5532   003A30  0012               	return		;funcret
  5533   003A32                     __end_of_color_clear_init_interrupts:
  5534                           	callstack 0
  5535                           
  5536 ;; *************** function _color_writetoaddr *****************
  5537 ;; Defined at:
  5538 ;;		line 50 in file "color.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  address         1    wreg     unsigned char 
  5541 ;;  value           1   13[COMRAM] unsigned char 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;  address         1   14[COMRAM] unsigned char 
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg, status,2, status,0, cstack
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5553 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5557 ;;Total ram usage:        2 bytes
  5558 ;; Hardware stack levels used: 1
  5559 ;; Hardware stack levels required when called: 7
  5560 ;; This function calls:
  5561 ;;		_I2C_2_Master_Start
  5562 ;;		_I2C_2_Master_Stop
  5563 ;;		_I2C_2_Master_Write
  5564 ;; This function is called by:
  5565 ;;		_color_click_init
  5566 ;;		_color_clear_init_interrupts
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text14
  5571   003E2E                     __ptext14:
  5572                           	callstack 0
  5573   003E2E                     _color_writetoaddr:
  5574                           	callstack 22
  5575                           
  5576                           ;incstack = 0
  5577                           ;color_writetoaddr@address stored from wreg
  5578   003E2E  6E0F               	movwf	color_writetoaddr@address^0,c
  5579   003E30                     
  5580                           ;color.c: 51:     I2C_2_Master_Start();
  5581   003E30  EC9C  F01F         	call	_I2C_2_Master_Start	;wreg free
  5582                           
  5583                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
  5584   003E34  0E52               	movlw	82
  5585   003E36  EC86  F01F         	call	_I2C_2_Master_Write
  5586                           
  5587                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
  5588   003E3A  500F               	movf	color_writetoaddr@address^0,w,c
  5589   003E3C  0980               	iorlw	128
  5590   003E3E  EC86  F01F         	call	_I2C_2_Master_Write
  5591                           
  5592                           ;color.c: 54:     I2C_2_Master_Write(value);
  5593   003E42  500E               	movf	color_writetoaddr@value^0,w,c
  5594   003E44  EC86  F01F         	call	_I2C_2_Master_Write
  5595                           
  5596                           ;color.c: 55:     I2C_2_Master_Stop();
  5597   003E48  EC97  F01F         	call	_I2C_2_Master_Stop	;wreg free
  5598   003E4C  0012               	return		;funcret
  5599   003E4E                     __end_of_color_writetoaddr:
  5600                           	callstack 0
  5601                           
  5602 ;; *************** function _I2C_2_Master_Init *****************
  5603 ;; Defined at:
  5604 ;;		line 4 in file "i2c.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;		None
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;		None
  5609 ;; Return value:  Size  Location     Type
  5610 ;;                  1    wreg      void 
  5611 ;; Registers used:
  5612 ;;		wreg, status,2
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5622 ;;Total ram usage:        0 bytes
  5623 ;; Hardware stack levels used: 1
  5624 ;; Hardware stack levels required when called: 5
  5625 ;; This function calls:
  5626 ;;		Nothing
  5627 ;; This function is called by:
  5628 ;;		_color_click_init
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           	psect	text15
  5633   003CF6                     __ptext15:
  5634                           	callstack 0
  5635   003CF6                     _I2C_2_Master_Init:
  5636                           	callstack 24
  5637   003CF6                     
  5638                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5639   003CF6  010E               	movlb	14	; () banked
  5640   003CF8  51D9               	movf	217,w,b	;volatile
  5641   003CFA  0BF0               	andlw	-16
  5642   003CFC  0908               	iorlw	8
  5643   003CFE  6FD9               	movwf	217,b	;volatile
  5644   003D00                     
  5645                           ; BSR set to: 14
  5646                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5647   003D00  8BD9               	bsf	217,5,b	;volatile
  5648                           
  5649                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5650   003D02  0E9F               	movlw	159
  5651   003D04  6FD6               	movwf	214,b	;volatile
  5652   003D06                     
  5653                           ; BSR set to: 14
  5654                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5655   003D06  8A84               	bsf	132,5,c	;volatile
  5656   003D08                     
  5657                           ; BSR set to: 14
  5658                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5659   003D08  8C84               	bsf	132,6,c	;volatile
  5660   003D0A                     
  5661                           ; BSR set to: 14
  5662                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5663   003D0A  9BA7               	bcf	167,5,b	;volatile
  5664   003D0C                     
  5665                           ; BSR set to: 14
  5666                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5667   003D0C  9DA7               	bcf	167,6,b	;volatile
  5668                           
  5669                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5670   003D0E  0E1D               	movlw	29
  5671   003D10  6F1D               	movwf	29,b	;volatile
  5672                           
  5673                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5674   003D12  0E1E               	movlw	30
  5675   003D14  6F1C               	movwf	28,b	;volatile
  5676                           
  5677                           ;i2c.c: 18:   RD5PPS=0x1C;
  5678   003D16  0E1C               	movlw	28
  5679   003D18  6F6F               	movwf	111,b	;volatile
  5680                           
  5681                           ;i2c.c: 19:   RD6PPS=0x1B;
  5682   003D1A  0E1B               	movlw	27
  5683   003D1C  6F70               	movwf	112,b	;volatile
  5684   003D1E                     
  5685                           ; BSR set to: 14
  5686   003D1E  0012               	return		;funcret
  5687   003D20                     __end_of_I2C_2_Master_Init:
  5688                           	callstack 0
  5689                           
  5690 ;; *************** function _color_calibration *****************
  5691 ;; Defined at:
  5692 ;;		line 207 in file "color.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  RGBC            2   49[COMRAM] PTR struct RGBC_val
  5695 ;;		 -> main@RGBC(8), 
  5696 ;;  RGBC_n          2   51[COMRAM] PTR struct RGBC_val
  5697 ;;		 -> main@RGBC_n(8), 
  5698 ;;  red             2   53[COMRAM] PTR struct RGB_calib
  5699 ;;		 -> main@red(6), 
  5700 ;;  green           2   55[COMRAM] PTR struct RGB_calib
  5701 ;;		 -> main@green(6), 
  5702 ;;  blue            2   57[COMRAM] PTR struct RGB_calib
  5703 ;;		 -> main@blue(6), 
  5704 ;;  yellow          2   59[COMRAM] PTR struct RGB_calib
  5705 ;;		 -> main@yellow(6), 
  5706 ;;  pink            2   61[COMRAM] PTR struct RGB_calib
  5707 ;;		 -> main@pink(6), 
  5708 ;;  orange          2   63[COMRAM] PTR struct RGB_calib
  5709 ;;		 -> main@orange(6), 
  5710 ;;  lightblue       2   65[COMRAM] PTR struct RGB_calib
  5711 ;;		 -> main@lightblue(6), 
  5712 ;;  white           2   67[COMRAM] PTR struct RGB_calib
  5713 ;;		 -> main@white(6), 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5725 ;;      Params:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5728 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5729 ;;Total ram usage:       22 bytes
  5730 ;; Hardware stack levels used: 1
  5731 ;; Hardware stack levels required when called: 8
  5732 ;; This function calls:
  5733 ;;		_color_normalise
  5734 ;;		_color_read
  5735 ;;		_white_Light
  5736 ;; This function is called by:
  5737 ;;		_main
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text16
  5742   00288C                     __ptext16:
  5743                           	callstack 0
  5744   00288C                     _color_calibration:
  5745                           	callstack 22
  5746   00288C                     
  5747                           ;color.c: 207: void color_calibration(RGBC_val *RGBC, RGBC_val *RGBC_n, RGB_calib *red, 
      +                          RGB_calib *green, RGB_calib *blue, RGB_calib *yellow, RGB_calib *pink, RGB_calib *orange
      +                          , RGB_calib *lightblue, RGB_calib *white);color.c: 208: {;color.c: 209:     white_Light(
      +                          1);
  5748   00288C  0E01               	movlw	1
  5749   00288E  EC05  F01F         	call	_white_Light
  5750   002892                     
  5751                           ;color.c: 210:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  5752   002892  8680               	bsf	128,3,c	;volatile
  5753   002894  8E7C               	bsf	124,7,c	;volatile
  5754   002896                     l164:
  5755   002896  B48E               	btfsc	142,2,c	;volatile
  5756   002898  EF50  F014         	goto	u1831
  5757   00289C  EF52  F014         	goto	u1830
  5758   0028A0                     u1831:
  5759   0028A0  EF4B  F014         	goto	l164
  5760   0028A4                     u1830:
  5761   0028A4                     
  5762                           ;color.c: 213:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  5763   0028A4  9680               	bcf	128,3,c	;volatile
  5764   0028A6  9E7C               	bcf	124,7,c	;volatile
  5765   0028A8                     
  5766                           ;color.c: 214:     color_read(RGBC);
  5767   0028A8  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  5768   0028AC  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  5769   0028B0  EC5A  F015         	call	_color_read	;wreg free
  5770   0028B4                     
  5771                           ;color.c: 215:     color_normalise(*RGBC, RGBC_n);
  5772   0028B4  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  5773   0028B8  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  5774   0028BC  EE00  F026         	lfsr	0,color_normalise@RGBC
  5775   0028C0  0E07               	movlw	7
  5776   0028C2                     u1841:
  5777   0028C2  CFDB FFEB          	movff	plusw2,plusw0
  5778   0028C6  06E8               	decf	wreg,f,c
  5779   0028C8  E2FC               	bc	u1841
  5780   0028CA  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  5781   0028CE  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  5782   0028D2  ECCE  F019         	call	_color_normalise	;wreg free
  5783   0028D6                     
  5784                           ;color.c: 216:     red->R = RGBC_n->R;
  5785   0028D6  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  5786   0028DA  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  5787   0028DE  C036  FFE1         	movff	color_calibration@red,fsr1l
  5788   0028E2  C037  FFE2         	movff	color_calibration@red+1,fsr1h
  5789   0028E6  CFDE FFE6          	movff	postinc2,postinc1
  5790   0028EA  CFDD FFE5          	movff	postdec2,postdec1
  5791   0028EE                     
  5792                           ;color.c: 217:     red->G = RGBC_n->G;
  5793   0028EE  EE20 F002          	lfsr	2,2
  5794   0028F2  5034               	movf	color_calibration@RGBC_n^0,w,c
  5795   0028F4  26D9               	addwf	fsr2l,f,c
  5796   0028F6  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5797   0028F8  22DA               	addwfc	fsr2h,f,c
  5798   0028FA  EE10 F002          	lfsr	1,2
  5799   0028FE  5036               	movf	color_calibration@red^0,w,c
  5800   002900  26E1               	addwf	fsr1l,f,c
  5801   002902  5037               	movf	(color_calibration@red+1)^0,w,c
  5802   002904  22E2               	addwfc	fsr1h,f,c
  5803   002906  CFDE FFE6          	movff	postinc2,postinc1
  5804   00290A  CFDD FFE5          	movff	postdec2,postdec1
  5805   00290E                     
  5806                           ;color.c: 218:     red->B = RGBC_n->B;
  5807   00290E  EE20 F004          	lfsr	2,4
  5808   002912  5034               	movf	color_calibration@RGBC_n^0,w,c
  5809   002914  26D9               	addwf	fsr2l,f,c
  5810   002916  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5811   002918  22DA               	addwfc	fsr2h,f,c
  5812   00291A  EE10 F004          	lfsr	1,4
  5813   00291E  5036               	movf	color_calibration@red^0,w,c
  5814   002920  26E1               	addwf	fsr1l,f,c
  5815   002922  5037               	movf	(color_calibration@red+1)^0,w,c
  5816   002924  22E2               	addwfc	fsr1h,f,c
  5817   002926  CFDE FFE6          	movff	postinc2,postinc1
  5818   00292A  CFDD FFE5          	movff	postdec2,postdec1
  5819   00292E                     
  5820                           ;color.c: 220:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5821   00292E  0E29               	movlw	41
  5822   002930  6E47               	movwf	(??_color_calibration+1)^0,c
  5823   002932  0E96               	movlw	150
  5824   002934  6E46               	movwf	??_color_calibration^0,c
  5825   002936  0E7F               	movlw	127
  5826   002938                     u3477:
  5827   002938  2EE8               	decfsz	wreg,f,c
  5828   00293A  D7FE               	bra	u3477
  5829   00293C  2E46               	decfsz	??_color_calibration^0,f,c
  5830   00293E  D7FC               	bra	u3477
  5831   002940  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  5832   002942  D7FA               	bra	u3477
  5833   002944  0000               	nop	
  5834   002946                     
  5835                           ;color.c: 221:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  5836   002946  8680               	bsf	128,3,c	;volatile
  5837   002948  8E7C               	bsf	124,7,c	;volatile
  5838   00294A                     l167:
  5839   00294A  B48E               	btfsc	142,2,c	;volatile
  5840   00294C  EFAA  F014         	goto	u1851
  5841   002950  EFAC  F014         	goto	u1850
  5842   002954                     u1851:
  5843   002954  EFA5  F014         	goto	l167
  5844   002958                     u1850:
  5845   002958                     
  5846                           ;color.c: 224:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  5847   002958  9680               	bcf	128,3,c	;volatile
  5848   00295A  9E7C               	bcf	124,7,c	;volatile
  5849   00295C                     
  5850                           ;color.c: 225:     color_read(RGBC);
  5851   00295C  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  5852   002960  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  5853   002964  EC5A  F015         	call	_color_read	;wreg free
  5854   002968                     
  5855                           ;color.c: 226:     color_normalise(*RGBC, RGBC_n);
  5856   002968  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  5857   00296C  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  5858   002970  EE00  F026         	lfsr	0,color_normalise@RGBC
  5859   002974  0E07               	movlw	7
  5860   002976                     u1861:
  5861   002976  CFDB FFEB          	movff	plusw2,plusw0
  5862   00297A  06E8               	decf	wreg,f,c
  5863   00297C  E2FC               	bc	u1861
  5864   00297E  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  5865   002982  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  5866   002986  ECCE  F019         	call	_color_normalise	;wreg free
  5867   00298A                     
  5868                           ;color.c: 227:     green->R = RGBC_n->R;
  5869   00298A  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  5870   00298E  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  5871   002992  C038  FFE1         	movff	color_calibration@green,fsr1l
  5872   002996  C039  FFE2         	movff	color_calibration@green+1,fsr1h
  5873   00299A  CFDE FFE6          	movff	postinc2,postinc1
  5874   00299E  CFDD FFE5          	movff	postdec2,postdec1
  5875   0029A2                     
  5876                           ;color.c: 228:     green->G = RGBC_n->G;
  5877   0029A2  EE20 F002          	lfsr	2,2
  5878   0029A6  5034               	movf	color_calibration@RGBC_n^0,w,c
  5879   0029A8  26D9               	addwf	fsr2l,f,c
  5880   0029AA  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5881   0029AC  22DA               	addwfc	fsr2h,f,c
  5882   0029AE  EE10 F002          	lfsr	1,2
  5883   0029B2  5038               	movf	color_calibration@green^0,w,c
  5884   0029B4  26E1               	addwf	fsr1l,f,c
  5885   0029B6  5039               	movf	(color_calibration@green+1)^0,w,c
  5886   0029B8  22E2               	addwfc	fsr1h,f,c
  5887   0029BA  CFDE FFE6          	movff	postinc2,postinc1
  5888   0029BE  CFDD FFE5          	movff	postdec2,postdec1
  5889   0029C2                     
  5890                           ;color.c: 229:     green->B = RGBC_n->B;
  5891   0029C2  EE20 F004          	lfsr	2,4
  5892   0029C6  5034               	movf	color_calibration@RGBC_n^0,w,c
  5893   0029C8  26D9               	addwf	fsr2l,f,c
  5894   0029CA  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5895   0029CC  22DA               	addwfc	fsr2h,f,c
  5896   0029CE  EE10 F004          	lfsr	1,4
  5897   0029D2  5038               	movf	color_calibration@green^0,w,c
  5898   0029D4  26E1               	addwf	fsr1l,f,c
  5899   0029D6  5039               	movf	(color_calibration@green+1)^0,w,c
  5900   0029D8  22E2               	addwfc	fsr1h,f,c
  5901   0029DA  CFDE FFE6          	movff	postinc2,postinc1
  5902   0029DE  CFDD FFE5          	movff	postdec2,postdec1
  5903   0029E2                     
  5904                           ;color.c: 231:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5905   0029E2  0E29               	movlw	41
  5906   0029E4  6E47               	movwf	(??_color_calibration+1)^0,c
  5907   0029E6  0E96               	movlw	150
  5908   0029E8  6E46               	movwf	??_color_calibration^0,c
  5909   0029EA  0E7F               	movlw	127
  5910   0029EC                     u3487:
  5911   0029EC  2EE8               	decfsz	wreg,f,c
  5912   0029EE  D7FE               	bra	u3487
  5913   0029F0  2E46               	decfsz	??_color_calibration^0,f,c
  5914   0029F2  D7FC               	bra	u3487
  5915   0029F4  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  5916   0029F6  D7FA               	bra	u3487
  5917   0029F8  0000               	nop	
  5918   0029FA                     
  5919                           ;color.c: 232:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  5920   0029FA  8680               	bsf	128,3,c	;volatile
  5921   0029FC  8E7C               	bsf	124,7,c	;volatile
  5922   0029FE                     l170:
  5923   0029FE  B48E               	btfsc	142,2,c	;volatile
  5924   002A00  EF04  F015         	goto	u1871
  5925   002A04  EF06  F015         	goto	u1870
  5926   002A08                     u1871:
  5927   002A08  EFFF  F014         	goto	l170
  5928   002A0C                     u1870:
  5929   002A0C                     
  5930                           ;color.c: 235:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  5931   002A0C  9680               	bcf	128,3,c	;volatile
  5932   002A0E  9E7C               	bcf	124,7,c	;volatile
  5933   002A10                     
  5934                           ;color.c: 236:     color_read(RGBC);
  5935   002A10  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  5936   002A14  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  5937   002A18  EC5A  F015         	call	_color_read	;wreg free
  5938   002A1C                     
  5939                           ;color.c: 237:     color_normalise(*RGBC, RGBC_n);
  5940   002A1C  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  5941   002A20  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  5942   002A24  EE00  F026         	lfsr	0,color_normalise@RGBC
  5943   002A28  0E07               	movlw	7
  5944   002A2A                     u1881:
  5945   002A2A  CFDB FFEB          	movff	plusw2,plusw0
  5946   002A2E  06E8               	decf	wreg,f,c
  5947   002A30  E2FC               	bc	u1881
  5948   002A32  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  5949   002A36  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  5950   002A3A  ECCE  F019         	call	_color_normalise	;wreg free
  5951   002A3E                     
  5952                           ;color.c: 238:     blue->R = RGBC_n->R;
  5953   002A3E  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  5954   002A42  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  5955   002A46  C03A  FFE1         	movff	color_calibration@blue,fsr1l
  5956   002A4A  C03B  FFE2         	movff	color_calibration@blue+1,fsr1h
  5957   002A4E  CFDE FFE6          	movff	postinc2,postinc1
  5958   002A52  CFDD FFE5          	movff	postdec2,postdec1
  5959   002A56                     
  5960                           ;color.c: 239:     blue->G = RGBC_n->G;
  5961   002A56  EE20 F002          	lfsr	2,2
  5962   002A5A  5034               	movf	color_calibration@RGBC_n^0,w,c
  5963   002A5C  26D9               	addwf	fsr2l,f,c
  5964   002A5E  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5965   002A60  22DA               	addwfc	fsr2h,f,c
  5966   002A62  EE10 F002          	lfsr	1,2
  5967   002A66  503A               	movf	color_calibration@blue^0,w,c
  5968   002A68  26E1               	addwf	fsr1l,f,c
  5969   002A6A  503B               	movf	(color_calibration@blue+1)^0,w,c
  5970   002A6C  22E2               	addwfc	fsr1h,f,c
  5971   002A6E  CFDE FFE6          	movff	postinc2,postinc1
  5972   002A72  CFDD FFE5          	movff	postdec2,postdec1
  5973   002A76                     
  5974                           ;color.c: 240:     blue->B = RGBC_n->B;
  5975   002A76  EE20 F004          	lfsr	2,4
  5976   002A7A  5034               	movf	color_calibration@RGBC_n^0,w,c
  5977   002A7C  26D9               	addwf	fsr2l,f,c
  5978   002A7E  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5979   002A80  22DA               	addwfc	fsr2h,f,c
  5980   002A82  EE10 F004          	lfsr	1,4
  5981   002A86  503A               	movf	color_calibration@blue^0,w,c
  5982   002A88  26E1               	addwf	fsr1l,f,c
  5983   002A8A  503B               	movf	(color_calibration@blue+1)^0,w,c
  5984   002A8C  22E2               	addwfc	fsr1h,f,c
  5985   002A8E  CFDE FFE6          	movff	postinc2,postinc1
  5986   002A92  CFDD FFE5          	movff	postdec2,postdec1
  5987   002A96                     
  5988                           ;color.c: 242:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5989   002A96  0E29               	movlw	41
  5990   002A98  6E47               	movwf	(??_color_calibration+1)^0,c
  5991   002A9A  0E96               	movlw	150
  5992   002A9C  6E46               	movwf	??_color_calibration^0,c
  5993   002A9E  0E7F               	movlw	127
  5994   002AA0                     u3497:
  5995   002AA0  2EE8               	decfsz	wreg,f,c
  5996   002AA2  D7FE               	bra	u3497
  5997   002AA4  2E46               	decfsz	??_color_calibration^0,f,c
  5998   002AA6  D7FC               	bra	u3497
  5999   002AA8  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6000   002AAA  D7FA               	bra	u3497
  6001   002AAC  0000               	nop	
  6002   002AAE                     
  6003                           ;color.c: 243:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6004   002AAE  8680               	bsf	128,3,c	;volatile
  6005   002AB0  8E7C               	bsf	124,7,c	;volatile
  6006   002AB2  0012               	return		;funcret
  6007   002AB4                     __end_of_color_calibration:
  6008                           	callstack 0
  6009                           
  6010 ;; *************** function _white_Light *****************
  6011 ;; Defined at:
  6012 ;;		line 59 in file "color.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  state           1    wreg     unsigned char 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  state           1   11[COMRAM] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		wreg, status,2
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6029 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6030 ;;Total ram usage:        1 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; Hardware stack levels required when called: 5
  6033 ;; This function calls:
  6034 ;;		Nothing
  6035 ;; This function is called by:
  6036 ;;		_main
  6037 ;;		_color_calibration
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text17
  6042   003E0A                     __ptext17:
  6043                           	callstack 0
  6044   003E0A                     _white_Light:
  6045                           	callstack 25
  6046                           
  6047                           ;incstack = 0
  6048                           ;white_Light@state stored from wreg
  6049   003E0A  6E0C               	movwf	white_Light@state^0,c
  6050   003E0C                     
  6051                           ;color.c: 59: void white_Light(char state);color.c: 60: {;color.c: 61:     if (state){
  6052   003E0C  500C               	movf	white_Light@state^0,w,c
  6053   003E0E  B4D8               	btfsc	status,2,c
  6054   003E10  EF0C  F01F         	goto	u1631
  6055   003E14  EF0E  F01F         	goto	u1630
  6056   003E18                     u1631:
  6057   003E18  EF13  F01F         	goto	l144
  6058   003E1C                     u1630:
  6059   003E1C                     
  6060                           ;color.c: 62:         LATGbits.LATG0 = 1;
  6061   003E1C  807F               	bsf	127,0,c	;volatile
  6062                           
  6063                           ;color.c: 63:         LATEbits.LATE7 = 1;
  6064   003E1E  8E7D               	bsf	125,7,c	;volatile
  6065                           
  6066                           ;color.c: 64:         LATAbits.LATA3 = 1;
  6067   003E20  8679               	bsf	121,3,c	;volatile
  6068                           
  6069                           ;color.c: 65:     }
  6070   003E22  EF16  F01F         	goto	l146
  6071   003E26                     l144:
  6072                           
  6073                           ;color.c: 67:         LATGbits.LATG0 = 0;
  6074   003E26  907F               	bcf	127,0,c	;volatile
  6075                           
  6076                           ;color.c: 68:         LATEbits.LATE7 = 0;
  6077   003E28  9E7D               	bcf	125,7,c	;volatile
  6078                           
  6079                           ;color.c: 69:         LATAbits.LATA3 = 0;
  6080   003E2A  9679               	bcf	121,3,c	;volatile
  6081   003E2C                     l146:
  6082   003E2C  0012               	return		;funcret
  6083   003E2E                     __end_of_white_Light:
  6084                           	callstack 0
  6085                           
  6086 ;; *************** function _color_read *****************
  6087 ;; Defined at:
  6088 ;;		line 74 in file "color.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  RGBC            2   15[COMRAM] PTR struct RGBC_val
  6091 ;;		 -> main@RGBC(8), 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      void 
  6096 ;; Registers used:
  6097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6105 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6106 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6107 ;;Total ram usage:        9 bytes
  6108 ;; Hardware stack levels used: 1
  6109 ;; Hardware stack levels required when called: 7
  6110 ;; This function calls:
  6111 ;;		_I2C_2_Master_Read
  6112 ;;		_I2C_2_Master_RepStart
  6113 ;;		_I2C_2_Master_Start
  6114 ;;		_I2C_2_Master_Stop
  6115 ;;		_I2C_2_Master_Write
  6116 ;; This function is called by:
  6117 ;;		_main
  6118 ;;		_color_calibration
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text18
  6123   002AB4                     __ptext18:
  6124                           	callstack 0
  6125   002AB4                     _color_read:
  6126                           	callstack 23
  6127   002AB4                     
  6128                           ;color.c: 74: void color_read(RGBC_val *RGBC);color.c: 75: {;color.c: 76:  I2C_2_Master_
      +                          Start();
  6129   002AB4  EC9C  F01F         	call	_I2C_2_Master_Start	;wreg free
  6130                           
  6131                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  6132   002AB8  0E52               	movlw	82
  6133   002ABA  EC86  F01F         	call	_I2C_2_Master_Write
  6134                           
  6135                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x16);
  6136   002ABE  0EB6               	movlw	182
  6137   002AC0  EC86  F01F         	call	_I2C_2_Master_Write
  6138                           
  6139                           ;color.c: 79:  I2C_2_Master_RepStart();
  6140   002AC4  ECA1  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6141                           
  6142                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  6143   002AC8  0E53               	movlw	83
  6144   002ACA  EC86  F01F         	call	_I2C_2_Master_Write
  6145   002ACE                     
  6146                           ;color.c: 81:  RGBC->R=I2C_2_Master_Read(1);
  6147   002ACE  0E01               	movlw	1
  6148   002AD0  EC23  F01E         	call	_I2C_2_Master_Read
  6149   002AD4  6E12               	movwf	??_color_read^0,c
  6150   002AD6  6A13               	clrf	(??_color_read+1)^0,c
  6151   002AD8  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6152   002ADC  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6153   002AE0  C012  FFDE         	movff	??_color_read,postinc2
  6154   002AE4  C013  FFDD         	movff	??_color_read+1,postdec2
  6155   002AE8                     
  6156                           ;color.c: 82:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  6157   002AE8  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6158   002AEC  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6159   002AF0  CFDE F012          	movff	postinc2,??_color_read
  6160   002AF4  CFDD F013          	movff	postdec2,??_color_read+1
  6161   002AF8  0E00               	movlw	0
  6162   002AFA  EC23  F01E         	call	_I2C_2_Master_Read
  6163   002AFE  6E14               	movwf	(??_color_read+2)^0,c
  6164   002B00  5014               	movf	(??_color_read+2)^0,w,c
  6165   002B02  6E16               	movwf	(??_color_read+4)^0,c
  6166   002B04  6A15               	clrf	(??_color_read+3)^0,c
  6167   002B06  5012               	movf	??_color_read^0,w,c
  6168   002B08  1015               	iorwf	(??_color_read+3)^0,w,c
  6169   002B0A  6E17               	movwf	(??_color_read+5)^0,c
  6170   002B0C  5013               	movf	(??_color_read+1)^0,w,c
  6171   002B0E  1016               	iorwf	(??_color_read+4)^0,w,c
  6172   002B10  6E18               	movwf	(??_color_read+6)^0,c
  6173   002B12  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6174   002B16  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6175   002B1A  C017  FFDE         	movff	??_color_read+5,postinc2
  6176   002B1E  C018  FFDD         	movff	??_color_read+6,postdec2
  6177                           
  6178                           ;color.c: 83:  I2C_2_Master_Stop();
  6179   002B22  EC97  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6180                           
  6181                           ;color.c: 85:     I2C_2_Master_Start();
  6182   002B26  EC9C  F01F         	call	_I2C_2_Master_Start	;wreg free
  6183                           
  6184                           ;color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  6185   002B2A  0E52               	movlw	82
  6186   002B2C  EC86  F01F         	call	_I2C_2_Master_Write
  6187                           
  6188                           ;color.c: 87:  I2C_2_Master_Write(0xA0 | 0x18);
  6189   002B30  0EB8               	movlw	184
  6190   002B32  EC86  F01F         	call	_I2C_2_Master_Write
  6191                           
  6192                           ;color.c: 88:  I2C_2_Master_RepStart();
  6193   002B36  ECA1  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6194                           
  6195                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  6196   002B3A  0E53               	movlw	83
  6197   002B3C  EC86  F01F         	call	_I2C_2_Master_Write
  6198   002B40                     
  6199                           ;color.c: 90:  RGBC->G=I2C_2_Master_Read(1);
  6200   002B40  0E01               	movlw	1
  6201   002B42  EC23  F01E         	call	_I2C_2_Master_Read
  6202   002B46  6E12               	movwf	??_color_read^0,c
  6203   002B48  6A13               	clrf	(??_color_read+1)^0,c
  6204   002B4A  EE20 F002          	lfsr	2,2
  6205   002B4E  5010               	movf	color_read@RGBC^0,w,c
  6206   002B50  26D9               	addwf	fsr2l,f,c
  6207   002B52  5011               	movf	(color_read@RGBC+1)^0,w,c
  6208   002B54  22DA               	addwfc	fsr2h,f,c
  6209   002B56  C012  FFDE         	movff	??_color_read,postinc2
  6210   002B5A  C013  FFDD         	movff	??_color_read+1,postdec2
  6211   002B5E                     
  6212                           ;color.c: 91:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  6213   002B5E  EE20 F002          	lfsr	2,2
  6214   002B62  5010               	movf	color_read@RGBC^0,w,c
  6215   002B64  26D9               	addwf	fsr2l,f,c
  6216   002B66  5011               	movf	(color_read@RGBC+1)^0,w,c
  6217   002B68  22DA               	addwfc	fsr2h,f,c
  6218   002B6A  CFDE F012          	movff	postinc2,??_color_read
  6219   002B6E  CFDD F013          	movff	postdec2,??_color_read+1
  6220   002B72  0E00               	movlw	0
  6221   002B74  EC23  F01E         	call	_I2C_2_Master_Read
  6222   002B78  6E14               	movwf	(??_color_read+2)^0,c
  6223   002B7A  5014               	movf	(??_color_read+2)^0,w,c
  6224   002B7C  6E16               	movwf	(??_color_read+4)^0,c
  6225   002B7E  6A15               	clrf	(??_color_read+3)^0,c
  6226   002B80  5012               	movf	??_color_read^0,w,c
  6227   002B82  1015               	iorwf	(??_color_read+3)^0,w,c
  6228   002B84  6E17               	movwf	(??_color_read+5)^0,c
  6229   002B86  5013               	movf	(??_color_read+1)^0,w,c
  6230   002B88  1016               	iorwf	(??_color_read+4)^0,w,c
  6231   002B8A  6E18               	movwf	(??_color_read+6)^0,c
  6232   002B8C  EE20 F002          	lfsr	2,2
  6233   002B90  5010               	movf	color_read@RGBC^0,w,c
  6234   002B92  26D9               	addwf	fsr2l,f,c
  6235   002B94  5011               	movf	(color_read@RGBC+1)^0,w,c
  6236   002B96  22DA               	addwfc	fsr2h,f,c
  6237   002B98  C017  FFDE         	movff	??_color_read+5,postinc2
  6238   002B9C  C018  FFDD         	movff	??_color_read+6,postdec2
  6239                           
  6240                           ;color.c: 92:  I2C_2_Master_Stop();
  6241   002BA0  EC97  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6242                           
  6243                           ;color.c: 94:     I2C_2_Master_Start();
  6244   002BA4  EC9C  F01F         	call	_I2C_2_Master_Start	;wreg free
  6245                           
  6246                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6247   002BA8  0E52               	movlw	82
  6248   002BAA  EC86  F01F         	call	_I2C_2_Master_Write
  6249                           
  6250                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  6251   002BAE  0EBA               	movlw	186
  6252   002BB0  EC86  F01F         	call	_I2C_2_Master_Write
  6253                           
  6254                           ;color.c: 97:  I2C_2_Master_RepStart();
  6255   002BB4  ECA1  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6256                           
  6257                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6258   002BB8  0E53               	movlw	83
  6259   002BBA  EC86  F01F         	call	_I2C_2_Master_Write
  6260   002BBE                     
  6261                           ;color.c: 99:  RGBC->B=I2C_2_Master_Read(1);
  6262   002BBE  0E01               	movlw	1
  6263   002BC0  EC23  F01E         	call	_I2C_2_Master_Read
  6264   002BC4  6E12               	movwf	??_color_read^0,c
  6265   002BC6  6A13               	clrf	(??_color_read+1)^0,c
  6266   002BC8  EE20 F004          	lfsr	2,4
  6267   002BCC  5010               	movf	color_read@RGBC^0,w,c
  6268   002BCE  26D9               	addwf	fsr2l,f,c
  6269   002BD0  5011               	movf	(color_read@RGBC+1)^0,w,c
  6270   002BD2  22DA               	addwfc	fsr2h,f,c
  6271   002BD4  C012  FFDE         	movff	??_color_read,postinc2
  6272   002BD8  C013  FFDD         	movff	??_color_read+1,postdec2
  6273   002BDC                     
  6274                           ;color.c: 100:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  6275   002BDC  EE20 F004          	lfsr	2,4
  6276   002BE0  5010               	movf	color_read@RGBC^0,w,c
  6277   002BE2  26D9               	addwf	fsr2l,f,c
  6278   002BE4  5011               	movf	(color_read@RGBC+1)^0,w,c
  6279   002BE6  22DA               	addwfc	fsr2h,f,c
  6280   002BE8  CFDE F012          	movff	postinc2,??_color_read
  6281   002BEC  CFDD F013          	movff	postdec2,??_color_read+1
  6282   002BF0  0E00               	movlw	0
  6283   002BF2  EC23  F01E         	call	_I2C_2_Master_Read
  6284   002BF6  6E14               	movwf	(??_color_read+2)^0,c
  6285   002BF8  5014               	movf	(??_color_read+2)^0,w,c
  6286   002BFA  6E16               	movwf	(??_color_read+4)^0,c
  6287   002BFC  6A15               	clrf	(??_color_read+3)^0,c
  6288   002BFE  5012               	movf	??_color_read^0,w,c
  6289   002C00  1015               	iorwf	(??_color_read+3)^0,w,c
  6290   002C02  6E17               	movwf	(??_color_read+5)^0,c
  6291   002C04  5013               	movf	(??_color_read+1)^0,w,c
  6292   002C06  1016               	iorwf	(??_color_read+4)^0,w,c
  6293   002C08  6E18               	movwf	(??_color_read+6)^0,c
  6294   002C0A  EE20 F004          	lfsr	2,4
  6295   002C0E  5010               	movf	color_read@RGBC^0,w,c
  6296   002C10  26D9               	addwf	fsr2l,f,c
  6297   002C12  5011               	movf	(color_read@RGBC+1)^0,w,c
  6298   002C14  22DA               	addwfc	fsr2h,f,c
  6299   002C16  C017  FFDE         	movff	??_color_read+5,postinc2
  6300   002C1A  C018  FFDD         	movff	??_color_read+6,postdec2
  6301                           
  6302                           ;color.c: 101:  I2C_2_Master_Stop();
  6303   002C1E  EC97  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6304                           
  6305                           ;color.c: 103:     I2C_2_Master_Start();
  6306   002C22  EC9C  F01F         	call	_I2C_2_Master_Start	;wreg free
  6307                           
  6308                           ;color.c: 104:  I2C_2_Master_Write(0x52 | 0x00);
  6309   002C26  0E52               	movlw	82
  6310   002C28  EC86  F01F         	call	_I2C_2_Master_Write
  6311                           
  6312                           ;color.c: 105:  I2C_2_Master_Write(0xA0 | 0x14);
  6313   002C2C  0EB4               	movlw	180
  6314   002C2E  EC86  F01F         	call	_I2C_2_Master_Write
  6315                           
  6316                           ;color.c: 106:  I2C_2_Master_RepStart();
  6317   002C32  ECA1  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6318                           
  6319                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x01);
  6320   002C36  0E53               	movlw	83
  6321   002C38  EC86  F01F         	call	_I2C_2_Master_Write
  6322   002C3C                     
  6323                           ;color.c: 108:  RGBC->C=I2C_2_Master_Read(1);
  6324   002C3C  0E01               	movlw	1
  6325   002C3E  EC23  F01E         	call	_I2C_2_Master_Read
  6326   002C42  6E12               	movwf	??_color_read^0,c
  6327   002C44  6A13               	clrf	(??_color_read+1)^0,c
  6328   002C46  EE20 F006          	lfsr	2,6
  6329   002C4A  5010               	movf	color_read@RGBC^0,w,c
  6330   002C4C  26D9               	addwf	fsr2l,f,c
  6331   002C4E  5011               	movf	(color_read@RGBC+1)^0,w,c
  6332   002C50  22DA               	addwfc	fsr2h,f,c
  6333   002C52  C012  FFDE         	movff	??_color_read,postinc2
  6334   002C56  C013  FFDD         	movff	??_color_read+1,postdec2
  6335   002C5A                     
  6336                           ;color.c: 109:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  6337   002C5A  EE20 F006          	lfsr	2,6
  6338   002C5E  5010               	movf	color_read@RGBC^0,w,c
  6339   002C60  26D9               	addwf	fsr2l,f,c
  6340   002C62  5011               	movf	(color_read@RGBC+1)^0,w,c
  6341   002C64  22DA               	addwfc	fsr2h,f,c
  6342   002C66  CFDE F012          	movff	postinc2,??_color_read
  6343   002C6A  CFDD F013          	movff	postdec2,??_color_read+1
  6344   002C6E  0E00               	movlw	0
  6345   002C70  EC23  F01E         	call	_I2C_2_Master_Read
  6346   002C74  6E14               	movwf	(??_color_read+2)^0,c
  6347   002C76  5014               	movf	(??_color_read+2)^0,w,c
  6348   002C78  6E16               	movwf	(??_color_read+4)^0,c
  6349   002C7A  6A15               	clrf	(??_color_read+3)^0,c
  6350   002C7C  5012               	movf	??_color_read^0,w,c
  6351   002C7E  1015               	iorwf	(??_color_read+3)^0,w,c
  6352   002C80  6E17               	movwf	(??_color_read+5)^0,c
  6353   002C82  5013               	movf	(??_color_read+1)^0,w,c
  6354   002C84  1016               	iorwf	(??_color_read+4)^0,w,c
  6355   002C86  6E18               	movwf	(??_color_read+6)^0,c
  6356   002C88  EE20 F006          	lfsr	2,6
  6357   002C8C  5010               	movf	color_read@RGBC^0,w,c
  6358   002C8E  26D9               	addwf	fsr2l,f,c
  6359   002C90  5011               	movf	(color_read@RGBC+1)^0,w,c
  6360   002C92  22DA               	addwfc	fsr2h,f,c
  6361   002C94  C017  FFDE         	movff	??_color_read+5,postinc2
  6362   002C98  C018  FFDD         	movff	??_color_read+6,postdec2
  6363                           
  6364                           ;color.c: 110:  I2C_2_Master_Stop();
  6365   002C9C  EC97  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6366   002CA0  0012               	return		;funcret
  6367   002CA2                     __end_of_color_read:
  6368                           	callstack 0
  6369                           
  6370 ;; *************** function _I2C_2_Master_Write *****************
  6371 ;; Defined at:
  6372 ;;		line 45 in file "i2c.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  data_byte       1    wreg     unsigned char 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;  data_byte       1   12[COMRAM] unsigned char 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      void 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0, cstack
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6390 ;;Total ram usage:        1 bytes
  6391 ;; Hardware stack levels used: 1
  6392 ;; Hardware stack levels required when called: 6
  6393 ;; This function calls:
  6394 ;;		_I2C_2_Master_Idle
  6395 ;; This function is called by:
  6396 ;;		_color_clear_init_interrupts
  6397 ;;		_color_writetoaddr
  6398 ;;		_color_read
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           	psect	text19
  6403   003F0C                     __ptext19:
  6404                           	callstack 0
  6405   003F0C                     _I2C_2_Master_Write:
  6406                           	callstack 23
  6407                           
  6408                           ;incstack = 0
  6409                           ;I2C_2_Master_Write@data_byte stored from wreg
  6410   003F0C  6E0D               	movwf	I2C_2_Master_Write@data_byte^0,c
  6411   003F0E                     
  6412                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6413   003F0E  ECA4  F01E         	call	_I2C_2_Master_Idle	;wreg free
  6414   003F12                     
  6415                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6416   003F12  C00D  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6417   003F16  0012               	return		;funcret
  6418   003F18                     __end_of_I2C_2_Master_Write:
  6419                           	callstack 0
  6420                           
  6421 ;; *************** function _I2C_2_Master_Stop *****************
  6422 ;; Defined at:
  6423 ;;		line 39 in file "i2c.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0, cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6441 ;;Total ram usage:        0 bytes
  6442 ;; Hardware stack levels used: 1
  6443 ;; Hardware stack levels required when called: 6
  6444 ;; This function calls:
  6445 ;;		_I2C_2_Master_Idle
  6446 ;; This function is called by:
  6447 ;;		_color_clear_init_interrupts
  6448 ;;		_color_writetoaddr
  6449 ;;		_color_read
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text20
  6454   003F2E                     __ptext20:
  6455                           	callstack 0
  6456   003F2E                     _I2C_2_Master_Stop:
  6457                           	callstack 23
  6458   003F2E                     
  6459                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6460   003F2E  ECA4  F01E         	call	_I2C_2_Master_Idle	;wreg free
  6461   003F32                     
  6462                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6463   003F32  010E               	movlb	14	; () banked
  6464   003F34  85DA               	bsf	218,2,b	;volatile
  6465   003F36                     
  6466                           ; BSR set to: 14
  6467   003F36  0012               	return		;funcret
  6468   003F38                     __end_of_I2C_2_Master_Stop:
  6469                           	callstack 0
  6470                           
  6471 ;; *************** function _I2C_2_Master_Start *****************
  6472 ;; Defined at:
  6473 ;;		line 27 in file "i2c.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;		None
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;		None
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6491 ;;Total ram usage:        0 bytes
  6492 ;; Hardware stack levels used: 1
  6493 ;; Hardware stack levels required when called: 6
  6494 ;; This function calls:
  6495 ;;		_I2C_2_Master_Idle
  6496 ;; This function is called by:
  6497 ;;		_color_clear_init_interrupts
  6498 ;;		_color_writetoaddr
  6499 ;;		_color_read
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	text21
  6504   003F38                     __ptext21:
  6505                           	callstack 0
  6506   003F38                     _I2C_2_Master_Start:
  6507                           	callstack 23
  6508   003F38                     
  6509                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6510   003F38  ECA4  F01E         	call	_I2C_2_Master_Idle	;wreg free
  6511   003F3C                     
  6512                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6513   003F3C  010E               	movlb	14	; () banked
  6514   003F3E  81DA               	bsf	218,0,b	;volatile
  6515   003F40                     
  6516                           ; BSR set to: 14
  6517   003F40  0012               	return		;funcret
  6518   003F42                     __end_of_I2C_2_Master_Start:
  6519                           	callstack 0
  6520                           
  6521 ;; *************** function _I2C_2_Master_RepStart *****************
  6522 ;; Defined at:
  6523 ;;		line 33 in file "i2c.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;		None
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;		None
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  1    wreg      void 
  6530 ;; Registers used:
  6531 ;;		wreg, status,2, status,0, cstack
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6541 ;;Total ram usage:        0 bytes
  6542 ;; Hardware stack levels used: 1
  6543 ;; Hardware stack levels required when called: 6
  6544 ;; This function calls:
  6545 ;;		_I2C_2_Master_Idle
  6546 ;; This function is called by:
  6547 ;;		_color_read
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text22
  6552   003F42                     __ptext22:
  6553                           	callstack 0
  6554   003F42                     _I2C_2_Master_RepStart:
  6555                           	callstack 23
  6556   003F42                     
  6557                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6558   003F42  ECA4  F01E         	call	_I2C_2_Master_Idle	;wreg free
  6559   003F46                     
  6560                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6561   003F46  010E               	movlb	14	; () banked
  6562   003F48  83DA               	bsf	218,1,b	;volatile
  6563   003F4A                     
  6564                           ; BSR set to: 14
  6565   003F4A  0012               	return		;funcret
  6566   003F4C                     __end_of_I2C_2_Master_RepStart:
  6567                           	callstack 0
  6568                           
  6569 ;; *************** function _I2C_2_Master_Read *****************
  6570 ;; Defined at:
  6571 ;;		line 51 in file "i2c.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  ack             1    wreg     unsigned char 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  ack             1   13[COMRAM] unsigned char 
  6576 ;;  tmp             1   14[COMRAM] unsigned char 
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  1    wreg      unsigned char 
  6579 ;; Registers used:
  6580 ;;		wreg, status,2, status,0, cstack
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6587 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6588 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6589 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6590 ;;Total ram usage:        3 bytes
  6591 ;; Hardware stack levels used: 1
  6592 ;; Hardware stack levels required when called: 6
  6593 ;; This function calls:
  6594 ;;		_I2C_2_Master_Idle
  6595 ;; This function is called by:
  6596 ;;		_color_read
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text23
  6601   003C46                     __ptext23:
  6602                           	callstack 0
  6603   003C46                     _I2C_2_Master_Read:
  6604                           	callstack 23
  6605                           
  6606                           ; BSR set to: 14
  6607                           ;incstack = 0
  6608                           ;I2C_2_Master_Read@ack stored from wreg
  6609   003C46  6E0E               	movwf	I2C_2_Master_Read@ack^0,c
  6610   003C48                     
  6611                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6612   003C48  ECA4  F01E         	call	_I2C_2_Master_Idle	;wreg free
  6613   003C4C                     
  6614                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6615   003C4C  010E               	movlb	14	; () banked
  6616   003C4E  87DA               	bsf	218,3,b	;volatile
  6617                           
  6618                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6619   003C50  ECA4  F01E         	call	_I2C_2_Master_Idle	;wreg free
  6620   003C54                     
  6621                           ;i2c.c: 57:   tmp = SSP2BUF;
  6622   003C54  CED5 F00F          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6623                           
  6624                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6625   003C58  ECA4  F01E         	call	_I2C_2_Master_Idle	;wreg free
  6626   003C5C                     
  6627                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6628   003C5C  500E               	movf	I2C_2_Master_Read@ack^0,w,c
  6629   003C5E  B4D8               	btfsc	status,2,c
  6630   003C60  EF34  F01E         	goto	u1381
  6631   003C64  EF38  F01E         	goto	u1380
  6632   003C68                     u1381:
  6633   003C68  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  6634   003C6A  2A0D               	incf	??_I2C_2_Master_Read^0,f,c
  6635   003C6C  EF39  F01E         	goto	u1398
  6636   003C70                     u1380:
  6637   003C70  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  6638   003C72                     u1398:
  6639   003C72  3A0D               	swapf	??_I2C_2_Master_Read^0,f,c
  6640   003C74  460D               	rlncf	??_I2C_2_Master_Read^0,f,c
  6641   003C76  010E               	movlb	14	; () banked
  6642   003C78  51DA               	movf	218,w,b	;volatile
  6643   003C7A  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  6644   003C7C  0BDF               	andlw	-33
  6645   003C7E  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  6646   003C80  6FDA               	movwf	218,b	;volatile
  6647   003C82                     
  6648                           ; BSR set to: 14
  6649                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6650   003C82  89DA               	bsf	218,4,b	;volatile
  6651   003C84                     
  6652                           ; BSR set to: 14
  6653                           ;i2c.c: 61:   return tmp;
  6654   003C84  500F               	movf	I2C_2_Master_Read@tmp^0,w,c
  6655   003C86                     
  6656                           ; BSR set to: 14
  6657   003C86  0012               	return		;funcret
  6658   003C88                     __end_of_I2C_2_Master_Read:
  6659                           	callstack 0
  6660                           
  6661 ;; *************** function _I2C_2_Master_Idle *****************
  6662 ;; Defined at:
  6663 ;;		line 22 in file "i2c.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;		None
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg, status,2, status,0
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6679 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6681 ;;Total ram usage:        1 bytes
  6682 ;; Hardware stack levels used: 1
  6683 ;; Hardware stack levels required when called: 5
  6684 ;; This function calls:
  6685 ;;		Nothing
  6686 ;; This function is called by:
  6687 ;;		_I2C_2_Master_Start
  6688 ;;		_I2C_2_Master_RepStart
  6689 ;;		_I2C_2_Master_Stop
  6690 ;;		_I2C_2_Master_Write
  6691 ;;		_I2C_2_Master_Read
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           	psect	text24
  6696   003D48                     __ptext24:
  6697                           	callstack 0
  6698   003D48                     _I2C_2_Master_Idle:
  6699                           	callstack 23
  6700   003D48                     l203:
  6701   003D48  010E               	movlb	14	; () banked
  6702   003D4A  B5D8               	btfsc	216,2,b	;volatile
  6703   003D4C  EFAA  F01E         	goto	u1251
  6704   003D50  EFAC  F01E         	goto	u1250
  6705   003D54                     u1251:
  6706   003D54  EFA4  F01E         	goto	l203
  6707   003D58                     u1250:
  6708   003D58                     
  6709                           ; BSR set to: 14
  6710   003D58  CEDA F00C          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6711   003D5C  0E1F               	movlw	31
  6712   003D5E  160C               	andwf	??_I2C_2_Master_Idle^0,f,c
  6713   003D60  A4D8               	btfss	status,2,c
  6714   003D62  EFB5  F01E         	goto	u1261
  6715   003D66  EFB7  F01E         	goto	u1260
  6716   003D6A                     u1261:
  6717   003D6A  EFA4  F01E         	goto	l203
  6718   003D6E                     u1260:
  6719   003D6E                     
  6720                           ; BSR set to: 14
  6721   003D6E  0012               	return		;funcret
  6722   003D70                     __end_of_I2C_2_Master_Idle:
  6723                           	callstack 0
  6724                           
  6725 ;; *************** function _color_normalise *****************
  6726 ;; Defined at:
  6727 ;;		line 114 in file "color.c"
  6728 ;; Parameters:    Size  Location     Type
  6729 ;;  RGBC            8   37[COMRAM] struct RGBC_val
  6730 ;;  RGBC_n          2   45[COMRAM] PTR struct RGBC_val
  6731 ;;		 -> main@RGBC_n(8), 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;		None
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6743 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6746 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6747 ;;Total ram usage:       12 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; Hardware stack levels required when called: 6
  6750 ;; This function calls:
  6751 ;;		___aldiv
  6752 ;;		___lmul
  6753 ;; This function is called by:
  6754 ;;		_main
  6755 ;;		_color_calibration
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text25
  6760   00339C                     __ptext25:
  6761                           	callstack 0
  6762   00339C                     _color_normalise:
  6763                           	callstack 24
  6764   00339C                     
  6765                           ;color.c: 132:     RGBC_n->C = RGBC.C;
  6766   00339C  EE20 F006          	lfsr	2,6
  6767   0033A0  502E               	movf	color_normalise@RGBC_n^0,w,c
  6768   0033A2  26D9               	addwf	fsr2l,f,c
  6769   0033A4  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  6770   0033A6  22DA               	addwfc	fsr2h,f,c
  6771   0033A8  C02C  FFDE         	movff	color_normalise@RGBC+6,postinc2
  6772   0033AC  C02D  FFDD         	movff	color_normalise@RGBC+7,postdec2
  6773   0033B0                     
  6774                           ;color.c: 133:     RGBC_n->R = 1000L*RGBC.R/(RGBC.R+RGBC.G+RGBC.B);
  6775   0033B0  C026  F00C         	movff	color_normalise@RGBC,___lmul@multiplier
  6776   0033B4  C027  F00D         	movff	color_normalise@RGBC+1,___lmul@multiplier+1
  6777   0033B8  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6778   0033BA  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6779   0033BC  0EE8               	movlw	232
  6780   0033BE  6E10               	movwf	___lmul@multiplicand^0,c
  6781   0033C0  0E03               	movlw	3
  6782   0033C2  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6783   0033C4  0E00               	movlw	0
  6784   0033C6  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6785   0033C8  0E00               	movlw	0
  6786   0033CA  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6787   0033CC  ECC7  F01D         	call	___lmul	;wreg free
  6788   0033D0  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6789   0033D4  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6790   0033D8  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6791   0033DC  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6792   0033E0  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  6793   0033E2  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  6794   0033E4  6E30               	movwf	??_color_normalise^0,c
  6795   0033E6  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  6796   0033E8  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  6797   0033EA  6E31               	movwf	(??_color_normalise+1)^0,c
  6798   0033EC  5026               	movf	color_normalise@RGBC^0,w,c
  6799   0033EE  2630               	addwf	??_color_normalise^0,f,c
  6800   0033F0  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  6801   0033F2  2231               	addwfc	(??_color_normalise+1)^0,f,c
  6802   0033F4  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  6803   0033F8  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  6804   0033FC  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  6805   0033FE  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  6806   003400  EC73  F01A         	call	___aldiv	;wreg free
  6807   003404  C02E  FFD9         	movff	color_normalise@RGBC_n,fsr2l
  6808   003408  C02F  FFDA         	movff	color_normalise@RGBC_n+1,fsr2h
  6809   00340C  C018  FFDE         	movff	?___aldiv,postinc2
  6810   003410  C019  FFDD         	movff	?___aldiv+1,postdec2
  6811   003414                     
  6812                           ;color.c: 134:     RGBC_n->G = 1000L*RGBC.G/(RGBC.R+RGBC.G+RGBC.B);
  6813   003414  C028  F00C         	movff	color_normalise@RGBC+2,___lmul@multiplier
  6814   003418  C029  F00D         	movff	color_normalise@RGBC+3,___lmul@multiplier+1
  6815   00341C  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6816   00341E  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6817   003420  0EE8               	movlw	232
  6818   003422  6E10               	movwf	___lmul@multiplicand^0,c
  6819   003424  0E03               	movlw	3
  6820   003426  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6821   003428  0E00               	movlw	0
  6822   00342A  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6823   00342C  0E00               	movlw	0
  6824   00342E  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6825   003430  ECC7  F01D         	call	___lmul	;wreg free
  6826   003434  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6827   003438  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6828   00343C  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6829   003440  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6830   003444  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  6831   003446  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  6832   003448  6E30               	movwf	??_color_normalise^0,c
  6833   00344A  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  6834   00344C  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  6835   00344E  6E31               	movwf	(??_color_normalise+1)^0,c
  6836   003450  5026               	movf	color_normalise@RGBC^0,w,c
  6837   003452  2630               	addwf	??_color_normalise^0,f,c
  6838   003454  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  6839   003456  2231               	addwfc	(??_color_normalise+1)^0,f,c
  6840   003458  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  6841   00345C  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  6842   003460  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  6843   003462  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  6844   003464  EC73  F01A         	call	___aldiv	;wreg free
  6845   003468  EE20 F002          	lfsr	2,2
  6846   00346C  502E               	movf	color_normalise@RGBC_n^0,w,c
  6847   00346E  26D9               	addwf	fsr2l,f,c
  6848   003470  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  6849   003472  22DA               	addwfc	fsr2h,f,c
  6850   003474  C018  FFDE         	movff	?___aldiv,postinc2
  6851   003478  C019  FFDD         	movff	?___aldiv+1,postdec2
  6852   00347C                     
  6853                           ;color.c: 135:     RGBC_n->B = 1000L*RGBC.B/(RGBC.R+RGBC.G+RGBC.B);
  6854   00347C  C02A  F00C         	movff	color_normalise@RGBC+4,___lmul@multiplier
  6855   003480  C02B  F00D         	movff	color_normalise@RGBC+5,___lmul@multiplier+1
  6856   003484  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6857   003486  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6858   003488  0EE8               	movlw	232
  6859   00348A  6E10               	movwf	___lmul@multiplicand^0,c
  6860   00348C  0E03               	movlw	3
  6861   00348E  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6862   003490  0E00               	movlw	0
  6863   003492  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6864   003494  0E00               	movlw	0
  6865   003496  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6866   003498  ECC7  F01D         	call	___lmul	;wreg free
  6867   00349C  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6868   0034A0  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6869   0034A4  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6870   0034A8  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6871   0034AC  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  6872   0034AE  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  6873   0034B0  6E30               	movwf	??_color_normalise^0,c
  6874   0034B2  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  6875   0034B4  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  6876   0034B6  6E31               	movwf	(??_color_normalise+1)^0,c
  6877   0034B8  5026               	movf	color_normalise@RGBC^0,w,c
  6878   0034BA  2630               	addwf	??_color_normalise^0,f,c
  6879   0034BC  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  6880   0034BE  2231               	addwfc	(??_color_normalise+1)^0,f,c
  6881   0034C0  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  6882   0034C4  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  6883   0034C8  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  6884   0034CA  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  6885   0034CC  EC73  F01A         	call	___aldiv	;wreg free
  6886   0034D0  EE20 F004          	lfsr	2,4
  6887   0034D4  502E               	movf	color_normalise@RGBC_n^0,w,c
  6888   0034D6  26D9               	addwf	fsr2l,f,c
  6889   0034D8  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  6890   0034DA  22DA               	addwfc	fsr2h,f,c
  6891   0034DC  C018  FFDE         	movff	?___aldiv,postinc2
  6892   0034E0  C019  FFDD         	movff	?___aldiv+1,postdec2
  6893   0034E4  0012               	return		;funcret
  6894   0034E6                     __end_of_color_normalise:
  6895                           	callstack 0
  6896                           
  6897 ;; *************** function ___lmul *****************
  6898 ;; Defined at:
  6899 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;  multiplier      4   11[COMRAM] unsigned long 
  6902 ;;  multiplicand    4   15[COMRAM] unsigned long 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;  product         4   19[COMRAM] unsigned long 
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  4   11[COMRAM] unsigned long 
  6907 ;; Registers used:
  6908 ;;		wreg, status,2, status,0
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6914 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6915 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6917 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6918 ;;Total ram usage:       12 bytes
  6919 ;; Hardware stack levels used: 1
  6920 ;; Hardware stack levels required when called: 5
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_color_normalise
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           	psect	text26
  6929   003B8E                     __ptext26:
  6930                           	callstack 0
  6931   003B8E                     ___lmul:
  6932                           	callstack 24
  6933   003B8E  0E00               	movlw	0
  6934   003B90  6E14               	movwf	___lmul@product^0,c
  6935   003B92  0E00               	movlw	0
  6936   003B94  6E15               	movwf	(___lmul@product+1)^0,c
  6937   003B96  0E00               	movlw	0
  6938   003B98  6E16               	movwf	(___lmul@product+2)^0,c
  6939   003B9A  0E00               	movlw	0
  6940   003B9C  6E17               	movwf	(___lmul@product+3)^0,c
  6941   003B9E                     l2799:
  6942   003B9E  A00C               	btfss	___lmul@multiplier^0,0,c
  6943   003BA0  EFD4  F01D         	goto	u1551
  6944   003BA4  EFD6  F01D         	goto	u1550
  6945   003BA8                     u1551:
  6946   003BA8  EFDE  F01D         	goto	l2803
  6947   003BAC                     u1550:
  6948   003BAC  5010               	movf	___lmul@multiplicand^0,w,c
  6949   003BAE  2614               	addwf	___lmul@product^0,f,c
  6950   003BB0  5011               	movf	(___lmul@multiplicand+1)^0,w,c
  6951   003BB2  2215               	addwfc	(___lmul@product+1)^0,f,c
  6952   003BB4  5012               	movf	(___lmul@multiplicand+2)^0,w,c
  6953   003BB6  2216               	addwfc	(___lmul@product+2)^0,f,c
  6954   003BB8  5013               	movf	(___lmul@multiplicand+3)^0,w,c
  6955   003BBA  2217               	addwfc	(___lmul@product+3)^0,f,c
  6956   003BBC                     l2803:
  6957   003BBC  90D8               	bcf	status,0,c
  6958   003BBE  3610               	rlcf	___lmul@multiplicand^0,f,c
  6959   003BC0  3611               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6960   003BC2  3612               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6961   003BC4  3613               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6962   003BC6  90D8               	bcf	status,0,c
  6963   003BC8  320F               	rrcf	(___lmul@multiplier+3)^0,f,c
  6964   003BCA  320E               	rrcf	(___lmul@multiplier+2)^0,f,c
  6965   003BCC  320D               	rrcf	(___lmul@multiplier+1)^0,f,c
  6966   003BCE  320C               	rrcf	___lmul@multiplier^0,f,c
  6967   003BD0  500C               	movf	___lmul@multiplier^0,w,c
  6968   003BD2  100D               	iorwf	(___lmul@multiplier+1)^0,w,c
  6969   003BD4  100E               	iorwf	(___lmul@multiplier+2)^0,w,c
  6970   003BD6  100F               	iorwf	(___lmul@multiplier+3)^0,w,c
  6971   003BD8  A4D8               	btfss	status,2,c
  6972   003BDA  EFF1  F01D         	goto	u1561
  6973   003BDE  EFF3  F01D         	goto	u1560
  6974   003BE2                     u1561:
  6975   003BE2  EFCF  F01D         	goto	l2799
  6976   003BE6                     u1560:
  6977   003BE6  C014  F00C         	movff	___lmul@product,?___lmul
  6978   003BEA  C015  F00D         	movff	___lmul@product+1,?___lmul+1
  6979   003BEE  C016  F00E         	movff	___lmul@product+2,?___lmul+2
  6980   003BF2  C017  F00F         	movff	___lmul@product+3,?___lmul+3
  6981   003BF6  0012               	return		;funcret
  6982   003BF8                     __end_of___lmul:
  6983                           	callstack 0
  6984                           
  6985 ;; *************** function ___aldiv *****************
  6986 ;; Defined at:
  6987 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  dividend        4   23[COMRAM] long 
  6990 ;;  divisor         4   27[COMRAM] long 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  quotient        4   33[COMRAM] long 
  6993 ;;  sign            1   32[COMRAM] unsigned char 
  6994 ;;  counter         1   31[COMRAM] unsigned char 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  4   23[COMRAM] long 
  6997 ;; Registers used:
  6998 ;;		wreg, status,2, status,0
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7004 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7005 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7007 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7008 ;;Total ram usage:       14 bytes
  7009 ;; Hardware stack levels used: 1
  7010 ;; Hardware stack levels required when called: 5
  7011 ;; This function calls:
  7012 ;;		Nothing
  7013 ;; This function is called by:
  7014 ;;		_color_normalise
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text27
  7019   0034E6                     __ptext27:
  7020                           	callstack 0
  7021   0034E6                     ___aldiv:
  7022                           	callstack 24
  7023   0034E6  0E00               	movlw	0
  7024   0034E8  6E21               	movwf	___aldiv@sign^0,c
  7025   0034EA  BE1F               	btfsc	(___aldiv@divisor+3)^0,7,c
  7026   0034EC  EF7C  F01A         	goto	u1570
  7027   0034F0  EF7A  F01A         	goto	u1571
  7028   0034F4                     u1571:
  7029   0034F4  EF86  F01A         	goto	l2815
  7030   0034F8                     u1570:
  7031   0034F8  1E1F               	comf	(___aldiv@divisor+3)^0,f,c
  7032   0034FA  1E1E               	comf	(___aldiv@divisor+2)^0,f,c
  7033   0034FC  1E1D               	comf	(___aldiv@divisor+1)^0,f,c
  7034   0034FE  6C1C               	negf	___aldiv@divisor^0,c
  7035   003500  0E00               	movlw	0
  7036   003502  221D               	addwfc	(___aldiv@divisor+1)^0,f,c
  7037   003504  221E               	addwfc	(___aldiv@divisor+2)^0,f,c
  7038   003506  221F               	addwfc	(___aldiv@divisor+3)^0,f,c
  7039   003508  0E01               	movlw	1
  7040   00350A  6E21               	movwf	___aldiv@sign^0,c
  7041   00350C                     l2815:
  7042   00350C  BE1B               	btfsc	(___aldiv@dividend+3)^0,7,c
  7043   00350E  EF8D  F01A         	goto	u1580
  7044   003512  EF8B  F01A         	goto	u1581
  7045   003516                     u1581:
  7046   003516  EF97  F01A         	goto	l2821
  7047   00351A                     u1580:
  7048   00351A  1E1B               	comf	(___aldiv@dividend+3)^0,f,c
  7049   00351C  1E1A               	comf	(___aldiv@dividend+2)^0,f,c
  7050   00351E  1E19               	comf	(___aldiv@dividend+1)^0,f,c
  7051   003520  6C18               	negf	___aldiv@dividend^0,c
  7052   003522  0E00               	movlw	0
  7053   003524  2219               	addwfc	(___aldiv@dividend+1)^0,f,c
  7054   003526  221A               	addwfc	(___aldiv@dividend+2)^0,f,c
  7055   003528  221B               	addwfc	(___aldiv@dividend+3)^0,f,c
  7056   00352A  0E01               	movlw	1
  7057   00352C  1A21               	xorwf	___aldiv@sign^0,f,c
  7058   00352E                     l2821:
  7059   00352E  0E00               	movlw	0
  7060   003530  6E22               	movwf	___aldiv@quotient^0,c
  7061   003532  0E00               	movlw	0
  7062   003534  6E23               	movwf	(___aldiv@quotient+1)^0,c
  7063   003536  0E00               	movlw	0
  7064   003538  6E24               	movwf	(___aldiv@quotient+2)^0,c
  7065   00353A  0E00               	movlw	0
  7066   00353C  6E25               	movwf	(___aldiv@quotient+3)^0,c
  7067   00353E  501C               	movf	___aldiv@divisor^0,w,c
  7068   003540  101D               	iorwf	(___aldiv@divisor+1)^0,w,c
  7069   003542  101E               	iorwf	(___aldiv@divisor+2)^0,w,c
  7070   003544  101F               	iorwf	(___aldiv@divisor+3)^0,w,c
  7071   003546  B4D8               	btfsc	status,2,c
  7072   003548  EFA8  F01A         	goto	u1591
  7073   00354C  EFAA  F01A         	goto	u1590
  7074   003550                     u1591:
  7075   003550  EFE0  F01A         	goto	l2843
  7076   003554                     u1590:
  7077   003554  0E01               	movlw	1
  7078   003556  6E20               	movwf	___aldiv@counter^0,c
  7079   003558  EFB4  F01A         	goto	l2829
  7080   00355C                     l2827:
  7081   00355C  90D8               	bcf	status,0,c
  7082   00355E  361C               	rlcf	___aldiv@divisor^0,f,c
  7083   003560  361D               	rlcf	(___aldiv@divisor+1)^0,f,c
  7084   003562  361E               	rlcf	(___aldiv@divisor+2)^0,f,c
  7085   003564  361F               	rlcf	(___aldiv@divisor+3)^0,f,c
  7086   003566  2A20               	incf	___aldiv@counter^0,f,c
  7087   003568                     l2829:
  7088   003568  AE1F               	btfss	(___aldiv@divisor+3)^0,7,c
  7089   00356A  EFB9  F01A         	goto	u1601
  7090   00356E  EFBB  F01A         	goto	u1600
  7091   003572                     u1601:
  7092   003572  EFAE  F01A         	goto	l2827
  7093   003576                     u1600:
  7094   003576                     l2831:
  7095   003576  90D8               	bcf	status,0,c
  7096   003578  3622               	rlcf	___aldiv@quotient^0,f,c
  7097   00357A  3623               	rlcf	(___aldiv@quotient+1)^0,f,c
  7098   00357C  3624               	rlcf	(___aldiv@quotient+2)^0,f,c
  7099   00357E  3625               	rlcf	(___aldiv@quotient+3)^0,f,c
  7100   003580  501C               	movf	___aldiv@divisor^0,w,c
  7101   003582  5C18               	subwf	___aldiv@dividend^0,w,c
  7102   003584  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7103   003586  5819               	subwfb	(___aldiv@dividend+1)^0,w,c
  7104   003588  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7105   00358A  581A               	subwfb	(___aldiv@dividend+2)^0,w,c
  7106   00358C  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7107   00358E  581B               	subwfb	(___aldiv@dividend+3)^0,w,c
  7108   003590  A0D8               	btfss	status,0,c
  7109   003592  EFCD  F01A         	goto	u1611
  7110   003596  EFCF  F01A         	goto	u1610
  7111   00359A                     u1611:
  7112   00359A  EFD8  F01A         	goto	l2839
  7113   00359E                     u1610:
  7114   00359E  501C               	movf	___aldiv@divisor^0,w,c
  7115   0035A0  5E18               	subwf	___aldiv@dividend^0,f,c
  7116   0035A2  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7117   0035A4  5A19               	subwfb	(___aldiv@dividend+1)^0,f,c
  7118   0035A6  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7119   0035A8  5A1A               	subwfb	(___aldiv@dividend+2)^0,f,c
  7120   0035AA  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7121   0035AC  5A1B               	subwfb	(___aldiv@dividend+3)^0,f,c
  7122   0035AE  8022               	bsf	___aldiv@quotient^0,0,c
  7123   0035B0                     l2839:
  7124   0035B0  90D8               	bcf	status,0,c
  7125   0035B2  321F               	rrcf	(___aldiv@divisor+3)^0,f,c
  7126   0035B4  321E               	rrcf	(___aldiv@divisor+2)^0,f,c
  7127   0035B6  321D               	rrcf	(___aldiv@divisor+1)^0,f,c
  7128   0035B8  321C               	rrcf	___aldiv@divisor^0,f,c
  7129   0035BA  2E20               	decfsz	___aldiv@counter^0,f,c
  7130   0035BC  EFBB  F01A         	goto	l2831
  7131   0035C0                     l2843:
  7132   0035C0  5021               	movf	___aldiv@sign^0,w,c
  7133   0035C2  B4D8               	btfsc	status,2,c
  7134   0035C4  EFE6  F01A         	goto	u1621
  7135   0035C8  EFE8  F01A         	goto	u1620
  7136   0035CC                     u1621:
  7137   0035CC  EFF0  F01A         	goto	l2847
  7138   0035D0                     u1620:
  7139   0035D0  1E25               	comf	(___aldiv@quotient+3)^0,f,c
  7140   0035D2  1E24               	comf	(___aldiv@quotient+2)^0,f,c
  7141   0035D4  1E23               	comf	(___aldiv@quotient+1)^0,f,c
  7142   0035D6  6C22               	negf	___aldiv@quotient^0,c
  7143   0035D8  0E00               	movlw	0
  7144   0035DA  2223               	addwfc	(___aldiv@quotient+1)^0,f,c
  7145   0035DC  2224               	addwfc	(___aldiv@quotient+2)^0,f,c
  7146   0035DE  2225               	addwfc	(___aldiv@quotient+3)^0,f,c
  7147   0035E0                     l2847:
  7148   0035E0  C022  F018         	movff	___aldiv@quotient,?___aldiv
  7149   0035E4  C023  F019         	movff	___aldiv@quotient+1,?___aldiv+1
  7150   0035E8  C024  F01A         	movff	___aldiv@quotient+2,?___aldiv+2
  7151   0035EC  C025  F01B         	movff	___aldiv@quotient+3,?___aldiv+3
  7152   0035F0  0012               	return		;funcret
  7153   0035F2                     __end_of___aldiv:
  7154                           	callstack 0
  7155                           
  7156 ;; *************** function _calibration *****************
  7157 ;; Defined at:
  7158 ;;		line 482 in file "dc_motor.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  7161 ;;		 -> main@motorL(10), 
  7162 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  7163 ;;		 -> main@motorR(10), 
  7164 ;;  turnSpeed       1   48[COMRAM] unsigned char 
  7165 ;;  turnDuration    2   49[COMRAM] PTR unsigned char 
  7166 ;;		 -> main@turnDuration(1), 
  7167 ;;  turnRamp        1   51[COMRAM] unsigned char 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;		None
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      void 
  7172 ;; Registers used:
  7173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7179 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7182 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7183 ;;Total ram usage:       10 bytes
  7184 ;; Hardware stack levels used: 1
  7185 ;; Hardware stack levels required when called: 8
  7186 ;; This function calls:
  7187 ;;		_turnLeft
  7188 ;;		_turnRight
  7189 ;; This function is called by:
  7190 ;;		_main
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text28
  7195   0025F2                     __ptext28:
  7196                           	callstack 0
  7197   0025F2                     _calibration:
  7198                           	callstack 22
  7199   0025F2                     
  7200                           ;dc_motor.c: 482: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 483: {;dc_motor.c: 485:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7201   0025F2  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7202   0025F6  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7203   0025FA  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7204   0025FE  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7205   002602  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7206   002606  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7207   00260A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7208   00260E  50DF               	movf	indf2,w,c
  7209   002610  6E24               	movwf	turnLeft@turnDuration^0,c
  7210   002612  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7211   002616  EC2E  F018         	call	_turnLeft	;wreg free
  7212   00261A                     
  7213                           ;dc_motor.c: 486:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7214   00261A  0E05               	movlw	5
  7215   00261C  6E36               	movwf	(??_calibration+1)^0,c
  7216   00261E  0E0F               	movlw	15
  7217   002620  6E35               	movwf	??_calibration^0,c
  7218   002622  0EF1               	movlw	241
  7219   002624                     u3507:
  7220   002624  2EE8               	decfsz	wreg,f,c
  7221   002626  D7FE               	bra	u3507
  7222   002628  2E35               	decfsz	??_calibration^0,f,c
  7223   00262A  D7FC               	bra	u3507
  7224   00262C  2E36               	decfsz	(??_calibration+1)^0,f,c
  7225   00262E  D7FA               	bra	u3507
  7226   002630  0000               	nop	
  7227   002632                     
  7228                           ;dc_motor.c: 487:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7229   002632  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7230   002636  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7231   00263A  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7232   00263E  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7233   002642  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7234   002646  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7235   00264A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7236   00264E  50DF               	movf	indf2,w,c
  7237   002650  6E24               	movwf	turnLeft@turnDuration^0,c
  7238   002652  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7239   002656  EC2E  F018         	call	_turnLeft	;wreg free
  7240                           
  7241                           ;dc_motor.c: 488:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7242   00265A  0E05               	movlw	5
  7243   00265C  6E36               	movwf	(??_calibration+1)^0,c
  7244   00265E  0E0F               	movlw	15
  7245   002660  6E35               	movwf	??_calibration^0,c
  7246   002662  0EF1               	movlw	241
  7247   002664                     u3517:
  7248   002664  2EE8               	decfsz	wreg,f,c
  7249   002666  D7FE               	bra	u3517
  7250   002668  2E35               	decfsz	??_calibration^0,f,c
  7251   00266A  D7FC               	bra	u3517
  7252   00266C  2E36               	decfsz	(??_calibration+1)^0,f,c
  7253   00266E  D7FA               	bra	u3517
  7254   002670  0000               	nop	
  7255   002672                     
  7256                           ;dc_motor.c: 489:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7257   002672  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7258   002676  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7259   00267A  C02F  F021         	movff	calibration@mR,turnRight@mR
  7260   00267E  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7261   002682  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7262   002686  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7263   00268A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7264   00268E  50DF               	movf	indf2,w,c
  7265   002690  6E24               	movwf	turnRight@turnDuration^0,c
  7266   002692  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7267   002696  EC44  F017         	call	_turnRight	;wreg free
  7268   00269A                     
  7269                           ;dc_motor.c: 490:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7270   00269A  0E05               	movlw	5
  7271   00269C  6E36               	movwf	(??_calibration+1)^0,c
  7272   00269E  0E0F               	movlw	15
  7273   0026A0  6E35               	movwf	??_calibration^0,c
  7274   0026A2  0EF1               	movlw	241
  7275   0026A4                     u3527:
  7276   0026A4  2EE8               	decfsz	wreg,f,c
  7277   0026A6  D7FE               	bra	u3527
  7278   0026A8  2E35               	decfsz	??_calibration^0,f,c
  7279   0026AA  D7FC               	bra	u3527
  7280   0026AC  2E36               	decfsz	(??_calibration+1)^0,f,c
  7281   0026AE  D7FA               	bra	u3527
  7282   0026B0  0000               	nop	
  7283                           
  7284                           ;dc_motor.c: 491:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7285   0026B2  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7286   0026B6  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7287   0026BA  C02F  F021         	movff	calibration@mR,turnRight@mR
  7288   0026BE  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7289   0026C2  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7290   0026C6  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7291   0026CA  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7292   0026CE  50DF               	movf	indf2,w,c
  7293   0026D0  6E24               	movwf	turnRight@turnDuration^0,c
  7294   0026D2  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7295   0026D6  EC44  F017         	call	_turnRight	;wreg free
  7296   0026DA                     l635:
  7297   0026DA  A48E               	btfss	142,2,c	;volatile
  7298   0026DC  EF72  F013         	goto	u1891
  7299   0026E0  EF74  F013         	goto	u1890
  7300   0026E4                     u1891:
  7301   0026E4  EF7B  F013         	goto	l639
  7302   0026E8                     u1890:
  7303   0026E8  B68E               	btfsc	142,3,c	;volatile
  7304   0026EA  EF79  F013         	goto	u1901
  7305   0026EE  EF7B  F013         	goto	u1900
  7306   0026F2                     u1901:
  7307   0026F2  EF6D  F013         	goto	l635
  7308   0026F6                     u1900:
  7309   0026F6                     l639:
  7310                           
  7311                           ;dc_motor.c: 496:         if (!PORTFbits.RF2 && *turnDuration>0) {
  7312   0026F6  B48E               	btfsc	142,2,c	;volatile
  7313   0026F8  EF80  F013         	goto	u1911
  7314   0026FC  EF82  F013         	goto	u1910
  7315   002700                     u1911:
  7316   002700  EF96  F013         	goto	l640
  7317   002704                     u1910:
  7318   002704  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7319   002708  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7320   00270C  50DF               	movf	indf2,w,c
  7321   00270E  B4D8               	btfsc	status,2,c
  7322   002710  EF8C  F013         	goto	u1921
  7323   002714  EF8E  F013         	goto	u1920
  7324   002718                     u1921:
  7325   002718  EF96  F013         	goto	l640
  7326   00271C                     u1920:
  7327   00271C                     
  7328                           ;dc_motor.c: 497:             (*turnDuration)--;
  7329   00271C  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7330   002720  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7331   002724  06DF               	decf	indf2,f,c
  7332   002726                     
  7333                           ;dc_motor.c: 498:             LATDbits.LATD7 = 1;
  7334   002726  8E7C               	bsf	124,7,c	;volatile
  7335                           
  7336                           ;dc_motor.c: 499:         }
  7337   002728  EFA3  F013         	goto	l3233
  7338   00272C                     l640:
  7339   00272C  B68E               	btfsc	142,3,c	;volatile
  7340   00272E  EF9B  F013         	goto	u1931
  7341   002732  EF9D  F013         	goto	u1930
  7342   002736                     u1931:
  7343   002736  EFA3  F013         	goto	l3233
  7344   00273A                     u1930:
  7345   00273A                     
  7346                           ;dc_motor.c: 502:             (*turnDuration)++;
  7347   00273A  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7348   00273E  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7349   002742  2ADF               	incf	indf2,f,c
  7350   002744                     
  7351                           ;dc_motor.c: 503:             LATHbits.LATH3 = 1;
  7352   002744  8680               	bsf	128,3,c	;volatile
  7353   002746                     l3233:
  7354                           
  7355                           ;dc_motor.c: 506:         _delay((unsigned long)((500)*(64000000/4000.0)));
  7356   002746  0E29               	movlw	41
  7357   002748  6E36               	movwf	(??_calibration+1)^0,c
  7358   00274A  0E96               	movlw	150
  7359   00274C  6E35               	movwf	??_calibration^0,c
  7360   00274E  0E7F               	movlw	127
  7361   002750                     u3537:
  7362   002750  2EE8               	decfsz	wreg,f,c
  7363   002752  D7FE               	bra	u3537
  7364   002754  2E35               	decfsz	??_calibration^0,f,c
  7365   002756  D7FC               	bra	u3537
  7366   002758  2E36               	decfsz	(??_calibration+1)^0,f,c
  7367   00275A  D7FA               	bra	u3537
  7368   00275C  0000               	nop	
  7369   00275E                     
  7370                           ;dc_motor.c: 508:         if (!PORTFbits.RF3) {
  7371   00275E  B68E               	btfsc	142,3,c	;volatile
  7372   002760  EFB4  F013         	goto	u1941
  7373   002764  EFB6  F013         	goto	u1940
  7374   002768                     u1941:
  7375   002768  EFBD  F013         	goto	l643
  7376   00276C                     u1940:
  7377   00276C                     
  7378                           ;dc_motor.c: 509:             (*turnDuration)--;
  7379   00276C  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7380   002770  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7381   002774  06DF               	decf	indf2,f,c
  7382                           
  7383                           ;dc_motor.c: 510:             break;
  7384   002776  EF35  F014         	goto	l644
  7385   00277A                     l643:
  7386                           
  7387                           ;dc_motor.c: 513:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7388   00277A  9680               	bcf	128,3,c	;volatile
  7389   00277C  9E7C               	bcf	124,7,c	;volatile
  7390   00277E                     
  7391                           ;dc_motor.c: 516:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7392   00277E  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7393   002782  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7394   002786  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7395   00278A  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7396   00278E  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7397   002792  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7398   002796  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7399   00279A  50DF               	movf	indf2,w,c
  7400   00279C  6E24               	movwf	turnLeft@turnDuration^0,c
  7401   00279E  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7402   0027A2  EC2E  F018         	call	_turnLeft	;wreg free
  7403   0027A6                     
  7404                           ;dc_motor.c: 517:         _delay((unsigned long)((50)*(64000000/4000.0)));
  7405   0027A6  0E05               	movlw	5
  7406   0027A8  6E36               	movwf	(??_calibration+1)^0,c
  7407   0027AA  0E0F               	movlw	15
  7408   0027AC  6E35               	movwf	??_calibration^0,c
  7409   0027AE  0EF1               	movlw	241
  7410   0027B0                     u3547:
  7411   0027B0  2EE8               	decfsz	wreg,f,c
  7412   0027B2  D7FE               	bra	u3547
  7413   0027B4  2E35               	decfsz	??_calibration^0,f,c
  7414   0027B6  D7FC               	bra	u3547
  7415   0027B8  2E36               	decfsz	(??_calibration+1)^0,f,c
  7416   0027BA  D7FA               	bra	u3547
  7417   0027BC  0000               	nop	
  7418   0027BE                     
  7419                           ;dc_motor.c: 518:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7420   0027BE  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7421   0027C2  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7422   0027C6  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7423   0027CA  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7424   0027CE  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7425   0027D2  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7426   0027D6  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7427   0027DA  50DF               	movf	indf2,w,c
  7428   0027DC  6E24               	movwf	turnLeft@turnDuration^0,c
  7429   0027DE  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7430   0027E2  EC2E  F018         	call	_turnLeft	;wreg free
  7431                           
  7432                           ;dc_motor.c: 519:         _delay((unsigned long)((50)*(64000000/4000.0)));
  7433   0027E6  0E05               	movlw	5
  7434   0027E8  6E36               	movwf	(??_calibration+1)^0,c
  7435   0027EA  0E0F               	movlw	15
  7436   0027EC  6E35               	movwf	??_calibration^0,c
  7437   0027EE  0EF1               	movlw	241
  7438   0027F0                     u3557:
  7439   0027F0  2EE8               	decfsz	wreg,f,c
  7440   0027F2  D7FE               	bra	u3557
  7441   0027F4  2E35               	decfsz	??_calibration^0,f,c
  7442   0027F6  D7FC               	bra	u3557
  7443   0027F8  2E36               	decfsz	(??_calibration+1)^0,f,c
  7444   0027FA  D7FA               	bra	u3557
  7445   0027FC  0000               	nop	
  7446   0027FE                     
  7447                           ;dc_motor.c: 520:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7448   0027FE  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7449   002802  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7450   002806  C02F  F021         	movff	calibration@mR,turnRight@mR
  7451   00280A  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7452   00280E  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7453   002812  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7454   002816  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7455   00281A  50DF               	movf	indf2,w,c
  7456   00281C  6E24               	movwf	turnRight@turnDuration^0,c
  7457   00281E  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7458   002822  EC44  F017         	call	_turnRight	;wreg free
  7459   002826                     
  7460                           ;dc_motor.c: 521:         _delay((unsigned long)((50)*(64000000/4000.0)));
  7461   002826  0E05               	movlw	5
  7462   002828  6E36               	movwf	(??_calibration+1)^0,c
  7463   00282A  0E0F               	movlw	15
  7464   00282C  6E35               	movwf	??_calibration^0,c
  7465   00282E  0EF1               	movlw	241
  7466   002830                     u3567:
  7467   002830  2EE8               	decfsz	wreg,f,c
  7468   002832  D7FE               	bra	u3567
  7469   002834  2E35               	decfsz	??_calibration^0,f,c
  7470   002836  D7FC               	bra	u3567
  7471   002838  2E36               	decfsz	(??_calibration+1)^0,f,c
  7472   00283A  D7FA               	bra	u3567
  7473   00283C  0000               	nop	
  7474                           
  7475                           ;dc_motor.c: 522:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7476   00283E  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7477   002842  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7478   002846  C02F  F021         	movff	calibration@mR,turnRight@mR
  7479   00284A  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7480   00284E  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7481   002852  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7482   002856  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7483   00285A  50DF               	movf	indf2,w,c
  7484   00285C  6E24               	movwf	turnRight@turnDuration^0,c
  7485   00285E  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7486   002862  EC44  F017         	call	_turnRight	;wreg free
  7487   002866  EF6D  F013         	goto	l635
  7488   00286A                     l644:
  7489                           
  7490                           ;dc_motor.c: 527:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7491   00286A  8680               	bsf	128,3,c	;volatile
  7492   00286C  8E7C               	bsf	124,7,c	;volatile
  7493   00286E                     
  7494                           ;dc_motor.c: 528:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7495   00286E  0E09               	movlw	9
  7496   002870  6E36               	movwf	(??_calibration+1)^0,c
  7497   002872  0E1E               	movlw	30
  7498   002874  6E35               	movwf	??_calibration^0,c
  7499   002876  0EE4               	movlw	228
  7500   002878                     u3577:
  7501   002878  2EE8               	decfsz	wreg,f,c
  7502   00287A  D7FE               	bra	u3577
  7503   00287C  2E35               	decfsz	??_calibration^0,f,c
  7504   00287E  D7FC               	bra	u3577
  7505   002880  2E36               	decfsz	(??_calibration+1)^0,f,c
  7506   002882  D7FA               	bra	u3577
  7507   002884  D000               	nop2	
  7508   002886                     
  7509                           ;dc_motor.c: 529:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7510   002886  9680               	bcf	128,3,c	;volatile
  7511   002888  9E7C               	bcf	124,7,c	;volatile
  7512   00288A  0012               	return		;funcret
  7513   00288C                     __end_of_calibration:
  7514                           	callstack 0
  7515                           
  7516 ;; *************** function _turnRight *****************
  7517 ;; Defined at:
  7518 ;;		line 400 in file "dc_motor.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7521 ;;		 -> main@motorL(10), 
  7522 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7523 ;;		 -> main@motorR(10), 
  7524 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  7525 ;;  turnDuration    1   35[COMRAM] unsigned char 
  7526 ;;  turnRamp        1   36[COMRAM] unsigned char 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  cur_power       2   42[COMRAM] int 
  7529 ;;  i               2   40[COMRAM] int 
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  1    wreg      void 
  7532 ;; Registers used:
  7533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7539 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7540 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7541 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7542 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7543 ;;Total ram usage:       14 bytes
  7544 ;; Hardware stack levels used: 1
  7545 ;; Hardware stack levels required when called: 7
  7546 ;; This function calls:
  7547 ;;		_setMotorPWM
  7548 ;; This function is called by:
  7549 ;;		_move
  7550 ;;		_returnHome
  7551 ;;		_lostReturnHome
  7552 ;;		_calibration
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           	psect	text29
  7557   002E88                     __ptext29:
  7558                           	callstack 0
  7559   002E88                     _turnRight:
  7560                           	callstack 22
  7561   002E88                     
  7562                           ;dc_motor.c: 400: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 401: {;dc_motor.c: 402:     mL->dir
      +                          ection = 1;
  7563   002E88  EE20 F001          	lfsr	2,1
  7564   002E8C  501F               	movf	turnRight@mL^0,w,c
  7565   002E8E  26D9               	addwf	fsr2l,f,c
  7566   002E90  5020               	movf	(turnRight@mL+1)^0,w,c
  7567   002E92  22DA               	addwfc	fsr2h,f,c
  7568   002E94  0E01               	movlw	1
  7569   002E96  6EDF               	movwf	indf2,c
  7570                           
  7571                           ;dc_motor.c: 403:     mR->direction = 0;
  7572   002E98  EE20 F001          	lfsr	2,1
  7573   002E9C  5021               	movf	turnRight@mR^0,w,c
  7574   002E9E  26D9               	addwf	fsr2l,f,c
  7575   002EA0  5022               	movf	(turnRight@mR+1)^0,w,c
  7576   002EA2  22DA               	addwfc	fsr2h,f,c
  7577   002EA4  6ADF               	clrf	indf2,c
  7578   002EA6                     
  7579                           ;dc_motor.c: 404:     int i;;dc_motor.c: 405:     int cur_power;;dc_motor.c: 406:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  7580   002EA6  0E00               	movlw	0
  7581   002EA8  6E2C               	movwf	(turnRight@cur_power+1)^0,c
  7582   002EAA  0E01               	movlw	1
  7583   002EAC  6E2B               	movwf	turnRight@cur_power^0,c
  7584   002EAE  EFA2  F017         	goto	l2675
  7585   002EB2                     l2661:
  7586                           
  7587                           ;dc_motor.c: 407:         mL->power = cur_power+mL->compensation;
  7588   002EB2  EE20 F009          	lfsr	2,9
  7589   002EB6  501F               	movf	turnRight@mL^0,w,c
  7590   002EB8  26D9               	addwf	fsr2l,f,c
  7591   002EBA  5020               	movf	(turnRight@mL+1)^0,w,c
  7592   002EBC  22DA               	addwfc	fsr2h,f,c
  7593   002EBE  50DF               	movf	indf2,w,c
  7594   002EC0  242B               	addwf	turnRight@cur_power^0,w,c
  7595   002EC2  C01F  FFD9         	movff	turnRight@mL,fsr2l
  7596   002EC6  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  7597   002ECA  6EDF               	movwf	indf2,c
  7598                           
  7599                           ;dc_motor.c: 408:         mR->power = cur_power+mR->compensation;
  7600   002ECC  EE20 F009          	lfsr	2,9
  7601   002ED0  5021               	movf	turnRight@mR^0,w,c
  7602   002ED2  26D9               	addwf	fsr2l,f,c
  7603   002ED4  5022               	movf	(turnRight@mR+1)^0,w,c
  7604   002ED6  22DA               	addwfc	fsr2h,f,c
  7605   002ED8  50DF               	movf	indf2,w,c
  7606   002EDA  242B               	addwf	turnRight@cur_power^0,w,c
  7607   002EDC  C021  FFD9         	movff	turnRight@mR,fsr2l
  7608   002EE0  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  7609   002EE4  6EDF               	movwf	indf2,c
  7610   002EE6                     
  7611                           ;dc_motor.c: 409:         setMotorPWM(mL);
  7612   002EE6  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  7613   002EEA  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  7614   002EEE  EC18  F019         	call	_setMotorPWM	;wreg free
  7615   002EF2                     
  7616                           ;dc_motor.c: 410:         setMotorPWM(mR);
  7617   002EF2  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  7618   002EF6  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  7619   002EFA  EC18  F019         	call	_setMotorPWM	;wreg free
  7620   002EFE                     
  7621                           ;dc_motor.c: 411:         for (i=0;i<turnRamp;i++) {
  7622   002EFE  0E00               	movlw	0
  7623   002F00  6E2A               	movwf	(turnRight@i+1)^0,c
  7624   002F02  0E00               	movlw	0
  7625   002F04  6E29               	movwf	turnRight@i^0,c
  7626   002F06  EF8E  F017         	goto	l593
  7627   002F0A                     l2669:
  7628                           
  7629                           ;dc_motor.c: 412:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7630   002F0A  0ED0               	movlw	208
  7631   002F0C  6E26               	movwf	??_turnRight^0,c
  7632   002F0E  0ECA               	movlw	202
  7633   002F10                     u3587:
  7634   002F10  2EE8               	decfsz	wreg,f,c
  7635   002F12  D7FE               	bra	u3587
  7636   002F14  2E26               	decfsz	??_turnRight^0,f,c
  7637   002F16  D7FC               	bra	u3587
  7638   002F18                     
  7639                           ;dc_motor.c: 413:         }
  7640   002F18  4A29               	infsnz	turnRight@i^0,f,c
  7641   002F1A  2A2A               	incf	(turnRight@i+1)^0,f,c
  7642   002F1C                     l593:
  7643   002F1C  5025               	movf	turnRight@turnRamp^0,w,c
  7644   002F1E  6E26               	movwf	??_turnRight^0,c
  7645   002F20  6A27               	clrf	(??_turnRight+1)^0,c
  7646   002F22  5026               	movf	??_turnRight^0,w,c
  7647   002F24  5C29               	subwf	turnRight@i^0,w,c
  7648   002F26  502A               	movf	(turnRight@i+1)^0,w,c
  7649   002F28  0A80               	xorlw	128
  7650   002F2A  6E28               	movwf	(??_turnRight+2)^0,c
  7651   002F2C  5027               	movf	(??_turnRight+1)^0,w,c
  7652   002F2E  0A80               	xorlw	128
  7653   002F30  5828               	subwfb	(??_turnRight+2)^0,w,c
  7654   002F32  A0D8               	btfss	status,0,c
  7655   002F34  EF9E  F017         	goto	u1401
  7656   002F38  EFA0  F017         	goto	u1400
  7657   002F3C                     u1401:
  7658   002F3C  EF85  F017         	goto	l2669
  7659   002F40                     u1400:
  7660   002F40                     
  7661                           ;dc_motor.c: 414:     }
  7662   002F40  4A2B               	infsnz	turnRight@cur_power^0,f,c
  7663   002F42  2A2C               	incf	(turnRight@cur_power+1)^0,f,c
  7664   002F44                     l2675:
  7665   002F44  5023               	movf	turnRight@turnSpeed^0,w,c
  7666   002F46  6E26               	movwf	??_turnRight^0,c
  7667   002F48  6A27               	clrf	(??_turnRight+1)^0,c
  7668   002F4A  502B               	movf	turnRight@cur_power^0,w,c
  7669   002F4C  5C26               	subwf	??_turnRight^0,w,c
  7670   002F4E  5027               	movf	(??_turnRight+1)^0,w,c
  7671   002F50  0A80               	xorlw	128
  7672   002F52  6E28               	movwf	(??_turnRight+2)^0,c
  7673   002F54  502C               	movf	(turnRight@cur_power+1)^0,w,c
  7674   002F56  0A80               	xorlw	128
  7675   002F58  5828               	subwfb	(??_turnRight+2)^0,w,c
  7676   002F5A  B0D8               	btfsc	status,0,c
  7677   002F5C  EFB2  F017         	goto	u1411
  7678   002F60  EFB4  F017         	goto	u1410
  7679   002F64                     u1411:
  7680   002F64  EF59  F017         	goto	l2661
  7681   002F68                     u1410:
  7682   002F68                     
  7683                           ;dc_motor.c: 416:     for (i=0;i<turnDuration;i++) {
  7684   002F68  0E00               	movlw	0
  7685   002F6A  6E2A               	movwf	(turnRight@i+1)^0,c
  7686   002F6C  0E00               	movlw	0
  7687   002F6E  6E29               	movwf	turnRight@i^0,c
  7688   002F70  EFC3  F017         	goto	l597
  7689   002F74                     l2679:
  7690                           
  7691                           ;dc_motor.c: 417:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7692   002F74  0ED0               	movlw	208
  7693   002F76  6E26               	movwf	??_turnRight^0,c
  7694   002F78  0ECA               	movlw	202
  7695   002F7A                     u3597:
  7696   002F7A  2EE8               	decfsz	wreg,f,c
  7697   002F7C  D7FE               	bra	u3597
  7698   002F7E  2E26               	decfsz	??_turnRight^0,f,c
  7699   002F80  D7FC               	bra	u3597
  7700   002F82                     
  7701                           ;dc_motor.c: 418:         }
  7702   002F82  4A29               	infsnz	turnRight@i^0,f,c
  7703   002F84  2A2A               	incf	(turnRight@i+1)^0,f,c
  7704   002F86                     l597:
  7705   002F86  5024               	movf	turnRight@turnDuration^0,w,c
  7706   002F88  6E26               	movwf	??_turnRight^0,c
  7707   002F8A  6A27               	clrf	(??_turnRight+1)^0,c
  7708   002F8C  5026               	movf	??_turnRight^0,w,c
  7709   002F8E  5C29               	subwf	turnRight@i^0,w,c
  7710   002F90  502A               	movf	(turnRight@i+1)^0,w,c
  7711   002F92  0A80               	xorlw	128
  7712   002F94  6E28               	movwf	(??_turnRight+2)^0,c
  7713   002F96  5027               	movf	(??_turnRight+1)^0,w,c
  7714   002F98  0A80               	xorlw	128
  7715   002F9A  5828               	subwfb	(??_turnRight+2)^0,w,c
  7716   002F9C  A0D8               	btfss	status,0,c
  7717   002F9E  EFD3  F017         	goto	u1421
  7718   002FA2  EFD5  F017         	goto	u1420
  7719   002FA6                     u1421:
  7720   002FA6  EFBA  F017         	goto	l2679
  7721   002FAA                     u1420:
  7722   002FAA                     
  7723                           ;dc_motor.c: 420:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  7724   002FAA  C023  F02B         	movff	turnRight@turnSpeed,turnRight@cur_power
  7725   002FAE  6A2C               	clrf	(turnRight@cur_power+1)^0,c
  7726   002FB0                     l2683:
  7727   002FB0  BE2C               	btfsc	(turnRight@cur_power+1)^0,7,c
  7728   002FB2  EFDF  F017         	goto	u1430
  7729   002FB6  EFDD  F017         	goto	u1431
  7730   002FBA                     u1431:
  7731   002FBA  EFE1  F017         	goto	l2687
  7732   002FBE                     u1430:
  7733   002FBE  EF2D  F018         	goto	l605
  7734   002FC2                     l2687:
  7735                           
  7736                           ;dc_motor.c: 421:         mL->power = cur_power+mL->compensation;
  7737   002FC2  EE20 F009          	lfsr	2,9
  7738   002FC6  501F               	movf	turnRight@mL^0,w,c
  7739   002FC8  26D9               	addwf	fsr2l,f,c
  7740   002FCA  5020               	movf	(turnRight@mL+1)^0,w,c
  7741   002FCC  22DA               	addwfc	fsr2h,f,c
  7742   002FCE  50DF               	movf	indf2,w,c
  7743   002FD0  242B               	addwf	turnRight@cur_power^0,w,c
  7744   002FD2  C01F  FFD9         	movff	turnRight@mL,fsr2l
  7745   002FD6  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  7746   002FDA  6EDF               	movwf	indf2,c
  7747                           
  7748                           ;dc_motor.c: 422:         mR->power = cur_power+mR->compensation;
  7749   002FDC  EE20 F009          	lfsr	2,9
  7750   002FE0  5021               	movf	turnRight@mR^0,w,c
  7751   002FE2  26D9               	addwf	fsr2l,f,c
  7752   002FE4  5022               	movf	(turnRight@mR+1)^0,w,c
  7753   002FE6  22DA               	addwfc	fsr2h,f,c
  7754   002FE8  50DF               	movf	indf2,w,c
  7755   002FEA  242B               	addwf	turnRight@cur_power^0,w,c
  7756   002FEC  C021  FFD9         	movff	turnRight@mR,fsr2l
  7757   002FF0  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  7758   002FF4  6EDF               	movwf	indf2,c
  7759   002FF6                     
  7760                           ;dc_motor.c: 423:         setMotorPWM(mL);
  7761   002FF6  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  7762   002FFA  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  7763   002FFE  EC18  F019         	call	_setMotorPWM	;wreg free
  7764   003002                     
  7765                           ;dc_motor.c: 424:         setMotorPWM(mR);
  7766   003002  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  7767   003006  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  7768   00300A  EC18  F019         	call	_setMotorPWM	;wreg free
  7769   00300E                     
  7770                           ;dc_motor.c: 425:         for (i=0;i<turnRamp;i++) {
  7771   00300E  0E00               	movlw	0
  7772   003010  6E2A               	movwf	(turnRight@i+1)^0,c
  7773   003012  0E00               	movlw	0
  7774   003014  6E29               	movwf	turnRight@i^0,c
  7775   003016  EF16  F018         	goto	l602
  7776   00301A                     l2695:
  7777                           
  7778                           ;dc_motor.c: 426:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7779   00301A  0ED0               	movlw	208
  7780   00301C  6E26               	movwf	??_turnRight^0,c
  7781   00301E  0ECA               	movlw	202
  7782   003020                     u3607:
  7783   003020  2EE8               	decfsz	wreg,f,c
  7784   003022  D7FE               	bra	u3607
  7785   003024  2E26               	decfsz	??_turnRight^0,f,c
  7786   003026  D7FC               	bra	u3607
  7787   003028                     
  7788                           ;dc_motor.c: 427:         }
  7789   003028  4A29               	infsnz	turnRight@i^0,f,c
  7790   00302A  2A2A               	incf	(turnRight@i+1)^0,f,c
  7791   00302C                     l602:
  7792   00302C  5025               	movf	turnRight@turnRamp^0,w,c
  7793   00302E  6E26               	movwf	??_turnRight^0,c
  7794   003030  6A27               	clrf	(??_turnRight+1)^0,c
  7795   003032  5026               	movf	??_turnRight^0,w,c
  7796   003034  5C29               	subwf	turnRight@i^0,w,c
  7797   003036  502A               	movf	(turnRight@i+1)^0,w,c
  7798   003038  0A80               	xorlw	128
  7799   00303A  6E28               	movwf	(??_turnRight+2)^0,c
  7800   00303C  5027               	movf	(??_turnRight+1)^0,w,c
  7801   00303E  0A80               	xorlw	128
  7802   003040  5828               	subwfb	(??_turnRight+2)^0,w,c
  7803   003042  A0D8               	btfss	status,0,c
  7804   003044  EF26  F018         	goto	u1441
  7805   003048  EF28  F018         	goto	u1440
  7806   00304C                     u1441:
  7807   00304C  EF0D  F018         	goto	l2695
  7808   003050                     u1440:
  7809   003050                     
  7810                           ;dc_motor.c: 428:     }
  7811   003050  062B               	decf	turnRight@cur_power^0,f,c
  7812   003052  A0D8               	btfss	status,0,c
  7813   003054  062C               	decf	(turnRight@cur_power+1)^0,f,c
  7814   003056  EFD8  F017         	goto	l2683
  7815   00305A                     l605:
  7816   00305A  0012               	return		;funcret
  7817   00305C                     __end_of_turnRight:
  7818                           	callstack 0
  7819                           
  7820 ;; *************** function _turnLeft *****************
  7821 ;; Defined at:
  7822 ;;		line 368 in file "dc_motor.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7825 ;;		 -> main@motorL(10), 
  7826 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7827 ;;		 -> main@motorR(10), 
  7828 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  7829 ;;  turnDuration    1   35[COMRAM] unsigned char 
  7830 ;;  turnRamp        1   36[COMRAM] unsigned char 
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;  cur_power       2   42[COMRAM] int 
  7833 ;;  i               2   40[COMRAM] int 
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  1    wreg      void 
  7836 ;; Registers used:
  7837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7843 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7844 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7845 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7846 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7847 ;;Total ram usage:       14 bytes
  7848 ;; Hardware stack levels used: 1
  7849 ;; Hardware stack levels required when called: 7
  7850 ;; This function calls:
  7851 ;;		_setMotorPWM
  7852 ;; This function is called by:
  7853 ;;		_move
  7854 ;;		_returnHome
  7855 ;;		_lostReturnHome
  7856 ;;		_calibration
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           	psect	text30
  7861   00305C                     __ptext30:
  7862                           	callstack 0
  7863   00305C                     _turnLeft:
  7864                           	callstack 22
  7865   00305C                     
  7866                           ;dc_motor.c: 368: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 369: {;dc_motor.c: 370:     mL->dire
      +                          ction = 0;
  7867   00305C  EE20 F001          	lfsr	2,1
  7868   003060  501F               	movf	turnLeft@mL^0,w,c
  7869   003062  26D9               	addwf	fsr2l,f,c
  7870   003064  5020               	movf	(turnLeft@mL+1)^0,w,c
  7871   003066  22DA               	addwfc	fsr2h,f,c
  7872   003068  6ADF               	clrf	indf2,c
  7873                           
  7874                           ;dc_motor.c: 371:     mR->direction = 1;
  7875   00306A  EE20 F001          	lfsr	2,1
  7876   00306E  5021               	movf	turnLeft@mR^0,w,c
  7877   003070  26D9               	addwf	fsr2l,f,c
  7878   003072  5022               	movf	(turnLeft@mR+1)^0,w,c
  7879   003074  22DA               	addwfc	fsr2h,f,c
  7880   003076  0E01               	movlw	1
  7881   003078  6EDF               	movwf	indf2,c
  7882   00307A                     
  7883                           ;dc_motor.c: 372:     int i;;dc_motor.c: 373:     int cur_power;;dc_motor.c: 374:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  7884   00307A  0E00               	movlw	0
  7885   00307C  6E2C               	movwf	(turnLeft@cur_power+1)^0,c
  7886   00307E  0E01               	movlw	1
  7887   003080  6E2B               	movwf	turnLeft@cur_power^0,c
  7888   003082  EF8C  F018         	goto	l2721
  7889   003086                     l2707:
  7890                           
  7891                           ;dc_motor.c: 375:         mL->power = cur_power+mL->compensation;
  7892   003086  EE20 F009          	lfsr	2,9
  7893   00308A  501F               	movf	turnLeft@mL^0,w,c
  7894   00308C  26D9               	addwf	fsr2l,f,c
  7895   00308E  5020               	movf	(turnLeft@mL+1)^0,w,c
  7896   003090  22DA               	addwfc	fsr2h,f,c
  7897   003092  50DF               	movf	indf2,w,c
  7898   003094  242B               	addwf	turnLeft@cur_power^0,w,c
  7899   003096  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  7900   00309A  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  7901   00309E  6EDF               	movwf	indf2,c
  7902                           
  7903                           ;dc_motor.c: 376:         mR->power = cur_power+mR->compensation;
  7904   0030A0  EE20 F009          	lfsr	2,9
  7905   0030A4  5021               	movf	turnLeft@mR^0,w,c
  7906   0030A6  26D9               	addwf	fsr2l,f,c
  7907   0030A8  5022               	movf	(turnLeft@mR+1)^0,w,c
  7908   0030AA  22DA               	addwfc	fsr2h,f,c
  7909   0030AC  50DF               	movf	indf2,w,c
  7910   0030AE  242B               	addwf	turnLeft@cur_power^0,w,c
  7911   0030B0  C021  FFD9         	movff	turnLeft@mR,fsr2l
  7912   0030B4  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  7913   0030B8  6EDF               	movwf	indf2,c
  7914   0030BA                     
  7915                           ;dc_motor.c: 377:         setMotorPWM(mL);
  7916   0030BA  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  7917   0030BE  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7918   0030C2  EC18  F019         	call	_setMotorPWM	;wreg free
  7919   0030C6                     
  7920                           ;dc_motor.c: 378:         setMotorPWM(mR);
  7921   0030C6  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  7922   0030CA  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7923   0030CE  EC18  F019         	call	_setMotorPWM	;wreg free
  7924   0030D2                     
  7925                           ;dc_motor.c: 379:         for (i=0;i<turnRamp;i++) {
  7926   0030D2  0E00               	movlw	0
  7927   0030D4  6E2A               	movwf	(turnLeft@i+1)^0,c
  7928   0030D6  0E00               	movlw	0
  7929   0030D8  6E29               	movwf	turnLeft@i^0,c
  7930   0030DA  EF78  F018         	goto	l576
  7931   0030DE                     l2715:
  7932                           
  7933                           ;dc_motor.c: 380:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7934   0030DE  0ED0               	movlw	208
  7935   0030E0  6E26               	movwf	??_turnLeft^0,c
  7936   0030E2  0ECA               	movlw	202
  7937   0030E4                     u3617:
  7938   0030E4  2EE8               	decfsz	wreg,f,c
  7939   0030E6  D7FE               	bra	u3617
  7940   0030E8  2E26               	decfsz	??_turnLeft^0,f,c
  7941   0030EA  D7FC               	bra	u3617
  7942   0030EC                     
  7943                           ;dc_motor.c: 381:         }
  7944   0030EC  4A29               	infsnz	turnLeft@i^0,f,c
  7945   0030EE  2A2A               	incf	(turnLeft@i+1)^0,f,c
  7946   0030F0                     l576:
  7947   0030F0  5025               	movf	turnLeft@turnRamp^0,w,c
  7948   0030F2  6E26               	movwf	??_turnLeft^0,c
  7949   0030F4  6A27               	clrf	(??_turnLeft+1)^0,c
  7950   0030F6  5026               	movf	??_turnLeft^0,w,c
  7951   0030F8  5C29               	subwf	turnLeft@i^0,w,c
  7952   0030FA  502A               	movf	(turnLeft@i+1)^0,w,c
  7953   0030FC  0A80               	xorlw	128
  7954   0030FE  6E28               	movwf	(??_turnLeft+2)^0,c
  7955   003100  5027               	movf	(??_turnLeft+1)^0,w,c
  7956   003102  0A80               	xorlw	128
  7957   003104  5828               	subwfb	(??_turnLeft+2)^0,w,c
  7958   003106  A0D8               	btfss	status,0,c
  7959   003108  EF88  F018         	goto	u1451
  7960   00310C  EF8A  F018         	goto	u1450
  7961   003110                     u1451:
  7962   003110  EF6F  F018         	goto	l2715
  7963   003114                     u1450:
  7964   003114                     
  7965                           ;dc_motor.c: 382:     }
  7966   003114  4A2B               	infsnz	turnLeft@cur_power^0,f,c
  7967   003116  2A2C               	incf	(turnLeft@cur_power+1)^0,f,c
  7968   003118                     l2721:
  7969   003118  5023               	movf	turnLeft@turnSpeed^0,w,c
  7970   00311A  6E26               	movwf	??_turnLeft^0,c
  7971   00311C  6A27               	clrf	(??_turnLeft+1)^0,c
  7972   00311E  502B               	movf	turnLeft@cur_power^0,w,c
  7973   003120  5C26               	subwf	??_turnLeft^0,w,c
  7974   003122  5027               	movf	(??_turnLeft+1)^0,w,c
  7975   003124  0A80               	xorlw	128
  7976   003126  6E28               	movwf	(??_turnLeft+2)^0,c
  7977   003128  502C               	movf	(turnLeft@cur_power+1)^0,w,c
  7978   00312A  0A80               	xorlw	128
  7979   00312C  5828               	subwfb	(??_turnLeft+2)^0,w,c
  7980   00312E  B0D8               	btfsc	status,0,c
  7981   003130  EF9C  F018         	goto	u1461
  7982   003134  EF9E  F018         	goto	u1460
  7983   003138                     u1461:
  7984   003138  EF43  F018         	goto	l2707
  7985   00313C                     u1460:
  7986   00313C                     
  7987                           ;dc_motor.c: 384:     for (i=0;i<turnDuration;i++) {
  7988   00313C  0E00               	movlw	0
  7989   00313E  6E2A               	movwf	(turnLeft@i+1)^0,c
  7990   003140  0E00               	movlw	0
  7991   003142  6E29               	movwf	turnLeft@i^0,c
  7992   003144  EFAD  F018         	goto	l580
  7993   003148                     l2725:
  7994                           
  7995                           ;dc_motor.c: 385:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7996   003148  0ED0               	movlw	208
  7997   00314A  6E26               	movwf	??_turnLeft^0,c
  7998   00314C  0ECA               	movlw	202
  7999   00314E                     u3627:
  8000   00314E  2EE8               	decfsz	wreg,f,c
  8001   003150  D7FE               	bra	u3627
  8002   003152  2E26               	decfsz	??_turnLeft^0,f,c
  8003   003154  D7FC               	bra	u3627
  8004   003156                     
  8005                           ;dc_motor.c: 386:         }
  8006   003156  4A29               	infsnz	turnLeft@i^0,f,c
  8007   003158  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8008   00315A                     l580:
  8009   00315A  5024               	movf	turnLeft@turnDuration^0,w,c
  8010   00315C  6E26               	movwf	??_turnLeft^0,c
  8011   00315E  6A27               	clrf	(??_turnLeft+1)^0,c
  8012   003160  5026               	movf	??_turnLeft^0,w,c
  8013   003162  5C29               	subwf	turnLeft@i^0,w,c
  8014   003164  502A               	movf	(turnLeft@i+1)^0,w,c
  8015   003166  0A80               	xorlw	128
  8016   003168  6E28               	movwf	(??_turnLeft+2)^0,c
  8017   00316A  5027               	movf	(??_turnLeft+1)^0,w,c
  8018   00316C  0A80               	xorlw	128
  8019   00316E  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8020   003170  A0D8               	btfss	status,0,c
  8021   003172  EFBD  F018         	goto	u1471
  8022   003176  EFBF  F018         	goto	u1470
  8023   00317A                     u1471:
  8024   00317A  EFA4  F018         	goto	l2725
  8025   00317E                     u1470:
  8026   00317E                     
  8027                           ;dc_motor.c: 388:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  8028   00317E  C023  F02B         	movff	turnLeft@turnSpeed,turnLeft@cur_power
  8029   003182  6A2C               	clrf	(turnLeft@cur_power+1)^0,c
  8030   003184                     l2729:
  8031   003184  BE2C               	btfsc	(turnLeft@cur_power+1)^0,7,c
  8032   003186  EFC9  F018         	goto	u1480
  8033   00318A  EFC7  F018         	goto	u1481
  8034   00318E                     u1481:
  8035   00318E  EFCB  F018         	goto	l2733
  8036   003192                     u1480:
  8037   003192  EF17  F019         	goto	l588
  8038   003196                     l2733:
  8039                           
  8040                           ;dc_motor.c: 389:         mL->power = cur_power+mL->compensation;
  8041   003196  EE20 F009          	lfsr	2,9
  8042   00319A  501F               	movf	turnLeft@mL^0,w,c
  8043   00319C  26D9               	addwf	fsr2l,f,c
  8044   00319E  5020               	movf	(turnLeft@mL+1)^0,w,c
  8045   0031A0  22DA               	addwfc	fsr2h,f,c
  8046   0031A2  50DF               	movf	indf2,w,c
  8047   0031A4  242B               	addwf	turnLeft@cur_power^0,w,c
  8048   0031A6  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  8049   0031AA  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  8050   0031AE  6EDF               	movwf	indf2,c
  8051                           
  8052                           ;dc_motor.c: 390:         mR->power = cur_power+mR->compensation;
  8053   0031B0  EE20 F009          	lfsr	2,9
  8054   0031B4  5021               	movf	turnLeft@mR^0,w,c
  8055   0031B6  26D9               	addwf	fsr2l,f,c
  8056   0031B8  5022               	movf	(turnLeft@mR+1)^0,w,c
  8057   0031BA  22DA               	addwfc	fsr2h,f,c
  8058   0031BC  50DF               	movf	indf2,w,c
  8059   0031BE  242B               	addwf	turnLeft@cur_power^0,w,c
  8060   0031C0  C021  FFD9         	movff	turnLeft@mR,fsr2l
  8061   0031C4  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  8062   0031C8  6EDF               	movwf	indf2,c
  8063   0031CA                     
  8064                           ;dc_motor.c: 391:         setMotorPWM(mL);
  8065   0031CA  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  8066   0031CE  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8067   0031D2  EC18  F019         	call	_setMotorPWM	;wreg free
  8068   0031D6                     
  8069                           ;dc_motor.c: 392:         setMotorPWM(mR);
  8070   0031D6  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  8071   0031DA  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8072   0031DE  EC18  F019         	call	_setMotorPWM	;wreg free
  8073   0031E2                     
  8074                           ;dc_motor.c: 393:         for (i=0;i<turnRamp;i++) {
  8075   0031E2  0E00               	movlw	0
  8076   0031E4  6E2A               	movwf	(turnLeft@i+1)^0,c
  8077   0031E6  0E00               	movlw	0
  8078   0031E8  6E29               	movwf	turnLeft@i^0,c
  8079   0031EA  EF00  F019         	goto	l585
  8080   0031EE                     l2741:
  8081                           
  8082                           ;dc_motor.c: 394:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8083   0031EE  0ED0               	movlw	208
  8084   0031F0  6E26               	movwf	??_turnLeft^0,c
  8085   0031F2  0ECA               	movlw	202
  8086   0031F4                     u3637:
  8087   0031F4  2EE8               	decfsz	wreg,f,c
  8088   0031F6  D7FE               	bra	u3637
  8089   0031F8  2E26               	decfsz	??_turnLeft^0,f,c
  8090   0031FA  D7FC               	bra	u3637
  8091   0031FC                     
  8092                           ;dc_motor.c: 395:         }
  8093   0031FC  4A29               	infsnz	turnLeft@i^0,f,c
  8094   0031FE  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8095   003200                     l585:
  8096   003200  5025               	movf	turnLeft@turnRamp^0,w,c
  8097   003202  6E26               	movwf	??_turnLeft^0,c
  8098   003204  6A27               	clrf	(??_turnLeft+1)^0,c
  8099   003206  5026               	movf	??_turnLeft^0,w,c
  8100   003208  5C29               	subwf	turnLeft@i^0,w,c
  8101   00320A  502A               	movf	(turnLeft@i+1)^0,w,c
  8102   00320C  0A80               	xorlw	128
  8103   00320E  6E28               	movwf	(??_turnLeft+2)^0,c
  8104   003210  5027               	movf	(??_turnLeft+1)^0,w,c
  8105   003212  0A80               	xorlw	128
  8106   003214  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8107   003216  A0D8               	btfss	status,0,c
  8108   003218  EF10  F019         	goto	u1491
  8109   00321C  EF12  F019         	goto	u1490
  8110   003220                     u1491:
  8111   003220  EFF7  F018         	goto	l2741
  8112   003224                     u1490:
  8113   003224                     
  8114                           ;dc_motor.c: 396:     }
  8115   003224  062B               	decf	turnLeft@cur_power^0,f,c
  8116   003226  A0D8               	btfss	status,0,c
  8117   003228  062C               	decf	(turnLeft@cur_power+1)^0,f,c
  8118   00322A  EFC2  F018         	goto	l2729
  8119   00322E                     l588:
  8120   00322E  0012               	return		;funcret
  8121   003230                     __end_of_turnLeft:
  8122                           	callstack 0
  8123                           
  8124 ;; *************** function _setMotorPWM *****************
  8125 ;; Defined at:
  8126 ;;		line 68 in file "dc_motor.c"
  8127 ;; Parameters:    Size  Location     Type
  8128 ;;  m               2   24[COMRAM] PTR struct DC_motor
  8129 ;;		 -> main@motorR(10), main@motorL(10), 
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;  negDuty         1   29[COMRAM] unsigned char 
  8132 ;;  posDuty         1   28[COMRAM] unsigned char 
  8133 ;; Return value:  Size  Location     Type
  8134 ;;                  1    wreg      void 
  8135 ;; Registers used:
  8136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8137 ;; Tracked objects:
  8138 ;;		On entry : 0/0
  8139 ;;		On exit  : 0/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8144 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8145 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8146 ;;Total ram usage:        6 bytes
  8147 ;; Hardware stack levels used: 1
  8148 ;; Hardware stack levels required when called: 6
  8149 ;; This function calls:
  8150 ;;		___lwdiv
  8151 ;;		___wmul
  8152 ;; This function is called by:
  8153 ;;		_stop
  8154 ;;		_turnLeft
  8155 ;;		_turnRight
  8156 ;;		_fullSpeedAhead
  8157 ;;		_reverseOneSquare
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text31
  8162   003230                     __ptext31:
  8163                           	callstack 0
  8164   003230                     _setMotorPWM:
  8165                           	callstack 23
  8166   003230                     
  8167                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  8168   003230  EE20 F002          	lfsr	2,2
  8169   003234  5019               	movf	setMotorPWM@m^0,w,c
  8170   003236  26D9               	addwf	fsr2l,f,c
  8171   003238  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8172   00323A  22DA               	addwfc	fsr2h,f,c
  8173   00323C  50DF               	movf	indf2,w,c
  8174   00323E  B4D8               	btfsc	status,2,c
  8175   003240  EF24  F019         	goto	u1301
  8176   003244  EF26  F019         	goto	u1300
  8177   003248                     u1301:
  8178   003248  EF5A  F019         	goto	l2569
  8179   00324C                     u1300:
  8180   00324C                     
  8181                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8182   00324C  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  8183   003250  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8184   003254  50DF               	movf	indf2,w,c
  8185   003256  6E1B               	movwf	??_setMotorPWM^0,c
  8186   003258  501B               	movf	??_setMotorPWM^0,w,c
  8187   00325A  6E0C               	movwf	___wmul@multiplier^0,c
  8188   00325C  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  8189   00325E  EE20 F003          	lfsr	2,3
  8190   003262  5019               	movf	setMotorPWM@m^0,w,c
  8191   003264  26D9               	addwf	fsr2l,f,c
  8192   003266  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8193   003268  22DA               	addwfc	fsr2h,f,c
  8194   00326A  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  8195   00326E  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  8196   003272  ECCC  F01E         	call	___wmul	;wreg free
  8197   003276  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  8198   00327A  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  8199   00327E  0E00               	movlw	0
  8200   003280  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  8201   003282  0E64               	movlw	100
  8202   003284  6E14               	movwf	___lwdiv@divisor^0,c
  8203   003286  EC56  F01D         	call	___lwdiv	;wreg free
  8204   00328A  EE20 F003          	lfsr	2,3
  8205   00328E  5019               	movf	setMotorPWM@m^0,w,c
  8206   003290  26D9               	addwf	fsr2l,f,c
  8207   003292  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8208   003294  22DA               	addwfc	fsr2h,f,c
  8209   003296  50DF               	movf	indf2,w,c
  8210   003298  6E1C               	movwf	(??_setMotorPWM+1)^0,c
  8211   00329A  5012               	movf	?___lwdiv^0,w,c
  8212   00329C  5C1C               	subwf	(??_setMotorPWM+1)^0,w,c
  8213   00329E  6E1D               	movwf	setMotorPWM@posDuty^0,c
  8214   0032A0                     
  8215                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  8216   0032A0  EE20 F003          	lfsr	2,3
  8217   0032A4  5019               	movf	setMotorPWM@m^0,w,c
  8218   0032A6  26D9               	addwf	fsr2l,f,c
  8219   0032A8  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8220   0032AA  22DA               	addwfc	fsr2h,f,c
  8221   0032AC  50DF               	movf	indf2,w,c
  8222   0032AE  6E1E               	movwf	setMotorPWM@negDuty^0,c
  8223                           
  8224                           ;dc_motor.c: 75:     }
  8225   0032B0  EF7D  F019         	goto	l2573
  8226   0032B4                     l2569:
  8227                           
  8228                           ;dc_motor.c: 77:         posDuty=0;
  8229   0032B4  0E00               	movlw	0
  8230   0032B6  6E1D               	movwf	setMotorPWM@posDuty^0,c
  8231   0032B8                     
  8232                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8233   0032B8  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  8234   0032BC  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8235   0032C0  50DF               	movf	indf2,w,c
  8236   0032C2  6E1B               	movwf	??_setMotorPWM^0,c
  8237   0032C4  501B               	movf	??_setMotorPWM^0,w,c
  8238   0032C6  6E0C               	movwf	___wmul@multiplier^0,c
  8239   0032C8  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  8240   0032CA  EE20 F003          	lfsr	2,3
  8241   0032CE  5019               	movf	setMotorPWM@m^0,w,c
  8242   0032D0  26D9               	addwf	fsr2l,f,c
  8243   0032D2  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8244   0032D4  22DA               	addwfc	fsr2h,f,c
  8245   0032D6  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  8246   0032DA  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  8247   0032DE  ECCC  F01E         	call	___wmul	;wreg free
  8248   0032E2  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  8249   0032E6  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  8250   0032EA  0E00               	movlw	0
  8251   0032EC  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  8252   0032EE  0E64               	movlw	100
  8253   0032F0  6E14               	movwf	___lwdiv@divisor^0,c
  8254   0032F2  EC56  F01D         	call	___lwdiv	;wreg free
  8255   0032F6  5012               	movf	?___lwdiv^0,w,c
  8256   0032F8  6E1E               	movwf	setMotorPWM@negDuty^0,c
  8257   0032FA                     l2573:
  8258                           
  8259                           ;dc_motor.c: 81:     if (m->direction) {
  8260   0032FA  EE20 F001          	lfsr	2,1
  8261   0032FE  5019               	movf	setMotorPWM@m^0,w,c
  8262   003300  26D9               	addwf	fsr2l,f,c
  8263   003302  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8264   003304  22DA               	addwfc	fsr2h,f,c
  8265   003306  50DF               	movf	indf2,w,c
  8266   003308  B4D8               	btfsc	status,2,c
  8267   00330A  EF89  F019         	goto	u1311
  8268   00330E  EF8B  F019         	goto	u1310
  8269   003312                     u1311:
  8270   003312  EFAD  F019         	goto	l2577
  8271   003316                     u1310:
  8272   003316                     
  8273                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  8274   003316  EE20 F005          	lfsr	2,5
  8275   00331A  5019               	movf	setMotorPWM@m^0,w,c
  8276   00331C  26D9               	addwf	fsr2l,f,c
  8277   00331E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8278   003320  22DA               	addwfc	fsr2h,f,c
  8279   003322  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8280   003326  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8281   00332A  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8282   00332E  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8283   003332  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  8284                           
  8285                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  8286   003336  EE20 F007          	lfsr	2,7
  8287   00333A  5019               	movf	setMotorPWM@m^0,w,c
  8288   00333C  26D9               	addwf	fsr2l,f,c
  8289   00333E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8290   003340  22DA               	addwfc	fsr2h,f,c
  8291   003342  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8292   003346  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8293   00334A  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8294   00334E  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8295   003352  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  8296                           
  8297                           ;dc_motor.c: 84:     } else {
  8298   003356  EFCD  F019         	goto	l494
  8299   00335A                     l2577:
  8300                           
  8301                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  8302   00335A  EE20 F005          	lfsr	2,5
  8303   00335E  5019               	movf	setMotorPWM@m^0,w,c
  8304   003360  26D9               	addwf	fsr2l,f,c
  8305   003362  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8306   003364  22DA               	addwfc	fsr2h,f,c
  8307   003366  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8308   00336A  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8309   00336E  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8310   003372  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8311   003376  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  8312                           
  8313                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  8314   00337A  EE20 F007          	lfsr	2,7
  8315   00337E  5019               	movf	setMotorPWM@m^0,w,c
  8316   003380  26D9               	addwf	fsr2l,f,c
  8317   003382  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8318   003384  22DA               	addwfc	fsr2h,f,c
  8319   003386  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8320   00338A  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8321   00338E  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8322   003392  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8323   003396  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  8324   00339A                     l494:
  8325   00339A  0012               	return		;funcret
  8326   00339C                     __end_of_setMotorPWM:
  8327                           	callstack 0
  8328                           
  8329 ;; *************** function ___wmul *****************
  8330 ;; Defined at:
  8331 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  multiplier      2   11[COMRAM] unsigned int 
  8334 ;;  multiplicand    2   13[COMRAM] unsigned int 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  product         2   15[COMRAM] unsigned int 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  2   11[COMRAM] unsigned int 
  8339 ;; Registers used:
  8340 ;;		wreg, status,2, status,0, prodl, prodh
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8349 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8350 ;;Total ram usage:        6 bytes
  8351 ;; Hardware stack levels used: 1
  8352 ;; Hardware stack levels required when called: 5
  8353 ;; This function calls:
  8354 ;;		Nothing
  8355 ;; This function is called by:
  8356 ;;		_setMotorPWM
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           	psect	text32
  8361   003D98                     __ptext32:
  8362                           	callstack 0
  8363   003D98                     ___wmul:
  8364                           	callstack 23
  8365   003D98  500C               	movf	___wmul@multiplier^0,w,c
  8366   003D9A  020E               	mulwf	___wmul@multiplicand^0,c
  8367   003D9C  CFF3 F010          	movff	prodl,___wmul@product
  8368   003DA0  CFF4 F011          	movff	prodh,___wmul@product+1
  8369   003DA4  500C               	movf	___wmul@multiplier^0,w,c
  8370   003DA6  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  8371   003DA8  50F3               	movf	243,w,c
  8372   003DAA  2611               	addwf	(___wmul@product+1)^0,f,c
  8373   003DAC  500D               	movf	(___wmul@multiplier+1)^0,w,c
  8374   003DAE  020E               	mulwf	___wmul@multiplicand^0,c
  8375   003DB0  50F3               	movf	243,w,c
  8376   003DB2  2611               	addwf	(___wmul@product+1)^0,f,c
  8377   003DB4  C010  F00C         	movff	___wmul@product,?___wmul
  8378   003DB8  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  8379   003DBC  0012               	return		;funcret
  8380   003DBE                     __end_of___wmul:
  8381                           	callstack 0
  8382                           
  8383 ;; *************** function ___lwdiv *****************
  8384 ;; Defined at:
  8385 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;  dividend        2   17[COMRAM] unsigned int 
  8388 ;;  divisor         2   19[COMRAM] unsigned int 
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;  quotient        2   21[COMRAM] unsigned int 
  8391 ;;  counter         1   23[COMRAM] unsigned char 
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  2   17[COMRAM] unsigned int 
  8394 ;; Registers used:
  8395 ;;		wreg, status,2, status,0
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8402 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8404 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8405 ;;Total ram usage:        7 bytes
  8406 ;; Hardware stack levels used: 1
  8407 ;; Hardware stack levels required when called: 5
  8408 ;; This function calls:
  8409 ;;		Nothing
  8410 ;; This function is called by:
  8411 ;;		_setMotorPWM
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           	psect	text33
  8416   003AAC                     __ptext33:
  8417                           	callstack 0
  8418   003AAC                     ___lwdiv:
  8419                           	callstack 23
  8420   003AAC  0E00               	movlw	0
  8421   003AAE  6E17               	movwf	(___lwdiv@quotient+1)^0,c
  8422   003AB0  0E00               	movlw	0
  8423   003AB2  6E16               	movwf	___lwdiv@quotient^0,c
  8424   003AB4  5014               	movf	___lwdiv@divisor^0,w,c
  8425   003AB6  1015               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8426   003AB8  B4D8               	btfsc	status,2,c
  8427   003ABA  EF61  F01D         	goto	u1271
  8428   003ABE  EF63  F01D         	goto	u1270
  8429   003AC2                     u1271:
  8430   003AC2  EF8B  F01D         	goto	l1157
  8431   003AC6                     u1270:
  8432   003AC6  0E01               	movlw	1
  8433   003AC8  6E18               	movwf	___lwdiv@counter^0,c
  8434   003ACA  EF6B  F01D         	goto	l2537
  8435   003ACE                     l2535:
  8436   003ACE  90D8               	bcf	status,0,c
  8437   003AD0  3614               	rlcf	___lwdiv@divisor^0,f,c
  8438   003AD2  3615               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8439   003AD4  2A18               	incf	___lwdiv@counter^0,f,c
  8440   003AD6                     l2537:
  8441   003AD6  AE15               	btfss	(___lwdiv@divisor+1)^0,7,c
  8442   003AD8  EF70  F01D         	goto	u1281
  8443   003ADC  EF72  F01D         	goto	u1280
  8444   003AE0                     u1281:
  8445   003AE0  EF67  F01D         	goto	l2535
  8446   003AE4                     u1280:
  8447   003AE4                     l2539:
  8448   003AE4  90D8               	bcf	status,0,c
  8449   003AE6  3616               	rlcf	___lwdiv@quotient^0,f,c
  8450   003AE8  3617               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8451   003AEA  5014               	movf	___lwdiv@divisor^0,w,c
  8452   003AEC  5C12               	subwf	___lwdiv@dividend^0,w,c
  8453   003AEE  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  8454   003AF0  5813               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8455   003AF2  A0D8               	btfss	status,0,c
  8456   003AF4  EF7E  F01D         	goto	u1291
  8457   003AF8  EF80  F01D         	goto	u1290
  8458   003AFC                     u1291:
  8459   003AFC  EF85  F01D         	goto	l2547
  8460   003B00                     u1290:
  8461   003B00  5014               	movf	___lwdiv@divisor^0,w,c
  8462   003B02  5E12               	subwf	___lwdiv@dividend^0,f,c
  8463   003B04  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  8464   003B06  5A13               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8465   003B08  8016               	bsf	___lwdiv@quotient^0,0,c
  8466   003B0A                     l2547:
  8467   003B0A  90D8               	bcf	status,0,c
  8468   003B0C  3215               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8469   003B0E  3214               	rrcf	___lwdiv@divisor^0,f,c
  8470   003B10  2E18               	decfsz	___lwdiv@counter^0,f,c
  8471   003B12  EF72  F01D         	goto	l2539
  8472   003B16                     l1157:
  8473   003B16  C016  F012         	movff	___lwdiv@quotient,?___lwdiv
  8474   003B1A  C017  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8475   003B1E  0012               	return		;funcret
  8476   003B20                     __end_of___lwdiv:
  8477                           	callstack 0
  8478                           
  8479 ;; *************** function _batteryLevel *****************
  8480 ;; Defined at:
  8481 ;;		line 6 in file "battery.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;		None
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  batteryQuart    1   20[COMRAM] unsigned char 
  8486 ;;  batteryVolta    1   19[COMRAM] unsigned char 
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1    wreg      void 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2, status,0, cstack
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8500 ;;Total ram usage:        2 bytes
  8501 ;; Hardware stack levels used: 1
  8502 ;; Hardware stack levels required when called: 6
  8503 ;; This function calls:
  8504 ;;		_ADC_getval
  8505 ;;		_ADC_init
  8506 ;;		___awdiv
  8507 ;; This function is called by:
  8508 ;;		_main
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text34
  8513   003BF8                     __ptext34:
  8514                           	callstack 0
  8515   003BF8                     _batteryLevel:
  8516                           	callstack 24
  8517   003BF8                     
  8518                           ;battery.c: 7:     ADC_init();
  8519   003BF8  EC56  F01F         	call	_ADC_init	;wreg free
  8520                           
  8521                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
  8522   003BFC  EC63  F01F         	call	_ADC_getval	;wreg free
  8523   003C00  6E14               	movwf	batteryLevel@batteryVoltage^0,c
  8524   003C02                     
  8525                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
  8526   003C02  C014  F00C         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
  8527   003C06  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  8528   003C08  0E00               	movlw	0
  8529   003C0A  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  8530   003C0C  0E18               	movlw	24
  8531   003C0E  6E0E               	movwf	___awdiv@divisor^0,c
  8532   003C10  ECEF  F01B         	call	___awdiv	;wreg free
  8533   003C14  500C               	movf	?___awdiv^0,w,c
  8534   003C16  6E15               	movwf	batteryLevel@batteryQuarter^0,c
  8535   003C18                     
  8536                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
  8537   003C18  A215               	btfss	batteryLevel@batteryQuarter^0,1,c
  8538   003C1A  EF11  F01E         	goto	u1811
  8539   003C1E  EF13  F01E         	goto	u1810
  8540   003C22                     u1811:
  8541   003C22  EF16  F01E         	goto	l408
  8542   003C26                     u1810:
  8543   003C26  8E7C               	bsf	124,7,c	;volatile
  8544   003C28  EF17  F01E         	goto	l409
  8545   003C2C                     l408:
  8546   003C2C  9E7C               	bcf	124,7,c	;volatile
  8547   003C2E                     l409:
  8548                           
  8549                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
  8550   003C2E  A015               	btfss	batteryLevel@batteryQuarter^0,0,c
  8551   003C30  EF1C  F01E         	goto	u1821
  8552   003C34  EF1E  F01E         	goto	u1820
  8553   003C38                     u1821:
  8554   003C38  EF21  F01E         	goto	l410
  8555   003C3C                     u1820:
  8556   003C3C  8680               	bsf	128,3,c	;volatile
  8557   003C3E  EF22  F01E         	goto	l412
  8558   003C42                     l410:
  8559   003C42  9680               	bcf	128,3,c	;volatile
  8560   003C44                     l412:
  8561   003C44  0012               	return		;funcret
  8562   003C46                     __end_of_batteryLevel:
  8563                           	callstack 0
  8564                           
  8565 ;; *************** function ___awdiv *****************
  8566 ;; Defined at:
  8567 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;  dividend        2   11[COMRAM] int 
  8570 ;;  divisor         2   13[COMRAM] int 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;  quotient        2   17[COMRAM] int 
  8573 ;;  sign            1   16[COMRAM] unsigned char 
  8574 ;;  counter         1   15[COMRAM] unsigned char 
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  2   11[COMRAM] int 
  8577 ;; Registers used:
  8578 ;;		wreg, status,2, status,0
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8585 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8587 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8588 ;;Total ram usage:        8 bytes
  8589 ;; Hardware stack levels used: 1
  8590 ;; Hardware stack levels required when called: 5
  8591 ;; This function calls:
  8592 ;;		Nothing
  8593 ;; This function is called by:
  8594 ;;		_batteryLevel
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           	psect	text35
  8599   0037DE                     __ptext35:
  8600                           	callstack 0
  8601   0037DE                     ___awdiv:
  8602                           	callstack 24
  8603   0037DE  0E00               	movlw	0
  8604   0037E0  6E11               	movwf	___awdiv@sign^0,c
  8605   0037E2  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  8606   0037E4  EFF8  F01B         	goto	u1750
  8607   0037E8  EFF6  F01B         	goto	u1751
  8608   0037EC                     u1751:
  8609   0037EC  EFFE  F01B         	goto	l3057
  8610   0037F0                     u1750:
  8611   0037F0  6C0E               	negf	___awdiv@divisor^0,c
  8612   0037F2  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  8613   0037F4  B0D8               	btfsc	status,0,c
  8614   0037F6  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  8615   0037F8  0E01               	movlw	1
  8616   0037FA  6E11               	movwf	___awdiv@sign^0,c
  8617   0037FC                     l3057:
  8618   0037FC  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  8619   0037FE  EF05  F01C         	goto	u1760
  8620   003802  EF03  F01C         	goto	u1761
  8621   003806                     u1761:
  8622   003806  EF0B  F01C         	goto	l3063
  8623   00380A                     u1760:
  8624   00380A  6C0C               	negf	___awdiv@dividend^0,c
  8625   00380C  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  8626   00380E  B0D8               	btfsc	status,0,c
  8627   003810  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  8628   003812  0E01               	movlw	1
  8629   003814  1A11               	xorwf	___awdiv@sign^0,f,c
  8630   003816                     l3063:
  8631   003816  0E00               	movlw	0
  8632   003818  6E13               	movwf	(___awdiv@quotient+1)^0,c
  8633   00381A  0E00               	movlw	0
  8634   00381C  6E12               	movwf	___awdiv@quotient^0,c
  8635   00381E  500E               	movf	___awdiv@divisor^0,w,c
  8636   003820  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  8637   003822  B4D8               	btfsc	status,2,c
  8638   003824  EF16  F01C         	goto	u1771
  8639   003828  EF18  F01C         	goto	u1770
  8640   00382C                     u1771:
  8641   00382C  EF40  F01C         	goto	l3085
  8642   003830                     u1770:
  8643   003830  0E01               	movlw	1
  8644   003832  6E10               	movwf	___awdiv@counter^0,c
  8645   003834  EF20  F01C         	goto	l3071
  8646   003838                     l3069:
  8647   003838  90D8               	bcf	status,0,c
  8648   00383A  360E               	rlcf	___awdiv@divisor^0,f,c
  8649   00383C  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  8650   00383E  2A10               	incf	___awdiv@counter^0,f,c
  8651   003840                     l3071:
  8652   003840  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  8653   003842  EF25  F01C         	goto	u1781
  8654   003846  EF27  F01C         	goto	u1780
  8655   00384A                     u1781:
  8656   00384A  EF1C  F01C         	goto	l3069
  8657   00384E                     u1780:
  8658   00384E                     l3073:
  8659   00384E  90D8               	bcf	status,0,c
  8660   003850  3612               	rlcf	___awdiv@quotient^0,f,c
  8661   003852  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  8662   003854  500E               	movf	___awdiv@divisor^0,w,c
  8663   003856  5C0C               	subwf	___awdiv@dividend^0,w,c
  8664   003858  500F               	movf	(___awdiv@divisor+1)^0,w,c
  8665   00385A  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  8666   00385C  A0D8               	btfss	status,0,c
  8667   00385E  EF33  F01C         	goto	u1791
  8668   003862  EF35  F01C         	goto	u1790
  8669   003866                     u1791:
  8670   003866  EF3A  F01C         	goto	l3081
  8671   00386A                     u1790:
  8672   00386A  500E               	movf	___awdiv@divisor^0,w,c
  8673   00386C  5E0C               	subwf	___awdiv@dividend^0,f,c
  8674   00386E  500F               	movf	(___awdiv@divisor+1)^0,w,c
  8675   003870  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  8676   003872  8012               	bsf	___awdiv@quotient^0,0,c
  8677   003874                     l3081:
  8678   003874  90D8               	bcf	status,0,c
  8679   003876  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  8680   003878  320E               	rrcf	___awdiv@divisor^0,f,c
  8681   00387A  2E10               	decfsz	___awdiv@counter^0,f,c
  8682   00387C  EF27  F01C         	goto	l3073
  8683   003880                     l3085:
  8684   003880  5011               	movf	___awdiv@sign^0,w,c
  8685   003882  B4D8               	btfsc	status,2,c
  8686   003884  EF46  F01C         	goto	u1801
  8687   003888  EF48  F01C         	goto	u1800
  8688   00388C                     u1801:
  8689   00388C  EF4C  F01C         	goto	l3089
  8690   003890                     u1800:
  8691   003890  6C12               	negf	___awdiv@quotient^0,c
  8692   003892  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  8693   003894  B0D8               	btfsc	status,0,c
  8694   003896  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  8695   003898                     l3089:
  8696   003898  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  8697   00389C  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  8698   0038A0  0012               	return		;funcret
  8699   0038A2                     __end_of___awdiv:
  8700                           	callstack 0
  8701                           
  8702 ;; *************** function _ADC_init *****************
  8703 ;; Defined at:
  8704 ;;		line 9 in file "ADC.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;		None
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;		None
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  1    wreg      void 
  8711 ;; Registers used:
  8712 ;;		wreg, status,2
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/0
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8722 ;;Total ram usage:        0 bytes
  8723 ;; Hardware stack levels used: 1
  8724 ;; Hardware stack levels required when called: 5
  8725 ;; This function calls:
  8726 ;;		Nothing
  8727 ;; This function is called by:
  8728 ;;		_batteryLevel
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           	psect	text36
  8733   003EAC                     __ptext36:
  8734                           	callstack 0
  8735   003EAC                     _ADC_init:
  8736                           	callstack 24
  8737   003EAC                     
  8738                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  8739   003EAC  8C86               	bsf	134,6,c	;volatile
  8740                           
  8741                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  8742   003EAE  010E               	movlb	14	; () banked
  8743   003EB0  8DB4               	bsf	180,6,b	;volatile
  8744                           
  8745                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  8746   003EB2  010F               	movlb	15	; () banked
  8747   003EB4  9958               	bcf	88,4,b	;volatile
  8748   003EB6                     
  8749                           ; BSR set to: 15
  8750                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  8751   003EB6  0EFC               	movlw	-4
  8752   003EB8  1758               	andwf	88,f,b	;volatile
  8753                           
  8754                           ;ADC.c: 17:     ADPCH=0b101110;
  8755   003EBA  0E2E               	movlw	46
  8756   003EBC  6F5F               	movwf	95,b	;volatile
  8757   003EBE                     
  8758                           ; BSR set to: 15
  8759                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  8760   003EBE  9460               	bcf	96,2,c	;volatile
  8761   003EC0                     
  8762                           ; BSR set to: 15
  8763                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  8764   003EC0  8860               	bsf	96,4,c	;volatile
  8765   003EC2                     
  8766                           ; BSR set to: 15
  8767                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  8768   003EC2  8E60               	bsf	96,7,c	;volatile
  8769   003EC4                     
  8770                           ; BSR set to: 15
  8771   003EC4  0012               	return		;funcret
  8772   003EC6                     __end_of_ADC_init:
  8773                           	callstack 0
  8774                           
  8775 ;; *************** function _ADC_getval *****************
  8776 ;; Defined at:
  8777 ;;		line 23 in file "ADC.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;		None
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;  tmpval          1   11[COMRAM] unsigned char 
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  1    wreg      unsigned char 
  8784 ;; Registers used:
  8785 ;;		wreg, status,2
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8795 ;;Total ram usage:        1 bytes
  8796 ;; Hardware stack levels used: 1
  8797 ;; Hardware stack levels required when called: 5
  8798 ;; This function calls:
  8799 ;;		Nothing
  8800 ;; This function is called by:
  8801 ;;		_batteryLevel
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           	psect	text37
  8806   003EC6                     __ptext37:
  8807                           	callstack 0
  8808   003EC6                     _ADC_getval:
  8809                           	callstack 24
  8810   003EC6                     
  8811                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  8812   003EC6  8060               	bsf	96,0,c	;volatile
  8813   003EC8                     l394:
  8814   003EC8  B060               	btfsc	96,0,c	;volatile
  8815   003ECA  EF69  F01F         	goto	u1641
  8816   003ECE  EF6B  F01F         	goto	u1640
  8817   003ED2                     u1641:
  8818   003ED2  EF64  F01F         	goto	l394
  8819   003ED6                     u1640:
  8820   003ED6                     
  8821                           ;ADC.c: 31:     tmpval = ADRESH;
  8822   003ED6  CF64 F00C          	movff	3940,ADC_getval@tmpval	;volatile
  8823   003EDA                     
  8824                           ;ADC.c: 35:     return tmpval;
  8825   003EDA  500C               	movf	ADC_getval@tmpval^0,w,c
  8826   003EDC  0012               	return		;funcret
  8827   003EDE                     __end_of_ADC_getval:
  8828                           	callstack 0
  8829                           
  8830 ;; *************** function _Timer0_init *****************
  8831 ;; Defined at:
  8832 ;;		line 7 in file "timers.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;		None
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;		None
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  1    wreg      void 
  8839 ;; Registers used:
  8840 ;;		wreg, status,2
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8850 ;;Total ram usage:        0 bytes
  8851 ;; Hardware stack levels used: 1
  8852 ;; Hardware stack levels required when called: 5
  8853 ;; This function calls:
  8854 ;;		Nothing
  8855 ;; This function is called by:
  8856 ;;		_main
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text38
  8861   003E4E                     __ptext38:
  8862                           	callstack 0
  8863   003E4E                     _Timer0_init:
  8864                           	callstack 25
  8865   003E4E                     
  8866                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  8867   003E4E  50D6               	movf	214,w,c	;volatile
  8868   003E50  0B1F               	andlw	-225
  8869   003E52  0940               	iorlw	64
  8870   003E54  6ED6               	movwf	214,c	;volatile
  8871   003E56                     
  8872                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  8873   003E56  88D6               	bsf	214,4,c	;volatile
  8874                           
  8875                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
  8876   003E58  50D6               	movf	214,w,c	;volatile
  8877   003E5A  0BF0               	andlw	-16
  8878   003E5C  090B               	iorlw	11
  8879   003E5E  6ED6               	movwf	214,c	;volatile
  8880   003E60                     
  8881                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  8882   003E60  88D5               	bsf	213,4,c	;volatile
  8883                           
  8884                           ;timers.c: 15:     TMR0H=0;
  8885   003E62  0E00               	movlw	0
  8886   003E64  6ED4               	movwf	212,c	;volatile
  8887                           
  8888                           ;timers.c: 16:     TMR0L=0;
  8889   003E66  0E00               	movlw	0
  8890   003E68  6ED3               	movwf	211,c	;volatile
  8891   003E6A                     
  8892                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  8893   003E6A  8ED5               	bsf	213,7,c	;volatile
  8894   003E6C  0012               	return		;funcret
  8895   003E6E                     __end_of_Timer0_init:
  8896                           	callstack 0
  8897                           
  8898 ;; *************** function _Interrupts_init *****************
  8899 ;; Defined at:
  8900 ;;		line 11 in file "interrupts.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;		None
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;		None
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      void 
  8907 ;; Registers used:
  8908 ;;		None
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;Total ram usage:        0 bytes
  8919 ;; Hardware stack levels used: 1
  8920 ;; Hardware stack levels required when called: 5
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_main
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text39
  8929   003EF6                     __ptext39:
  8930                           	callstack 0
  8931   003EF6                     _Interrupts_init:
  8932                           	callstack 25
  8933   003EF6                     
  8934                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
  8935   003EF6  8082               	bsf	130,0,c	;volatile
  8936                           
  8937                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
  8938   003EF8  010E               	movlb	14	; () banked
  8939   003EFA  919A               	bcf	154,0,b	;volatile
  8940                           
  8941                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
  8942   003EFC  8129               	bsf	41,0,b	;volatile
  8943                           
  8944                           ;interrupts.c: 17:     IPR0bits.INT0IP = 1;
  8945   003EFE  811F               	bsf	31,0,b	;volatile
  8946                           
  8947                           ;interrupts.c: 18:     INTCONbits.INT0EDG = 0;
  8948   003F00  90F2               	bcf	242,0,c	;volatile
  8949                           
  8950                           ;interrupts.c: 22:     TMR0IE=1;
  8951   003F02  8B29               	bsf	41,5,b	;volatile
  8952                           
  8953                           ;interrupts.c: 23:     PIE4bits.RC4IE=1;
  8954   003F04  872D               	bsf	45,3,b	;volatile
  8955                           
  8956                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  8957   003F06  8CF2               	bsf	242,6,c	;volatile
  8958                           
  8959                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  8960   003F08  8EF2               	bsf	242,7,c	;volatile
  8961   003F0A                     
  8962                           ; BSR set to: 14
  8963   003F0A  0012               	return		;funcret
  8964   003F0C                     __end_of_Interrupts_init:
  8965                           	callstack 0
  8966                           
  8967 ;; *************** function _Buggy_init *****************
  8968 ;; Defined at:
  8969 ;;		line 7 in file "buggysetup.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;		None
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;		None
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  1    wreg      void 
  8976 ;; Registers used:
  8977 ;;		None
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8987 ;;Total ram usage:        0 bytes
  8988 ;; Hardware stack levels used: 1
  8989 ;; Hardware stack levels required when called: 5
  8990 ;; This function calls:
  8991 ;;		Nothing
  8992 ;; This function is called by:
  8993 ;;		_main
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997                           	psect	text40
  8998   003CC0                     __ptext40:
  8999                           	callstack 0
  9000   003CC0                     _Buggy_init:
  9001                           	callstack 25
  9002   003CC0                     
  9003                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
  9004   003CC0  9E7C               	bcf	124,7,c	;volatile
  9005                           
  9006                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
  9007   003CC2  9E84               	bcf	132,7,c	;volatile
  9008                           
  9009                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
  9010   003CC4  9680               	bcf	128,3,c	;volatile
  9011                           
  9012                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
  9013   003CC6  9688               	bcf	136,3,c	;volatile
  9014                           
  9015                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
  9016   003CC8  8486               	bsf	134,2,c	;volatile
  9017                           
  9018                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
  9019   003CCA  010E               	movlb	14	; () banked
  9020   003CCC  95B4               	bcf	180,2,b	;volatile
  9021                           
  9022                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
  9023   003CCE  8686               	bsf	134,3,c	;volatile
  9024                           
  9025                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
  9026   003CD0  97B4               	bcf	180,3,b	;volatile
  9027                           
  9028                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
  9029   003CD2  9280               	bcf	128,1,c	;volatile
  9030                           
  9031                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
  9032   003CD4  9288               	bcf	136,1,c	;volatile
  9033                           
  9034                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
  9035   003CD6  987C               	bcf	124,4,c	;volatile
  9036                           
  9037                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
  9038   003CD8  9884               	bcf	132,4,c	;volatile
  9039                           
  9040                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
  9041   003CDA  967C               	bcf	124,3,c	;volatile
  9042                           
  9043                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
  9044   003CDC  9684               	bcf	132,3,c	;volatile
  9045                           
  9046                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
  9047   003CDE  97A7               	bcf	167,3,b	;volatile
  9048                           
  9049                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
  9050   003CE0  9080               	bcf	128,0,c	;volatile
  9051                           
  9052                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
  9053   003CE2  9088               	bcf	136,0,c	;volatile
  9054                           
  9055                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
  9056   003CE4  907E               	bcf	126,0,c	;volatile
  9057                           
  9058                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
  9059   003CE6  9086               	bcf	134,0,c	;volatile
  9060                           
  9061                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
  9062   003CE8  907F               	bcf	127,0,c	;volatile
  9063                           
  9064                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
  9065   003CEA  9087               	bcf	135,0,c	;volatile
  9066                           
  9067                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
  9068   003CEC  9E7D               	bcf	125,7,c	;volatile
  9069                           
  9070                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
  9071   003CEE  9E85               	bcf	133,7,c	;volatile
  9072                           
  9073                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
  9074   003CF0  9679               	bcf	121,3,c	;volatile
  9075                           
  9076                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
  9077   003CF2  9681               	bcf	129,3,c	;volatile
  9078   003CF4                     
  9079                           ; BSR set to: 14
  9080   003CF4  0012               	return		;funcret
  9081   003CF6                     __end_of_Buggy_init:
  9082                           	callstack 0
  9083                           
  9084 ;; *************** function _HighISR *****************
  9085 ;; Defined at:
  9086 ;;		line 33 in file "interrupts.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;		None
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;		None
  9091 ;; Return value:  Size  Location     Type
  9092 ;;                  1    wreg      void 
  9093 ;; Registers used:
  9094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9103 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9104 ;;Total ram usage:        2 bytes
  9105 ;; Hardware stack levels used: 1
  9106 ;; Hardware stack levels required when called: 4
  9107 ;; This function calls:
  9108 ;;		_getCharFromTxBuf
  9109 ;;		_isDataInTxBuf
  9110 ;;		_putCharToRxBuf
  9111 ;;		i2_color_clear_init_interrupts
  9112 ;; This function is called by:
  9113 ;;		Interrupt level 2
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           	psect	intcode
  9118   000008                     __pintcode:
  9119                           	callstack 0
  9120   000008                     _HighISR:
  9121                           	callstack 21
  9122                           
  9123                           ; BSR set to: 14
  9124                           ;incstack = 0
  9125   000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9126   00000A  CFD9 F00A          	movff	fsr2l,??_HighISR
  9127   00000E  CFDA F00B          	movff	fsr2h,??_HighISR+1
  9128   000012                     
  9129                           ;interrupts.c: 37:     if(PIR0bits.INT0IF){
  9130   000012  010E               	movlb	14	; () banked
  9131   000014  A133               	btfss	51,0,b	;volatile
  9132   000016  EF0F  F000         	goto	i2u241_41
  9133   00001A  EF11  F000         	goto	i2u241_40
  9134   00001E                     i2u241_41:
  9135   00001E  EF18  F000         	goto	i2l3657
  9136   000022                     i2u241_40:
  9137   000022                     
  9138                           ; BSR set to: 14
  9139                           ;interrupts.c: 38:         wall = 1;
  9140   000022  0E01               	movlw	1
  9141   000024  0100               	movlb	0	; () banked
  9142   000026  6FB1               	movwf	_wall& (0+255),b
  9143   000028                     
  9144                           ; BSR set to: 0
  9145                           ;interrupts.c: 39:         color_clear_init_interrupts();
  9146   000028  EC19  F01D         	call	i2_color_clear_init_interrupts	;wreg free
  9147   00002C                     
  9148                           ;interrupts.c: 40:         PIR0bits.INT0IF = 0;
  9149   00002C  010E               	movlb	14	; () banked
  9150   00002E  9133               	bcf	51,0,b	;volatile
  9151   000030                     i2l3657:
  9152                           
  9153                           ; BSR set to: 14
  9154                           ;interrupts.c: 47:     if(TMR0IF){
  9155   000030  AB33               	btfss	51,5,b	;volatile
  9156   000032  EF1D  F000         	goto	i2u242_41
  9157   000036  EF1F  F000         	goto	i2u242_40
  9158   00003A                     i2u242_41:
  9159   00003A  EF24  F000         	goto	i2l3663
  9160   00003E                     i2u242_40:
  9161   00003E                     
  9162                           ; BSR set to: 14
  9163                           ;interrupts.c: 48:         lost = 1;
  9164   00003E  0E01               	movlw	1
  9165   000040  0100               	movlb	0	; () banked
  9166   000042  6FB0               	movwf	_lost& (0+255),b
  9167   000044                     
  9168                           ; BSR set to: 0
  9169                           ;interrupts.c: 49:         TMR0IF=0;
  9170   000044  010E               	movlb	14	; () banked
  9171   000046  9B33               	bcf	51,5,b	;volatile
  9172   000048                     i2l3663:
  9173                           
  9174                           ; BSR set to: 14
  9175                           ;interrupts.c: 56:     if(PIR4bits.RC4IF){
  9176   000048  A737               	btfss	55,3,b	;volatile
  9177   00004A  EF29  F000         	goto	i2u243_41
  9178   00004E  EF2B  F000         	goto	i2u243_40
  9179   000052                     i2u243_41:
  9180   000052  EF2E  F000         	goto	i2l3667
  9181   000056                     i2u243_40:
  9182   000056                     
  9183                           ; BSR set to: 14
  9184                           ;interrupts.c: 58:         putCharToRxBuf(RC4REG);
  9185   000056  51E3               	movf	227,w,b	;volatile
  9186   000058  ECDF  F01E         	call	_putCharToRxBuf
  9187   00005C                     i2l3667:
  9188                           
  9189                           ;interrupts.c: 62:     if(PIR4bits.TX4IF){
  9190   00005C  010E               	movlb	14	; () banked
  9191   00005E  A537               	btfss	55,2,b	;volatile
  9192   000060  EF34  F000         	goto	i2u244_41
  9193   000064  EF36  F000         	goto	i2u244_40
  9194   000068                     i2u244_41:
  9195   000068  EF46  F000         	goto	i2l313
  9196   00006C                     i2u244_40:
  9197   00006C                     
  9198                           ; BSR set to: 14
  9199                           ;interrupts.c: 64:         TX4REG = getCharFromTxBuf();
  9200   00006C  ECF2  F01E         	call	_getCharFromTxBuf	;wreg free
  9201   000070  010E               	movlb	14	; () banked
  9202   000072  6FE4               	movwf	228,b	;volatile
  9203   000074                     
  9204                           ; BSR set to: 14
  9205                           ;interrupts.c: 65:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
  9206   000074  EC6F  F01F         	call	_isDataInTxBuf	;wreg free
  9207   000078  0900               	iorlw	0
  9208   00007A  A4D8               	btfss	status,2,c
  9209   00007C  EF42  F000         	goto	i2u245_41
  9210   000080  EF44  F000         	goto	i2u245_40
  9211   000084                     i2u245_41:
  9212   000084  EF46  F000         	goto	i2l313
  9213   000088                     i2u245_40:
  9214   000088  010E               	movlb	14	; () banked
  9215   00008A  952D               	bcf	45,2,b	;volatile
  9216   00008C                     i2l313:
  9217   00008C  C00B  FFDA         	movff	??_HighISR+1,fsr2h
  9218   000090  C00A  FFD9         	movff	??_HighISR,fsr2l
  9219   000094  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9220   000096  0011               	retfie		f
  9221   000098                     __end_of_HighISR:
  9222                           	callstack 0
  9223                           
  9224 ;; *************** function i2_color_clear_init_interrupts *****************
  9225 ;; Defined at:
  9226 ;;		line 27 in file "color.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;		None
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;  low_threshol    2    7[COMRAM] unsigned int 
  9231 ;;  high_thresho    2    5[COMRAM] unsigned int 
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  1    wreg      void 
  9234 ;; Registers used:
  9235 ;;		wreg, status,2, status,0, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9242 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9244 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9245 ;;Total ram usage:        5 bytes
  9246 ;; Hardware stack levels used: 1
  9247 ;; Hardware stack levels required when called: 3
  9248 ;; This function calls:
  9249 ;;		i2_I2C_2_Master_Start
  9250 ;;		i2_I2C_2_Master_Stop
  9251 ;;		i2_I2C_2_Master_Write
  9252 ;;		i2_color_writetoaddr
  9253 ;; This function is called by:
  9254 ;;		_HighISR
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           	psect	text42
  9259   003A32                     __ptext42:
  9260                           	callstack 0
  9261   003A32                     i2_color_clear_init_interrupts:
  9262                           	callstack 21
  9263   003A32                     
  9264                           ;color.c: 29:     I2C_2_Master_Start();
  9265   003A32  ECAB  F01F         	call	i2_I2C_2_Master_Start	;wreg free
  9266                           
  9267                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  9268   003A36  0E52               	movlw	82
  9269   003A38  EC8C  F01F         	call	i2_I2C_2_Master_Write
  9270                           
  9271                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  9272   003A3C  0EE6               	movlw	230
  9273   003A3E  EC8C  F01F         	call	i2_I2C_2_Master_Write
  9274                           
  9275                           ;color.c: 32:     I2C_2_Master_Stop();
  9276   003A42  ECA6  F01F         	call	i2_I2C_2_Master_Stop	;wreg free
  9277   003A46                     
  9278                           ;color.c: 35:     unsigned int high_threshold = ambient + 12;
  9279   003A46  0E0C               	movlw	12
  9280   003A48  244E               	addwf	_ambient^0,w,c
  9281   003A4A  6E06               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
  9282   003A4C  0E00               	movlw	0
  9283   003A4E  204F               	addwfc	(_ambient+1)^0,w,c
  9284   003A50  6E07               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
  9285   003A52                     
  9286                           ;color.c: 36:     unsigned int low_threshold = ambient - 12;
  9287   003A52  0EF4               	movlw	244
  9288   003A54  244E               	addwf	_ambient^0,w,c
  9289   003A56  6E08               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
  9290   003A58  0EFF               	movlw	255
  9291   003A5A  204F               	addwfc	(_ambient+1)^0,w,c
  9292   003A5C  6E09               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
  9293                           
  9294                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
  9295   003A5E  0E13               	movlw	19
  9296   003A60  6E03               	movwf	i2color_writetoaddr@value^0,c
  9297   003A62  0E00               	movlw	0
  9298   003A64  EC37  F01F         	call	i2_color_writetoaddr
  9299   003A68                     
  9300                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9301   003A68  0E3F               	movlw	63
  9302   003A6A  6E05               	movwf	??i2_color_clear_init_interrupts^0,c
  9303   003A6C  0E55               	movlw	85
  9304   003A6E                     i2u364_47:
  9305   003A6E  2EE8               	decfsz	wreg,f,c
  9306   003A70  D7FE               	bra	i2u364_47
  9307   003A72  2E05               	decfsz	??i2_color_clear_init_interrupts^0,f,c
  9308   003A74  D7FC               	bra	i2u364_47
  9309   003A76  0000               	nop	
  9310   003A78                     
  9311                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
  9312   003A78  5007               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
  9313   003A7A  6E03               	movwf	i2color_writetoaddr@value^0,c
  9314   003A7C  0E07               	movlw	7
  9315   003A7E  EC37  F01F         	call	i2_color_writetoaddr
  9316   003A82                     
  9317                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  9318   003A82  C006  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
  9319   003A86  0E06               	movlw	6
  9320   003A88  EC37  F01F         	call	i2_color_writetoaddr
  9321   003A8C                     
  9322                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
  9323   003A8C  5009               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
  9324   003A8E  6E03               	movwf	i2color_writetoaddr@value^0,c
  9325   003A90  0E05               	movlw	5
  9326   003A92  EC37  F01F         	call	i2_color_writetoaddr
  9327   003A96                     
  9328                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  9329   003A96  C008  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
  9330   003A9A  0E04               	movlw	4
  9331   003A9C  EC37  F01F         	call	i2_color_writetoaddr
  9332   003AA0                     
  9333                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
  9334   003AA0  0E04               	movlw	4
  9335   003AA2  6E03               	movwf	i2color_writetoaddr@value^0,c
  9336   003AA4  0E0C               	movlw	12
  9337   003AA6  EC37  F01F         	call	i2_color_writetoaddr
  9338   003AAA  0012               	return		;funcret
  9339   003AAC                     __end_ofi2_color_clear_init_interrupts:
  9340                           	callstack 0
  9341                           
  9342 ;; *************** function i2_color_writetoaddr *****************
  9343 ;; Defined at:
  9344 ;;		line 50 in file "color.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  address         1    wreg     unsigned char 
  9347 ;;  value           1    2[COMRAM] unsigned char 
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;  address         1    3[COMRAM] unsigned char 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1    wreg      void 
  9352 ;; Registers used:
  9353 ;;		wreg, status,2, status,0, cstack
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9359 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9362 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9363 ;;Total ram usage:        2 bytes
  9364 ;; Hardware stack levels used: 1
  9365 ;; Hardware stack levels required when called: 2
  9366 ;; This function calls:
  9367 ;;		i2_I2C_2_Master_Start
  9368 ;;		i2_I2C_2_Master_Stop
  9369 ;;		i2_I2C_2_Master_Write
  9370 ;; This function is called by:
  9371 ;;		i2_color_clear_init_interrupts
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           
  9375                           	psect	text43
  9376   003E6E                     __ptext43:
  9377                           	callstack 0
  9378   003E6E                     i2_color_writetoaddr:
  9379                           	callstack 21
  9380                           
  9381                           ;incstack = 0
  9382                           ;i2color_writetoaddr@address stored from wreg
  9383   003E6E  6E04               	movwf	i2color_writetoaddr@address^0,c
  9384   003E70                     
  9385                           ;color.c: 51:     I2C_2_Master_Start();
  9386   003E70  ECAB  F01F         	call	i2_I2C_2_Master_Start	;wreg free
  9387                           
  9388                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
  9389   003E74  0E52               	movlw	82
  9390   003E76  EC8C  F01F         	call	i2_I2C_2_Master_Write
  9391                           
  9392                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
  9393   003E7A  5004               	movf	i2color_writetoaddr@address^0,w,c
  9394   003E7C  0980               	iorlw	128
  9395   003E7E  EC8C  F01F         	call	i2_I2C_2_Master_Write
  9396                           
  9397                           ;color.c: 54:     I2C_2_Master_Write(value);
  9398   003E82  5003               	movf	i2color_writetoaddr@value^0,w,c
  9399   003E84  EC8C  F01F         	call	i2_I2C_2_Master_Write
  9400                           
  9401                           ;color.c: 55:     I2C_2_Master_Stop();
  9402   003E88  ECA6  F01F         	call	i2_I2C_2_Master_Stop	;wreg free
  9403   003E8C  0012               	return		;funcret
  9404   003E8E                     __end_ofi2_color_writetoaddr:
  9405                           	callstack 0
  9406                           
  9407 ;; *************** function i2_I2C_2_Master_Write *****************
  9408 ;; Defined at:
  9409 ;;		line 45 in file "i2c.c"
  9410 ;; Parameters:    Size  Location     Type
  9411 ;;  data_byte       1    wreg     unsigned char 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  data_byte       1    1[COMRAM] unsigned char 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  1    wreg      void 
  9416 ;; Registers used:
  9417 ;;		wreg, status,2, status,0, cstack
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9427 ;;Total ram usage:        1 bytes
  9428 ;; Hardware stack levels used: 1
  9429 ;; Hardware stack levels required when called: 1
  9430 ;; This function calls:
  9431 ;;		i2_I2C_2_Master_Idle
  9432 ;; This function is called by:
  9433 ;;		i2_color_clear_init_interrupts
  9434 ;;		i2_color_writetoaddr
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           	psect	text44
  9439   003F18                     __ptext44:
  9440                           	callstack 0
  9441   003F18                     i2_I2C_2_Master_Write:
  9442                           	callstack 21
  9443                           
  9444                           ;incstack = 0
  9445                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9446   003F18  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9447   003F1A                     
  9448                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9449   003F1A  ECB8  F01E         	call	i2_I2C_2_Master_Idle	;wreg free
  9450   003F1E                     
  9451                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9452   003F1E  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9453   003F22  0012               	return		;funcret
  9454   003F24                     __end_ofi2_I2C_2_Master_Write:
  9455                           	callstack 0
  9456                           
  9457 ;; *************** function i2_I2C_2_Master_Stop *****************
  9458 ;; Defined at:
  9459 ;;		line 39 in file "i2c.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;		None
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;		None
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  1    wreg      void 
  9466 ;; Registers used:
  9467 ;;		wreg, status,2, status,0, cstack
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9477 ;;Total ram usage:        0 bytes
  9478 ;; Hardware stack levels used: 1
  9479 ;; Hardware stack levels required when called: 1
  9480 ;; This function calls:
  9481 ;;		i2_I2C_2_Master_Idle
  9482 ;; This function is called by:
  9483 ;;		i2_color_clear_init_interrupts
  9484 ;;		i2_color_writetoaddr
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text45
  9489   003F4C                     __ptext45:
  9490                           	callstack 0
  9491   003F4C                     i2_I2C_2_Master_Stop:
  9492                           	callstack 21
  9493   003F4C                     
  9494                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9495   003F4C  ECB8  F01E         	call	i2_I2C_2_Master_Idle	;wreg free
  9496   003F50                     
  9497                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9498   003F50  010E               	movlb	14	; () banked
  9499   003F52  85DA               	bsf	218,2,b	;volatile
  9500   003F54                     
  9501                           ; BSR set to: 14
  9502   003F54  0012               	return		;funcret
  9503   003F56                     __end_ofi2_I2C_2_Master_Stop:
  9504                           	callstack 0
  9505                           
  9506 ;; *************** function i2_I2C_2_Master_Start *****************
  9507 ;; Defined at:
  9508 ;;		line 27 in file "i2c.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;		None
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;		None
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		wreg, status,2, status,0, cstack
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9526 ;;Total ram usage:        0 bytes
  9527 ;; Hardware stack levels used: 1
  9528 ;; Hardware stack levels required when called: 1
  9529 ;; This function calls:
  9530 ;;		i2_I2C_2_Master_Idle
  9531 ;; This function is called by:
  9532 ;;		i2_color_clear_init_interrupts
  9533 ;;		i2_color_writetoaddr
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           	psect	text46
  9538   003F56                     __ptext46:
  9539                           	callstack 0
  9540   003F56                     i2_I2C_2_Master_Start:
  9541                           	callstack 21
  9542   003F56                     
  9543                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9544   003F56  ECB8  F01E         	call	i2_I2C_2_Master_Idle	;wreg free
  9545   003F5A                     
  9546                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9547   003F5A  010E               	movlb	14	; () banked
  9548   003F5C  81DA               	bsf	218,0,b	;volatile
  9549   003F5E                     
  9550                           ; BSR set to: 14
  9551   003F5E  0012               	return		;funcret
  9552   003F60                     __end_ofi2_I2C_2_Master_Start:
  9553                           	callstack 0
  9554                           
  9555 ;; *************** function i2_I2C_2_Master_Idle *****************
  9556 ;; Defined at:
  9557 ;;		line 22 in file "i2c.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;		None
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;		None
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  1    wreg      void 
  9564 ;; Registers used:
  9565 ;;		wreg, status,2, status,0
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9574 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9575 ;;Total ram usage:        1 bytes
  9576 ;; Hardware stack levels used: 1
  9577 ;; This function calls:
  9578 ;;		Nothing
  9579 ;; This function is called by:
  9580 ;;		i2_I2C_2_Master_Start
  9581 ;;		i2_I2C_2_Master_Stop
  9582 ;;		i2_I2C_2_Master_Write
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           	psect	text47
  9587   003D70                     __ptext47:
  9588                           	callstack 0
  9589   003D70                     i2_I2C_2_Master_Idle:
  9590                           	callstack 21
  9591   003D70                     i2l203:
  9592   003D70  010E               	movlb	14	; () banked
  9593   003D72  B5D8               	btfsc	216,2,b	;volatile
  9594   003D74  EFBE  F01E         	goto	i2u132_41
  9595   003D78  EFC0  F01E         	goto	i2u132_40
  9596   003D7C                     i2u132_41:
  9597   003D7C  EFB8  F01E         	goto	i2l203
  9598   003D80                     i2u132_40:
  9599   003D80                     
  9600                           ; BSR set to: 14
  9601   003D80  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9602   003D84  0E1F               	movlw	31
  9603   003D86  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9604   003D88  A4D8               	btfss	status,2,c
  9605   003D8A  EFC9  F01E         	goto	i2u133_41
  9606   003D8E  EFCB  F01E         	goto	i2u133_40
  9607   003D92                     i2u133_41:
  9608   003D92  EFB8  F01E         	goto	i2l203
  9609   003D96                     i2u133_40:
  9610   003D96                     
  9611                           ; BSR set to: 14
  9612   003D96  0012               	return		;funcret
  9613   003D98                     __end_ofi2_I2C_2_Master_Idle:
  9614                           	callstack 0
  9615                           
  9616 ;; *************** function _putCharToRxBuf *****************
  9617 ;; Defined at:
  9618 ;;		line 33 in file "serial.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  byte            1    wreg     unsigned char 
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;  byte            1    0[COMRAM] unsigned char 
  9623 ;; Return value:  Size  Location     Type
  9624 ;;                  1    wreg      void 
  9625 ;; Registers used:
  9626 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9627 ;; Tracked objects:
  9628 ;;		On entry : 0/0
  9629 ;;		On exit  : 0/0
  9630 ;;		Unchanged: 0/0
  9631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9636 ;;Total ram usage:        1 bytes
  9637 ;; Hardware stack levels used: 1
  9638 ;; This function calls:
  9639 ;;		Nothing
  9640 ;; This function is called by:
  9641 ;;		_HighISR
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text48
  9646   003DBE                     __ptext48:
  9647                           	callstack 0
  9648   003DBE                     _putCharToRxBuf:
  9649                           	callstack 24
  9650                           
  9651                           ; BSR set to: 14
  9652                           ;incstack = 0
  9653                           ;putCharToRxBuf@byte stored from wreg
  9654   003DBE  6E01               	movwf	putCharToRxBuf@byte^0,c
  9655   003DC0                     
  9656                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9657   003DC0  0E13               	movlw	19
  9658   003DC2  644D               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9659   003DC4  EFE6  F01E         	goto	i2u216_41
  9660   003DC8  EFE8  F01E         	goto	i2u216_40
  9661   003DCC                     i2u216_41:
  9662   003DCC  EFEA  F01E         	goto	i2l3477
  9663   003DD0                     i2u216_40:
  9664   003DD0  0E00               	movlw	0
  9665   003DD2  6E4D               	movwf	_RxBufWriteCnt^0,c	;volatile
  9666   003DD4                     i2l3477:
  9667                           
  9668                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9669   003DD4  504D               	movf	_RxBufWriteCnt^0,w,c
  9670   003DD6  0F9C               	addlw	low _EUSART4RXbuf
  9671   003DD8  6ED9               	movwf	fsr2l,c
  9672   003DDA  6ADA               	clrf	fsr2h,c
  9673   003DDC  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9674   003DE0  2A4D               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9675   003DE2  0012               	return		;funcret
  9676   003DE4                     __end_of_putCharToRxBuf:
  9677                           	callstack 0
  9678                           
  9679 ;; *************** function _isDataInTxBuf *****************
  9680 ;; Defined at:
  9681 ;;		line 61 in file "serial.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;		None
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;		None
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      unsigned char 
  9688 ;; Registers used:
  9689 ;;		wreg, status,2, status,0
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9699 ;;Total ram usage:        0 bytes
  9700 ;; Hardware stack levels used: 1
  9701 ;; This function calls:
  9702 ;;		Nothing
  9703 ;; This function is called by:
  9704 ;;		_HighISR
  9705 ;;		_sendTxBuf
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           	psect	text49
  9710   003EDE                     __ptext49:
  9711                           	callstack 0
  9712   003EDE                     _isDataInTxBuf:
  9713                           	callstack 24
  9714   003EDE                     
  9715                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  9716   003EDE  504A               	movf	_TxBufReadCnt^0,w,c	;volatile
  9717   003EE0  184B               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  9718   003EE2  A4D8               	btfss	status,2,c
  9719   003EE4  EF76  F01F         	goto	i2u218_41
  9720   003EE8  EF79  F01F         	goto	i2u218_40
  9721   003EEC                     i2u218_41:
  9722   003EEC  0E01               	movlw	1
  9723   003EEE  EF7A  F01F         	goto	i2u219_40
  9724   003EF2                     i2u218_40:
  9725   003EF2  0E00               	movlw	0
  9726   003EF4                     i2u219_40:
  9727   003EF4  0012               	return		;funcret
  9728   003EF6                     __end_of_isDataInTxBuf:
  9729                           	callstack 0
  9730                           
  9731 ;; *************** function _getCharFromTxBuf *****************
  9732 ;; Defined at:
  9733 ;;		line 47 in file "serial.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;		None
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;		None
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  1    wreg      unsigned char 
  9740 ;; Registers used:
  9741 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9751 ;;Total ram usage:        1 bytes
  9752 ;; Hardware stack levels used: 1
  9753 ;; This function calls:
  9754 ;;		Nothing
  9755 ;; This function is called by:
  9756 ;;		_HighISR
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760                           	psect	text50
  9761   003DE4                     __ptext50:
  9762                           	callstack 0
  9763   003DE4                     _getCharFromTxBuf:
  9764                           	callstack 24
  9765   003DE4                     
  9766                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9767   003DE4  0E3B               	movlw	59
  9768   003DE6  644A               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9769   003DE8  EFF8  F01E         	goto	i2u217_41
  9770   003DEC  EFFA  F01E         	goto	i2u217_40
  9771   003DF0                     i2u217_41:
  9772   003DF0  EFFC  F01E         	goto	i2l3485
  9773   003DF4                     i2u217_40:
  9774   003DF4  0E00               	movlw	0
  9775   003DF6  6E4A               	movwf	_TxBufReadCnt^0,c	;volatile
  9776   003DF8                     i2l3485:
  9777                           
  9778                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
  9779   003DF8  2A4A               	incf	_TxBufReadCnt^0,f,c	;volatile
  9780   003DFA  044A               	decf	_TxBufReadCnt^0,w,c	;volatile
  9781   003DFC  6E01               	movwf	??_getCharFromTxBuf^0,c
  9782   003DFE  5001               	movf	??_getCharFromTxBuf^0,w,c
  9783   003E00  0F60               	addlw	low _EUSART4TXbuf
  9784   003E02  6ED9               	movwf	fsr2l,c
  9785   003E04  6ADA               	clrf	fsr2h,c
  9786   003E06  50DF               	movf	indf2,w,c
  9787   003E08  0012               	return		;funcret
  9788   003E0A                     __end_of_getCharFromTxBuf:
  9789                           	callstack 0
  9790                           
  9791                           	psect	smallconst
  9792   000E00                     __psmallconst:
  9793                           	callstack 0
  9794   000E00  00                 	db	0
  9795   000E01  00                 	db	0	; dummy byte at the end
  9796   000000                     
  9797                           	psect	rparam
  9798   000000                     
  9799                           	psect	temp
  9800   000050                     btemp:
  9801                           	callstack 0
  9802   000050                     	ds	1
  9803   000000                     int$flags	set	btemp
  9804   000000                     wtemp8	set	btemp+1
  9805   000000                     ttemp5	set	btemp+1
  9806   000000                     ttemp6	set	btemp+4
  9807   000000                     ttemp7	set	btemp+8
  9808                           
  9809                           	psect	config
  9810                           
  9811                           ;Config register CONFIG1L @ 0x300000
  9812                           ;	External Oscillator mode Selection bits
  9813                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9814                           ;	Power-up default value for COSC bits
  9815                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9816   300000                     	org	3145728
  9817   300000  AA                 	db	170
  9818                           
  9819                           ;Config register CONFIG1H @ 0x300001
  9820                           ;	unspecified, using default values
  9821                           ;	Clock Out Enable bit
  9822                           ;	CLKOUTEN = 0x1, unprogrammed default
  9823                           ;	Clock Switch Enable bit
  9824                           ;	CSWEN = 0x1, unprogrammed default
  9825                           ;	Fail-Safe Clock Monitor Enable bit
  9826                           ;	FCMEN = 0x1, unprogrammed default
  9827   300001                     	org	3145729
  9828   300001  FF                 	db	255
  9829                           
  9830                           ;Config register CONFIG3L @ 0x300004
  9831                           ;	WDT Period Select bits
  9832                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9833                           ;	WDT operating mode
  9834                           ;	WDTE = OFF, WDT Disabled
  9835   300004                     	org	3145732
  9836   300004  9F                 	db	159
  9837                           
  9838                           ;Config register CONFIG3H @ 0x300005
  9839                           ;	unspecified, using default values
  9840                           ;	WDT Window Select bits
  9841                           ;	WDTCWS = 0x7, unprogrammed default
  9842                           ;	WDT input clock selector
  9843                           ;	WDTCCS = 0x7, unprogrammed default
  9844   300005                     	org	3145733
  9845   300005  FF                 	db	255
  9846                           tosu	equ	0xFFF
  9847                           tosh	equ	0xFFE
  9848                           tosl	equ	0xFFD
  9849                           stkptr	equ	0xFFC
  9850                           pclatu	equ	0xFFB
  9851                           pclath	equ	0xFFA
  9852                           pcl	equ	0xFF9
  9853                           tblptru	equ	0xFF8
  9854                           tblptrh	equ	0xFF7
  9855                           tblptrl	equ	0xFF6
  9856                           tablat	equ	0xFF5
  9857                           prodh	equ	0xFF4
  9858                           prodl	equ	0xFF3
  9859                           indf0	equ	0xFEF
  9860                           postinc0	equ	0xFEE
  9861                           postdec0	equ	0xFED
  9862                           preinc0	equ	0xFEC
  9863                           plusw0	equ	0xFEB
  9864                           fsr0h	equ	0xFEA
  9865                           fsr0l	equ	0xFE9
  9866                           wreg	equ	0xFE8
  9867                           indf1	equ	0xFE7
  9868                           postinc1	equ	0xFE6
  9869                           postdec1	equ	0xFE5
  9870                           preinc1	equ	0xFE4
  9871                           plusw1	equ	0xFE3
  9872                           fsr1h	equ	0xFE2
  9873                           fsr1l	equ	0xFE1
  9874                           bsr	equ	0xFE0
  9875                           indf2	equ	0xFDF
  9876                           postinc2	equ	0xFDE
  9877                           postdec2	equ	0xFDD
  9878                           preinc2	equ	0xFDC
  9879                           plusw2	equ	0xFDB
  9880                           fsr2h	equ	0xFDA
  9881                           fsr2l	equ	0xFD9
  9882                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      79
    BANK0           160     60     146
    BANK1           256    214     254
    BANK2           256      0     122
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK1[1]), 

    color_calibration@blue	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@blue(BANK1[6]), 

    color_calibration@green	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@green(BANK1[6]), 

    color_calibration@lightblue	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@lightblue(BANK1[6]), 

    color_calibration@orange	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@orange(BANK1[6]), 

    color_calibration@pink	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@pink(BANK1[6]), 

    color_calibration@red	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@red(BANK1[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    color_calibration@RGBC_n	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC_n(BANK1[8]), 

    color_calibration@white	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@white(BANK1[6]), 

    color_calibration@yellow	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@yellow(BANK1[6]), 

    color_normalise@RGBC_n	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC_n(BANK1[8]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    S29DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S29DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), main@motorR(BANK1[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_calibration
    _move->_returnHome
    _returnHome->_reverseOneSquare
    _returnHome->_turnLeft
    _returnHome->_turnRight
    _lostReturnHome->_reverseOneSquare
    _lostReturnHome->_turnLeft
    _lostReturnHome->_turnRight
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_color_normalise
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___aldiv
    ___aldiv->___lmul
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_move

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               262   262      0  213848
                                             71 COMRAM     2     2      0
                                             16 BANK0     44    44      0
                                              0 BANK1    214   214      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
                   _color_click_init
                       _color_detect
                    _color_normalise
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                               _stop
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _move                                                18     2     16  103098
                                             64 COMRAM     2     2      0
                                              0 BANK0     16     0     16
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          20     5     15   53152
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      20     5     15   52272
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    4053
                                             30 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    14     7      7    5257
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2      69
                                             11 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    6245
                                             30 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        59     3     56     847
                                             11 COMRAM    59     3     56
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    1612
                                             20 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0     862
                                             15 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             13 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20    4584
                                             49 COMRAM    22     2     20
                    _color_normalise
                         _color_read
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2     787
                                             15 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                             12 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                     12     2     10    2421
                                             37 COMRAM    12     2     10
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             23 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   33814
                                             44 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   12433
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   20033
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2285
                                             24 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             17 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     543
                                             19 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0     356
                                              9 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (7) i2_color_clear_init_interrupts                        5     5      0     334
                                              4 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_normalise
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _white_Light
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_writetoaddr
   _color_detect
   _color_normalise
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _turnLeft
     _turnRight
   _resetTimer
   _stop
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      7A       9       47.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D6      FE       7       99.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3C      92       5       91.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      4F       1       84.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     259      66        0.0%
DATA                 0      0     259       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 14:14:23 2024

                                _white_Light 3E0A                      color_calibration@RGBC_n 0034  
                                         l91 228E                                           l89 2280  
                               ___awdiv@sign 0011                          ___wmul@multiplicand 000E  
                           main@turnDuration 01B9                            ??_Interrupts_init 000C  
                                        l100 25EE                                          l200 3D1E  
                                        l203 3D48                                          l212 3F4A  
                                        l221 3C86                                          l141 3E4C  
                                        l206 3D6E                                          l303 3F0A  
                                        l215 3F36                                          l135 3CBE  
                                        l152 34E4                                          l144 3E26  
                                        l209 3F40                                          l161 39B6  
                                        l410 3C42                                          l218 3F16  
                                        l146 3E2C                                          l170 29FE  
                                        l138 3A30                                          l252 3CF4  
                                        l412 3C44                                          l172 2A0C  
                                        l164 2896                                          l156 39B4  
                                        l149 2CA0                                          l173 2AB2  
                                        l166 28A4                                          l167 294A  
                                        l408 3C2C                                          l344 3EAA  
                                        l409 3C2E                                          l169 2958  
                                        l513 21B2                                          l602 302C  
                                        l610 3790                                          l522 1442  
                                        l605 305A                                          l614 37DC  
                                        l391 3EC4                                          l631 2E86  
                                        l623 2D9E                                          l640 272C  
                                        l528 1442                                          l625 2DC2  
                                        l553 1AE2                                          l394 3EC8  
                                        l538 14BC                                          l643 277A  
                                        l635 26DA                                          l619 2D34  
                                        l571 36F8                                          l563 1B5C  
                                        l547 1AE2                                          l396 3ED6  
                                        l580 315A                                          l644 286A  
                                        l660 3F2C                                          l628 2E44  
                                        l397 3EDC                                          l494 339A  
                                        l582 317E                                          l646 288A  
                                        l639 26F6                                          l487 3930  
                                        l663 3D46                                          l576 30F0  
                                        l568 36B6                                          l657 3E6C  
                                        l585 3200                                          l593 2F1C  
                                        l745 35F0                                          l666 3DBC  
                                        l588 322E                                          l597 2F86  
                                        l677 3BE6                                          l678 3BF6  
                                        l599 2FAA                                          l897 38A0  
                              ?_color_detect 000C                                          prod 0FF3  
                        i2_color_writetoaddr 3E6E                                          wreg 0FE8  
                            color_detect@red 0014    color_clear_init_interrupts@high_threshold 0011  
i2color_clear_init_interrupts@high_threshold 0006                              _color_normalise 339C  
                                       l3001 1208                                         l3011 1282  
                                       l1164 3B1E                                         l1157 3B16  
                                       l3101 3C96                                         l3021 131C  
                                       l3013 12BA                                         l3005 122C  
                                       l3111 3E56                                         l3103 3CA6  
                                       l3031 13AE                                         l3023 1334  
                                       l3007 124A                                         l3113 3E60  
                                       l3201 2A3E                                         l3105 3CB0  
                                       l3121 3E98                                         l3041 145E  
                                       l3033 13CE                                         l3025 136C  
                                       l3009 126A                                         l3017 12DE  
                                       l3115 3E6A                                         l3051 37E2  
                                       l3211 25F2                                         l3203 2A56  
                                       l3107 3CBA                                         l3131 38A2  
                                       l3123 3E9A                                         l3043 1462  
                                       l3035 13E6                                         l3019 12FC  
                                       l3117 3EF6                                         l3109 3E4E  
                                       l3061 3812                                         l3053 37F0  
                                       l3221 26E8                                         l3213 261A  
                                       l3205 2A76                                         l3141 390A  
                                       l3133 38B2                                         l3125 3EA4  
                                       l3045 1494                                         l3037 141E  
                                       l3029 1390                                         l3071 3840  
                                       l3063 3816                                         l3055 37F8  
                                       l3231 2744                                         l3223 2704  
                                       l3215 2632                                         l3207 2A96  
                                       l3151 3924                                         l3143 390C  
                                       l3135 38D8                                         l3127 3EA6  
                                       l3119 3E8E                                         l3047 14AC  
                                       l3081 3874                                         l3073 384E  
                                       l3065 381E                                         l3057 37FC  
                                       l3049 37DE                                         l3161 3C26  
                                       l3241 27A6                                         l3233 2746  
                                       l3225 271C                                         l3217 2672  
                                       l2521 3D58                                         l3209 2AAE  
                                       l3153 392E                                         l3145 3916  
                                       l3137 38DC                                         l3129 3EA8  
                                       l2601 37B8                                         l3401 16DC  
                                       l3083 387A                                         l3075 3854  
                                       l3067 3830                                         l3059 380A  
                                       l3163 3C3C                                         l3155 3BF8  
                                       l2531 3AB4                                         l2523 3D98  
                                       l3251 2886                                         l3243 27BE  
                                       l3235 275E                                         l3227 2726  
                                       l3219 269A                                         l3171 28B4  
                                       l3147 3918                                         l3139 3900  
                                       l2603 3F24                                         l3411 17A6  
                                       l3403 1718                                         l3077 386A  
                                       l3069 3838                                         l3085 3880  
                                       l3157 3C02                                         l2541 3AEA  
                                       l2533 3AC6                                         l2525 3DB4  
                                       l3245 27FE                                         l3237 276C  
                                       l3229 273A                                         l3181 2946  
                                       l3173 28D6                                         l3165 288C  
                                       l3261 397E                                         l3253 3932  
                                       l3149 3922                                         l2605 3D20  
                                       l2621 3680                                         l2613 35F2  
                                       l3421 1858                                         l3413 17C6  
                                       l3405 1736                                         l3095 3CC0  
                                       l3087 3890                                         l3079 3872  
                                       l3159 3C18                                         l2543 3B00  
                                       l2535 3ACE                                         l2711 30C6  
                                       l2703 305C                                         l3247 2826  
                                       l3239 277E                                         l2519 3D48  
                                       l2551 3F38                                         l3191 29C2  
                                       l3183 295C                                         l3175 28EE  
                                       l3167 2892                                         l3263 3986  
                                       l3255 3932                                         l2607 3D2C  
                                       l2631 36DA                                         l2623 368C  
                                       l2615 363A                                         l3431 18EA  
                                       l3423 1870                                         l3415 17FE  
                                       l3407 1756                                         l3089 3898  
                                       l2545 3B08                                         l2537 3AD6  
                                       l2529 3AAC                                         l2713 30D2  
                                       l2721 3118                                         l2705 307A  
                                       l3249 286E                                         l2801 3BAC  
                                       l2641 3F46                                         l2553 3F3C  
                                       l2561 3F32                                         l3193 29E2  
                                       l3185 2968                                         l3177 290E  
                                       l3169 28A8                                         l3097 3C88  
                                       l3265 39A8                                         l3257 3954  
                                       l2609 3D3E                                         l2625 3698  
                                       l3433 190A                                         l3441 197E  
                                       l3425 18A8                                         l3409 176E  
                                       l3417 181A                                         l3361 14BE  
                                       l2547 3B0A                                         l2539 3AE4  
                                       l2571 32B8                                         l2563 3230  
                                       l2723 313C                                         l2715 30DE  
                                       l2707 3086                                         l2811 34F8  
                                       l2803 3BBC                                         l2651 3C82  
                                       l2643 3C48                                         l2555 3F0E  
                                       l3195 29FA                                         l3187 298A  
                                       l3179 292E                                         l3099 3C8C  
                                       l3267 39B0                                         l3259 395C  
                                       l2627 36A4                                         l2635 36E4  
                                       l2619 364C                                         l3443 199C  
                                       l3435 1922                                         l3419 1838  
                                       l3371 1586                                         l3363 14DE  
                                       l2549 3B10                                         l2573 32FA  
                                       l2565 324C                                         l2741 31EE  
                                       l2733 3196                                         l2725 3148  
                                       l2717 30EC                                         l2709 30BA  
                                       l2661 2EB2                                         l2821 352E  
                                       l2813 3508                                         l2805 3BC6  
                                       l2653 3C84                                         l2645 3C4C  
                                       l2557 3F12                                         l3197 2A10  
                                       l3189 29A2                                         l2901 3D0A  
                                       l2637 3E30                                         l2629 36B2  
                                       l3461 1ABE                                         l3445 19BC  
                                       l3453 1A30                                         l3437 195A  
                                       l3429 18CC                                         l3381 15D4  
                                       l3373 159E                                         l3365 14F6  
                                       l3701 1B90                                         l2575 3316  
                                       l2567 32A0                                         l2743 31FC  
                                       l2735 31CA                                         l2727 3156  
                                       l2719 3114                                         l2671 2F18  
                                       l2663 2EE6                                         l2831 3576  
                                       l2823 353E                                         l2815 350C  
                                       l2807 34E6                                         l2647 3C54  
                                       l2639 3F42                                         l2559 3F2E  
                                       l3199 2A1C                                         l2903 3D0C  
                                       l2911 39EE                                         l2591 3766  
                                       l2583 36FA                                         l2751 2CBE  
                                       l3455 1A4E                                         l3447 19D4  
                                       l3391 1632                                         l3471 1B4C  
                                       l3383 15EC                                         l3375 15BA  
                                       l3367 152E                                         l3711 1C32  
                                       l3703 1BA8                                         l2577 335A  
                                       l2569 32B4                                         l2745 3224  
                                       l2737 31D6                                         l2729 3184  
                                       l2681 2F82                                         l2673 2F40  
                                       l2665 2EF2                                         l2657 2E88  
                                       l2841 35BA                                         l2833 3580  
                                       l2825 3554                                         l2817 351A  
                                       l2809 34EA                                         l2649 3C5C  
                                       l2921 3A26                                         l2913 39FE  
                                       l2905 39B8                                         l2593 3772  
                                       l2585 371A                                         l2761 2D22  
                                       l2753 2CCA                                         l3465 1AFE  
                                       l3457 1A6E                                         l3449 1A0C  
                                       l3393 164A                                         l3385 15F4  
                                       l3377 15BE                                         l3369 154E  
                                       l3721 1CD4                                         l3713 1C4A  
                                       l3705 1BE0                                         l3801 21FA  
                                       l2931 3EC2                                         l2923 3EAC  
                                       l2739 31E2                                         l2691 3002  
                                       l2683 2FB0                                         l2667 2EFE  
                                       l2675 2F44                                         l2659 2EA6  
                                       l2835 359E                                         l2827 355C  
                                       l2843 35C0                                         l2819 352A  
                                       l2915 3A08                                         l2907 39CC  
                                       l2595 377E                                         l2587 3726  
                                       l2771 2D8C                                         l2763 2D30  
                                       l2755 2CFE                                         l3467 1B02  
                                       l3459 1A86                                         l3395 1686  
                                       l3387 15F6                                         l3379 15C4  
                                       l3731 1D94                                         l3723 1CEC  
                                       l3715 1C82                                         l3707 1C00  
                                       l3811 2218                                         l3803 21FE  
                                       l2933 3EC6                                         l2925 3EB6  
                                       l2693 300E                                         l2677 2F68  
                                       l2669 2F0A                                         l2845 35D0  
                                       l2837 35AE                                         l2829 3568  
                                       l2917 3A12                                         l2909 39D8  
                                       l2597 378C                                         l2589 375A  
                                       l2781 2E0E                                         l2773 2D9A  
                                       l2765 2D58                                         l2757 2D0A  
                                       l2749 2CA2                                         l3469 1B34  
                                       l3397 16A4                                         l3389 1612  
                                       l2941 0E22                                         l3741 1E36  
                                       l3725 1D24                                         l3733 1DB4  
                                       l3709 1C12                                         l3717 1CA2  
                                       l3901 2548                                         l3821 2238  
                                       l3813 221C                                         l3805 2202  
                                       l2935 3EDA                                         l2927 3EBE  
                                       l2695 301A                                         l2687 2FC2  
                                       l2679 2F74                                         l2847 35E0  
                                       l2839 35B0                                         l2871 2AE8  
                                       l2863 3E0C                                         l2919 3A1C  
                                       l2599 37B4                                         l2791 2E68  
                                       l2783 2E1A                                         l2775 2DC8  
                                       l2759 2D16                                         l2767 2D5C  
                                       l3399 16C4                                         l2951 0EE2  
                                       l2943 0E3A                                         l3751 1ED8  
                                       l3743 1E56                                         l3735 1DC6  
                                       l3727 1D44                                         l3719 1CB4  
                                       l3911 25BE                                         l3903 254E  
                                       l3831 2250                                         l3823 223C  
                                       l3815 2220                                         l3807 2206  
                                       l2929 3EC0                                         l2697 3028  
                                       l2689 2FF6                                         l2881 2C3C  
                                       l2873 2B40                                         l2865 3E1C  
                                       l2785 2E26                                         l2769 2D80  
                                       l2961 0F54                                         l2953 0EFE  
                                       l2945 0E72                                         l3761 1F9A  
                                       l3753 1F10                                         l3737 1DE6  
                                       l3745 1E8E                                         l3729 1D7C  
                                       l3905 255E                                         l3913 25C8  
                                       l3841 226C                                         l3833 2258  
                                       l3825 2240                                         l3817 2228  
                                       l3809 2212                                         l2699 3050  
                                       l2891 347C                                         l2883 2C5A  
                                       l2875 2B5E                                         l2867 2AB4  
                                       l2787 2E32                                         l2795 2E72  
                                       l2779 2DDA                                         l2971 0FE6  
                                       l2963 0F56                                         l2955 0F02  
                                       l2947 0E92                                         l2939 0E02  
                                       l3771 2054                                         l3763 1FB2  
                                       l3755 1F30                                         l3747 1EA0  
                                       l3739 1DFE                                         l3915 25DC  
                                       l3907 2562                                         l3851 2296  
                                       l3843 2270                                         l3835 2260  
                                       l3827 2244                                         l3819 2230  
                                       l2797 3B8E                                         l2885 339C  
                                       l2877 2BBE                                         l2869 2ACE  
                                       l2893 3CF6                                         l2789 2E40  
                                       l2981 1096                                         l2973 1004  
                                       l2965 0F72                                         l2957 0F34  
                                       l2949 0ECA                                         l3773 2074  
                                       l3781 211C                                         l3765 1FEA  
                                       l3749 1EC0                                         l3757 1F68  
                                       l3909 25BA                                         l3861 2344  
                                       l3853 22AE                                         l3845 2274  
                                       l3837 2264                                         l3829 2248  
                                       l2799 3B9E                                         l2887 33B0  
                                       l2879 2BDC                                         l2895 3D00  
                                       l2991 115E                                         l2983 10B6  
                                       l2975 1024                                         l2967 0F92  
                                       l2959 0F4C                                         l3783 212E  
                                       l3775 208C                                         l3767 200A  
                                       l3759 1F7A                                         l3871 2390  
                                       l3863 2350                                         l3855 2302  
                                       l3847 2278                                         l3839 2268  
                                       l3791 21C0                                         l2889 3414  
                                       l2897 3D06                                         l2985 10CE  
                                       l2993 117A                                         l2977 103C  
                                       l2969 0FAA                                         l3785 2172  
                                       l3777 20C4                                         l3769 2042  
                                       l3697 1B5E                                         l3881 23F2  
                                       l3873 2396                                         l3865 2358  
                                       l3857 2326                                         l3849 227C  
                                       l3793 21DE                                  main@curMove 01AF  
                                       l2899 3D08                                         l2995 1198  
                                       l2987 1106                                         l2979 1078  
                                       l3779 20E4                                         l3699 1B70  
                                       l3891 251C                                         l3883 23FE  
                                       l3875 239A                                         l3867 2370  
                                       l3859 232C                                         l3795 21E2  
                                       l3787 21B4                                         l2997 11B8  
                                       l2989 1126                                         l3893 2528  
                                       l3885 241C                                         l3877 23AC  
                                       l3869 238C                                         l3797 21F2  
                                       l3789 21C0                                         l2999 11D0  
                                       l3895 2530                                         l3887 24C6  
                                       l3879 23BC                                         l3799 21F6  
                                       l3897 2534                                         l3889 24D6  
                                       l3899 2538                                         u1300 324C  
                                       u2100 1838                                         u1301 3248  
                                       u2101 1834                                         u1310 3316  
                                       u2110 18EA                                         u1311 3312  
                                       u2111 18E6                                         u1400 2F40  
                                       u2120 199C                                         u1401 2F3C  
                                       u2121 1998                                         u1410 2F68  
                                       u1250 3D58                                         u2130 1A4E  
                                       u1411 2F64                                         u1251 3D54  
                                       u2131 1A4A                                         u1420 2FAA  
                                       u1260 3D6E                                         u1340 37B4  
                                       u1500 2D58                                         u2140 1B34  
                                       u2060 15D4                                         u1421 2FA6  
                                       u1261 3D6A                                         u1341 37B0  
                                       u1501 2D54                                         u2141 1B30  
                                       u2061 15D0                                         u1270 3AC6  
                                       u1430 2FBE                                         u1350 37DC  
                                       u1510 2D80                                         u2150 1B5C  
                                       u2070 1612                                         u1271 3AC2  
                                       u1431 2FBA                                         u1351 37D8  
                                       u1511 2D7C                                         u2151 1B58  
                                       u2071 160E                                         u3007 0E2C  
                                       u1280 3AE4                                         u1440 3050  
                                       u1600 3576                                         u1520 2DC2  
                                       u1360 3648                                         u2080 16A4  
                    color_calibration@orange 0040                                 _BAUD4CONbits 0EE9  
                                       u1281 3AE0                                         u1441 304C  
                                       u1601 3572                                         u1521 2DBE  
                                       u1361 3644                                         u2081 16A0  
                                       u3017 0E64                                         u1290 3B00  
                                       u1450 3114                                         u1610 359E  
                                       u1530 2DD6                                         u1370 36DA  
                                       u2090 1736                                         u1291 3AFC  
                                       u1451 3110                                         u1611 359A  
                                       u1531 2DD2                                         u1371 36D6  
                                       u2091 1732                                         u3107 1130  
                                       u3027 0E9C                                         u1460 313C  
                                       u1620 35D0                                         u1380 3C70  
                                       u1540 2E68                                         u1700 124A  
                                       u2500 1C12                                         u1461 3138  
                                       u1621 35CC                                         u1381 3C68  
                                       u1541 2E64                                         u1701 1246  
                                       u3117 1168                                         u3037 0ED4  
                                       u2501 1C0E                                         u1470 317E  
                                       u1550 3BAC                                         u1630 3E1C  
                                       u1710 12FC                                         u2510 1CB4  
                                       u1471 317A                                         u1551 3BA8  
                                       u1631 3E18                                         u3207 14E8  
                                       u1711 12F8                                         u3127 11C2  
                                       u3047 0F9C                                         u2511 1CB0  
                                       u1640 3ED6                                         u1800 3890  
                                       u1480 3192                                         u1560 3BE6  
                                       u1720 13AE                                         u2520 1DC6  
                                       u2600 228E                                         u1641 3ED2  
                                       u1801 388C                                         u1481 318E  
                                       u1561 3BE2                                         u3217 1520  
                                       u1721 13AA                                         u3137 11FA  
                                       u3057 0FD4                                         u2521 1DC2  
                                       u2601 228A                                         u1810 3C26  
                                       u1490 3224                                         u1570 34F8  
                                       u1730 1494                                         u1650 0F34  
                                       u2530 1EA0                                         u2610 23AC  
                                       _T2PR 0FBC                                         u1811 3C22  
                                       u1491 3220                                         u1571 34F4  
                                       u3307 17D0                                         u3227 1558  
                                       u1731 1490                                         u3147 1274  
                                       u3067 102E                                         u1651 0F30  
                                       u2531 1E9C                                         u2611 23A8  
                                       u1820 3C3C                                         u1900 26F6  
                                       u1580 351A                                         u1740 14BC  
                                       u1660 0F72                                         u2540 1F7A  
                                       u1821 3C38                                         u1901 26F2  
                                       u1581 3516                                         u3317 1808  
                                       u3237 1590                                         u1741 14B8  
                                       u3157 12AC                                         u3077 1066  
                                       u1661 0F6E                                         u2541 1F76  
                                       u2701 2492                                         u1750 37F0  
                                       u1910 2704                                         u1590 3554  
                                       u1398 3C72                                         u1830 28A4  
                                       u1670 1004                                         u2550 2054  
                                       u1751 37EC                                         u1911 2700  
                                       u1591 3550                                         u1831 28A0  
                                       u3407 36AA                                         u3327 1862  
                                       u3247 163C                                         u3167 1326  
                                       u3087 10C0                                         u1671 1000  
                                       u2551 2050                                         u2711 24A4  
                                       u2631 2408                                         u1760 380A  
                                       u1920 271C                                         u1680 1096  
                                       u2560 212E                                         u1761 3806  
                                       u1921 2718                                         u1841 28C2  
                                       u3417 2D28                                         u3337 189A  
                                       u3257 1674                                         u3177 135E  
                                       u3097 10F8                                         u1681 1092  
                                       u2561 212A                                         u2721 24B6  
                                       u2641 2426                                         u2625 23B8  
                                       u1770 3830                                         u1930 273A  
                                       u1850 2958                                         u1690 1198  
                                       u2490 1B70                                         u1771 382C  
                                       u1931 2736                                         u3507 2624  
                                       u1851 2954                                         u3427 2D92  
                                       u3347 1914                                         u3267 16CE  
                                       u3187 13D8                                         u1691 1194  
                                       u2491 1B6C                                         u2651 2438  
                                       u2627 23BC                                         u2571 21BA  
                                       u1780 384E                                         u1940 276C  
                                       u2740 255E                                         u1781 384A  
                                       u1941 2768                                         u3517 2664  
                                       u1861 2976                                         u3437 2E38  
                                       u3357 194C                                         u3277 1706  
                                       u3197 1410                                         u2741 255A  
                                       u2661 244A                                         u2581 21CC  
                                       u1790 386A                                         u1870 2A0C  
                                       u1950 3954                                         u2750 25DC  
                                       u1791 3866                                         u3607 3020  
                                       u3527 26A4                                         u1871 2A08  
                                       u1951 3950                                         u3447 3784  
                                       u3367 19C6                                         u3287 1760  
                                       u2807 1B9A                                         u2751 25D8  
                                       u2735 2544                                         u2671 245C  
                                       u2591 21D8                                         u1960 397E  
                                       u2760 25EE                                         u3617 30E4  
                                       u3537 2750                                         u1881 2A2A  
                                       u3457 3C9C                                         u1961 397A  
                                       u3377 19FE                                         u3297 1798  
                                       u2817 1BD2                                         u2761 25EA  
                                       u2737 2548                                         u2681 246E  
                                       u1890 26E8                                         u1970 39A8  
                                       u3627 314E                                         u3547 27B0  
                                       u1891 26E4                                         u3467 39F4  
                                       u1971 39A4                                         u3387 1A78  
                                       u2907 1E60                                         u2827 1C3C  
                                       u2691 2480                                         u3637 31F4  
                                       u3557 27F0                                         u3477 2938  
                                       u3397 1AB0                                         u2917 1ECA  
                                       u2837 1C74                                         u3567 2830  
                                       u3487 29EC                                         u2927 1F02  
                                       u2847 1CDE                                         u3577 2878  
                                       u3497 2AA0                                         u2937 1F3A  
                                       u2857 1D16                                         u2777 22A0  
                                       u3587 2F10                                         u2947 1FA4  
                                       u2867 1D4E                                         u2787 2336  
                                       u3597 2F7A                                         u2957 1FDC  
                                       u2877 1D86                                         u2797 2362  
                                       u2967 2014                                         u2887 1DF0  
                                       u2977 207E                                         u2897 1E28  
                                       u2987 20B6                                         u2997 20EE  
                    color_calibration@yellow 003C                  lostReturnHome@straightSpeed 0036  
                                       _main 21B4                                         _move 1B5E  
                                       _lost 00B0                                         _wall 00B1  
                                       fsr1h 0FE2                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         btemp 0050  
                                       _stop 35F2                                         prodh 0FF4  
                                       prodl 0FF3                                         start 0098  
                           color_detect@blue 0020                          main@reverseDuration 0198  
                           __end_of_ADC_init 3EC6                         ?i2_color_writetoaddr 0003  
                           color_detect@pink 002C                              __end_of_HighISR 0098  
                      lostReturnHome@curMove 0035                                 ___param_bank 0000  
                       __end_of_batteryLevel 3C46                              __end_of___aldiv 35F2  
                                      ?_main 0001                                        _ADPCH 0F5F  
                            __end_of___awdiv 38A2                                        ?_move 00B2  
                                      ?_stop 001F                              ___awdiv@divisor 000E  
                            __end_of___lwdiv 3B20                                        i2l203 3D70  
                                      i2l141 3E8C                                        i2l206 3D96  
                                      i2l215 3F54                                        i2l209 3F5E  
                                      i2l313 008C                                        i2l218 3F22  
                                      i2l138 3AAA                                        i2l352 3DE2  
                                      i2l366 3EF4                                        i2l359 3E08  
                            ___awdiv@counter 0010                               ??_color_detect 0044  
                                      _TMR0H 0FD4                                        _TMR0L 0FD3  
                        ___lmul@multiplicand 0010                   __end_of_I2C_2_Master_Start 3F42  
                 __end_of_I2C_2_Master_Write 3F18                                   _Buggy_init 3CC0  
                 color_calibration@lightblue 0042                       returnHome@straightRamp 0038  
                     returnHome@straightTime 0033                                        tablat 0FF5  
                                      plusw0 0FEB                                        plusw2 0FDB  
                                      ttemp5 0051                                        ttemp6 0054  
                                      ttemp7 0058                                        stop@i 0027  
                                      status 0FD8                                        wtemp8 0051  
                          color_detect@color 0046                            color_detect@green 001A  
                          color_detect@white 003E                        ??i2_color_writetoaddr 0004  
                               main@turnRamp 01AD                        _I2C_2_Master_RepStart 3F42  
                         putCharToRxBuf@byte 0001                              __initialization 3B20  
                  get16bitTMR0val@timer_high 0012                                 __end_of_main 25F2  
                               __end_of_move 21B4                                 __end_of_stop 36FA  
                        move@reverseDuration 00BD                              _get16bitTMR0val 3D20  
                                     ??_main 0048                                       ??_move 0041  
                                     ??_stop 0024                                __activetblptr 0000  
                              calibration@mL 002D                                calibration@mR 002F  
                    __end_of_color_normalise 34E6                       returnHome@turnDuration 003A  
                               ?_setMotorPWM 0019                                       _ADRESH 0F64  
                                     _CCPR1H 0FAA                                       _CCPR2H 0FA6  
                                     _CCPR3H 0F25                                       _CCPR4H 0F21  
                           ___awdiv@dividend 000C                       lostReturnHome@turnRamp 003B  
                                     _RC0PPS 0E62                                       _RC4REG 0EE3  
                                     _RE2PPS 0E74                                       _RC7PPS 0E69  
                                     _RD5PPS 0E6F                                       _RE4PPS 0E76  
                                     _RD6PPS 0E70                                       i2l3093 3E70  
                                     i2l3501 3A32                                       i2l3511 3A82  
                                     i2l3503 3A46                                       i2l3513 3A8C  
                                     i2l3505 3A52                                       i2l3515 3A96  
                                     i2l3507 3A68                                       i2l2581 3D80  
                                     i2l3517 3AA0                                       i2l3509 3A78  
                                     i2l3481 3DE4                                       i2l3473 3DC0  
                                     i2l3483 3DF4                                       i2l3475 3DD0  
                                     i2l2579 3D70                                       i2l2851 3F56  
                                     i2l3651 0022                                       i2l3485 3DF8  
                                     i2l3477 3DD4                                       i2l2853 3F5A  
                                     i2l2861 3F1E                                       i2l3661 0044  
                                     i2l3653 0028                                       i2l3479 3DE0  
                                     i2l2855 3F4C                                       i2l3671 0074  
                                     i2l3663 0048                                       i2l3655 002C  
                                     i2l3489 3EDE                                       i2l2857 3F50  
                                     i2l3673 0088                                       i2l3665 0056  
                                     i2l3657 0030                                       i2l3649 0012  
                                     i2l2859 3F1A                                       i2l3667 005C  
                                     i2l3659 003E                                       _RG6PPS 0E88  
                                     i2l3669 006C                                    ??_HighISR 000A  
                   __end_of_color_click_init 3CC0                                       _TMR0IE 714D  
                                     _TMR0IF 719D                                       _RX4PPS 0E15  
                                     _TX4REG 0EE4                                main@lightblue 018C  
                               ??_ADC_getval 000C                                ??_Timer0_init 000C  
                        calibration@turnRamp 0034                      calibration@turnDuration 0032  
                               _CCPTMRS0bits 0FAD                             _getCharFromTxBuf 3DE4  
                                     ___lmul 3B8E                                    ??___aldiv 0020  
                                     ___wmul 3D98                                    ??___awdiv 0010  
                                  ??___lwdiv 0016                           color_detect@RGBC_n 000C  
                                     clear_0 3B5E                                       clear_1 3B6A  
                                     clear_2 3B76                             ___awdiv@quotient 0012  
                                     isa$std 0001                      returnHome@straightSpeed 0036  
                               __pdataCOMRAM 004E                                       move@mL 00B2  
                                     move@mR 00B4                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                                    ?_ADC_init 0001  
                                     stop@mL 001F                                       stop@mR 0021  
                                ?_Buggy_init 0001                            ??_initDCmotorsPWM 000E  
                         __end_of_ADC_getval 3EDE                   i2color_writetoaddr@address 0004  
                           __end_of_turnLeft 3230                           color_detect@orange 0032  
                 lostReturnHome@moveSequence 0031                        __end_of_isDataInTxBuf 3EF6  
                                 __accesstop 0060                      __end_of__initialization 3B84  
                         color_detect@yellow 0026                              fullSpeedAhead@i 0028  
                              main@turnSpeed 01AC                       ?_I2C_2_Master_RepStart 0001  
                              ___rparam_used 0001                         __end_of_color_detect 39B8  
              lostReturnHome@reverseDuration 0037                              _Interrupts_init 3EF6  
                             __pcstackCOMRAM 0001                      __end_of_get16bitTMR0val 3D48  
                               ?_white_Light 0001                                 __pidataBANK0 3F60  
                   get16bitTMR0val@timer_low 0010                     get16bitTMR0val@timer_val 0014  
               ?_color_clear_init_interrupts 0001                             _reverseOneSquare 2CA2  
                        __end_of_Timer0_init 3E6E                             ?_color_normalise 0026  
                                 ??_ADC_init 000C                                 _batteryLevel 3BF8  
                                 __pbssBANK0 0060                                   __pbssBANK1 01D6  
                                 __pbssBANK2 0200                            _color_writetoaddr 3E2E  
                               _T2CLKCONbits 0FBF                               _lostReturnHome 14BE  
                         ?_color_writetoaddr 000E                                      ?___lmul 000C  
                                    ?___wmul 000C                               ___lmul@product 0014  
              ??_color_clear_init_interrupts 0010                                  move@curMove 00BB  
                    lostReturnHome@turnSpeed 0039                          ??_color_writetoaddr 000F  
                                    _SP4BRGH 0EE6                                      _SP4BRGL 0EE5  
                 fullSpeedAhead@straightRamp 0024                        turnRight@turnDuration 0024  
                                    _SSP2ADD 0ED6                                      _SSP2BUF 0ED5  
                                 _color_read 2AB4                      __end_of_Interrupts_init 3F0C  
                     color_writetoaddr@value 000E                                      _HighISR 0008  
                  __end_of_color_writetoaddr 3E4E                       __end_of_lostReturnHome 1B5E  
                                  _ADREFbits 0F58                           _I2C_2_Master_Start 3F38  
                                 _initUSART4 3E8E                          i2_I2C_2_Master_Idle 3D70  
                         _I2C_2_Master_Write 3F0C                                      __Hparam 0000  
                        i2_I2C_2_Master_Stop 3F4C                                      __Lparam 0000  
                                _Timer0_init 3E4E                         calibration@turnSpeed 0031  
                           ?_get16bitTMR0val 000C                                      ___aldiv 34E6  
                                    ___awdiv 37DE                              lostReturnHome@i 0040  
                              ??_calibration 0035                          ?_I2C_2_Master_Start 0001  
                                    ___lwdiv 3AAC                          ?_I2C_2_Master_Write 0001  
                               __psmallconst 0E00                                      _ambient 004E  
                                    __pcinit 3B20                                      __ramtop 0E00  
                                  ?_turnLeft 001F                                      __ptext0 21B4  
                                    __ptext1 1B5E                                      __ptext2 0E02  
                                    __ptext3 14BE                                      __ptext4 35F2  
                                    __ptext5 2CA2                                      __ptext6 3F24  
                                    __ptext7 3D20                                      __ptext8 36FA  
                                    __ptext9 3E8E                         ?i2_I2C_2_Master_Idle 0001  
                                  _T2CONbits 0FBD                         ?i2_I2C_2_Master_Stop 0001  
                           ___aldiv@dividend 0018                                    _T2HLTbits 0FBE  
                              _RxBufWriteCnt 004D                     __end_of_getCharFromTxBuf 3E0A  
                                    main@buf 00C2                                      main@red 0199  
                       ??_I2C_2_Master_Start 000D                         ??_I2C_2_Master_Write 000D  
                      color_normalise@RGBC_n 002E                         end_of_initialization 3B84  
            ??i2_color_clear_init_interrupts 0005                  __end_ofi2_color_writetoaddr 3E8E  
                           ADC_getval@tmpval 000C                            reverseOneSquare@i 0029  
                          ?_color_click_init 0001                              ?_lostReturnHome 002D  
                                 _resetTimer 3F24                           ??_color_click_init 0015  
                           ___aldiv@quotient 0022                   batteryLevel@batteryQuarter 0015  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc1 0FE6  
                                    postinc2 0FDE                   batteryLevel@batteryVoltage 0014  
                                 main@F14630 0252                                   main@F14632 0200  
                                 main@F14626 01D6                                   main@F14635 00EE  
                                 _returnHome 0E02                              _initDCmotorsPWM 38A2  
                                 ??_turnLeft 0026                                    _PORTFbits 0F8E  
                         setMotorPWM@negDuty 001E                        ??i2_I2C_2_Master_Idle 0001  
                              move@turnSpeed 00BF                            __end_of_turnRight 305C  
                      ??i2_I2C_2_Master_Stop 0002                                   main@RGBC_n 01B1  
                        __end_of_calibration 288C                                 _color_detect 3932  
                                returnHome@i 0040                                    _TRISAbits 0F81  
                         setMotorPWM@posDuty 001D                                    _TRISBbits 0F82  
                                  _TRISCbits 0F83                                    _TRISDbits 0F84  
                                  _TRISEbits 0F85                                    _TRISFbits 0F86  
                                  _TRISGbits 0F87                                    _TRISHbits 0F88  
                           white_Light@state 000C                                 ??_Buggy_init 000C  
                           fullSpeedAhead@mL 001F                             fullSpeedAhead@mR 0021  
                                ?_color_read 0010                     color_writetoaddr@address 000F  
                    ??_I2C_2_Master_RepStart 000D                     __end_of_reverseOneSquare 2E88  
                           ?_Interrupts_init 0001                                stop@cur_power 0029  
                                _CCP1CONbits 0FAB                       color_calibration@green 0038  
                               _EUSART4RXbuf 009C                          returnHome@turnSpeed 0039  
                               _EUSART4TXbuf 0060                                  _CCP2CONbits 0FA7  
                     color_calibration@white 0044                                  _CCP3CONbits 0F26  
                 lostReturnHome@straightRamp 0038                   lostReturnHome@straightTime 0033  
                                ?_initUSART4 0001                                   main@orange 0186  
                                _CCP4CONbits 0F22                                   main@motorL 01CC  
                                 main@motorR 01C2                                   main@yellow 017A  
                             color_read@RGBC 0010                               _fullSpeedAhead 36FA  
                             __end_of___lmul 3BF8                         turnLeft@turnDuration 0024  
                             __end_of___wmul 3DBE                           __end_of_Buggy_init 3CF6  
                              __pidataCOMRAM 3F64                          start_initialization 3B20  
                              _TxBufWriteCnt 004B                   lostReturnHome@turnDuration 003A  
                           move@moveSequence 00B7        __end_ofi2_color_clear_init_interrupts 3AAC  
              i2_color_clear_init_interrupts 3A32                                  ?_resetTimer 0001  
                    __end_of_initDCmotorsPWM 3932                       __end_of_fullSpeedAhead 37DE  
                         turnRight@cur_power 002B                                     ??___lmul 0014  
                                   ??___wmul 0010                               _putCharToRxBuf 3DBE  
                        color_normalise@RGBC 0026                                  __pdataBANK0 00EE  
              i2I2C_2_Master_Write@data_byte 0002                                  _calibration 25F2  
                                ?_returnHome 002D                 reverseOneSquare@straightRamp 0025  
               __end_ofi2_I2C_2_Master_Start 3F60                 __end_ofi2_I2C_2_Master_Write 3F24  
                          turnLeft@cur_power 002B                                  __pbssCOMRAM 004A  
                              __pcstackBANK0 00B2                                __pcstackBANK1 0100  
                                   ?_HighISR 0001                             stop@straightRamp 0023  
                           ___lwdiv@dividend 0012                                 ?_Timer0_init 0001  
                     __end_of_putCharToRxBuf 3DE4                              ?_fullSpeedAhead 001F  
                                  __pintcode 0008                                     ?___aldiv 0018  
                         turnRight@turnSpeed 0023                                     ?___awdiv 000C  
                                   ?___lwdiv 0012                         I2C_2_Master_Read@ack 000E  
                       I2C_2_Master_Read@tmp 000F                                  __smallconst 0E00  
                           main@moveSequence 0152                            _I2C_2_Master_Idle 3D48  
                          _I2C_2_Master_Init 3CF6                            _I2C_2_Master_Read 3C46  
                          turnLeft@turnSpeed 0023                            _I2C_2_Master_Stop 3F2E  
                               _RxBufReadCnt 004C                                     _ADC_init 3EAC  
                         ?_I2C_2_Master_Idle 0001                           ?_I2C_2_Master_Init 0001  
                         ?_I2C_2_Master_Read 0001                                ??_setMotorPWM 001B  
                         ?_I2C_2_Master_Stop 0001                             ___lwdiv@quotient 0016  
                   initDCmotorsPWM@PWMperiod 000C                            ?_getCharFromTxBuf 0001  
                           ??_lostReturnHome 003C                           ??_getCharFromTxBuf 0001  
                          move@straightSpeed 00BC                              ___aldiv@divisor 001C  
                        ??_I2C_2_Master_Idle 000C                              ___aldiv@counter 0020  
                        ??_I2C_2_Master_Init 000C                          ??_I2C_2_Master_Read 000D  
                             ___wmul@product 0010                                     _LATAbits 0F79  
                        ??_I2C_2_Master_Stop 000D                                     _LATCbits 0F7B  
                              _isDataInTxBuf 3EDE                                     _LATDbits 0F7C  
                                   _LATEbits 0F7D                                     _LATFbits 0F7E  
                                   _LATGbits 0F7F                                     _LATHbits 0F80  
                                   _IPR0bits 0E1F                                     _PIE0bits 0E29  
                                   _PIE4bits 0E2D                                     i2u132_40 3D80  
                                   i2u132_41 3D7C                                     i2u133_40 3D96  
                                   i2u133_41 3D92                                  turnRight@mL 001F  
                                turnRight@mR 0021                                     i2u216_40 3DD0  
                                   i2u216_41 3DCC                                     i2u217_40 3DF4  
                                   i2u241_40 0022                                     i2u217_41 3DF0  
                                   i2u241_41 001E                                     i2u218_40 3EF2  
                                   i2u242_40 003E                                     i2u218_41 3EEC  
                                   i2u242_41 003A                                     i2u219_40 3EF4  
                                   i2u243_40 0056                                     i2u243_41 0052  
                                   i2u244_40 006C                                     i2u244_41 0068  
                                   i2u245_40 0088                                     i2u245_41 0084  
                                   _PIR0bits 0E33                                     i2u364_47 3A6E  
                                   _PIR4bits 0E37                              ?_putCharToRxBuf 0001  
                           ?_initDCmotorsPWM 000C                  fullSpeedAhead@straightSpeed 0023  
        __end_of_color_clear_init_interrupts 3A32               ?i2_color_clear_init_interrupts 0001  
                _color_clear_init_interrupts 39B8                                     _SSP2CON2 0EDA  
                                   _SSP2STAT 0ED8                                 move@turnRamp 00C1  
                                 _ADCON0bits 0F60                    __end_of_I2C_2_Master_Idle 3D70  
                      color_calibration@RGBC 0032                    __end_of_I2C_2_Master_Init 3D20  
                  __end_of_I2C_2_Master_Read 3C88                            ___wmul@multiplier 000C  
                  __end_of_I2C_2_Master_Stop 3F38     color_clear_init_interrupts@low_threshold 0013  
 i2color_clear_init_interrupts@low_threshold 0008                                 setMotorPWM@m 0019  
                I2C_2_Master_Write@data_byte 000D                        color_calibration@blue 003A  
                         returnHome@turnRamp 003B                                    main@color 01AE  
                      color_calibration@pink 003E                                    main@green 019F  
                                  main@white 0192                                 _TxBufReadCnt 004A  
                   i2color_writetoaddr@value 0003                                    _turnRight 2E88  
                  returnHome@reverseDuration 0037                                 ??_color_read 0012  
                          ___lmul@multiplier 000C                                    copy_data0 3B34  
                             ?_isDataInTxBuf 0001                __end_of_I2C_2_Master_RepStart 3F4C  
                          ?_reverseOneSquare 001F                          __end_of_setMotorPWM 339C  
                               ??_initUSART4 000C                         i2_I2C_2_Master_Start 3F56  
            reverseOneSquare@reverseDuration 0024                         i2_I2C_2_Master_Write 3F18  
                         ??_reverseOneSquare 0026                                     __Hrparam 0000  
                          ??_color_normalise 0030                                   _ADC_getval 3EC6  
                           main@testSequence 00EA                                     __Lrparam 0000  
                              ??_white_Light 000C                  __end_ofi2_I2C_2_Master_Idle 3D98  
                __end_ofi2_I2C_2_Master_Stop 3F56                             lostReturnHome@mL 002D  
                           lostReturnHome@mR 002F                           __end_of_color_read 2CA2  
                                 _ANSELBbits 0E9A                                   _ANSELDbits 0EA7  
                                 _ANSELFbits 0EB4                                   _T0CON0bits 0FD5  
                                 _T0CON1bits 0FD6                            _color_calibration 288C  
              reverseOneSquare@straightSpeed 0023                              ___lwdiv@divisor 0014  
                     returnHome@moveSequence 0031                           __end_of_initUSART4 3EAC  
                            ___lwdiv@counter 0018                            turnRight@turnRamp 0025  
                                 ?_turnRight 001F                                     __ptext10 38A2  
                                   __ptext11 3932                                     __ptext20 3F2E  
                                   __ptext12 3C88                                     __ptext21 3F38  
                                   __ptext13 39B8                                     __ptext30 305C  
                                   __ptext22 3F42                                     __ptext14 3E2E  
                                   __ptext31 3230                                     __ptext23 3C46  
                                   __ptext15 3CF6                                     __ptext40 3CC0  
                                   __ptext32 3D98                                     __ptext24 3D48  
                                   __ptext16 288C                                     __ptext33 3AAC  
                                   __ptext25 339C                                     __ptext17 3E0A  
                                   __ptext50 3DE4                                     __ptext42 3A32  
                                   __ptext34 3BF8                                     __ptext26 3B8E  
                                   __ptext18 2AB4                                     __ptext43 3E6E  
                                   __ptext35 37DE                                     __ptext27 34E6  
                                   __ptext19 3F0C                                     __ptext44 3F18  
                                   __ptext36 3EAC                                     __ptext28 25F2  
                                   __ptext45 3F4C                                     __ptext37 3EC6  
                                   __ptext29 2E88                                     __ptext46 3F56  
                                   __ptext38 3E4E                                     __ptext47 3D70  
                                   __ptext39 3EF6                                     __ptext48 3DBE  
                                   __ptext49 3EDE                                    move@color 00B6  
                         ?_color_calibration 0032                                ?_batteryLevel 0001  
                               _SSP2CON1bits 0ED9                                 _SSP2CON2bits 0EDA  
                           turnLeft@turnRamp 0025                                   turnLeft@mL 001F  
                                 turnLeft@mR 0021                          ??_color_calibration 0046  
                      ?i2_I2C_2_Master_Start 0001                             move@straightRamp 00BE  
                      ?i2_I2C_2_Master_Write 0001                             move@straightTime 00B9  
                          returnHome@curMove 0035                                 ??_resetTimer 000C  
                                 turnRight@i 0029                                     isa$xinst 0000  
                                 _RC4STAbits 0EE7                                     main@RGBC 01BA  
                                   int$flags 0050                                 ?_calibration 002D  
                                   main@blue 01A5                         color_calibration@red 0036  
                               ??_returnHome 003C                                     main@pink 0180  
                                   _turnLeft 305C                      fullSpeedAhead@cur_power 002A  
                        __end_of_white_Light 3E2E                    __end_of_color_calibration 2AB4  
                                 _INTCONbits 0FF2                    reverseOneSquare@cur_power 002B  
                         reverseOneSquare@mL 001F                           reverseOneSquare@mR 0021  
                         __end_of_resetTimer 3F2E                             move@turnDuration 00C0  
                             ??_batteryLevel 0014                                  _setMotorPWM 3230  
                          ??_get16bitTMR0val 000E                              ??_isDataInTxBuf 0001  
                                   intlevel2 0000                             ??_fullSpeedAhead 0025  
                         __end_of_returnHome 14BE                                    turnLeft@i 0029  
                                ?_ADC_getval 0001                            main@straightSpeed 01AB  
                      color_detect@lightBlue 0038                             _color_click_init 3C88  
                                 _SSP2DATPPS 0E1D                                   _SSP2CLKPPS 0E1C  
                               ___aldiv@sign 0021                                  ??_turnRight 0026  
                           main@straightRamp 01B0                             main@straightTime 0100  
                                 _TX4STAbits 0EE8                       ??i2_I2C_2_Master_Start 0002  
                     ??i2_I2C_2_Master_Write 0002                             ??_putCharToRxBuf 0001  
                               returnHome@mL 002D                                 returnHome@mR 002F  
