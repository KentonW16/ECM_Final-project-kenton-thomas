

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 12:45:18 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Generated 21/07/2023 GMT
    78                           ; 
    79                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F67K40 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	idataBANK0
   113   005398                     __pidataBANK0:
   114                           	callstack 0
   115                           
   116                           ;initializer for main@F14662
   117   005398  04                 	db	4
   118   005399  04                 	db	4
   119   00539A  01                 	db	1
   120   00539B  01                 	db	1
   121                           
   122                           ;initializer for _ambient
   123   00539C  01F4               	dw	500
   124   000000                     _T0CON0bits	set	4053
   125   000000                     _T0CON1bits	set	4054
   126   000000                     _TRISCbits	set	3971
   127   000000                     _RC4STAbits	set	3815
   128   000000                     _SP4BRGH	set	3814
   129   000000                     _TRISBbits	set	3970
   130   000000                     _TRISAbits	set	3969
   131   000000                     _TRISEbits	set	3973
   132   000000                     _TRISGbits	set	3975
   133   000000                     _LATFbits	set	3966
   134   000000                     _TRISFbits	set	3974
   135   000000                     _TRISHbits	set	3976
   136   000000                     _TRISDbits	set	3972
   137   000000                     _LATEbits	set	3965
   138   000000                     _LATGbits	set	3967
   139   000000                     _LATHbits	set	3968
   140   000000                     _SSP2CON2bits	set	3802
   141   000000                     _RX4PPS	set	3605
   142   000000                     _SSP2CLKPPS	set	3612
   143   000000                     _SSP2DATPPS	set	3613
   144   000000                     _PIE0bits	set	3625
   145   000000                     _CCPR4H	set	3873
   146   000000                     _CCPR3H	set	3877
   147   000000                     _CCPR2H	set	4006
   148   000000                     _CCPR1H	set	4010
   149   000000                     _CCP1CONbits	set	4011
   150   000000                     _CCPTMRS0bits	set	4013
   151   000000                     _T2PR	set	4028
   152   000000                     _T2CONbits	set	4029
   153   000000                     _TMR0L	set	4051
   154   000000                     _TMR0H	set	4052
   155   000000                     _INTCONbits	set	4082
   156   000000                     _CCP2CONbits	set	4007
   157   000000                     _CCP3CONbits	set	3878
   158   000000                     _ADREFbits	set	3928
   159   000000                     _LATAbits	set	3961
   160   000000                     _LATDbits	set	3964
   161   000000                     _PORTFbits	set	3982
   162   000000                     _CCP4CONbits	set	3874
   163   000000                     _PIE4bits	set	3629
   164   000000                     _PIR0bits	set	3635
   165   000000                     _RD5PPS	set	3695
   166   000000                     _ANSELDbits	set	3751
   167   000000                     _SSP2ADD	set	3798
   168   000000                     _SSP2CON1bits	set	3801
   169   000000                     _LATCbits	set	3963
   170   000000                     _SP4BRGL	set	3813
   171   000000                     _TX4STAbits	set	3816
   172   000000                     _BAUD4CONbits	set	3817
   173   000000                     _SSP2CON2	set	3802
   174   000000                     _SSP2STAT	set	3800
   175   000000                     _ANSELFbits	set	3764
   176   000000                     _SSP2BUF	set	3797
   177   000000                     _IPR0bits	set	3615
   178   000000                     _RE2PPS	set	3700
   179   000000                     _ANSELBbits	set	3738
   180   000000                     _RD6PPS	set	3696
   181   000000                     _RC0PPS	set	3682
   182   000000                     _RC7PPS	set	3689
   183   000000                     _ADPCH	set	3935
   184   000000                     _ADRESH	set	3940
   185   000000                     _ADCON0bits	set	3936
   186   000000                     _RE4PPS	set	3702
   187   000000                     _RG6PPS	set	3720
   188   000000                     _T2CLKCONbits	set	4031
   189   000000                     _T2HLTbits	set	4030
   190                           
   191                           ; #config settings
   192                           
   193                           	psect	cinit
   194   004FC8                     __pcinit:
   195                           	callstack 0
   196   004FC8                     start_initialization:
   197                           	callstack 0
   198   004FC8                     __initialization:
   199                           	callstack 0
   200                           
   201                           ; Initialize objects allocated to BANK0 (6 bytes)
   202                           ; load TBLPTR registers with __pidataBANK0
   203   004FC8  0E98               	movlw	low __pidataBANK0
   204   004FCA  6EF6               	movwf	tblptrl,c
   205   004FCC  0E53               	movlw	high __pidataBANK0
   206   004FCE  6EF7               	movwf	tblptrh,c
   207   004FD0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   208   004FD2  6EF8               	movwf	tblptru,c
   209   004FD4  EE00  F0F6         	lfsr	0,__pdataBANK0
   210   004FD8  EE10 F006          	lfsr	1,6
   211   004FDC                     copy_data0:
   212   004FDC  0009               	tblrd		*+
   213   004FDE  CFF5 FFEE          	movff	tablat,postinc0
   214   004FE2  50E5               	movf	postdec1,w,c
   215   004FE4  50E1               	movf	fsr1l,w,c
   216   004FE6  E1FA               	bnz	copy_data0
   217                           
   218                           ; Clear objects allocated to BANK2 (142 bytes)
   219   004FE8  EE02  F000         	lfsr	0,__pbssBANK2
   220   004FEC  0E8E               	movlw	142
   221   004FEE                     clear_0:
   222   004FEE  6AEE               	clrf	postinc0,c
   223   004FF0  06E8               	decf	wreg,f,c
   224   004FF2  E1FD               	bnz	clear_0
   225                           
   226                           ; Clear objects allocated to BANK1 (40 bytes)
   227   004FF4  EE01  F0D8         	lfsr	0,__pbssBANK1
   228   004FF8  0E28               	movlw	40
   229   004FFA                     clear_1:
   230   004FFA  6AEE               	clrf	postinc0,c
   231   004FFC  06E8               	decf	wreg,f,c
   232   004FFE  E1FD               	bnz	clear_1
   233                           
   234                           ; Clear objects allocated to BANK0 (62 bytes)
   235   005000  EE00  F0B8         	lfsr	0,__pbssBANK0
   236   005004  0E3E               	movlw	62
   237   005006                     clear_2:
   238   005006  6AEE               	clrf	postinc0,c
   239   005008  06E8               	decf	wreg,f,c
   240   00500A  E1FD               	bnz	clear_2
   241                           
   242                           ; Clear objects allocated to COMRAM (4 bytes)
   243   00500C  6A4E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   244   00500E  6A4D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   245   005010  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   246   005012  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   247   005014                     end_of_initialization:
   248                           	callstack 0
   249   005014                     __end_of__initialization:
   250                           	callstack 0
   251   005014  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   252   005016  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   253   005018  0100               	movlb	0
   254   00501A  EFC8  F014         	goto	_main	;jump to C main() function
   255                           
   256                           	psect	bssCOMRAM
   257   00004B                     __pbssCOMRAM:
   258                           	callstack 0
   259   00004B                     _TxBufReadCnt:
   260                           	callstack 0
   261   00004B                     	ds	1
   262   00004C                     _TxBufWriteCnt:
   263                           	callstack 0
   264   00004C                     	ds	1
   265   00004D                     _RxBufReadCnt:
   266                           	callstack 0
   267   00004D                     	ds	1
   268   00004E                     _RxBufWriteCnt:
   269                           	callstack 0
   270   00004E                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273   0000B8                     __pbssBANK0:
   274                           	callstack 0
   275   0000B8                     	ds	40
   276   0000E0                     _EUSART4RXbuf:
   277                           	callstack 0
   278   0000E0                     	ds	20
   279   0000F4                     _lost:
   280                           	callstack 0
   281   0000F4                     	ds	1
   282   0000F5                     _brightnessChange:
   283                           	callstack 0
   284   0000F5                     	ds	1
   285                           
   286                           	psect	dataBANK0
   287   0000F6                     __pdataBANK0:
   288                           	callstack 0
   289   0000F6                     main@F14662:
   290                           	callstack 0
   291   0000F6                     	ds	4
   292   0000FA                     _ambient:
   293                           	callstack 0
   294   0000FA                     	ds	2
   295                           
   296                           	psect	bssBANK1
   297   0001D8                     __pbssBANK1:
   298                           	callstack 0
   299   0001D8                     	ds	40
   300                           
   301                           	psect	bssBANK2
   302   000200                     __pbssBANK2:
   303                           	callstack 0
   304   000200                     	ds	82
   305   000252                     _EUSART4TXbuf:
   306                           	callstack 0
   307   000252                     	ds	60
   308                           
   309                           	psect	cstackBANK1
   310   000100                     __pcstackBANK1:
   311                           	callstack 0
   312   000100                     main@straightTime:
   313                           	callstack 0
   314                           
   315                           ; 82 bytes @ 0x0
   316   000100                     	ds	82
   317   000152                     main@moveSequence:
   318                           	callstack 0
   319                           
   320                           ; 40 bytes @ 0x52
   321   000152                     	ds	40
   322   00017A                     main@wall:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x7A
   326   00017A                     	ds	1
   327   00017B                     main@ambientNew:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x7B
   331   00017B                     	ds	2
   332   00017D                     main@reverseDuration:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x7D
   336   00017D                     	ds	2
   337   00017F                     main@red:
   338                           	callstack 0
   339                           
   340                           ; 6 bytes @ 0x7F
   341   00017F                     	ds	6
   342   000185                     main@green:
   343                           	callstack 0
   344                           
   345                           ; 6 bytes @ 0x85
   346   000185                     	ds	6
   347   00018B                     main@blue:
   348                           	callstack 0
   349                           
   350                           ; 6 bytes @ 0x8B
   351   00018B                     	ds	6
   352   000191                     main@yellow:
   353                           	callstack 0
   354                           
   355                           ; 6 bytes @ 0x91
   356   000191                     	ds	6
   357   000197                     main@pink:
   358                           	callstack 0
   359                           
   360                           ; 6 bytes @ 0x97
   361   000197                     	ds	6
   362   00019D                     main@orange:
   363                           	callstack 0
   364                           
   365                           ; 6 bytes @ 0x9D
   366   00019D                     	ds	6
   367   0001A3                     main@lightblue:
   368                           	callstack 0
   369                           
   370                           ; 6 bytes @ 0xA3
   371   0001A3                     	ds	6
   372   0001A9                     main@white:
   373                           	callstack 0
   374                           
   375                           ; 6 bytes @ 0xA9
   376   0001A9                     	ds	6
   377   0001AF                     main@turnSpeed:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0xAF
   381   0001AF                     	ds	1
   382   0001B0                     main@turnRamp:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0xB0
   386   0001B0                     	ds	1
   387   0001B1                     main@straightSpeed:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0xB1
   391   0001B1                     	ds	1
   392   0001B2                     main@color:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0xB2
   396   0001B2                     	ds	1
   397   0001B3                     main@curMove:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0xB3
   401   0001B3                     	ds	1
   402   0001B4                     main@straightRamp:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0xB4
   406   0001B4                     	ds	1
   407   0001B5                     main@turnDuration:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0xB5
   411   0001B5                     	ds	1
   412   0001B6                     main@HSV:
   413                           	callstack 0
   414                           
   415                           ; 6 bytes @ 0xB6
   416   0001B6                     	ds	6
   417   0001BC                     main@RGBC:
   418                           	callstack 0
   419                           
   420                           ; 8 bytes @ 0xBC
   421   0001BC                     	ds	8
   422   0001C4                     main@motorR:
   423                           	callstack 0
   424                           
   425                           ; 10 bytes @ 0xC4
   426   0001C4                     	ds	10
   427   0001CE                     main@motorL:
   428                           	callstack 0
   429                           
   430                           ; 10 bytes @ 0xCE
   431   0001CE                     	ds	10
   432                           
   433                           	psect	cstackBANK0
   434   000060                     __pcstackBANK0:
   435                           	callstack 0
   436   000060                     ??_color_detect:
   437   000060                     move@mL:
   438                           	callstack 0
   439   000060                     _rgb_2_hsv$3558:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0x0
   443   000060                     	ds	2
   444   000062                     move@mR:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x2
   448   000062                     	ds	2
   449   000064                     move@color:
   450                           	callstack 0
   451   000064                     rgb_2_hsv@cmin:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x4
   455   000064                     	ds	1
   456   000065                     move@moveSequence:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x5
   460   000065                     	ds	1
   461   000066                     _rgb_2_hsv$3556:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x6
   465   000066                     	ds	1
   466   000067                     move@straightTime:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x7
   470   000067                     	ds	1
   471   000068                     _rgb_2_hsv$3557:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x8
   475   000068                     	ds	1
   476   000069                     move@curMove:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x9
   480   000069                     	ds	1
   481   00006A                     move@straightSpeed:
   482                           	callstack 0
   483   00006A                     rgb_2_hsv@r:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0xA
   487   00006A                     	ds	1
   488   00006B                     move@reverseDuration:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0xB
   492   00006B                     	ds	1
   493   00006C                     rgb_2_hsv@cmax:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0xC
   497   00006C                     	ds	1
   498   00006D                     move@straightRamp:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0xD
   502   00006D                     	ds	1
   503   00006E                     move@turnSpeed:
   504                           	callstack 0
   505   00006E                     rgb_2_hsv@diff:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0xE
   509   00006E                     	ds	1
   510   00006F                     move@turnDuration:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0xF
   514   00006F                     	ds	1
   515   000070                     move@turnRamp:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x10
   519   000070                     	ds	2
   520   000072                     rgb_2_hsv@g:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x12
   524   000072                     	ds	2
   525   000074                     rgb_2_hsv@b:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x14
   529   000074                     	ds	2
   530   000076                     color_calibration@RGBC:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x16
   534   000076                     	ds	2
   535   000078                     color_calibration@HSV:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x18
   539   000078                     	ds	2
   540   00007A                     color_calibration@red:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x1A
   544   00007A                     	ds	2
   545   00007C                     color_calibration@green:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x1C
   549   00007C                     	ds	2
   550   00007E                     color_calibration@blue:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x1E
   554   00007E                     	ds	2
   555   000080                     color_calibration@yellow:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x20
   559   000080                     	ds	2
   560   000082                     color_calibration@pink:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x22
   564   000082                     	ds	2
   565   000084                     color_calibration@orange:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x24
   569   000084                     	ds	2
   570   000086                     color_calibration@lightblue:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x26
   574   000086                     	ds	2
   575   000088                     color_calibration@white:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x28
   579   000088                     	ds	2
   580   00008A                     ??_main:
   581                           
   582                           ; 1 bytes @ 0x2A
   583   00008A                     	ds	2
   584   00008C                     main@buf:
   585                           	callstack 0
   586                           
   587                           ; 40 bytes @ 0x2C
   588   00008C                     	ds	40
   589   0000B4                     main@testSequence:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x54
   593   0000B4                     	ds	4
   594                           
   595                           	psect	cstackCOMRAM
   596   000001                     __pcstackCOMRAM:
   597                           	callstack 0
   598   000001                     ??i2_I2C_2_Master_Idle:
   599   000001                     ?i2___lwdiv:
   600                           	callstack 0
   601   000001                     i2___lwdiv@dividend:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x0
   605   000001                     	ds	1
   606   000002                     i2I2C_2_Master_Write@data_byte:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x1
   610   000002                     	ds	1
   611   000003                     i2color_writetoaddr@value:
   612                           	callstack 0
   613   000003                     i2___lwdiv@divisor:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x2
   617   000003                     	ds	1
   618   000004                     i2color_writetoaddr@address:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x3
   622   000004                     	ds	1
   623   000005                     i2___lwdiv@quotient:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x4
   627   000005                     	ds	2
   628   000007                     i2___lwdiv@counter:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x6
   632   000007                     	ds	1
   633   000008                     ??i2_color_clear_init_interrupts:
   634                           
   635                           ; 1 bytes @ 0x7
   636   000008                     	ds	1
   637   000009                     i2color_clear_init_interrupts@high_threshold:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x8
   641   000009                     	ds	2
   642   00000B                     i2color_clear_init_interrupts@low_threshold:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0xA
   646   00000B                     	ds	2
   647   00000D                     ??_LowISR:
   648                           
   649                           ; 1 bytes @ 0xC
   650   00000D                     	ds	3
   651   000010                     ??_I2C_2_Master_Idle:
   652   000010                     ?_get16bitTMR0val:
   653                           	callstack 0
   654   000010                     ?_min:
   655                           	callstack 0
   656   000010                     ?_max:
   657                           	callstack 0
   658   000010                     ?___wmul:
   659                           	callstack 0
   660   000010                     ?___awdiv:
   661                           	callstack 0
   662   000010                     ?___lmul:
   663                           	callstack 0
   664   000010                     white_Light@state:
   665                           	callstack 0
   666   000010                     ADC_getval@tmpval:
   667                           	callstack 0
   668   000010                     max@a:
   669                           	callstack 0
   670   000010                     min@a:
   671                           	callstack 0
   672   000010                     initDCmotorsPWM@PWMperiod:
   673                           	callstack 0
   674   000010                     ___wmul@multiplier:
   675                           	callstack 0
   676   000010                     ___awdiv@dividend:
   677                           	callstack 0
   678   000010                     ___lmul@multiplier:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0xF
   682   000010                     	ds	1
   683   000011                     ??_I2C_2_Master_Read:
   684   000011                     I2C_2_Master_Write@data_byte:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0x10
   688   000011                     	ds	1
   689   000012                     ??_get16bitTMR0val:
   690   000012                     color_writetoaddr@value:
   691                           	callstack 0
   692   000012                     I2C_2_Master_Read@ack:
   693                           	callstack 0
   694   000012                     max@b:
   695                           	callstack 0
   696   000012                     min@b:
   697                           	callstack 0
   698   000012                     ___wmul@multiplicand:
   699                           	callstack 0
   700   000012                     ___awdiv@divisor:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x11
   704   000012                     	ds	1
   705   000013                     color_writetoaddr@address:
   706                           	callstack 0
   707   000013                     I2C_2_Master_Read@tmp:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x12
   711   000013                     	ds	1
   712   000014                     ___awdiv@counter:
   713                           	callstack 0
   714   000014                     color_read@RGBC:
   715                           	callstack 0
   716   000014                     get16bitTMR0val@timer_low:
   717                           	callstack 0
   718   000014                     ___wmul@product:
   719                           	callstack 0
   720   000014                     ___lmul@multiplicand:
   721                           	callstack 0
   722   000014                     color_detect@HSV:
   723                           	callstack 0
   724                           
   725                           ; 6 bytes @ 0x13
   726   000014                     	ds	1
   727   000015                     ___awdiv@sign:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x14
   731   000015                     	ds	1
   732   000016                     ??_color_read:
   733   000016                     ?___lwdiv:
   734                           	callstack 0
   735   000016                     get16bitTMR0val@timer_high:
   736                           	callstack 0
   737   000016                     ___awdiv@quotient:
   738                           	callstack 0
   739   000016                     ___lwdiv@dividend:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x15
   743   000016                     	ds	2
   744   000018                     batteryLevel@batteryVoltage:
   745                           	callstack 0
   746   000018                     get16bitTMR0val@timer_val:
   747                           	callstack 0
   748   000018                     ___lwdiv@divisor:
   749                           	callstack 0
   750   000018                     ___lmul@product:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x17
   754   000018                     	ds	1
   755   000019                     batteryLevel@batteryQuarter:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0x18
   759   000019                     	ds	1
   760   00001A                     ___lwdiv@quotient:
   761                           	callstack 0
   762   00001A                     color_detect@red:
   763                           	callstack 0
   764                           
   765                           ; 6 bytes @ 0x19
   766   00001A                     	ds	2
   767   00001C                     ?___lldiv:
   768                           	callstack 0
   769   00001C                     ?___aldiv:
   770                           	callstack 0
   771   00001C                     ___lwdiv@counter:
   772                           	callstack 0
   773   00001C                     ___lldiv@dividend:
   774                           	callstack 0
   775   00001C                     ___aldiv@dividend:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x1B
   779   00001C                     	ds	1
   780   00001D                     ??_color_clear_init_interrupts:
   781   00001D                     setMotorPWM@m:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x1C
   785   00001D                     	ds	1
   786   00001E                     color_clear_init_interrupts@high_threshold:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x1D
   790   00001E                     	ds	1
   791   00001F                     ??_setMotorPWM:
   792                           
   793                           ; 1 bytes @ 0x1E
   794   00001F                     	ds	1
   795   000020                     color_clear_init_interrupts@low_threshold:
   796                           	callstack 0
   797   000020                     ___lldiv@divisor:
   798                           	callstack 0
   799   000020                     ___aldiv@divisor:
   800                           	callstack 0
   801   000020                     color_detect@green:
   802                           	callstack 0
   803                           
   804                           ; 6 bytes @ 0x1F
   805   000020                     	ds	1
   806   000021                     setMotorPWM@posDuty:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x20
   810   000021                     	ds	1
   811   000022                     ??_color_click_init:
   812   000022                     setMotorPWM@negDuty:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x21
   816   000022                     	ds	1
   817   000023                     stop@mL:
   818                           	callstack 0
   819   000023                     turnLeft@mL:
   820                           	callstack 0
   821   000023                     turnRight@mL:
   822                           	callstack 0
   823   000023                     fullSpeedAhead@mL:
   824                           	callstack 0
   825   000023                     reverseOneSquare@mL:
   826                           	callstack 0
   827   000023                     wallAdjust@mL:
   828                           	callstack 0
   829   000023                     reverseShort@mL:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x22
   833   000023                     	ds	1
   834   000024                     ___aldiv@counter:
   835                           	callstack 0
   836   000024                     ___lldiv@quotient:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x23
   840   000024                     	ds	1
   841   000025                     ___aldiv@sign:
   842                           	callstack 0
   843   000025                     stop@mR:
   844                           	callstack 0
   845   000025                     turnLeft@mR:
   846                           	callstack 0
   847   000025                     turnRight@mR:
   848                           	callstack 0
   849   000025                     fullSpeedAhead@mR:
   850                           	callstack 0
   851   000025                     reverseOneSquare@mR:
   852                           	callstack 0
   853   000025                     wallAdjust@mR:
   854                           	callstack 0
   855   000025                     reverseShort@mR:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x24
   859   000025                     	ds	1
   860   000026                     ___aldiv@quotient:
   861                           	callstack 0
   862   000026                     color_detect@blue:
   863                           	callstack 0
   864                           
   865                           ; 6 bytes @ 0x25
   866   000026                     	ds	1
   867   000027                     stop@straightRamp:
   868                           	callstack 0
   869   000027                     turnLeft@turnSpeed:
   870                           	callstack 0
   871   000027                     turnRight@turnSpeed:
   872                           	callstack 0
   873   000027                     fullSpeedAhead@straightSpeed:
   874                           	callstack 0
   875   000027                     reverseOneSquare@straightSpeed:
   876                           	callstack 0
   877   000027                     wallAdjust@straightSpeed:
   878                           	callstack 0
   879   000027                     reverseShort@straightSpeed:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x26
   883   000027                     	ds	1
   884   000028                     ??_stop:
   885   000028                     turnLeft@turnDuration:
   886                           	callstack 0
   887   000028                     turnRight@turnDuration:
   888                           	callstack 0
   889   000028                     fullSpeedAhead@straightRamp:
   890                           	callstack 0
   891   000028                     wallAdjust@straightRamp:
   892                           	callstack 0
   893   000028                     reverseShort@straightRamp:
   894                           	callstack 0
   895   000028                     ___lldiv@counter:
   896                           	callstack 0
   897   000028                     reverseOneSquare@reverseDuration:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x27
   901   000028                     	ds	1
   902   000029                     ??_fullSpeedAhead:
   903   000029                     ??_wallAdjust:
   904   000029                     ??_reverseShort:
   905   000029                     turnLeft@turnRamp:
   906                           	callstack 0
   907   000029                     turnRight@turnRamp:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x28
   911   000029                     	ds	1
   912   00002A                     ??_turnRight:
   913   00002A                     ??_turnLeft:
   914   00002A                     reverseOneSquare@straightRamp:
   915                           	callstack 0
   916   00002A                     rgb_2_hsv@RGBC:
   917                           	callstack 0
   918                           
   919                           ; 8 bytes @ 0x29
   920   00002A                     	ds	1
   921   00002B                     ??_reverseOneSquare:
   922   00002B                     stop@i:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x2A
   926   00002B                     	ds	1
   927   00002C                     wallAdjust@adjustDuration:
   928                           	callstack 0
   929   00002C                     reverseShort@shortReverseDuration:
   930                           	callstack 0
   931   00002C                     fullSpeedAhead@i:
   932                           	callstack 0
   933   00002C                     color_detect@yellow:
   934                           	callstack 0
   935                           
   936                           ; 6 bytes @ 0x2B
   937   00002C                     	ds	1
   938   00002D                     wallAdjust@wallReverseDuration:
   939                           	callstack 0
   940   00002D                     stop@cur_power:
   941                           	callstack 0
   942   00002D                     turnLeft@i:
   943                           	callstack 0
   944   00002D                     turnRight@i:
   945                           	callstack 0
   946   00002D                     reverseShort@i:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x2C
   950   00002D                     	ds	1
   951   00002E                     wallAdjust@wallSpeed:
   952                           	callstack 0
   953   00002E                     fullSpeedAhead@cur_power:
   954                           	callstack 0
   955   00002E                     reverseOneSquare@i:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x2D
   959   00002E                     	ds	1
   960   00002F                     turnLeft@cur_power:
   961                           	callstack 0
   962   00002F                     turnRight@cur_power:
   963                           	callstack 0
   964   00002F                     wallAdjust@i:
   965                           	callstack 0
   966   00002F                     reverseShort@cur_power:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x2E
   970   00002F                     	ds	1
   971   000030                     reverseOneSquare@cur_power:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x2F
   975   000030                     	ds	1
   976   000031                     wallAdjust@cur_power:
   977                           	callstack 0
   978   000031                     calibration@mL:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x30
   982   000031                     	ds	1
   983   000032                     rgb_2_hsv@HSV:
   984                           	callstack 0
   985   000032                     returnHome@mL:
   986                           	callstack 0
   987   000032                     lostReturnHome@mL:
   988                           	callstack 0
   989   000032                     color_detect@pink:
   990                           	callstack 0
   991                           
   992                           ; 6 bytes @ 0x31
   993   000032                     	ds	1
   994   000033                     calibration@mR:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x32
   998   000033                     	ds	1
   999   000034                     ??_rgb_2_hsv:
  1000   000034                     returnHome@mR:
  1001                           	callstack 0
  1002   000034                     lostReturnHome@mR:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x33
  1006   000034                     	ds	1
  1007   000035                     calibration@turnSpeed:
  1008                           	callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x34
  1011   000035                     	ds	1
  1012   000036                     returnHome@moveSequence:
  1013                           	callstack 0
  1014   000036                     lostReturnHome@moveSequence:
  1015                           	callstack 0
  1016   000036                     calibration@turnDuration:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x35
  1020   000036                     	ds	2
  1021   000038                     calibration@turnRamp:
  1022                           	callstack 0
  1023   000038                     returnHome@straightTime:
  1024                           	callstack 0
  1025   000038                     lostReturnHome@straightTime:
  1026                           	callstack 0
  1027   000038                     color_detect@orange:
  1028                           	callstack 0
  1029                           
  1030                           ; 6 bytes @ 0x37
  1031   000038                     	ds	1
  1032   000039                     ??_calibration:
  1033                           
  1034                           ; 1 bytes @ 0x38
  1035   000039                     	ds	1
  1036   00003A                     returnHome@curMove:
  1037                           	callstack 0
  1038   00003A                     lostReturnHome@curMove:
  1039                           	callstack 0
  1040                           
  1041                           ; 1 bytes @ 0x39
  1042   00003A                     	ds	1
  1043   00003B                     returnHome@straightSpeed:
  1044                           	callstack 0
  1045   00003B                     lostReturnHome@straightSpeed:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x3A
  1049   00003B                     	ds	1
  1050   00003C                     returnHome@reverseDuration:
  1051                           	callstack 0
  1052   00003C                     lostReturnHome@reverseDuration:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x3B
  1056   00003C                     	ds	2
  1057   00003E                     returnHome@straightRamp:
  1058                           	callstack 0
  1059   00003E                     lostReturnHome@straightRamp:
  1060                           	callstack 0
  1061   00003E                     color_detect@lightblue:
  1062                           	callstack 0
  1063                           
  1064                           ; 6 bytes @ 0x3D
  1065   00003E                     	ds	1
  1066   00003F                     returnHome@turnSpeed:
  1067                           	callstack 0
  1068   00003F                     lostReturnHome@turnSpeed:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x3E
  1072   00003F                     	ds	1
  1073   000040                     ??_color_calibration:
  1074   000040                     returnHome@turnDuration:
  1075                           	callstack 0
  1076   000040                     lostReturnHome@turnDuration:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x3F
  1080   000040                     	ds	1
  1081   000041                     returnHome@turnRamp:
  1082                           	callstack 0
  1083   000041                     lostReturnHome@turnRamp:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x40
  1087   000041                     	ds	1
  1088   000042                     ??_lostReturnHome:
  1089   000042                     ??_returnHome:
  1090                           
  1091                           ; 1 bytes @ 0x41
  1092   000042                     	ds	2
  1093   000044                     color_detect@white:
  1094                           	callstack 0
  1095                           
  1096                           ; 6 bytes @ 0x43
  1097   000044                     	ds	2
  1098   000046                     lostReturnHome@i:
  1099                           	callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x45
  1102   000046                     	ds	2
  1103   000048                     returnHome@i:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x47
  1107   000048                     	ds	1
  1108   000049                     ??_move:
  1109                           
  1110                           ; 1 bytes @ 0x48
  1111   000049                     	ds	1
  1112   00004A                     color_detect@color:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x49
  1116   00004A                     	ds	1
  1117                           
  1118 ;;
  1119 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1120 ;;
  1121 ;; *************** function _main *****************
  1122 ;; Defined at:
  1123 ;;		line 28 in file "main.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  straightTime   82    0[BANK1 ] unsigned int [41]
  1128 ;;  moveSequence   40   82[BANK1 ] unsigned char [40]
  1129 ;;  buf            40   44[BANK0 ] unsigned char [40]
  1130 ;;  motorL         10  206[BANK1 ] struct DC_motor
  1131 ;;  motorR         10  196[BANK1 ] struct DC_motor
  1132 ;;  RGBC            8  188[BANK1 ] struct RGBC_val
  1133 ;;  RGBC_n          8    0        struct RGBC_val
  1134 ;;  HSV             6  182[BANK1 ] struct HSV_val
  1135 ;;  white           6  169[BANK1 ] struct HSV_calib
  1136 ;;  lightblue       6  163[BANK1 ] struct HSV_calib
  1137 ;;  orange          6  157[BANK1 ] struct HSV_calib
  1138 ;;  pink            6  151[BANK1 ] struct HSV_calib
  1139 ;;  yellow          6  145[BANK1 ] struct HSV_calib
  1140 ;;  blue            6  139[BANK1 ] struct HSV_calib
  1141 ;;  green           6  133[BANK1 ] struct HSV_calib
  1142 ;;  red             6  127[BANK1 ] struct HSV_calib
  1143 ;;  testSequence    4   84[BANK0 ] unsigned char [4]
  1144 ;;  PWMcycle        2    0        unsigned int 
  1145 ;;  reverseDurat    2  125[BANK1 ] unsigned int 
  1146 ;;  ambientNew      2  123[BANK1 ] unsigned int 
  1147 ;;  turnDuration    1  181[BANK1 ] unsigned char 
  1148 ;;  straightRamp    1  180[BANK1 ] unsigned char 
  1149 ;;  curMove         1  179[BANK1 ] unsigned char 
  1150 ;;  color           1  178[BANK1 ] unsigned char 
  1151 ;;  straightSpee    1  177[BANK1 ] unsigned char 
  1152 ;;  turnRamp        1  176[BANK1 ] unsigned char 
  1153 ;;  turnSpeed       1  175[BANK1 ] unsigned char 
  1154 ;;  wall            1  122[BANK1 ] unsigned char 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1165 ;;      Locals:         0      44     216       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1166 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1167 ;;      Totals:         0      46     216       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1168 ;;Total ram usage:      262 bytes
  1169 ;; Hardware stack levels required when called: 11
  1170 ;; This function calls:
  1171 ;;		_Buggy_init
  1172 ;;		_Interrupts_init
  1173 ;;		_Timer0_init
  1174 ;;		_batteryLevel
  1175 ;;		_calibration
  1176 ;;		_color_calibration
  1177 ;;		_color_clear_init_interrupts
  1178 ;;		_color_click_init
  1179 ;;		_color_detect
  1180 ;;		_color_read
  1181 ;;		_fullSpeedAhead
  1182 ;;		_get16bitTMR0val
  1183 ;;		_initDCmotorsPWM
  1184 ;;		_initUSART4
  1185 ;;		_lostReturnHome
  1186 ;;		_move
  1187 ;;		_resetTimer
  1188 ;;		_rgb_2_hsv
  1189 ;;		_stop
  1190 ;;		_wallAdjust
  1191 ;;		_white_Light
  1192 ;; This function is called by:
  1193 ;;		Startup code after reset
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text0
  1198   002990                     __ptext0:
  1199                           	callstack 0
  1200   002990                     _main:
  1201                           	callstack 20
  1202   002990                     
  1203                           ;main.c: 30:     char buf[40] = {0};
  1204   002990  EE20  F08C         	lfsr	2,main@buf
  1205   002994  0E27               	movlw	39
  1206   002996                     u3581:
  1207   002996  6ADE               	clrf	postinc2,c
  1208   002998  06E8               	decf	wreg,f,c
  1209   00299A  E2FD               	bc	u3581
  1210   00299C                     
  1211                           ;main.c: 33:     unsigned int ambientNew;;main.c: 34:     char wall = 0;
  1212   00299C  0E00               	movlw	0
  1213   00299E  0101               	movlb	1	; () banked
  1214   0029A0  6F7A               	movwf	main@wall& (0+255),b
  1215   0029A2                     
  1216                           ; BSR set to: 1
  1217                           ;main.c: 35:     unsigned char color = 0;
  1218   0029A2  0E00               	movlw	0
  1219   0029A4  6FB2               	movwf	main@color& (0+255),b
  1220   0029A6                     
  1221                           ; BSR set to: 1
  1222                           ;main.c: 36:     unsigned char moveSequence[40] = {0};
  1223   0029A6  EE21  F052         	lfsr	2,main@moveSequence
  1224   0029AA  0E27               	movlw	39
  1225   0029AC                     u3591:
  1226   0029AC  6ADE               	clrf	postinc2,c
  1227   0029AE  06E8               	decf	wreg,f,c
  1228   0029B0  E2FD               	bc	u3591
  1229   0029B2                     
  1230                           ; BSR set to: 1
  1231                           ;main.c: 37:     unsigned int straightTime[41] = {0};
  1232   0029B2  EE21  F000         	lfsr	2,main@straightTime
  1233   0029B6  0E51               	movlw	81
  1234   0029B8                     u3601:
  1235   0029B8  6ADE               	clrf	postinc2,c
  1236   0029BA  06E8               	decf	wreg,f,c
  1237   0029BC  E2FD               	bc	u3601
  1238   0029BE                     
  1239                           ; BSR set to: 1
  1240                           ;main.c: 38:     char curMove = 0;
  1241   0029BE  0E00               	movlw	0
  1242   0029C0  6FB3               	movwf	main@curMove& (0+255),b
  1243   0029C2                     
  1244                           ; BSR set to: 1
  1245                           ;main.c: 40:     unsigned char testSequence[4] = {4,4,1,1,8};
  1246   0029C2  C0F6  F0B4         	movff	main@F14662,main@testSequence
  1247   0029C6  C0F7  F0B5         	movff	main@F14662+1,main@testSequence+1
  1248   0029CA  C0F8  F0B6         	movff	main@F14662+2,main@testSequence+2
  1249   0029CE  C0F9  F0B7         	movff	main@F14662+3,main@testSequence+3
  1250   0029D2                     
  1251                           ; BSR set to: 1
  1252                           ;main.c: 43:     struct RGBC_val RGBC, RGBC_n;;main.c: 44:     struct HSV_val HSV;;main.
      +                          c: 45:     struct DC_motor motorL, motorR;;main.c: 48:     Buggy_init();
  1253   0029D2  EC73  F028         	call	_Buggy_init	;wreg free
  1254   0029D6                     
  1255                           ;main.c: 49:     color_click_init();
  1256   0029D6  EC57  F028         	call	_color_click_init	;wreg free
  1257   0029DA                     
  1258                           ;main.c: 50:     initUSART4();
  1259   0029DA  EC71  F029         	call	_initUSART4	;wreg free
  1260   0029DE                     
  1261                           ;main.c: 51:     initDCmotorsPWM(PWMcycle);
  1262   0029DE  0E00               	movlw	0
  1263   0029E0  6E11               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1264   0029E2  0EC7               	movlw	199
  1265   0029E4  6E10               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1266   0029E6  ECF3  F026         	call	_initDCmotorsPWM	;wreg free
  1267   0029EA                     
  1268                           ;main.c: 53:     motorL.power=0;
  1269   0029EA  0E00               	movlw	0
  1270   0029EC  0101               	movlb	1	; () banked
  1271   0029EE  6FCE               	movwf	main@motorL& (0+255),b
  1272   0029F0                     
  1273                           ; BSR set to: 1
  1274                           ;main.c: 54:     motorL.direction=1;
  1275   0029F0  0E01               	movlw	1
  1276   0029F2  6FCF               	movwf	(main@motorL+1)& (0+255),b
  1277   0029F4                     
  1278                           ; BSR set to: 1
  1279                           ;main.c: 55:     motorL.brakemode=1;
  1280   0029F4  0E01               	movlw	1
  1281   0029F6  6FD0               	movwf	(main@motorL+2)& (0+255),b
  1282   0029F8                     
  1283                           ; BSR set to: 1
  1284                           ;main.c: 56:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1285   0029F8  0EAA               	movlw	170
  1286   0029FA  6FD3               	movwf	(main@motorL+5)& (0+255),b
  1287   0029FC  0E0F               	movlw	15
  1288   0029FE  6FD4               	movwf	(main@motorL+6)& (0+255),b
  1289   002A00                     
  1290                           ; BSR set to: 1
  1291                           ;main.c: 57:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1292   002A00  0EA6               	movlw	166
  1293   002A02  6FD5               	movwf	(main@motorL+7)& (0+255),b
  1294   002A04  0E0F               	movlw	15
  1295   002A06  6FD6               	movwf	(main@motorL+8)& (0+255),b
  1296   002A08                     
  1297                           ; BSR set to: 1
  1298                           ;main.c: 58:     motorL.PWMperiod=PWMcycle;
  1299   002A08  0E00               	movlw	0
  1300   002A0A  6FD2               	movwf	(main@motorL+4)& (0+255),b
  1301   002A0C  0EC7               	movlw	199
  1302   002A0E  6FD1               	movwf	(main@motorL+3)& (0+255),b
  1303   002A10                     
  1304                           ; BSR set to: 1
  1305                           ;main.c: 59:     motorL.compensation=1;
  1306   002A10  0E01               	movlw	1
  1307   002A12  6FD7               	movwf	(main@motorL+9)& (0+255),b
  1308   002A14                     
  1309                           ; BSR set to: 1
  1310                           ;main.c: 61:     motorR.power=0;
  1311   002A14  0E00               	movlw	0
  1312   002A16  6FC4               	movwf	main@motorR& (0+255),b
  1313   002A18                     
  1314                           ; BSR set to: 1
  1315                           ;main.c: 62:     motorR.direction=1;
  1316   002A18  0E01               	movlw	1
  1317   002A1A  6FC5               	movwf	(main@motorR+1)& (0+255),b
  1318   002A1C                     
  1319                           ; BSR set to: 1
  1320                           ;main.c: 63:     motorR.brakemode=1;
  1321   002A1C  0E01               	movlw	1
  1322   002A1E  6FC6               	movwf	(main@motorR+2)& (0+255),b
  1323   002A20                     
  1324                           ; BSR set to: 1
  1325                           ;main.c: 64:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1326   002A20  0E25               	movlw	37
  1327   002A22  6FC9               	movwf	(main@motorR+5)& (0+255),b
  1328   002A24  0E0F               	movlw	15
  1329   002A26  6FCA               	movwf	(main@motorR+6)& (0+255),b
  1330   002A28                     
  1331                           ; BSR set to: 1
  1332                           ;main.c: 65:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1333   002A28  0E21               	movlw	33
  1334   002A2A  6FCB               	movwf	(main@motorR+7)& (0+255),b
  1335   002A2C  0E0F               	movlw	15
  1336   002A2E  6FCC               	movwf	(main@motorR+8)& (0+255),b
  1337   002A30                     
  1338                           ; BSR set to: 1
  1339                           ;main.c: 66:     motorR.PWMperiod=PWMcycle;
  1340   002A30  0E00               	movlw	0
  1341   002A32  6FC8               	movwf	(main@motorR+4)& (0+255),b
  1342   002A34  0EC7               	movlw	199
  1343   002A36  6FC7               	movwf	(main@motorR+3)& (0+255),b
  1344   002A38                     
  1345                           ; BSR set to: 1
  1346                           ;main.c: 67:     motorR.compensation=0;
  1347   002A38  0E00               	movlw	0
  1348   002A3A  6FCD               	movwf	(main@motorR+9)& (0+255),b
  1349   002A3C                     
  1350                           ; BSR set to: 1
  1351                           ;main.c: 70:     char straightSpeed=20;
  1352   002A3C  0E14               	movlw	20
  1353   002A3E  6FB1               	movwf	main@straightSpeed& (0+255),b
  1354   002A40                     
  1355                           ; BSR set to: 1
  1356                           ;main.c: 71:     unsigned char straightRamp=2;
  1357   002A40  0E02               	movlw	2
  1358   002A42  6FB4               	movwf	main@straightRamp& (0+255),b
  1359   002A44                     
  1360                           ; BSR set to: 1
  1361                           ;main.c: 73:     unsigned int reverseDuration=800;
  1362   002A44  0E03               	movlw	3
  1363   002A46  6F7E               	movwf	(main@reverseDuration+1)& (0+255),b
  1364   002A48  0E20               	movlw	32
  1365   002A4A  6F7D               	movwf	main@reverseDuration& (0+255),b
  1366   002A4C                     
  1367                           ; BSR set to: 1
  1368                           ;main.c: 75:     char turnSpeed=40;
  1369   002A4C  0E28               	movlw	40
  1370   002A4E  6FAF               	movwf	main@turnSpeed& (0+255),b
  1371   002A50                     
  1372                           ; BSR set to: 1
  1373                           ;main.c: 76:     unsigned char turnDuration=10;
  1374   002A50  0E0A               	movlw	10
  1375   002A52  6FB5               	movwf	main@turnDuration& (0+255),b
  1376   002A54                     
  1377                           ; BSR set to: 1
  1378                           ;main.c: 77:     unsigned char turnRamp=1;
  1379   002A54  0E01               	movlw	1
  1380   002A56  6FB0               	movwf	main@turnRamp& (0+255),b
  1381   002A58                     
  1382                           ; BSR set to: 1
  1383                           ;main.c: 80:     batteryLevel();
  1384   002A58  EC0F  F028         	call	_batteryLevel	;wreg free
  1385   002A5C                     l91:
  1386   002A5C  B48E               	btfsc	142,2,c	;volatile
  1387   002A5E  EF33  F015         	goto	u3611
  1388   002A62  EF35  F015         	goto	u3610
  1389   002A66                     u3611:
  1390   002A66  EF2E  F015         	goto	l91
  1391   002A6A                     u3610:
  1392   002A6A                     
  1393                           ;main.c: 93:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1394   002A6A  9680               	bcf	128,3,c	;volatile
  1395   002A6C  9E7C               	bcf	124,7,c	;volatile
  1396                           
  1397                           ;main.c: 96:     LATHbits.LATH1=LATDbits.LATD3=1;
  1398   002A6E  867C               	bsf	124,3,c	;volatile
  1399   002A70  8280               	bsf	128,1,c	;volatile
  1400   002A72                     
  1401                           ;main.c: 97:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1402   002A72  0E29               	movlw	41
  1403   002A74  0100               	movlb	0	; () banked
  1404   002A76  6F8B               	movwf	(??_main+1)& (0+255),b
  1405   002A78  0E96               	movlw	150
  1406   002A7A  6F8A               	movwf	??_main& (0+255),b
  1407   002A7C  0E7F               	movlw	127
  1408   002A7E                     u3787:
  1409   002A7E  2EE8               	decfsz	wreg,f,c
  1410   002A80  D7FE               	bra	u3787
  1411   002A82  2F8A               	decfsz	??_main& (0+255),f,b
  1412   002A84  D7FC               	bra	u3787
  1413   002A86  2F8B               	decfsz	(??_main+1)& (0+255),f,b
  1414   002A88  D7FA               	bra	u3787
  1415   002A8A                     
  1416                           ;main.c: 100:     struct HSV_calib red, green, blue, yellow, pink, orange, lightblue, wh
      +                          ite;;main.c: 101:     color_calibration(&RGBC, &HSV, &red, &green, &blue, &yellow, &pink
      +                          , &orange, &lightblue, &white);
  1417   002A8A  0EBC               	movlw	low main@RGBC
  1418   002A8C  0100               	movlb	0	; () banked
  1419   002A8E  6F76               	movwf	color_calibration@RGBC& (0+255),b
  1420   002A90  0E01               	movlw	high main@RGBC
  1421   002A92  6F77               	movwf	(color_calibration@RGBC+1)& (0+255),b
  1422   002A94  0EB6               	movlw	low main@HSV
  1423   002A96  6F78               	movwf	color_calibration@HSV& (0+255),b
  1424   002A98  0E01               	movlw	high main@HSV
  1425   002A9A  6F79               	movwf	(color_calibration@HSV+1)& (0+255),b
  1426   002A9C  0E7F               	movlw	low main@red
  1427   002A9E  6F7A               	movwf	color_calibration@red& (0+255),b
  1428   002AA0  0E01               	movlw	high main@red
  1429   002AA2  6F7B               	movwf	(color_calibration@red+1)& (0+255),b
  1430   002AA4  0E85               	movlw	low main@green
  1431   002AA6  6F7C               	movwf	color_calibration@green& (0+255),b
  1432   002AA8  0E01               	movlw	high main@green
  1433   002AAA  6F7D               	movwf	(color_calibration@green+1)& (0+255),b
  1434   002AAC  0E8B               	movlw	low main@blue
  1435   002AAE  6F7E               	movwf	color_calibration@blue& (0+255),b
  1436   002AB0  0E01               	movlw	high main@blue
  1437   002AB2  6F7F               	movwf	(color_calibration@blue+1)& (0+255),b
  1438   002AB4  0E91               	movlw	low main@yellow
  1439   002AB6  6F80               	movwf	color_calibration@yellow& (0+255),b
  1440   002AB8  0E01               	movlw	high main@yellow
  1441   002ABA  6F81               	movwf	(color_calibration@yellow+1)& (0+255),b
  1442   002ABC  0E97               	movlw	low main@pink
  1443   002ABE  6F82               	movwf	color_calibration@pink& (0+255),b
  1444   002AC0  0E01               	movlw	high main@pink
  1445   002AC2  6F83               	movwf	(color_calibration@pink+1)& (0+255),b
  1446   002AC4  0E9D               	movlw	low main@orange
  1447   002AC6  6F84               	movwf	color_calibration@orange& (0+255),b
  1448   002AC8  0E01               	movlw	high main@orange
  1449   002ACA  6F85               	movwf	(color_calibration@orange+1)& (0+255),b
  1450   002ACC  0EA3               	movlw	low main@lightblue
  1451   002ACE  6F86               	movwf	color_calibration@lightblue& (0+255),b
  1452   002AD0  0E01               	movlw	high main@lightblue
  1453   002AD2  6F87               	movwf	(color_calibration@lightblue+1)& (0+255),b
  1454   002AD4  0EA9               	movlw	low main@white
  1455   002AD6  6F88               	movwf	color_calibration@white& (0+255),b
  1456   002AD8  0E01               	movlw	high main@white
  1457   002ADA  6F89               	movwf	(color_calibration@white+1)& (0+255),b
  1458   002ADC  ECEA  F011         	call	_color_calibration	;wreg free
  1459   002AE0                     
  1460                           ;main.c: 104:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1461   002AE0  0ECE               	movlw	low main@motorL
  1462   002AE2  6E31               	movwf	calibration@mL^0,c
  1463   002AE4  0E01               	movlw	high main@motorL
  1464   002AE6  6E32               	movwf	(calibration@mL+1)^0,c
  1465   002AE8  0EC4               	movlw	low main@motorR
  1466   002AEA  6E33               	movwf	calibration@mR^0,c
  1467   002AEC  0E01               	movlw	high main@motorR
  1468   002AEE  6E34               	movwf	(calibration@mR+1)^0,c
  1469   002AF0  0E28               	movlw	40
  1470   002AF2  6E35               	movwf	calibration@turnSpeed^0,c
  1471   002AF4  0EB5               	movlw	low main@turnDuration
  1472   002AF6  6E36               	movwf	calibration@turnDuration^0,c
  1473   002AF8  0E01               	movlw	high main@turnDuration
  1474   002AFA  6E37               	movwf	(calibration@turnDuration+1)^0,c
  1475   002AFC  0E01               	movlw	1
  1476   002AFE  6E38               	movwf	calibration@turnRamp^0,c
  1477   002B00  EC61  F01D         	call	_calibration	;wreg free
  1478   002B04                     
  1479                           ;main.c: 114:     white_Light(1);
  1480   002B04  0E01               	movlw	1
  1481   002B06  EC1E  F029         	call	_white_Light
  1482   002B0A                     
  1483                           ;main.c: 115:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1484   002B0A  0E52               	movlw	82
  1485   002B0C  0100               	movlb	0	; () banked
  1486   002B0E  6F8B               	movwf	(??_main+1)& (0+255),b
  1487   002B10  0E2B               	movlw	43
  1488   002B12  6F8A               	movwf	??_main& (0+255),b
  1489   002B14  0E00               	movlw	0
  1490   002B16                     u3797:
  1491   002B16  2EE8               	decfsz	wreg,f,c
  1492   002B18  D7FE               	bra	u3797
  1493   002B1A  2F8A               	decfsz	??_main& (0+255),f,b
  1494   002B1C  D7FC               	bra	u3797
  1495   002B1E  2F8B               	decfsz	(??_main+1)& (0+255),f,b
  1496   002B20  D7FA               	bra	u3797
  1497   002B22  0000               	nop	
  1498   002B24                     
  1499                           ;main.c: 118:     Timer0_init();
  1500   002B24  EC51  F029         	call	_Timer0_init	;wreg free
  1501   002B28                     
  1502                           ;main.c: 119:     resetTimer();
  1503   002B28  ECAE  F029         	call	_resetTimer	;wreg free
  1504   002B2C                     
  1505                           ;main.c: 120:     Interrupts_init();
  1506   002B2C  EC99  F029         	call	_Interrupts_init	;wreg free
  1507   002B30                     
  1508                           ;main.c: 123:     color_read(&RGBC);
  1509   002B30  0EBC               	movlw	low main@RGBC
  1510   002B32  6E14               	movwf	color_read@RGBC^0,c
  1511   002B34  0E01               	movlw	high main@RGBC
  1512   002B36  6E15               	movwf	(color_read@RGBC+1)^0,c
  1513   002B38  ECA6  F01F         	call	_color_read	;wreg free
  1514   002B3C                     
  1515                           ;main.c: 124:     ambient=RGBC.C;
  1516   002B3C  C1C2  F0FA         	movff	main@RGBC+6,_ambient
  1517   002B40  C1C3  F0FB         	movff	main@RGBC+7,_ambient+1
  1518   002B44                     
  1519                           ;main.c: 125:     color_clear_init_interrupts();
  1520   002B44  ECFB  F025         	call	_color_clear_init_interrupts	;wreg free
  1521   002B48                     
  1522                           ;main.c: 126:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1523   002B48  0ED0               	movlw	208
  1524   002B4A  0100               	movlb	0	; () banked
  1525   002B4C  6F8A               	movwf	??_main& (0+255),b
  1526   002B4E  0EC9               	movlw	201
  1527   002B50                     u3807:
  1528   002B50  2EE8               	decfsz	wreg,f,c
  1529   002B52  D7FE               	bra	u3807
  1530   002B54  2F8A               	decfsz	??_main& (0+255),f,b
  1531   002B56  D7FC               	bra	u3807
  1532   002B58  D000               	nop2	
  1533   002B5A                     
  1534                           ;main.c: 129:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1535   002B5A  0ECE               	movlw	low main@motorL
  1536   002B5C  6E23               	movwf	fullSpeedAhead@mL^0,c
  1537   002B5E  0E01               	movlw	high main@motorL
  1538   002B60  6E24               	movwf	(fullSpeedAhead@mL+1)^0,c
  1539   002B62  0EC4               	movlw	low main@motorR
  1540   002B64  6E25               	movwf	fullSpeedAhead@mR^0,c
  1541   002B66  0E01               	movlw	high main@motorR
  1542   002B68  6E26               	movwf	(fullSpeedAhead@mR+1)^0,c
  1543   002B6A  0E14               	movlw	20
  1544   002B6C  6E27               	movwf	fullSpeedAhead@straightSpeed^0,c
  1545   002B6E  0E02               	movlw	2
  1546   002B70  6E28               	movwf	fullSpeedAhead@straightRamp^0,c
  1547   002B72  EC26  F025         	call	_fullSpeedAhead	;wreg free
  1548   002B76                     
  1549                           ;main.c: 130:     resetTimer();
  1550   002B76  ECAE  F029         	call	_resetTimer	;wreg free
  1551   002B7A                     
  1552                           ;main.c: 133:     brightnessChange=0;
  1553   002B7A  0E00               	movlw	0
  1554   002B7C  0100               	movlb	0	; () banked
  1555   002B7E  6FF5               	movwf	_brightnessChange& (0+255),b
  1556   002B80                     
  1557                           ; BSR set to: 0
  1558                           ;main.c: 134:     lost=0;
  1559   002B80  0E00               	movlw	0
  1560   002B82  6FF4               	movwf	_lost& (0+255),b
  1561   002B84                     l4665:
  1562                           
  1563                           ;main.c: 137:         if (brightnessChange == 1) {
  1564   002B84  0100               	movlb	0	; () banked
  1565   002B86  05F5               	decf	_brightnessChange& (0+255),w,b
  1566   002B88  A4D8               	btfss	status,2,c
  1567   002B8A  EFC9  F015         	goto	u3621
  1568   002B8E  EFCB  F015         	goto	u3620
  1569   002B92                     u3621:
  1570   002B92  EFFE  F015         	goto	l4683
  1571   002B96                     u3620:
  1572   002B96                     
  1573                           ; BSR set to: 0
  1574                           ;main.c: 140:             color_read(&RGBC);
  1575   002B96  0EBC               	movlw	low main@RGBC
  1576   002B98  6E14               	movwf	color_read@RGBC^0,c
  1577   002B9A  0E01               	movlw	high main@RGBC
  1578   002B9C  6E15               	movwf	(color_read@RGBC+1)^0,c
  1579   002B9E  ECA6  F01F         	call	_color_read	;wreg free
  1580   002BA2                     
  1581                           ;main.c: 141:             ambientNew=RGBC.C;
  1582   002BA2  C1C2  F17B         	movff	main@RGBC+6,main@ambientNew
  1583   002BA6  C1C3  F17C         	movff	main@RGBC+7,main@ambientNew+1
  1584   002BAA                     
  1585                           ;main.c: 143:             if (ambientNew <= ambient) {
  1586   002BAA  0101               	movlb	1	; () banked
  1587   002BAC  517B               	movf	main@ambientNew& (0+255),w,b
  1588   002BAE  0100               	movlb	0	; () banked
  1589   002BB0  5DFA               	subwf	_ambient& (0+255),w,b
  1590   002BB2  0101               	movlb	1	; () banked
  1591   002BB4  517C               	movf	(main@ambientNew+1)& (0+255),w,b
  1592   002BB6  0100               	movlb	0	; () banked
  1593   002BB8  59FB               	subwfb	(_ambient+1)& (0+255),w,b
  1594   002BBA  A0D8               	btfss	status,0,c
  1595   002BBC  EFE2  F015         	goto	u3631
  1596   002BC0  EFE4  F015         	goto	u3630
  1597   002BC4                     u3631:
  1598   002BC4  EFF8  F015         	goto	l4681
  1599   002BC8                     u3630:
  1600   002BC8                     
  1601                           ; BSR set to: 0
  1602                           ;main.c: 144:                 ambient = ambientNew;
  1603   002BC8  C17B  F0FA         	movff	main@ambientNew,_ambient
  1604   002BCC  C17C  F0FB         	movff	main@ambientNew+1,_ambient+1
  1605   002BD0                     
  1606                           ; BSR set to: 0
  1607                           ;main.c: 145:                 color_clear_init_interrupts();
  1608   002BD0  ECFB  F025         	call	_color_clear_init_interrupts	;wreg free
  1609   002BD4                     
  1610                           ;main.c: 146:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  1611   002BD4  0ED0               	movlw	208
  1612   002BD6  0100               	movlb	0	; () banked
  1613   002BD8  6F8A               	movwf	??_main& (0+255),b
  1614   002BDA  0EC9               	movlw	201
  1615   002BDC                     u3817:
  1616   002BDC  2EE8               	decfsz	wreg,f,c
  1617   002BDE  D7FE               	bra	u3817
  1618   002BE0  2F8A               	decfsz	??_main& (0+255),f,b
  1619   002BE2  D7FC               	bra	u3817
  1620   002BE4  D000               	nop2	
  1621   002BE6                     
  1622                           ;main.c: 147:                 brightnessChange = 0;
  1623   002BE6  0E00               	movlw	0
  1624   002BE8  0100               	movlb	0	; () banked
  1625   002BEA  6FF5               	movwf	_brightnessChange& (0+255),b
  1626                           
  1627                           ;main.c: 148:             }
  1628   002BEC  EFFE  F015         	goto	l4683
  1629   002BF0                     l4681:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;main.c: 151:                 wall = 1;
  1633   002BF0  0E01               	movlw	1
  1634   002BF2  0101               	movlb	1	; () banked
  1635   002BF4  6F7A               	movwf	main@wall& (0+255),b
  1636                           
  1637                           ;main.c: 152:                 brightnessChange = 0;
  1638   002BF6  0E00               	movlw	0
  1639   002BF8  0100               	movlb	0	; () banked
  1640   002BFA  6FF5               	movwf	_brightnessChange& (0+255),b
  1641   002BFC                     l4683:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 156:         if (wall == 1) {
  1645   002BFC  0101               	movlb	1	; () banked
  1646   002BFE  057A               	decf	main@wall& (0+255),w,b
  1647   002C00  A4D8               	btfss	status,2,c
  1648   002C02  EF05  F016         	goto	u3641
  1649   002C06  EF07  F016         	goto	u3640
  1650   002C0A                     u3641:
  1651   002C0A  EFE1  F016         	goto	l4715
  1652   002C0E                     u3640:
  1653   002C0E                     
  1654                           ; BSR set to: 1
  1655                           ;main.c: 158:             PIE0bits.INT0IE=0;
  1656   002C0E  010E               	movlb	14	; () banked
  1657   002C10  9129               	bcf	41,0,b	;volatile
  1658   002C12                     
  1659                           ; BSR set to: 14
  1660                           ;main.c: 159:             straightTime[curMove] = get16bitTMR0val();
  1661   002C12  ECCF  F028         	call	_get16bitTMR0val	;wreg free
  1662   002C16  0101               	movlb	1	; () banked
  1663   002C18  51B3               	movf	main@curMove& (0+255),w,b
  1664   002C1A  0D02               	mullw	2
  1665   002C1C  0E00               	movlw	low main@straightTime
  1666   002C1E  24F3               	addwf	243,w,c
  1667   002C20  6ED9               	movwf	fsr2l,c
  1668   002C22  0E01               	movlw	high main@straightTime
  1669   002C24  20F4               	addwfc	prodh,w,c
  1670   002C26  6EDA               	movwf	fsr2h,c
  1671   002C28  C010  FFDE         	movff	?_get16bitTMR0val,postinc2
  1672   002C2C  C011  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1673                           
  1674                           ;main.c: 162:             stop(&motorL, &motorR, straightRamp);
  1675   002C30  0ECE               	movlw	low main@motorL
  1676   002C32  6E23               	movwf	stop@mL^0,c
  1677   002C34  0E01               	movlw	high main@motorL
  1678   002C36  6E24               	movwf	(stop@mL+1)^0,c
  1679   002C38  0EC4               	movlw	low main@motorR
  1680   002C3A  6E25               	movwf	stop@mR^0,c
  1681   002C3C  0E01               	movlw	high main@motorR
  1682   002C3E  6E26               	movwf	(stop@mR+1)^0,c
  1683   002C40  C1B4  F027         	movff	main@straightRamp,stop@straightRamp
  1684   002C44  ECA2  F024         	call	_stop	;wreg free
  1685                           
  1686                           ;main.c: 163:             wallAdjust(&motorL, &motorR, straightSpeed, straightRamp);
  1687   002C48  0ECE               	movlw	low main@motorL
  1688   002C4A  6E23               	movwf	wallAdjust@mL^0,c
  1689   002C4C  0E01               	movlw	high main@motorL
  1690   002C4E  6E24               	movwf	(wallAdjust@mL+1)^0,c
  1691   002C50  0EC4               	movlw	low main@motorR
  1692   002C52  6E25               	movwf	wallAdjust@mR^0,c
  1693   002C54  0E01               	movlw	high main@motorR
  1694   002C56  6E26               	movwf	(wallAdjust@mR+1)^0,c
  1695   002C58  C1B1  F027         	movff	main@straightSpeed,wallAdjust@straightSpeed
  1696   002C5C  C1B4  F028         	movff	main@straightRamp,wallAdjust@straightRamp
  1697   002C60  ECA4  F019         	call	_wallAdjust	;wreg free
  1698   002C64                     
  1699                           ;main.c: 164:             color_read(&RGBC);
  1700   002C64  0EBC               	movlw	low main@RGBC
  1701   002C66  6E14               	movwf	color_read@RGBC^0,c
  1702   002C68  0E01               	movlw	high main@RGBC
  1703   002C6A  6E15               	movwf	(color_read@RGBC+1)^0,c
  1704   002C6C  ECA6  F01F         	call	_color_read	;wreg free
  1705   002C70                     
  1706                           ;main.c: 166:             rgb_2_hsv(RGBC, &HSV);
  1707   002C70  EE21  F0BC         	lfsr	2,main@RGBC
  1708   002C74  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  1709   002C78  0E07               	movlw	7
  1710   002C7A                     u3651:
  1711   002C7A  CFDB FFEB          	movff	plusw2,plusw0
  1712   002C7E  06E8               	decf	wreg,f,c
  1713   002C80  E2FC               	bc	u3651
  1714   002C82  0EB6               	movlw	low main@HSV
  1715   002C84  6E32               	movwf	rgb_2_hsv@HSV^0,c
  1716   002C86  0E01               	movlw	high main@HSV
  1717   002C88  6E33               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1718   002C8A  EC36  F017         	call	_rgb_2_hsv	;wreg free
  1719   002C8E                     
  1720                           ;main.c: 167:             color = color_detect(HSV, red, green, blue, yellow, pink, oran
      +                          ge, lightblue, white);
  1721   002C8E  EE21  F0B6         	lfsr	2,main@HSV
  1722   002C92  EE00  F014         	lfsr	0,color_detect@HSV
  1723   002C96  0E05               	movlw	5
  1724   002C98                     u3661:
  1725   002C98  CFDB FFEB          	movff	plusw2,plusw0
  1726   002C9C  06E8               	decf	wreg,f,c
  1727   002C9E  E2FC               	bc	u3661
  1728   002CA0  EE21  F07F         	lfsr	2,main@red
  1729   002CA4  EE00  F01A         	lfsr	0,color_detect@red
  1730   002CA8  0E05               	movlw	5
  1731   002CAA                     u3671:
  1732   002CAA  CFDB FFEB          	movff	plusw2,plusw0
  1733   002CAE  06E8               	decf	wreg,f,c
  1734   002CB0  E2FC               	bc	u3671
  1735   002CB2  EE21  F085         	lfsr	2,main@green
  1736   002CB6  EE00  F020         	lfsr	0,color_detect@green
  1737   002CBA  0E05               	movlw	5
  1738   002CBC                     u3681:
  1739   002CBC  CFDB FFEB          	movff	plusw2,plusw0
  1740   002CC0  06E8               	decf	wreg,f,c
  1741   002CC2  E2FC               	bc	u3681
  1742   002CC4  EE21  F08B         	lfsr	2,main@blue
  1743   002CC8  EE00  F026         	lfsr	0,color_detect@blue
  1744   002CCC  0E05               	movlw	5
  1745   002CCE                     u3691:
  1746   002CCE  CFDB FFEB          	movff	plusw2,plusw0
  1747   002CD2  06E8               	decf	wreg,f,c
  1748   002CD4  E2FC               	bc	u3691
  1749   002CD6  EE21  F091         	lfsr	2,main@yellow
  1750   002CDA  EE00  F02C         	lfsr	0,color_detect@yellow
  1751   002CDE  0E05               	movlw	5
  1752   002CE0                     u3701:
  1753   002CE0  CFDB FFEB          	movff	plusw2,plusw0
  1754   002CE4  06E8               	decf	wreg,f,c
  1755   002CE6  E2FC               	bc	u3701
  1756   002CE8  EE21  F097         	lfsr	2,main@pink
  1757   002CEC  EE00  F032         	lfsr	0,color_detect@pink
  1758   002CF0  0E05               	movlw	5
  1759   002CF2                     u3711:
  1760   002CF2  CFDB FFEB          	movff	plusw2,plusw0
  1761   002CF6  06E8               	decf	wreg,f,c
  1762   002CF8  E2FC               	bc	u3711
  1763   002CFA  EE21  F09D         	lfsr	2,main@orange
  1764   002CFE  EE00  F038         	lfsr	0,color_detect@orange
  1765   002D02  0E05               	movlw	5
  1766   002D04                     u3721:
  1767   002D04  CFDB FFEB          	movff	plusw2,plusw0
  1768   002D08  06E8               	decf	wreg,f,c
  1769   002D0A  E2FC               	bc	u3721
  1770   002D0C  EE21  F0A3         	lfsr	2,main@lightblue
  1771   002D10  EE00  F03E         	lfsr	0,color_detect@lightblue
  1772   002D14  0E05               	movlw	5
  1773   002D16                     u3731:
  1774   002D16  CFDB FFEB          	movff	plusw2,plusw0
  1775   002D1A  06E8               	decf	wreg,f,c
  1776   002D1C  E2FC               	bc	u3731
  1777   002D1E  EE21  F0A9         	lfsr	2,main@white
  1778   002D22  EE00  F044         	lfsr	0,color_detect@white
  1779   002D26  0E05               	movlw	5
  1780   002D28                     u3741:
  1781   002D28  CFDB FFEB          	movff	plusw2,plusw0
  1782   002D2C  06E8               	decf	wreg,f,c
  1783   002D2E  E2FC               	bc	u3741
  1784   002D30  EC8D  F01B         	call	_color_detect	;wreg free
  1785   002D34  0101               	movlb	1	; () banked
  1786   002D36  6FB2               	movwf	main@color& (0+255),b
  1787   002D38                     
  1788                           ; BSR set to: 1
  1789                           ;main.c: 169:             moveSequence[curMove] = color;
  1790   002D38  0E52               	movlw	low main@moveSequence
  1791   002D3A  25B3               	addwf	main@curMove& (0+255),w,b
  1792   002D3C  6ED9               	movwf	fsr2l,c
  1793   002D3E  6ADA               	clrf	fsr2h,c
  1794   002D40  0E01               	movlw	high main@moveSequence
  1795   002D42  22DA               	addwfc	fsr2h,f,c
  1796   002D44  C1B2  FFDF         	movff	main@color,indf2
  1797   002D48                     
  1798                           ; BSR set to: 1
  1799                           ;main.c: 172:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1800   002D48  0ECE               	movlw	low main@motorL
  1801   002D4A  0100               	movlb	0	; () banked
  1802   002D4C  6F60               	movwf	move@mL& (0+255),b
  1803   002D4E  0E01               	movlw	high main@motorL
  1804   002D50  6F61               	movwf	(move@mL+1)& (0+255),b
  1805   002D52  0EC4               	movlw	low main@motorR
  1806   002D54  6F62               	movwf	move@mR& (0+255),b
  1807   002D56  0E01               	movlw	high main@motorR
  1808   002D58  6F63               	movwf	(move@mR+1)& (0+255),b
  1809   002D5A  C1B2  F064         	movff	main@color,move@color
  1810   002D5E  0E52               	movlw	low main@moveSequence
  1811   002D60  6F65               	movwf	move@moveSequence& (0+255),b
  1812   002D62  0E01               	movlw	high main@moveSequence
  1813   002D64  6F66               	movwf	(move@moveSequence+1)& (0+255),b
  1814   002D66  0E00               	movlw	low main@straightTime
  1815   002D68  6F67               	movwf	move@straightTime& (0+255),b
  1816   002D6A  0E01               	movlw	high main@straightTime
  1817   002D6C  6F68               	movwf	(move@straightTime+1)& (0+255),b
  1818   002D6E  C1B3  F069         	movff	main@curMove,move@curMove
  1819   002D72  C1B1  F06A         	movff	main@straightSpeed,move@straightSpeed
  1820   002D76  C17D  F06B         	movff	main@reverseDuration,move@reverseDuration
  1821   002D7A  C17E  F06C         	movff	main@reverseDuration+1,move@reverseDuration+1
  1822   002D7E  C1B4  F06D         	movff	main@straightRamp,move@straightRamp
  1823   002D82  C1AF  F06E         	movff	main@turnSpeed,move@turnSpeed
  1824   002D86  C1B5  F06F         	movff	main@turnDuration,move@turnDuration
  1825   002D8A  C1B0  F070         	movff	main@turnRamp,move@turnRamp
  1826   002D8E  EC01  F007         	call	_move	;wreg free
  1827   002D92                     
  1828                           ;main.c: 175:             color_read(&RGBC);
  1829   002D92  0EBC               	movlw	low main@RGBC
  1830   002D94  6E14               	movwf	color_read@RGBC^0,c
  1831   002D96  0E01               	movlw	high main@RGBC
  1832   002D98  6E15               	movwf	(color_read@RGBC+1)^0,c
  1833   002D9A  ECA6  F01F         	call	_color_read	;wreg free
  1834   002D9E                     
  1835                           ;main.c: 176:             ambient=RGBC.C;
  1836   002D9E  C1C2  F0FA         	movff	main@RGBC+6,_ambient
  1837   002DA2  C1C3  F0FB         	movff	main@RGBC+7,_ambient+1
  1838   002DA6                     
  1839                           ;main.c: 177:             color_clear_init_interrupts();
  1840   002DA6  ECFB  F025         	call	_color_clear_init_interrupts	;wreg free
  1841   002DAA                     
  1842                           ;main.c: 178:             brightnessChange = 0;
  1843   002DAA  0E00               	movlw	0
  1844   002DAC  0100               	movlb	0	; () banked
  1845   002DAE  6FF5               	movwf	_brightnessChange& (0+255),b
  1846   002DB0                     
  1847                           ; BSR set to: 0
  1848                           ;main.c: 180:             curMove++;
  1849   002DB0  0101               	movlb	1	; () banked
  1850   002DB2  2BB3               	incf	main@curMove& (0+255),f,b
  1851   002DB4                     
  1852                           ; BSR set to: 1
  1853                           ;main.c: 181:             resetTimer();
  1854   002DB4  ECAE  F029         	call	_resetTimer	;wreg free
  1855   002DB8                     
  1856                           ;main.c: 183:             PIE0bits.INT0IE=1;
  1857   002DB8  010E               	movlb	14	; () banked
  1858   002DBA  8129               	bsf	41,0,b	;volatile
  1859   002DBC                     
  1860                           ; BSR set to: 14
  1861                           ;main.c: 184:             wall = 0;
  1862   002DBC  0E00               	movlw	0
  1863   002DBE  0101               	movlb	1	; () banked
  1864   002DC0  6F7A               	movwf	main@wall& (0+255),b
  1865   002DC2                     l4715:
  1866                           
  1867                           ; BSR set to: 1
  1868                           ;main.c: 188:         if (lost == 1) {
  1869   002DC2  0100               	movlb	0	; () banked
  1870   002DC4  05F4               	decf	_lost& (0+255),w,b
  1871   002DC6  A4D8               	btfss	status,2,c
  1872   002DC8  EFE8  F016         	goto	u3751
  1873   002DCC  EFEA  F016         	goto	u3750
  1874   002DD0                     u3751:
  1875   002DD0  EF21  F017         	goto	l4725
  1876   002DD4                     u3750:
  1877   002DD4                     
  1878                           ; BSR set to: 0
  1879                           ;main.c: 189:             PIE0bits.INT0IE=0;
  1880   002DD4  010E               	movlb	14	; () banked
  1881   002DD6  9129               	bcf	41,0,b	;volatile
  1882   002DD8                     
  1883                           ; BSR set to: 14
  1884                           ;main.c: 190:             stop(&motorL, &motorR, straightRamp);
  1885   002DD8  0ECE               	movlw	low main@motorL
  1886   002DDA  6E23               	movwf	stop@mL^0,c
  1887   002DDC  0E01               	movlw	high main@motorL
  1888   002DDE  6E24               	movwf	(stop@mL+1)^0,c
  1889   002DE0  0EC4               	movlw	low main@motorR
  1890   002DE2  6E25               	movwf	stop@mR^0,c
  1891   002DE4  0E01               	movlw	high main@motorR
  1892   002DE6  6E26               	movwf	(stop@mR+1)^0,c
  1893   002DE8  C1B4  F027         	movff	main@straightRamp,stop@straightRamp
  1894   002DEC  ECA2  F024         	call	_stop	;wreg free
  1895                           
  1896                           ;main.c: 191:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1897   002DF0  0ECE               	movlw	low main@motorL
  1898   002DF2  6E32               	movwf	lostReturnHome@mL^0,c
  1899   002DF4  0E01               	movlw	high main@motorL
  1900   002DF6  6E33               	movwf	(lostReturnHome@mL+1)^0,c
  1901   002DF8  0EC4               	movlw	low main@motorR
  1902   002DFA  6E34               	movwf	lostReturnHome@mR^0,c
  1903   002DFC  0E01               	movlw	high main@motorR
  1904   002DFE  6E35               	movwf	(lostReturnHome@mR+1)^0,c
  1905   002E00  0E52               	movlw	low main@moveSequence
  1906   002E02  6E36               	movwf	lostReturnHome@moveSequence^0,c
  1907   002E04  0E01               	movlw	high main@moveSequence
  1908   002E06  6E37               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1909   002E08  0E00               	movlw	low main@straightTime
  1910   002E0A  6E38               	movwf	lostReturnHome@straightTime^0,c
  1911   002E0C  0E01               	movlw	high main@straightTime
  1912   002E0E  6E39               	movwf	(lostReturnHome@straightTime+1)^0,c
  1913   002E10  C1B3  F03A         	movff	main@curMove,lostReturnHome@curMove
  1914   002E14  C1B1  F03B         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1915   002E18  C17D  F03C         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1916   002E1C  C17E  F03D         	movff	main@reverseDuration+1,lostReturnHome@reverseDuration+1
  1917   002E20  C1B4  F03E         	movff	main@straightRamp,lostReturnHome@straightRamp
  1918   002E24  C1AF  F03F         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1919   002E28  C1B5  F040         	movff	main@turnDuration,lostReturnHome@turnDuration
  1920   002E2C  C1B0  F041         	movff	main@turnRamp,lostReturnHome@turnRamp
  1921   002E30  EC94  F00E         	call	_lostReturnHome	;wreg free
  1922   002E34                     
  1923                           ;main.c: 192:             PIE0bits.INT0IE=1;
  1924   002E34  010E               	movlb	14	; () banked
  1925   002E36  8129               	bsf	41,0,b	;volatile
  1926   002E38                     
  1927                           ; BSR set to: 14
  1928                           ;main.c: 193:             lost = 0;
  1929   002E38  0E00               	movlw	0
  1930   002E3A  0100               	movlb	0	; () banked
  1931   002E3C  6FF4               	movwf	_lost& (0+255),b
  1932                           
  1933                           ;main.c: 194:             break;
  1934   002E3E  EF34  F017         	goto	l105
  1935   002E42                     l4725:
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;main.c: 197:         if (color == 8 || color == 9) {break;}
  1939   002E42  0E08               	movlw	8
  1940   002E44  0101               	movlb	1	; () banked
  1941   002E46  19B2               	xorwf	main@color& (0+255),w,b
  1942   002E48  B4D8               	btfsc	status,2,c
  1943   002E4A  EF29  F017         	goto	u3761
  1944   002E4E  EF2B  F017         	goto	u3760
  1945   002E52                     u3761:
  1946   002E52  EF34  F017         	goto	l105
  1947   002E56                     u3760:
  1948   002E56                     
  1949                           ; BSR set to: 1
  1950   002E56  0E09               	movlw	9
  1951   002E58  19B2               	xorwf	main@color& (0+255),w,b
  1952   002E5A  A4D8               	btfss	status,2,c
  1953   002E5C  EF32  F017         	goto	u3771
  1954   002E60  EF34  F017         	goto	u3770
  1955   002E64                     u3771:
  1956   002E64  EFC2  F015         	goto	l4665
  1957   002E68                     u3770:
  1958   002E68                     l105:
  1959   002E68  EF2C  F000         	goto	start
  1960   002E6C                     __end_of_main:
  1961                           	callstack 0
  1962                           
  1963 ;; *************** function _wallAdjust *****************
  1964 ;; Defined at:
  1965 ;;		line 501 in file "dc_motor.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1968 ;;		 -> main@motorL(10), 
  1969 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1970 ;;		 -> main@motorR(10), 
  1971 ;;  straightSpee    1   38[COMRAM] unsigned char 
  1972 ;;  straightRamp    1   39[COMRAM] unsigned char 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  cur_power       2   48[COMRAM] int 
  1975 ;;  i               2   46[COMRAM] int 
  1976 ;;  wallSpeed       1   45[COMRAM] unsigned char 
  1977 ;;  wallReverseD    1   44[COMRAM] unsigned char 
  1978 ;;  adjustDurati    1   43[COMRAM] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1988 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1989 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1990 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1991 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1992 ;;Total ram usage:       16 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 8
  1995 ;; This function calls:
  1996 ;;		_setMotorPWM
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text1
  2003   003348                     __ptext1:
  2004                           	callstack 0
  2005   003348                     _wallAdjust:
  2006                           	callstack 22
  2007   003348                     
  2008                           ;dc_motor.c: 501: void wallAdjust(DC_motor *mL, DC_motor *mR, char straightSpeed, unsign
      +                          ed char straightRamp);dc_motor.c: 502: {;dc_motor.c: 503:     unsigned char adjustDurati
      +                          on = 120;
  2009   003348  0E78               	movlw	120
  2010   00334A  6E2C               	movwf	wallAdjust@adjustDuration^0,c
  2011                           
  2012                           ;dc_motor.c: 504:     unsigned char wallReverseDuration = 20;
  2013   00334C  0E14               	movlw	20
  2014   00334E  6E2D               	movwf	wallAdjust@wallReverseDuration^0,c
  2015                           
  2016                           ;dc_motor.c: 505:     unsigned char wallSpeed = 40;
  2017   003350  0E28               	movlw	40
  2018   003352  6E2E               	movwf	wallAdjust@wallSpeed^0,c
  2019   003354                     
  2020                           ;dc_motor.c: 507:     mL->direction = 1;
  2021   003354  EE20 F001          	lfsr	2,1
  2022   003358  5023               	movf	wallAdjust@mL^0,w,c
  2023   00335A  26D9               	addwf	fsr2l,f,c
  2024   00335C  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2025   00335E  22DA               	addwfc	fsr2h,f,c
  2026   003360  0E01               	movlw	1
  2027   003362  6EDF               	movwf	indf2,c
  2028   003364                     
  2029                           ;dc_motor.c: 508:     mR->direction = 1;
  2030   003364  EE20 F001          	lfsr	2,1
  2031   003368  5025               	movf	wallAdjust@mR^0,w,c
  2032   00336A  26D9               	addwf	fsr2l,f,c
  2033   00336C  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2034   00336E  22DA               	addwfc	fsr2h,f,c
  2035   003370  0E01               	movlw	1
  2036   003372  6EDF               	movwf	indf2,c
  2037                           
  2038                           ;dc_motor.c: 509:     int i;;dc_motor.c: 510:     int cur_power;;dc_motor.c: 511:     fo
      +                          r (cur_power=1;cur_power<=wallSpeed;cur_power++) {
  2039   003374  0E00               	movlw	0
  2040   003376  6E32               	movwf	(wallAdjust@cur_power+1)^0,c
  2041   003378  0E01               	movlw	1
  2042   00337A  6E31               	movwf	wallAdjust@cur_power^0,c
  2043   00337C  EF0A  F01A         	goto	l3957
  2044   003380                     l3943:
  2045                           
  2046                           ;dc_motor.c: 512:         mL->power = cur_power+mL->compensation;
  2047   003380  EE20 F009          	lfsr	2,9
  2048   003384  5023               	movf	wallAdjust@mL^0,w,c
  2049   003386  26D9               	addwf	fsr2l,f,c
  2050   003388  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2051   00338A  22DA               	addwfc	fsr2h,f,c
  2052   00338C  50DF               	movf	indf2,w,c
  2053   00338E  2431               	addwf	wallAdjust@cur_power^0,w,c
  2054   003390  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2055   003394  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2056   003398  6EDF               	movwf	indf2,c
  2057                           
  2058                           ;dc_motor.c: 513:         mR->power = cur_power+mR->compensation;
  2059   00339A  EE20 F009          	lfsr	2,9
  2060   00339E  5025               	movf	wallAdjust@mR^0,w,c
  2061   0033A0  26D9               	addwf	fsr2l,f,c
  2062   0033A2  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2063   0033A4  22DA               	addwfc	fsr2h,f,c
  2064   0033A6  50DF               	movf	indf2,w,c
  2065   0033A8  2431               	addwf	wallAdjust@cur_power^0,w,c
  2066   0033AA  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2067   0033AE  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2068   0033B2  6EDF               	movwf	indf2,c
  2069   0033B4                     
  2070                           ;dc_motor.c: 514:         setMotorPWM(mL);
  2071   0033B4  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2072   0033B8  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2073   0033BC  EC66  F023         	call	_setMotorPWM	;wreg free
  2074   0033C0                     
  2075                           ;dc_motor.c: 515:         setMotorPWM(mR);
  2076   0033C0  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2077   0033C4  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2078   0033C8  EC66  F023         	call	_setMotorPWM	;wreg free
  2079   0033CC                     
  2080                           ;dc_motor.c: 516:         for (i=0;i<straightRamp;i++) {
  2081   0033CC  0E00               	movlw	0
  2082   0033CE  6E30               	movwf	(wallAdjust@i+1)^0,c
  2083   0033D0  0E00               	movlw	0
  2084   0033D2  6E2F               	movwf	wallAdjust@i^0,c
  2085   0033D4  EFF6  F019         	goto	l690
  2086   0033D8                     l3951:
  2087                           
  2088                           ;dc_motor.c: 517:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2089   0033D8  0E68               	movlw	104
  2090   0033DA  6E29               	movwf	??_wallAdjust^0,c
  2091   0033DC  0EE4               	movlw	228
  2092   0033DE                     u3827:
  2093   0033DE  2EE8               	decfsz	wreg,f,c
  2094   0033E0  D7FE               	bra	u3827
  2095   0033E2  2E29               	decfsz	??_wallAdjust^0,f,c
  2096   0033E4  D7FC               	bra	u3827
  2097   0033E6  D000               	nop2	
  2098   0033E8                     
  2099                           ;dc_motor.c: 518:         }
  2100   0033E8  4A2F               	infsnz	wallAdjust@i^0,f,c
  2101   0033EA  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2102   0033EC                     l690:
  2103   0033EC  5028               	movf	wallAdjust@straightRamp^0,w,c
  2104   0033EE  6E29               	movwf	??_wallAdjust^0,c
  2105   0033F0  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2106   0033F2  5029               	movf	??_wallAdjust^0,w,c
  2107   0033F4  5C2F               	subwf	wallAdjust@i^0,w,c
  2108   0033F6  5030               	movf	(wallAdjust@i+1)^0,w,c
  2109   0033F8  0A80               	xorlw	128
  2110   0033FA  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2111   0033FC  502A               	movf	(??_wallAdjust+1)^0,w,c
  2112   0033FE  0A80               	xorlw	128
  2113   003400  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2114   003402  A0D8               	btfss	status,0,c
  2115   003404  EF06  F01A         	goto	u2811
  2116   003408  EF08  F01A         	goto	u2810
  2117   00340C                     u2811:
  2118   00340C  EFEC  F019         	goto	l3951
  2119   003410                     u2810:
  2120   003410                     
  2121                           ;dc_motor.c: 519:     }
  2122   003410  4A31               	infsnz	wallAdjust@cur_power^0,f,c
  2123   003412  2A32               	incf	(wallAdjust@cur_power+1)^0,f,c
  2124   003414                     l3957:
  2125   003414  502E               	movf	wallAdjust@wallSpeed^0,w,c
  2126   003416  6E29               	movwf	??_wallAdjust^0,c
  2127   003418  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2128   00341A  5031               	movf	wallAdjust@cur_power^0,w,c
  2129   00341C  5C29               	subwf	??_wallAdjust^0,w,c
  2130   00341E  502A               	movf	(??_wallAdjust+1)^0,w,c
  2131   003420  0A80               	xorlw	128
  2132   003422  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2133   003424  5032               	movf	(wallAdjust@cur_power+1)^0,w,c
  2134   003426  0A80               	xorlw	128
  2135   003428  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2136   00342A  B0D8               	btfsc	status,0,c
  2137   00342C  EF1A  F01A         	goto	u2821
  2138   003430  EF1C  F01A         	goto	u2820
  2139   003434                     u2821:
  2140   003434  EFC0  F019         	goto	l3943
  2141   003438                     u2820:
  2142   003438                     
  2143                           ;dc_motor.c: 521:     for (i=0;i<adjustDuration;i++) {
  2144   003438  0E00               	movlw	0
  2145   00343A  6E30               	movwf	(wallAdjust@i+1)^0,c
  2146   00343C  0E00               	movlw	0
  2147   00343E  6E2F               	movwf	wallAdjust@i^0,c
  2148   003440  EF2C  F01A         	goto	l694
  2149   003444                     l3961:
  2150                           
  2151                           ;dc_motor.c: 522:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2152   003444  0E68               	movlw	104
  2153   003446  6E29               	movwf	??_wallAdjust^0,c
  2154   003448  0EE4               	movlw	228
  2155   00344A                     u3837:
  2156   00344A  2EE8               	decfsz	wreg,f,c
  2157   00344C  D7FE               	bra	u3837
  2158   00344E  2E29               	decfsz	??_wallAdjust^0,f,c
  2159   003450  D7FC               	bra	u3837
  2160   003452  D000               	nop2	
  2161   003454                     
  2162                           ;dc_motor.c: 523:         }
  2163   003454  4A2F               	infsnz	wallAdjust@i^0,f,c
  2164   003456  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2165   003458                     l694:
  2166   003458  502C               	movf	wallAdjust@adjustDuration^0,w,c
  2167   00345A  6E29               	movwf	??_wallAdjust^0,c
  2168   00345C  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2169   00345E  5029               	movf	??_wallAdjust^0,w,c
  2170   003460  5C2F               	subwf	wallAdjust@i^0,w,c
  2171   003462  5030               	movf	(wallAdjust@i+1)^0,w,c
  2172   003464  0A80               	xorlw	128
  2173   003466  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2174   003468  502A               	movf	(??_wallAdjust+1)^0,w,c
  2175   00346A  0A80               	xorlw	128
  2176   00346C  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2177   00346E  A0D8               	btfss	status,0,c
  2178   003470  EF3C  F01A         	goto	u2831
  2179   003474  EF3E  F01A         	goto	u2830
  2180   003478                     u2831:
  2181   003478  EF22  F01A         	goto	l3961
  2182   00347C                     u2830:
  2183   00347C                     
  2184                           ;dc_motor.c: 525:     for (cur_power=wallSpeed;cur_power>=0;cur_power--) {
  2185   00347C  C02E  F031         	movff	wallAdjust@wallSpeed,wallAdjust@cur_power
  2186   003480  6A32               	clrf	(wallAdjust@cur_power+1)^0,c
  2187   003482                     l3965:
  2188   003482  BE32               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2189   003484  EF48  F01A         	goto	u2840
  2190   003488  EF46  F01A         	goto	u2841
  2191   00348C                     u2841:
  2192   00348C  EF4A  F01A         	goto	l3969
  2193   003490                     u2840:
  2194   003490  EF97  F01A         	goto	l3985
  2195   003494                     l3969:
  2196                           
  2197                           ;dc_motor.c: 526:         mL->power = cur_power+mL->compensation;
  2198   003494  EE20 F009          	lfsr	2,9
  2199   003498  5023               	movf	wallAdjust@mL^0,w,c
  2200   00349A  26D9               	addwf	fsr2l,f,c
  2201   00349C  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2202   00349E  22DA               	addwfc	fsr2h,f,c
  2203   0034A0  50DF               	movf	indf2,w,c
  2204   0034A2  2431               	addwf	wallAdjust@cur_power^0,w,c
  2205   0034A4  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2206   0034A8  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2207   0034AC  6EDF               	movwf	indf2,c
  2208                           
  2209                           ;dc_motor.c: 527:         mR->power = cur_power+mR->compensation;
  2210   0034AE  EE20 F009          	lfsr	2,9
  2211   0034B2  5025               	movf	wallAdjust@mR^0,w,c
  2212   0034B4  26D9               	addwf	fsr2l,f,c
  2213   0034B6  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2214   0034B8  22DA               	addwfc	fsr2h,f,c
  2215   0034BA  50DF               	movf	indf2,w,c
  2216   0034BC  2431               	addwf	wallAdjust@cur_power^0,w,c
  2217   0034BE  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2218   0034C2  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2219   0034C6  6EDF               	movwf	indf2,c
  2220   0034C8                     
  2221                           ;dc_motor.c: 528:         setMotorPWM(mL);
  2222   0034C8  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2223   0034CC  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2224   0034D0  EC66  F023         	call	_setMotorPWM	;wreg free
  2225   0034D4                     
  2226                           ;dc_motor.c: 529:         setMotorPWM(mR);
  2227   0034D4  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2228   0034D8  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2229   0034DC  EC66  F023         	call	_setMotorPWM	;wreg free
  2230   0034E0                     
  2231                           ;dc_motor.c: 530:         for (i=0;i<straightRamp;i++) {
  2232   0034E0  0E00               	movlw	0
  2233   0034E2  6E30               	movwf	(wallAdjust@i+1)^0,c
  2234   0034E4  0E00               	movlw	0
  2235   0034E6  6E2F               	movwf	wallAdjust@i^0,c
  2236   0034E8  EF80  F01A         	goto	l699
  2237   0034EC                     l3977:
  2238                           
  2239                           ;dc_motor.c: 531:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2240   0034EC  0E68               	movlw	104
  2241   0034EE  6E29               	movwf	??_wallAdjust^0,c
  2242   0034F0  0EE4               	movlw	228
  2243   0034F2                     u3847:
  2244   0034F2  2EE8               	decfsz	wreg,f,c
  2245   0034F4  D7FE               	bra	u3847
  2246   0034F6  2E29               	decfsz	??_wallAdjust^0,f,c
  2247   0034F8  D7FC               	bra	u3847
  2248   0034FA  D000               	nop2	
  2249   0034FC                     
  2250                           ;dc_motor.c: 532:         }
  2251   0034FC  4A2F               	infsnz	wallAdjust@i^0,f,c
  2252   0034FE  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2253   003500                     l699:
  2254   003500  5028               	movf	wallAdjust@straightRamp^0,w,c
  2255   003502  6E29               	movwf	??_wallAdjust^0,c
  2256   003504  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2257   003506  5029               	movf	??_wallAdjust^0,w,c
  2258   003508  5C2F               	subwf	wallAdjust@i^0,w,c
  2259   00350A  5030               	movf	(wallAdjust@i+1)^0,w,c
  2260   00350C  0A80               	xorlw	128
  2261   00350E  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2262   003510  502A               	movf	(??_wallAdjust+1)^0,w,c
  2263   003512  0A80               	xorlw	128
  2264   003514  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2265   003516  A0D8               	btfss	status,0,c
  2266   003518  EF90  F01A         	goto	u2851
  2267   00351C  EF92  F01A         	goto	u2850
  2268   003520                     u2851:
  2269   003520  EF76  F01A         	goto	l3977
  2270   003524                     u2850:
  2271   003524                     
  2272                           ;dc_motor.c: 533:     }
  2273   003524  0631               	decf	wallAdjust@cur_power^0,f,c
  2274   003526  A0D8               	btfss	status,0,c
  2275   003528  0632               	decf	(wallAdjust@cur_power+1)^0,f,c
  2276   00352A  EF41  F01A         	goto	l3965
  2277   00352E                     l3985:
  2278                           
  2279                           ;dc_motor.c: 535:     mL->direction = 0;
  2280   00352E  EE20 F001          	lfsr	2,1
  2281   003532  5023               	movf	wallAdjust@mL^0,w,c
  2282   003534  26D9               	addwf	fsr2l,f,c
  2283   003536  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2284   003538  22DA               	addwfc	fsr2h,f,c
  2285   00353A  6ADF               	clrf	indf2,c
  2286                           
  2287                           ;dc_motor.c: 536:     mR->direction = 0;
  2288   00353C  EE20 F001          	lfsr	2,1
  2289   003540  5025               	movf	wallAdjust@mR^0,w,c
  2290   003542  26D9               	addwf	fsr2l,f,c
  2291   003544  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2292   003546  22DA               	addwfc	fsr2h,f,c
  2293   003548  6ADF               	clrf	indf2,c
  2294   00354A                     
  2295                           ;dc_motor.c: 537:     for (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  2296   00354A  0E00               	movlw	0
  2297   00354C  6E32               	movwf	(wallAdjust@cur_power+1)^0,c
  2298   00354E  0E01               	movlw	1
  2299   003550  6E31               	movwf	wallAdjust@cur_power^0,c
  2300   003552  EFF5  F01A         	goto	l4003
  2301   003556                     l3989:
  2302                           
  2303                           ;dc_motor.c: 538:         mL->power = cur_power+mL->compensation;
  2304   003556  EE20 F009          	lfsr	2,9
  2305   00355A  5023               	movf	wallAdjust@mL^0,w,c
  2306   00355C  26D9               	addwf	fsr2l,f,c
  2307   00355E  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2308   003560  22DA               	addwfc	fsr2h,f,c
  2309   003562  50DF               	movf	indf2,w,c
  2310   003564  2431               	addwf	wallAdjust@cur_power^0,w,c
  2311   003566  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2312   00356A  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2313   00356E  6EDF               	movwf	indf2,c
  2314                           
  2315                           ;dc_motor.c: 539:         mR->power = cur_power+mR->compensation;
  2316   003570  EE20 F009          	lfsr	2,9
  2317   003574  5025               	movf	wallAdjust@mR^0,w,c
  2318   003576  26D9               	addwf	fsr2l,f,c
  2319   003578  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2320   00357A  22DA               	addwfc	fsr2h,f,c
  2321   00357C  50DF               	movf	indf2,w,c
  2322   00357E  2431               	addwf	wallAdjust@cur_power^0,w,c
  2323   003580  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2324   003584  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2325   003588  6EDF               	movwf	indf2,c
  2326   00358A                     
  2327                           ;dc_motor.c: 540:         setMotorPWM(mL);
  2328   00358A  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2329   00358E  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2330   003592  EC66  F023         	call	_setMotorPWM	;wreg free
  2331   003596                     
  2332                           ;dc_motor.c: 541:         setMotorPWM(mR);
  2333   003596  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2334   00359A  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2335   00359E  EC66  F023         	call	_setMotorPWM	;wreg free
  2336   0035A2                     
  2337                           ;dc_motor.c: 542:         for (i=0;i<straightRamp;i++) {
  2338   0035A2  0E00               	movlw	0
  2339   0035A4  6E30               	movwf	(wallAdjust@i+1)^0,c
  2340   0035A6  0E00               	movlw	0
  2341   0035A8  6E2F               	movwf	wallAdjust@i^0,c
  2342   0035AA  EFE1  F01A         	goto	l704
  2343   0035AE                     l3997:
  2344                           
  2345                           ;dc_motor.c: 543:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2346   0035AE  0E68               	movlw	104
  2347   0035B0  6E29               	movwf	??_wallAdjust^0,c
  2348   0035B2  0EE4               	movlw	228
  2349   0035B4                     u3857:
  2350   0035B4  2EE8               	decfsz	wreg,f,c
  2351   0035B6  D7FE               	bra	u3857
  2352   0035B8  2E29               	decfsz	??_wallAdjust^0,f,c
  2353   0035BA  D7FC               	bra	u3857
  2354   0035BC  D000               	nop2	
  2355   0035BE                     
  2356                           ;dc_motor.c: 544:         }
  2357   0035BE  4A2F               	infsnz	wallAdjust@i^0,f,c
  2358   0035C0  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2359   0035C2                     l704:
  2360   0035C2  5028               	movf	wallAdjust@straightRamp^0,w,c
  2361   0035C4  6E29               	movwf	??_wallAdjust^0,c
  2362   0035C6  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2363   0035C8  5029               	movf	??_wallAdjust^0,w,c
  2364   0035CA  5C2F               	subwf	wallAdjust@i^0,w,c
  2365   0035CC  5030               	movf	(wallAdjust@i+1)^0,w,c
  2366   0035CE  0A80               	xorlw	128
  2367   0035D0  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2368   0035D2  502A               	movf	(??_wallAdjust+1)^0,w,c
  2369   0035D4  0A80               	xorlw	128
  2370   0035D6  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2371   0035D8  A0D8               	btfss	status,0,c
  2372   0035DA  EFF1  F01A         	goto	u2861
  2373   0035DE  EFF3  F01A         	goto	u2860
  2374   0035E2                     u2861:
  2375   0035E2  EFD7  F01A         	goto	l3997
  2376   0035E6                     u2860:
  2377   0035E6                     
  2378                           ;dc_motor.c: 545:     }
  2379   0035E6  4A31               	infsnz	wallAdjust@cur_power^0,f,c
  2380   0035E8  2A32               	incf	(wallAdjust@cur_power+1)^0,f,c
  2381   0035EA                     l4003:
  2382   0035EA  5027               	movf	wallAdjust@straightSpeed^0,w,c
  2383   0035EC  6E29               	movwf	??_wallAdjust^0,c
  2384   0035EE  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2385   0035F0  5031               	movf	wallAdjust@cur_power^0,w,c
  2386   0035F2  5C29               	subwf	??_wallAdjust^0,w,c
  2387   0035F4  502A               	movf	(??_wallAdjust+1)^0,w,c
  2388   0035F6  0A80               	xorlw	128
  2389   0035F8  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2390   0035FA  5032               	movf	(wallAdjust@cur_power+1)^0,w,c
  2391   0035FC  0A80               	xorlw	128
  2392   0035FE  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2393   003600  B0D8               	btfsc	status,0,c
  2394   003602  EF05  F01B         	goto	u2871
  2395   003606  EF07  F01B         	goto	u2870
  2396   00360A                     u2871:
  2397   00360A  EFAB  F01A         	goto	l3989
  2398   00360E                     u2870:
  2399   00360E                     
  2400                           ;dc_motor.c: 547:     for (i=0;i<wallReverseDuration;i++) {
  2401   00360E  0E00               	movlw	0
  2402   003610  6E30               	movwf	(wallAdjust@i+1)^0,c
  2403   003612  0E00               	movlw	0
  2404   003614  6E2F               	movwf	wallAdjust@i^0,c
  2405   003616  EF17  F01B         	goto	l708
  2406   00361A                     l4007:
  2407                           
  2408                           ;dc_motor.c: 548:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2409   00361A  0E68               	movlw	104
  2410   00361C  6E29               	movwf	??_wallAdjust^0,c
  2411   00361E  0EE4               	movlw	228
  2412   003620                     u3867:
  2413   003620  2EE8               	decfsz	wreg,f,c
  2414   003622  D7FE               	bra	u3867
  2415   003624  2E29               	decfsz	??_wallAdjust^0,f,c
  2416   003626  D7FC               	bra	u3867
  2417   003628  D000               	nop2	
  2418   00362A                     
  2419                           ;dc_motor.c: 549:         }
  2420   00362A  4A2F               	infsnz	wallAdjust@i^0,f,c
  2421   00362C  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2422   00362E                     l708:
  2423   00362E  502D               	movf	wallAdjust@wallReverseDuration^0,w,c
  2424   003630  6E29               	movwf	??_wallAdjust^0,c
  2425   003632  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2426   003634  5029               	movf	??_wallAdjust^0,w,c
  2427   003636  5C2F               	subwf	wallAdjust@i^0,w,c
  2428   003638  5030               	movf	(wallAdjust@i+1)^0,w,c
  2429   00363A  0A80               	xorlw	128
  2430   00363C  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2431   00363E  502A               	movf	(??_wallAdjust+1)^0,w,c
  2432   003640  0A80               	xorlw	128
  2433   003642  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2434   003644  A0D8               	btfss	status,0,c
  2435   003646  EF27  F01B         	goto	u2881
  2436   00364A  EF29  F01B         	goto	u2880
  2437   00364E                     u2881:
  2438   00364E  EF0D  F01B         	goto	l4007
  2439   003652                     u2880:
  2440   003652                     
  2441                           ;dc_motor.c: 551:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  2442   003652  C027  F031         	movff	wallAdjust@straightSpeed,wallAdjust@cur_power
  2443   003656  6A32               	clrf	(wallAdjust@cur_power+1)^0,c
  2444   003658                     l4011:
  2445   003658  BE32               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2446   00365A  EF33  F01B         	goto	u2890
  2447   00365E  EF31  F01B         	goto	u2891
  2448   003662                     u2891:
  2449   003662  EF35  F01B         	goto	l4015
  2450   003666                     u2890:
  2451   003666  EF82  F01B         	goto	l4031
  2452   00366A                     l4015:
  2453                           
  2454                           ;dc_motor.c: 552:         mL->power = cur_power+mL->compensation;
  2455   00366A  EE20 F009          	lfsr	2,9
  2456   00366E  5023               	movf	wallAdjust@mL^0,w,c
  2457   003670  26D9               	addwf	fsr2l,f,c
  2458   003672  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2459   003674  22DA               	addwfc	fsr2h,f,c
  2460   003676  50DF               	movf	indf2,w,c
  2461   003678  2431               	addwf	wallAdjust@cur_power^0,w,c
  2462   00367A  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2463   00367E  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2464   003682  6EDF               	movwf	indf2,c
  2465                           
  2466                           ;dc_motor.c: 553:         mR->power = cur_power+mR->compensation;
  2467   003684  EE20 F009          	lfsr	2,9
  2468   003688  5025               	movf	wallAdjust@mR^0,w,c
  2469   00368A  26D9               	addwf	fsr2l,f,c
  2470   00368C  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2471   00368E  22DA               	addwfc	fsr2h,f,c
  2472   003690  50DF               	movf	indf2,w,c
  2473   003692  2431               	addwf	wallAdjust@cur_power^0,w,c
  2474   003694  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2475   003698  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2476   00369C  6EDF               	movwf	indf2,c
  2477   00369E                     
  2478                           ;dc_motor.c: 554:         setMotorPWM(mL);
  2479   00369E  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2480   0036A2  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2481   0036A6  EC66  F023         	call	_setMotorPWM	;wreg free
  2482   0036AA                     
  2483                           ;dc_motor.c: 555:         setMotorPWM(mR);
  2484   0036AA  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2485   0036AE  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2486   0036B2  EC66  F023         	call	_setMotorPWM	;wreg free
  2487   0036B6                     
  2488                           ;dc_motor.c: 556:         for (i=0;i<straightRamp;i++) {
  2489   0036B6  0E00               	movlw	0
  2490   0036B8  6E30               	movwf	(wallAdjust@i+1)^0,c
  2491   0036BA  0E00               	movlw	0
  2492   0036BC  6E2F               	movwf	wallAdjust@i^0,c
  2493   0036BE  EF6B  F01B         	goto	l713
  2494   0036C2                     l4023:
  2495                           
  2496                           ;dc_motor.c: 557:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2497   0036C2  0E68               	movlw	104
  2498   0036C4  6E29               	movwf	??_wallAdjust^0,c
  2499   0036C6  0EE4               	movlw	228
  2500   0036C8                     u3877:
  2501   0036C8  2EE8               	decfsz	wreg,f,c
  2502   0036CA  D7FE               	bra	u3877
  2503   0036CC  2E29               	decfsz	??_wallAdjust^0,f,c
  2504   0036CE  D7FC               	bra	u3877
  2505   0036D0  D000               	nop2	
  2506   0036D2                     
  2507                           ;dc_motor.c: 558:         }
  2508   0036D2  4A2F               	infsnz	wallAdjust@i^0,f,c
  2509   0036D4  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2510   0036D6                     l713:
  2511   0036D6  5028               	movf	wallAdjust@straightRamp^0,w,c
  2512   0036D8  6E29               	movwf	??_wallAdjust^0,c
  2513   0036DA  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2514   0036DC  5029               	movf	??_wallAdjust^0,w,c
  2515   0036DE  5C2F               	subwf	wallAdjust@i^0,w,c
  2516   0036E0  5030               	movf	(wallAdjust@i+1)^0,w,c
  2517   0036E2  0A80               	xorlw	128
  2518   0036E4  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2519   0036E6  502A               	movf	(??_wallAdjust+1)^0,w,c
  2520   0036E8  0A80               	xorlw	128
  2521   0036EA  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2522   0036EC  A0D8               	btfss	status,0,c
  2523   0036EE  EF7B  F01B         	goto	u2901
  2524   0036F2  EF7D  F01B         	goto	u2900
  2525   0036F6                     u2901:
  2526   0036F6  EF61  F01B         	goto	l4023
  2527   0036FA                     u2900:
  2528   0036FA                     
  2529                           ;dc_motor.c: 559:     }
  2530   0036FA  0631               	decf	wallAdjust@cur_power^0,f,c
  2531   0036FC  A0D8               	btfss	status,0,c
  2532   0036FE  0632               	decf	(wallAdjust@cur_power+1)^0,f,c
  2533   003700  EF2C  F01B         	goto	l4011
  2534   003704                     l4031:
  2535                           
  2536                           ;dc_motor.c: 560:     mL->power = 0;
  2537   003704  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2538   003708  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2539   00370C  6ADF               	clrf	indf2,c
  2540                           
  2541                           ;dc_motor.c: 561:     mR->power = 0;
  2542   00370E  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2543   003712  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2544   003716  6ADF               	clrf	indf2,c
  2545   003718  0012               	return		;funcret
  2546   00371A                     __end_of_wallAdjust:
  2547                           	callstack 0
  2548                           
  2549 ;; *************** function _move *****************
  2550 ;; Defined at:
  2551 ;;		line 91 in file "dc_motor.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  2554 ;;		 -> main@motorL(10), 
  2555 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  2556 ;;		 -> main@motorR(10), 
  2557 ;;  color           1    4[BANK0 ] unsigned char 
  2558 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  2559 ;;		 -> main@moveSequence(40), 
  2560 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  2561 ;;		 -> main@straightTime(82), 
  2562 ;;  curMove         1    9[BANK0 ] unsigned char 
  2563 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  2564 ;;  reverseDurat    2   11[BANK0 ] unsigned int 
  2565 ;;  straightRamp    1   13[BANK0 ] unsigned char 
  2566 ;;  turnSpeed       1   14[BANK0 ] unsigned char 
  2567 ;;  turnDuration    1   15[BANK0 ] unsigned char 
  2568 ;;  turnRamp        1   16[BANK0 ] unsigned char 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2580 ;;      Params:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;Total ram usage:       19 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 10
  2587 ;; This function calls:
  2588 ;;		_fullSpeedAhead
  2589 ;;		_returnHome
  2590 ;;		_reverseOneSquare
  2591 ;;		_reverseShort
  2592 ;;		_turnLeft
  2593 ;;		_turnRight
  2594 ;; This function is called by:
  2595 ;;		_main
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text2
  2600   000E02                     __ptext2:
  2601                           	callstack 0
  2602   000E02                     _move:
  2603                           	callstack 20
  2604   000E02                     
  2605                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned int rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  2606   000E02  0100               	movlb	0	; () banked
  2607   000E04  0564               	decf	move@color& (0+255),w,b
  2608   000E06  A4D8               	btfss	status,2,c
  2609   000E08  EF08  F007         	goto	u3131
  2610   000E0C  EF0A  F007         	goto	u3130
  2611   000E10                     u3131:
  2612   000E10  EF6C  F007         	goto	l4111
  2613   000E14                     u3130:
  2614   000E14                     
  2615                           ; BSR set to: 0
  2616                           ;dc_motor.c: 94:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2617   000E14  C060  F023         	movff	move@mL,reverseShort@mL
  2618   000E18  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2619   000E1C  C062  F025         	movff	move@mR,reverseShort@mR
  2620   000E20  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2621   000E24  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2622   000E28  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2623   000E2C  ECAE  F01E         	call	_reverseShort	;wreg free
  2624   000E30                     
  2625                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2626   000E30  0E05               	movlw	5
  2627   000E32  6E4A               	movwf	(??_move+1)^0,c
  2628   000E34  0E0F               	movlw	15
  2629   000E36  6E49               	movwf	??_move^0,c
  2630   000E38  0EF1               	movlw	241
  2631   000E3A                     u3887:
  2632   000E3A  2EE8               	decfsz	wreg,f,c
  2633   000E3C  D7FE               	bra	u3887
  2634   000E3E  2E49               	decfsz	??_move^0,f,c
  2635   000E40  D7FC               	bra	u3887
  2636   000E42  2E4A               	decfsz	(??_move+1)^0,f,c
  2637   000E44  D7FA               	bra	u3887
  2638   000E46  0000               	nop	
  2639   000E48                     
  2640                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2641   000E48  C060  F023         	movff	move@mL,turnRight@mL
  2642   000E4C  C061  F024         	movff	move@mL+1,turnRight@mL+1
  2643   000E50  C062  F025         	movff	move@mR,turnRight@mR
  2644   000E54  C063  F026         	movff	move@mR+1,turnRight@mR+1
  2645   000E58  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  2646   000E5C  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  2647   000E60  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  2648   000E64  EC8C  F021         	call	_turnRight	;wreg free
  2649                           
  2650                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2651   000E68  0E05               	movlw	5
  2652   000E6A  6E4A               	movwf	(??_move+1)^0,c
  2653   000E6C  0E0F               	movlw	15
  2654   000E6E  6E49               	movwf	??_move^0,c
  2655   000E70  0EF1               	movlw	241
  2656   000E72                     u3897:
  2657   000E72  2EE8               	decfsz	wreg,f,c
  2658   000E74  D7FE               	bra	u3897
  2659   000E76  2E49               	decfsz	??_move^0,f,c
  2660   000E78  D7FC               	bra	u3897
  2661   000E7A  2E4A               	decfsz	(??_move+1)^0,f,c
  2662   000E7C  D7FA               	bra	u3897
  2663   000E7E  0000               	nop	
  2664   000E80                     
  2665                           ;dc_motor.c: 98:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2666   000E80  C060  F023         	movff	move@mL,turnRight@mL
  2667   000E84  C061  F024         	movff	move@mL+1,turnRight@mL+1
  2668   000E88  C062  F025         	movff	move@mR,turnRight@mR
  2669   000E8C  C063  F026         	movff	move@mR+1,turnRight@mR+1
  2670   000E90  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  2671   000E94  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  2672   000E98  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  2673   000E9C  EC8C  F021         	call	_turnRight	;wreg free
  2674   000EA0                     
  2675                           ;dc_motor.c: 99:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2676   000EA0  0E05               	movlw	5
  2677   000EA2  6E4A               	movwf	(??_move+1)^0,c
  2678   000EA4  0E0F               	movlw	15
  2679   000EA6  6E49               	movwf	??_move^0,c
  2680   000EA8  0EF1               	movlw	241
  2681   000EAA                     u3907:
  2682   000EAA  2EE8               	decfsz	wreg,f,c
  2683   000EAC  D7FE               	bra	u3907
  2684   000EAE  2E49               	decfsz	??_move^0,f,c
  2685   000EB0  D7FC               	bra	u3907
  2686   000EB2  2E4A               	decfsz	(??_move+1)^0,f,c
  2687   000EB4  D7FA               	bra	u3907
  2688   000EB6  0000               	nop	
  2689                           
  2690                           ;dc_motor.c: 100:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2691   000EB8  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  2692   000EBC  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  2693   000EC0  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  2694   000EC4  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  2695   000EC8  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2696   000ECC  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2697   000ED0  EC26  F025         	call	_fullSpeedAhead	;wreg free
  2698                           
  2699                           ;dc_motor.c: 101:     }
  2700   000ED4  EF1D  F00B         	goto	l567
  2701   000ED8                     l4111:
  2702                           
  2703                           ; BSR set to: 0
  2704   000ED8  0E02               	movlw	2
  2705   000EDA  1964               	xorwf	move@color& (0+255),w,b
  2706   000EDC  A4D8               	btfss	status,2,c
  2707   000EDE  EF73  F007         	goto	u3141
  2708   000EE2  EF75  F007         	goto	u3140
  2709   000EE6                     u3141:
  2710   000EE6  EFD7  F007         	goto	l4123
  2711   000EEA                     u3140:
  2712   000EEA                     
  2713                           ; BSR set to: 0
  2714                           ;dc_motor.c: 104:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2715   000EEA  C060  F023         	movff	move@mL,reverseShort@mL
  2716   000EEE  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2717   000EF2  C062  F025         	movff	move@mR,reverseShort@mR
  2718   000EF6  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2719   000EFA  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2720   000EFE  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2721   000F02  ECAE  F01E         	call	_reverseShort	;wreg free
  2722   000F06                     
  2723                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2724   000F06  0E05               	movlw	5
  2725   000F08  6E4A               	movwf	(??_move+1)^0,c
  2726   000F0A  0E0F               	movlw	15
  2727   000F0C  6E49               	movwf	??_move^0,c
  2728   000F0E  0EF1               	movlw	241
  2729   000F10                     u3917:
  2730   000F10  2EE8               	decfsz	wreg,f,c
  2731   000F12  D7FE               	bra	u3917
  2732   000F14  2E49               	decfsz	??_move^0,f,c
  2733   000F16  D7FC               	bra	u3917
  2734   000F18  2E4A               	decfsz	(??_move+1)^0,f,c
  2735   000F1A  D7FA               	bra	u3917
  2736   000F1C  0000               	nop	
  2737   000F1E                     
  2738                           ;dc_motor.c: 106:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2739   000F1E  C060  F023         	movff	move@mL,turnLeft@mL
  2740   000F22  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2741   000F26  C062  F025         	movff	move@mR,turnLeft@mR
  2742   000F2A  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2743   000F2E  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2744   000F32  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2745   000F36  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2746   000F3A  EC79  F022         	call	_turnLeft	;wreg free
  2747                           
  2748                           ;dc_motor.c: 107:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2749   000F3E  0E05               	movlw	5
  2750   000F40  6E4A               	movwf	(??_move+1)^0,c
  2751   000F42  0E0F               	movlw	15
  2752   000F44  6E49               	movwf	??_move^0,c
  2753   000F46  0EF1               	movlw	241
  2754   000F48                     u3927:
  2755   000F48  2EE8               	decfsz	wreg,f,c
  2756   000F4A  D7FE               	bra	u3927
  2757   000F4C  2E49               	decfsz	??_move^0,f,c
  2758   000F4E  D7FC               	bra	u3927
  2759   000F50  2E4A               	decfsz	(??_move+1)^0,f,c
  2760   000F52  D7FA               	bra	u3927
  2761   000F54  0000               	nop	
  2762   000F56                     
  2763                           ;dc_motor.c: 108:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2764   000F56  C060  F023         	movff	move@mL,turnLeft@mL
  2765   000F5A  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2766   000F5E  C062  F025         	movff	move@mR,turnLeft@mR
  2767   000F62  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2768   000F66  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2769   000F6A  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2770   000F6E  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2771   000F72  EC79  F022         	call	_turnLeft	;wreg free
  2772   000F76                     
  2773                           ;dc_motor.c: 109:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2774   000F76  0E05               	movlw	5
  2775   000F78  6E4A               	movwf	(??_move+1)^0,c
  2776   000F7A  0E0F               	movlw	15
  2777   000F7C  6E49               	movwf	??_move^0,c
  2778   000F7E  0EF1               	movlw	241
  2779   000F80                     u3937:
  2780   000F80  2EE8               	decfsz	wreg,f,c
  2781   000F82  D7FE               	bra	u3937
  2782   000F84  2E49               	decfsz	??_move^0,f,c
  2783   000F86  D7FC               	bra	u3937
  2784   000F88  2E4A               	decfsz	(??_move+1)^0,f,c
  2785   000F8A  D7FA               	bra	u3937
  2786   000F8C  0000               	nop	
  2787                           
  2788                           ;dc_motor.c: 110:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2789   000F8E  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  2790   000F92  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  2791   000F96  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  2792   000F9A  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  2793   000F9E  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2794   000FA2  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2795   000FA6  EC26  F025         	call	_fullSpeedAhead	;wreg free
  2796                           
  2797                           ;dc_motor.c: 111:     }
  2798   000FAA  EF1D  F00B         	goto	l567
  2799   000FAE                     l4123:
  2800                           
  2801                           ; BSR set to: 0
  2802   000FAE  0E03               	movlw	3
  2803   000FB0  1964               	xorwf	move@color& (0+255),w,b
  2804   000FB2  A4D8               	btfss	status,2,c
  2805   000FB4  EFDE  F007         	goto	u3151
  2806   000FB8  EFE0  F007         	goto	u3150
  2807   000FBC                     u3151:
  2808   000FBC  EF7A  F008         	goto	l4141
  2809   000FC0                     u3150:
  2810   000FC0                     
  2811                           ; BSR set to: 0
  2812                           ;dc_motor.c: 114:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2813   000FC0  C060  F023         	movff	move@mL,reverseShort@mL
  2814   000FC4  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2815   000FC8  C062  F025         	movff	move@mR,reverseShort@mR
  2816   000FCC  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2817   000FD0  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2818   000FD4  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2819   000FD8  ECAE  F01E         	call	_reverseShort	;wreg free
  2820   000FDC                     
  2821                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2822   000FDC  0E05               	movlw	5
  2823   000FDE  6E4A               	movwf	(??_move+1)^0,c
  2824   000FE0  0E0F               	movlw	15
  2825   000FE2  6E49               	movwf	??_move^0,c
  2826   000FE4  0EF1               	movlw	241
  2827   000FE6                     u3947:
  2828   000FE6  2EE8               	decfsz	wreg,f,c
  2829   000FE8  D7FE               	bra	u3947
  2830   000FEA  2E49               	decfsz	??_move^0,f,c
  2831   000FEC  D7FC               	bra	u3947
  2832   000FEE  2E4A               	decfsz	(??_move+1)^0,f,c
  2833   000FF0  D7FA               	bra	u3947
  2834   000FF2  0000               	nop	
  2835   000FF4                     
  2836                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2837   000FF4  C060  F023         	movff	move@mL,turnLeft@mL
  2838   000FF8  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2839   000FFC  C062  F025         	movff	move@mR,turnLeft@mR
  2840   001000  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2841   001004  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2842   001008  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2843   00100C  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2844   001010  EC79  F022         	call	_turnLeft	;wreg free
  2845                           
  2846                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2847   001014  0E05               	movlw	5
  2848   001016  6E4A               	movwf	(??_move+1)^0,c
  2849   001018  0E0F               	movlw	15
  2850   00101A  6E49               	movwf	??_move^0,c
  2851   00101C  0EF1               	movlw	241
  2852   00101E                     u3957:
  2853   00101E  2EE8               	decfsz	wreg,f,c
  2854   001020  D7FE               	bra	u3957
  2855   001022  2E49               	decfsz	??_move^0,f,c
  2856   001024  D7FC               	bra	u3957
  2857   001026  2E4A               	decfsz	(??_move+1)^0,f,c
  2858   001028  D7FA               	bra	u3957
  2859   00102A  0000               	nop	
  2860   00102C                     
  2861                           ;dc_motor.c: 118:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2862   00102C  C060  F023         	movff	move@mL,turnLeft@mL
  2863   001030  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2864   001034  C062  F025         	movff	move@mR,turnLeft@mR
  2865   001038  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2866   00103C  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2867   001040  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2868   001044  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2869   001048  EC79  F022         	call	_turnLeft	;wreg free
  2870   00104C                     
  2871                           ;dc_motor.c: 119:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2872   00104C  0E05               	movlw	5
  2873   00104E  6E4A               	movwf	(??_move+1)^0,c
  2874   001050  0E0F               	movlw	15
  2875   001052  6E49               	movwf	??_move^0,c
  2876   001054  0EF1               	movlw	241
  2877   001056                     u3967:
  2878   001056  2EE8               	decfsz	wreg,f,c
  2879   001058  D7FE               	bra	u3967
  2880   00105A  2E49               	decfsz	??_move^0,f,c
  2881   00105C  D7FC               	bra	u3967
  2882   00105E  2E4A               	decfsz	(??_move+1)^0,f,c
  2883   001060  D7FA               	bra	u3967
  2884   001062  0000               	nop	
  2885                           
  2886                           ;dc_motor.c: 120:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2887   001064  C060  F023         	movff	move@mL,turnLeft@mL
  2888   001068  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2889   00106C  C062  F025         	movff	move@mR,turnLeft@mR
  2890   001070  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2891   001074  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2892   001078  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2893   00107C  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2894   001080  EC79  F022         	call	_turnLeft	;wreg free
  2895   001084                     
  2896                           ;dc_motor.c: 121:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2897   001084  0E05               	movlw	5
  2898   001086  6E4A               	movwf	(??_move+1)^0,c
  2899   001088  0E0F               	movlw	15
  2900   00108A  6E49               	movwf	??_move^0,c
  2901   00108C  0EF1               	movlw	241
  2902   00108E                     u3977:
  2903   00108E  2EE8               	decfsz	wreg,f,c
  2904   001090  D7FE               	bra	u3977
  2905   001092  2E49               	decfsz	??_move^0,f,c
  2906   001094  D7FC               	bra	u3977
  2907   001096  2E4A               	decfsz	(??_move+1)^0,f,c
  2908   001098  D7FA               	bra	u3977
  2909   00109A  0000               	nop	
  2910   00109C                     
  2911                           ;dc_motor.c: 122:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2912   00109C  C060  F023         	movff	move@mL,turnLeft@mL
  2913   0010A0  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2914   0010A4  C062  F025         	movff	move@mR,turnLeft@mR
  2915   0010A8  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2916   0010AC  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2917   0010B0  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2918   0010B4  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2919   0010B8  EC79  F022         	call	_turnLeft	;wreg free
  2920                           
  2921                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2922   0010BC  0E05               	movlw	5
  2923   0010BE  6E4A               	movwf	(??_move+1)^0,c
  2924   0010C0  0E0F               	movlw	15
  2925   0010C2  6E49               	movwf	??_move^0,c
  2926   0010C4  0EF1               	movlw	241
  2927   0010C6                     u3987:
  2928   0010C6  2EE8               	decfsz	wreg,f,c
  2929   0010C8  D7FE               	bra	u3987
  2930   0010CA  2E49               	decfsz	??_move^0,f,c
  2931   0010CC  D7FC               	bra	u3987
  2932   0010CE  2E4A               	decfsz	(??_move+1)^0,f,c
  2933   0010D0  D7FA               	bra	u3987
  2934   0010D2  0000               	nop	
  2935   0010D4                     
  2936                           ;dc_motor.c: 124:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2937   0010D4  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  2938   0010D8  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  2939   0010DC  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  2940   0010E0  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  2941   0010E4  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2942   0010E8  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2943   0010EC  EC26  F025         	call	_fullSpeedAhead	;wreg free
  2944                           
  2945                           ;dc_motor.c: 125:     }
  2946   0010F0  EF1D  F00B         	goto	l567
  2947   0010F4                     l4141:
  2948                           
  2949                           ; BSR set to: 0
  2950   0010F4  0E04               	movlw	4
  2951   0010F6  1964               	xorwf	move@color& (0+255),w,b
  2952   0010F8  A4D8               	btfss	status,2,c
  2953   0010FA  EF81  F008         	goto	u3161
  2954   0010FE  EF83  F008         	goto	u3160
  2955   001102                     u3161:
  2956   001102  EF03  F009         	goto	l4157
  2957   001106                     u3160:
  2958   001106                     
  2959                           ; BSR set to: 0
  2960                           ;dc_motor.c: 128:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2961   001106  C060  F023         	movff	move@mL,reverseShort@mL
  2962   00110A  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2963   00110E  C062  F025         	movff	move@mR,reverseShort@mR
  2964   001112  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2965   001116  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2966   00111A  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2967   00111E  ECAE  F01E         	call	_reverseShort	;wreg free
  2968   001122                     
  2969                           ;dc_motor.c: 129:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2970   001122  0E05               	movlw	5
  2971   001124  6E4A               	movwf	(??_move+1)^0,c
  2972   001126  0E0F               	movlw	15
  2973   001128  6E49               	movwf	??_move^0,c
  2974   00112A  0EF1               	movlw	241
  2975   00112C                     u3997:
  2976   00112C  2EE8               	decfsz	wreg,f,c
  2977   00112E  D7FE               	bra	u3997
  2978   001130  2E49               	decfsz	??_move^0,f,c
  2979   001132  D7FC               	bra	u3997
  2980   001134  2E4A               	decfsz	(??_move+1)^0,f,c
  2981   001136  D7FA               	bra	u3997
  2982   001138  0000               	nop	
  2983   00113A                     
  2984                           ;dc_motor.c: 130:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2985   00113A  C060  F023         	movff	move@mL,reverseOneSquare@mL
  2986   00113E  C061  F024         	movff	move@mL+1,reverseOneSquare@mL+1
  2987   001142  C062  F025         	movff	move@mR,reverseOneSquare@mR
  2988   001146  C063  F026         	movff	move@mR+1,reverseOneSquare@mR+1
  2989   00114A  C06A  F027         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2990   00114E  C06B  F028         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2991   001152  C06C  F029         	movff	move@reverseDuration+1,reverseOneSquare@reverseDuration+1
  2992   001156  C06D  F02A         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2993   00115A  EC9D  F020         	call	_reverseOneSquare	;wreg free
  2994                           
  2995                           ;dc_motor.c: 131:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2996   00115E  0E05               	movlw	5
  2997   001160  6E4A               	movwf	(??_move+1)^0,c
  2998   001162  0E0F               	movlw	15
  2999   001164  6E49               	movwf	??_move^0,c
  3000   001166  0EF1               	movlw	241
  3001   001168                     u4007:
  3002   001168  2EE8               	decfsz	wreg,f,c
  3003   00116A  D7FE               	bra	u4007
  3004   00116C  2E49               	decfsz	??_move^0,f,c
  3005   00116E  D7FC               	bra	u4007
  3006   001170  2E4A               	decfsz	(??_move+1)^0,f,c
  3007   001172  D7FA               	bra	u4007
  3008   001174  0000               	nop	
  3009   001176                     
  3010                           ;dc_motor.c: 132:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3011   001176  C060  F023         	movff	move@mL,turnRight@mL
  3012   00117A  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3013   00117E  C062  F025         	movff	move@mR,turnRight@mR
  3014   001182  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3015   001186  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3016   00118A  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3017   00118E  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3018   001192  EC8C  F021         	call	_turnRight	;wreg free
  3019   001196                     
  3020                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3021   001196  0E05               	movlw	5
  3022   001198  6E4A               	movwf	(??_move+1)^0,c
  3023   00119A  0E0F               	movlw	15
  3024   00119C  6E49               	movwf	??_move^0,c
  3025   00119E  0EF1               	movlw	241
  3026   0011A0                     u4017:
  3027   0011A0  2EE8               	decfsz	wreg,f,c
  3028   0011A2  D7FE               	bra	u4017
  3029   0011A4  2E49               	decfsz	??_move^0,f,c
  3030   0011A6  D7FC               	bra	u4017
  3031   0011A8  2E4A               	decfsz	(??_move+1)^0,f,c
  3032   0011AA  D7FA               	bra	u4017
  3033   0011AC  0000               	nop	
  3034                           
  3035                           ;dc_motor.c: 134:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3036   0011AE  C060  F023         	movff	move@mL,turnRight@mL
  3037   0011B2  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3038   0011B6  C062  F025         	movff	move@mR,turnRight@mR
  3039   0011BA  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3040   0011BE  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3041   0011C2  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3042   0011C6  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3043   0011CA  EC8C  F021         	call	_turnRight	;wreg free
  3044   0011CE                     
  3045                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3046   0011CE  0E05               	movlw	5
  3047   0011D0  6E4A               	movwf	(??_move+1)^0,c
  3048   0011D2  0E0F               	movlw	15
  3049   0011D4  6E49               	movwf	??_move^0,c
  3050   0011D6  0EF1               	movlw	241
  3051   0011D8                     u4027:
  3052   0011D8  2EE8               	decfsz	wreg,f,c
  3053   0011DA  D7FE               	bra	u4027
  3054   0011DC  2E49               	decfsz	??_move^0,f,c
  3055   0011DE  D7FC               	bra	u4027
  3056   0011E0  2E4A               	decfsz	(??_move+1)^0,f,c
  3057   0011E2  D7FA               	bra	u4027
  3058   0011E4  0000               	nop	
  3059   0011E6                     
  3060                           ;dc_motor.c: 136:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3061   0011E6  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3062   0011EA  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3063   0011EE  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3064   0011F2  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3065   0011F6  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3066   0011FA  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3067   0011FE  EC26  F025         	call	_fullSpeedAhead	;wreg free
  3068                           
  3069                           ;dc_motor.c: 137:     }
  3070   001202  EF1D  F00B         	goto	l567
  3071   001206                     l4157:
  3072                           
  3073                           ; BSR set to: 0
  3074   001206  0E05               	movlw	5
  3075   001208  1964               	xorwf	move@color& (0+255),w,b
  3076   00120A  A4D8               	btfss	status,2,c
  3077   00120C  EF0A  F009         	goto	u3171
  3078   001210  EF0C  F009         	goto	u3170
  3079   001214                     u3171:
  3080   001214  EF8C  F009         	goto	l4173
  3081   001218                     u3170:
  3082   001218                     
  3083                           ; BSR set to: 0
  3084                           ;dc_motor.c: 140:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3085   001218  C060  F023         	movff	move@mL,reverseShort@mL
  3086   00121C  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3087   001220  C062  F025         	movff	move@mR,reverseShort@mR
  3088   001224  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3089   001228  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3090   00122C  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3091   001230  ECAE  F01E         	call	_reverseShort	;wreg free
  3092   001234                     
  3093                           ;dc_motor.c: 141:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3094   001234  0E05               	movlw	5
  3095   001236  6E4A               	movwf	(??_move+1)^0,c
  3096   001238  0E0F               	movlw	15
  3097   00123A  6E49               	movwf	??_move^0,c
  3098   00123C  0EF1               	movlw	241
  3099   00123E                     u4037:
  3100   00123E  2EE8               	decfsz	wreg,f,c
  3101   001240  D7FE               	bra	u4037
  3102   001242  2E49               	decfsz	??_move^0,f,c
  3103   001244  D7FC               	bra	u4037
  3104   001246  2E4A               	decfsz	(??_move+1)^0,f,c
  3105   001248  D7FA               	bra	u4037
  3106   00124A  0000               	nop	
  3107   00124C                     
  3108                           ;dc_motor.c: 142:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  3109   00124C  C060  F023         	movff	move@mL,reverseOneSquare@mL
  3110   001250  C061  F024         	movff	move@mL+1,reverseOneSquare@mL+1
  3111   001254  C062  F025         	movff	move@mR,reverseOneSquare@mR
  3112   001258  C063  F026         	movff	move@mR+1,reverseOneSquare@mR+1
  3113   00125C  C06A  F027         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  3114   001260  C06B  F028         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  3115   001264  C06C  F029         	movff	move@reverseDuration+1,reverseOneSquare@reverseDuration+1
  3116   001268  C06D  F02A         	movff	move@straightRamp,reverseOneSquare@straightRamp
  3117   00126C  EC9D  F020         	call	_reverseOneSquare	;wreg free
  3118                           
  3119                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3120   001270  0E05               	movlw	5
  3121   001272  6E4A               	movwf	(??_move+1)^0,c
  3122   001274  0E0F               	movlw	15
  3123   001276  6E49               	movwf	??_move^0,c
  3124   001278  0EF1               	movlw	241
  3125   00127A                     u4047:
  3126   00127A  2EE8               	decfsz	wreg,f,c
  3127   00127C  D7FE               	bra	u4047
  3128   00127E  2E49               	decfsz	??_move^0,f,c
  3129   001280  D7FC               	bra	u4047
  3130   001282  2E4A               	decfsz	(??_move+1)^0,f,c
  3131   001284  D7FA               	bra	u4047
  3132   001286  0000               	nop	
  3133   001288                     
  3134                           ;dc_motor.c: 144:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3135   001288  C060  F023         	movff	move@mL,turnLeft@mL
  3136   00128C  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3137   001290  C062  F025         	movff	move@mR,turnLeft@mR
  3138   001294  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3139   001298  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3140   00129C  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3141   0012A0  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3142   0012A4  EC79  F022         	call	_turnLeft	;wreg free
  3143   0012A8                     
  3144                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3145   0012A8  0E05               	movlw	5
  3146   0012AA  6E4A               	movwf	(??_move+1)^0,c
  3147   0012AC  0E0F               	movlw	15
  3148   0012AE  6E49               	movwf	??_move^0,c
  3149   0012B0  0EF1               	movlw	241
  3150   0012B2                     u4057:
  3151   0012B2  2EE8               	decfsz	wreg,f,c
  3152   0012B4  D7FE               	bra	u4057
  3153   0012B6  2E49               	decfsz	??_move^0,f,c
  3154   0012B8  D7FC               	bra	u4057
  3155   0012BA  2E4A               	decfsz	(??_move+1)^0,f,c
  3156   0012BC  D7FA               	bra	u4057
  3157   0012BE  0000               	nop	
  3158                           
  3159                           ;dc_motor.c: 146:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3160   0012C0  C060  F023         	movff	move@mL,turnLeft@mL
  3161   0012C4  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3162   0012C8  C062  F025         	movff	move@mR,turnLeft@mR
  3163   0012CC  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3164   0012D0  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3165   0012D4  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3166   0012D8  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3167   0012DC  EC79  F022         	call	_turnLeft	;wreg free
  3168   0012E0                     
  3169                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3170   0012E0  0E05               	movlw	5
  3171   0012E2  6E4A               	movwf	(??_move+1)^0,c
  3172   0012E4  0E0F               	movlw	15
  3173   0012E6  6E49               	movwf	??_move^0,c
  3174   0012E8  0EF1               	movlw	241
  3175   0012EA                     u4067:
  3176   0012EA  2EE8               	decfsz	wreg,f,c
  3177   0012EC  D7FE               	bra	u4067
  3178   0012EE  2E49               	decfsz	??_move^0,f,c
  3179   0012F0  D7FC               	bra	u4067
  3180   0012F2  2E4A               	decfsz	(??_move+1)^0,f,c
  3181   0012F4  D7FA               	bra	u4067
  3182   0012F6  0000               	nop	
  3183   0012F8                     
  3184                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3185   0012F8  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3186   0012FC  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3187   001300  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3188   001304  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3189   001308  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3190   00130C  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3191   001310  EC26  F025         	call	_fullSpeedAhead	;wreg free
  3192                           
  3193                           ;dc_motor.c: 149:     }
  3194   001314  EF1D  F00B         	goto	l567
  3195   001318                     l4173:
  3196                           
  3197                           ; BSR set to: 0
  3198   001318  0E06               	movlw	6
  3199   00131A  1964               	xorwf	move@color& (0+255),w,b
  3200   00131C  A4D8               	btfss	status,2,c
  3201   00131E  EF93  F009         	goto	u3181
  3202   001322  EF95  F009         	goto	u3180
  3203   001326                     u3181:
  3204   001326  EF13  F00A         	goto	l4189
  3205   00132A                     u3180:
  3206   00132A                     
  3207                           ; BSR set to: 0
  3208                           ;dc_motor.c: 152:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3209   00132A  C060  F023         	movff	move@mL,reverseShort@mL
  3210   00132E  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3211   001332  C062  F025         	movff	move@mR,reverseShort@mR
  3212   001336  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3213   00133A  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3214   00133E  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3215   001342  ECAE  F01E         	call	_reverseShort	;wreg free
  3216   001346                     
  3217                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3218   001346  0E05               	movlw	5
  3219   001348  6E4A               	movwf	(??_move+1)^0,c
  3220   00134A  0E0F               	movlw	15
  3221   00134C  6E49               	movwf	??_move^0,c
  3222   00134E  0EF1               	movlw	241
  3223   001350                     u4077:
  3224   001350  2EE8               	decfsz	wreg,f,c
  3225   001352  D7FE               	bra	u4077
  3226   001354  2E49               	decfsz	??_move^0,f,c
  3227   001356  D7FC               	bra	u4077
  3228   001358  2E4A               	decfsz	(??_move+1)^0,f,c
  3229   00135A  D7FA               	bra	u4077
  3230   00135C  0000               	nop	
  3231   00135E                     
  3232                           ;dc_motor.c: 154:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3233   00135E  C060  F023         	movff	move@mL,turnRight@mL
  3234   001362  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3235   001366  C062  F025         	movff	move@mR,turnRight@mR
  3236   00136A  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3237   00136E  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3238   001372  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3239   001376  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3240   00137A  EC8C  F021         	call	_turnRight	;wreg free
  3241                           
  3242                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3243   00137E  0E05               	movlw	5
  3244   001380  6E4A               	movwf	(??_move+1)^0,c
  3245   001382  0E0F               	movlw	15
  3246   001384  6E49               	movwf	??_move^0,c
  3247   001386  0EF1               	movlw	241
  3248   001388                     u4087:
  3249   001388  2EE8               	decfsz	wreg,f,c
  3250   00138A  D7FE               	bra	u4087
  3251   00138C  2E49               	decfsz	??_move^0,f,c
  3252   00138E  D7FC               	bra	u4087
  3253   001390  2E4A               	decfsz	(??_move+1)^0,f,c
  3254   001392  D7FA               	bra	u4087
  3255   001394  0000               	nop	
  3256   001396                     
  3257                           ;dc_motor.c: 156:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3258   001396  C060  F023         	movff	move@mL,turnRight@mL
  3259   00139A  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3260   00139E  C062  F025         	movff	move@mR,turnRight@mR
  3261   0013A2  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3262   0013A6  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3263   0013AA  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3264   0013AE  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3265   0013B2  EC8C  F021         	call	_turnRight	;wreg free
  3266   0013B6                     
  3267                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3268   0013B6  0E05               	movlw	5
  3269   0013B8  6E4A               	movwf	(??_move+1)^0,c
  3270   0013BA  0E0F               	movlw	15
  3271   0013BC  6E49               	movwf	??_move^0,c
  3272   0013BE  0EF1               	movlw	241
  3273   0013C0                     u4097:
  3274   0013C0  2EE8               	decfsz	wreg,f,c
  3275   0013C2  D7FE               	bra	u4097
  3276   0013C4  2E49               	decfsz	??_move^0,f,c
  3277   0013C6  D7FC               	bra	u4097
  3278   0013C8  2E4A               	decfsz	(??_move+1)^0,f,c
  3279   0013CA  D7FA               	bra	u4097
  3280   0013CC  0000               	nop	
  3281                           
  3282                           ;dc_motor.c: 158:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3283   0013CE  C060  F023         	movff	move@mL,turnRight@mL
  3284   0013D2  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3285   0013D6  C062  F025         	movff	move@mR,turnRight@mR
  3286   0013DA  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3287   0013DE  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3288   0013E2  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3289   0013E6  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3290   0013EA  EC8C  F021         	call	_turnRight	;wreg free
  3291   0013EE                     
  3292                           ;dc_motor.c: 159:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3293   0013EE  0E05               	movlw	5
  3294   0013F0  6E4A               	movwf	(??_move+1)^0,c
  3295   0013F2  0E0F               	movlw	15
  3296   0013F4  6E49               	movwf	??_move^0,c
  3297   0013F6  0EF1               	movlw	241
  3298   0013F8                     u4107:
  3299   0013F8  2EE8               	decfsz	wreg,f,c
  3300   0013FA  D7FE               	bra	u4107
  3301   0013FC  2E49               	decfsz	??_move^0,f,c
  3302   0013FE  D7FC               	bra	u4107
  3303   001400  2E4A               	decfsz	(??_move+1)^0,f,c
  3304   001402  D7FA               	bra	u4107
  3305   001404  0000               	nop	
  3306   001406                     
  3307                           ;dc_motor.c: 160:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3308   001406  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3309   00140A  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3310   00140E  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3311   001412  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3312   001416  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3313   00141A  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3314   00141E  EC26  F025         	call	_fullSpeedAhead	;wreg free
  3315                           
  3316                           ;dc_motor.c: 161:     }
  3317   001422  EF1D  F00B         	goto	l567
  3318   001426                     l4189:
  3319                           
  3320                           ; BSR set to: 0
  3321   001426  0E07               	movlw	7
  3322   001428  1964               	xorwf	move@color& (0+255),w,b
  3323   00142A  A4D8               	btfss	status,2,c
  3324   00142C  EF1A  F00A         	goto	u3191
  3325   001430  EF1C  F00A         	goto	u3190
  3326   001434                     u3191:
  3327   001434  EF9A  F00A         	goto	l4205
  3328   001438                     u3190:
  3329   001438                     
  3330                           ; BSR set to: 0
  3331                           ;dc_motor.c: 164:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3332   001438  C060  F023         	movff	move@mL,reverseShort@mL
  3333   00143C  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3334   001440  C062  F025         	movff	move@mR,reverseShort@mR
  3335   001444  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3336   001448  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3337   00144C  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3338   001450  ECAE  F01E         	call	_reverseShort	;wreg free
  3339   001454                     
  3340                           ;dc_motor.c: 165:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3341   001454  0E05               	movlw	5
  3342   001456  6E4A               	movwf	(??_move+1)^0,c
  3343   001458  0E0F               	movlw	15
  3344   00145A  6E49               	movwf	??_move^0,c
  3345   00145C  0EF1               	movlw	241
  3346   00145E                     u4117:
  3347   00145E  2EE8               	decfsz	wreg,f,c
  3348   001460  D7FE               	bra	u4117
  3349   001462  2E49               	decfsz	??_move^0,f,c
  3350   001464  D7FC               	bra	u4117
  3351   001466  2E4A               	decfsz	(??_move+1)^0,f,c
  3352   001468  D7FA               	bra	u4117
  3353   00146A  0000               	nop	
  3354   00146C                     
  3355                           ;dc_motor.c: 166:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3356   00146C  C060  F023         	movff	move@mL,turnLeft@mL
  3357   001470  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3358   001474  C062  F025         	movff	move@mR,turnLeft@mR
  3359   001478  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3360   00147C  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3361   001480  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3362   001484  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3363   001488  EC79  F022         	call	_turnLeft	;wreg free
  3364                           
  3365                           ;dc_motor.c: 167:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3366   00148C  0E05               	movlw	5
  3367   00148E  6E4A               	movwf	(??_move+1)^0,c
  3368   001490  0E0F               	movlw	15
  3369   001492  6E49               	movwf	??_move^0,c
  3370   001494  0EF1               	movlw	241
  3371   001496                     u4127:
  3372   001496  2EE8               	decfsz	wreg,f,c
  3373   001498  D7FE               	bra	u4127
  3374   00149A  2E49               	decfsz	??_move^0,f,c
  3375   00149C  D7FC               	bra	u4127
  3376   00149E  2E4A               	decfsz	(??_move+1)^0,f,c
  3377   0014A0  D7FA               	bra	u4127
  3378   0014A2  0000               	nop	
  3379   0014A4                     
  3380                           ;dc_motor.c: 168:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3381   0014A4  C060  F023         	movff	move@mL,turnLeft@mL
  3382   0014A8  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3383   0014AC  C062  F025         	movff	move@mR,turnLeft@mR
  3384   0014B0  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3385   0014B4  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3386   0014B8  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3387   0014BC  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3388   0014C0  EC79  F022         	call	_turnLeft	;wreg free
  3389   0014C4                     
  3390                           ;dc_motor.c: 169:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3391   0014C4  0E05               	movlw	5
  3392   0014C6  6E4A               	movwf	(??_move+1)^0,c
  3393   0014C8  0E0F               	movlw	15
  3394   0014CA  6E49               	movwf	??_move^0,c
  3395   0014CC  0EF1               	movlw	241
  3396   0014CE                     u4137:
  3397   0014CE  2EE8               	decfsz	wreg,f,c
  3398   0014D0  D7FE               	bra	u4137
  3399   0014D2  2E49               	decfsz	??_move^0,f,c
  3400   0014D4  D7FC               	bra	u4137
  3401   0014D6  2E4A               	decfsz	(??_move+1)^0,f,c
  3402   0014D8  D7FA               	bra	u4137
  3403   0014DA  0000               	nop	
  3404                           
  3405                           ;dc_motor.c: 170:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3406   0014DC  C060  F023         	movff	move@mL,turnLeft@mL
  3407   0014E0  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3408   0014E4  C062  F025         	movff	move@mR,turnLeft@mR
  3409   0014E8  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3410   0014EC  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3411   0014F0  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3412   0014F4  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3413   0014F8  EC79  F022         	call	_turnLeft	;wreg free
  3414   0014FC                     
  3415                           ;dc_motor.c: 171:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3416   0014FC  0E05               	movlw	5
  3417   0014FE  6E4A               	movwf	(??_move+1)^0,c
  3418   001500  0E0F               	movlw	15
  3419   001502  6E49               	movwf	??_move^0,c
  3420   001504  0EF1               	movlw	241
  3421   001506                     u4147:
  3422   001506  2EE8               	decfsz	wreg,f,c
  3423   001508  D7FE               	bra	u4147
  3424   00150A  2E49               	decfsz	??_move^0,f,c
  3425   00150C  D7FC               	bra	u4147
  3426   00150E  2E4A               	decfsz	(??_move+1)^0,f,c
  3427   001510  D7FA               	bra	u4147
  3428   001512  0000               	nop	
  3429   001514                     
  3430                           ;dc_motor.c: 172:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3431   001514  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3432   001518  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3433   00151C  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3434   001520  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3435   001524  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3436   001528  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3437   00152C  EC26  F025         	call	_fullSpeedAhead	;wreg free
  3438                           
  3439                           ;dc_motor.c: 173:     }
  3440   001530  EF1D  F00B         	goto	l567
  3441   001534                     l4205:
  3442                           
  3443                           ; BSR set to: 0
  3444   001534  0E08               	movlw	8
  3445   001536  1964               	xorwf	move@color& (0+255),w,b
  3446   001538  A4D8               	btfss	status,2,c
  3447   00153A  EFA1  F00A         	goto	u3201
  3448   00153E  EFA3  F00A         	goto	u3200
  3449   001542                     u3201:
  3450   001542  EFE1  F00A         	goto	l4213
  3451   001546                     u3200:
  3452   001546                     
  3453                           ; BSR set to: 0
  3454                           ;dc_motor.c: 176:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3455   001546  C060  F023         	movff	move@mL,reverseShort@mL
  3456   00154A  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3457   00154E  C062  F025         	movff	move@mR,reverseShort@mR
  3458   001552  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3459   001556  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3460   00155A  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3461   00155E  ECAE  F01E         	call	_reverseShort	;wreg free
  3462   001562                     
  3463                           ;dc_motor.c: 177:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3464   001562  0E05               	movlw	5
  3465   001564  6E4A               	movwf	(??_move+1)^0,c
  3466   001566  0E0F               	movlw	15
  3467   001568  6E49               	movwf	??_move^0,c
  3468   00156A  0EF1               	movlw	241
  3469   00156C                     u4157:
  3470   00156C  2EE8               	decfsz	wreg,f,c
  3471   00156E  D7FE               	bra	u4157
  3472   001570  2E49               	decfsz	??_move^0,f,c
  3473   001572  D7FC               	bra	u4157
  3474   001574  2E4A               	decfsz	(??_move+1)^0,f,c
  3475   001576  D7FA               	bra	u4157
  3476   001578  0000               	nop	
  3477   00157A                     
  3478                           ;dc_motor.c: 178:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3479   00157A  C060  F032         	movff	move@mL,returnHome@mL
  3480   00157E  C061  F033         	movff	move@mL+1,returnHome@mL+1
  3481   001582  C062  F034         	movff	move@mR,returnHome@mR
  3482   001586  C063  F035         	movff	move@mR+1,returnHome@mR+1
  3483   00158A  C065  F036         	movff	move@moveSequence,returnHome@moveSequence
  3484   00158E  C066  F037         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3485   001592  C067  F038         	movff	move@straightTime,returnHome@straightTime
  3486   001596  C068  F039         	movff	move@straightTime+1,returnHome@straightTime+1
  3487   00159A  C069  F03A         	movff	move@curMove,returnHome@curMove
  3488   00159E  C06A  F03B         	movff	move@straightSpeed,returnHome@straightSpeed
  3489   0015A2  C06B  F03C         	movff	move@reverseDuration,returnHome@reverseDuration
  3490   0015A6  C06C  F03D         	movff	move@reverseDuration+1,returnHome@reverseDuration+1
  3491   0015AA  C06D  F03E         	movff	move@straightRamp,returnHome@straightRamp
  3492   0015AE  C06E  F03F         	movff	move@turnSpeed,returnHome@turnSpeed
  3493   0015B2  C06F  F040         	movff	move@turnDuration,returnHome@turnDuration
  3494   0015B6  C070  F041         	movff	move@turnRamp,returnHome@turnRamp
  3495   0015BA  EC1E  F00B         	call	_returnHome	;wreg free
  3496                           
  3497                           ;dc_motor.c: 179:     }
  3498   0015BE  EF1D  F00B         	goto	l567
  3499   0015C2                     l4213:
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;dc_motor.c: 182:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3503   0015C2  C060  F023         	movff	move@mL,reverseShort@mL
  3504   0015C6  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3505   0015CA  C062  F025         	movff	move@mR,reverseShort@mR
  3506   0015CE  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3507   0015D2  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3508   0015D6  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3509   0015DA  ECAE  F01E         	call	_reverseShort	;wreg free
  3510   0015DE                     
  3511                           ;dc_motor.c: 183:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3512   0015DE  0E05               	movlw	5
  3513   0015E0  6E4A               	movwf	(??_move+1)^0,c
  3514   0015E2  0E0F               	movlw	15
  3515   0015E4  6E49               	movwf	??_move^0,c
  3516   0015E6  0EF1               	movlw	241
  3517   0015E8                     u4167:
  3518   0015E8  2EE8               	decfsz	wreg,f,c
  3519   0015EA  D7FE               	bra	u4167
  3520   0015EC  2E49               	decfsz	??_move^0,f,c
  3521   0015EE  D7FC               	bra	u4167
  3522   0015F0  2E4A               	decfsz	(??_move+1)^0,f,c
  3523   0015F2  D7FA               	bra	u4167
  3524   0015F4  0000               	nop	
  3525   0015F6                     
  3526                           ;dc_motor.c: 184:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3527   0015F6  C060  F032         	movff	move@mL,returnHome@mL
  3528   0015FA  C061  F033         	movff	move@mL+1,returnHome@mL+1
  3529   0015FE  C062  F034         	movff	move@mR,returnHome@mR
  3530   001602  C063  F035         	movff	move@mR+1,returnHome@mR+1
  3531   001606  C065  F036         	movff	move@moveSequence,returnHome@moveSequence
  3532   00160A  C066  F037         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3533   00160E  C067  F038         	movff	move@straightTime,returnHome@straightTime
  3534   001612  C068  F039         	movff	move@straightTime+1,returnHome@straightTime+1
  3535   001616  C069  F03A         	movff	move@curMove,returnHome@curMove
  3536   00161A  C06A  F03B         	movff	move@straightSpeed,returnHome@straightSpeed
  3537   00161E  C06B  F03C         	movff	move@reverseDuration,returnHome@reverseDuration
  3538   001622  C06C  F03D         	movff	move@reverseDuration+1,returnHome@reverseDuration+1
  3539   001626  C06D  F03E         	movff	move@straightRamp,returnHome@straightRamp
  3540   00162A  C06E  F03F         	movff	move@turnSpeed,returnHome@turnSpeed
  3541   00162E  C06F  F040         	movff	move@turnDuration,returnHome@turnDuration
  3542   001632  C070  F041         	movff	move@turnRamp,returnHome@turnRamp
  3543   001636  EC1E  F00B         	call	_returnHome	;wreg free
  3544   00163A                     l567:
  3545   00163A  0012               	return		;funcret
  3546   00163C                     __end_of_move:
  3547                           	callstack 0
  3548                           
  3549 ;; *************** function _reverseShort *****************
  3550 ;; Defined at:
  3551 ;;		line 564 in file "dc_motor.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  3554 ;;		 -> main@motorL(10), 
  3555 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  3556 ;;		 -> main@motorR(10), 
  3557 ;;  straightSpee    1   38[COMRAM] unsigned char 
  3558 ;;  straightRamp    1   39[COMRAM] unsigned char 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;  cur_power       2   46[COMRAM] int 
  3561 ;;  i               2   44[COMRAM] int 
  3562 ;;  shortReverse    1   43[COMRAM] unsigned char 
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3572 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3573 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3574 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3575 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3576 ;;Total ram usage:       14 bytes
  3577 ;; Hardware stack levels used: 1
  3578 ;; Hardware stack levels required when called: 8
  3579 ;; This function calls:
  3580 ;;		_setMotorPWM
  3581 ;; This function is called by:
  3582 ;;		_move
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text3
  3587   003D5C                     __ptext3:
  3588                           	callstack 0
  3589   003D5C                     _reverseShort:
  3590                           	callstack 21
  3591   003D5C                     
  3592                           ;dc_motor.c: 564: void reverseShort(DC_motor *mL, DC_motor *mR, char straightSpeed, unsi
      +                          gned char straightRamp);dc_motor.c: 565: {;dc_motor.c: 566:     unsigned char shortRever
      +                          seDuration = 20;
  3593   003D5C  0E14               	movlw	20
  3594   003D5E  6E2C               	movwf	reverseShort@shortReverseDuration^0,c
  3595   003D60                     
  3596                           ;dc_motor.c: 568:     mL->direction = 0;
  3597   003D60  EE20 F001          	lfsr	2,1
  3598   003D64  5023               	movf	reverseShort@mL^0,w,c
  3599   003D66  26D9               	addwf	fsr2l,f,c
  3600   003D68  5024               	movf	(reverseShort@mL+1)^0,w,c
  3601   003D6A  22DA               	addwfc	fsr2h,f,c
  3602   003D6C  6ADF               	clrf	indf2,c
  3603   003D6E                     
  3604                           ;dc_motor.c: 569:     mR->direction = 0;
  3605   003D6E  EE20 F001          	lfsr	2,1
  3606   003D72  5025               	movf	reverseShort@mR^0,w,c
  3607   003D74  26D9               	addwf	fsr2l,f,c
  3608   003D76  5026               	movf	(reverseShort@mR+1)^0,w,c
  3609   003D78  22DA               	addwfc	fsr2h,f,c
  3610   003D7A  6ADF               	clrf	indf2,c
  3611                           
  3612                           ;dc_motor.c: 570:     int i;;dc_motor.c: 571:     int cur_power;;dc_motor.c: 572:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  3613   003D7C  0E00               	movlw	0
  3614   003D7E  6E30               	movwf	(reverseShort@cur_power+1)^0,c
  3615   003D80  0E01               	movlw	1
  3616   003D82  6E2F               	movwf	reverseShort@cur_power^0,c
  3617   003D84  EF0E  F01F         	goto	l3501
  3618   003D88                     l3487:
  3619                           
  3620                           ;dc_motor.c: 573:         mL->power = cur_power+mL->compensation;
  3621   003D88  EE20 F009          	lfsr	2,9
  3622   003D8C  5023               	movf	reverseShort@mL^0,w,c
  3623   003D8E  26D9               	addwf	fsr2l,f,c
  3624   003D90  5024               	movf	(reverseShort@mL+1)^0,w,c
  3625   003D92  22DA               	addwfc	fsr2h,f,c
  3626   003D94  50DF               	movf	indf2,w,c
  3627   003D96  242F               	addwf	reverseShort@cur_power^0,w,c
  3628   003D98  C023  FFD9         	movff	reverseShort@mL,fsr2l
  3629   003D9C  C024  FFDA         	movff	reverseShort@mL+1,fsr2h
  3630   003DA0  6EDF               	movwf	indf2,c
  3631                           
  3632                           ;dc_motor.c: 574:         mR->power = cur_power+mR->compensation;
  3633   003DA2  EE20 F009          	lfsr	2,9
  3634   003DA6  5025               	movf	reverseShort@mR^0,w,c
  3635   003DA8  26D9               	addwf	fsr2l,f,c
  3636   003DAA  5026               	movf	(reverseShort@mR+1)^0,w,c
  3637   003DAC  22DA               	addwfc	fsr2h,f,c
  3638   003DAE  50DF               	movf	indf2,w,c
  3639   003DB0  242F               	addwf	reverseShort@cur_power^0,w,c
  3640   003DB2  C025  FFD9         	movff	reverseShort@mR,fsr2l
  3641   003DB6  C026  FFDA         	movff	reverseShort@mR+1,fsr2h
  3642   003DBA  6EDF               	movwf	indf2,c
  3643   003DBC                     
  3644                           ;dc_motor.c: 575:         setMotorPWM(mL);
  3645   003DBC  C023  F01D         	movff	reverseShort@mL,setMotorPWM@m
  3646   003DC0  C024  F01E         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3647   003DC4  EC66  F023         	call	_setMotorPWM	;wreg free
  3648   003DC8                     
  3649                           ;dc_motor.c: 576:         setMotorPWM(mR);
  3650   003DC8  C025  F01D         	movff	reverseShort@mR,setMotorPWM@m
  3651   003DCC  C026  F01E         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3652   003DD0  EC66  F023         	call	_setMotorPWM	;wreg free
  3653   003DD4                     
  3654                           ;dc_motor.c: 577:         for (i=0;i<straightRamp;i++) {
  3655   003DD4  0E00               	movlw	0
  3656   003DD6  6E2E               	movwf	(reverseShort@i+1)^0,c
  3657   003DD8  0E00               	movlw	0
  3658   003DDA  6E2D               	movwf	reverseShort@i^0,c
  3659   003DDC  EFFA  F01E         	goto	l721
  3660   003DE0                     l3495:
  3661                           
  3662                           ;dc_motor.c: 578:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3663   003DE0  0E68               	movlw	104
  3664   003DE2  6E29               	movwf	??_reverseShort^0,c
  3665   003DE4  0EE4               	movlw	228
  3666   003DE6                     u4177:
  3667   003DE6  2EE8               	decfsz	wreg,f,c
  3668   003DE8  D7FE               	bra	u4177
  3669   003DEA  2E29               	decfsz	??_reverseShort^0,f,c
  3670   003DEC  D7FC               	bra	u4177
  3671   003DEE  D000               	nop2	
  3672   003DF0                     
  3673                           ;dc_motor.c: 579:         }
  3674   003DF0  4A2D               	infsnz	reverseShort@i^0,f,c
  3675   003DF2  2A2E               	incf	(reverseShort@i+1)^0,f,c
  3676   003DF4                     l721:
  3677   003DF4  5028               	movf	reverseShort@straightRamp^0,w,c
  3678   003DF6  6E29               	movwf	??_reverseShort^0,c
  3679   003DF8  6A2A               	clrf	(??_reverseShort+1)^0,c
  3680   003DFA  5029               	movf	??_reverseShort^0,w,c
  3681   003DFC  5C2D               	subwf	reverseShort@i^0,w,c
  3682   003DFE  502E               	movf	(reverseShort@i+1)^0,w,c
  3683   003E00  0A80               	xorlw	128
  3684   003E02  6E2B               	movwf	(??_reverseShort+2)^0,c
  3685   003E04  502A               	movf	(??_reverseShort+1)^0,w,c
  3686   003E06  0A80               	xorlw	128
  3687   003E08  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3688   003E0A  A0D8               	btfss	status,0,c
  3689   003E0C  EF0A  F01F         	goto	u2331
  3690   003E10  EF0C  F01F         	goto	u2330
  3691   003E14                     u2331:
  3692   003E14  EFF0  F01E         	goto	l3495
  3693   003E18                     u2330:
  3694   003E18                     
  3695                           ;dc_motor.c: 580:     }
  3696   003E18  4A2F               	infsnz	reverseShort@cur_power^0,f,c
  3697   003E1A  2A30               	incf	(reverseShort@cur_power+1)^0,f,c
  3698   003E1C                     l3501:
  3699   003E1C  5027               	movf	reverseShort@straightSpeed^0,w,c
  3700   003E1E  6E29               	movwf	??_reverseShort^0,c
  3701   003E20  6A2A               	clrf	(??_reverseShort+1)^0,c
  3702   003E22  502F               	movf	reverseShort@cur_power^0,w,c
  3703   003E24  5C29               	subwf	??_reverseShort^0,w,c
  3704   003E26  502A               	movf	(??_reverseShort+1)^0,w,c
  3705   003E28  0A80               	xorlw	128
  3706   003E2A  6E2B               	movwf	(??_reverseShort+2)^0,c
  3707   003E2C  5030               	movf	(reverseShort@cur_power+1)^0,w,c
  3708   003E2E  0A80               	xorlw	128
  3709   003E30  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3710   003E32  B0D8               	btfsc	status,0,c
  3711   003E34  EF1E  F01F         	goto	u2341
  3712   003E38  EF20  F01F         	goto	u2340
  3713   003E3C                     u2341:
  3714   003E3C  EFC4  F01E         	goto	l3487
  3715   003E40                     u2340:
  3716   003E40                     
  3717                           ;dc_motor.c: 582:     for (i=0;i<shortReverseDuration;i++) {
  3718   003E40  0E00               	movlw	0
  3719   003E42  6E2E               	movwf	(reverseShort@i+1)^0,c
  3720   003E44  0E00               	movlw	0
  3721   003E46  6E2D               	movwf	reverseShort@i^0,c
  3722   003E48  EF30  F01F         	goto	l725
  3723   003E4C                     l3505:
  3724                           
  3725                           ;dc_motor.c: 583:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3726   003E4C  0E68               	movlw	104
  3727   003E4E  6E29               	movwf	??_reverseShort^0,c
  3728   003E50  0EE4               	movlw	228
  3729   003E52                     u4187:
  3730   003E52  2EE8               	decfsz	wreg,f,c
  3731   003E54  D7FE               	bra	u4187
  3732   003E56  2E29               	decfsz	??_reverseShort^0,f,c
  3733   003E58  D7FC               	bra	u4187
  3734   003E5A  D000               	nop2	
  3735   003E5C                     
  3736                           ;dc_motor.c: 584:         }
  3737   003E5C  4A2D               	infsnz	reverseShort@i^0,f,c
  3738   003E5E  2A2E               	incf	(reverseShort@i+1)^0,f,c
  3739   003E60                     l725:
  3740   003E60  502C               	movf	reverseShort@shortReverseDuration^0,w,c
  3741   003E62  6E29               	movwf	??_reverseShort^0,c
  3742   003E64  6A2A               	clrf	(??_reverseShort+1)^0,c
  3743   003E66  5029               	movf	??_reverseShort^0,w,c
  3744   003E68  5C2D               	subwf	reverseShort@i^0,w,c
  3745   003E6A  502E               	movf	(reverseShort@i+1)^0,w,c
  3746   003E6C  0A80               	xorlw	128
  3747   003E6E  6E2B               	movwf	(??_reverseShort+2)^0,c
  3748   003E70  502A               	movf	(??_reverseShort+1)^0,w,c
  3749   003E72  0A80               	xorlw	128
  3750   003E74  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3751   003E76  A0D8               	btfss	status,0,c
  3752   003E78  EF40  F01F         	goto	u2351
  3753   003E7C  EF42  F01F         	goto	u2350
  3754   003E80                     u2351:
  3755   003E80  EF26  F01F         	goto	l3505
  3756   003E84                     u2350:
  3757   003E84                     
  3758                           ;dc_motor.c: 586:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  3759   003E84  C027  F02F         	movff	reverseShort@straightSpeed,reverseShort@cur_power
  3760   003E88  6A30               	clrf	(reverseShort@cur_power+1)^0,c
  3761   003E8A                     l3509:
  3762   003E8A  BE30               	btfsc	(reverseShort@cur_power+1)^0,7,c
  3763   003E8C  EF4C  F01F         	goto	u2360
  3764   003E90  EF4A  F01F         	goto	u2361
  3765   003E94                     u2361:
  3766   003E94  EF4E  F01F         	goto	l3513
  3767   003E98                     u2360:
  3768   003E98  EF9B  F01F         	goto	l3529
  3769   003E9C                     l3513:
  3770                           
  3771                           ;dc_motor.c: 587:         mL->power = cur_power+mL->compensation;
  3772   003E9C  EE20 F009          	lfsr	2,9
  3773   003EA0  5023               	movf	reverseShort@mL^0,w,c
  3774   003EA2  26D9               	addwf	fsr2l,f,c
  3775   003EA4  5024               	movf	(reverseShort@mL+1)^0,w,c
  3776   003EA6  22DA               	addwfc	fsr2h,f,c
  3777   003EA8  50DF               	movf	indf2,w,c
  3778   003EAA  242F               	addwf	reverseShort@cur_power^0,w,c
  3779   003EAC  C023  FFD9         	movff	reverseShort@mL,fsr2l
  3780   003EB0  C024  FFDA         	movff	reverseShort@mL+1,fsr2h
  3781   003EB4  6EDF               	movwf	indf2,c
  3782                           
  3783                           ;dc_motor.c: 588:         mR->power = cur_power+mR->compensation;
  3784   003EB6  EE20 F009          	lfsr	2,9
  3785   003EBA  5025               	movf	reverseShort@mR^0,w,c
  3786   003EBC  26D9               	addwf	fsr2l,f,c
  3787   003EBE  5026               	movf	(reverseShort@mR+1)^0,w,c
  3788   003EC0  22DA               	addwfc	fsr2h,f,c
  3789   003EC2  50DF               	movf	indf2,w,c
  3790   003EC4  242F               	addwf	reverseShort@cur_power^0,w,c
  3791   003EC6  C025  FFD9         	movff	reverseShort@mR,fsr2l
  3792   003ECA  C026  FFDA         	movff	reverseShort@mR+1,fsr2h
  3793   003ECE  6EDF               	movwf	indf2,c
  3794   003ED0                     
  3795                           ;dc_motor.c: 589:         setMotorPWM(mL);
  3796   003ED0  C023  F01D         	movff	reverseShort@mL,setMotorPWM@m
  3797   003ED4  C024  F01E         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3798   003ED8  EC66  F023         	call	_setMotorPWM	;wreg free
  3799   003EDC                     
  3800                           ;dc_motor.c: 590:         setMotorPWM(mR);
  3801   003EDC  C025  F01D         	movff	reverseShort@mR,setMotorPWM@m
  3802   003EE0  C026  F01E         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3803   003EE4  EC66  F023         	call	_setMotorPWM	;wreg free
  3804   003EE8                     
  3805                           ;dc_motor.c: 591:         for (i=0;i<straightRamp;i++) {
  3806   003EE8  0E00               	movlw	0
  3807   003EEA  6E2E               	movwf	(reverseShort@i+1)^0,c
  3808   003EEC  0E00               	movlw	0
  3809   003EEE  6E2D               	movwf	reverseShort@i^0,c
  3810   003EF0  EF84  F01F         	goto	l730
  3811   003EF4                     l3521:
  3812                           
  3813                           ;dc_motor.c: 592:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3814   003EF4  0E68               	movlw	104
  3815   003EF6  6E29               	movwf	??_reverseShort^0,c
  3816   003EF8  0EE4               	movlw	228
  3817   003EFA                     u4197:
  3818   003EFA  2EE8               	decfsz	wreg,f,c
  3819   003EFC  D7FE               	bra	u4197
  3820   003EFE  2E29               	decfsz	??_reverseShort^0,f,c
  3821   003F00  D7FC               	bra	u4197
  3822   003F02  D000               	nop2	
  3823   003F04                     
  3824                           ;dc_motor.c: 593:         }
  3825   003F04  4A2D               	infsnz	reverseShort@i^0,f,c
  3826   003F06  2A2E               	incf	(reverseShort@i+1)^0,f,c
  3827   003F08                     l730:
  3828   003F08  5028               	movf	reverseShort@straightRamp^0,w,c
  3829   003F0A  6E29               	movwf	??_reverseShort^0,c
  3830   003F0C  6A2A               	clrf	(??_reverseShort+1)^0,c
  3831   003F0E  5029               	movf	??_reverseShort^0,w,c
  3832   003F10  5C2D               	subwf	reverseShort@i^0,w,c
  3833   003F12  502E               	movf	(reverseShort@i+1)^0,w,c
  3834   003F14  0A80               	xorlw	128
  3835   003F16  6E2B               	movwf	(??_reverseShort+2)^0,c
  3836   003F18  502A               	movf	(??_reverseShort+1)^0,w,c
  3837   003F1A  0A80               	xorlw	128
  3838   003F1C  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3839   003F1E  A0D8               	btfss	status,0,c
  3840   003F20  EF94  F01F         	goto	u2371
  3841   003F24  EF96  F01F         	goto	u2370
  3842   003F28                     u2371:
  3843   003F28  EF7A  F01F         	goto	l3521
  3844   003F2C                     u2370:
  3845   003F2C                     
  3846                           ;dc_motor.c: 594:     }
  3847   003F2C  062F               	decf	reverseShort@cur_power^0,f,c
  3848   003F2E  A0D8               	btfss	status,0,c
  3849   003F30  0630               	decf	(reverseShort@cur_power+1)^0,f,c
  3850   003F32  EF45  F01F         	goto	l3509
  3851   003F36                     l3529:
  3852                           
  3853                           ;dc_motor.c: 595:     mL->power = 0;
  3854   003F36  C023  FFD9         	movff	reverseShort@mL,fsr2l
  3855   003F3A  C024  FFDA         	movff	reverseShort@mL+1,fsr2h
  3856   003F3E  6ADF               	clrf	indf2,c
  3857                           
  3858                           ;dc_motor.c: 596:     mR->power = 0;
  3859   003F40  C025  FFD9         	movff	reverseShort@mR,fsr2l
  3860   003F44  C026  FFDA         	movff	reverseShort@mR+1,fsr2h
  3861   003F48  6ADF               	clrf	indf2,c
  3862   003F4A  0012               	return		;funcret
  3863   003F4C                     __end_of_reverseShort:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function _returnHome *****************
  3867 ;; Defined at:
  3868 ;;		line 189 in file "dc_motor.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  mL              2   49[COMRAM] PTR struct DC_motor
  3871 ;;		 -> main@motorL(10), 
  3872 ;;  mR              2   51[COMRAM] PTR struct DC_motor
  3873 ;;		 -> main@motorR(10), 
  3874 ;;  moveSequence    2   53[COMRAM] PTR unsigned char 
  3875 ;;		 -> main@moveSequence(40), 
  3876 ;;  straightTime    2   55[COMRAM] PTR unsigned int 
  3877 ;;		 -> main@straightTime(82), 
  3878 ;;  curMove         1   57[COMRAM] unsigned char 
  3879 ;;  straightSpee    1   58[COMRAM] unsigned char 
  3880 ;;  reverseDurat    2   59[COMRAM] unsigned int 
  3881 ;;  straightRamp    1   61[COMRAM] unsigned char 
  3882 ;;  turnSpeed       1   62[COMRAM] unsigned char 
  3883 ;;  turnDuration    1   63[COMRAM] unsigned char 
  3884 ;;  turnRamp        1   64[COMRAM] unsigned char 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  i               1   71[COMRAM] unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      void 
  3889 ;; Registers used:
  3890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3896 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3898 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3899 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3900 ;;Total ram usage:       23 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; Hardware stack levels required when called: 9
  3903 ;; This function calls:
  3904 ;;		_fullSpeedAhead
  3905 ;;		_get16bitTMR0val
  3906 ;;		_resetTimer
  3907 ;;		_reverseOneSquare
  3908 ;;		_stop
  3909 ;;		_turnLeft
  3910 ;;		_turnRight
  3911 ;; This function is called by:
  3912 ;;		_move
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text4
  3917   00163C                     __ptext4:
  3918                           	callstack 0
  3919   00163C                     _returnHome:
  3920                           	callstack 20
  3921   00163C                     
  3922                           ;dc_motor.c: 189: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned int reverseDur
      +                          ation, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned 
      +                          char turnRamp);dc_motor.c: 190: {;dc_motor.c: 191:     turnLeft(mL, mR, turnSpeed, turnD
      +                          uration, turnRamp);
  3923   00163C  C032  F023         	movff	returnHome@mL,turnLeft@mL
  3924   001640  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  3925   001644  C034  F025         	movff	returnHome@mR,turnLeft@mR
  3926   001648  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  3927   00164C  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3928   001650  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3929   001654  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3930   001658  EC79  F022         	call	_turnLeft	;wreg free
  3931   00165C                     
  3932                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3933   00165C  0E05               	movlw	5
  3934   00165E  6E43               	movwf	(??_returnHome+1)^0,c
  3935   001660  0E0F               	movlw	15
  3936   001662  6E42               	movwf	??_returnHome^0,c
  3937   001664  0EF1               	movlw	241
  3938   001666                     u4207:
  3939   001666  2EE8               	decfsz	wreg,f,c
  3940   001668  D7FE               	bra	u4207
  3941   00166A  2E42               	decfsz	??_returnHome^0,f,c
  3942   00166C  D7FC               	bra	u4207
  3943   00166E  2E43               	decfsz	(??_returnHome+1)^0,f,c
  3944   001670  D7FA               	bra	u4207
  3945   001672  0000               	nop	
  3946   001674                     
  3947                           ;dc_motor.c: 193:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3948   001674  C032  F023         	movff	returnHome@mL,turnLeft@mL
  3949   001678  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  3950   00167C  C034  F025         	movff	returnHome@mR,turnLeft@mR
  3951   001680  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  3952   001684  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3953   001688  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3954   00168C  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3955   001690  EC79  F022         	call	_turnLeft	;wreg free
  3956                           
  3957                           ;dc_motor.c: 194:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3958   001694  0E05               	movlw	5
  3959   001696  6E43               	movwf	(??_returnHome+1)^0,c
  3960   001698  0E0F               	movlw	15
  3961   00169A  6E42               	movwf	??_returnHome^0,c
  3962   00169C  0EF1               	movlw	241
  3963   00169E                     u4217:
  3964   00169E  2EE8               	decfsz	wreg,f,c
  3965   0016A0  D7FE               	bra	u4217
  3966   0016A2  2E42               	decfsz	??_returnHome^0,f,c
  3967   0016A4  D7FC               	bra	u4217
  3968   0016A6  2E43               	decfsz	(??_returnHome+1)^0,f,c
  3969   0016A8  D7FA               	bra	u4217
  3970   0016AA  0000               	nop	
  3971   0016AC                     
  3972                           ;dc_motor.c: 195:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3973   0016AC  C032  F023         	movff	returnHome@mL,turnLeft@mL
  3974   0016B0  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  3975   0016B4  C034  F025         	movff	returnHome@mR,turnLeft@mR
  3976   0016B8  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  3977   0016BC  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3978   0016C0  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3979   0016C4  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3980   0016C8  EC79  F022         	call	_turnLeft	;wreg free
  3981   0016CC                     
  3982                           ;dc_motor.c: 196:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3983   0016CC  0E05               	movlw	5
  3984   0016CE  6E43               	movwf	(??_returnHome+1)^0,c
  3985   0016D0  0E0F               	movlw	15
  3986   0016D2  6E42               	movwf	??_returnHome^0,c
  3987   0016D4  0EF1               	movlw	241
  3988   0016D6                     u4227:
  3989   0016D6  2EE8               	decfsz	wreg,f,c
  3990   0016D8  D7FE               	bra	u4227
  3991   0016DA  2E42               	decfsz	??_returnHome^0,f,c
  3992   0016DC  D7FC               	bra	u4227
  3993   0016DE  2E43               	decfsz	(??_returnHome+1)^0,f,c
  3994   0016E0  D7FA               	bra	u4227
  3995   0016E2  0000               	nop	
  3996                           
  3997                           ;dc_motor.c: 197:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3998   0016E4  C032  F023         	movff	returnHome@mL,turnLeft@mL
  3999   0016E8  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4000   0016EC  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4001   0016F0  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4002   0016F4  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4003   0016F8  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4004   0016FC  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4005   001700  EC79  F022         	call	_turnLeft	;wreg free
  4006   001704                     
  4007                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4008   001704  0E05               	movlw	5
  4009   001706  6E43               	movwf	(??_returnHome+1)^0,c
  4010   001708  0E0F               	movlw	15
  4011   00170A  6E42               	movwf	??_returnHome^0,c
  4012   00170C  0EF1               	movlw	241
  4013   00170E                     u4237:
  4014   00170E  2EE8               	decfsz	wreg,f,c
  4015   001710  D7FE               	bra	u4237
  4016   001712  2E42               	decfsz	??_returnHome^0,f,c
  4017   001714  D7FC               	bra	u4237
  4018   001716  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4019   001718  D7FA               	bra	u4237
  4020   00171A  0000               	nop	
  4021   00171C                     
  4022                           ;dc_motor.c: 199:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4023   00171C  C032  F023         	movff	returnHome@mL,fullSpeedAhead@mL
  4024   001720  C033  F024         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4025   001724  C034  F025         	movff	returnHome@mR,fullSpeedAhead@mR
  4026   001728  C035  F026         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4027   00172C  C03B  F027         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4028   001730  C03E  F028         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4029   001734  EC26  F025         	call	_fullSpeedAhead	;wreg free
  4030   001738                     
  4031                           ;dc_motor.c: 200:     resetTimer();
  4032   001738  ECAE  F029         	call	_resetTimer	;wreg free
  4033   00173C                     l3547:
  4034   00173C  503A               	movf	returnHome@curMove^0,w,c
  4035   00173E  0D02               	mullw	2
  4036   001740  CFF3 F042          	movff	prodl,??_returnHome
  4037   001744  CFF4 F043          	movff	prodh,??_returnHome+1
  4038   001748  5042               	movf	??_returnHome^0,w,c
  4039   00174A  2438               	addwf	returnHome@straightTime^0,w,c
  4040   00174C  6ED9               	movwf	fsr2l,c
  4041   00174E  5043               	movf	(??_returnHome+1)^0,w,c
  4042   001750  2039               	addwfc	(returnHome@straightTime+1)^0,w,c
  4043   001752  6EDA               	movwf	fsr2h,c
  4044   001754  CFDE F044          	movff	postinc2,??_returnHome+2
  4045   001758  CFDD F045          	movff	postdec2,??_returnHome+3
  4046   00175C  0E70               	movlw	112
  4047   00175E  2444               	addwf	(??_returnHome+2)^0,w,c
  4048   001760  6E46               	movwf	(??_returnHome+4)^0,c
  4049   001762  0E17               	movlw	23
  4050   001764  2045               	addwfc	(??_returnHome+3)^0,w,c
  4051   001766  6E47               	movwf	(??_returnHome+5)^0,c
  4052   001768  ECCF  F028         	call	_get16bitTMR0val	;wreg free
  4053   00176C  5046               	movf	(??_returnHome+4)^0,w,c
  4054   00176E  5C10               	subwf	?_get16bitTMR0val^0,w,c
  4055   001770  5047               	movf	(??_returnHome+5)^0,w,c
  4056   001772  5811               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4057   001774  A0D8               	btfss	status,0,c
  4058   001776  EFBF  F00B         	goto	u2381
  4059   00177A  EFC1  F00B         	goto	u2380
  4060   00177E                     u2381:
  4061   00177E  EF9E  F00B         	goto	l3547
  4062   001782                     u2380:
  4063   001782                     
  4064                           ;dc_motor.c: 202:     stop(mL, mR, straightRamp);
  4065   001782  C032  F023         	movff	returnHome@mL,stop@mL
  4066   001786  C033  F024         	movff	returnHome@mL+1,stop@mL+1
  4067   00178A  C034  F025         	movff	returnHome@mR,stop@mR
  4068   00178E  C035  F026         	movff	returnHome@mR+1,stop@mR+1
  4069   001792  C03E  F027         	movff	returnHome@straightRamp,stop@straightRamp
  4070   001796  ECA2  F024         	call	_stop	;wreg free
  4071   00179A                     
  4072                           ;dc_motor.c: 204:     char i=curMove;
  4073   00179A  C03A  F048         	movff	returnHome@curMove,returnHome@i
  4074                           
  4075                           ;dc_motor.c: 205:     while (i>0) {
  4076   00179E  EF8B  F00E         	goto	l3639
  4077   0017A2                     l3553:
  4078                           
  4079                           ;dc_motor.c: 206:         i--;
  4080   0017A2  0648               	decf	returnHome@i^0,f,c
  4081   0017A4                     
  4082                           ;dc_motor.c: 208:         if (moveSequence[i] == 1) {
  4083   0017A4  5048               	movf	returnHome@i^0,w,c
  4084   0017A6  2436               	addwf	returnHome@moveSequence^0,w,c
  4085   0017A8  6ED9               	movwf	fsr2l,c
  4086   0017AA  0E00               	movlw	0
  4087   0017AC  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4088   0017AE  6EDA               	movwf	fsr2h,c
  4089   0017B0  04DE               	decf	postinc2,w,c
  4090   0017B2  A4D8               	btfss	status,2,c
  4091   0017B4  EFDE  F00B         	goto	u2391
  4092   0017B8  EFE0  F00B         	goto	u2390
  4093   0017BC                     u2391:
  4094   0017BC  EF1A  F00C         	goto	l3563
  4095   0017C0                     u2390:
  4096   0017C0                     
  4097                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4098   0017C0  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4099   0017C4  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4100   0017C8  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4101   0017CC  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4102   0017D0  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4103   0017D4  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4104   0017D8  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4105   0017DC  EC79  F022         	call	_turnLeft	;wreg free
  4106   0017E0                     
  4107                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4108   0017E0  0E05               	movlw	5
  4109   0017E2  6E43               	movwf	(??_returnHome+1)^0,c
  4110   0017E4  0E0F               	movlw	15
  4111   0017E6  6E42               	movwf	??_returnHome^0,c
  4112   0017E8  0EF1               	movlw	241
  4113   0017EA                     u4247:
  4114   0017EA  2EE8               	decfsz	wreg,f,c
  4115   0017EC  D7FE               	bra	u4247
  4116   0017EE  2E42               	decfsz	??_returnHome^0,f,c
  4117   0017F0  D7FC               	bra	u4247
  4118   0017F2  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4119   0017F4  D7FA               	bra	u4247
  4120   0017F6  0000               	nop	
  4121   0017F8                     
  4122                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4123   0017F8  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4124   0017FC  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4125   001800  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4126   001804  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4127   001808  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4128   00180C  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4129   001810  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4130   001814  EC79  F022         	call	_turnLeft	;wreg free
  4131                           
  4132                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4133   001818  0E05               	movlw	5
  4134   00181A  6E43               	movwf	(??_returnHome+1)^0,c
  4135   00181C  0E0F               	movlw	15
  4136   00181E  6E42               	movwf	??_returnHome^0,c
  4137   001820  0EF1               	movlw	241
  4138   001822                     u4257:
  4139   001822  2EE8               	decfsz	wreg,f,c
  4140   001824  D7FE               	bra	u4257
  4141   001826  2E42               	decfsz	??_returnHome^0,f,c
  4142   001828  D7FC               	bra	u4257
  4143   00182A  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4144   00182C  D7FA               	bra	u4257
  4145   00182E  0000               	nop	
  4146                           
  4147                           ;dc_motor.c: 213:         }
  4148   001830  EF4C  F00E         	goto	l576
  4149   001834                     l3563:
  4150   001834  5048               	movf	returnHome@i^0,w,c
  4151   001836  2436               	addwf	returnHome@moveSequence^0,w,c
  4152   001838  6ED9               	movwf	fsr2l,c
  4153   00183A  0E00               	movlw	0
  4154   00183C  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4155   00183E  6EDA               	movwf	fsr2h,c
  4156   001840  0E02               	movlw	2
  4157   001842  18DE               	xorwf	postinc2,w,c
  4158   001844  A4D8               	btfss	status,2,c
  4159   001846  EF27  F00C         	goto	u2401
  4160   00184A  EF29  F00C         	goto	u2400
  4161   00184E                     u2401:
  4162   00184E  EF63  F00C         	goto	l3571
  4163   001852                     u2400:
  4164   001852                     
  4165                           ;dc_motor.c: 216:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4166   001852  C032  F023         	movff	returnHome@mL,turnRight@mL
  4167   001856  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4168   00185A  C034  F025         	movff	returnHome@mR,turnRight@mR
  4169   00185E  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4170   001862  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4171   001866  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4172   00186A  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4173   00186E  EC8C  F021         	call	_turnRight	;wreg free
  4174   001872                     
  4175                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4176   001872  0E05               	movlw	5
  4177   001874  6E43               	movwf	(??_returnHome+1)^0,c
  4178   001876  0E0F               	movlw	15
  4179   001878  6E42               	movwf	??_returnHome^0,c
  4180   00187A  0EF1               	movlw	241
  4181   00187C                     u4267:
  4182   00187C  2EE8               	decfsz	wreg,f,c
  4183   00187E  D7FE               	bra	u4267
  4184   001880  2E42               	decfsz	??_returnHome^0,f,c
  4185   001882  D7FC               	bra	u4267
  4186   001884  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4187   001886  D7FA               	bra	u4267
  4188   001888  0000               	nop	
  4189   00188A                     
  4190                           ;dc_motor.c: 218:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4191   00188A  C032  F023         	movff	returnHome@mL,turnRight@mL
  4192   00188E  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4193   001892  C034  F025         	movff	returnHome@mR,turnRight@mR
  4194   001896  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4195   00189A  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4196   00189E  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4197   0018A2  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4198   0018A6  EC8C  F021         	call	_turnRight	;wreg free
  4199                           
  4200                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4201   0018AA  0E05               	movlw	5
  4202   0018AC  6E43               	movwf	(??_returnHome+1)^0,c
  4203   0018AE  0E0F               	movlw	15
  4204   0018B0  6E42               	movwf	??_returnHome^0,c
  4205   0018B2  0EF1               	movlw	241
  4206   0018B4                     u4277:
  4207   0018B4  2EE8               	decfsz	wreg,f,c
  4208   0018B6  D7FE               	bra	u4277
  4209   0018B8  2E42               	decfsz	??_returnHome^0,f,c
  4210   0018BA  D7FC               	bra	u4277
  4211   0018BC  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4212   0018BE  D7FA               	bra	u4277
  4213   0018C0  0000               	nop	
  4214                           
  4215                           ;dc_motor.c: 220:         }
  4216   0018C2  EF4C  F00E         	goto	l576
  4217   0018C6                     l3571:
  4218   0018C6  5048               	movf	returnHome@i^0,w,c
  4219   0018C8  2436               	addwf	returnHome@moveSequence^0,w,c
  4220   0018CA  6ED9               	movwf	fsr2l,c
  4221   0018CC  0E00               	movlw	0
  4222   0018CE  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4223   0018D0  6EDA               	movwf	fsr2h,c
  4224   0018D2  0E03               	movlw	3
  4225   0018D4  18DE               	xorwf	postinc2,w,c
  4226   0018D6  A4D8               	btfss	status,2,c
  4227   0018D8  EF70  F00C         	goto	u2411
  4228   0018DC  EF72  F00C         	goto	u2410
  4229   0018E0                     u2411:
  4230   0018E0  EFE4  F00C         	goto	l3585
  4231   0018E4                     u2410:
  4232   0018E4                     
  4233                           ;dc_motor.c: 223:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4234   0018E4  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4235   0018E8  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4236   0018EC  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4237   0018F0  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4238   0018F4  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4239   0018F8  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4240   0018FC  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4241   001900  EC79  F022         	call	_turnLeft	;wreg free
  4242   001904                     
  4243                           ;dc_motor.c: 224:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4244   001904  0E05               	movlw	5
  4245   001906  6E43               	movwf	(??_returnHome+1)^0,c
  4246   001908  0E0F               	movlw	15
  4247   00190A  6E42               	movwf	??_returnHome^0,c
  4248   00190C  0EF1               	movlw	241
  4249   00190E                     u4287:
  4250   00190E  2EE8               	decfsz	wreg,f,c
  4251   001910  D7FE               	bra	u4287
  4252   001912  2E42               	decfsz	??_returnHome^0,f,c
  4253   001914  D7FC               	bra	u4287
  4254   001916  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4255   001918  D7FA               	bra	u4287
  4256   00191A  0000               	nop	
  4257   00191C                     
  4258                           ;dc_motor.c: 225:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4259   00191C  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4260   001920  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4261   001924  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4262   001928  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4263   00192C  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4264   001930  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4265   001934  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4266   001938  EC79  F022         	call	_turnLeft	;wreg free
  4267                           
  4268                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4269   00193C  0E05               	movlw	5
  4270   00193E  6E43               	movwf	(??_returnHome+1)^0,c
  4271   001940  0E0F               	movlw	15
  4272   001942  6E42               	movwf	??_returnHome^0,c
  4273   001944  0EF1               	movlw	241
  4274   001946                     u4297:
  4275   001946  2EE8               	decfsz	wreg,f,c
  4276   001948  D7FE               	bra	u4297
  4277   00194A  2E42               	decfsz	??_returnHome^0,f,c
  4278   00194C  D7FC               	bra	u4297
  4279   00194E  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4280   001950  D7FA               	bra	u4297
  4281   001952  0000               	nop	
  4282   001954                     
  4283                           ;dc_motor.c: 227:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4284   001954  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4285   001958  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4286   00195C  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4287   001960  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4288   001964  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4289   001968  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4290   00196C  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4291   001970  EC79  F022         	call	_turnLeft	;wreg free
  4292   001974                     
  4293                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4294   001974  0E05               	movlw	5
  4295   001976  6E43               	movwf	(??_returnHome+1)^0,c
  4296   001978  0E0F               	movlw	15
  4297   00197A  6E42               	movwf	??_returnHome^0,c
  4298   00197C  0EF1               	movlw	241
  4299   00197E                     u4307:
  4300   00197E  2EE8               	decfsz	wreg,f,c
  4301   001980  D7FE               	bra	u4307
  4302   001982  2E42               	decfsz	??_returnHome^0,f,c
  4303   001984  D7FC               	bra	u4307
  4304   001986  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4305   001988  D7FA               	bra	u4307
  4306   00198A  0000               	nop	
  4307                           
  4308                           ;dc_motor.c: 229:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4309   00198C  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4310   001990  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4311   001994  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4312   001998  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4313   00199C  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4314   0019A0  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4315   0019A4  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4316   0019A8  EC79  F022         	call	_turnLeft	;wreg free
  4317   0019AC                     l3583:
  4318                           
  4319                           ;dc_motor.c: 230:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4320   0019AC  0E05               	movlw	5
  4321   0019AE  6E43               	movwf	(??_returnHome+1)^0,c
  4322   0019B0  0E0F               	movlw	15
  4323   0019B2  6E42               	movwf	??_returnHome^0,c
  4324   0019B4  0EF1               	movlw	241
  4325   0019B6                     u4317:
  4326   0019B6  2EE8               	decfsz	wreg,f,c
  4327   0019B8  D7FE               	bra	u4317
  4328   0019BA  2E42               	decfsz	??_returnHome^0,f,c
  4329   0019BC  D7FC               	bra	u4317
  4330   0019BE  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4331   0019C0  D7FA               	bra	u4317
  4332   0019C2  0000               	nop	
  4333                           
  4334                           ;dc_motor.c: 231:         }
  4335   0019C4  EF4C  F00E         	goto	l576
  4336   0019C8                     l3585:
  4337   0019C8  5048               	movf	returnHome@i^0,w,c
  4338   0019CA  2436               	addwf	returnHome@moveSequence^0,w,c
  4339   0019CC  6ED9               	movwf	fsr2l,c
  4340   0019CE  0E00               	movlw	0
  4341   0019D0  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4342   0019D2  6EDA               	movwf	fsr2h,c
  4343   0019D4  0E04               	movlw	4
  4344   0019D6  18DE               	xorwf	postinc2,w,c
  4345   0019D8  A4D8               	btfss	status,2,c
  4346   0019DA  EFF1  F00C         	goto	u2421
  4347   0019DE  EFF3  F00C         	goto	u2420
  4348   0019E2                     u2421:
  4349   0019E2  EF3F  F00D         	goto	l3597
  4350   0019E6                     u2420:
  4351   0019E6                     
  4352                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4353   0019E6  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4354   0019EA  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4355   0019EE  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4356   0019F2  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4357   0019F6  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4358   0019FA  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4359   0019FE  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4360   001A02  EC79  F022         	call	_turnLeft	;wreg free
  4361   001A06                     
  4362                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4363   001A06  0E05               	movlw	5
  4364   001A08  6E43               	movwf	(??_returnHome+1)^0,c
  4365   001A0A  0E0F               	movlw	15
  4366   001A0C  6E42               	movwf	??_returnHome^0,c
  4367   001A0E  0EF1               	movlw	241
  4368   001A10                     u4327:
  4369   001A10  2EE8               	decfsz	wreg,f,c
  4370   001A12  D7FE               	bra	u4327
  4371   001A14  2E42               	decfsz	??_returnHome^0,f,c
  4372   001A16  D7FC               	bra	u4327
  4373   001A18  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4374   001A1A  D7FA               	bra	u4327
  4375   001A1C  0000               	nop	
  4376   001A1E                     
  4377                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4378   001A1E  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4379   001A22  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4380   001A26  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4381   001A2A  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4382   001A2E  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4383   001A32  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4384   001A36  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4385   001A3A  EC79  F022         	call	_turnLeft	;wreg free
  4386                           
  4387                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4388   001A3E  0E05               	movlw	5
  4389   001A40  6E43               	movwf	(??_returnHome+1)^0,c
  4390   001A42  0E0F               	movlw	15
  4391   001A44  6E42               	movwf	??_returnHome^0,c
  4392   001A46  0EF1               	movlw	241
  4393   001A48                     u4337:
  4394   001A48  2EE8               	decfsz	wreg,f,c
  4395   001A4A  D7FE               	bra	u4337
  4396   001A4C  2E42               	decfsz	??_returnHome^0,f,c
  4397   001A4E  D7FC               	bra	u4337
  4398   001A50  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4399   001A52  D7FA               	bra	u4337
  4400   001A54  0000               	nop	
  4401   001A56                     
  4402                           ;dc_motor.c: 238:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4403   001A56  C032  F023         	movff	returnHome@mL,reverseOneSquare@mL
  4404   001A5A  C033  F024         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4405   001A5E  C034  F025         	movff	returnHome@mR,reverseOneSquare@mR
  4406   001A62  C035  F026         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4407   001A66  C03B  F027         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4408   001A6A  C03C  F028         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4409   001A6E  C03D  F029         	movff	returnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  4410   001A72  C03E  F02A         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4411   001A76  EC9D  F020         	call	_reverseOneSquare	;wreg free
  4412   001A7A  EFD6  F00C         	goto	l3583
  4413   001A7E                     l3597:
  4414   001A7E  5048               	movf	returnHome@i^0,w,c
  4415   001A80  2436               	addwf	returnHome@moveSequence^0,w,c
  4416   001A82  6ED9               	movwf	fsr2l,c
  4417   001A84  0E00               	movlw	0
  4418   001A86  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4419   001A88  6EDA               	movwf	fsr2h,c
  4420   001A8A  0E05               	movlw	5
  4421   001A8C  18DE               	xorwf	postinc2,w,c
  4422   001A8E  A4D8               	btfss	status,2,c
  4423   001A90  EF4C  F00D         	goto	u2431
  4424   001A94  EF4E  F00D         	goto	u2430
  4425   001A98                     u2431:
  4426   001A98  EF9A  F00D         	goto	l3609
  4427   001A9C                     u2430:
  4428   001A9C                     
  4429                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4430   001A9C  C032  F023         	movff	returnHome@mL,turnRight@mL
  4431   001AA0  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4432   001AA4  C034  F025         	movff	returnHome@mR,turnRight@mR
  4433   001AA8  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4434   001AAC  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4435   001AB0  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4436   001AB4  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4437   001AB8  EC8C  F021         	call	_turnRight	;wreg free
  4438   001ABC                     
  4439                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4440   001ABC  0E05               	movlw	5
  4441   001ABE  6E43               	movwf	(??_returnHome+1)^0,c
  4442   001AC0  0E0F               	movlw	15
  4443   001AC2  6E42               	movwf	??_returnHome^0,c
  4444   001AC4  0EF1               	movlw	241
  4445   001AC6                     u4347:
  4446   001AC6  2EE8               	decfsz	wreg,f,c
  4447   001AC8  D7FE               	bra	u4347
  4448   001ACA  2E42               	decfsz	??_returnHome^0,f,c
  4449   001ACC  D7FC               	bra	u4347
  4450   001ACE  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4451   001AD0  D7FA               	bra	u4347
  4452   001AD2  0000               	nop	
  4453   001AD4                     
  4454                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4455   001AD4  C032  F023         	movff	returnHome@mL,turnRight@mL
  4456   001AD8  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4457   001ADC  C034  F025         	movff	returnHome@mR,turnRight@mR
  4458   001AE0  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4459   001AE4  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4460   001AE8  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4461   001AEC  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4462   001AF0  EC8C  F021         	call	_turnRight	;wreg free
  4463                           
  4464                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4465   001AF4  0E05               	movlw	5
  4466   001AF6  6E43               	movwf	(??_returnHome+1)^0,c
  4467   001AF8  0E0F               	movlw	15
  4468   001AFA  6E42               	movwf	??_returnHome^0,c
  4469   001AFC  0EF1               	movlw	241
  4470   001AFE                     u4357:
  4471   001AFE  2EE8               	decfsz	wreg,f,c
  4472   001B00  D7FE               	bra	u4357
  4473   001B02  2E42               	decfsz	??_returnHome^0,f,c
  4474   001B04  D7FC               	bra	u4357
  4475   001B06  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4476   001B08  D7FA               	bra	u4357
  4477   001B0A  0000               	nop	
  4478   001B0C                     
  4479                           ;dc_motor.c: 247:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4480   001B0C  C032  F023         	movff	returnHome@mL,reverseOneSquare@mL
  4481   001B10  C033  F024         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4482   001B14  C034  F025         	movff	returnHome@mR,reverseOneSquare@mR
  4483   001B18  C035  F026         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4484   001B1C  C03B  F027         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4485   001B20  C03C  F028         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4486   001B24  C03D  F029         	movff	returnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  4487   001B28  C03E  F02A         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4488   001B2C  EC9D  F020         	call	_reverseOneSquare	;wreg free
  4489   001B30  EFD6  F00C         	goto	l3583
  4490   001B34                     l3609:
  4491   001B34  5048               	movf	returnHome@i^0,w,c
  4492   001B36  2436               	addwf	returnHome@moveSequence^0,w,c
  4493   001B38  6ED9               	movwf	fsr2l,c
  4494   001B3A  0E00               	movlw	0
  4495   001B3C  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4496   001B3E  6EDA               	movwf	fsr2h,c
  4497   001B40  0E06               	movlw	6
  4498   001B42  18DE               	xorwf	postinc2,w,c
  4499   001B44  A4D8               	btfss	status,2,c
  4500   001B46  EFA7  F00D         	goto	u2441
  4501   001B4A  EFA9  F00D         	goto	u2440
  4502   001B4E                     u2441:
  4503   001B4E  EFF3  F00D         	goto	l3621
  4504   001B52                     u2440:
  4505   001B52                     
  4506                           ;dc_motor.c: 252:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4507   001B52  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4508   001B56  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4509   001B5A  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4510   001B5E  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4511   001B62  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4512   001B66  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4513   001B6A  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4514   001B6E  EC79  F022         	call	_turnLeft	;wreg free
  4515   001B72                     
  4516                           ;dc_motor.c: 253:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4517   001B72  0E05               	movlw	5
  4518   001B74  6E43               	movwf	(??_returnHome+1)^0,c
  4519   001B76  0E0F               	movlw	15
  4520   001B78  6E42               	movwf	??_returnHome^0,c
  4521   001B7A  0EF1               	movlw	241
  4522   001B7C                     u4367:
  4523   001B7C  2EE8               	decfsz	wreg,f,c
  4524   001B7E  D7FE               	bra	u4367
  4525   001B80  2E42               	decfsz	??_returnHome^0,f,c
  4526   001B82  D7FC               	bra	u4367
  4527   001B84  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4528   001B86  D7FA               	bra	u4367
  4529   001B88  0000               	nop	
  4530   001B8A                     
  4531                           ;dc_motor.c: 254:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4532   001B8A  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4533   001B8E  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4534   001B92  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4535   001B96  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4536   001B9A  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4537   001B9E  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4538   001BA2  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4539   001BA6  EC79  F022         	call	_turnLeft	;wreg free
  4540                           
  4541                           ;dc_motor.c: 255:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4542   001BAA  0E05               	movlw	5
  4543   001BAC  6E43               	movwf	(??_returnHome+1)^0,c
  4544   001BAE  0E0F               	movlw	15
  4545   001BB0  6E42               	movwf	??_returnHome^0,c
  4546   001BB2  0EF1               	movlw	241
  4547   001BB4                     u4377:
  4548   001BB4  2EE8               	decfsz	wreg,f,c
  4549   001BB6  D7FE               	bra	u4377
  4550   001BB8  2E42               	decfsz	??_returnHome^0,f,c
  4551   001BBA  D7FC               	bra	u4377
  4552   001BBC  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4553   001BBE  D7FA               	bra	u4377
  4554   001BC0  0000               	nop	
  4555   001BC2                     
  4556                           ;dc_motor.c: 256:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4557   001BC2  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4558   001BC6  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4559   001BCA  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4560   001BCE  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4561   001BD2  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4562   001BD6  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4563   001BDA  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4564   001BDE  EC79  F022         	call	_turnLeft	;wreg free
  4565   001BE2  EFD6  F00C         	goto	l3583
  4566   001BE6                     l3621:
  4567   001BE6  5048               	movf	returnHome@i^0,w,c
  4568   001BE8  2436               	addwf	returnHome@moveSequence^0,w,c
  4569   001BEA  6ED9               	movwf	fsr2l,c
  4570   001BEC  0E00               	movlw	0
  4571   001BEE  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4572   001BF0  6EDA               	movwf	fsr2h,c
  4573   001BF2  0E07               	movlw	7
  4574   001BF4  18DE               	xorwf	postinc2,w,c
  4575   001BF6  A4D8               	btfss	status,2,c
  4576   001BF8  EF00  F00E         	goto	u2451
  4577   001BFC  EF02  F00E         	goto	u2450
  4578   001C00                     u2451:
  4579   001C00  EF4C  F00E         	goto	l582
  4580   001C04                     u2450:
  4581   001C04                     
  4582                           ;dc_motor.c: 261:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4583   001C04  C032  F023         	movff	returnHome@mL,turnRight@mL
  4584   001C08  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4585   001C0C  C034  F025         	movff	returnHome@mR,turnRight@mR
  4586   001C10  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4587   001C14  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4588   001C18  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4589   001C1C  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4590   001C20  EC8C  F021         	call	_turnRight	;wreg free
  4591   001C24                     
  4592                           ;dc_motor.c: 262:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4593   001C24  0E05               	movlw	5
  4594   001C26  6E43               	movwf	(??_returnHome+1)^0,c
  4595   001C28  0E0F               	movlw	15
  4596   001C2A  6E42               	movwf	??_returnHome^0,c
  4597   001C2C  0EF1               	movlw	241
  4598   001C2E                     u4387:
  4599   001C2E  2EE8               	decfsz	wreg,f,c
  4600   001C30  D7FE               	bra	u4387
  4601   001C32  2E42               	decfsz	??_returnHome^0,f,c
  4602   001C34  D7FC               	bra	u4387
  4603   001C36  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4604   001C38  D7FA               	bra	u4387
  4605   001C3A  0000               	nop	
  4606   001C3C                     
  4607                           ;dc_motor.c: 263:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4608   001C3C  C032  F023         	movff	returnHome@mL,turnRight@mL
  4609   001C40  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4610   001C44  C034  F025         	movff	returnHome@mR,turnRight@mR
  4611   001C48  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4612   001C4C  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4613   001C50  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4614   001C54  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4615   001C58  EC8C  F021         	call	_turnRight	;wreg free
  4616                           
  4617                           ;dc_motor.c: 264:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4618   001C5C  0E05               	movlw	5
  4619   001C5E  6E43               	movwf	(??_returnHome+1)^0,c
  4620   001C60  0E0F               	movlw	15
  4621   001C62  6E42               	movwf	??_returnHome^0,c
  4622   001C64  0EF1               	movlw	241
  4623   001C66                     u4397:
  4624   001C66  2EE8               	decfsz	wreg,f,c
  4625   001C68  D7FE               	bra	u4397
  4626   001C6A  2E42               	decfsz	??_returnHome^0,f,c
  4627   001C6C  D7FC               	bra	u4397
  4628   001C6E  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4629   001C70  D7FA               	bra	u4397
  4630   001C72  0000               	nop	
  4631   001C74                     
  4632                           ;dc_motor.c: 265:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4633   001C74  C032  F023         	movff	returnHome@mL,turnRight@mL
  4634   001C78  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4635   001C7C  C034  F025         	movff	returnHome@mR,turnRight@mR
  4636   001C80  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4637   001C84  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4638   001C88  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4639   001C8C  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4640   001C90  EC8C  F021         	call	_turnRight	;wreg free
  4641   001C94  EFD6  F00C         	goto	l3583
  4642   001C98                     l582:
  4643   001C98                     l576:
  4644                           
  4645                           ;dc_motor.c: 269:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4646   001C98  C032  F023         	movff	returnHome@mL,fullSpeedAhead@mL
  4647   001C9C  C033  F024         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4648   001CA0  C034  F025         	movff	returnHome@mR,fullSpeedAhead@mR
  4649   001CA4  C035  F026         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4650   001CA8  C03B  F027         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4651   001CAC  C03E  F028         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4652   001CB0  EC26  F025         	call	_fullSpeedAhead	;wreg free
  4653   001CB4                     
  4654                           ;dc_motor.c: 270:         resetTimer();
  4655   001CB4  ECAE  F029         	call	_resetTimer	;wreg free
  4656   001CB8                     l3635:
  4657   001CB8  5048               	movf	returnHome@i^0,w,c
  4658   001CBA  0D02               	mullw	2
  4659   001CBC  CFF3 F042          	movff	prodl,??_returnHome
  4660   001CC0  CFF4 F043          	movff	prodh,??_returnHome+1
  4661   001CC4  5042               	movf	??_returnHome^0,w,c
  4662   001CC6  2438               	addwf	returnHome@straightTime^0,w,c
  4663   001CC8  6ED9               	movwf	fsr2l,c
  4664   001CCA  5043               	movf	(??_returnHome+1)^0,w,c
  4665   001CCC  2039               	addwfc	(returnHome@straightTime+1)^0,w,c
  4666   001CCE  6EDA               	movwf	fsr2h,c
  4667   001CD0  CFDE F044          	movff	postinc2,??_returnHome+2
  4668   001CD4  CFDD F045          	movff	postdec2,??_returnHome+3
  4669   001CD8  0E30               	movlw	48
  4670   001CDA  2444               	addwf	(??_returnHome+2)^0,w,c
  4671   001CDC  6E46               	movwf	(??_returnHome+4)^0,c
  4672   001CDE  0EF8               	movlw	248
  4673   001CE0  2045               	addwfc	(??_returnHome+3)^0,w,c
  4674   001CE2  6E47               	movwf	(??_returnHome+5)^0,c
  4675   001CE4  ECCF  F028         	call	_get16bitTMR0val	;wreg free
  4676   001CE8  5046               	movf	(??_returnHome+4)^0,w,c
  4677   001CEA  5C10               	subwf	?_get16bitTMR0val^0,w,c
  4678   001CEC  5047               	movf	(??_returnHome+5)^0,w,c
  4679   001CEE  5811               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4680   001CF0  A0D8               	btfss	status,0,c
  4681   001CF2  EF7D  F00E         	goto	u2461
  4682   001CF6  EF7F  F00E         	goto	u2460
  4683   001CFA                     u2461:
  4684   001CFA  EF5C  F00E         	goto	l3635
  4685   001CFE                     u2460:
  4686   001CFE                     
  4687                           ;dc_motor.c: 272:         stop(mL, mR, straightRamp);
  4688   001CFE  C032  F023         	movff	returnHome@mL,stop@mL
  4689   001D02  C033  F024         	movff	returnHome@mL+1,stop@mL+1
  4690   001D06  C034  F025         	movff	returnHome@mR,stop@mR
  4691   001D0A  C035  F026         	movff	returnHome@mR+1,stop@mR+1
  4692   001D0E  C03E  F027         	movff	returnHome@straightRamp,stop@straightRamp
  4693   001D12  ECA2  F024         	call	_stop	;wreg free
  4694   001D16                     l3639:
  4695                           
  4696                           ;dc_motor.c: 205:     while (i>0) {
  4697   001D16  5048               	movf	returnHome@i^0,w,c
  4698   001D18  A4D8               	btfss	status,2,c
  4699   001D1A  EF91  F00E         	goto	u2471
  4700   001D1E  EF93  F00E         	goto	u2470
  4701   001D22                     u2471:
  4702   001D22  EFD1  F00B         	goto	l3553
  4703   001D26                     u2470:
  4704   001D26  0012               	return		;funcret
  4705   001D28                     __end_of_returnHome:
  4706                           	callstack 0
  4707                           
  4708 ;; *************** function _lostReturnHome *****************
  4709 ;; Defined at:
  4710 ;;		line 277 in file "dc_motor.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  mL              2   49[COMRAM] PTR struct DC_motor
  4713 ;;		 -> main@motorL(10), 
  4714 ;;  mR              2   51[COMRAM] PTR struct DC_motor
  4715 ;;		 -> main@motorR(10), 
  4716 ;;  moveSequence    2   53[COMRAM] PTR unsigned char 
  4717 ;;		 -> main@moveSequence(40), 
  4718 ;;  straightTime    2   55[COMRAM] PTR unsigned int 
  4719 ;;		 -> main@straightTime(82), 
  4720 ;;  curMove         1   57[COMRAM] unsigned char 
  4721 ;;  straightSpee    1   58[COMRAM] unsigned char 
  4722 ;;  reverseDurat    2   59[COMRAM] unsigned int 
  4723 ;;  straightRamp    1   61[COMRAM] unsigned char 
  4724 ;;  turnSpeed       1   62[COMRAM] unsigned char 
  4725 ;;  turnDuration    1   63[COMRAM] unsigned char 
  4726 ;;  turnRamp        1   64[COMRAM] unsigned char 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  i               1   69[COMRAM] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4738 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4740 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4741 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4742 ;;Total ram usage:       21 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 9
  4745 ;; This function calls:
  4746 ;;		_fullSpeedAhead
  4747 ;;		_get16bitTMR0val
  4748 ;;		_resetTimer
  4749 ;;		_reverseOneSquare
  4750 ;;		_stop
  4751 ;;		_turnLeft
  4752 ;;		_turnRight
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text5
  4759   001D28                     __ptext5:
  4760                           	callstack 0
  4761   001D28                     _lostReturnHome:
  4762                           	callstack 21
  4763   001D28                     
  4764                           ;dc_motor.c: 277: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned int revers
      +                          eDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsig
      +                          ned char turnRamp);dc_motor.c: 278: {;dc_motor.c: 279:     LATDbits.LATD7 = LATHbits.LAT
      +                          H3 = 1;
  4765   001D28  8680               	bsf	128,3,c	;volatile
  4766   001D2A  8E7C               	bsf	124,7,c	;volatile
  4767   001D2C                     
  4768                           ;dc_motor.c: 280:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4769   001D2C  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  4770   001D30  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4771   001D34  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  4772   001D38  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4773   001D3C  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4774   001D40  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4775   001D44  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4776   001D48  EC79  F022         	call	_turnLeft	;wreg free
  4777   001D4C                     
  4778                           ;dc_motor.c: 281:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4779   001D4C  0E05               	movlw	5
  4780   001D4E  6E43               	movwf	(??_lostReturnHome+1)^0,c
  4781   001D50  0E0F               	movlw	15
  4782   001D52  6E42               	movwf	??_lostReturnHome^0,c
  4783   001D54  0EF1               	movlw	241
  4784   001D56                     u4407:
  4785   001D56  2EE8               	decfsz	wreg,f,c
  4786   001D58  D7FE               	bra	u4407
  4787   001D5A  2E42               	decfsz	??_lostReturnHome^0,f,c
  4788   001D5C  D7FC               	bra	u4407
  4789   001D5E  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  4790   001D60  D7FA               	bra	u4407
  4791   001D62  0000               	nop	
  4792   001D64                     
  4793                           ;dc_motor.c: 282:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4794   001D64  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  4795   001D68  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4796   001D6C  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  4797   001D70  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4798   001D74  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4799   001D78  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4800   001D7C  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4801   001D80  EC79  F022         	call	_turnLeft	;wreg free
  4802                           
  4803                           ;dc_motor.c: 283:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4804   001D84  0E05               	movlw	5
  4805   001D86  6E43               	movwf	(??_lostReturnHome+1)^0,c
  4806   001D88  0E0F               	movlw	15
  4807   001D8A  6E42               	movwf	??_lostReturnHome^0,c
  4808   001D8C  0EF1               	movlw	241
  4809   001D8E                     u4417:
  4810   001D8E  2EE8               	decfsz	wreg,f,c
  4811   001D90  D7FE               	bra	u4417
  4812   001D92  2E42               	decfsz	??_lostReturnHome^0,f,c
  4813   001D94  D7FC               	bra	u4417
  4814   001D96  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  4815   001D98  D7FA               	bra	u4417
  4816   001D9A  0000               	nop	
  4817   001D9C                     
  4818                           ;dc_motor.c: 284:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4819   001D9C  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  4820   001DA0  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4821   001DA4  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  4822   001DA8  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4823   001DAC  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4824   001DB0  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4825   001DB4  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4826   001DB8  EC79  F022         	call	_turnLeft	;wreg free
  4827   001DBC                     
  4828                           ;dc_motor.c: 285:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4829   001DBC  0E05               	movlw	5
  4830   001DBE  6E43               	movwf	(??_lostReturnHome+1)^0,c
  4831   001DC0  0E0F               	movlw	15
  4832   001DC2  6E42               	movwf	??_lostReturnHome^0,c
  4833   001DC4  0EF1               	movlw	241
  4834   001DC6                     u4427:
  4835   001DC6  2EE8               	decfsz	wreg,f,c
  4836   001DC8  D7FE               	bra	u4427
  4837   001DCA  2E42               	decfsz	??_lostReturnHome^0,f,c
  4838   001DCC  D7FC               	bra	u4427
  4839   001DCE  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  4840   001DD0  D7FA               	bra	u4427
  4841   001DD2  0000               	nop	
  4842                           
  4843                           ;dc_motor.c: 286:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4844   001DD4  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  4845   001DD8  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4846   001DDC  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  4847   001DE0  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4848   001DE4  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4849   001DE8  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4850   001DEC  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4851   001DF0  EC79  F022         	call	_turnLeft	;wreg free
  4852   001DF4                     
  4853                           ;dc_motor.c: 287:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4854   001DF4  0E05               	movlw	5
  4855   001DF6  6E43               	movwf	(??_lostReturnHome+1)^0,c
  4856   001DF8  0E0F               	movlw	15
  4857   001DFA  6E42               	movwf	??_lostReturnHome^0,c
  4858   001DFC  0EF1               	movlw	241
  4859   001DFE                     u4437:
  4860   001DFE  2EE8               	decfsz	wreg,f,c
  4861   001E00  D7FE               	bra	u4437
  4862   001E02  2E42               	decfsz	??_lostReturnHome^0,f,c
  4863   001E04  D7FC               	bra	u4437
  4864   001E06  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  4865   001E08  D7FA               	bra	u4437
  4866   001E0A  0000               	nop	
  4867   001E0C                     
  4868                           ;dc_motor.c: 288:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4869   001E0C  C032  F023         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4870   001E10  C033  F024         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4871   001E14  C034  F025         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4872   001E18  C035  F026         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4873   001E1C  C03B  F027         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4874   001E20  C03E  F028         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4875   001E24  EC26  F025         	call	_fullSpeedAhead	;wreg free
  4876   001E28                     
  4877                           ;dc_motor.c: 289:     resetTimer();
  4878   001E28  ECAE  F029         	call	_resetTimer	;wreg free
  4879   001E2C                     
  4880                           ;dc_motor.c: 290:     lost = 0;
  4881   001E2C  0E00               	movlw	0
  4882   001E2E  0100               	movlb	0	; () banked
  4883   001E30  6FF4               	movwf	_lost& (0+255),b
  4884   001E32                     l4239:
  4885                           
  4886                           ; BSR set to: 0
  4887   001E32  51F4               	movf	_lost& (0+255),w,b
  4888   001E34  B4D8               	btfsc	status,2,c
  4889   001E36  EF1F  F00F         	goto	u3211
  4890   001E3A  EF21  F00F         	goto	u3210
  4891   001E3E                     u3211:
  4892   001E3E  EF19  F00F         	goto	l4239
  4893   001E42                     u3210:
  4894   001E42                     
  4895                           ; BSR set to: 0
  4896                           ;dc_motor.c: 292:     stop(mL, mR, straightRamp);
  4897   001E42  C032  F023         	movff	lostReturnHome@mL,stop@mL
  4898   001E46  C033  F024         	movff	lostReturnHome@mL+1,stop@mL+1
  4899   001E4A  C034  F025         	movff	lostReturnHome@mR,stop@mR
  4900   001E4E  C035  F026         	movff	lostReturnHome@mR+1,stop@mR+1
  4901   001E52  C03E  F027         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4902   001E56  ECA2  F024         	call	_stop	;wreg free
  4903   001E5A                     
  4904                           ;dc_motor.c: 294:     char i=curMove;
  4905   001E5A  C03A  F046         	movff	lostReturnHome@curMove,lostReturnHome@i
  4906                           
  4907                           ;dc_motor.c: 295:     while (i>0) {
  4908   001E5E  EFE1  F011         	goto	l4331
  4909   001E62                     l4245:
  4910                           
  4911                           ;dc_motor.c: 296:         i--;
  4912   001E62  0646               	decf	lostReturnHome@i^0,f,c
  4913   001E64                     
  4914                           ;dc_motor.c: 298:         if (moveSequence[i] == 1) {
  4915   001E64  5046               	movf	lostReturnHome@i^0,w,c
  4916   001E66  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  4917   001E68  6ED9               	movwf	fsr2l,c
  4918   001E6A  0E00               	movlw	0
  4919   001E6C  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4920   001E6E  6EDA               	movwf	fsr2h,c
  4921   001E70  04DE               	decf	postinc2,w,c
  4922   001E72  A4D8               	btfss	status,2,c
  4923   001E74  EF3E  F00F         	goto	u3221
  4924   001E78  EF40  F00F         	goto	u3220
  4925   001E7C                     u3221:
  4926   001E7C  EF7A  F00F         	goto	l4255
  4927   001E80                     u3220:
  4928   001E80                     
  4929                           ;dc_motor.c: 299:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4930   001E80  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  4931   001E84  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4932   001E88  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  4933   001E8C  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4934   001E90  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4935   001E94  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4936   001E98  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4937   001E9C  EC79  F022         	call	_turnLeft	;wreg free
  4938   001EA0                     
  4939                           ;dc_motor.c: 300:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4940   001EA0  0E05               	movlw	5
  4941   001EA2  6E43               	movwf	(??_lostReturnHome+1)^0,c
  4942   001EA4  0E0F               	movlw	15
  4943   001EA6  6E42               	movwf	??_lostReturnHome^0,c
  4944   001EA8  0EF1               	movlw	241
  4945   001EAA                     u4447:
  4946   001EAA  2EE8               	decfsz	wreg,f,c
  4947   001EAC  D7FE               	bra	u4447
  4948   001EAE  2E42               	decfsz	??_lostReturnHome^0,f,c
  4949   001EB0  D7FC               	bra	u4447
  4950   001EB2  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  4951   001EB4  D7FA               	bra	u4447
  4952   001EB6  0000               	nop	
  4953   001EB8                     
  4954                           ;dc_motor.c: 301:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4955   001EB8  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  4956   001EBC  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4957   001EC0  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  4958   001EC4  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4959   001EC8  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4960   001ECC  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4961   001ED0  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4962   001ED4  EC79  F022         	call	_turnLeft	;wreg free
  4963                           
  4964                           ;dc_motor.c: 302:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4965   001ED8  0E05               	movlw	5
  4966   001EDA  6E43               	movwf	(??_lostReturnHome+1)^0,c
  4967   001EDC  0E0F               	movlw	15
  4968   001EDE  6E42               	movwf	??_lostReturnHome^0,c
  4969   001EE0  0EF1               	movlw	241
  4970   001EE2                     u4457:
  4971   001EE2  2EE8               	decfsz	wreg,f,c
  4972   001EE4  D7FE               	bra	u4457
  4973   001EE6  2E42               	decfsz	??_lostReturnHome^0,f,c
  4974   001EE8  D7FC               	bra	u4457
  4975   001EEA  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  4976   001EEC  D7FA               	bra	u4457
  4977   001EEE  0000               	nop	
  4978                           
  4979                           ;dc_motor.c: 303:         }
  4980   001EF0  EFAC  F011         	goto	l601
  4981   001EF4                     l4255:
  4982   001EF4  5046               	movf	lostReturnHome@i^0,w,c
  4983   001EF6  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  4984   001EF8  6ED9               	movwf	fsr2l,c
  4985   001EFA  0E00               	movlw	0
  4986   001EFC  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4987   001EFE  6EDA               	movwf	fsr2h,c
  4988   001F00  0E02               	movlw	2
  4989   001F02  18DE               	xorwf	postinc2,w,c
  4990   001F04  A4D8               	btfss	status,2,c
  4991   001F06  EF87  F00F         	goto	u3231
  4992   001F0A  EF89  F00F         	goto	u3230
  4993   001F0E                     u3231:
  4994   001F0E  EFC3  F00F         	goto	l4263
  4995   001F12                     u3230:
  4996   001F12                     
  4997                           ;dc_motor.c: 306:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4998   001F12  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  4999   001F16  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5000   001F1A  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5001   001F1E  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5002   001F22  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5003   001F26  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5004   001F2A  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5005   001F2E  EC8C  F021         	call	_turnRight	;wreg free
  5006   001F32                     
  5007                           ;dc_motor.c: 307:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5008   001F32  0E05               	movlw	5
  5009   001F34  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5010   001F36  0E0F               	movlw	15
  5011   001F38  6E42               	movwf	??_lostReturnHome^0,c
  5012   001F3A  0EF1               	movlw	241
  5013   001F3C                     u4467:
  5014   001F3C  2EE8               	decfsz	wreg,f,c
  5015   001F3E  D7FE               	bra	u4467
  5016   001F40  2E42               	decfsz	??_lostReturnHome^0,f,c
  5017   001F42  D7FC               	bra	u4467
  5018   001F44  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5019   001F46  D7FA               	bra	u4467
  5020   001F48  0000               	nop	
  5021   001F4A                     
  5022                           ;dc_motor.c: 308:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5023   001F4A  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5024   001F4E  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5025   001F52  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5026   001F56  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5027   001F5A  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5028   001F5E  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5029   001F62  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5030   001F66  EC8C  F021         	call	_turnRight	;wreg free
  5031                           
  5032                           ;dc_motor.c: 309:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5033   001F6A  0E05               	movlw	5
  5034   001F6C  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5035   001F6E  0E0F               	movlw	15
  5036   001F70  6E42               	movwf	??_lostReturnHome^0,c
  5037   001F72  0EF1               	movlw	241
  5038   001F74                     u4477:
  5039   001F74  2EE8               	decfsz	wreg,f,c
  5040   001F76  D7FE               	bra	u4477
  5041   001F78  2E42               	decfsz	??_lostReturnHome^0,f,c
  5042   001F7A  D7FC               	bra	u4477
  5043   001F7C  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5044   001F7E  D7FA               	bra	u4477
  5045   001F80  0000               	nop	
  5046                           
  5047                           ;dc_motor.c: 310:         }
  5048   001F82  EFAC  F011         	goto	l601
  5049   001F86                     l4263:
  5050   001F86  5046               	movf	lostReturnHome@i^0,w,c
  5051   001F88  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5052   001F8A  6ED9               	movwf	fsr2l,c
  5053   001F8C  0E00               	movlw	0
  5054   001F8E  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5055   001F90  6EDA               	movwf	fsr2h,c
  5056   001F92  0E03               	movlw	3
  5057   001F94  18DE               	xorwf	postinc2,w,c
  5058   001F96  A4D8               	btfss	status,2,c
  5059   001F98  EFD0  F00F         	goto	u3241
  5060   001F9C  EFD2  F00F         	goto	u3240
  5061   001FA0                     u3241:
  5062   001FA0  EF44  F010         	goto	l4277
  5063   001FA4                     u3240:
  5064   001FA4                     
  5065                           ;dc_motor.c: 313:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5066   001FA4  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5067   001FA8  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5068   001FAC  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5069   001FB0  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5070   001FB4  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5071   001FB8  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5072   001FBC  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5073   001FC0  EC79  F022         	call	_turnLeft	;wreg free
  5074   001FC4                     
  5075                           ;dc_motor.c: 314:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5076   001FC4  0E05               	movlw	5
  5077   001FC6  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5078   001FC8  0E0F               	movlw	15
  5079   001FCA  6E42               	movwf	??_lostReturnHome^0,c
  5080   001FCC  0EF1               	movlw	241
  5081   001FCE                     u4487:
  5082   001FCE  2EE8               	decfsz	wreg,f,c
  5083   001FD0  D7FE               	bra	u4487
  5084   001FD2  2E42               	decfsz	??_lostReturnHome^0,f,c
  5085   001FD4  D7FC               	bra	u4487
  5086   001FD6  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5087   001FD8  D7FA               	bra	u4487
  5088   001FDA  0000               	nop	
  5089   001FDC                     
  5090                           ;dc_motor.c: 315:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5091   001FDC  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5092   001FE0  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5093   001FE4  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5094   001FE8  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5095   001FEC  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5096   001FF0  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5097   001FF4  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5098   001FF8  EC79  F022         	call	_turnLeft	;wreg free
  5099                           
  5100                           ;dc_motor.c: 316:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5101   001FFC  0E05               	movlw	5
  5102   001FFE  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5103   002000  0E0F               	movlw	15
  5104   002002  6E42               	movwf	??_lostReturnHome^0,c
  5105   002004  0EF1               	movlw	241
  5106   002006                     u4497:
  5107   002006  2EE8               	decfsz	wreg,f,c
  5108   002008  D7FE               	bra	u4497
  5109   00200A  2E42               	decfsz	??_lostReturnHome^0,f,c
  5110   00200C  D7FC               	bra	u4497
  5111   00200E  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5112   002010  D7FA               	bra	u4497
  5113   002012  0000               	nop	
  5114   002014                     
  5115                           ;dc_motor.c: 317:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5116   002014  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5117   002018  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5118   00201C  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5119   002020  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5120   002024  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5121   002028  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5122   00202C  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5123   002030  EC79  F022         	call	_turnLeft	;wreg free
  5124   002034                     
  5125                           ;dc_motor.c: 318:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5126   002034  0E05               	movlw	5
  5127   002036  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5128   002038  0E0F               	movlw	15
  5129   00203A  6E42               	movwf	??_lostReturnHome^0,c
  5130   00203C  0EF1               	movlw	241
  5131   00203E                     u4507:
  5132   00203E  2EE8               	decfsz	wreg,f,c
  5133   002040  D7FE               	bra	u4507
  5134   002042  2E42               	decfsz	??_lostReturnHome^0,f,c
  5135   002044  D7FC               	bra	u4507
  5136   002046  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5137   002048  D7FA               	bra	u4507
  5138   00204A  0000               	nop	
  5139                           
  5140                           ;dc_motor.c: 319:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5141   00204C  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5142   002050  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5143   002054  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5144   002058  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5145   00205C  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5146   002060  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5147   002064  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5148   002068  EC79  F022         	call	_turnLeft	;wreg free
  5149   00206C                     l4275:
  5150                           
  5151                           ;dc_motor.c: 320:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5152   00206C  0E05               	movlw	5
  5153   00206E  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5154   002070  0E0F               	movlw	15
  5155   002072  6E42               	movwf	??_lostReturnHome^0,c
  5156   002074  0EF1               	movlw	241
  5157   002076                     u4517:
  5158   002076  2EE8               	decfsz	wreg,f,c
  5159   002078  D7FE               	bra	u4517
  5160   00207A  2E42               	decfsz	??_lostReturnHome^0,f,c
  5161   00207C  D7FC               	bra	u4517
  5162   00207E  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5163   002080  D7FA               	bra	u4517
  5164   002082  0000               	nop	
  5165                           
  5166                           ;dc_motor.c: 321:         }
  5167   002084  EFAC  F011         	goto	l601
  5168   002088                     l4277:
  5169   002088  5046               	movf	lostReturnHome@i^0,w,c
  5170   00208A  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5171   00208C  6ED9               	movwf	fsr2l,c
  5172   00208E  0E00               	movlw	0
  5173   002090  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5174   002092  6EDA               	movwf	fsr2h,c
  5175   002094  0E04               	movlw	4
  5176   002096  18DE               	xorwf	postinc2,w,c
  5177   002098  A4D8               	btfss	status,2,c
  5178   00209A  EF51  F010         	goto	u3251
  5179   00209E  EF53  F010         	goto	u3250
  5180   0020A2                     u3251:
  5181   0020A2  EF9F  F010         	goto	l4289
  5182   0020A6                     u3250:
  5183   0020A6                     
  5184                           ;dc_motor.c: 324:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5185   0020A6  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5186   0020AA  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5187   0020AE  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5188   0020B2  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5189   0020B6  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5190   0020BA  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5191   0020BE  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5192   0020C2  EC79  F022         	call	_turnLeft	;wreg free
  5193   0020C6                     
  5194                           ;dc_motor.c: 325:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5195   0020C6  0E05               	movlw	5
  5196   0020C8  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5197   0020CA  0E0F               	movlw	15
  5198   0020CC  6E42               	movwf	??_lostReturnHome^0,c
  5199   0020CE  0EF1               	movlw	241
  5200   0020D0                     u4527:
  5201   0020D0  2EE8               	decfsz	wreg,f,c
  5202   0020D2  D7FE               	bra	u4527
  5203   0020D4  2E42               	decfsz	??_lostReturnHome^0,f,c
  5204   0020D6  D7FC               	bra	u4527
  5205   0020D8  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5206   0020DA  D7FA               	bra	u4527
  5207   0020DC  0000               	nop	
  5208   0020DE                     
  5209                           ;dc_motor.c: 326:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5210   0020DE  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5211   0020E2  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5212   0020E6  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5213   0020EA  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5214   0020EE  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5215   0020F2  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5216   0020F6  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5217   0020FA  EC79  F022         	call	_turnLeft	;wreg free
  5218                           
  5219                           ;dc_motor.c: 327:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5220   0020FE  0E05               	movlw	5
  5221   002100  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5222   002102  0E0F               	movlw	15
  5223   002104  6E42               	movwf	??_lostReturnHome^0,c
  5224   002106  0EF1               	movlw	241
  5225   002108                     u4537:
  5226   002108  2EE8               	decfsz	wreg,f,c
  5227   00210A  D7FE               	bra	u4537
  5228   00210C  2E42               	decfsz	??_lostReturnHome^0,f,c
  5229   00210E  D7FC               	bra	u4537
  5230   002110  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5231   002112  D7FA               	bra	u4537
  5232   002114  0000               	nop	
  5233   002116                     
  5234                           ;dc_motor.c: 328:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5235   002116  C032  F023         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5236   00211A  C033  F024         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5237   00211E  C034  F025         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5238   002122  C035  F026         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5239   002126  C03B  F027         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5240   00212A  C03C  F028         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5241   00212E  C03D  F029         	movff	lostReturnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  5242   002132  C03E  F02A         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5243   002136  EC9D  F020         	call	_reverseOneSquare	;wreg free
  5244   00213A  EF36  F010         	goto	l4275
  5245   00213E                     l4289:
  5246   00213E  5046               	movf	lostReturnHome@i^0,w,c
  5247   002140  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5248   002142  6ED9               	movwf	fsr2l,c
  5249   002144  0E00               	movlw	0
  5250   002146  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5251   002148  6EDA               	movwf	fsr2h,c
  5252   00214A  0E05               	movlw	5
  5253   00214C  18DE               	xorwf	postinc2,w,c
  5254   00214E  A4D8               	btfss	status,2,c
  5255   002150  EFAC  F010         	goto	u3261
  5256   002154  EFAE  F010         	goto	u3260
  5257   002158                     u3261:
  5258   002158  EFFA  F010         	goto	l4301
  5259   00215C                     u3260:
  5260   00215C                     
  5261                           ;dc_motor.c: 333:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5262   00215C  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5263   002160  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5264   002164  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5265   002168  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5266   00216C  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5267   002170  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5268   002174  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5269   002178  EC8C  F021         	call	_turnRight	;wreg free
  5270   00217C                     
  5271                           ;dc_motor.c: 334:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5272   00217C  0E05               	movlw	5
  5273   00217E  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5274   002180  0E0F               	movlw	15
  5275   002182  6E42               	movwf	??_lostReturnHome^0,c
  5276   002184  0EF1               	movlw	241
  5277   002186                     u4547:
  5278   002186  2EE8               	decfsz	wreg,f,c
  5279   002188  D7FE               	bra	u4547
  5280   00218A  2E42               	decfsz	??_lostReturnHome^0,f,c
  5281   00218C  D7FC               	bra	u4547
  5282   00218E  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5283   002190  D7FA               	bra	u4547
  5284   002192  0000               	nop	
  5285   002194                     
  5286                           ;dc_motor.c: 335:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5287   002194  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5288   002198  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5289   00219C  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5290   0021A0  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5291   0021A4  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5292   0021A8  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5293   0021AC  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5294   0021B0  EC8C  F021         	call	_turnRight	;wreg free
  5295                           
  5296                           ;dc_motor.c: 336:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5297   0021B4  0E05               	movlw	5
  5298   0021B6  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5299   0021B8  0E0F               	movlw	15
  5300   0021BA  6E42               	movwf	??_lostReturnHome^0,c
  5301   0021BC  0EF1               	movlw	241
  5302   0021BE                     u4557:
  5303   0021BE  2EE8               	decfsz	wreg,f,c
  5304   0021C0  D7FE               	bra	u4557
  5305   0021C2  2E42               	decfsz	??_lostReturnHome^0,f,c
  5306   0021C4  D7FC               	bra	u4557
  5307   0021C6  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5308   0021C8  D7FA               	bra	u4557
  5309   0021CA  0000               	nop	
  5310   0021CC                     
  5311                           ;dc_motor.c: 337:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5312   0021CC  C032  F023         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5313   0021D0  C033  F024         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5314   0021D4  C034  F025         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5315   0021D8  C035  F026         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5316   0021DC  C03B  F027         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5317   0021E0  C03C  F028         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5318   0021E4  C03D  F029         	movff	lostReturnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  5319   0021E8  C03E  F02A         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5320   0021EC  EC9D  F020         	call	_reverseOneSquare	;wreg free
  5321   0021F0  EF36  F010         	goto	l4275
  5322   0021F4                     l4301:
  5323   0021F4  5046               	movf	lostReturnHome@i^0,w,c
  5324   0021F6  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5325   0021F8  6ED9               	movwf	fsr2l,c
  5326   0021FA  0E00               	movlw	0
  5327   0021FC  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5328   0021FE  6EDA               	movwf	fsr2h,c
  5329   002200  0E06               	movlw	6
  5330   002202  18DE               	xorwf	postinc2,w,c
  5331   002204  A4D8               	btfss	status,2,c
  5332   002206  EF07  F011         	goto	u3271
  5333   00220A  EF09  F011         	goto	u3270
  5334   00220E                     u3271:
  5335   00220E  EF53  F011         	goto	l4313
  5336   002212                     u3270:
  5337   002212                     
  5338                           ;dc_motor.c: 342:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5339   002212  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5340   002216  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5341   00221A  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5342   00221E  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5343   002222  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5344   002226  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5345   00222A  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5346   00222E  EC79  F022         	call	_turnLeft	;wreg free
  5347   002232                     
  5348                           ;dc_motor.c: 343:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5349   002232  0E05               	movlw	5
  5350   002234  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5351   002236  0E0F               	movlw	15
  5352   002238  6E42               	movwf	??_lostReturnHome^0,c
  5353   00223A  0EF1               	movlw	241
  5354   00223C                     u4567:
  5355   00223C  2EE8               	decfsz	wreg,f,c
  5356   00223E  D7FE               	bra	u4567
  5357   002240  2E42               	decfsz	??_lostReturnHome^0,f,c
  5358   002242  D7FC               	bra	u4567
  5359   002244  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5360   002246  D7FA               	bra	u4567
  5361   002248  0000               	nop	
  5362   00224A                     
  5363                           ;dc_motor.c: 344:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5364   00224A  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5365   00224E  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5366   002252  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5367   002256  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5368   00225A  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5369   00225E  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5370   002262  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5371   002266  EC79  F022         	call	_turnLeft	;wreg free
  5372                           
  5373                           ;dc_motor.c: 345:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5374   00226A  0E05               	movlw	5
  5375   00226C  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5376   00226E  0E0F               	movlw	15
  5377   002270  6E42               	movwf	??_lostReturnHome^0,c
  5378   002272  0EF1               	movlw	241
  5379   002274                     u4577:
  5380   002274  2EE8               	decfsz	wreg,f,c
  5381   002276  D7FE               	bra	u4577
  5382   002278  2E42               	decfsz	??_lostReturnHome^0,f,c
  5383   00227A  D7FC               	bra	u4577
  5384   00227C  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5385   00227E  D7FA               	bra	u4577
  5386   002280  0000               	nop	
  5387   002282                     
  5388                           ;dc_motor.c: 346:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5389   002282  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5390   002286  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5391   00228A  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5392   00228E  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5393   002292  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5394   002296  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5395   00229A  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5396   00229E  EC79  F022         	call	_turnLeft	;wreg free
  5397   0022A2  EF36  F010         	goto	l4275
  5398   0022A6                     l4313:
  5399   0022A6  5046               	movf	lostReturnHome@i^0,w,c
  5400   0022A8  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5401   0022AA  6ED9               	movwf	fsr2l,c
  5402   0022AC  0E00               	movlw	0
  5403   0022AE  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5404   0022B0  6EDA               	movwf	fsr2h,c
  5405   0022B2  0E07               	movlw	7
  5406   0022B4  18DE               	xorwf	postinc2,w,c
  5407   0022B6  A4D8               	btfss	status,2,c
  5408   0022B8  EF60  F011         	goto	u3281
  5409   0022BC  EF62  F011         	goto	u3280
  5410   0022C0                     u3281:
  5411   0022C0  EFAC  F011         	goto	l607
  5412   0022C4                     u3280:
  5413   0022C4                     
  5414                           ;dc_motor.c: 351:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5415   0022C4  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5416   0022C8  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5417   0022CC  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5418   0022D0  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5419   0022D4  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5420   0022D8  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5421   0022DC  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5422   0022E0  EC8C  F021         	call	_turnRight	;wreg free
  5423   0022E4                     
  5424                           ;dc_motor.c: 352:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5425   0022E4  0E05               	movlw	5
  5426   0022E6  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5427   0022E8  0E0F               	movlw	15
  5428   0022EA  6E42               	movwf	??_lostReturnHome^0,c
  5429   0022EC  0EF1               	movlw	241
  5430   0022EE                     u4587:
  5431   0022EE  2EE8               	decfsz	wreg,f,c
  5432   0022F0  D7FE               	bra	u4587
  5433   0022F2  2E42               	decfsz	??_lostReturnHome^0,f,c
  5434   0022F4  D7FC               	bra	u4587
  5435   0022F6  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5436   0022F8  D7FA               	bra	u4587
  5437   0022FA  0000               	nop	
  5438   0022FC                     
  5439                           ;dc_motor.c: 353:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5440   0022FC  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5441   002300  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5442   002304  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5443   002308  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5444   00230C  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5445   002310  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5446   002314  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5447   002318  EC8C  F021         	call	_turnRight	;wreg free
  5448                           
  5449                           ;dc_motor.c: 354:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5450   00231C  0E05               	movlw	5
  5451   00231E  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5452   002320  0E0F               	movlw	15
  5453   002322  6E42               	movwf	??_lostReturnHome^0,c
  5454   002324  0EF1               	movlw	241
  5455   002326                     u4597:
  5456   002326  2EE8               	decfsz	wreg,f,c
  5457   002328  D7FE               	bra	u4597
  5458   00232A  2E42               	decfsz	??_lostReturnHome^0,f,c
  5459   00232C  D7FC               	bra	u4597
  5460   00232E  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5461   002330  D7FA               	bra	u4597
  5462   002332  0000               	nop	
  5463   002334                     
  5464                           ;dc_motor.c: 355:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5465   002334  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5466   002338  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5467   00233C  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5468   002340  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5469   002344  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5470   002348  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5471   00234C  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5472   002350  EC8C  F021         	call	_turnRight	;wreg free
  5473   002354  EF36  F010         	goto	l4275
  5474   002358                     l607:
  5475   002358                     l601:
  5476                           
  5477                           ;dc_motor.c: 359:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  5478   002358  C032  F023         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  5479   00235C  C033  F024         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  5480   002360  C034  F025         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  5481   002364  C035  F026         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  5482   002368  C03B  F027         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  5483   00236C  C03E  F028         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  5484   002370  EC26  F025         	call	_fullSpeedAhead	;wreg free
  5485   002374                     
  5486                           ;dc_motor.c: 360:         resetTimer();
  5487   002374  ECAE  F029         	call	_resetTimer	;wreg free
  5488   002378                     l4327:
  5489   002378  5046               	movf	lostReturnHome@i^0,w,c
  5490   00237A  0D02               	mullw	2
  5491   00237C  CFF3 F042          	movff	prodl,??_lostReturnHome
  5492   002380  CFF4 F043          	movff	prodh,??_lostReturnHome+1
  5493   002384  5042               	movf	??_lostReturnHome^0,w,c
  5494   002386  2438               	addwf	lostReturnHome@straightTime^0,w,c
  5495   002388  6ED9               	movwf	fsr2l,c
  5496   00238A  5043               	movf	(??_lostReturnHome+1)^0,w,c
  5497   00238C  2039               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  5498   00238E  6EDA               	movwf	fsr2h,c
  5499   002390  ECCF  F028         	call	_get16bitTMR0val	;wreg free
  5500   002394  50DE               	movf	postinc2,w,c
  5501   002396  5C10               	subwf	?_get16bitTMR0val^0,w,c
  5502   002398  50DE               	movf	postinc2,w,c
  5503   00239A  5811               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  5504   00239C  A0D8               	btfss	status,0,c
  5505   00239E  EFD3  F011         	goto	u3291
  5506   0023A2  EFD5  F011         	goto	u3290
  5507   0023A6                     u3291:
  5508   0023A6  EFBC  F011         	goto	l4327
  5509   0023AA                     u3290:
  5510   0023AA                     
  5511                           ;dc_motor.c: 362:         stop(mL, mR, straightRamp);
  5512   0023AA  C032  F023         	movff	lostReturnHome@mL,stop@mL
  5513   0023AE  C033  F024         	movff	lostReturnHome@mL+1,stop@mL+1
  5514   0023B2  C034  F025         	movff	lostReturnHome@mR,stop@mR
  5515   0023B6  C035  F026         	movff	lostReturnHome@mR+1,stop@mR+1
  5516   0023BA  C03E  F027         	movff	lostReturnHome@straightRamp,stop@straightRamp
  5517   0023BE  ECA2  F024         	call	_stop	;wreg free
  5518   0023C2                     l4331:
  5519                           
  5520                           ;dc_motor.c: 295:     while (i>0) {
  5521   0023C2  5046               	movf	lostReturnHome@i^0,w,c
  5522   0023C4  A4D8               	btfss	status,2,c
  5523   0023C6  EFE7  F011         	goto	u3301
  5524   0023CA  EFE9  F011         	goto	u3300
  5525   0023CE                     u3301:
  5526   0023CE  EF31  F00F         	goto	l4245
  5527   0023D2                     u3300:
  5528   0023D2  0012               	return		;funcret
  5529   0023D4                     __end_of_lostReturnHome:
  5530                           	callstack 0
  5531                           
  5532 ;; *************** function _stop *****************
  5533 ;; Defined at:
  5534 ;;		line 367 in file "dc_motor.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  5537 ;;		 -> main@motorL(10), 
  5538 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  5539 ;;		 -> main@motorR(10), 
  5540 ;;  straightRamp    1   38[COMRAM] unsigned char 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  cur_power       2   44[COMRAM] int 
  5543 ;;  i               2   42[COMRAM] int 
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5553 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5554 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5555 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5556 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5557 ;;Total ram usage:       12 bytes
  5558 ;; Hardware stack levels used: 1
  5559 ;; Hardware stack levels required when called: 8
  5560 ;; This function calls:
  5561 ;;		_setMotorPWM
  5562 ;; This function is called by:
  5563 ;;		_main
  5564 ;;		_returnHome
  5565 ;;		_lostReturnHome
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text6
  5570   004944                     __ptext6:
  5571                           	callstack 0
  5572   004944                     _stop:
  5573                           	callstack 22
  5574   004944                     
  5575                           ;dc_motor.c: 367: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 368: {;dc_motor.c: 369:     mL->direction = 1;
  5576   004944  EE20 F001          	lfsr	2,1
  5577   004948  5023               	movf	stop@mL^0,w,c
  5578   00494A  26D9               	addwf	fsr2l,f,c
  5579   00494C  5024               	movf	(stop@mL+1)^0,w,c
  5580   00494E  22DA               	addwfc	fsr2h,f,c
  5581   004950  0E01               	movlw	1
  5582   004952  6EDF               	movwf	indf2,c
  5583                           
  5584                           ;dc_motor.c: 370:     mR->direction = 1;
  5585   004954  EE20 F001          	lfsr	2,1
  5586   004958  5025               	movf	stop@mR^0,w,c
  5587   00495A  26D9               	addwf	fsr2l,f,c
  5588   00495C  5026               	movf	(stop@mR+1)^0,w,c
  5589   00495E  22DA               	addwfc	fsr2h,f,c
  5590   004960  0E01               	movlw	1
  5591   004962  6EDF               	movwf	indf2,c
  5592                           
  5593                           ;dc_motor.c: 371:     int i;;dc_motor.c: 372:     int cur_power;;dc_motor.c: 373:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  5594   004964  C023  FFD9         	movff	stop@mL,fsr2l
  5595   004968  C024  FFDA         	movff	stop@mL+1,fsr2h
  5596   00496C  50DF               	movf	indf2,w,c
  5597   00496E  6E28               	movwf	??_stop^0,c
  5598   004970  EE20 F009          	lfsr	2,9
  5599   004974  5023               	movf	stop@mL^0,w,c
  5600   004976  26D9               	addwf	fsr2l,f,c
  5601   004978  5024               	movf	(stop@mL+1)^0,w,c
  5602   00497A  22DA               	addwfc	fsr2h,f,c
  5603   00497C  50DF               	movf	indf2,w,c
  5604   00497E  6E29               	movwf	(??_stop+1)^0,c
  5605   004980  5029               	movf	(??_stop+1)^0,w,c
  5606   004982  5C28               	subwf	??_stop^0,w,c
  5607   004984  6E2D               	movwf	stop@cur_power^0,c
  5608   004986  6A2E               	clrf	(stop@cur_power+1)^0,c
  5609   004988  A0D8               	btfss	status,0,c
  5610   00498A  062E               	decf	(stop@cur_power+1)^0,f,c
  5611   00498C                     l3105:
  5612   00498C  BE2E               	btfsc	(stop@cur_power+1)^0,7,c
  5613   00498E  EFCD  F024         	goto	u1920
  5614   004992  EFCB  F024         	goto	u1921
  5615   004996                     u1921:
  5616   004996  EFCF  F024         	goto	l3109
  5617   00499A                     u1920:
  5618   00499A  EF1B  F025         	goto	l3125
  5619   00499E                     l3109:
  5620                           
  5621                           ;dc_motor.c: 374:         mL->power = cur_power+mL->compensation;
  5622   00499E  EE20 F009          	lfsr	2,9
  5623   0049A2  5023               	movf	stop@mL^0,w,c
  5624   0049A4  26D9               	addwf	fsr2l,f,c
  5625   0049A6  5024               	movf	(stop@mL+1)^0,w,c
  5626   0049A8  22DA               	addwfc	fsr2h,f,c
  5627   0049AA  50DF               	movf	indf2,w,c
  5628   0049AC  242D               	addwf	stop@cur_power^0,w,c
  5629   0049AE  C023  FFD9         	movff	stop@mL,fsr2l
  5630   0049B2  C024  FFDA         	movff	stop@mL+1,fsr2h
  5631   0049B6  6EDF               	movwf	indf2,c
  5632                           
  5633                           ;dc_motor.c: 375:         mR->power = cur_power+mR->compensation;
  5634   0049B8  EE20 F009          	lfsr	2,9
  5635   0049BC  5025               	movf	stop@mR^0,w,c
  5636   0049BE  26D9               	addwf	fsr2l,f,c
  5637   0049C0  5026               	movf	(stop@mR+1)^0,w,c
  5638   0049C2  22DA               	addwfc	fsr2h,f,c
  5639   0049C4  50DF               	movf	indf2,w,c
  5640   0049C6  242D               	addwf	stop@cur_power^0,w,c
  5641   0049C8  C025  FFD9         	movff	stop@mR,fsr2l
  5642   0049CC  C026  FFDA         	movff	stop@mR+1,fsr2h
  5643   0049D0  6EDF               	movwf	indf2,c
  5644   0049D2                     
  5645                           ;dc_motor.c: 376:         setMotorPWM(mL);
  5646   0049D2  C023  F01D         	movff	stop@mL,setMotorPWM@m
  5647   0049D6  C024  F01E         	movff	stop@mL+1,setMotorPWM@m+1
  5648   0049DA  EC66  F023         	call	_setMotorPWM	;wreg free
  5649   0049DE                     
  5650                           ;dc_motor.c: 377:         setMotorPWM(mR);
  5651   0049DE  C025  F01D         	movff	stop@mR,setMotorPWM@m
  5652   0049E2  C026  F01E         	movff	stop@mR+1,setMotorPWM@m+1
  5653   0049E6  EC66  F023         	call	_setMotorPWM	;wreg free
  5654   0049EA                     
  5655                           ;dc_motor.c: 378:         for (i=0;i<straightRamp;i++) {
  5656   0049EA  0E00               	movlw	0
  5657   0049EC  6E2C               	movwf	(stop@i+1)^0,c
  5658   0049EE  0E00               	movlw	0
  5659   0049F0  6E2B               	movwf	stop@i^0,c
  5660   0049F2  EF04  F025         	goto	l622
  5661   0049F6                     l3117:
  5662                           
  5663                           ;dc_motor.c: 379:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5664   0049F6  0ED0               	movlw	208
  5665   0049F8  6E28               	movwf	??_stop^0,c
  5666   0049FA  0ECA               	movlw	202
  5667   0049FC                     u4607:
  5668   0049FC  2EE8               	decfsz	wreg,f,c
  5669   0049FE  D7FE               	bra	u4607
  5670   004A00  2E28               	decfsz	??_stop^0,f,c
  5671   004A02  D7FC               	bra	u4607
  5672   004A04                     
  5673                           ;dc_motor.c: 380:         }
  5674   004A04  4A2B               	infsnz	stop@i^0,f,c
  5675   004A06  2A2C               	incf	(stop@i+1)^0,f,c
  5676   004A08                     l622:
  5677   004A08  5027               	movf	stop@straightRamp^0,w,c
  5678   004A0A  6E28               	movwf	??_stop^0,c
  5679   004A0C  6A29               	clrf	(??_stop+1)^0,c
  5680   004A0E  5028               	movf	??_stop^0,w,c
  5681   004A10  5C2B               	subwf	stop@i^0,w,c
  5682   004A12  502C               	movf	(stop@i+1)^0,w,c
  5683   004A14  0A80               	xorlw	128
  5684   004A16  6E2A               	movwf	(??_stop+2)^0,c
  5685   004A18  5029               	movf	(??_stop+1)^0,w,c
  5686   004A1A  0A80               	xorlw	128
  5687   004A1C  582A               	subwfb	(??_stop+2)^0,w,c
  5688   004A1E  A0D8               	btfss	status,0,c
  5689   004A20  EF14  F025         	goto	u1931
  5690   004A24  EF16  F025         	goto	u1930
  5691   004A28                     u1931:
  5692   004A28  EFFB  F024         	goto	l3117
  5693   004A2C                     u1930:
  5694   004A2C                     
  5695                           ;dc_motor.c: 381:     }
  5696   004A2C  062D               	decf	stop@cur_power^0,f,c
  5697   004A2E  A0D8               	btfss	status,0,c
  5698   004A30  062E               	decf	(stop@cur_power+1)^0,f,c
  5699   004A32  EFC6  F024         	goto	l3105
  5700   004A36                     l3125:
  5701                           
  5702                           ;dc_motor.c: 382:     mL->power = 0;
  5703   004A36  C023  FFD9         	movff	stop@mL,fsr2l
  5704   004A3A  C024  FFDA         	movff	stop@mL+1,fsr2h
  5705   004A3E  6ADF               	clrf	indf2,c
  5706                           
  5707                           ;dc_motor.c: 383:     mR->power = 0;
  5708   004A40  C025  FFD9         	movff	stop@mR,fsr2l
  5709   004A44  C026  FFDA         	movff	stop@mR+1,fsr2h
  5710   004A48  6ADF               	clrf	indf2,c
  5711   004A4A  0012               	return		;funcret
  5712   004A4C                     __end_of_stop:
  5713                           	callstack 0
  5714                           
  5715 ;; *************** function _reverseOneSquare *****************
  5716 ;; Defined at:
  5717 ;;		line 468 in file "dc_motor.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  5720 ;;		 -> main@motorL(10), 
  5721 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  5722 ;;		 -> main@motorR(10), 
  5723 ;;  straightSpee    1   38[COMRAM] unsigned char 
  5724 ;;  reverseDurat    2   39[COMRAM] unsigned int 
  5725 ;;  straightRamp    1   41[COMRAM] unsigned char 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  cur_power       2   47[COMRAM] int 
  5728 ;;  i               2   45[COMRAM] int 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5738 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5739 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5740 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5741 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5742 ;;Total ram usage:       15 bytes
  5743 ;; Hardware stack levels used: 1
  5744 ;; Hardware stack levels required when called: 8
  5745 ;; This function calls:
  5746 ;;		_setMotorPWM
  5747 ;; This function is called by:
  5748 ;;		_move
  5749 ;;		_returnHome
  5750 ;;		_lostReturnHome
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text7
  5755   00413A                     __ptext7:
  5756                           	callstack 0
  5757   00413A                     _reverseOneSquare:
  5758                           	callstack 21
  5759   00413A                     
  5760                           ;dc_motor.c: 468: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned int reverseDuration, unsigned char straightRamp);dc_motor.c: 469: {;dc_motor.c:
      +                           470:     mL->direction = 0;
  5761   00413A  EE20 F001          	lfsr	2,1
  5762   00413E  5023               	movf	reverseOneSquare@mL^0,w,c
  5763   004140  26D9               	addwf	fsr2l,f,c
  5764   004142  5024               	movf	(reverseOneSquare@mL+1)^0,w,c
  5765   004144  22DA               	addwfc	fsr2h,f,c
  5766   004146  6ADF               	clrf	indf2,c
  5767                           
  5768                           ;dc_motor.c: 471:     mR->direction = 0;
  5769   004148  EE20 F001          	lfsr	2,1
  5770   00414C  5025               	movf	reverseOneSquare@mR^0,w,c
  5771   00414E  26D9               	addwf	fsr2l,f,c
  5772   004150  5026               	movf	(reverseOneSquare@mR+1)^0,w,c
  5773   004152  22DA               	addwfc	fsr2h,f,c
  5774   004154  6ADF               	clrf	indf2,c
  5775   004156                     
  5776                           ;dc_motor.c: 472:     int i;;dc_motor.c: 473:     int cur_power;;dc_motor.c: 474:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  5777   004156  0E00               	movlw	0
  5778   004158  6E31               	movwf	(reverseOneSquare@cur_power+1)^0,c
  5779   00415A  0E01               	movlw	1
  5780   00415C  6E30               	movwf	reverseOneSquare@cur_power^0,c
  5781   00415E  EFFB  F020         	goto	l3269
  5782   004162                     l3255:
  5783                           
  5784                           ;dc_motor.c: 475:         mL->power = cur_power+mL->compensation;
  5785   004162  EE20 F009          	lfsr	2,9
  5786   004166  5023               	movf	reverseOneSquare@mL^0,w,c
  5787   004168  26D9               	addwf	fsr2l,f,c
  5788   00416A  5024               	movf	(reverseOneSquare@mL+1)^0,w,c
  5789   00416C  22DA               	addwfc	fsr2h,f,c
  5790   00416E  50DF               	movf	indf2,w,c
  5791   004170  2430               	addwf	reverseOneSquare@cur_power^0,w,c
  5792   004172  C023  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5793   004176  C024  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5794   00417A  6EDF               	movwf	indf2,c
  5795                           
  5796                           ;dc_motor.c: 476:         mR->power = cur_power+mR->compensation;
  5797   00417C  EE20 F009          	lfsr	2,9
  5798   004180  5025               	movf	reverseOneSquare@mR^0,w,c
  5799   004182  26D9               	addwf	fsr2l,f,c
  5800   004184  5026               	movf	(reverseOneSquare@mR+1)^0,w,c
  5801   004186  22DA               	addwfc	fsr2h,f,c
  5802   004188  50DF               	movf	indf2,w,c
  5803   00418A  2430               	addwf	reverseOneSquare@cur_power^0,w,c
  5804   00418C  C025  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5805   004190  C026  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5806   004194  6EDF               	movwf	indf2,c
  5807   004196                     
  5808                           ;dc_motor.c: 477:         setMotorPWM(mL);
  5809   004196  C023  F01D         	movff	reverseOneSquare@mL,setMotorPWM@m
  5810   00419A  C024  F01E         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  5811   00419E  EC66  F023         	call	_setMotorPWM	;wreg free
  5812   0041A2                     
  5813                           ;dc_motor.c: 478:         setMotorPWM(mR);
  5814   0041A2  C025  F01D         	movff	reverseOneSquare@mR,setMotorPWM@m
  5815   0041A6  C026  F01E         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  5816   0041AA  EC66  F023         	call	_setMotorPWM	;wreg free
  5817   0041AE                     
  5818                           ;dc_motor.c: 479:         for (i=0;i<straightRamp;i++) {
  5819   0041AE  0E00               	movlw	0
  5820   0041B0  6E2F               	movwf	(reverseOneSquare@i+1)^0,c
  5821   0041B2  0E00               	movlw	0
  5822   0041B4  6E2E               	movwf	reverseOneSquare@i^0,c
  5823   0041B6  EFE7  F020         	goto	l673
  5824   0041BA                     l3263:
  5825                           
  5826                           ;dc_motor.c: 480:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5827   0041BA  0E68               	movlw	104
  5828   0041BC  6E2B               	movwf	??_reverseOneSquare^0,c
  5829   0041BE  0EE4               	movlw	228
  5830   0041C0                     u4617:
  5831   0041C0  2EE8               	decfsz	wreg,f,c
  5832   0041C2  D7FE               	bra	u4617
  5833   0041C4  2E2B               	decfsz	??_reverseOneSquare^0,f,c
  5834   0041C6  D7FC               	bra	u4617
  5835   0041C8  D000               	nop2	
  5836   0041CA                     
  5837                           ;dc_motor.c: 481:         }
  5838   0041CA  4A2E               	infsnz	reverseOneSquare@i^0,f,c
  5839   0041CC  2A2F               	incf	(reverseOneSquare@i+1)^0,f,c
  5840   0041CE                     l673:
  5841   0041CE  502A               	movf	reverseOneSquare@straightRamp^0,w,c
  5842   0041D0  6E2B               	movwf	??_reverseOneSquare^0,c
  5843   0041D2  6A2C               	clrf	(??_reverseOneSquare+1)^0,c
  5844   0041D4  502B               	movf	??_reverseOneSquare^0,w,c
  5845   0041D6  5C2E               	subwf	reverseOneSquare@i^0,w,c
  5846   0041D8  502F               	movf	(reverseOneSquare@i+1)^0,w,c
  5847   0041DA  0A80               	xorlw	128
  5848   0041DC  6E2D               	movwf	(??_reverseOneSquare+2)^0,c
  5849   0041DE  502C               	movf	(??_reverseOneSquare+1)^0,w,c
  5850   0041E0  0A80               	xorlw	128
  5851   0041E2  582D               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5852   0041E4  A0D8               	btfss	status,0,c
  5853   0041E6  EFF7  F020         	goto	u2081
  5854   0041EA  EFF9  F020         	goto	u2080
  5855   0041EE                     u2081:
  5856   0041EE  EFDD  F020         	goto	l3263
  5857   0041F2                     u2080:
  5858   0041F2                     
  5859                           ;dc_motor.c: 482:     }
  5860   0041F2  4A30               	infsnz	reverseOneSquare@cur_power^0,f,c
  5861   0041F4  2A31               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  5862   0041F6                     l3269:
  5863   0041F6  5027               	movf	reverseOneSquare@straightSpeed^0,w,c
  5864   0041F8  6E2B               	movwf	??_reverseOneSquare^0,c
  5865   0041FA  6A2C               	clrf	(??_reverseOneSquare+1)^0,c
  5866   0041FC  5030               	movf	reverseOneSquare@cur_power^0,w,c
  5867   0041FE  5C2B               	subwf	??_reverseOneSquare^0,w,c
  5868   004200  502C               	movf	(??_reverseOneSquare+1)^0,w,c
  5869   004202  0A80               	xorlw	128
  5870   004204  6E2D               	movwf	(??_reverseOneSquare+2)^0,c
  5871   004206  5031               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  5872   004208  0A80               	xorlw	128
  5873   00420A  582D               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5874   00420C  B0D8               	btfsc	status,0,c
  5875   00420E  EF0B  F021         	goto	u2091
  5876   004212  EF0D  F021         	goto	u2090
  5877   004216                     u2091:
  5878   004216  EFB1  F020         	goto	l3255
  5879   00421A                     u2090:
  5880   00421A                     
  5881                           ;dc_motor.c: 484:     for (i=0;i<reverseDuration;i++) {
  5882   00421A  0E00               	movlw	0
  5883   00421C  6E2F               	movwf	(reverseOneSquare@i+1)^0,c
  5884   00421E  0E00               	movlw	0
  5885   004220  6E2E               	movwf	reverseOneSquare@i^0,c
  5886   004222  EF1D  F021         	goto	l677
  5887   004226                     l3273:
  5888                           
  5889                           ;dc_motor.c: 485:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5890   004226  0E68               	movlw	104
  5891   004228  6E2B               	movwf	??_reverseOneSquare^0,c
  5892   00422A  0EE4               	movlw	228
  5893   00422C                     u4627:
  5894   00422C  2EE8               	decfsz	wreg,f,c
  5895   00422E  D7FE               	bra	u4627
  5896   004230  2E2B               	decfsz	??_reverseOneSquare^0,f,c
  5897   004232  D7FC               	bra	u4627
  5898   004234  D000               	nop2	
  5899   004236                     
  5900                           ;dc_motor.c: 486:         }
  5901   004236  4A2E               	infsnz	reverseOneSquare@i^0,f,c
  5902   004238  2A2F               	incf	(reverseOneSquare@i+1)^0,f,c
  5903   00423A                     l677:
  5904   00423A  5028               	movf	reverseOneSquare@reverseDuration^0,w,c
  5905   00423C  5C2E               	subwf	reverseOneSquare@i^0,w,c
  5906   00423E  5029               	movf	(reverseOneSquare@reverseDuration+1)^0,w,c
  5907   004240  582F               	subwfb	(reverseOneSquare@i+1)^0,w,c
  5908   004242  A0D8               	btfss	status,0,c
  5909   004244  EF26  F021         	goto	u2101
  5910   004248  EF28  F021         	goto	u2100
  5911   00424C                     u2101:
  5912   00424C  EF13  F021         	goto	l3273
  5913   004250                     u2100:
  5914   004250                     
  5915                           ;dc_motor.c: 488:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  5916   004250  C027  F030         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  5917   004254  6A31               	clrf	(reverseOneSquare@cur_power+1)^0,c
  5918   004256                     l3277:
  5919   004256  BE31               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  5920   004258  EF32  F021         	goto	u2110
  5921   00425C  EF30  F021         	goto	u2111
  5922   004260                     u2111:
  5923   004260  EF34  F021         	goto	l3281
  5924   004264                     u2110:
  5925   004264  EF81  F021         	goto	l3297
  5926   004268                     l3281:
  5927                           
  5928                           ;dc_motor.c: 489:         mL->power = cur_power+mL->compensation;
  5929   004268  EE20 F009          	lfsr	2,9
  5930   00426C  5023               	movf	reverseOneSquare@mL^0,w,c
  5931   00426E  26D9               	addwf	fsr2l,f,c
  5932   004270  5024               	movf	(reverseOneSquare@mL+1)^0,w,c
  5933   004272  22DA               	addwfc	fsr2h,f,c
  5934   004274  50DF               	movf	indf2,w,c
  5935   004276  2430               	addwf	reverseOneSquare@cur_power^0,w,c
  5936   004278  C023  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5937   00427C  C024  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5938   004280  6EDF               	movwf	indf2,c
  5939                           
  5940                           ;dc_motor.c: 490:         mR->power = cur_power+mR->compensation;
  5941   004282  EE20 F009          	lfsr	2,9
  5942   004286  5025               	movf	reverseOneSquare@mR^0,w,c
  5943   004288  26D9               	addwf	fsr2l,f,c
  5944   00428A  5026               	movf	(reverseOneSquare@mR+1)^0,w,c
  5945   00428C  22DA               	addwfc	fsr2h,f,c
  5946   00428E  50DF               	movf	indf2,w,c
  5947   004290  2430               	addwf	reverseOneSquare@cur_power^0,w,c
  5948   004292  C025  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5949   004296  C026  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5950   00429A  6EDF               	movwf	indf2,c
  5951   00429C                     
  5952                           ;dc_motor.c: 491:         setMotorPWM(mL);
  5953   00429C  C023  F01D         	movff	reverseOneSquare@mL,setMotorPWM@m
  5954   0042A0  C024  F01E         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  5955   0042A4  EC66  F023         	call	_setMotorPWM	;wreg free
  5956   0042A8                     
  5957                           ;dc_motor.c: 492:         setMotorPWM(mR);
  5958   0042A8  C025  F01D         	movff	reverseOneSquare@mR,setMotorPWM@m
  5959   0042AC  C026  F01E         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  5960   0042B0  EC66  F023         	call	_setMotorPWM	;wreg free
  5961   0042B4                     
  5962                           ;dc_motor.c: 493:         for (i=0;i<straightRamp;i++) {
  5963   0042B4  0E00               	movlw	0
  5964   0042B6  6E2F               	movwf	(reverseOneSquare@i+1)^0,c
  5965   0042B8  0E00               	movlw	0
  5966   0042BA  6E2E               	movwf	reverseOneSquare@i^0,c
  5967   0042BC  EF6A  F021         	goto	l682
  5968   0042C0                     l3289:
  5969                           
  5970                           ;dc_motor.c: 494:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5971   0042C0  0E68               	movlw	104
  5972   0042C2  6E2B               	movwf	??_reverseOneSquare^0,c
  5973   0042C4  0EE4               	movlw	228
  5974   0042C6                     u4637:
  5975   0042C6  2EE8               	decfsz	wreg,f,c
  5976   0042C8  D7FE               	bra	u4637
  5977   0042CA  2E2B               	decfsz	??_reverseOneSquare^0,f,c
  5978   0042CC  D7FC               	bra	u4637
  5979   0042CE  D000               	nop2	
  5980   0042D0                     
  5981                           ;dc_motor.c: 495:         }
  5982   0042D0  4A2E               	infsnz	reverseOneSquare@i^0,f,c
  5983   0042D2  2A2F               	incf	(reverseOneSquare@i+1)^0,f,c
  5984   0042D4                     l682:
  5985   0042D4  502A               	movf	reverseOneSquare@straightRamp^0,w,c
  5986   0042D6  6E2B               	movwf	??_reverseOneSquare^0,c
  5987   0042D8  6A2C               	clrf	(??_reverseOneSquare+1)^0,c
  5988   0042DA  502B               	movf	??_reverseOneSquare^0,w,c
  5989   0042DC  5C2E               	subwf	reverseOneSquare@i^0,w,c
  5990   0042DE  502F               	movf	(reverseOneSquare@i+1)^0,w,c
  5991   0042E0  0A80               	xorlw	128
  5992   0042E2  6E2D               	movwf	(??_reverseOneSquare+2)^0,c
  5993   0042E4  502C               	movf	(??_reverseOneSquare+1)^0,w,c
  5994   0042E6  0A80               	xorlw	128
  5995   0042E8  582D               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5996   0042EA  A0D8               	btfss	status,0,c
  5997   0042EC  EF7A  F021         	goto	u2121
  5998   0042F0  EF7C  F021         	goto	u2120
  5999   0042F4                     u2121:
  6000   0042F4  EF60  F021         	goto	l3289
  6001   0042F8                     u2120:
  6002   0042F8                     
  6003                           ;dc_motor.c: 496:     }
  6004   0042F8  0630               	decf	reverseOneSquare@cur_power^0,f,c
  6005   0042FA  A0D8               	btfss	status,0,c
  6006   0042FC  0631               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  6007   0042FE  EF2B  F021         	goto	l3277
  6008   004302                     l3297:
  6009                           
  6010                           ;dc_motor.c: 497:     mL->power = 0;
  6011   004302  C023  FFD9         	movff	reverseOneSquare@mL,fsr2l
  6012   004306  C024  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  6013   00430A  6ADF               	clrf	indf2,c
  6014                           
  6015                           ;dc_motor.c: 498:     mR->power = 0;
  6016   00430C  C025  FFD9         	movff	reverseOneSquare@mR,fsr2l
  6017   004310  C026  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  6018   004314  6ADF               	clrf	indf2,c
  6019   004316  0012               	return		;funcret
  6020   004318                     __end_of_reverseOneSquare:
  6021                           	callstack 0
  6022                           
  6023 ;; *************** function _resetTimer *****************
  6024 ;; Defined at:
  6025 ;;		line 23 in file "timers.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;		None
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;		None
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  1    wreg      void 
  6032 ;; Registers used:
  6033 ;;		wreg, status,2
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6043 ;;Total ram usage:        0 bytes
  6044 ;; Hardware stack levels used: 1
  6045 ;; Hardware stack levels required when called: 6
  6046 ;; This function calls:
  6047 ;;		Nothing
  6048 ;; This function is called by:
  6049 ;;		_main
  6050 ;;		_returnHome
  6051 ;;		_lostReturnHome
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text8
  6056   00535C                     __ptext8:
  6057                           	callstack 0
  6058   00535C                     _resetTimer:
  6059                           	callstack 24
  6060   00535C                     
  6061                           ;timers.c: 25:     TMR0H=0;
  6062   00535C  0E00               	movlw	0
  6063   00535E  6ED4               	movwf	212,c	;volatile
  6064                           
  6065                           ;timers.c: 26:     TMR0L=0;
  6066   005360  0E00               	movlw	0
  6067   005362  6ED3               	movwf	211,c	;volatile
  6068   005364  0012               	return		;funcret
  6069   005366                     __end_of_resetTimer:
  6070                           	callstack 0
  6071                           
  6072 ;; *************** function _get16bitTMR0val *****************
  6073 ;; Defined at:
  6074 ;;		line 33 in file "timers.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;		None
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  timer_val       2   23[COMRAM] unsigned int 
  6079 ;;  timer_high      2   21[COMRAM] unsigned int 
  6080 ;;  timer_low       2   19[COMRAM] unsigned int 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  2   15[COMRAM] unsigned int 
  6083 ;; Registers used:
  6084 ;;		wreg, status,2, status,0
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6091 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6093 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6094 ;;Total ram usage:       10 bytes
  6095 ;; Hardware stack levels used: 1
  6096 ;; Hardware stack levels required when called: 6
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		_main
  6101 ;;		_returnHome
  6102 ;;		_lostReturnHome
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text9
  6107   00519E                     __ptext9:
  6108                           	callstack 0
  6109   00519E                     _get16bitTMR0val:
  6110                           	callstack 22
  6111   00519E                     
  6112                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  6113   00519E  CFD3 F014          	movff	4051,get16bitTMR0val@timer_low	;volatile
  6114   0051A2  6A15               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  6115                           
  6116                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  6117   0051A4  CFD4 F016          	movff	4052,get16bitTMR0val@timer_high	;volatile
  6118   0051A8  6A17               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  6119   0051AA                     
  6120                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  6121   0051AA  5016               	movf	get16bitTMR0val@timer_high^0,w,c
  6122   0051AC  6E13               	movwf	(??_get16bitTMR0val+1)^0,c
  6123   0051AE  6A12               	clrf	??_get16bitTMR0val^0,c
  6124   0051B0  5014               	movf	get16bitTMR0val@timer_low^0,w,c
  6125   0051B2  1012               	iorwf	??_get16bitTMR0val^0,w,c
  6126   0051B4  6E18               	movwf	get16bitTMR0val@timer_val^0,c
  6127   0051B6  5015               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  6128   0051B8  1013               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  6129   0051BA  6E19               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  6130   0051BC                     
  6131                           ;timers.c: 39:     return timer_val;
  6132   0051BC  C018  F010         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  6133   0051C0  C019  F011         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  6134   0051C4  0012               	return		;funcret
  6135   0051C6                     __end_of_get16bitTMR0val:
  6136                           	callstack 0
  6137                           
  6138 ;; *************** function _fullSpeedAhead *****************
  6139 ;; Defined at:
  6140 ;;		line 451 in file "dc_motor.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  6143 ;;		 -> main@motorL(10), 
  6144 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  6145 ;;		 -> main@motorR(10), 
  6146 ;;  straightSpee    1   38[COMRAM] unsigned char 
  6147 ;;  straightRamp    1   39[COMRAM] unsigned char 
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  cur_power       2   45[COMRAM] int 
  6150 ;;  i               2   43[COMRAM] int 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      void 
  6153 ;; Registers used:
  6154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6160 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6161 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6162 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6163 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6164 ;;Total ram usage:       13 bytes
  6165 ;; Hardware stack levels used: 1
  6166 ;; Hardware stack levels required when called: 8
  6167 ;; This function calls:
  6168 ;;		_setMotorPWM
  6169 ;; This function is called by:
  6170 ;;		_main
  6171 ;;		_move
  6172 ;;		_returnHome
  6173 ;;		_lostReturnHome
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text10
  6178   004A4C                     __ptext10:
  6179                           	callstack 0
  6180   004A4C                     _fullSpeedAhead:
  6181                           	callstack 20
  6182   004A4C                     
  6183                           ;dc_motor.c: 451: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 452: {;dc_motor.c: 453:     mL->direction = 1;
  6184   004A4C  EE20 F001          	lfsr	2,1
  6185   004A50  5023               	movf	fullSpeedAhead@mL^0,w,c
  6186   004A52  26D9               	addwf	fsr2l,f,c
  6187   004A54  5024               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6188   004A56  22DA               	addwfc	fsr2h,f,c
  6189   004A58  0E01               	movlw	1
  6190   004A5A  6EDF               	movwf	indf2,c
  6191                           
  6192                           ;dc_motor.c: 454:     mR->direction = 1;
  6193   004A5C  EE20 F001          	lfsr	2,1
  6194   004A60  5025               	movf	fullSpeedAhead@mR^0,w,c
  6195   004A62  26D9               	addwf	fsr2l,f,c
  6196   004A64  5026               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6197   004A66  22DA               	addwfc	fsr2h,f,c
  6198   004A68  0E01               	movlw	1
  6199   004A6A  6EDF               	movwf	indf2,c
  6200   004A6C                     
  6201                           ;dc_motor.c: 455:     int i;;dc_motor.c: 456:     int cur_power;;dc_motor.c: 457:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  6202   004A6C  0E00               	movlw	0
  6203   004A6E  6E2F               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  6204   004A70  0E01               	movlw	1
  6205   004A72  6E2E               	movwf	fullSpeedAhead@cur_power^0,c
  6206   004A74  EF86  F025         	goto	l3093
  6207   004A78                     l3079:
  6208                           
  6209                           ;dc_motor.c: 458:         mL->power = cur_power+mL->compensation;
  6210   004A78  EE20 F009          	lfsr	2,9
  6211   004A7C  5023               	movf	fullSpeedAhead@mL^0,w,c
  6212   004A7E  26D9               	addwf	fsr2l,f,c
  6213   004A80  5024               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6214   004A82  22DA               	addwfc	fsr2h,f,c
  6215   004A84  50DF               	movf	indf2,w,c
  6216   004A86  242E               	addwf	fullSpeedAhead@cur_power^0,w,c
  6217   004A88  C023  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6218   004A8C  C024  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6219   004A90  6EDF               	movwf	indf2,c
  6220                           
  6221                           ;dc_motor.c: 459:         mR->power = cur_power+mR->compensation;
  6222   004A92  EE20 F009          	lfsr	2,9
  6223   004A96  5025               	movf	fullSpeedAhead@mR^0,w,c
  6224   004A98  26D9               	addwf	fsr2l,f,c
  6225   004A9A  5026               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6226   004A9C  22DA               	addwfc	fsr2h,f,c
  6227   004A9E  50DF               	movf	indf2,w,c
  6228   004AA0  242E               	addwf	fullSpeedAhead@cur_power^0,w,c
  6229   004AA2  C025  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6230   004AA6  C026  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6231   004AAA  6EDF               	movwf	indf2,c
  6232   004AAC                     
  6233                           ;dc_motor.c: 460:         setMotorPWM(mL);
  6234   004AAC  C023  F01D         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6235   004AB0  C024  F01E         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6236   004AB4  EC66  F023         	call	_setMotorPWM	;wreg free
  6237   004AB8                     
  6238                           ;dc_motor.c: 461:         setMotorPWM(mR);
  6239   004AB8  C025  F01D         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6240   004ABC  C026  F01E         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6241   004AC0  EC66  F023         	call	_setMotorPWM	;wreg free
  6242   004AC4                     
  6243                           ;dc_motor.c: 462:         for (i=0;i<straightRamp;i++) {
  6244   004AC4  0E00               	movlw	0
  6245   004AC6  6E2D               	movwf	(fullSpeedAhead@i+1)^0,c
  6246   004AC8  0E00               	movlw	0
  6247   004ACA  6E2C               	movwf	fullSpeedAhead@i^0,c
  6248   004ACC  EF72  F025         	goto	l664
  6249   004AD0                     l3087:
  6250                           
  6251                           ;dc_motor.c: 463:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6252   004AD0  0E68               	movlw	104
  6253   004AD2  6E29               	movwf	??_fullSpeedAhead^0,c
  6254   004AD4  0EE4               	movlw	228
  6255   004AD6                     u4647:
  6256   004AD6  2EE8               	decfsz	wreg,f,c
  6257   004AD8  D7FE               	bra	u4647
  6258   004ADA  2E29               	decfsz	??_fullSpeedAhead^0,f,c
  6259   004ADC  D7FC               	bra	u4647
  6260   004ADE  D000               	nop2	
  6261   004AE0                     
  6262                           ;dc_motor.c: 464:         }
  6263   004AE0  4A2C               	infsnz	fullSpeedAhead@i^0,f,c
  6264   004AE2  2A2D               	incf	(fullSpeedAhead@i+1)^0,f,c
  6265   004AE4                     l664:
  6266   004AE4  5028               	movf	fullSpeedAhead@straightRamp^0,w,c
  6267   004AE6  6E29               	movwf	??_fullSpeedAhead^0,c
  6268   004AE8  6A2A               	clrf	(??_fullSpeedAhead+1)^0,c
  6269   004AEA  5029               	movf	??_fullSpeedAhead^0,w,c
  6270   004AEC  5C2C               	subwf	fullSpeedAhead@i^0,w,c
  6271   004AEE  502D               	movf	(fullSpeedAhead@i+1)^0,w,c
  6272   004AF0  0A80               	xorlw	128
  6273   004AF2  6E2B               	movwf	(??_fullSpeedAhead+2)^0,c
  6274   004AF4  502A               	movf	(??_fullSpeedAhead+1)^0,w,c
  6275   004AF6  0A80               	xorlw	128
  6276   004AF8  582B               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6277   004AFA  A0D8               	btfss	status,0,c
  6278   004AFC  EF82  F025         	goto	u1901
  6279   004B00  EF84  F025         	goto	u1900
  6280   004B04                     u1901:
  6281   004B04  EF68  F025         	goto	l3087
  6282   004B08                     u1900:
  6283   004B08                     
  6284                           ;dc_motor.c: 465:     }
  6285   004B08  4A2E               	infsnz	fullSpeedAhead@cur_power^0,f,c
  6286   004B0A  2A2F               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  6287   004B0C                     l3093:
  6288   004B0C  5027               	movf	fullSpeedAhead@straightSpeed^0,w,c
  6289   004B0E  6E29               	movwf	??_fullSpeedAhead^0,c
  6290   004B10  6A2A               	clrf	(??_fullSpeedAhead+1)^0,c
  6291   004B12  502E               	movf	fullSpeedAhead@cur_power^0,w,c
  6292   004B14  5C29               	subwf	??_fullSpeedAhead^0,w,c
  6293   004B16  502A               	movf	(??_fullSpeedAhead+1)^0,w,c
  6294   004B18  0A80               	xorlw	128
  6295   004B1A  6E2B               	movwf	(??_fullSpeedAhead+2)^0,c
  6296   004B1C  502F               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  6297   004B1E  0A80               	xorlw	128
  6298   004B20  582B               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6299   004B22  B0D8               	btfsc	status,0,c
  6300   004B24  EF96  F025         	goto	u1911
  6301   004B28  EF98  F025         	goto	u1910
  6302   004B2C                     u1911:
  6303   004B2C  EF3C  F025         	goto	l3079
  6304   004B30                     u1910:
  6305   004B30  0012               	return		;funcret
  6306   004B32                     __end_of_fullSpeedAhead:
  6307                           	callstack 0
  6308                           
  6309 ;; *************** function _initUSART4 *****************
  6310 ;; Defined at:
  6311 ;;		line 4 in file "serial.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;		None
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;		None
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      void 
  6318 ;; Registers used:
  6319 ;;		wreg, status,2
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6329 ;;Total ram usage:        0 bytes
  6330 ;; Hardware stack levels used: 1
  6331 ;; Hardware stack levels required when called: 6
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_main
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text11
  6340   0052E2                     __ptext11:
  6341                           	callstack 0
  6342   0052E2                     _initUSART4:
  6343                           	callstack 24
  6344   0052E2                     
  6345                           ;serial.c: 7:     RC0PPS = 0x12;
  6346   0052E2  0E12               	movlw	18
  6347   0052E4  010E               	movlb	14	; () banked
  6348   0052E6  6F62               	movwf	98,b	;volatile
  6349                           
  6350                           ;serial.c: 8:     RX4PPS = 0x11;
  6351   0052E8  0E11               	movlw	17
  6352   0052EA  6F15               	movwf	21,b	;volatile
  6353   0052EC                     
  6354                           ; BSR set to: 14
  6355                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  6356   0052EC  97E9               	bcf	233,3,b	;volatile
  6357   0052EE                     
  6358                           ; BSR set to: 14
  6359                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  6360   0052EE  95E8               	bcf	232,2,b	;volatile
  6361                           
  6362                           ;serial.c: 13:     SP4BRGL = 51;
  6363   0052F0  0E33               	movlw	51
  6364   0052F2  6FE5               	movwf	229,b	;volatile
  6365                           
  6366                           ;serial.c: 14:     SP4BRGH = 0;
  6367   0052F4  0E00               	movlw	0
  6368   0052F6  6FE6               	movwf	230,b	;volatile
  6369   0052F8                     
  6370                           ; BSR set to: 14
  6371                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  6372   0052F8  89E7               	bsf	231,4,b	;volatile
  6373   0052FA                     
  6374                           ; BSR set to: 14
  6375                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  6376   0052FA  8BE8               	bsf	232,5,b	;volatile
  6377   0052FC                     
  6378                           ; BSR set to: 14
  6379                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  6380   0052FC  8FE7               	bsf	231,7,b	;volatile
  6381   0052FE                     
  6382                           ; BSR set to: 14
  6383   0052FE  0012               	return		;funcret
  6384   005300                     __end_of_initUSART4:
  6385                           	callstack 0
  6386                           
  6387 ;; *************** function _initDCmotorsPWM *****************
  6388 ;; Defined at:
  6389 ;;		line 8 in file "dc_motor.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  PWMperiod       2   15[COMRAM] unsigned int 
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		wreg, status,2
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6407 ;;Total ram usage:        2 bytes
  6408 ;; Hardware stack levels used: 1
  6409 ;; Hardware stack levels required when called: 6
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_main
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text12
  6418   004DE6                     __ptext12:
  6419                           	callstack 0
  6420   004DE6                     _initDCmotorsPWM:
  6421                           	callstack 24
  6422   004DE6                     
  6423                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  6424   004DE6  947D               	bcf	125,2,c	;volatile
  6425                           
  6426                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  6427   004DE8  9485               	bcf	133,2,c	;volatile
  6428                           
  6429                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  6430   004DEA  987D               	bcf	125,4,c	;volatile
  6431                           
  6432                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  6433   004DEC  9885               	bcf	133,4,c	;volatile
  6434                           
  6435                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  6436   004DEE  9E7B               	bcf	123,7,c	;volatile
  6437                           
  6438                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  6439   004DF0  9E83               	bcf	131,7,c	;volatile
  6440                           
  6441                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  6442   004DF2  9C7F               	bcf	127,6,c	;volatile
  6443                           
  6444                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  6445   004DF4  9C87               	bcf	135,6,c	;volatile
  6446   004DF6                     
  6447                           ;dc_motor.c: 21:     RE2PPS=0x05;
  6448   004DF6  0E05               	movlw	5
  6449   004DF8  010E               	movlb	14	; () banked
  6450   004DFA  6F74               	movwf	116,b	;volatile
  6451                           
  6452                           ;dc_motor.c: 22:     RE4PPS=0x06;
  6453   004DFC  0E06               	movlw	6
  6454   004DFE  6F76               	movwf	118,b	;volatile
  6455                           
  6456                           ;dc_motor.c: 23:     RC7PPS=0x07;
  6457   004E00  0E07               	movlw	7
  6458   004E02  6F69               	movwf	105,b	;volatile
  6459                           
  6460                           ;dc_motor.c: 24:     RG6PPS=0x08;
  6461   004E04  0E08               	movlw	8
  6462   004E06  6F88               	movwf	136,b	;volatile
  6463                           
  6464                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  6465   004E08  50BD               	movf	189,w,c	;volatile
  6466   004E0A  0B8F               	andlw	-113
  6467   004E0C  0930               	iorlw	48
  6468   004E0E  6EBD               	movwf	189,c	;volatile
  6469                           
  6470                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  6471   004E10  0EE0               	movlw	-32
  6472   004E12  16BE               	andwf	190,f,c	;volatile
  6473                           
  6474                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  6475   004E14  50BF               	movf	191,w,c	;volatile
  6476   004E16  0BF0               	andlw	-16
  6477   004E18  0901               	iorlw	1
  6478   004E1A  6EBF               	movwf	191,c	;volatile
  6479   004E1C                     
  6480                           ; BSR set to: 14
  6481                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  6482   004E1C  C010  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  6483   004E20                     
  6484                           ; BSR set to: 14
  6485                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  6486   004E20  8EBD               	bsf	189,7,c	;volatile
  6487                           
  6488                           ;dc_motor.c: 38:     CCPR1H=0;
  6489   004E22  0E00               	movlw	0
  6490   004E24  6EAA               	movwf	170,c	;volatile
  6491                           
  6492                           ;dc_motor.c: 39:     CCPR2H=0;
  6493   004E26  0E00               	movlw	0
  6494   004E28  6EA6               	movwf	166,c	;volatile
  6495                           
  6496                           ;dc_motor.c: 40:     CCPR3H=0;
  6497   004E2A  0E00               	movlw	0
  6498   004E2C  010F               	movlb	15	; () banked
  6499   004E2E  6F25               	movwf	37,b	;volatile
  6500                           
  6501                           ;dc_motor.c: 41:     CCPR4H=0;
  6502   004E30  0E00               	movlw	0
  6503   004E32  6F21               	movwf	33,b	;volatile
  6504                           
  6505                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  6506   004E34  0EFC               	movlw	-4
  6507   004E36  16AD               	andwf	173,f,c	;volatile
  6508                           
  6509                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  6510   004E38  0EF3               	movlw	-13
  6511   004E3A  16AD               	andwf	173,f,c	;volatile
  6512                           
  6513                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  6514   004E3C  0ECF               	movlw	-49
  6515   004E3E  16AD               	andwf	173,f,c	;volatile
  6516                           
  6517                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  6518   004E40  0E3F               	movlw	-193
  6519   004E42  16AD               	andwf	173,f,c	;volatile
  6520   004E44                     
  6521                           ; BSR set to: 15
  6522                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  6523   004E44  88AB               	bsf	171,4,c	;volatile
  6524                           
  6525                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  6526   004E46  50AB               	movf	171,w,c	;volatile
  6527   004E48  0BF0               	andlw	-16
  6528   004E4A  090C               	iorlw	12
  6529   004E4C  6EAB               	movwf	171,c	;volatile
  6530   004E4E                     
  6531                           ; BSR set to: 15
  6532                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  6533   004E4E  8EAB               	bsf	171,7,c	;volatile
  6534   004E50                     
  6535                           ; BSR set to: 15
  6536                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  6537   004E50  88A7               	bsf	167,4,c	;volatile
  6538                           
  6539                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  6540   004E52  50A7               	movf	167,w,c	;volatile
  6541   004E54  0BF0               	andlw	-16
  6542   004E56  090C               	iorlw	12
  6543   004E58  6EA7               	movwf	167,c	;volatile
  6544   004E5A                     
  6545                           ; BSR set to: 15
  6546                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  6547   004E5A  8EA7               	bsf	167,7,c	;volatile
  6548   004E5C                     
  6549                           ; BSR set to: 15
  6550                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  6551   004E5C  8926               	bsf	38,4,b	;volatile
  6552                           
  6553                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  6554   004E5E  5126               	movf	38,w,b	;volatile
  6555   004E60  0BF0               	andlw	-16
  6556   004E62  090C               	iorlw	12
  6557   004E64  6F26               	movwf	38,b	;volatile
  6558   004E66                     
  6559                           ; BSR set to: 15
  6560                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  6561   004E66  8F26               	bsf	38,7,b	;volatile
  6562   004E68                     
  6563                           ; BSR set to: 15
  6564                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  6565   004E68  8922               	bsf	34,4,b	;volatile
  6566                           
  6567                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  6568   004E6A  5122               	movf	34,w,b	;volatile
  6569   004E6C  0BF0               	andlw	-16
  6570   004E6E  090C               	iorlw	12
  6571   004E70  6F22               	movwf	34,b	;volatile
  6572   004E72                     
  6573                           ; BSR set to: 15
  6574                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  6575   004E72  8F22               	bsf	34,7,b	;volatile
  6576   004E74                     
  6577                           ; BSR set to: 15
  6578   004E74  0012               	return		;funcret
  6579   004E76                     __end_of_initDCmotorsPWM:
  6580                           	callstack 0
  6581                           
  6582 ;; *************** function _color_detect *****************
  6583 ;; Defined at:
  6584 ;;		line 116 in file "color.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  HSV             6   19[COMRAM] struct HSV_val
  6587 ;;  red             6   25[COMRAM] struct HSV_calib
  6588 ;;  green           6   31[COMRAM] struct HSV_calib
  6589 ;;  blue            6   37[COMRAM] struct HSV_calib
  6590 ;;  yellow          6   43[COMRAM] struct HSV_calib
  6591 ;;  pink            6   49[COMRAM] struct HSV_calib
  6592 ;;  orange          6   55[COMRAM] struct HSV_calib
  6593 ;;  lightblue       6   61[COMRAM] struct HSV_calib
  6594 ;;  white           6   67[COMRAM] struct HSV_calib
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;  color           1   73[COMRAM] unsigned char 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      unsigned char 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6606 ;;      Params:        54       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6608 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6609 ;;      Totals:        55      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6610 ;;Total ram usage:       68 bytes
  6611 ;; Hardware stack levels used: 1
  6612 ;; Hardware stack levels required when called: 7
  6613 ;; This function calls:
  6614 ;;		_max
  6615 ;;		_min
  6616 ;; This function is called by:
  6617 ;;		_main
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text13
  6622   00371A                     __ptext13:
  6623                           	callstack 0
  6624   00371A                     _color_detect:
  6625                           	callstack 23
  6626   00371A                     
  6627                           ;color.c: 116: unsigned char color_detect(HSV_val HSV, HSV_calib red, HSV_calib green, H
      +                          SV_calib blue, HSV_calib yellow, HSV_calib pink, HSV_calib orange, HSV_calib lightblue, 
      +                          HSV_calib white);color.c: 117: {;color.c: 118:     unsigned char color=9;
  6628   00371A  0E09               	movlw	9
  6629   00371C  6E4A               	movwf	color_detect@color^0,c
  6630   00371E                     
  6631                           ;color.c: 121:     if (min(green.H,lightblue.H)-2000 < HSV.H && HSV.H < max(green.H,ligh
      +                          tblue.H)+2000) {
  6632   00371E  C020  F010         	movff	color_detect@green,min@a
  6633   003722  C021  F011         	movff	color_detect@green+1,min@a+1
  6634   003726  C03E  F012         	movff	color_detect@lightblue,min@b
  6635   00372A  C03F  F013         	movff	color_detect@lightblue+1,min@b+1
  6636   00372E  EC8E  F028         	call	_min	;wreg free
  6637   003732  0E30               	movlw	48
  6638   003734  2410               	addwf	?_min^0,w,c
  6639   003736  0100               	movlb	0	; () banked
  6640   003738  6F60               	movwf	??_color_detect& (0+255),b
  6641   00373A  0EF8               	movlw	248
  6642   00373C  2011               	addwfc	(?_min+1)^0,w,c
  6643   00373E  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6644   003740  5014               	movf	color_detect@HSV^0,w,c
  6645   003742  5D60               	subwf	??_color_detect& (0+255),w,b
  6646   003744  5015               	movf	(color_detect@HSV+1)^0,w,c
  6647   003746  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  6648   003748  B0D8               	btfsc	status,0,c
  6649   00374A  EFA9  F01B         	goto	u2911
  6650   00374E  EFAB  F01B         	goto	u2910
  6651   003752                     u2911:
  6652   003752  EFE2  F01B         	goto	l4045
  6653   003756                     u2910:
  6654   003756                     
  6655                           ; BSR set to: 0
  6656   003756  C020  F010         	movff	color_detect@green,max@a
  6657   00375A  C021  F011         	movff	color_detect@green+1,max@a+1
  6658   00375E  C03E  F012         	movff	color_detect@lightblue,max@b
  6659   003762  C03F  F013         	movff	color_detect@lightblue+1,max@b+1
  6660   003766  ECA4  F028         	call	_max	;wreg free
  6661   00376A  0ED0               	movlw	208
  6662   00376C  2410               	addwf	?_max^0,w,c
  6663   00376E  0100               	movlb	0	; () banked
  6664   003770  6F60               	movwf	??_color_detect& (0+255),b
  6665   003772  0E07               	movlw	7
  6666   003774  2011               	addwfc	(?_max+1)^0,w,c
  6667   003776  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6668   003778  5160               	movf	??_color_detect& (0+255),w,b
  6669   00377A  5C14               	subwf	color_detect@HSV^0,w,c
  6670   00377C  5161               	movf	(??_color_detect+1)& (0+255),w,b
  6671   00377E  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  6672   003780  B0D8               	btfsc	status,0,c
  6673   003782  EFC5  F01B         	goto	u2921
  6674   003786  EFC7  F01B         	goto	u2920
  6675   00378A                     u2921:
  6676   00378A  EFE2  F01B         	goto	l4045
  6677   00378E                     u2920:
  6678   00378E                     
  6679                           ; BSR set to: 0
  6680                           ;color.c: 122:         if (HSV.S > lightblue.S + 500){color = 2;}
  6681   00378E  0EF4               	movlw	244
  6682   003790  2440               	addwf	(color_detect@lightblue+2)^0,w,c
  6683   003792  6F60               	movwf	??_color_detect& (0+255),b
  6684   003794  0E01               	movlw	1
  6685   003796  2041               	addwfc	(color_detect@lightblue+3)^0,w,c
  6686   003798  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6687   00379A  5016               	movf	(color_detect@HSV+2)^0,w,c
  6688   00379C  5D60               	subwf	??_color_detect& (0+255),w,b
  6689   00379E  5017               	movf	(color_detect@HSV+3)^0,w,c
  6690   0037A0  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  6691   0037A2  B0D8               	btfsc	status,0,c
  6692   0037A4  EFD6  F01B         	goto	u2931
  6693   0037A8  EFD8  F01B         	goto	u2930
  6694   0037AC                     u2931:
  6695   0037AC  EFDC  F01B         	goto	l4043
  6696   0037B0                     u2930:
  6697   0037B0                     
  6698                           ; BSR set to: 0
  6699   0037B0  0E02               	movlw	2
  6700   0037B2  6E4A               	movwf	color_detect@color^0,c
  6701   0037B4  EFA3  F01C         	goto	l4073
  6702   0037B8                     l4043:
  6703                           
  6704                           ; BSR set to: 0
  6705   0037B8  0E07               	movlw	7
  6706   0037BA  6E4A               	movwf	color_detect@color^0,c
  6707   0037BC  EFA3  F01C         	goto	l4073
  6708   0037C0                     l165:
  6709                           
  6710                           ; BSR set to: 0
  6711                           ;color.c: 124:     }
  6712   0037C0  EFA3  F01C         	goto	l4073
  6713   0037C4                     l4045:
  6714                           
  6715                           ; BSR set to: 0
  6716   0037C4  0E48               	movlw	72
  6717   0037C6  2426               	addwf	color_detect@blue^0,w,c
  6718   0037C8  6F60               	movwf	??_color_detect& (0+255),b
  6719   0037CA  0EF4               	movlw	244
  6720   0037CC  2027               	addwfc	(color_detect@blue+1)^0,w,c
  6721   0037CE  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6722   0037D0  5014               	movf	color_detect@HSV^0,w,c
  6723   0037D2  5D60               	subwf	??_color_detect& (0+255),w,b
  6724   0037D4  5015               	movf	(color_detect@HSV+1)^0,w,c
  6725   0037D6  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  6726   0037D8  B0D8               	btfsc	status,0,c
  6727   0037DA  EFF1  F01B         	goto	u2941
  6728   0037DE  EFF3  F01B         	goto	u2940
  6729   0037E2                     u2941:
  6730   0037E2  EF08  F01C         	goto	l4051
  6731   0037E6                     u2940:
  6732   0037E6                     
  6733                           ; BSR set to: 0
  6734   0037E6  0EB8               	movlw	184
  6735   0037E8  2426               	addwf	color_detect@blue^0,w,c
  6736   0037EA  6F60               	movwf	??_color_detect& (0+255),b
  6737   0037EC  0E0B               	movlw	11
  6738   0037EE  2027               	addwfc	(color_detect@blue+1)^0,w,c
  6739   0037F0  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6740   0037F2  5160               	movf	??_color_detect& (0+255),w,b
  6741   0037F4  5C14               	subwf	color_detect@HSV^0,w,c
  6742   0037F6  5161               	movf	(??_color_detect+1)& (0+255),w,b
  6743   0037F8  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  6744   0037FA  B0D8               	btfsc	status,0,c
  6745   0037FC  EF02  F01C         	goto	u2951
  6746   003800  EF04  F01C         	goto	u2950
  6747   003804                     u2951:
  6748   003804  EF08  F01C         	goto	l4051
  6749   003808                     u2950:
  6750   003808                     
  6751                           ; BSR set to: 0
  6752   003808  0E03               	movlw	3
  6753   00380A  6E4A               	movwf	color_detect@color^0,c
  6754   00380C  EFA3  F01C         	goto	l4073
  6755   003810                     l4051:
  6756                           
  6757                           ; BSR set to: 0
  6758   003810  C02C  F010         	movff	color_detect@yellow,min@a
  6759   003814  C02D  F011         	movff	color_detect@yellow+1,min@a+1
  6760   003818  C032  F012         	movff	color_detect@pink,min@b
  6761   00381C  C033  F013         	movff	color_detect@pink+1,min@b+1
  6762   003820  EC8E  F028         	call	_min	;wreg free
  6763   003824  0E18               	movlw	24
  6764   003826  2410               	addwf	?_min^0,w,c
  6765   003828  0100               	movlb	0	; () banked
  6766   00382A  6F60               	movwf	??_color_detect& (0+255),b
  6767   00382C  0EFC               	movlw	252
  6768   00382E  2011               	addwfc	(?_min+1)^0,w,c
  6769   003830  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6770   003832  5014               	movf	color_detect@HSV^0,w,c
  6771   003834  5D60               	subwf	??_color_detect& (0+255),w,b
  6772   003836  5015               	movf	(color_detect@HSV+1)^0,w,c
  6773   003838  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  6774   00383A  B0D8               	btfsc	status,0,c
  6775   00383C  EF22  F01C         	goto	u2961
  6776   003840  EF24  F01C         	goto	u2960
  6777   003844                     u2961:
  6778   003844  EF59  F01C         	goto	l4061
  6779   003848                     u2960:
  6780   003848                     
  6781                           ; BSR set to: 0
  6782   003848  C02C  F010         	movff	color_detect@yellow,max@a
  6783   00384C  C02D  F011         	movff	color_detect@yellow+1,max@a+1
  6784   003850  C032  F012         	movff	color_detect@pink,max@b
  6785   003854  C033  F013         	movff	color_detect@pink+1,max@b+1
  6786   003858  ECA4  F028         	call	_max	;wreg free
  6787   00385C  0EE8               	movlw	232
  6788   00385E  2410               	addwf	?_max^0,w,c
  6789   003860  0100               	movlb	0	; () banked
  6790   003862  6F60               	movwf	??_color_detect& (0+255),b
  6791   003864  0E03               	movlw	3
  6792   003866  2011               	addwfc	(?_max+1)^0,w,c
  6793   003868  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6794   00386A  5160               	movf	??_color_detect& (0+255),w,b
  6795   00386C  5C14               	subwf	color_detect@HSV^0,w,c
  6796   00386E  5161               	movf	(??_color_detect+1)& (0+255),w,b
  6797   003870  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  6798   003872  B0D8               	btfsc	status,0,c
  6799   003874  EF3E  F01C         	goto	u2971
  6800   003878  EF40  F01C         	goto	u2970
  6801   00387C                     u2971:
  6802   00387C  EF59  F01C         	goto	l4061
  6803   003880                     u2970:
  6804   003880                     
  6805                           ; BSR set to: 0
  6806                           ;color.c: 131:         if (HSV.S > pink.S + 500){color = 4;}
  6807   003880  0EF4               	movlw	244
  6808   003882  2434               	addwf	(color_detect@pink+2)^0,w,c
  6809   003884  6F60               	movwf	??_color_detect& (0+255),b
  6810   003886  0E01               	movlw	1
  6811   003888  2035               	addwfc	(color_detect@pink+3)^0,w,c
  6812   00388A  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6813   00388C  5016               	movf	(color_detect@HSV+2)^0,w,c
  6814   00388E  5D60               	subwf	??_color_detect& (0+255),w,b
  6815   003890  5017               	movf	(color_detect@HSV+3)^0,w,c
  6816   003892  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  6817   003894  B0D8               	btfsc	status,0,c
  6818   003896  EF4F  F01C         	goto	u2981
  6819   00389A  EF51  F01C         	goto	u2980
  6820   00389E                     u2981:
  6821   00389E  EF55  F01C         	goto	l4059
  6822   0038A2                     u2980:
  6823   0038A2                     
  6824                           ; BSR set to: 0
  6825   0038A2  0E04               	movlw	4
  6826   0038A4  6E4A               	movwf	color_detect@color^0,c
  6827   0038A6  EFA3  F01C         	goto	l4073
  6828   0038AA                     l4059:
  6829                           
  6830                           ; BSR set to: 0
  6831   0038AA  0E05               	movlw	5
  6832   0038AC  6E4A               	movwf	color_detect@color^0,c
  6833   0038AE  EFA3  F01C         	goto	l4073
  6834   0038B2                     l4061:
  6835                           
  6836                           ; BSR set to: 0
  6837   0038B2  0E0C               	movlw	12
  6838   0038B4  2438               	addwf	color_detect@orange^0,w,c
  6839   0038B6  6F60               	movwf	??_color_detect& (0+255),b
  6840   0038B8  0EFE               	movlw	254
  6841   0038BA  2039               	addwfc	(color_detect@orange+1)^0,w,c
  6842   0038BC  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6843   0038BE  5014               	movf	color_detect@HSV^0,w,c
  6844   0038C0  5D60               	subwf	??_color_detect& (0+255),w,b
  6845   0038C2  5015               	movf	(color_detect@HSV+1)^0,w,c
  6846   0038C4  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  6847   0038C6  B0D8               	btfsc	status,0,c
  6848   0038C8  EF68  F01C         	goto	u2991
  6849   0038CC  EF6A  F01C         	goto	u2990
  6850   0038D0                     u2991:
  6851   0038D0  EF7F  F01C         	goto	l4067
  6852   0038D4                     u2990:
  6853   0038D4                     
  6854                           ; BSR set to: 0
  6855   0038D4  0EF4               	movlw	244
  6856   0038D6  2438               	addwf	color_detect@orange^0,w,c
  6857   0038D8  6F60               	movwf	??_color_detect& (0+255),b
  6858   0038DA  0E01               	movlw	1
  6859   0038DC  2039               	addwfc	(color_detect@orange+1)^0,w,c
  6860   0038DE  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6861   0038E0  5160               	movf	??_color_detect& (0+255),w,b
  6862   0038E2  5C14               	subwf	color_detect@HSV^0,w,c
  6863   0038E4  5161               	movf	(??_color_detect+1)& (0+255),w,b
  6864   0038E6  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  6865   0038E8  B0D8               	btfsc	status,0,c
  6866   0038EA  EF79  F01C         	goto	u3001
  6867   0038EE  EF7B  F01C         	goto	u3000
  6868   0038F2                     u3001:
  6869   0038F2  EF7F  F01C         	goto	l4067
  6870   0038F6                     u3000:
  6871   0038F6                     
  6872                           ; BSR set to: 0
  6873   0038F6  0E06               	movlw	6
  6874   0038F8  6E4A               	movwf	color_detect@color^0,c
  6875   0038FA  EFA3  F01C         	goto	l4073
  6876   0038FE                     l4067:
  6877                           
  6878                           ; BSR set to: 0
  6879   0038FE  0E0C               	movlw	12
  6880   003900  2444               	addwf	color_detect@white^0,w,c
  6881   003902  6F60               	movwf	??_color_detect& (0+255),b
  6882   003904  0EFE               	movlw	254
  6883   003906  2045               	addwfc	(color_detect@white+1)^0,w,c
  6884   003908  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6885   00390A  5014               	movf	color_detect@HSV^0,w,c
  6886   00390C  5D60               	subwf	??_color_detect& (0+255),w,b
  6887   00390E  5015               	movf	(color_detect@HSV+1)^0,w,c
  6888   003910  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  6889   003912  B0D8               	btfsc	status,0,c
  6890   003914  EF8E  F01C         	goto	u3011
  6891   003918  EF90  F01C         	goto	u3010
  6892   00391C                     u3011:
  6893   00391C  EFE0  F01B         	goto	l165
  6894   003920                     u3010:
  6895   003920                     
  6896                           ; BSR set to: 0
  6897   003920  0EF4               	movlw	244
  6898   003922  2444               	addwf	color_detect@white^0,w,c
  6899   003924  6F60               	movwf	??_color_detect& (0+255),b
  6900   003926  0E01               	movlw	1
  6901   003928  2045               	addwfc	(color_detect@white+1)^0,w,c
  6902   00392A  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6903   00392C  5160               	movf	??_color_detect& (0+255),w,b
  6904   00392E  5C14               	subwf	color_detect@HSV^0,w,c
  6905   003930  5161               	movf	(??_color_detect+1)& (0+255),w,b
  6906   003932  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  6907   003934  B0D8               	btfsc	status,0,c
  6908   003936  EF9F  F01C         	goto	u3021
  6909   00393A  EFA1  F01C         	goto	u3020
  6910   00393E                     u3021:
  6911   00393E  EFE0  F01B         	goto	l165
  6912   003942                     u3020:
  6913   003942                     
  6914                           ; BSR set to: 0
  6915   003942  0E08               	movlw	8
  6916   003944  6E4A               	movwf	color_detect@color^0,c
  6917   003946                     l4073:
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;color.c: 142:     if (red.H > 30000){
  6921   003946  0E31               	movlw	49
  6922   003948  5C1A               	subwf	color_detect@red^0,w,c
  6923   00394A  0E75               	movlw	117
  6924   00394C  581B               	subwfb	(color_detect@red+1)^0,w,c
  6925   00394E  A0D8               	btfss	status,0,c
  6926   003950  EFAC  F01C         	goto	u3031
  6927   003954  EFAE  F01C         	goto	u3030
  6928   003958                     u3031:
  6929   003958  EF02  F01D         	goto	l4085
  6930   00395C                     u3030:
  6931   00395C                     
  6932                           ; BSR set to: 0
  6933                           ;color.c: 143:         if(((red.H)-1000 < HSV.H && HSV.H < 36000) || (0 < HSV.H && HSV.H
      +                           < 1000 + red.H -36000)) {color = 1;}
  6934   00395C  0E18               	movlw	24
  6935   00395E  241A               	addwf	color_detect@red^0,w,c
  6936   003960  6F60               	movwf	??_color_detect& (0+255),b
  6937   003962  0EFC               	movlw	252
  6938   003964  201B               	addwfc	(color_detect@red+1)^0,w,c
  6939   003966  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6940   003968  5014               	movf	color_detect@HSV^0,w,c
  6941   00396A  5D60               	subwf	??_color_detect& (0+255),w,b
  6942   00396C  5015               	movf	(color_detect@HSV+1)^0,w,c
  6943   00396E  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  6944   003970  B0D8               	btfsc	status,0,c
  6945   003972  EFBD  F01C         	goto	u3041
  6946   003976  EFBF  F01C         	goto	u3040
  6947   00397A                     u3041:
  6948   00397A  EFCA  F01C         	goto	l4079
  6949   00397E                     u3040:
  6950   00397E                     
  6951                           ; BSR set to: 0
  6952   00397E  0EA0               	movlw	160
  6953   003980  5C14               	subwf	color_detect@HSV^0,w,c
  6954   003982  0E8C               	movlw	140
  6955   003984  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  6956   003986  A0D8               	btfss	status,0,c
  6957   003988  EFC8  F01C         	goto	u3051
  6958   00398C  EFCA  F01C         	goto	u3050
  6959   003990                     u3051:
  6960   003990  EF00  F01D         	goto	l4083
  6961   003994                     u3050:
  6962   003994                     l4079:
  6963                           
  6964                           ; BSR set to: 0
  6965   003994  5014               	movf	color_detect@HSV^0,w,c
  6966   003996  1015               	iorwf	(color_detect@HSV+1)^0,w,c
  6967   003998  B4D8               	btfsc	status,2,c
  6968   00399A  EFD1  F01C         	goto	u3061
  6969   00399E  EFD3  F01C         	goto	u3060
  6970   0039A2                     u3061:
  6971   0039A2  EF02  F01D         	goto	l4085
  6972   0039A6                     u3060:
  6973   0039A6                     
  6974                           ; BSR set to: 0
  6975   0039A6  0EE8               	movlw	232
  6976   0039A8  241A               	addwf	color_detect@red^0,w,c
  6977   0039AA  6F60               	movwf	??_color_detect& (0+255),b
  6978   0039AC  0E03               	movlw	3
  6979   0039AE  201B               	addwfc	(color_detect@red+1)^0,w,c
  6980   0039B0  6F61               	movwf	(??_color_detect+1)& (0+255),b
  6981   0039B2  6B62               	clrf	(??_color_detect+2)& (0+255),b
  6982   0039B4  6B63               	clrf	(??_color_detect+3)& (0+255),b
  6983   0039B6  0E60               	movlw	96
  6984   0039B8  2560               	addwf	??_color_detect& (0+255),w,b
  6985   0039BA  6F64               	movwf	(??_color_detect+4)& (0+255),b
  6986   0039BC  0E73               	movlw	115
  6987   0039BE  2161               	addwfc	(??_color_detect+1)& (0+255),w,b
  6988   0039C0  6F65               	movwf	(??_color_detect+5)& (0+255),b
  6989   0039C2  0EFF               	movlw	255
  6990   0039C4  2162               	addwfc	(??_color_detect+2)& (0+255),w,b
  6991   0039C6  6F66               	movwf	(??_color_detect+6)& (0+255),b
  6992   0039C8  0EFF               	movlw	255
  6993   0039CA  2163               	addwfc	(??_color_detect+3)& (0+255),w,b
  6994   0039CC  6F67               	movwf	(??_color_detect+7)& (0+255),b
  6995   0039CE  5014               	movf	color_detect@HSV^0,w,c
  6996   0039D0  6F68               	movwf	(??_color_detect+8)& (0+255),b
  6997   0039D2  5015               	movf	(color_detect@HSV+1)^0,w,c
  6998   0039D4  6F69               	movwf	(??_color_detect+9)& (0+255),b
  6999   0039D6  6B6A               	clrf	(??_color_detect+10)& (0+255),b
  7000   0039D8  6B6B               	clrf	(??_color_detect+11)& (0+255),b
  7001   0039DA  5164               	movf	(??_color_detect+4)& (0+255),w,b
  7002   0039DC  5D68               	subwf	(??_color_detect+8)& (0+255),w,b
  7003   0039DE  5165               	movf	(??_color_detect+5)& (0+255),w,b
  7004   0039E0  5969               	subwfb	(??_color_detect+9)& (0+255),w,b
  7005   0039E2  5166               	movf	(??_color_detect+6)& (0+255),w,b
  7006   0039E4  596A               	subwfb	(??_color_detect+10)& (0+255),w,b
  7007   0039E6  516B               	movf	(??_color_detect+11)& (0+255),w,b
  7008   0039E8  0A80               	xorlw	128
  7009   0039EA  6F6C               	movwf	(??_color_detect+12)& (0+255),b
  7010   0039EC  5167               	movf	(??_color_detect+7)& (0+255),w,b
  7011   0039EE  0A80               	xorlw	128
  7012   0039F0  596C               	subwfb	(??_color_detect+12)& (0+255),w,b
  7013   0039F2  B0D8               	btfsc	status,0,c
  7014   0039F4  EFFE  F01C         	goto	u3071
  7015   0039F8  EF00  F01D         	goto	u3070
  7016   0039FC                     u3071:
  7017   0039FC  EF02  F01D         	goto	l4085
  7018   003A00                     u3070:
  7019   003A00                     l4083:
  7020                           
  7021                           ; BSR set to: 0
  7022   003A00  0E01               	movlw	1
  7023   003A02  6E4A               	movwf	color_detect@color^0,c
  7024   003A04                     l4085:
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;color.c: 146:     if (red.H < 10000){
  7028   003A04  0E10               	movlw	16
  7029   003A06  5C1A               	subwf	color_detect@red^0,w,c
  7030   003A08  0E27               	movlw	39
  7031   003A0A  581B               	subwfb	(color_detect@red+1)^0,w,c
  7032   003A0C  B0D8               	btfsc	status,0,c
  7033   003A0E  EF0B  F01D         	goto	u3081
  7034   003A12  EF0D  F01D         	goto	u3080
  7035   003A16                     u3081:
  7036   003A16  EF5F  F01D         	goto	l182
  7037   003A1A                     u3080:
  7038   003A1A                     
  7039                           ; BSR set to: 0
  7040                           ;color.c: 147:         if((36000 - 1000 + (red.H) < HSV.H && HSV.H < 36000) || (0 < HSV.
      +                          H && HSV.H < red.H + 1000)) {color = 1;}
  7041   003A1A  5014               	movf	color_detect@HSV^0,w,c
  7042   003A1C  6F60               	movwf	??_color_detect& (0+255),b
  7043   003A1E  5015               	movf	(color_detect@HSV+1)^0,w,c
  7044   003A20  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7045   003A22  6B62               	clrf	(??_color_detect+2)& (0+255),b
  7046   003A24  6B63               	clrf	(??_color_detect+3)& (0+255),b
  7047   003A26  501A               	movf	color_detect@red^0,w,c
  7048   003A28  6F64               	movwf	(??_color_detect+4)& (0+255),b
  7049   003A2A  501B               	movf	(color_detect@red+1)^0,w,c
  7050   003A2C  6F65               	movwf	(??_color_detect+5)& (0+255),b
  7051   003A2E  6B66               	clrf	(??_color_detect+6)& (0+255),b
  7052   003A30  6B67               	clrf	(??_color_detect+7)& (0+255),b
  7053   003A32  0EB8               	movlw	184
  7054   003A34  2564               	addwf	(??_color_detect+4)& (0+255),w,b
  7055   003A36  6F68               	movwf	(??_color_detect+8)& (0+255),b
  7056   003A38  0E88               	movlw	136
  7057   003A3A  2165               	addwfc	(??_color_detect+5)& (0+255),w,b
  7058   003A3C  6F69               	movwf	(??_color_detect+9)& (0+255),b
  7059   003A3E  0E00               	movlw	0
  7060   003A40  2166               	addwfc	(??_color_detect+6)& (0+255),w,b
  7061   003A42  6F6A               	movwf	(??_color_detect+10)& (0+255),b
  7062   003A44  0E00               	movlw	0
  7063   003A46  2167               	addwfc	(??_color_detect+7)& (0+255),w,b
  7064   003A48  6F6B               	movwf	(??_color_detect+11)& (0+255),b
  7065   003A4A  5160               	movf	??_color_detect& (0+255),w,b
  7066   003A4C  5D68               	subwf	(??_color_detect+8)& (0+255),w,b
  7067   003A4E  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7068   003A50  5969               	subwfb	(??_color_detect+9)& (0+255),w,b
  7069   003A52  5162               	movf	(??_color_detect+2)& (0+255),w,b
  7070   003A54  596A               	subwfb	(??_color_detect+10)& (0+255),w,b
  7071   003A56  516B               	movf	(??_color_detect+11)& (0+255),w,b
  7072   003A58  0A80               	xorlw	128
  7073   003A5A  6F6C               	movwf	(??_color_detect+12)& (0+255),b
  7074   003A5C  5163               	movf	(??_color_detect+3)& (0+255),w,b
  7075   003A5E  0A80               	xorlw	128
  7076   003A60  596C               	subwfb	(??_color_detect+12)& (0+255),w,b
  7077   003A62  B0D8               	btfsc	status,0,c
  7078   003A64  EF36  F01D         	goto	u3091
  7079   003A68  EF38  F01D         	goto	u3090
  7080   003A6C                     u3091:
  7081   003A6C  EF43  F01D         	goto	l4091
  7082   003A70                     u3090:
  7083   003A70                     
  7084                           ; BSR set to: 0
  7085   003A70  0EA0               	movlw	160
  7086   003A72  5C14               	subwf	color_detect@HSV^0,w,c
  7087   003A74  0E8C               	movlw	140
  7088   003A76  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7089   003A78  A0D8               	btfss	status,0,c
  7090   003A7A  EF41  F01D         	goto	u3101
  7091   003A7E  EF43  F01D         	goto	u3100
  7092   003A82                     u3101:
  7093   003A82  EF5D  F01D         	goto	l4095
  7094   003A86                     u3100:
  7095   003A86                     l4091:
  7096                           
  7097                           ; BSR set to: 0
  7098   003A86  5014               	movf	color_detect@HSV^0,w,c
  7099   003A88  1015               	iorwf	(color_detect@HSV+1)^0,w,c
  7100   003A8A  B4D8               	btfsc	status,2,c
  7101   003A8C  EF4A  F01D         	goto	u3111
  7102   003A90  EF4C  F01D         	goto	u3110
  7103   003A94                     u3111:
  7104   003A94  EF5F  F01D         	goto	l182
  7105   003A98                     u3110:
  7106   003A98                     
  7107                           ; BSR set to: 0
  7108   003A98  0EE8               	movlw	232
  7109   003A9A  241A               	addwf	color_detect@red^0,w,c
  7110   003A9C  6F60               	movwf	??_color_detect& (0+255),b
  7111   003A9E  0E03               	movlw	3
  7112   003AA0  201B               	addwfc	(color_detect@red+1)^0,w,c
  7113   003AA2  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7114   003AA4  5160               	movf	??_color_detect& (0+255),w,b
  7115   003AA6  5C14               	subwf	color_detect@HSV^0,w,c
  7116   003AA8  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7117   003AAA  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7118   003AAC  B0D8               	btfsc	status,0,c
  7119   003AAE  EF5B  F01D         	goto	u3121
  7120   003AB2  EF5D  F01D         	goto	u3120
  7121   003AB6                     u3121:
  7122   003AB6  EF5F  F01D         	goto	l182
  7123   003ABA                     u3120:
  7124   003ABA                     l4095:
  7125                           
  7126                           ; BSR set to: 0
  7127   003ABA  0E01               	movlw	1
  7128   003ABC  6E4A               	movwf	color_detect@color^0,c
  7129   003ABE                     l182:
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;color.c: 150:     return color;
  7133   003ABE  504A               	movf	color_detect@color^0,w,c
  7134   003AC0                     
  7135                           ; BSR set to: 0
  7136   003AC0  0012               	return		;funcret
  7137   003AC2                     __end_of_color_detect:
  7138                           	callstack 0
  7139                           
  7140 ;; *************** function _color_click_init *****************
  7141 ;; Defined at:
  7142 ;;		line 7 in file "color.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;		None
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;		None
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  1    wreg      void 
  7149 ;; Registers used:
  7150 ;;		wreg, status,2, status,0, cstack
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7159 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7160 ;;Total ram usage:        1 bytes
  7161 ;; Hardware stack levels used: 1
  7162 ;; Hardware stack levels required when called: 10
  7163 ;; This function calls:
  7164 ;;		_I2C_2_Master_Init
  7165 ;;		_color_clear_init_interrupts
  7166 ;;		_color_writetoaddr
  7167 ;; This function is called by:
  7168 ;;		_main
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           	psect	text14
  7173   0050AE                     __ptext14:
  7174                           	callstack 0
  7175   0050AE                     _color_click_init:
  7176                           	callstack 20
  7177   0050AE                     
  7178                           ;color.c: 10:     I2C_2_Master_Init();
  7179   0050AE  ECBA  F028         	call	_I2C_2_Master_Init	;wreg free
  7180   0050B2                     
  7181                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  7182   0050B2  0E01               	movlw	1
  7183   0050B4  6E12               	movwf	color_writetoaddr@value^0,c
  7184   0050B6  0E00               	movlw	0
  7185   0050B8  EC41  F029         	call	_color_writetoaddr
  7186   0050BC                     
  7187                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7188   0050BC  0E3F               	movlw	63
  7189   0050BE  6E22               	movwf	??_color_click_init^0,c
  7190   0050C0  0E55               	movlw	85
  7191   0050C2                     u4657:
  7192   0050C2  2EE8               	decfsz	wreg,f,c
  7193   0050C4  D7FE               	bra	u4657
  7194   0050C6  2E22               	decfsz	??_color_click_init^0,f,c
  7195   0050C8  D7FC               	bra	u4657
  7196   0050CA  0000               	nop	
  7197   0050CC                     
  7198                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  7199   0050CC  0E03               	movlw	3
  7200   0050CE  6E12               	movwf	color_writetoaddr@value^0,c
  7201   0050D0  0E00               	movlw	0
  7202   0050D2  EC41  F029         	call	_color_writetoaddr
  7203   0050D6                     
  7204                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  7205   0050D6  0ED5               	movlw	213
  7206   0050D8  6E12               	movwf	color_writetoaddr@value^0,c
  7207   0050DA  0E01               	movlw	1
  7208   0050DC  EC41  F029         	call	_color_writetoaddr
  7209   0050E0                     
  7210                           ;color.c: 23:     color_clear_init_interrupts();
  7211   0050E0  ECFB  F025         	call	_color_clear_init_interrupts	;wreg free
  7212   0050E4  0012               	return		;funcret
  7213   0050E6                     __end_of_color_click_init:
  7214                           	callstack 0
  7215                           
  7216 ;; *************** function _color_clear_init_interrupts *****************
  7217 ;; Defined at:
  7218 ;;		line 27 in file "color.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;		None
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;  low_threshol    2   31[COMRAM] unsigned int 
  7223 ;;  high_thresho    2   29[COMRAM] unsigned int 
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  1    wreg      void 
  7226 ;; Registers used:
  7227 ;;		wreg, status,2, status,0, cstack
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7234 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7236 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7237 ;;Total ram usage:        5 bytes
  7238 ;; Hardware stack levels used: 1
  7239 ;; Hardware stack levels required when called: 9
  7240 ;; This function calls:
  7241 ;;		_I2C_2_Master_Start
  7242 ;;		_I2C_2_Master_Stop
  7243 ;;		_I2C_2_Master_Write
  7244 ;;		___lwdiv
  7245 ;;		_color_writetoaddr
  7246 ;; This function is called by:
  7247 ;;		_main
  7248 ;;		_color_click_init
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           	psect	text15
  7253   004BF6                     __ptext15:
  7254                           	callstack 0
  7255   004BF6                     _color_clear_init_interrupts:
  7256                           	callstack 20
  7257   004BF6                     
  7258                           ;color.c: 29:     I2C_2_Master_Start();
  7259   004BF6  ECB8  F029         	call	_I2C_2_Master_Start	;wreg free
  7260                           
  7261                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  7262   004BFA  0E52               	movlw	82
  7263   004BFC  ECA2  F029         	call	_I2C_2_Master_Write
  7264                           
  7265                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  7266   004C00  0EE6               	movlw	230
  7267   004C02  ECA2  F029         	call	_I2C_2_Master_Write
  7268                           
  7269                           ;color.c: 32:     I2C_2_Master_Stop();
  7270   004C06  ECB3  F029         	call	_I2C_2_Master_Stop	;wreg free
  7271                           
  7272                           ;color.c: 38:     unsigned int high_threshold = ambient + (ambient/3);
  7273   004C0A  C0FA  F016         	movff	_ambient,___lwdiv@dividend
  7274   004C0E  C0FB  F017         	movff	_ambient+1,___lwdiv@dividend+1
  7275   004C12  0E00               	movlw	0
  7276   004C14  6E19               	movwf	(___lwdiv@divisor+1)^0,c
  7277   004C16  0E03               	movlw	3
  7278   004C18  6E18               	movwf	___lwdiv@divisor^0,c
  7279   004C1A  EC3B  F027         	call	___lwdiv	;wreg free
  7280   004C1E  0100               	movlb	0	; () banked
  7281   004C20  51FA               	movf	_ambient& (0+255),w,b
  7282   004C22  2416               	addwf	?___lwdiv^0,w,c
  7283   004C24  6E1E               	movwf	color_clear_init_interrupts@high_threshold^0,c
  7284   004C26  51FB               	movf	(_ambient+1)& (0+255),w,b
  7285   004C28  2017               	addwfc	(?___lwdiv+1)^0,w,c
  7286   004C2A  6E1F               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  7287                           
  7288                           ;color.c: 39:     unsigned int low_threshold = ambient - (ambient/20);
  7289   004C2C  C0FA  F016         	movff	_ambient,___lwdiv@dividend
  7290   004C30  C0FB  F017         	movff	_ambient+1,___lwdiv@dividend+1
  7291   004C34  0E00               	movlw	0
  7292   004C36  6E19               	movwf	(___lwdiv@divisor+1)^0,c
  7293   004C38  0E14               	movlw	20
  7294   004C3A  6E18               	movwf	___lwdiv@divisor^0,c
  7295   004C3C  EC3B  F027         	call	___lwdiv	;wreg free
  7296   004C40  5016               	movf	?___lwdiv^0,w,c
  7297   004C42  0100               	movlb	0	; () banked
  7298   004C44  5DFA               	subwf	_ambient& (0+255),w,b
  7299   004C46  6E20               	movwf	color_clear_init_interrupts@low_threshold^0,c
  7300   004C48  5017               	movf	(?___lwdiv+1)^0,w,c
  7301   004C4A  59FB               	subwfb	(_ambient+1)& (0+255),w,b
  7302   004C4C  6E21               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  7303                           
  7304                           ;color.c: 42:  color_writetoaddr(0x00, 0x13);
  7305   004C4E  0E13               	movlw	19
  7306   004C50  6E12               	movwf	color_writetoaddr@value^0,c
  7307   004C52  0E00               	movlw	0
  7308   004C54  EC41  F029         	call	_color_writetoaddr
  7309   004C58                     
  7310                           ;color.c: 43:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7311   004C58  0E3F               	movlw	63
  7312   004C5A  6E1D               	movwf	??_color_clear_init_interrupts^0,c
  7313   004C5C  0E55               	movlw	85
  7314   004C5E                     u4667:
  7315   004C5E  2EE8               	decfsz	wreg,f,c
  7316   004C60  D7FE               	bra	u4667
  7317   004C62  2E1D               	decfsz	??_color_clear_init_interrupts^0,f,c
  7318   004C64  D7FC               	bra	u4667
  7319   004C66  0000               	nop	
  7320   004C68                     
  7321                           ;color.c: 44:     color_writetoaddr(0x07, (high_threshold >> 8));
  7322   004C68  501F               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  7323   004C6A  6E12               	movwf	color_writetoaddr@value^0,c
  7324   004C6C  0E07               	movlw	7
  7325   004C6E  EC41  F029         	call	_color_writetoaddr
  7326   004C72                     
  7327                           ;color.c: 45:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  7328   004C72  C01E  F012         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  7329   004C76  0E06               	movlw	6
  7330   004C78  EC41  F029         	call	_color_writetoaddr
  7331   004C7C                     
  7332                           ;color.c: 46:     color_writetoaddr(0x05, (low_threshold >> 8));
  7333   004C7C  5021               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  7334   004C7E  6E12               	movwf	color_writetoaddr@value^0,c
  7335   004C80  0E05               	movlw	5
  7336   004C82  EC41  F029         	call	_color_writetoaddr
  7337   004C86                     
  7338                           ;color.c: 47:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  7339   004C86  C020  F012         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  7340   004C8A  0E04               	movlw	4
  7341   004C8C  EC41  F029         	call	_color_writetoaddr
  7342   004C90                     
  7343                           ;color.c: 48:     color_writetoaddr(0x0C, 0b11);
  7344   004C90  0E03               	movlw	3
  7345   004C92  6E12               	movwf	color_writetoaddr@value^0,c
  7346   004C94  0E0C               	movlw	12
  7347   004C96  EC41  F029         	call	_color_writetoaddr
  7348   004C9A  0012               	return		;funcret
  7349   004C9C                     __end_of_color_clear_init_interrupts:
  7350                           	callstack 0
  7351                           
  7352 ;; *************** function _color_writetoaddr *****************
  7353 ;; Defined at:
  7354 ;;		line 53 in file "color.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;  address         1    wreg     unsigned char 
  7357 ;;  value           1   17[COMRAM] unsigned char 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  address         1   18[COMRAM] unsigned char 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0, cstack
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7369 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7373 ;;Total ram usage:        2 bytes
  7374 ;; Hardware stack levels used: 1
  7375 ;; Hardware stack levels required when called: 8
  7376 ;; This function calls:
  7377 ;;		_I2C_2_Master_Start
  7378 ;;		_I2C_2_Master_Stop
  7379 ;;		_I2C_2_Master_Write
  7380 ;; This function is called by:
  7381 ;;		_color_click_init
  7382 ;;		_color_clear_init_interrupts
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386                           	psect	text16
  7387   005282                     __ptext16:
  7388                           	callstack 0
  7389   005282                     _color_writetoaddr:
  7390                           	callstack 21
  7391                           
  7392                           ;incstack = 0
  7393                           ;color_writetoaddr@address stored from wreg
  7394   005282  6E13               	movwf	color_writetoaddr@address^0,c
  7395   005284                     
  7396                           ;color.c: 54:     I2C_2_Master_Start();
  7397   005284  ECB8  F029         	call	_I2C_2_Master_Start	;wreg free
  7398                           
  7399                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  7400   005288  0E52               	movlw	82
  7401   00528A  ECA2  F029         	call	_I2C_2_Master_Write
  7402                           
  7403                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
  7404   00528E  5013               	movf	color_writetoaddr@address^0,w,c
  7405   005290  0980               	iorlw	128
  7406   005292  ECA2  F029         	call	_I2C_2_Master_Write
  7407                           
  7408                           ;color.c: 57:     I2C_2_Master_Write(value);
  7409   005296  5012               	movf	color_writetoaddr@value^0,w,c
  7410   005298  ECA2  F029         	call	_I2C_2_Master_Write
  7411                           
  7412                           ;color.c: 58:     I2C_2_Master_Stop();
  7413   00529C  ECB3  F029         	call	_I2C_2_Master_Stop	;wreg free
  7414   0052A0  0012               	return		;funcret
  7415   0052A2                     __end_of_color_writetoaddr:
  7416                           	callstack 0
  7417                           
  7418 ;; *************** function _I2C_2_Master_Init *****************
  7419 ;; Defined at:
  7420 ;;		line 4 in file "i2c.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      void 
  7427 ;; Registers used:
  7428 ;;		wreg, status,2
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7438 ;;Total ram usage:        0 bytes
  7439 ;; Hardware stack levels used: 1
  7440 ;; Hardware stack levels required when called: 6
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_color_click_init
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text17
  7449   005174                     __ptext17:
  7450                           	callstack 0
  7451   005174                     _I2C_2_Master_Init:
  7452                           	callstack 23
  7453   005174                     
  7454                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7455   005174  010E               	movlb	14	; () banked
  7456   005176  51D9               	movf	217,w,b	;volatile
  7457   005178  0BF0               	andlw	-16
  7458   00517A  0908               	iorlw	8
  7459   00517C  6FD9               	movwf	217,b	;volatile
  7460   00517E                     
  7461                           ; BSR set to: 14
  7462                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7463   00517E  8BD9               	bsf	217,5,b	;volatile
  7464                           
  7465                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7466   005180  0E9F               	movlw	159
  7467   005182  6FD6               	movwf	214,b	;volatile
  7468   005184                     
  7469                           ; BSR set to: 14
  7470                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7471   005184  8A84               	bsf	132,5,c	;volatile
  7472   005186                     
  7473                           ; BSR set to: 14
  7474                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7475   005186  8C84               	bsf	132,6,c	;volatile
  7476   005188                     
  7477                           ; BSR set to: 14
  7478                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7479   005188  9BA7               	bcf	167,5,b	;volatile
  7480   00518A                     
  7481                           ; BSR set to: 14
  7482                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7483   00518A  9DA7               	bcf	167,6,b	;volatile
  7484                           
  7485                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7486   00518C  0E1D               	movlw	29
  7487   00518E  6F1D               	movwf	29,b	;volatile
  7488                           
  7489                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7490   005190  0E1E               	movlw	30
  7491   005192  6F1C               	movwf	28,b	;volatile
  7492                           
  7493                           ;i2c.c: 18:   RD5PPS=0x1C;
  7494   005194  0E1C               	movlw	28
  7495   005196  6F6F               	movwf	111,b	;volatile
  7496                           
  7497                           ;i2c.c: 19:   RD6PPS=0x1B;
  7498   005198  0E1B               	movlw	27
  7499   00519A  6F70               	movwf	112,b	;volatile
  7500   00519C                     
  7501                           ; BSR set to: 14
  7502   00519C  0012               	return		;funcret
  7503   00519E                     __end_of_I2C_2_Master_Init:
  7504                           	callstack 0
  7505                           
  7506 ;; *************** function _color_calibration *****************
  7507 ;; Defined at:
  7508 ;;		line 153 in file "color.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  RGBC            2   22[BANK0 ] PTR struct RGBC_val
  7511 ;;		 -> main@RGBC(8), 
  7512 ;;  HSV             2   24[BANK0 ] PTR struct HSV_val
  7513 ;;		 -> main@HSV(6), 
  7514 ;;  red             2   26[BANK0 ] PTR struct HSV_calib
  7515 ;;		 -> main@red(6), 
  7516 ;;  green           2   28[BANK0 ] PTR struct HSV_calib
  7517 ;;		 -> main@green(6), 
  7518 ;;  blue            2   30[BANK0 ] PTR struct HSV_calib
  7519 ;;		 -> main@blue(6), 
  7520 ;;  yellow          2   32[BANK0 ] PTR struct HSV_calib
  7521 ;;		 -> main@yellow(6), 
  7522 ;;  pink            2   34[BANK0 ] PTR struct HSV_calib
  7523 ;;		 -> main@pink(6), 
  7524 ;;  orange          2   36[BANK0 ] PTR struct HSV_calib
  7525 ;;		 -> main@orange(6), 
  7526 ;;  lightblue       2   38[BANK0 ] PTR struct HSV_calib
  7527 ;;		 -> main@lightblue(6), 
  7528 ;;  white           2   40[BANK0 ] PTR struct HSV_calib
  7529 ;;		 -> main@white(6), 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;		None
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  1    wreg      void 
  7534 ;; Registers used:
  7535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7541 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7543 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7544 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7545 ;;Total ram usage:       22 bytes
  7546 ;; Hardware stack levels used: 1
  7547 ;; Hardware stack levels required when called: 9
  7548 ;; This function calls:
  7549 ;;		_color_read
  7550 ;;		_rgb_2_hsv
  7551 ;;		_white_Light
  7552 ;; This function is called by:
  7553 ;;		_main
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text18
  7558   0023D4                     __ptext18:
  7559                           	callstack 0
  7560   0023D4                     _color_calibration:
  7561                           	callstack 21
  7562   0023D4                     
  7563                           ;color.c: 153: void color_calibration(RGBC_val *RGBC, HSV_val *HSV, HSV_calib *red, HSV_
      +                          calib *green, HSV_calib *blue, HSV_calib *yellow, HSV_calib *pink, HSV_calib *orange, HS
      +                          V_calib *lightblue, HSV_calib *white);color.c: 154: {;color.c: 155:     white_Light(1);
  7564   0023D4  0E01               	movlw	1
  7565   0023D6  EC1E  F029         	call	_white_Light
  7566   0023DA                     
  7567                           ;color.c: 156:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7568   0023DA  8680               	bsf	128,3,c	;volatile
  7569   0023DC  8E7C               	bsf	124,7,c	;volatile
  7570   0023DE                     l191:
  7571   0023DE  B48E               	btfsc	142,2,c	;volatile
  7572   0023E0  EFF4  F011         	goto	u2591
  7573   0023E4  EFF6  F011         	goto	u2590
  7574   0023E8                     u2591:
  7575   0023E8  EFEF  F011         	goto	l191
  7576   0023EC                     u2590:
  7577   0023EC                     
  7578                           ;color.c: 160:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7579   0023EC  9680               	bcf	128,3,c	;volatile
  7580   0023EE  9E7C               	bcf	124,7,c	;volatile
  7581   0023F0                     
  7582                           ;color.c: 161:     color_read(RGBC);
  7583   0023F0  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7584   0023F4  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7585   0023F8  ECA6  F01F         	call	_color_read	;wreg free
  7586   0023FC                     
  7587                           ;color.c: 162:     rgb_2_hsv(*RGBC, HSV);
  7588   0023FC  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7589   002400  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7590   002404  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7591   002408  0E07               	movlw	7
  7592   00240A                     u2601:
  7593   00240A  CFDB FFEB          	movff	plusw2,plusw0
  7594   00240E  06E8               	decf	wreg,f,c
  7595   002410  E2FC               	bc	u2601
  7596   002412  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7597   002416  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7598   00241A  EC36  F017         	call	_rgb_2_hsv	;wreg free
  7599   00241E                     
  7600                           ;color.c: 163:     red->H = HSV->H;
  7601   00241E  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7602   002422  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7603   002426  C07A  FFE1         	movff	color_calibration@red,fsr1l
  7604   00242A  C07B  FFE2         	movff	color_calibration@red+1,fsr1h
  7605   00242E  CFDE FFE6          	movff	postinc2,postinc1
  7606   002432  CFDD FFE5          	movff	postdec2,postdec1
  7607   002436                     
  7608                           ;color.c: 164:     red->S = HSV->S;
  7609   002436  0100               	movlb	0	; () banked
  7610   002438  EE20 F002          	lfsr	2,2
  7611   00243C  5178               	movf	color_calibration@HSV& (0+255),w,b
  7612   00243E  26D9               	addwf	fsr2l,f,c
  7613   002440  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7614   002442  22DA               	addwfc	fsr2h,f,c
  7615   002444  EE10 F002          	lfsr	1,2
  7616   002448  517A               	movf	color_calibration@red& (0+255),w,b
  7617   00244A  26E1               	addwf	fsr1l,f,c
  7618   00244C  517B               	movf	(color_calibration@red+1)& (0+255),w,b
  7619   00244E  22E2               	addwfc	fsr1h,f,c
  7620   002450  CFDE FFE6          	movff	postinc2,postinc1
  7621   002454  CFDD FFE5          	movff	postdec2,postdec1
  7622   002458                     
  7623                           ; BSR set to: 0
  7624                           ;color.c: 165:     red->V = HSV->V;
  7625   002458  EE20 F004          	lfsr	2,4
  7626   00245C  5178               	movf	color_calibration@HSV& (0+255),w,b
  7627   00245E  26D9               	addwf	fsr2l,f,c
  7628   002460  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7629   002462  22DA               	addwfc	fsr2h,f,c
  7630   002464  EE10 F004          	lfsr	1,4
  7631   002468  517A               	movf	color_calibration@red& (0+255),w,b
  7632   00246A  26E1               	addwf	fsr1l,f,c
  7633   00246C  517B               	movf	(color_calibration@red+1)& (0+255),w,b
  7634   00246E  22E2               	addwfc	fsr1h,f,c
  7635   002470  CFDE FFE6          	movff	postinc2,postinc1
  7636   002474  CFDD FFE5          	movff	postdec2,postdec1
  7637   002478                     
  7638                           ; BSR set to: 0
  7639                           ;color.c: 167:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7640   002478  0E29               	movlw	41
  7641   00247A  6E41               	movwf	(??_color_calibration+1)^0,c
  7642   00247C  0E96               	movlw	150
  7643   00247E  6E40               	movwf	??_color_calibration^0,c
  7644   002480  0E7F               	movlw	127
  7645   002482                     u4677:
  7646   002482  2EE8               	decfsz	wreg,f,c
  7647   002484  D7FE               	bra	u4677
  7648   002486  2E40               	decfsz	??_color_calibration^0,f,c
  7649   002488  D7FC               	bra	u4677
  7650   00248A  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  7651   00248C  D7FA               	bra	u4677
  7652   00248E  0000               	nop	
  7653   002490                     
  7654                           ;color.c: 168:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7655   002490  8680               	bsf	128,3,c	;volatile
  7656   002492  8E7C               	bsf	124,7,c	;volatile
  7657   002494                     l194:
  7658   002494  B48E               	btfsc	142,2,c	;volatile
  7659   002496  EF4F  F012         	goto	u2611
  7660   00249A  EF51  F012         	goto	u2610
  7661   00249E                     u2611:
  7662   00249E  EF4A  F012         	goto	l194
  7663   0024A2                     u2610:
  7664   0024A2                     
  7665                           ;color.c: 172:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7666   0024A2  9680               	bcf	128,3,c	;volatile
  7667   0024A4  9E7C               	bcf	124,7,c	;volatile
  7668   0024A6                     
  7669                           ;color.c: 173:     color_read(RGBC);
  7670   0024A6  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7671   0024AA  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7672   0024AE  ECA6  F01F         	call	_color_read	;wreg free
  7673   0024B2                     
  7674                           ;color.c: 174:     rgb_2_hsv(*RGBC, HSV);
  7675   0024B2  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7676   0024B6  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7677   0024BA  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7678   0024BE  0E07               	movlw	7
  7679   0024C0                     u2621:
  7680   0024C0  CFDB FFEB          	movff	plusw2,plusw0
  7681   0024C4  06E8               	decf	wreg,f,c
  7682   0024C6  E2FC               	bc	u2621
  7683   0024C8  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7684   0024CC  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7685   0024D0  EC36  F017         	call	_rgb_2_hsv	;wreg free
  7686   0024D4                     
  7687                           ;color.c: 175:     green->H = HSV->H;
  7688   0024D4  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7689   0024D8  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7690   0024DC  C07C  FFE1         	movff	color_calibration@green,fsr1l
  7691   0024E0  C07D  FFE2         	movff	color_calibration@green+1,fsr1h
  7692   0024E4  CFDE FFE6          	movff	postinc2,postinc1
  7693   0024E8  CFDD FFE5          	movff	postdec2,postdec1
  7694   0024EC                     
  7695                           ;color.c: 176:     green->S = HSV->S;
  7696   0024EC  0100               	movlb	0	; () banked
  7697   0024EE  EE20 F002          	lfsr	2,2
  7698   0024F2  5178               	movf	color_calibration@HSV& (0+255),w,b
  7699   0024F4  26D9               	addwf	fsr2l,f,c
  7700   0024F6  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7701   0024F8  22DA               	addwfc	fsr2h,f,c
  7702   0024FA  EE10 F002          	lfsr	1,2
  7703   0024FE  517C               	movf	color_calibration@green& (0+255),w,b
  7704   002500  26E1               	addwf	fsr1l,f,c
  7705   002502  517D               	movf	(color_calibration@green+1)& (0+255),w,b
  7706   002504  22E2               	addwfc	fsr1h,f,c
  7707   002506  CFDE FFE6          	movff	postinc2,postinc1
  7708   00250A  CFDD FFE5          	movff	postdec2,postdec1
  7709   00250E                     
  7710                           ; BSR set to: 0
  7711                           ;color.c: 177:     green->V = HSV->V;
  7712   00250E  EE20 F004          	lfsr	2,4
  7713   002512  5178               	movf	color_calibration@HSV& (0+255),w,b
  7714   002514  26D9               	addwf	fsr2l,f,c
  7715   002516  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7716   002518  22DA               	addwfc	fsr2h,f,c
  7717   00251A  EE10 F004          	lfsr	1,4
  7718   00251E  517C               	movf	color_calibration@green& (0+255),w,b
  7719   002520  26E1               	addwf	fsr1l,f,c
  7720   002522  517D               	movf	(color_calibration@green+1)& (0+255),w,b
  7721   002524  22E2               	addwfc	fsr1h,f,c
  7722   002526  CFDE FFE6          	movff	postinc2,postinc1
  7723   00252A  CFDD FFE5          	movff	postdec2,postdec1
  7724   00252E                     
  7725                           ; BSR set to: 0
  7726                           ;color.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7727   00252E  0E29               	movlw	41
  7728   002530  6E41               	movwf	(??_color_calibration+1)^0,c
  7729   002532  0E96               	movlw	150
  7730   002534  6E40               	movwf	??_color_calibration^0,c
  7731   002536  0E7F               	movlw	127
  7732   002538                     u4687:
  7733   002538  2EE8               	decfsz	wreg,f,c
  7734   00253A  D7FE               	bra	u4687
  7735   00253C  2E40               	decfsz	??_color_calibration^0,f,c
  7736   00253E  D7FC               	bra	u4687
  7737   002540  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  7738   002542  D7FA               	bra	u4687
  7739   002544  0000               	nop	
  7740   002546                     
  7741                           ;color.c: 180:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7742   002546  8680               	bsf	128,3,c	;volatile
  7743   002548  8E7C               	bsf	124,7,c	;volatile
  7744   00254A                     l197:
  7745   00254A  B48E               	btfsc	142,2,c	;volatile
  7746   00254C  EFAA  F012         	goto	u2631
  7747   002550  EFAC  F012         	goto	u2630
  7748   002554                     u2631:
  7749   002554  EFA5  F012         	goto	l197
  7750   002558                     u2630:
  7751   002558                     
  7752                           ;color.c: 184:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7753   002558  9680               	bcf	128,3,c	;volatile
  7754   00255A  9E7C               	bcf	124,7,c	;volatile
  7755   00255C                     
  7756                           ;color.c: 185:     color_read(RGBC);
  7757   00255C  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7758   002560  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7759   002564  ECA6  F01F         	call	_color_read	;wreg free
  7760   002568                     
  7761                           ;color.c: 186:     rgb_2_hsv(*RGBC, HSV);
  7762   002568  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7763   00256C  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7764   002570  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7765   002574  0E07               	movlw	7
  7766   002576                     u2641:
  7767   002576  CFDB FFEB          	movff	plusw2,plusw0
  7768   00257A  06E8               	decf	wreg,f,c
  7769   00257C  E2FC               	bc	u2641
  7770   00257E  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7771   002582  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7772   002586  EC36  F017         	call	_rgb_2_hsv	;wreg free
  7773   00258A                     
  7774                           ;color.c: 187:     blue->H = HSV->H;
  7775   00258A  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7776   00258E  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7777   002592  C07E  FFE1         	movff	color_calibration@blue,fsr1l
  7778   002596  C07F  FFE2         	movff	color_calibration@blue+1,fsr1h
  7779   00259A  CFDE FFE6          	movff	postinc2,postinc1
  7780   00259E  CFDD FFE5          	movff	postdec2,postdec1
  7781   0025A2                     
  7782                           ;color.c: 188:     blue->S = HSV->S;
  7783   0025A2  0100               	movlb	0	; () banked
  7784   0025A4  EE20 F002          	lfsr	2,2
  7785   0025A8  5178               	movf	color_calibration@HSV& (0+255),w,b
  7786   0025AA  26D9               	addwf	fsr2l,f,c
  7787   0025AC  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7788   0025AE  22DA               	addwfc	fsr2h,f,c
  7789   0025B0  EE10 F002          	lfsr	1,2
  7790   0025B4  517E               	movf	color_calibration@blue& (0+255),w,b
  7791   0025B6  26E1               	addwf	fsr1l,f,c
  7792   0025B8  517F               	movf	(color_calibration@blue+1)& (0+255),w,b
  7793   0025BA  22E2               	addwfc	fsr1h,f,c
  7794   0025BC  CFDE FFE6          	movff	postinc2,postinc1
  7795   0025C0  CFDD FFE5          	movff	postdec2,postdec1
  7796   0025C4                     
  7797                           ; BSR set to: 0
  7798                           ;color.c: 189:     blue->V = HSV->V;
  7799   0025C4  EE20 F004          	lfsr	2,4
  7800   0025C8  5178               	movf	color_calibration@HSV& (0+255),w,b
  7801   0025CA  26D9               	addwf	fsr2l,f,c
  7802   0025CC  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7803   0025CE  22DA               	addwfc	fsr2h,f,c
  7804   0025D0  EE10 F004          	lfsr	1,4
  7805   0025D4  517E               	movf	color_calibration@blue& (0+255),w,b
  7806   0025D6  26E1               	addwf	fsr1l,f,c
  7807   0025D8  517F               	movf	(color_calibration@blue+1)& (0+255),w,b
  7808   0025DA  22E2               	addwfc	fsr1h,f,c
  7809   0025DC  CFDE FFE6          	movff	postinc2,postinc1
  7810   0025E0  CFDD FFE5          	movff	postdec2,postdec1
  7811   0025E4                     
  7812                           ; BSR set to: 0
  7813                           ;color.c: 191:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7814   0025E4  0E29               	movlw	41
  7815   0025E6  6E41               	movwf	(??_color_calibration+1)^0,c
  7816   0025E8  0E96               	movlw	150
  7817   0025EA  6E40               	movwf	??_color_calibration^0,c
  7818   0025EC  0E7F               	movlw	127
  7819   0025EE                     u4697:
  7820   0025EE  2EE8               	decfsz	wreg,f,c
  7821   0025F0  D7FE               	bra	u4697
  7822   0025F2  2E40               	decfsz	??_color_calibration^0,f,c
  7823   0025F4  D7FC               	bra	u4697
  7824   0025F6  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  7825   0025F8  D7FA               	bra	u4697
  7826   0025FA  0000               	nop	
  7827   0025FC                     
  7828                           ;color.c: 192:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7829   0025FC  8680               	bsf	128,3,c	;volatile
  7830   0025FE  8E7C               	bsf	124,7,c	;volatile
  7831   002600                     l200:
  7832   002600  B48E               	btfsc	142,2,c	;volatile
  7833   002602  EF05  F013         	goto	u2651
  7834   002606  EF07  F013         	goto	u2650
  7835   00260A                     u2651:
  7836   00260A  EF00  F013         	goto	l200
  7837   00260E                     u2650:
  7838   00260E                     
  7839                           ;color.c: 196:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7840   00260E  9680               	bcf	128,3,c	;volatile
  7841   002610  9E7C               	bcf	124,7,c	;volatile
  7842   002612                     
  7843                           ;color.c: 197:     color_read(RGBC);
  7844   002612  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7845   002616  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7846   00261A  ECA6  F01F         	call	_color_read	;wreg free
  7847   00261E                     
  7848                           ;color.c: 198:     rgb_2_hsv(*RGBC, HSV);
  7849   00261E  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7850   002622  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7851   002626  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7852   00262A  0E07               	movlw	7
  7853   00262C                     u2661:
  7854   00262C  CFDB FFEB          	movff	plusw2,plusw0
  7855   002630  06E8               	decf	wreg,f,c
  7856   002632  E2FC               	bc	u2661
  7857   002634  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7858   002638  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7859   00263C  EC36  F017         	call	_rgb_2_hsv	;wreg free
  7860   002640                     
  7861                           ;color.c: 199:     yellow->H = HSV->H;
  7862   002640  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7863   002644  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7864   002648  C080  FFE1         	movff	color_calibration@yellow,fsr1l
  7865   00264C  C081  FFE2         	movff	color_calibration@yellow+1,fsr1h
  7866   002650  CFDE FFE6          	movff	postinc2,postinc1
  7867   002654  CFDD FFE5          	movff	postdec2,postdec1
  7868   002658                     
  7869                           ;color.c: 200:     yellow->S = HSV->S;
  7870   002658  0100               	movlb	0	; () banked
  7871   00265A  EE20 F002          	lfsr	2,2
  7872   00265E  5178               	movf	color_calibration@HSV& (0+255),w,b
  7873   002660  26D9               	addwf	fsr2l,f,c
  7874   002662  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7875   002664  22DA               	addwfc	fsr2h,f,c
  7876   002666  EE10 F002          	lfsr	1,2
  7877   00266A  5180               	movf	color_calibration@yellow& (0+255),w,b
  7878   00266C  26E1               	addwf	fsr1l,f,c
  7879   00266E  5181               	movf	(color_calibration@yellow+1)& (0+255),w,b
  7880   002670  22E2               	addwfc	fsr1h,f,c
  7881   002672  CFDE FFE6          	movff	postinc2,postinc1
  7882   002676  CFDD FFE5          	movff	postdec2,postdec1
  7883   00267A                     
  7884                           ; BSR set to: 0
  7885                           ;color.c: 201:     yellow->V = HSV->V;
  7886   00267A  EE20 F004          	lfsr	2,4
  7887   00267E  5178               	movf	color_calibration@HSV& (0+255),w,b
  7888   002680  26D9               	addwf	fsr2l,f,c
  7889   002682  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7890   002684  22DA               	addwfc	fsr2h,f,c
  7891   002686  EE10 F004          	lfsr	1,4
  7892   00268A  5180               	movf	color_calibration@yellow& (0+255),w,b
  7893   00268C  26E1               	addwf	fsr1l,f,c
  7894   00268E  5181               	movf	(color_calibration@yellow+1)& (0+255),w,b
  7895   002690  22E2               	addwfc	fsr1h,f,c
  7896   002692  CFDE FFE6          	movff	postinc2,postinc1
  7897   002696  CFDD FFE5          	movff	postdec2,postdec1
  7898   00269A                     
  7899                           ; BSR set to: 0
  7900                           ;color.c: 203:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7901   00269A  0E29               	movlw	41
  7902   00269C  6E41               	movwf	(??_color_calibration+1)^0,c
  7903   00269E  0E96               	movlw	150
  7904   0026A0  6E40               	movwf	??_color_calibration^0,c
  7905   0026A2  0E7F               	movlw	127
  7906   0026A4                     u4707:
  7907   0026A4  2EE8               	decfsz	wreg,f,c
  7908   0026A6  D7FE               	bra	u4707
  7909   0026A8  2E40               	decfsz	??_color_calibration^0,f,c
  7910   0026AA  D7FC               	bra	u4707
  7911   0026AC  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  7912   0026AE  D7FA               	bra	u4707
  7913   0026B0  0000               	nop	
  7914   0026B2                     
  7915                           ;color.c: 204:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7916   0026B2  8680               	bsf	128,3,c	;volatile
  7917   0026B4  8E7C               	bsf	124,7,c	;volatile
  7918   0026B6                     l203:
  7919   0026B6  B48E               	btfsc	142,2,c	;volatile
  7920   0026B8  EF60  F013         	goto	u2671
  7921   0026BC  EF62  F013         	goto	u2670
  7922   0026C0                     u2671:
  7923   0026C0  EF5B  F013         	goto	l203
  7924   0026C4                     u2670:
  7925   0026C4                     
  7926                           ;color.c: 208:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7927   0026C4  9680               	bcf	128,3,c	;volatile
  7928   0026C6  9E7C               	bcf	124,7,c	;volatile
  7929   0026C8                     
  7930                           ;color.c: 209:     color_read(RGBC);
  7931   0026C8  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7932   0026CC  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7933   0026D0  ECA6  F01F         	call	_color_read	;wreg free
  7934   0026D4                     
  7935                           ;color.c: 210:     rgb_2_hsv(*RGBC, HSV);
  7936   0026D4  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7937   0026D8  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7938   0026DC  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7939   0026E0  0E07               	movlw	7
  7940   0026E2                     u2681:
  7941   0026E2  CFDB FFEB          	movff	plusw2,plusw0
  7942   0026E6  06E8               	decf	wreg,f,c
  7943   0026E8  E2FC               	bc	u2681
  7944   0026EA  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7945   0026EE  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7946   0026F2  EC36  F017         	call	_rgb_2_hsv	;wreg free
  7947   0026F6                     
  7948                           ;color.c: 211:     pink->H = HSV->H;
  7949   0026F6  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7950   0026FA  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7951   0026FE  C082  FFE1         	movff	color_calibration@pink,fsr1l
  7952   002702  C083  FFE2         	movff	color_calibration@pink+1,fsr1h
  7953   002706  CFDE FFE6          	movff	postinc2,postinc1
  7954   00270A  CFDD FFE5          	movff	postdec2,postdec1
  7955   00270E                     
  7956                           ;color.c: 212:     pink->S = HSV->S;
  7957   00270E  0100               	movlb	0	; () banked
  7958   002710  EE20 F002          	lfsr	2,2
  7959   002714  5178               	movf	color_calibration@HSV& (0+255),w,b
  7960   002716  26D9               	addwf	fsr2l,f,c
  7961   002718  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7962   00271A  22DA               	addwfc	fsr2h,f,c
  7963   00271C  EE10 F002          	lfsr	1,2
  7964   002720  5182               	movf	color_calibration@pink& (0+255),w,b
  7965   002722  26E1               	addwf	fsr1l,f,c
  7966   002724  5183               	movf	(color_calibration@pink+1)& (0+255),w,b
  7967   002726  22E2               	addwfc	fsr1h,f,c
  7968   002728  CFDE FFE6          	movff	postinc2,postinc1
  7969   00272C  CFDD FFE5          	movff	postdec2,postdec1
  7970   002730                     
  7971                           ; BSR set to: 0
  7972                           ;color.c: 213:     pink->V = HSV->V;
  7973   002730  EE20 F004          	lfsr	2,4
  7974   002734  5178               	movf	color_calibration@HSV& (0+255),w,b
  7975   002736  26D9               	addwf	fsr2l,f,c
  7976   002738  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7977   00273A  22DA               	addwfc	fsr2h,f,c
  7978   00273C  EE10 F004          	lfsr	1,4
  7979   002740  5182               	movf	color_calibration@pink& (0+255),w,b
  7980   002742  26E1               	addwf	fsr1l,f,c
  7981   002744  5183               	movf	(color_calibration@pink+1)& (0+255),w,b
  7982   002746  22E2               	addwfc	fsr1h,f,c
  7983   002748  CFDE FFE6          	movff	postinc2,postinc1
  7984   00274C  CFDD FFE5          	movff	postdec2,postdec1
  7985   002750                     
  7986                           ; BSR set to: 0
  7987                           ;color.c: 215:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7988   002750  0E29               	movlw	41
  7989   002752  6E41               	movwf	(??_color_calibration+1)^0,c
  7990   002754  0E96               	movlw	150
  7991   002756  6E40               	movwf	??_color_calibration^0,c
  7992   002758  0E7F               	movlw	127
  7993   00275A                     u4717:
  7994   00275A  2EE8               	decfsz	wreg,f,c
  7995   00275C  D7FE               	bra	u4717
  7996   00275E  2E40               	decfsz	??_color_calibration^0,f,c
  7997   002760  D7FC               	bra	u4717
  7998   002762  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  7999   002764  D7FA               	bra	u4717
  8000   002766  0000               	nop	
  8001   002768                     
  8002                           ;color.c: 216:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8003   002768  8680               	bsf	128,3,c	;volatile
  8004   00276A  8E7C               	bsf	124,7,c	;volatile
  8005   00276C                     l206:
  8006   00276C  B48E               	btfsc	142,2,c	;volatile
  8007   00276E  EFBB  F013         	goto	u2691
  8008   002772  EFBD  F013         	goto	u2690
  8009   002776                     u2691:
  8010   002776  EFB6  F013         	goto	l206
  8011   00277A                     u2690:
  8012   00277A                     
  8013                           ;color.c: 220:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8014   00277A  9680               	bcf	128,3,c	;volatile
  8015   00277C  9E7C               	bcf	124,7,c	;volatile
  8016   00277E                     
  8017                           ;color.c: 221:     color_read(RGBC);
  8018   00277E  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8019   002782  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8020   002786  ECA6  F01F         	call	_color_read	;wreg free
  8021   00278A                     
  8022                           ;color.c: 222:     rgb_2_hsv(*RGBC, HSV);
  8023   00278A  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8024   00278E  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8025   002792  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8026   002796  0E07               	movlw	7
  8027   002798                     u2701:
  8028   002798  CFDB FFEB          	movff	plusw2,plusw0
  8029   00279C  06E8               	decf	wreg,f,c
  8030   00279E  E2FC               	bc	u2701
  8031   0027A0  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8032   0027A4  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8033   0027A8  EC36  F017         	call	_rgb_2_hsv	;wreg free
  8034   0027AC                     
  8035                           ;color.c: 223:     orange->H = HSV->H;
  8036   0027AC  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8037   0027B0  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8038   0027B4  C084  FFE1         	movff	color_calibration@orange,fsr1l
  8039   0027B8  C085  FFE2         	movff	color_calibration@orange+1,fsr1h
  8040   0027BC  CFDE FFE6          	movff	postinc2,postinc1
  8041   0027C0  CFDD FFE5          	movff	postdec2,postdec1
  8042   0027C4                     
  8043                           ;color.c: 224:     orange->S = HSV->S;
  8044   0027C4  0100               	movlb	0	; () banked
  8045   0027C6  EE20 F002          	lfsr	2,2
  8046   0027CA  5178               	movf	color_calibration@HSV& (0+255),w,b
  8047   0027CC  26D9               	addwf	fsr2l,f,c
  8048   0027CE  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8049   0027D0  22DA               	addwfc	fsr2h,f,c
  8050   0027D2  EE10 F002          	lfsr	1,2
  8051   0027D6  5184               	movf	color_calibration@orange& (0+255),w,b
  8052   0027D8  26E1               	addwf	fsr1l,f,c
  8053   0027DA  5185               	movf	(color_calibration@orange+1)& (0+255),w,b
  8054   0027DC  22E2               	addwfc	fsr1h,f,c
  8055   0027DE  CFDE FFE6          	movff	postinc2,postinc1
  8056   0027E2  CFDD FFE5          	movff	postdec2,postdec1
  8057   0027E6                     
  8058                           ; BSR set to: 0
  8059                           ;color.c: 225:     orange->V = HSV->V;
  8060   0027E6  EE20 F004          	lfsr	2,4
  8061   0027EA  5178               	movf	color_calibration@HSV& (0+255),w,b
  8062   0027EC  26D9               	addwf	fsr2l,f,c
  8063   0027EE  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8064   0027F0  22DA               	addwfc	fsr2h,f,c
  8065   0027F2  EE10 F004          	lfsr	1,4
  8066   0027F6  5184               	movf	color_calibration@orange& (0+255),w,b
  8067   0027F8  26E1               	addwf	fsr1l,f,c
  8068   0027FA  5185               	movf	(color_calibration@orange+1)& (0+255),w,b
  8069   0027FC  22E2               	addwfc	fsr1h,f,c
  8070   0027FE  CFDE FFE6          	movff	postinc2,postinc1
  8071   002802  CFDD FFE5          	movff	postdec2,postdec1
  8072   002806                     
  8073                           ; BSR set to: 0
  8074                           ;color.c: 227:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8075   002806  0E29               	movlw	41
  8076   002808  6E41               	movwf	(??_color_calibration+1)^0,c
  8077   00280A  0E96               	movlw	150
  8078   00280C  6E40               	movwf	??_color_calibration^0,c
  8079   00280E  0E7F               	movlw	127
  8080   002810                     u4727:
  8081   002810  2EE8               	decfsz	wreg,f,c
  8082   002812  D7FE               	bra	u4727
  8083   002814  2E40               	decfsz	??_color_calibration^0,f,c
  8084   002816  D7FC               	bra	u4727
  8085   002818  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8086   00281A  D7FA               	bra	u4727
  8087   00281C  0000               	nop	
  8088   00281E                     
  8089                           ;color.c: 228:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8090   00281E  8680               	bsf	128,3,c	;volatile
  8091   002820  8E7C               	bsf	124,7,c	;volatile
  8092   002822                     l209:
  8093   002822  B48E               	btfsc	142,2,c	;volatile
  8094   002824  EF16  F014         	goto	u2711
  8095   002828  EF18  F014         	goto	u2710
  8096   00282C                     u2711:
  8097   00282C  EF11  F014         	goto	l209
  8098   002830                     u2710:
  8099   002830                     
  8100                           ;color.c: 232:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8101   002830  9680               	bcf	128,3,c	;volatile
  8102   002832  9E7C               	bcf	124,7,c	;volatile
  8103   002834                     
  8104                           ;color.c: 233:     color_read(RGBC);
  8105   002834  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8106   002838  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8107   00283C  ECA6  F01F         	call	_color_read	;wreg free
  8108   002840                     
  8109                           ;color.c: 234:     rgb_2_hsv(*RGBC, HSV);
  8110   002840  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8111   002844  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8112   002848  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8113   00284C  0E07               	movlw	7
  8114   00284E                     u2721:
  8115   00284E  CFDB FFEB          	movff	plusw2,plusw0
  8116   002852  06E8               	decf	wreg,f,c
  8117   002854  E2FC               	bc	u2721
  8118   002856  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8119   00285A  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8120   00285E  EC36  F017         	call	_rgb_2_hsv	;wreg free
  8121   002862                     
  8122                           ;color.c: 235:     lightblue->H = HSV->H;
  8123   002862  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8124   002866  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8125   00286A  C086  FFE1         	movff	color_calibration@lightblue,fsr1l
  8126   00286E  C087  FFE2         	movff	color_calibration@lightblue+1,fsr1h
  8127   002872  CFDE FFE6          	movff	postinc2,postinc1
  8128   002876  CFDD FFE5          	movff	postdec2,postdec1
  8129   00287A                     
  8130                           ;color.c: 236:     lightblue->S = HSV->S;
  8131   00287A  0100               	movlb	0	; () banked
  8132   00287C  EE20 F002          	lfsr	2,2
  8133   002880  5178               	movf	color_calibration@HSV& (0+255),w,b
  8134   002882  26D9               	addwf	fsr2l,f,c
  8135   002884  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8136   002886  22DA               	addwfc	fsr2h,f,c
  8137   002888  EE10 F002          	lfsr	1,2
  8138   00288C  5186               	movf	color_calibration@lightblue& (0+255),w,b
  8139   00288E  26E1               	addwf	fsr1l,f,c
  8140   002890  5187               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  8141   002892  22E2               	addwfc	fsr1h,f,c
  8142   002894  CFDE FFE6          	movff	postinc2,postinc1
  8143   002898  CFDD FFE5          	movff	postdec2,postdec1
  8144   00289C                     
  8145                           ; BSR set to: 0
  8146                           ;color.c: 237:     lightblue->V = HSV->V;
  8147   00289C  EE20 F004          	lfsr	2,4
  8148   0028A0  5178               	movf	color_calibration@HSV& (0+255),w,b
  8149   0028A2  26D9               	addwf	fsr2l,f,c
  8150   0028A4  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8151   0028A6  22DA               	addwfc	fsr2h,f,c
  8152   0028A8  EE10 F004          	lfsr	1,4
  8153   0028AC  5186               	movf	color_calibration@lightblue& (0+255),w,b
  8154   0028AE  26E1               	addwf	fsr1l,f,c
  8155   0028B0  5187               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  8156   0028B2  22E2               	addwfc	fsr1h,f,c
  8157   0028B4  CFDE FFE6          	movff	postinc2,postinc1
  8158   0028B8  CFDD FFE5          	movff	postdec2,postdec1
  8159   0028BC                     
  8160                           ; BSR set to: 0
  8161                           ;color.c: 239:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8162   0028BC  0E29               	movlw	41
  8163   0028BE  6E41               	movwf	(??_color_calibration+1)^0,c
  8164   0028C0  0E96               	movlw	150
  8165   0028C2  6E40               	movwf	??_color_calibration^0,c
  8166   0028C4  0E7F               	movlw	127
  8167   0028C6                     u4737:
  8168   0028C6  2EE8               	decfsz	wreg,f,c
  8169   0028C8  D7FE               	bra	u4737
  8170   0028CA  2E40               	decfsz	??_color_calibration^0,f,c
  8171   0028CC  D7FC               	bra	u4737
  8172   0028CE  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8173   0028D0  D7FA               	bra	u4737
  8174   0028D2  0000               	nop	
  8175   0028D4                     
  8176                           ;color.c: 240:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8177   0028D4  8680               	bsf	128,3,c	;volatile
  8178   0028D6  8E7C               	bsf	124,7,c	;volatile
  8179   0028D8                     l212:
  8180   0028D8  B48E               	btfsc	142,2,c	;volatile
  8181   0028DA  EF71  F014         	goto	u2731
  8182   0028DE  EF73  F014         	goto	u2730
  8183   0028E2                     u2731:
  8184   0028E2  EF6C  F014         	goto	l212
  8185   0028E6                     u2730:
  8186   0028E6                     
  8187                           ;color.c: 244:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8188   0028E6  9680               	bcf	128,3,c	;volatile
  8189   0028E8  9E7C               	bcf	124,7,c	;volatile
  8190   0028EA                     
  8191                           ;color.c: 245:     color_read(RGBC);
  8192   0028EA  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8193   0028EE  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8194   0028F2  ECA6  F01F         	call	_color_read	;wreg free
  8195   0028F6                     
  8196                           ;color.c: 246:     rgb_2_hsv(*RGBC, HSV);
  8197   0028F6  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8198   0028FA  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8199   0028FE  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8200   002902  0E07               	movlw	7
  8201   002904                     u2741:
  8202   002904  CFDB FFEB          	movff	plusw2,plusw0
  8203   002908  06E8               	decf	wreg,f,c
  8204   00290A  E2FC               	bc	u2741
  8205   00290C  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8206   002910  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8207   002914  EC36  F017         	call	_rgb_2_hsv	;wreg free
  8208   002918                     
  8209                           ;color.c: 247:     white->H = HSV->H;
  8210   002918  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8211   00291C  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8212   002920  C088  FFE1         	movff	color_calibration@white,fsr1l
  8213   002924  C089  FFE2         	movff	color_calibration@white+1,fsr1h
  8214   002928  CFDE FFE6          	movff	postinc2,postinc1
  8215   00292C  CFDD FFE5          	movff	postdec2,postdec1
  8216   002930                     
  8217                           ;color.c: 248:     white->S = HSV->S;
  8218   002930  0100               	movlb	0	; () banked
  8219   002932  EE20 F002          	lfsr	2,2
  8220   002936  5178               	movf	color_calibration@HSV& (0+255),w,b
  8221   002938  26D9               	addwf	fsr2l,f,c
  8222   00293A  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8223   00293C  22DA               	addwfc	fsr2h,f,c
  8224   00293E  EE10 F002          	lfsr	1,2
  8225   002942  5188               	movf	color_calibration@white& (0+255),w,b
  8226   002944  26E1               	addwf	fsr1l,f,c
  8227   002946  5189               	movf	(color_calibration@white+1)& (0+255),w,b
  8228   002948  22E2               	addwfc	fsr1h,f,c
  8229   00294A  CFDE FFE6          	movff	postinc2,postinc1
  8230   00294E  CFDD FFE5          	movff	postdec2,postdec1
  8231   002952                     
  8232                           ; BSR set to: 0
  8233                           ;color.c: 249:     white->V = HSV->V;
  8234   002952  EE20 F004          	lfsr	2,4
  8235   002956  5178               	movf	color_calibration@HSV& (0+255),w,b
  8236   002958  26D9               	addwf	fsr2l,f,c
  8237   00295A  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8238   00295C  22DA               	addwfc	fsr2h,f,c
  8239   00295E  EE10 F004          	lfsr	1,4
  8240   002962  5188               	movf	color_calibration@white& (0+255),w,b
  8241   002964  26E1               	addwf	fsr1l,f,c
  8242   002966  5189               	movf	(color_calibration@white+1)& (0+255),w,b
  8243   002968  22E2               	addwfc	fsr1h,f,c
  8244   00296A  CFDE FFE6          	movff	postinc2,postinc1
  8245   00296E  CFDD FFE5          	movff	postdec2,postdec1
  8246   002972                     
  8247                           ; BSR set to: 0
  8248                           ;color.c: 251:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8249   002972  0E29               	movlw	41
  8250   002974  6E41               	movwf	(??_color_calibration+1)^0,c
  8251   002976  0E96               	movlw	150
  8252   002978  6E40               	movwf	??_color_calibration^0,c
  8253   00297A  0E7F               	movlw	127
  8254   00297C                     u4747:
  8255   00297C  2EE8               	decfsz	wreg,f,c
  8256   00297E  D7FE               	bra	u4747
  8257   002980  2E40               	decfsz	??_color_calibration^0,f,c
  8258   002982  D7FC               	bra	u4747
  8259   002984  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8260   002986  D7FA               	bra	u4747
  8261   002988  0000               	nop	
  8262   00298A                     
  8263                           ;color.c: 252:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8264   00298A  8680               	bsf	128,3,c	;volatile
  8265   00298C  8E7C               	bsf	124,7,c	;volatile
  8266   00298E  0012               	return		;funcret
  8267   002990                     __end_of_color_calibration:
  8268                           	callstack 0
  8269                           
  8270 ;; *************** function _white_Light *****************
  8271 ;; Defined at:
  8272 ;;		line 62 in file "color.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;  state           1    wreg     unsigned char 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;  state           1   15[COMRAM] unsigned char 
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      void 
  8279 ;; Registers used:
  8280 ;;		wreg, status,2
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8290 ;;Total ram usage:        1 bytes
  8291 ;; Hardware stack levels used: 1
  8292 ;; Hardware stack levels required when called: 6
  8293 ;; This function calls:
  8294 ;;		Nothing
  8295 ;; This function is called by:
  8296 ;;		_main
  8297 ;;		_color_calibration
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text19
  8302   00523C                     __ptext19:
  8303                           	callstack 0
  8304   00523C                     _white_Light:
  8305                           	callstack 24
  8306                           
  8307                           ;incstack = 0
  8308                           ;white_Light@state stored from wreg
  8309   00523C  6E10               	movwf	white_Light@state^0,c
  8310   00523E                     
  8311                           ;color.c: 62: void white_Light(char state);color.c: 63: {;color.c: 64:     if (state){
  8312   00523E  5010               	movf	white_Light@state^0,w,c
  8313   005240  B4D8               	btfsc	status,2,c
  8314   005242  EF25  F029         	goto	u2241
  8315   005246  EF27  F029         	goto	u2240
  8316   00524A                     u2241:
  8317   00524A  EF2C  F029         	goto	l155
  8318   00524E                     u2240:
  8319   00524E                     
  8320                           ;color.c: 65:         LATGbits.LATG0 = 1;
  8321   00524E  807F               	bsf	127,0,c	;volatile
  8322                           
  8323                           ;color.c: 66:         LATEbits.LATE7 = 1;
  8324   005250  8E7D               	bsf	125,7,c	;volatile
  8325                           
  8326                           ;color.c: 67:         LATAbits.LATA3 = 1;
  8327   005252  8679               	bsf	121,3,c	;volatile
  8328                           
  8329                           ;color.c: 68:     }
  8330   005254  EF2F  F029         	goto	l157
  8331   005258                     l155:
  8332                           
  8333                           ;color.c: 70:         LATGbits.LATG0 = 0;
  8334   005258  907F               	bcf	127,0,c	;volatile
  8335                           
  8336                           ;color.c: 71:         LATEbits.LATE7 = 0;
  8337   00525A  9E7D               	bcf	125,7,c	;volatile
  8338                           
  8339                           ;color.c: 72:         LATAbits.LATA3 = 0;
  8340   00525C  9679               	bcf	121,3,c	;volatile
  8341   00525E                     l157:
  8342   00525E  0012               	return		;funcret
  8343   005260                     __end_of_white_Light:
  8344                           	callstack 0
  8345                           
  8346 ;; *************** function _rgb_2_hsv *****************
  8347 ;; Defined at:
  8348 ;;		line 265 in file "color.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;  RGBC            8   41[COMRAM] struct RGBC_val
  8351 ;;  HSV             2   49[COMRAM] PTR struct HSV_val
  8352 ;;		 -> main@HSV(6), 
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;  diff            4   14[BANK0 ] unsigned long 
  8355 ;;  b               2   20[BANK0 ] unsigned int 
  8356 ;;  g               2   18[BANK0 ] unsigned int 
  8357 ;;  cmax            2   12[BANK0 ] unsigned int 
  8358 ;;  r               2   10[BANK0 ] unsigned int 
  8359 ;;  cmin            2    4[BANK0 ] unsigned int 
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      void 
  8362 ;; Registers used:
  8363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8369 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8370 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8371 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8372 ;;      Totals:        22      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8373 ;;Total ram usage:       44 bytes
  8374 ;; Hardware stack levels used: 1
  8375 ;; Hardware stack levels required when called: 7
  8376 ;; This function calls:
  8377 ;;		___aldiv
  8378 ;;		___lldiv
  8379 ;;		___lmul
  8380 ;;		_max
  8381 ;;		_min
  8382 ;; This function is called by:
  8383 ;;		_main
  8384 ;;		_color_calibration
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text20
  8389   002E6C                     __ptext20:
  8390                           	callstack 0
  8391   002E6C                     _rgb_2_hsv:
  8392                           	callstack 23
  8393   002E6C                     
  8394                           ;color.c: 271:     unsigned int r = (unsigned int)(RGBC.R*10000L/1900);
  8395   002E6C  C02A  F010         	movff	rgb_2_hsv@RGBC,___lmul@multiplier
  8396   002E70  C02B  F011         	movff	rgb_2_hsv@RGBC+1,___lmul@multiplier+1
  8397   002E74  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8398   002E76  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8399   002E78  0E10               	movlw	16
  8400   002E7A  6E14               	movwf	___lmul@multiplicand^0,c
  8401   002E7C  0E27               	movlw	39
  8402   002E7E  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8403   002E80  0E00               	movlw	0
  8404   002E82  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8405   002E84  0E00               	movlw	0
  8406   002E86  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8407   002E88  ECAF  F027         	call	___lmul	;wreg free
  8408   002E8C  C010  F01C         	movff	?___lmul,___aldiv@dividend
  8409   002E90  C011  F01D         	movff	?___lmul+1,___aldiv@dividend+1
  8410   002E94  C012  F01E         	movff	?___lmul+2,___aldiv@dividend+2
  8411   002E98  C013  F01F         	movff	?___lmul+3,___aldiv@dividend+3
  8412   002E9C  0E6C               	movlw	108
  8413   002E9E  6E20               	movwf	___aldiv@divisor^0,c
  8414   002EA0  0E07               	movlw	7
  8415   002EA2  6E21               	movwf	(___aldiv@divisor+1)^0,c
  8416   002EA4  0E00               	movlw	0
  8417   002EA6  6E22               	movwf	(___aldiv@divisor+2)^0,c
  8418   002EA8  0E00               	movlw	0
  8419   002EAA  6E23               	movwf	(___aldiv@divisor+3)^0,c
  8420   002EAC  EC1C  F024         	call	___aldiv	;wreg free
  8421   002EB0  C01C  F06A         	movff	?___aldiv,rgb_2_hsv@r
  8422   002EB4  C01D  F06B         	movff	?___aldiv+1,rgb_2_hsv@r+1
  8423                           
  8424                           ;color.c: 272:     unsigned int g = (unsigned int)(RGBC.G*10000L/1400);
  8425   002EB8  C02C  F010         	movff	rgb_2_hsv@RGBC+2,___lmul@multiplier
  8426   002EBC  C02D  F011         	movff	rgb_2_hsv@RGBC+3,___lmul@multiplier+1
  8427   002EC0  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8428   002EC2  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8429   002EC4  0E10               	movlw	16
  8430   002EC6  6E14               	movwf	___lmul@multiplicand^0,c
  8431   002EC8  0E27               	movlw	39
  8432   002ECA  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8433   002ECC  0E00               	movlw	0
  8434   002ECE  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8435   002ED0  0E00               	movlw	0
  8436   002ED2  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8437   002ED4  ECAF  F027         	call	___lmul	;wreg free
  8438   002ED8  C010  F01C         	movff	?___lmul,___aldiv@dividend
  8439   002EDC  C011  F01D         	movff	?___lmul+1,___aldiv@dividend+1
  8440   002EE0  C012  F01E         	movff	?___lmul+2,___aldiv@dividend+2
  8441   002EE4  C013  F01F         	movff	?___lmul+3,___aldiv@dividend+3
  8442   002EE8  0E78               	movlw	120
  8443   002EEA  6E20               	movwf	___aldiv@divisor^0,c
  8444   002EEC  0E05               	movlw	5
  8445   002EEE  6E21               	movwf	(___aldiv@divisor+1)^0,c
  8446   002EF0  0E00               	movlw	0
  8447   002EF2  6E22               	movwf	(___aldiv@divisor+2)^0,c
  8448   002EF4  0E00               	movlw	0
  8449   002EF6  6E23               	movwf	(___aldiv@divisor+3)^0,c
  8450   002EF8  EC1C  F024         	call	___aldiv	;wreg free
  8451   002EFC  C01C  F072         	movff	?___aldiv,rgb_2_hsv@g
  8452   002F00  C01D  F073         	movff	?___aldiv+1,rgb_2_hsv@g+1
  8453                           
  8454                           ;color.c: 273:     unsigned int b = (unsigned int)(RGBC.B*10000L/1600);
  8455   002F04  C02E  F010         	movff	rgb_2_hsv@RGBC+4,___lmul@multiplier
  8456   002F08  C02F  F011         	movff	rgb_2_hsv@RGBC+5,___lmul@multiplier+1
  8457   002F0C  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8458   002F0E  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8459   002F10  0E10               	movlw	16
  8460   002F12  6E14               	movwf	___lmul@multiplicand^0,c
  8461   002F14  0E27               	movlw	39
  8462   002F16  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8463   002F18  0E00               	movlw	0
  8464   002F1A  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8465   002F1C  0E00               	movlw	0
  8466   002F1E  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8467   002F20  ECAF  F027         	call	___lmul	;wreg free
  8468   002F24  C010  F01C         	movff	?___lmul,___aldiv@dividend
  8469   002F28  C011  F01D         	movff	?___lmul+1,___aldiv@dividend+1
  8470   002F2C  C012  F01E         	movff	?___lmul+2,___aldiv@dividend+2
  8471   002F30  C013  F01F         	movff	?___lmul+3,___aldiv@dividend+3
  8472   002F34  0E40               	movlw	64
  8473   002F36  6E20               	movwf	___aldiv@divisor^0,c
  8474   002F38  0E06               	movlw	6
  8475   002F3A  6E21               	movwf	(___aldiv@divisor+1)^0,c
  8476   002F3C  0E00               	movlw	0
  8477   002F3E  6E22               	movwf	(___aldiv@divisor+2)^0,c
  8478   002F40  0E00               	movlw	0
  8479   002F42  6E23               	movwf	(___aldiv@divisor+3)^0,c
  8480   002F44  EC1C  F024         	call	___aldiv	;wreg free
  8481   002F48  C01C  F074         	movff	?___aldiv,rgb_2_hsv@b
  8482   002F4C  C01D  F075         	movff	?___aldiv+1,rgb_2_hsv@b+1
  8483                           
  8484                           ;color.c: 276:     unsigned int cmax = max(r, max(g, b));
  8485   002F50  C072  F010         	movff	rgb_2_hsv@g,max@a
  8486   002F54  C073  F011         	movff	rgb_2_hsv@g+1,max@a+1
  8487   002F58  C074  F012         	movff	rgb_2_hsv@b,max@b
  8488   002F5C  C075  F013         	movff	rgb_2_hsv@b+1,max@b+1
  8489   002F60  ECA4  F028         	call	_max	;wreg free
  8490   002F64  C010  F066         	movff	?_max,_rgb_2_hsv$3556
  8491   002F68  C011  F067         	movff	?_max+1,_rgb_2_hsv$3556+1
  8492                           
  8493                           ;color.c: 276:     unsigned int cmax = max(r, max(g, b));
  8494   002F6C  C06A  F010         	movff	rgb_2_hsv@r,max@a
  8495   002F70  C06B  F011         	movff	rgb_2_hsv@r+1,max@a+1
  8496   002F74  C066  F012         	movff	_rgb_2_hsv$3556,max@b
  8497   002F78  C067  F013         	movff	_rgb_2_hsv$3556+1,max@b+1
  8498   002F7C  ECA4  F028         	call	_max	;wreg free
  8499   002F80  C010  F06C         	movff	?_max,rgb_2_hsv@cmax
  8500   002F84  C011  F06D         	movff	?_max+1,rgb_2_hsv@cmax+1
  8501                           
  8502                           ;color.c: 277:     unsigned int cmin = min(r, min(g, b));
  8503   002F88  C072  F010         	movff	rgb_2_hsv@g,min@a
  8504   002F8C  C073  F011         	movff	rgb_2_hsv@g+1,min@a+1
  8505   002F90  C074  F012         	movff	rgb_2_hsv@b,min@b
  8506   002F94  C075  F013         	movff	rgb_2_hsv@b+1,min@b+1
  8507   002F98  EC8E  F028         	call	_min	;wreg free
  8508   002F9C  C010  F068         	movff	?_min,_rgb_2_hsv$3557
  8509   002FA0  C011  F069         	movff	?_min+1,_rgb_2_hsv$3557+1
  8510                           
  8511                           ;color.c: 277:     unsigned int cmin = min(r, min(g, b));
  8512   002FA4  C06A  F010         	movff	rgb_2_hsv@r,min@a
  8513   002FA8  C06B  F011         	movff	rgb_2_hsv@r+1,min@a+1
  8514   002FAC  C068  F012         	movff	_rgb_2_hsv$3557,min@b
  8515   002FB0  C069  F013         	movff	_rgb_2_hsv$3557+1,min@b+1
  8516   002FB4  EC8E  F028         	call	_min	;wreg free
  8517   002FB8  C010  F064         	movff	?_min,rgb_2_hsv@cmin
  8518   002FBC  C011  F065         	movff	?_min+1,rgb_2_hsv@cmin+1
  8519   002FC0                     
  8520                           ;color.c: 278:     unsigned long diff = cmax - cmin;
  8521   002FC0  0100               	movlb	0	; () banked
  8522   002FC2  5164               	movf	rgb_2_hsv@cmin& (0+255),w,b
  8523   002FC4  5D6C               	subwf	rgb_2_hsv@cmax& (0+255),w,b
  8524   002FC6  6E34               	movwf	??_rgb_2_hsv^0,c
  8525   002FC8  5165               	movf	(rgb_2_hsv@cmin+1)& (0+255),w,b
  8526   002FCA  596D               	subwfb	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8527   002FCC  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8528   002FCE  C034  F06E         	movff	??_rgb_2_hsv,rgb_2_hsv@diff
  8529   002FD2  C035  F06F         	movff	??_rgb_2_hsv+1,rgb_2_hsv@diff+1
  8530   002FD6  6B70               	clrf	(rgb_2_hsv@diff+2)& (0+255),b
  8531   002FD8  6B71               	clrf	(rgb_2_hsv@diff+3)& (0+255),b
  8532   002FDA                     
  8533                           ; BSR set to: 0
  8534                           ;color.c: 281:     if (cmax == r){
  8535   002FDA  516A               	movf	rgb_2_hsv@r& (0+255),w,b
  8536   002FDC  196C               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8537   002FDE  E107               	bnz	u2251
  8538   002FE0  516B               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8539   002FE2  196D               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8540   002FE4  A4D8               	btfss	status,2,c
  8541   002FE6  EFF7  F017         	goto	u2251
  8542   002FEA  EFF9  F017         	goto	u2250
  8543   002FEE                     u2251:
  8544   002FEE  EFA0  F018         	goto	l3439
  8545   002FF2                     u2250:
  8546   002FF2                     
  8547                           ; BSR set to: 0
  8548                           ;color.c: 282:         if (g > b){HSV->H = (unsigned int)((g-b)*6000L/diff);}
  8549   002FF2  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  8550   002FF4  5D74               	subwf	rgb_2_hsv@b& (0+255),w,b
  8551   002FF6  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8552   002FF8  5975               	subwfb	(rgb_2_hsv@b+1)& (0+255),w,b
  8553   002FFA  B0D8               	btfsc	status,0,c
  8554   002FFC  EF02  F018         	goto	u2261
  8555   003000  EF04  F018         	goto	u2260
  8556   003004                     u2261:
  8557   003004  EF36  F018         	goto	l3433
  8558   003008                     u2260:
  8559   003008                     
  8560                           ; BSR set to: 0
  8561   003008  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8562   00300A  5D72               	subwf	rgb_2_hsv@g& (0+255),w,b
  8563   00300C  6E34               	movwf	??_rgb_2_hsv^0,c
  8564   00300E  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8565   003010  5973               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8566   003012  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8567   003014  C034  F010         	movff	??_rgb_2_hsv,___lmul@multiplier
  8568   003018  C035  F011         	movff	??_rgb_2_hsv+1,___lmul@multiplier+1
  8569   00301C  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8570   00301E  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8571   003020  0E70               	movlw	112
  8572   003022  6E14               	movwf	___lmul@multiplicand^0,c
  8573   003024  0E17               	movlw	23
  8574   003026  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8575   003028  0E00               	movlw	0
  8576   00302A  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8577   00302C  0E00               	movlw	0
  8578   00302E  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8579   003030  ECAF  F027         	call	___lmul	;wreg free
  8580   003034  C010  F01C         	movff	?___lmul,___lldiv@dividend
  8581   003038  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  8582   00303C  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  8583   003040  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  8584   003044  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8585   003048  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8586   00304C  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8587   003050  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8588   003054  ECA1  F026         	call	___lldiv	;wreg free
  8589   003058  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8590   00305C  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8591   003060  C01C  FFDE         	movff	?___lldiv,postinc2
  8592   003064  C01D  FFDD         	movff	?___lldiv+1,postdec2
  8593   003068  EF58  F019         	goto	l232
  8594   00306C                     l3433:
  8595                           
  8596                           ; BSR set to: 0
  8597   00306C  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8598   00306E  5D72               	subwf	rgb_2_hsv@g& (0+255),w,b
  8599   003070  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8600   003072  5973               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8601   003074  B0D8               	btfsc	status,0,c
  8602   003076  EF3F  F018         	goto	u2271
  8603   00307A  EF41  F018         	goto	u2270
  8604   00307E                     u2271:
  8605   00307E  EF58  F019         	goto	l232
  8606   003082                     u2270:
  8607   003082                     
  8608                           ; BSR set to: 0
  8609   003082  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8610   003084  6E34               	movwf	??_rgb_2_hsv^0,c
  8611   003086  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8612   003088  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8613   00308A  6A36               	clrf	(??_rgb_2_hsv+2)^0,c
  8614   00308C  6A37               	clrf	(??_rgb_2_hsv+3)^0,c
  8615   00308E  C06E  F010         	movff	rgb_2_hsv@diff,___lmul@multiplier
  8616   003092  C06F  F011         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  8617   003096  C070  F012         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  8618   00309A  C071  F013         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  8619   00309E  0E06               	movlw	6
  8620   0030A0  6E14               	movwf	___lmul@multiplicand^0,c
  8621   0030A2  0E00               	movlw	0
  8622   0030A4  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8623   0030A6  0E00               	movlw	0
  8624   0030A8  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8625   0030AA  0E00               	movlw	0
  8626   0030AC  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8627   0030AE  ECAF  F027         	call	___lmul	;wreg free
  8628   0030B2  0100               	movlb	0	; () banked
  8629   0030B4  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  8630   0030B6  2410               	addwf	?___lmul^0,w,c
  8631   0030B8  6E38               	movwf	(??_rgb_2_hsv+4)^0,c
  8632   0030BA  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8633   0030BC  2011               	addwfc	(?___lmul+1)^0,w,c
  8634   0030BE  6E39               	movwf	(??_rgb_2_hsv+5)^0,c
  8635   0030C0  0E00               	movlw	0
  8636   0030C2  2012               	addwfc	(?___lmul+2)^0,w,c
  8637   0030C4  6E3A               	movwf	(??_rgb_2_hsv+6)^0,c
  8638   0030C6  0E00               	movlw	0
  8639   0030C8  2013               	addwfc	(?___lmul+3)^0,w,c
  8640   0030CA  6E3B               	movwf	(??_rgb_2_hsv+7)^0,c
  8641   0030CC  5034               	movf	??_rgb_2_hsv^0,w,c
  8642   0030CE  5C38               	subwf	(??_rgb_2_hsv+4)^0,w,c
  8643   0030D0  6F60               	movwf	_rgb_2_hsv$3558& (0+255),b
  8644   0030D2  5035               	movf	(??_rgb_2_hsv+1)^0,w,c
  8645   0030D4  5839               	subwfb	(??_rgb_2_hsv+5)^0,w,c
  8646   0030D6  6F61               	movwf	(_rgb_2_hsv$3558+1)& (0+255),b
  8647   0030D8  5036               	movf	(??_rgb_2_hsv+2)^0,w,c
  8648   0030DA  583A               	subwfb	(??_rgb_2_hsv+6)^0,w,c
  8649   0030DC  6F62               	movwf	(_rgb_2_hsv$3558+2)& (0+255),b
  8650   0030DE  5037               	movf	(??_rgb_2_hsv+3)^0,w,c
  8651   0030E0  583B               	subwfb	(??_rgb_2_hsv+7)^0,w,c
  8652   0030E2  6F63               	movwf	(_rgb_2_hsv$3558+3)& (0+255),b
  8653   0030E4                     
  8654                           ; BSR set to: 0
  8655   0030E4  C060  F010         	movff	_rgb_2_hsv$3558,___lmul@multiplier
  8656   0030E8  C061  F011         	movff	_rgb_2_hsv$3558+1,___lmul@multiplier+1
  8657   0030EC  C062  F012         	movff	_rgb_2_hsv$3558+2,___lmul@multiplier+2
  8658   0030F0  C063  F013         	movff	_rgb_2_hsv$3558+3,___lmul@multiplier+3
  8659   0030F4  0E70               	movlw	112
  8660   0030F6  6E14               	movwf	___lmul@multiplicand^0,c
  8661   0030F8  0E17               	movlw	23
  8662   0030FA  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8663   0030FC  0E00               	movlw	0
  8664   0030FE  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8665   003100  0E00               	movlw	0
  8666   003102  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8667   003104  ECAF  F027         	call	___lmul	;wreg free
  8668   003108  C010  F01C         	movff	?___lmul,___lldiv@dividend
  8669   00310C  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  8670   003110  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  8671   003114  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  8672   003118  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8673   00311C  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8674   003120  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8675   003124  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8676   003128  ECA1  F026         	call	___lldiv	;wreg free
  8677   00312C  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8678   003130  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8679   003134  C01C  FFDE         	movff	?___lldiv,postinc2
  8680   003138  C01D  FFDD         	movff	?___lldiv+1,postdec2
  8681   00313C  EF58  F019         	goto	l232
  8682   003140                     l3439:
  8683                           
  8684                           ; BSR set to: 0
  8685   003140  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  8686   003142  196C               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8687   003144  E107               	bnz	u2281
  8688   003146  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8689   003148  196D               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8690   00314A  A4D8               	btfss	status,2,c
  8691   00314C  EFAA  F018         	goto	u2281
  8692   003150  EFAC  F018         	goto	u2280
  8693   003154                     u2281:
  8694   003154  EFF9  F018         	goto	l3443
  8695   003158                     u2280:
  8696   003158                     
  8697                           ; BSR set to: 0
  8698   003158  516A               	movf	rgb_2_hsv@r& (0+255),w,b
  8699   00315A  6E34               	movwf	??_rgb_2_hsv^0,c
  8700   00315C  516B               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8701   00315E  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8702   003160  6A36               	clrf	(??_rgb_2_hsv+2)^0,c
  8703   003162  6A37               	clrf	(??_rgb_2_hsv+3)^0,c
  8704   003164  90D8               	bcf	status,0,c
  8705   003166  356E               	rlcf	rgb_2_hsv@diff& (0+255),w,b
  8706   003168  6E38               	movwf	(??_rgb_2_hsv+4)^0,c
  8707   00316A  356F               	rlcf	(rgb_2_hsv@diff+1)& (0+255),w,b
  8708   00316C  6E39               	movwf	(??_rgb_2_hsv+5)^0,c
  8709   00316E  3570               	rlcf	(rgb_2_hsv@diff+2)& (0+255),w,b
  8710   003170  6E3A               	movwf	(??_rgb_2_hsv+6)^0,c
  8711   003172  3571               	rlcf	(rgb_2_hsv@diff+3)& (0+255),w,b
  8712   003174  6E3B               	movwf	(??_rgb_2_hsv+7)^0,c
  8713   003176  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8714   003178  2438               	addwf	(??_rgb_2_hsv+4)^0,w,c
  8715   00317A  6E3C               	movwf	(??_rgb_2_hsv+8)^0,c
  8716   00317C  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8717   00317E  2039               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  8718   003180  6E3D               	movwf	(??_rgb_2_hsv+9)^0,c
  8719   003182  0E00               	movlw	0
  8720   003184  203A               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  8721   003186  6E3E               	movwf	(??_rgb_2_hsv+10)^0,c
  8722   003188  0E00               	movlw	0
  8723   00318A  203B               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  8724   00318C  6E3F               	movwf	(??_rgb_2_hsv+11)^0,c
  8725   00318E  5034               	movf	??_rgb_2_hsv^0,w,c
  8726   003190  5C3C               	subwf	(??_rgb_2_hsv+8)^0,w,c
  8727   003192  6E10               	movwf	___lmul@multiplier^0,c
  8728   003194  5035               	movf	(??_rgb_2_hsv+1)^0,w,c
  8729   003196  583D               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  8730   003198  6E11               	movwf	(___lmul@multiplier+1)^0,c
  8731   00319A  5036               	movf	(??_rgb_2_hsv+2)^0,w,c
  8732   00319C  583E               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  8733   00319E  6E12               	movwf	(___lmul@multiplier+2)^0,c
  8734   0031A0  5037               	movf	(??_rgb_2_hsv+3)^0,w,c
  8735   0031A2  583F               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  8736   0031A4  6E13               	movwf	(___lmul@multiplier+3)^0,c
  8737   0031A6  0E70               	movlw	112
  8738   0031A8  6E14               	movwf	___lmul@multiplicand^0,c
  8739   0031AA  0E17               	movlw	23
  8740   0031AC  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8741   0031AE  0E00               	movlw	0
  8742   0031B0  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8743   0031B2  0E00               	movlw	0
  8744   0031B4  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8745   0031B6  ECAF  F027         	call	___lmul	;wreg free
  8746   0031BA  C010  F01C         	movff	?___lmul,___lldiv@dividend
  8747   0031BE  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  8748   0031C2  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  8749   0031C6  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  8750   0031CA  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8751   0031CE  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8752   0031D2  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8753   0031D6  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8754   0031DA  ECA1  F026         	call	___lldiv	;wreg free
  8755   0031DE  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8756   0031E2  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8757   0031E6  C01C  FFDE         	movff	?___lldiv,postinc2
  8758   0031EA  C01D  FFDD         	movff	?___lldiv+1,postdec2
  8759   0031EE  EF58  F019         	goto	l232
  8760   0031F2                     l3443:
  8761                           
  8762                           ; BSR set to: 0
  8763   0031F2  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8764   0031F4  196C               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8765   0031F6  E107               	bnz	u2291
  8766   0031F8  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8767   0031FA  196D               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8768   0031FC  A4D8               	btfss	status,2,c
  8769   0031FE  EF03  F019         	goto	u2291
  8770   003202  EF05  F019         	goto	u2290
  8771   003206                     u2291:
  8772   003206  EF58  F019         	goto	l232
  8773   00320A                     u2290:
  8774   00320A                     
  8775                           ; BSR set to: 0
  8776   00320A  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  8777   00320C  6E34               	movwf	??_rgb_2_hsv^0,c
  8778   00320E  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8779   003210  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8780   003212  6A36               	clrf	(??_rgb_2_hsv+2)^0,c
  8781   003214  6A37               	clrf	(??_rgb_2_hsv+3)^0,c
  8782   003216  C06E  F038         	movff	rgb_2_hsv@diff,??_rgb_2_hsv+4
  8783   00321A  C06F  F039         	movff	rgb_2_hsv@diff+1,??_rgb_2_hsv+5
  8784   00321E  C070  F03A         	movff	rgb_2_hsv@diff+2,??_rgb_2_hsv+6
  8785   003222  C071  F03B         	movff	rgb_2_hsv@diff+3,??_rgb_2_hsv+7
  8786   003226  0E02               	movlw	2
  8787   003228                     u2305:
  8788   003228  90D8               	bcf	status,0,c
  8789   00322A  3638               	rlcf	(??_rgb_2_hsv+4)^0,f,c
  8790   00322C  3639               	rlcf	(??_rgb_2_hsv+5)^0,f,c
  8791   00322E  363A               	rlcf	(??_rgb_2_hsv+6)^0,f,c
  8792   003230  363B               	rlcf	(??_rgb_2_hsv+7)^0,f,c
  8793   003232  2EE8               	decfsz	wreg,f,c
  8794   003234  EF14  F019         	goto	u2305
  8795   003238  516A               	movf	rgb_2_hsv@r& (0+255),w,b
  8796   00323A  2438               	addwf	(??_rgb_2_hsv+4)^0,w,c
  8797   00323C  6E3C               	movwf	(??_rgb_2_hsv+8)^0,c
  8798   00323E  516B               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8799   003240  2039               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  8800   003242  6E3D               	movwf	(??_rgb_2_hsv+9)^0,c
  8801   003244  0E00               	movlw	0
  8802   003246  203A               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  8803   003248  6E3E               	movwf	(??_rgb_2_hsv+10)^0,c
  8804   00324A  0E00               	movlw	0
  8805   00324C  203B               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  8806   00324E  6E3F               	movwf	(??_rgb_2_hsv+11)^0,c
  8807   003250  5034               	movf	??_rgb_2_hsv^0,w,c
  8808   003252  5C3C               	subwf	(??_rgb_2_hsv+8)^0,w,c
  8809   003254  6E10               	movwf	___lmul@multiplier^0,c
  8810   003256  5035               	movf	(??_rgb_2_hsv+1)^0,w,c
  8811   003258  583D               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  8812   00325A  6E11               	movwf	(___lmul@multiplier+1)^0,c
  8813   00325C  5036               	movf	(??_rgb_2_hsv+2)^0,w,c
  8814   00325E  583E               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  8815   003260  6E12               	movwf	(___lmul@multiplier+2)^0,c
  8816   003262  5037               	movf	(??_rgb_2_hsv+3)^0,w,c
  8817   003264  583F               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  8818   003266  6E13               	movwf	(___lmul@multiplier+3)^0,c
  8819   003268  0E70               	movlw	112
  8820   00326A  6E14               	movwf	___lmul@multiplicand^0,c
  8821   00326C  0E17               	movlw	23
  8822   00326E  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8823   003270  0E00               	movlw	0
  8824   003272  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8825   003274  0E00               	movlw	0
  8826   003276  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8827   003278  ECAF  F027         	call	___lmul	;wreg free
  8828   00327C  C010  F01C         	movff	?___lmul,___lldiv@dividend
  8829   003280  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  8830   003284  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  8831   003288  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  8832   00328C  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8833   003290  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8834   003294  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8835   003298  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8836   00329C  ECA1  F026         	call	___lldiv	;wreg free
  8837   0032A0  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8838   0032A4  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8839   0032A8  C01C  FFDE         	movff	?___lldiv,postinc2
  8840   0032AC  C01D  FFDD         	movff	?___lldiv+1,postdec2
  8841   0032B0                     l232:
  8842                           
  8843                           ;color.c: 291:     HSV->S = (unsigned int)((diff * 10000)/cmax);
  8844   0032B0  C06E  F010         	movff	rgb_2_hsv@diff,___lmul@multiplier
  8845   0032B4  C06F  F011         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  8846   0032B8  C070  F012         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  8847   0032BC  C071  F013         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  8848   0032C0  0E10               	movlw	16
  8849   0032C2  6E14               	movwf	___lmul@multiplicand^0,c
  8850   0032C4  0E27               	movlw	39
  8851   0032C6  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8852   0032C8  0E00               	movlw	0
  8853   0032CA  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8854   0032CC  0E00               	movlw	0
  8855   0032CE  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8856   0032D0  ECAF  F027         	call	___lmul	;wreg free
  8857   0032D4  C010  F01C         	movff	?___lmul,___lldiv@dividend
  8858   0032D8  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  8859   0032DC  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  8860   0032E0  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  8861   0032E4  C06C  F020         	movff	rgb_2_hsv@cmax,___lldiv@divisor
  8862   0032E8  C06D  F021         	movff	rgb_2_hsv@cmax+1,___lldiv@divisor+1
  8863   0032EC  6A22               	clrf	(___lldiv@divisor+2)^0,c
  8864   0032EE  6A23               	clrf	(___lldiv@divisor+3)^0,c
  8865   0032F0  ECA1  F026         	call	___lldiv	;wreg free
  8866   0032F4  EE20 F002          	lfsr	2,2
  8867   0032F8  5032               	movf	rgb_2_hsv@HSV^0,w,c
  8868   0032FA  26D9               	addwf	fsr2l,f,c
  8869   0032FC  5033               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8870   0032FE  22DA               	addwfc	fsr2h,f,c
  8871   003300  C01C  FFDE         	movff	?___lldiv,postinc2
  8872   003304  C01D  FFDD         	movff	?___lldiv+1,postdec2
  8873   003308                     
  8874                           ;color.c: 293:     if (HSV->S == 0){HSV->H = 0;}
  8875   003308  EE20 F002          	lfsr	2,2
  8876   00330C  5032               	movf	rgb_2_hsv@HSV^0,w,c
  8877   00330E  26D9               	addwf	fsr2l,f,c
  8878   003310  5033               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8879   003312  22DA               	addwfc	fsr2h,f,c
  8880   003314  50DE               	movf	postinc2,w,c
  8881   003316  10DE               	iorwf	postinc2,w,c
  8882   003318  A4D8               	btfss	status,2,c
  8883   00331A  EF91  F019         	goto	u2311
  8884   00331E  EF93  F019         	goto	u2310
  8885   003322                     u2311:
  8886   003322  EF99  F019         	goto	l3451
  8887   003326                     u2310:
  8888   003326  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8889   00332A  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8890   00332E  6ADE               	clrf	postinc2,c
  8891   003330  6ADD               	clrf	postdec2,c
  8892   003332                     l3451:
  8893                           
  8894                           ;color.c: 296:     HSV->V = cmax;
  8895   003332  EE20 F004          	lfsr	2,4
  8896   003336  5032               	movf	rgb_2_hsv@HSV^0,w,c
  8897   003338  26D9               	addwf	fsr2l,f,c
  8898   00333A  5033               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8899   00333C  22DA               	addwfc	fsr2h,f,c
  8900   00333E  C06C  FFDE         	movff	rgb_2_hsv@cmax,postinc2
  8901   003342  C06D  FFDD         	movff	rgb_2_hsv@cmax+1,postdec2
  8902   003346  0012               	return		;funcret
  8903   003348                     __end_of_rgb_2_hsv:
  8904                           	callstack 0
  8905                           
  8906 ;; *************** function _min *****************
  8907 ;; Defined at:
  8908 ;;		line 260 in file "color.c"
  8909 ;; Parameters:    Size  Location     Type
  8910 ;;  a               2   15[COMRAM] unsigned int 
  8911 ;;  b               2   17[COMRAM] unsigned int 
  8912 ;; Auto vars:     Size  Location     Type
  8913 ;;		None
  8914 ;; Return value:  Size  Location     Type
  8915 ;;                  2   15[COMRAM] unsigned int 
  8916 ;; Registers used:
  8917 ;;		wreg, status,2, status,0
  8918 ;; Tracked objects:
  8919 ;;		On entry : 0/0
  8920 ;;		On exit  : 0/0
  8921 ;;		Unchanged: 0/0
  8922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8926 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8927 ;;Total ram usage:        4 bytes
  8928 ;; Hardware stack levels used: 1
  8929 ;; Hardware stack levels required when called: 6
  8930 ;; This function calls:
  8931 ;;		Nothing
  8932 ;; This function is called by:
  8933 ;;		_color_detect
  8934 ;;		_rgb_2_hsv
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938                           	psect	text21
  8939   00511C                     __ptext21:
  8940                           	callstack 0
  8941   00511C                     _min:
  8942                           	callstack 23
  8943   00511C                     
  8944                           ;color.c: 261:     if (a < b){return a;}
  8945   00511C  5012               	movf	min@b^0,w,c
  8946   00511E  5C10               	subwf	min@a^0,w,c
  8947   005120  5013               	movf	(min@b+1)^0,w,c
  8948   005122  5811               	subwfb	(min@a+1)^0,w,c
  8949   005124  B0D8               	btfsc	status,0,c
  8950   005126  EF97  F028         	goto	u1961
  8951   00512A  EF99  F028         	goto	u1960
  8952   00512E                     u1961:
  8953   00512E  EF9F  F028         	goto	l223
  8954   005132                     u1960:
  8955   005132  C010  F010         	movff	min@a,?_min
  8956   005136  C011  F011         	movff	min@a+1,?_min+1
  8957   00513A  EFA3  F028         	goto	l224
  8958   00513E                     l223:
  8959   00513E  C012  F010         	movff	min@b,?_min
  8960   005142  C013  F011         	movff	min@b+1,?_min+1
  8961   005146                     l224:
  8962   005146  0012               	return		;funcret
  8963   005148                     __end_of_min:
  8964                           	callstack 0
  8965                           
  8966 ;; *************** function _max *****************
  8967 ;; Defined at:
  8968 ;;		line 255 in file "color.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;  a               2   15[COMRAM] unsigned int 
  8971 ;;  b               2   17[COMRAM] unsigned int 
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;		None
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  2   15[COMRAM] unsigned int 
  8976 ;; Registers used:
  8977 ;;		wreg, status,2, status,0
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8987 ;;Total ram usage:        4 bytes
  8988 ;; Hardware stack levels used: 1
  8989 ;; Hardware stack levels required when called: 6
  8990 ;; This function calls:
  8991 ;;		Nothing
  8992 ;; This function is called by:
  8993 ;;		_color_detect
  8994 ;;		_rgb_2_hsv
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           	psect	text22
  8999   005148                     __ptext22:
  9000                           	callstack 0
  9001   005148                     _max:
  9002                           	callstack 23
  9003   005148                     
  9004                           ;color.c: 256:     if (a > b){return a;}
  9005   005148  5010               	movf	max@a^0,w,c
  9006   00514A  5C12               	subwf	max@b^0,w,c
  9007   00514C  5011               	movf	(max@a+1)^0,w,c
  9008   00514E  5813               	subwfb	(max@b+1)^0,w,c
  9009   005150  B0D8               	btfsc	status,0,c
  9010   005152  EFAD  F028         	goto	u1971
  9011   005156  EFAF  F028         	goto	u1970
  9012   00515A                     u1971:
  9013   00515A  EFB5  F028         	goto	l218
  9014   00515E                     u1970:
  9015   00515E  C010  F010         	movff	max@a,?_max
  9016   005162  C011  F011         	movff	max@a+1,?_max+1
  9017   005166  EFB9  F028         	goto	l219
  9018   00516A                     l218:
  9019   00516A  C012  F010         	movff	max@b,?_max
  9020   00516E  C013  F011         	movff	max@b+1,?_max+1
  9021   005172                     l219:
  9022   005172  0012               	return		;funcret
  9023   005174                     __end_of_max:
  9024                           	callstack 0
  9025                           
  9026 ;; *************** function ___lmul *****************
  9027 ;; Defined at:
  9028 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  multiplier      4   15[COMRAM] unsigned long 
  9031 ;;  multiplicand    4   19[COMRAM] unsigned long 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;  product         4   23[COMRAM] unsigned long 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  4   15[COMRAM] unsigned long 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9043 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9044 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9046 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9047 ;;Total ram usage:       12 bytes
  9048 ;; Hardware stack levels used: 1
  9049 ;; Hardware stack levels required when called: 6
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_rgb_2_hsv
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text23
  9058   004F5E                     __ptext23:
  9059                           	callstack 0
  9060   004F5E                     ___lmul:
  9061                           	callstack 23
  9062   004F5E  0E00               	movlw	0
  9063   004F60  6E18               	movwf	___lmul@product^0,c
  9064   004F62  0E00               	movlw	0
  9065   004F64  6E19               	movwf	(___lmul@product+1)^0,c
  9066   004F66  0E00               	movlw	0
  9067   004F68  6E1A               	movwf	(___lmul@product+2)^0,c
  9068   004F6A  0E00               	movlw	0
  9069   004F6C  6E1B               	movwf	(___lmul@product+3)^0,c
  9070   004F6E                     l3301:
  9071   004F6E  A010               	btfss	___lmul@multiplier^0,0,c
  9072   004F70  EFBC  F027         	goto	u2131
  9073   004F74  EFBE  F027         	goto	u2130
  9074   004F78                     u2131:
  9075   004F78  EFC6  F027         	goto	l3305
  9076   004F7C                     u2130:
  9077   004F7C  5014               	movf	___lmul@multiplicand^0,w,c
  9078   004F7E  2618               	addwf	___lmul@product^0,f,c
  9079   004F80  5015               	movf	(___lmul@multiplicand+1)^0,w,c
  9080   004F82  2219               	addwfc	(___lmul@product+1)^0,f,c
  9081   004F84  5016               	movf	(___lmul@multiplicand+2)^0,w,c
  9082   004F86  221A               	addwfc	(___lmul@product+2)^0,f,c
  9083   004F88  5017               	movf	(___lmul@multiplicand+3)^0,w,c
  9084   004F8A  221B               	addwfc	(___lmul@product+3)^0,f,c
  9085   004F8C                     l3305:
  9086   004F8C  90D8               	bcf	status,0,c
  9087   004F8E  3614               	rlcf	___lmul@multiplicand^0,f,c
  9088   004F90  3615               	rlcf	(___lmul@multiplicand+1)^0,f,c
  9089   004F92  3616               	rlcf	(___lmul@multiplicand+2)^0,f,c
  9090   004F94  3617               	rlcf	(___lmul@multiplicand+3)^0,f,c
  9091   004F96  90D8               	bcf	status,0,c
  9092   004F98  3213               	rrcf	(___lmul@multiplier+3)^0,f,c
  9093   004F9A  3212               	rrcf	(___lmul@multiplier+2)^0,f,c
  9094   004F9C  3211               	rrcf	(___lmul@multiplier+1)^0,f,c
  9095   004F9E  3210               	rrcf	___lmul@multiplier^0,f,c
  9096   004FA0  5010               	movf	___lmul@multiplier^0,w,c
  9097   004FA2  1011               	iorwf	(___lmul@multiplier+1)^0,w,c
  9098   004FA4  1012               	iorwf	(___lmul@multiplier+2)^0,w,c
  9099   004FA6  1013               	iorwf	(___lmul@multiplier+3)^0,w,c
  9100   004FA8  A4D8               	btfss	status,2,c
  9101   004FAA  EFD9  F027         	goto	u2141
  9102   004FAE  EFDB  F027         	goto	u2140
  9103   004FB2                     u2141:
  9104   004FB2  EFB7  F027         	goto	l3301
  9105   004FB6                     u2140:
  9106   004FB6  C018  F010         	movff	___lmul@product,?___lmul
  9107   004FBA  C019  F011         	movff	___lmul@product+1,?___lmul+1
  9108   004FBE  C01A  F012         	movff	___lmul@product+2,?___lmul+2
  9109   004FC2  C01B  F013         	movff	___lmul@product+3,?___lmul+3
  9110   004FC6  0012               	return		;funcret
  9111   004FC8                     __end_of___lmul:
  9112                           	callstack 0
  9113                           
  9114 ;; *************** function ___lldiv *****************
  9115 ;; Defined at:
  9116 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;  dividend        4   27[COMRAM] unsigned long 
  9119 ;;  divisor         4   31[COMRAM] unsigned long 
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;  quotient        4   35[COMRAM] unsigned long 
  9122 ;;  counter         1   39[COMRAM] unsigned char 
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  4   27[COMRAM] unsigned long 
  9125 ;; Registers used:
  9126 ;;		wreg, status,2, status,0
  9127 ;; Tracked objects:
  9128 ;;		On entry : 0/0
  9129 ;;		On exit  : 0/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9132 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9133 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9135 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9136 ;;Total ram usage:       13 bytes
  9137 ;; Hardware stack levels used: 1
  9138 ;; Hardware stack levels required when called: 6
  9139 ;; This function calls:
  9140 ;;		Nothing
  9141 ;; This function is called by:
  9142 ;;		_rgb_2_hsv
  9143 ;; This function uses a non-reentrant model
  9144 ;;
  9145                           
  9146                           	psect	text24
  9147   004D42                     __ptext24:
  9148                           	callstack 0
  9149   004D42                     ___lldiv:
  9150                           	callstack 23
  9151   004D42  0E00               	movlw	0
  9152   004D44  6E24               	movwf	___lldiv@quotient^0,c
  9153   004D46  0E00               	movlw	0
  9154   004D48  6E25               	movwf	(___lldiv@quotient+1)^0,c
  9155   004D4A  0E00               	movlw	0
  9156   004D4C  6E26               	movwf	(___lldiv@quotient+2)^0,c
  9157   004D4E  0E00               	movlw	0
  9158   004D50  6E27               	movwf	(___lldiv@quotient+3)^0,c
  9159   004D52  5020               	movf	___lldiv@divisor^0,w,c
  9160   004D54  1021               	iorwf	(___lldiv@divisor+1)^0,w,c
  9161   004D56  1022               	iorwf	(___lldiv@divisor+2)^0,w,c
  9162   004D58  1023               	iorwf	(___lldiv@divisor+3)^0,w,c
  9163   004D5A  B4D8               	btfsc	status,2,c
  9164   004D5C  EFB2  F026         	goto	u2151
  9165   004D60  EFB4  F026         	goto	u2150
  9166   004D64                     u2151:
  9167   004D64  EFEA  F026         	goto	l795
  9168   004D68                     u2150:
  9169   004D68  0E01               	movlw	1
  9170   004D6A  6E28               	movwf	___lldiv@counter^0,c
  9171   004D6C  EFBE  F026         	goto	l3317
  9172   004D70                     l3315:
  9173   004D70  90D8               	bcf	status,0,c
  9174   004D72  3620               	rlcf	___lldiv@divisor^0,f,c
  9175   004D74  3621               	rlcf	(___lldiv@divisor+1)^0,f,c
  9176   004D76  3622               	rlcf	(___lldiv@divisor+2)^0,f,c
  9177   004D78  3623               	rlcf	(___lldiv@divisor+3)^0,f,c
  9178   004D7A  2A28               	incf	___lldiv@counter^0,f,c
  9179   004D7C                     l3317:
  9180   004D7C  AE23               	btfss	(___lldiv@divisor+3)^0,7,c
  9181   004D7E  EFC3  F026         	goto	u2161
  9182   004D82  EFC5  F026         	goto	u2160
  9183   004D86                     u2161:
  9184   004D86  EFB8  F026         	goto	l3315
  9185   004D8A                     u2160:
  9186   004D8A                     l3319:
  9187   004D8A  90D8               	bcf	status,0,c
  9188   004D8C  3624               	rlcf	___lldiv@quotient^0,f,c
  9189   004D8E  3625               	rlcf	(___lldiv@quotient+1)^0,f,c
  9190   004D90  3626               	rlcf	(___lldiv@quotient+2)^0,f,c
  9191   004D92  3627               	rlcf	(___lldiv@quotient+3)^0,f,c
  9192   004D94  5020               	movf	___lldiv@divisor^0,w,c
  9193   004D96  5C1C               	subwf	___lldiv@dividend^0,w,c
  9194   004D98  5021               	movf	(___lldiv@divisor+1)^0,w,c
  9195   004D9A  581D               	subwfb	(___lldiv@dividend+1)^0,w,c
  9196   004D9C  5022               	movf	(___lldiv@divisor+2)^0,w,c
  9197   004D9E  581E               	subwfb	(___lldiv@dividend+2)^0,w,c
  9198   004DA0  5023               	movf	(___lldiv@divisor+3)^0,w,c
  9199   004DA2  581F               	subwfb	(___lldiv@dividend+3)^0,w,c
  9200   004DA4  A0D8               	btfss	status,0,c
  9201   004DA6  EFD7  F026         	goto	u2171
  9202   004DAA  EFD9  F026         	goto	u2170
  9203   004DAE                     u2171:
  9204   004DAE  EFE2  F026         	goto	l3327
  9205   004DB2                     u2170:
  9206   004DB2  5020               	movf	___lldiv@divisor^0,w,c
  9207   004DB4  5E1C               	subwf	___lldiv@dividend^0,f,c
  9208   004DB6  5021               	movf	(___lldiv@divisor+1)^0,w,c
  9209   004DB8  5A1D               	subwfb	(___lldiv@dividend+1)^0,f,c
  9210   004DBA  5022               	movf	(___lldiv@divisor+2)^0,w,c
  9211   004DBC  5A1E               	subwfb	(___lldiv@dividend+2)^0,f,c
  9212   004DBE  5023               	movf	(___lldiv@divisor+3)^0,w,c
  9213   004DC0  5A1F               	subwfb	(___lldiv@dividend+3)^0,f,c
  9214   004DC2  8024               	bsf	___lldiv@quotient^0,0,c
  9215   004DC4                     l3327:
  9216   004DC4  90D8               	bcf	status,0,c
  9217   004DC6  3223               	rrcf	(___lldiv@divisor+3)^0,f,c
  9218   004DC8  3222               	rrcf	(___lldiv@divisor+2)^0,f,c
  9219   004DCA  3221               	rrcf	(___lldiv@divisor+1)^0,f,c
  9220   004DCC  3220               	rrcf	___lldiv@divisor^0,f,c
  9221   004DCE  2E28               	decfsz	___lldiv@counter^0,f,c
  9222   004DD0  EFC5  F026         	goto	l3319
  9223   004DD4                     l795:
  9224   004DD4  C024  F01C         	movff	___lldiv@quotient,?___lldiv
  9225   004DD8  C025  F01D         	movff	___lldiv@quotient+1,?___lldiv+1
  9226   004DDC  C026  F01E         	movff	___lldiv@quotient+2,?___lldiv+2
  9227   004DE0  C027  F01F         	movff	___lldiv@quotient+3,?___lldiv+3
  9228   004DE4  0012               	return		;funcret
  9229   004DE6                     __end_of___lldiv:
  9230                           	callstack 0
  9231                           
  9232 ;; *************** function ___aldiv *****************
  9233 ;; Defined at:
  9234 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  9235 ;; Parameters:    Size  Location     Type
  9236 ;;  dividend        4   27[COMRAM] long 
  9237 ;;  divisor         4   31[COMRAM] long 
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;  quotient        4   37[COMRAM] long 
  9240 ;;  sign            1   36[COMRAM] unsigned char 
  9241 ;;  counter         1   35[COMRAM] unsigned char 
  9242 ;; Return value:  Size  Location     Type
  9243 ;;                  4   27[COMRAM] long 
  9244 ;; Registers used:
  9245 ;;		wreg, status,2, status,0
  9246 ;; Tracked objects:
  9247 ;;		On entry : 0/0
  9248 ;;		On exit  : 0/0
  9249 ;;		Unchanged: 0/0
  9250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9251 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9252 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9254 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9255 ;;Total ram usage:       14 bytes
  9256 ;; Hardware stack levels used: 1
  9257 ;; Hardware stack levels required when called: 6
  9258 ;; This function calls:
  9259 ;;		Nothing
  9260 ;; This function is called by:
  9261 ;;		_rgb_2_hsv
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           	psect	text25
  9266   004838                     __ptext25:
  9267                           	callstack 0
  9268   004838                     ___aldiv:
  9269                           	callstack 23
  9270   004838  0E00               	movlw	0
  9271   00483A  6E25               	movwf	___aldiv@sign^0,c
  9272   00483C  BE23               	btfsc	(___aldiv@divisor+3)^0,7,c
  9273   00483E  EF25  F024         	goto	u2180
  9274   004842  EF23  F024         	goto	u2181
  9275   004846                     u2181:
  9276   004846  EF2F  F024         	goto	l3339
  9277   00484A                     u2180:
  9278   00484A  1E23               	comf	(___aldiv@divisor+3)^0,f,c
  9279   00484C  1E22               	comf	(___aldiv@divisor+2)^0,f,c
  9280   00484E  1E21               	comf	(___aldiv@divisor+1)^0,f,c
  9281   004850  6C20               	negf	___aldiv@divisor^0,c
  9282   004852  0E00               	movlw	0
  9283   004854  2221               	addwfc	(___aldiv@divisor+1)^0,f,c
  9284   004856  2222               	addwfc	(___aldiv@divisor+2)^0,f,c
  9285   004858  2223               	addwfc	(___aldiv@divisor+3)^0,f,c
  9286   00485A  0E01               	movlw	1
  9287   00485C  6E25               	movwf	___aldiv@sign^0,c
  9288   00485E                     l3339:
  9289   00485E  BE1F               	btfsc	(___aldiv@dividend+3)^0,7,c
  9290   004860  EF36  F024         	goto	u2190
  9291   004864  EF34  F024         	goto	u2191
  9292   004868                     u2191:
  9293   004868  EF40  F024         	goto	l3345
  9294   00486C                     u2190:
  9295   00486C  1E1F               	comf	(___aldiv@dividend+3)^0,f,c
  9296   00486E  1E1E               	comf	(___aldiv@dividend+2)^0,f,c
  9297   004870  1E1D               	comf	(___aldiv@dividend+1)^0,f,c
  9298   004872  6C1C               	negf	___aldiv@dividend^0,c
  9299   004874  0E00               	movlw	0
  9300   004876  221D               	addwfc	(___aldiv@dividend+1)^0,f,c
  9301   004878  221E               	addwfc	(___aldiv@dividend+2)^0,f,c
  9302   00487A  221F               	addwfc	(___aldiv@dividend+3)^0,f,c
  9303   00487C  0E01               	movlw	1
  9304   00487E  1A25               	xorwf	___aldiv@sign^0,f,c
  9305   004880                     l3345:
  9306   004880  0E00               	movlw	0
  9307   004882  6E26               	movwf	___aldiv@quotient^0,c
  9308   004884  0E00               	movlw	0
  9309   004886  6E27               	movwf	(___aldiv@quotient+1)^0,c
  9310   004888  0E00               	movlw	0
  9311   00488A  6E28               	movwf	(___aldiv@quotient+2)^0,c
  9312   00488C  0E00               	movlw	0
  9313   00488E  6E29               	movwf	(___aldiv@quotient+3)^0,c
  9314   004890  5020               	movf	___aldiv@divisor^0,w,c
  9315   004892  1021               	iorwf	(___aldiv@divisor+1)^0,w,c
  9316   004894  1022               	iorwf	(___aldiv@divisor+2)^0,w,c
  9317   004896  1023               	iorwf	(___aldiv@divisor+3)^0,w,c
  9318   004898  B4D8               	btfsc	status,2,c
  9319   00489A  EF51  F024         	goto	u2201
  9320   00489E  EF53  F024         	goto	u2200
  9321   0048A2                     u2201:
  9322   0048A2  EF89  F024         	goto	l3367
  9323   0048A6                     u2200:
  9324   0048A6  0E01               	movlw	1
  9325   0048A8  6E24               	movwf	___aldiv@counter^0,c
  9326   0048AA  EF5D  F024         	goto	l3353
  9327   0048AE                     l3351:
  9328   0048AE  90D8               	bcf	status,0,c
  9329   0048B0  3620               	rlcf	___aldiv@divisor^0,f,c
  9330   0048B2  3621               	rlcf	(___aldiv@divisor+1)^0,f,c
  9331   0048B4  3622               	rlcf	(___aldiv@divisor+2)^0,f,c
  9332   0048B6  3623               	rlcf	(___aldiv@divisor+3)^0,f,c
  9333   0048B8  2A24               	incf	___aldiv@counter^0,f,c
  9334   0048BA                     l3353:
  9335   0048BA  AE23               	btfss	(___aldiv@divisor+3)^0,7,c
  9336   0048BC  EF62  F024         	goto	u2211
  9337   0048C0  EF64  F024         	goto	u2210
  9338   0048C4                     u2211:
  9339   0048C4  EF57  F024         	goto	l3351
  9340   0048C8                     u2210:
  9341   0048C8                     l3355:
  9342   0048C8  90D8               	bcf	status,0,c
  9343   0048CA  3626               	rlcf	___aldiv@quotient^0,f,c
  9344   0048CC  3627               	rlcf	(___aldiv@quotient+1)^0,f,c
  9345   0048CE  3628               	rlcf	(___aldiv@quotient+2)^0,f,c
  9346   0048D0  3629               	rlcf	(___aldiv@quotient+3)^0,f,c
  9347   0048D2  5020               	movf	___aldiv@divisor^0,w,c
  9348   0048D4  5C1C               	subwf	___aldiv@dividend^0,w,c
  9349   0048D6  5021               	movf	(___aldiv@divisor+1)^0,w,c
  9350   0048D8  581D               	subwfb	(___aldiv@dividend+1)^0,w,c
  9351   0048DA  5022               	movf	(___aldiv@divisor+2)^0,w,c
  9352   0048DC  581E               	subwfb	(___aldiv@dividend+2)^0,w,c
  9353   0048DE  5023               	movf	(___aldiv@divisor+3)^0,w,c
  9354   0048E0  581F               	subwfb	(___aldiv@dividend+3)^0,w,c
  9355   0048E2  A0D8               	btfss	status,0,c
  9356   0048E4  EF76  F024         	goto	u2221
  9357   0048E8  EF78  F024         	goto	u2220
  9358   0048EC                     u2221:
  9359   0048EC  EF81  F024         	goto	l3363
  9360   0048F0                     u2220:
  9361   0048F0  5020               	movf	___aldiv@divisor^0,w,c
  9362   0048F2  5E1C               	subwf	___aldiv@dividend^0,f,c
  9363   0048F4  5021               	movf	(___aldiv@divisor+1)^0,w,c
  9364   0048F6  5A1D               	subwfb	(___aldiv@dividend+1)^0,f,c
  9365   0048F8  5022               	movf	(___aldiv@divisor+2)^0,w,c
  9366   0048FA  5A1E               	subwfb	(___aldiv@dividend+2)^0,f,c
  9367   0048FC  5023               	movf	(___aldiv@divisor+3)^0,w,c
  9368   0048FE  5A1F               	subwfb	(___aldiv@dividend+3)^0,f,c
  9369   004900  8026               	bsf	___aldiv@quotient^0,0,c
  9370   004902                     l3363:
  9371   004902  90D8               	bcf	status,0,c
  9372   004904  3223               	rrcf	(___aldiv@divisor+3)^0,f,c
  9373   004906  3222               	rrcf	(___aldiv@divisor+2)^0,f,c
  9374   004908  3221               	rrcf	(___aldiv@divisor+1)^0,f,c
  9375   00490A  3220               	rrcf	___aldiv@divisor^0,f,c
  9376   00490C  2E24               	decfsz	___aldiv@counter^0,f,c
  9377   00490E  EF64  F024         	goto	l3355
  9378   004912                     l3367:
  9379   004912  5025               	movf	___aldiv@sign^0,w,c
  9380   004914  B4D8               	btfsc	status,2,c
  9381   004916  EF8F  F024         	goto	u2231
  9382   00491A  EF91  F024         	goto	u2230
  9383   00491E                     u2231:
  9384   00491E  EF99  F024         	goto	l3371
  9385   004922                     u2230:
  9386   004922  1E29               	comf	(___aldiv@quotient+3)^0,f,c
  9387   004924  1E28               	comf	(___aldiv@quotient+2)^0,f,c
  9388   004926  1E27               	comf	(___aldiv@quotient+1)^0,f,c
  9389   004928  6C26               	negf	___aldiv@quotient^0,c
  9390   00492A  0E00               	movlw	0
  9391   00492C  2227               	addwfc	(___aldiv@quotient+1)^0,f,c
  9392   00492E  2228               	addwfc	(___aldiv@quotient+2)^0,f,c
  9393   004930  2229               	addwfc	(___aldiv@quotient+3)^0,f,c
  9394   004932                     l3371:
  9395   004932  C026  F01C         	movff	___aldiv@quotient,?___aldiv
  9396   004936  C027  F01D         	movff	___aldiv@quotient+1,?___aldiv+1
  9397   00493A  C028  F01E         	movff	___aldiv@quotient+2,?___aldiv+2
  9398   00493E  C029  F01F         	movff	___aldiv@quotient+3,?___aldiv+3
  9399   004942  0012               	return		;funcret
  9400   004944                     __end_of___aldiv:
  9401                           	callstack 0
  9402                           
  9403 ;; *************** function _color_read *****************
  9404 ;; Defined at:
  9405 ;;		line 77 in file "color.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  RGBC            2   19[COMRAM] PTR struct RGBC_val
  9408 ;;		 -> main@RGBC(8), 
  9409 ;; Auto vars:     Size  Location     Type
  9410 ;;		None
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  1    wreg      void 
  9413 ;; Registers used:
  9414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9422 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9423 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9424 ;;Total ram usage:        9 bytes
  9425 ;; Hardware stack levels used: 1
  9426 ;; Hardware stack levels required when called: 8
  9427 ;; This function calls:
  9428 ;;		_I2C_2_Master_Read
  9429 ;;		_I2C_2_Master_RepStart
  9430 ;;		_I2C_2_Master_Start
  9431 ;;		_I2C_2_Master_Stop
  9432 ;;		_I2C_2_Master_Write
  9433 ;; This function is called by:
  9434 ;;		_main
  9435 ;;		_color_calibration
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           	psect	text26
  9440   003F4C                     __ptext26:
  9441                           	callstack 0
  9442   003F4C                     _color_read:
  9443                           	callstack 22
  9444   003F4C                     
  9445                           ;color.c: 77: void color_read(RGBC_val *RGBC);color.c: 78: {;color.c: 79:  I2C_2_Master_
      +                          Start();
  9446   003F4C  ECB8  F029         	call	_I2C_2_Master_Start	;wreg free
  9447                           
  9448                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  9449   003F50  0E52               	movlw	82
  9450   003F52  ECA2  F029         	call	_I2C_2_Master_Write
  9451                           
  9452                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x16);
  9453   003F56  0EB6               	movlw	182
  9454   003F58  ECA2  F029         	call	_I2C_2_Master_Write
  9455                           
  9456                           ;color.c: 82:  I2C_2_Master_RepStart();
  9457   003F5C  ECBD  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9458                           
  9459                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  9460   003F60  0E53               	movlw	83
  9461   003F62  ECA2  F029         	call	_I2C_2_Master_Write
  9462   003F66                     
  9463                           ;color.c: 84:  RGBC->R=I2C_2_Master_Read(1);
  9464   003F66  0E01               	movlw	1
  9465   003F68  EC36  F028         	call	_I2C_2_Master_Read
  9466   003F6C  6E16               	movwf	??_color_read^0,c
  9467   003F6E  6A17               	clrf	(??_color_read+1)^0,c
  9468   003F70  C014  FFD9         	movff	color_read@RGBC,fsr2l
  9469   003F74  C015  FFDA         	movff	color_read@RGBC+1,fsr2h
  9470   003F78  C016  FFDE         	movff	??_color_read,postinc2
  9471   003F7C  C017  FFDD         	movff	??_color_read+1,postdec2
  9472   003F80                     
  9473                           ;color.c: 85:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  9474   003F80  C014  FFD9         	movff	color_read@RGBC,fsr2l
  9475   003F84  C015  FFDA         	movff	color_read@RGBC+1,fsr2h
  9476   003F88  CFDE F016          	movff	postinc2,??_color_read
  9477   003F8C  CFDD F017          	movff	postdec2,??_color_read+1
  9478   003F90  0E00               	movlw	0
  9479   003F92  EC36  F028         	call	_I2C_2_Master_Read
  9480   003F96  6E18               	movwf	(??_color_read+2)^0,c
  9481   003F98  5018               	movf	(??_color_read+2)^0,w,c
  9482   003F9A  6E1A               	movwf	(??_color_read+4)^0,c
  9483   003F9C  6A19               	clrf	(??_color_read+3)^0,c
  9484   003F9E  5016               	movf	??_color_read^0,w,c
  9485   003FA0  1019               	iorwf	(??_color_read+3)^0,w,c
  9486   003FA2  6E1B               	movwf	(??_color_read+5)^0,c
  9487   003FA4  5017               	movf	(??_color_read+1)^0,w,c
  9488   003FA6  101A               	iorwf	(??_color_read+4)^0,w,c
  9489   003FA8  6E1C               	movwf	(??_color_read+6)^0,c
  9490   003FAA  C014  FFD9         	movff	color_read@RGBC,fsr2l
  9491   003FAE  C015  FFDA         	movff	color_read@RGBC+1,fsr2h
  9492   003FB2  C01B  FFDE         	movff	??_color_read+5,postinc2
  9493   003FB6  C01C  FFDD         	movff	??_color_read+6,postdec2
  9494                           
  9495                           ;color.c: 86:  I2C_2_Master_Stop();
  9496   003FBA  ECB3  F029         	call	_I2C_2_Master_Stop	;wreg free
  9497                           
  9498                           ;color.c: 88:     I2C_2_Master_Start();
  9499   003FBE  ECB8  F029         	call	_I2C_2_Master_Start	;wreg free
  9500                           
  9501                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x00);
  9502   003FC2  0E52               	movlw	82
  9503   003FC4  ECA2  F029         	call	_I2C_2_Master_Write
  9504                           
  9505                           ;color.c: 90:  I2C_2_Master_Write(0xA0 | 0x18);
  9506   003FC8  0EB8               	movlw	184
  9507   003FCA  ECA2  F029         	call	_I2C_2_Master_Write
  9508                           
  9509                           ;color.c: 91:  I2C_2_Master_RepStart();
  9510   003FCE  ECBD  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9511                           
  9512                           ;color.c: 92:  I2C_2_Master_Write(0x52 | 0x01);
  9513   003FD2  0E53               	movlw	83
  9514   003FD4  ECA2  F029         	call	_I2C_2_Master_Write
  9515   003FD8                     
  9516                           ;color.c: 93:  RGBC->G=I2C_2_Master_Read(1);
  9517   003FD8  0E01               	movlw	1
  9518   003FDA  EC36  F028         	call	_I2C_2_Master_Read
  9519   003FDE  6E16               	movwf	??_color_read^0,c
  9520   003FE0  6A17               	clrf	(??_color_read+1)^0,c
  9521   003FE2  EE20 F002          	lfsr	2,2
  9522   003FE6  5014               	movf	color_read@RGBC^0,w,c
  9523   003FE8  26D9               	addwf	fsr2l,f,c
  9524   003FEA  5015               	movf	(color_read@RGBC+1)^0,w,c
  9525   003FEC  22DA               	addwfc	fsr2h,f,c
  9526   003FEE  C016  FFDE         	movff	??_color_read,postinc2
  9527   003FF2  C017  FFDD         	movff	??_color_read+1,postdec2
  9528   003FF6                     
  9529                           ;color.c: 94:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  9530   003FF6  EE20 F002          	lfsr	2,2
  9531   003FFA  5014               	movf	color_read@RGBC^0,w,c
  9532   003FFC  26D9               	addwf	fsr2l,f,c
  9533   003FFE  5015               	movf	(color_read@RGBC+1)^0,w,c
  9534   004000  22DA               	addwfc	fsr2h,f,c
  9535   004002  CFDE F016          	movff	postinc2,??_color_read
  9536   004006  CFDD F017          	movff	postdec2,??_color_read+1
  9537   00400A  0E00               	movlw	0
  9538   00400C  EC36  F028         	call	_I2C_2_Master_Read
  9539   004010  6E18               	movwf	(??_color_read+2)^0,c
  9540   004012  5018               	movf	(??_color_read+2)^0,w,c
  9541   004014  6E1A               	movwf	(??_color_read+4)^0,c
  9542   004016  6A19               	clrf	(??_color_read+3)^0,c
  9543   004018  5016               	movf	??_color_read^0,w,c
  9544   00401A  1019               	iorwf	(??_color_read+3)^0,w,c
  9545   00401C  6E1B               	movwf	(??_color_read+5)^0,c
  9546   00401E  5017               	movf	(??_color_read+1)^0,w,c
  9547   004020  101A               	iorwf	(??_color_read+4)^0,w,c
  9548   004022  6E1C               	movwf	(??_color_read+6)^0,c
  9549   004024  EE20 F002          	lfsr	2,2
  9550   004028  5014               	movf	color_read@RGBC^0,w,c
  9551   00402A  26D9               	addwf	fsr2l,f,c
  9552   00402C  5015               	movf	(color_read@RGBC+1)^0,w,c
  9553   00402E  22DA               	addwfc	fsr2h,f,c
  9554   004030  C01B  FFDE         	movff	??_color_read+5,postinc2
  9555   004034  C01C  FFDD         	movff	??_color_read+6,postdec2
  9556                           
  9557                           ;color.c: 95:  I2C_2_Master_Stop();
  9558   004038  ECB3  F029         	call	_I2C_2_Master_Stop	;wreg free
  9559                           
  9560                           ;color.c: 97:     I2C_2_Master_Start();
  9561   00403C  ECB8  F029         	call	_I2C_2_Master_Start	;wreg free
  9562                           
  9563                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  9564   004040  0E52               	movlw	82
  9565   004042  ECA2  F029         	call	_I2C_2_Master_Write
  9566                           
  9567                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x1A);
  9568   004046  0EBA               	movlw	186
  9569   004048  ECA2  F029         	call	_I2C_2_Master_Write
  9570                           
  9571                           ;color.c: 100:  I2C_2_Master_RepStart();
  9572   00404C  ECBD  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9573                           
  9574                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  9575   004050  0E53               	movlw	83
  9576   004052  ECA2  F029         	call	_I2C_2_Master_Write
  9577   004056                     
  9578                           ;color.c: 102:  RGBC->B=I2C_2_Master_Read(1);
  9579   004056  0E01               	movlw	1
  9580   004058  EC36  F028         	call	_I2C_2_Master_Read
  9581   00405C  6E16               	movwf	??_color_read^0,c
  9582   00405E  6A17               	clrf	(??_color_read+1)^0,c
  9583   004060  EE20 F004          	lfsr	2,4
  9584   004064  5014               	movf	color_read@RGBC^0,w,c
  9585   004066  26D9               	addwf	fsr2l,f,c
  9586   004068  5015               	movf	(color_read@RGBC+1)^0,w,c
  9587   00406A  22DA               	addwfc	fsr2h,f,c
  9588   00406C  C016  FFDE         	movff	??_color_read,postinc2
  9589   004070  C017  FFDD         	movff	??_color_read+1,postdec2
  9590   004074                     
  9591                           ;color.c: 103:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  9592   004074  EE20 F004          	lfsr	2,4
  9593   004078  5014               	movf	color_read@RGBC^0,w,c
  9594   00407A  26D9               	addwf	fsr2l,f,c
  9595   00407C  5015               	movf	(color_read@RGBC+1)^0,w,c
  9596   00407E  22DA               	addwfc	fsr2h,f,c
  9597   004080  CFDE F016          	movff	postinc2,??_color_read
  9598   004084  CFDD F017          	movff	postdec2,??_color_read+1
  9599   004088  0E00               	movlw	0
  9600   00408A  EC36  F028         	call	_I2C_2_Master_Read
  9601   00408E  6E18               	movwf	(??_color_read+2)^0,c
  9602   004090  5018               	movf	(??_color_read+2)^0,w,c
  9603   004092  6E1A               	movwf	(??_color_read+4)^0,c
  9604   004094  6A19               	clrf	(??_color_read+3)^0,c
  9605   004096  5016               	movf	??_color_read^0,w,c
  9606   004098  1019               	iorwf	(??_color_read+3)^0,w,c
  9607   00409A  6E1B               	movwf	(??_color_read+5)^0,c
  9608   00409C  5017               	movf	(??_color_read+1)^0,w,c
  9609   00409E  101A               	iorwf	(??_color_read+4)^0,w,c
  9610   0040A0  6E1C               	movwf	(??_color_read+6)^0,c
  9611   0040A2  EE20 F004          	lfsr	2,4
  9612   0040A6  5014               	movf	color_read@RGBC^0,w,c
  9613   0040A8  26D9               	addwf	fsr2l,f,c
  9614   0040AA  5015               	movf	(color_read@RGBC+1)^0,w,c
  9615   0040AC  22DA               	addwfc	fsr2h,f,c
  9616   0040AE  C01B  FFDE         	movff	??_color_read+5,postinc2
  9617   0040B2  C01C  FFDD         	movff	??_color_read+6,postdec2
  9618                           
  9619                           ;color.c: 104:  I2C_2_Master_Stop();
  9620   0040B6  ECB3  F029         	call	_I2C_2_Master_Stop	;wreg free
  9621                           
  9622                           ;color.c: 106:     I2C_2_Master_Start();
  9623   0040BA  ECB8  F029         	call	_I2C_2_Master_Start	;wreg free
  9624                           
  9625                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x00);
  9626   0040BE  0E52               	movlw	82
  9627   0040C0  ECA2  F029         	call	_I2C_2_Master_Write
  9628                           
  9629                           ;color.c: 108:  I2C_2_Master_Write(0xA0 | 0x14);
  9630   0040C4  0EB4               	movlw	180
  9631   0040C6  ECA2  F029         	call	_I2C_2_Master_Write
  9632                           
  9633                           ;color.c: 109:  I2C_2_Master_RepStart();
  9634   0040CA  ECBD  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9635                           
  9636                           ;color.c: 110:  I2C_2_Master_Write(0x52 | 0x01);
  9637   0040CE  0E53               	movlw	83
  9638   0040D0  ECA2  F029         	call	_I2C_2_Master_Write
  9639   0040D4                     
  9640                           ;color.c: 111:  RGBC->C=I2C_2_Master_Read(1);
  9641   0040D4  0E01               	movlw	1
  9642   0040D6  EC36  F028         	call	_I2C_2_Master_Read
  9643   0040DA  6E16               	movwf	??_color_read^0,c
  9644   0040DC  6A17               	clrf	(??_color_read+1)^0,c
  9645   0040DE  EE20 F006          	lfsr	2,6
  9646   0040E2  5014               	movf	color_read@RGBC^0,w,c
  9647   0040E4  26D9               	addwf	fsr2l,f,c
  9648   0040E6  5015               	movf	(color_read@RGBC+1)^0,w,c
  9649   0040E8  22DA               	addwfc	fsr2h,f,c
  9650   0040EA  C016  FFDE         	movff	??_color_read,postinc2
  9651   0040EE  C017  FFDD         	movff	??_color_read+1,postdec2
  9652   0040F2                     
  9653                           ;color.c: 112:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  9654   0040F2  EE20 F006          	lfsr	2,6
  9655   0040F6  5014               	movf	color_read@RGBC^0,w,c
  9656   0040F8  26D9               	addwf	fsr2l,f,c
  9657   0040FA  5015               	movf	(color_read@RGBC+1)^0,w,c
  9658   0040FC  22DA               	addwfc	fsr2h,f,c
  9659   0040FE  CFDE F016          	movff	postinc2,??_color_read
  9660   004102  CFDD F017          	movff	postdec2,??_color_read+1
  9661   004106  0E00               	movlw	0
  9662   004108  EC36  F028         	call	_I2C_2_Master_Read
  9663   00410C  6E18               	movwf	(??_color_read+2)^0,c
  9664   00410E  5018               	movf	(??_color_read+2)^0,w,c
  9665   004110  6E1A               	movwf	(??_color_read+4)^0,c
  9666   004112  6A19               	clrf	(??_color_read+3)^0,c
  9667   004114  5016               	movf	??_color_read^0,w,c
  9668   004116  1019               	iorwf	(??_color_read+3)^0,w,c
  9669   004118  6E1B               	movwf	(??_color_read+5)^0,c
  9670   00411A  5017               	movf	(??_color_read+1)^0,w,c
  9671   00411C  101A               	iorwf	(??_color_read+4)^0,w,c
  9672   00411E  6E1C               	movwf	(??_color_read+6)^0,c
  9673   004120  EE20 F006          	lfsr	2,6
  9674   004124  5014               	movf	color_read@RGBC^0,w,c
  9675   004126  26D9               	addwf	fsr2l,f,c
  9676   004128  5015               	movf	(color_read@RGBC+1)^0,w,c
  9677   00412A  22DA               	addwfc	fsr2h,f,c
  9678   00412C  C01B  FFDE         	movff	??_color_read+5,postinc2
  9679   004130  C01C  FFDD         	movff	??_color_read+6,postdec2
  9680                           
  9681                           ;color.c: 113:  I2C_2_Master_Stop();
  9682   004134  ECB3  F029         	call	_I2C_2_Master_Stop	;wreg free
  9683   004138  0012               	return		;funcret
  9684   00413A                     __end_of_color_read:
  9685                           	callstack 0
  9686                           
  9687 ;; *************** function _I2C_2_Master_Write *****************
  9688 ;; Defined at:
  9689 ;;		line 45 in file "i2c.c"
  9690 ;; Parameters:    Size  Location     Type
  9691 ;;  data_byte       1    wreg     unsigned char 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;  data_byte       1   16[COMRAM] unsigned char 
  9694 ;; Return value:  Size  Location     Type
  9695 ;;                  1    wreg      void 
  9696 ;; Registers used:
  9697 ;;		wreg, status,2, status,0, cstack
  9698 ;; Tracked objects:
  9699 ;;		On entry : 0/0
  9700 ;;		On exit  : 0/0
  9701 ;;		Unchanged: 0/0
  9702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9706 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9707 ;;Total ram usage:        1 bytes
  9708 ;; Hardware stack levels used: 1
  9709 ;; Hardware stack levels required when called: 7
  9710 ;; This function calls:
  9711 ;;		_I2C_2_Master_Idle
  9712 ;; This function is called by:
  9713 ;;		_color_clear_init_interrupts
  9714 ;;		_color_writetoaddr
  9715 ;;		_color_read
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719                           	psect	text27
  9720   005344                     __ptext27:
  9721                           	callstack 0
  9722   005344                     _I2C_2_Master_Write:
  9723                           	callstack 22
  9724                           
  9725                           ;incstack = 0
  9726                           ;I2C_2_Master_Write@data_byte stored from wreg
  9727   005344  6E11               	movwf	I2C_2_Master_Write@data_byte^0,c
  9728   005346                     
  9729                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9730   005346  ECE3  F028         	call	_I2C_2_Master_Idle	;wreg free
  9731   00534A                     
  9732                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9733   00534A  C011  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9734   00534E  0012               	return		;funcret
  9735   005350                     __end_of_I2C_2_Master_Write:
  9736                           	callstack 0
  9737                           
  9738 ;; *************** function _I2C_2_Master_Stop *****************
  9739 ;; Defined at:
  9740 ;;		line 39 in file "i2c.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;		None
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;		None
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  1    wreg      void 
  9747 ;; Registers used:
  9748 ;;		wreg, status,2, status,0, cstack
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9758 ;;Total ram usage:        0 bytes
  9759 ;; Hardware stack levels used: 1
  9760 ;; Hardware stack levels required when called: 7
  9761 ;; This function calls:
  9762 ;;		_I2C_2_Master_Idle
  9763 ;; This function is called by:
  9764 ;;		_color_clear_init_interrupts
  9765 ;;		_color_writetoaddr
  9766 ;;		_color_read
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           	psect	text28
  9771   005366                     __ptext28:
  9772                           	callstack 0
  9773   005366                     _I2C_2_Master_Stop:
  9774                           	callstack 22
  9775   005366                     
  9776                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9777   005366  ECE3  F028         	call	_I2C_2_Master_Idle	;wreg free
  9778   00536A                     
  9779                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9780   00536A  010E               	movlb	14	; () banked
  9781   00536C  85DA               	bsf	218,2,b	;volatile
  9782   00536E                     
  9783                           ; BSR set to: 14
  9784   00536E  0012               	return		;funcret
  9785   005370                     __end_of_I2C_2_Master_Stop:
  9786                           	callstack 0
  9787                           
  9788 ;; *************** function _I2C_2_Master_Start *****************
  9789 ;; Defined at:
  9790 ;;		line 27 in file "i2c.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;		None
  9793 ;; Auto vars:     Size  Location     Type
  9794 ;;		None
  9795 ;; Return value:  Size  Location     Type
  9796 ;;                  1    wreg      void 
  9797 ;; Registers used:
  9798 ;;		wreg, status,2, status,0, cstack
  9799 ;; Tracked objects:
  9800 ;;		On entry : 0/0
  9801 ;;		On exit  : 0/0
  9802 ;;		Unchanged: 0/0
  9803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9808 ;;Total ram usage:        0 bytes
  9809 ;; Hardware stack levels used: 1
  9810 ;; Hardware stack levels required when called: 7
  9811 ;; This function calls:
  9812 ;;		_I2C_2_Master_Idle
  9813 ;; This function is called by:
  9814 ;;		_color_clear_init_interrupts
  9815 ;;		_color_writetoaddr
  9816 ;;		_color_read
  9817 ;; This function uses a non-reentrant model
  9818 ;;
  9819                           
  9820                           	psect	text29
  9821   005370                     __ptext29:
  9822                           	callstack 0
  9823   005370                     _I2C_2_Master_Start:
  9824                           	callstack 22
  9825   005370                     
  9826                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9827   005370  ECE3  F028         	call	_I2C_2_Master_Idle	;wreg free
  9828   005374                     
  9829                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9830   005374  010E               	movlb	14	; () banked
  9831   005376  81DA               	bsf	218,0,b	;volatile
  9832   005378                     
  9833                           ; BSR set to: 14
  9834   005378  0012               	return		;funcret
  9835   00537A                     __end_of_I2C_2_Master_Start:
  9836                           	callstack 0
  9837                           
  9838 ;; *************** function _I2C_2_Master_RepStart *****************
  9839 ;; Defined at:
  9840 ;;		line 33 in file "i2c.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;		None
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;		None
  9845 ;; Return value:  Size  Location     Type
  9846 ;;                  1    wreg      void 
  9847 ;; Registers used:
  9848 ;;		wreg, status,2, status,0, cstack
  9849 ;; Tracked objects:
  9850 ;;		On entry : 0/0
  9851 ;;		On exit  : 0/0
  9852 ;;		Unchanged: 0/0
  9853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9858 ;;Total ram usage:        0 bytes
  9859 ;; Hardware stack levels used: 1
  9860 ;; Hardware stack levels required when called: 7
  9861 ;; This function calls:
  9862 ;;		_I2C_2_Master_Idle
  9863 ;; This function is called by:
  9864 ;;		_color_read
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           	psect	text30
  9869   00537A                     __ptext30:
  9870                           	callstack 0
  9871   00537A                     _I2C_2_Master_RepStart:
  9872                           	callstack 22
  9873   00537A                     
  9874                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9875   00537A  ECE3  F028         	call	_I2C_2_Master_Idle	;wreg free
  9876   00537E                     
  9877                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9878   00537E  010E               	movlb	14	; () banked
  9879   005380  83DA               	bsf	218,1,b	;volatile
  9880   005382                     
  9881                           ; BSR set to: 14
  9882   005382  0012               	return		;funcret
  9883   005384                     __end_of_I2C_2_Master_RepStart:
  9884                           	callstack 0
  9885                           
  9886 ;; *************** function _I2C_2_Master_Read *****************
  9887 ;; Defined at:
  9888 ;;		line 51 in file "i2c.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;  ack             1    wreg     unsigned char 
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;  ack             1   17[COMRAM] unsigned char 
  9893 ;;  tmp             1   18[COMRAM] unsigned char 
  9894 ;; Return value:  Size  Location     Type
  9895 ;;                  1    wreg      unsigned char 
  9896 ;; Registers used:
  9897 ;;		wreg, status,2, status,0, cstack
  9898 ;; Tracked objects:
  9899 ;;		On entry : 0/0
  9900 ;;		On exit  : 0/0
  9901 ;;		Unchanged: 0/0
  9902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9904 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9905 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9906 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9907 ;;Total ram usage:        3 bytes
  9908 ;; Hardware stack levels used: 1
  9909 ;; Hardware stack levels required when called: 7
  9910 ;; This function calls:
  9911 ;;		_I2C_2_Master_Idle
  9912 ;; This function is called by:
  9913 ;;		_color_read
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           	psect	text31
  9918   00506C                     __ptext31:
  9919                           	callstack 0
  9920   00506C                     _I2C_2_Master_Read:
  9921                           	callstack 22
  9922                           
  9923                           ; BSR set to: 14
  9924                           ;incstack = 0
  9925                           ;I2C_2_Master_Read@ack stored from wreg
  9926   00506C  6E12               	movwf	I2C_2_Master_Read@ack^0,c
  9927   00506E                     
  9928                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9929   00506E  ECE3  F028         	call	_I2C_2_Master_Idle	;wreg free
  9930   005072                     
  9931                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9932   005072  010E               	movlb	14	; () banked
  9933   005074  87DA               	bsf	218,3,b	;volatile
  9934                           
  9935                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9936   005076  ECE3  F028         	call	_I2C_2_Master_Idle	;wreg free
  9937   00507A                     
  9938                           ;i2c.c: 57:   tmp = SSP2BUF;
  9939   00507A  CED5 F013          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9940                           
  9941                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9942   00507E  ECE3  F028         	call	_I2C_2_Master_Idle	;wreg free
  9943   005082                     
  9944                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9945   005082  5012               	movf	I2C_2_Master_Read@ack^0,w,c
  9946   005084  B4D8               	btfsc	status,2,c
  9947   005086  EF47  F028         	goto	u1941
  9948   00508A  EF4B  F028         	goto	u1940
  9949   00508E                     u1941:
  9950   00508E  6A11               	clrf	??_I2C_2_Master_Read^0,c
  9951   005090  2A11               	incf	??_I2C_2_Master_Read^0,f,c
  9952   005092  EF4C  F028         	goto	u1958
  9953   005096                     u1940:
  9954   005096  6A11               	clrf	??_I2C_2_Master_Read^0,c
  9955   005098                     u1958:
  9956   005098  3A11               	swapf	??_I2C_2_Master_Read^0,f,c
  9957   00509A  4611               	rlncf	??_I2C_2_Master_Read^0,f,c
  9958   00509C  010E               	movlb	14	; () banked
  9959   00509E  51DA               	movf	218,w,b	;volatile
  9960   0050A0  1811               	xorwf	??_I2C_2_Master_Read^0,w,c
  9961   0050A2  0BDF               	andlw	-33
  9962   0050A4  1811               	xorwf	??_I2C_2_Master_Read^0,w,c
  9963   0050A6  6FDA               	movwf	218,b	;volatile
  9964   0050A8                     
  9965                           ; BSR set to: 14
  9966                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9967   0050A8  89DA               	bsf	218,4,b	;volatile
  9968   0050AA                     
  9969                           ; BSR set to: 14
  9970                           ;i2c.c: 61:   return tmp;
  9971   0050AA  5013               	movf	I2C_2_Master_Read@tmp^0,w,c
  9972   0050AC                     
  9973                           ; BSR set to: 14
  9974   0050AC  0012               	return		;funcret
  9975   0050AE                     __end_of_I2C_2_Master_Read:
  9976                           	callstack 0
  9977                           
  9978 ;; *************** function _I2C_2_Master_Idle *****************
  9979 ;; Defined at:
  9980 ;;		line 22 in file "i2c.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;		None
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;		None
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  1    wreg      void 
  9987 ;; Registers used:
  9988 ;;		wreg, status,2, status,0
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9996 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9997 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9998 ;;Total ram usage:        1 bytes
  9999 ;; Hardware stack levels used: 1
 10000 ;; Hardware stack levels required when called: 6
 10001 ;; This function calls:
 10002 ;;		Nothing
 10003 ;; This function is called by:
 10004 ;;		_I2C_2_Master_Start
 10005 ;;		_I2C_2_Master_RepStart
 10006 ;;		_I2C_2_Master_Stop
 10007 ;;		_I2C_2_Master_Write
 10008 ;;		_I2C_2_Master_Read
 10009 ;; This function uses a non-reentrant model
 10010 ;;
 10011                           
 10012                           	psect	text32
 10013   0051C6                     __ptext32:
 10014                           	callstack 0
 10015   0051C6                     _I2C_2_Master_Idle:
 10016                           	callstack 22
 10017   0051C6                     l267:
 10018   0051C6  010E               	movlb	14	; () banked
 10019   0051C8  B5D8               	btfsc	216,2,b	;volatile
 10020   0051CA  EFE9  F028         	goto	u1811
 10021   0051CE  EFEB  F028         	goto	u1810
 10022   0051D2                     u1811:
 10023   0051D2  EFE3  F028         	goto	l267
 10024   0051D6                     u1810:
 10025   0051D6                     
 10026                           ; BSR set to: 14
 10027   0051D6  CEDA F010          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10028   0051DA  0E1F               	movlw	31
 10029   0051DC  1610               	andwf	??_I2C_2_Master_Idle^0,f,c
 10030   0051DE  A4D8               	btfss	status,2,c
 10031   0051E0  EFF4  F028         	goto	u1821
 10032   0051E4  EFF6  F028         	goto	u1820
 10033   0051E8                     u1821:
 10034   0051E8  EFE3  F028         	goto	l267
 10035   0051EC                     u1820:
 10036   0051EC                     
 10037                           ; BSR set to: 14
 10038   0051EC  0012               	return		;funcret
 10039   0051EE                     __end_of_I2C_2_Master_Idle:
 10040                           	callstack 0
 10041                           
 10042 ;; *************** function _calibration *****************
 10043 ;; Defined at:
 10044 ;;		line 599 in file "dc_motor.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;  mL              2   48[COMRAM] PTR struct DC_motor
 10047 ;;		 -> main@motorL(10), 
 10048 ;;  mR              2   50[COMRAM] PTR struct DC_motor
 10049 ;;		 -> main@motorR(10), 
 10050 ;;  turnSpeed       1   52[COMRAM] unsigned char 
 10051 ;;  turnDuration    2   53[COMRAM] PTR unsigned char 
 10052 ;;		 -> main@turnDuration(1), 
 10053 ;;  turnRamp        1   55[COMRAM] unsigned char 
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;		None
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  1    wreg      void 
 10058 ;; Registers used:
 10059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10065 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10068 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10069 ;;Total ram usage:       10 bytes
 10070 ;; Hardware stack levels used: 1
 10071 ;; Hardware stack levels required when called: 9
 10072 ;; This function calls:
 10073 ;;		_turnLeft
 10074 ;;		_turnRight
 10075 ;; This function is called by:
 10076 ;;		_main
 10077 ;; This function uses a non-reentrant model
 10078 ;;
 10079                           
 10080                           	psect	text33
 10081   003AC2                     __ptext33:
 10082                           	callstack 0
 10083   003AC2                     _calibration:
 10084                           	callstack 21
 10085   003AC2                     
 10086                           ;dc_motor.c: 599: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 600: {;dc_motor.c: 602:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10087   003AC2  C031  F023         	movff	calibration@mL,turnLeft@mL
 10088   003AC6  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10089   003ACA  C033  F025         	movff	calibration@mR,turnLeft@mR
 10090   003ACE  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10091   003AD2  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10092   003AD6  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10093   003ADA  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10094   003ADE  50DF               	movf	indf2,w,c
 10095   003AE0  6E28               	movwf	turnLeft@turnDuration^0,c
 10096   003AE2  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10097   003AE6  EC79  F022         	call	_turnLeft	;wreg free
 10098   003AEA                     
 10099                           ;dc_motor.c: 603:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10100   003AEA  0E05               	movlw	5
 10101   003AEC  6E3A               	movwf	(??_calibration+1)^0,c
 10102   003AEE  0E0F               	movlw	15
 10103   003AF0  6E39               	movwf	??_calibration^0,c
 10104   003AF2  0EF1               	movlw	241
 10105   003AF4                     u4757:
 10106   003AF4  2EE8               	decfsz	wreg,f,c
 10107   003AF6  D7FE               	bra	u4757
 10108   003AF8  2E39               	decfsz	??_calibration^0,f,c
 10109   003AFA  D7FC               	bra	u4757
 10110   003AFC  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10111   003AFE  D7FA               	bra	u4757
 10112   003B00  0000               	nop	
 10113   003B02                     
 10114                           ;dc_motor.c: 604:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10115   003B02  C031  F023         	movff	calibration@mL,turnLeft@mL
 10116   003B06  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10117   003B0A  C033  F025         	movff	calibration@mR,turnLeft@mR
 10118   003B0E  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10119   003B12  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10120   003B16  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10121   003B1A  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10122   003B1E  50DF               	movf	indf2,w,c
 10123   003B20  6E28               	movwf	turnLeft@turnDuration^0,c
 10124   003B22  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10125   003B26  EC79  F022         	call	_turnLeft	;wreg free
 10126                           
 10127                           ;dc_motor.c: 605:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10128   003B2A  0E05               	movlw	5
 10129   003B2C  6E3A               	movwf	(??_calibration+1)^0,c
 10130   003B2E  0E0F               	movlw	15
 10131   003B30  6E39               	movwf	??_calibration^0,c
 10132   003B32  0EF1               	movlw	241
 10133   003B34                     u4767:
 10134   003B34  2EE8               	decfsz	wreg,f,c
 10135   003B36  D7FE               	bra	u4767
 10136   003B38  2E39               	decfsz	??_calibration^0,f,c
 10137   003B3A  D7FC               	bra	u4767
 10138   003B3C  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10139   003B3E  D7FA               	bra	u4767
 10140   003B40  0000               	nop	
 10141   003B42                     
 10142                           ;dc_motor.c: 606:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10143   003B42  C031  F023         	movff	calibration@mL,turnRight@mL
 10144   003B46  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10145   003B4A  C033  F025         	movff	calibration@mR,turnRight@mR
 10146   003B4E  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10147   003B52  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10148   003B56  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10149   003B5A  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10150   003B5E  50DF               	movf	indf2,w,c
 10151   003B60  6E28               	movwf	turnRight@turnDuration^0,c
 10152   003B62  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10153   003B66  EC8C  F021         	call	_turnRight	;wreg free
 10154   003B6A                     
 10155                           ;dc_motor.c: 607:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10156   003B6A  0E05               	movlw	5
 10157   003B6C  6E3A               	movwf	(??_calibration+1)^0,c
 10158   003B6E  0E0F               	movlw	15
 10159   003B70  6E39               	movwf	??_calibration^0,c
 10160   003B72  0EF1               	movlw	241
 10161   003B74                     u4777:
 10162   003B74  2EE8               	decfsz	wreg,f,c
 10163   003B76  D7FE               	bra	u4777
 10164   003B78  2E39               	decfsz	??_calibration^0,f,c
 10165   003B7A  D7FC               	bra	u4777
 10166   003B7C  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10167   003B7E  D7FA               	bra	u4777
 10168   003B80  0000               	nop	
 10169                           
 10170                           ;dc_motor.c: 608:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10171   003B82  C031  F023         	movff	calibration@mL,turnRight@mL
 10172   003B86  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10173   003B8A  C033  F025         	movff	calibration@mR,turnRight@mR
 10174   003B8E  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10175   003B92  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10176   003B96  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10177   003B9A  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10178   003B9E  50DF               	movf	indf2,w,c
 10179   003BA0  6E28               	movwf	turnRight@turnDuration^0,c
 10180   003BA2  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10181   003BA6  EC8C  F021         	call	_turnRight	;wreg free
 10182   003BAA                     l737:
 10183   003BAA  A48E               	btfss	142,2,c	;volatile
 10184   003BAC  EFDA  F01D         	goto	u2751
 10185   003BB0  EFDC  F01D         	goto	u2750
 10186   003BB4                     u2751:
 10187   003BB4  EFE3  F01D         	goto	l741
 10188   003BB8                     u2750:
 10189   003BB8  B68E               	btfsc	142,3,c	;volatile
 10190   003BBA  EFE1  F01D         	goto	u2761
 10191   003BBE  EFE3  F01D         	goto	u2760
 10192   003BC2                     u2761:
 10193   003BC2  EFD5  F01D         	goto	l737
 10194   003BC6                     u2760:
 10195   003BC6                     l741:
 10196                           
 10197                           ;dc_motor.c: 613:         if (!PORTFbits.RF2 && *turnDuration>0) {
 10198   003BC6  B48E               	btfsc	142,2,c	;volatile
 10199   003BC8  EFE8  F01D         	goto	u2771
 10200   003BCC  EFEA  F01D         	goto	u2770
 10201   003BD0                     u2771:
 10202   003BD0  EFFE  F01D         	goto	l742
 10203   003BD4                     u2770:
 10204   003BD4  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10205   003BD8  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10206   003BDC  50DF               	movf	indf2,w,c
 10207   003BDE  B4D8               	btfsc	status,2,c
 10208   003BE0  EFF4  F01D         	goto	u2781
 10209   003BE4  EFF6  F01D         	goto	u2780
 10210   003BE8                     u2781:
 10211   003BE8  EFFE  F01D         	goto	l742
 10212   003BEC                     u2780:
 10213   003BEC                     
 10214                           ;dc_motor.c: 614:             (*turnDuration)--;
 10215   003BEC  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10216   003BF0  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10217   003BF4  06DF               	decf	indf2,f,c
 10218   003BF6                     
 10219                           ;dc_motor.c: 615:             LATDbits.LATD7 = 1;
 10220   003BF6  8E7C               	bsf	124,7,c	;volatile
 10221                           
 10222                           ;dc_motor.c: 616:         }
 10223   003BF8  EF0B  F01E         	goto	l3907
 10224   003BFC                     l742:
 10225   003BFC  B68E               	btfsc	142,3,c	;volatile
 10226   003BFE  EF03  F01E         	goto	u2791
 10227   003C02  EF05  F01E         	goto	u2790
 10228   003C06                     u2791:
 10229   003C06  EF0B  F01E         	goto	l3907
 10230   003C0A                     u2790:
 10231   003C0A                     
 10232                           ;dc_motor.c: 619:             (*turnDuration)++;
 10233   003C0A  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10234   003C0E  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10235   003C12  2ADF               	incf	indf2,f,c
 10236   003C14                     
 10237                           ;dc_motor.c: 620:             LATHbits.LATH3 = 1;
 10238   003C14  8680               	bsf	128,3,c	;volatile
 10239   003C16                     l3907:
 10240                           
 10241                           ;dc_motor.c: 623:         _delay((unsigned long)((500)*(64000000/4000.0)));
 10242   003C16  0E29               	movlw	41
 10243   003C18  6E3A               	movwf	(??_calibration+1)^0,c
 10244   003C1A  0E96               	movlw	150
 10245   003C1C  6E39               	movwf	??_calibration^0,c
 10246   003C1E  0E7F               	movlw	127
 10247   003C20                     u4787:
 10248   003C20  2EE8               	decfsz	wreg,f,c
 10249   003C22  D7FE               	bra	u4787
 10250   003C24  2E39               	decfsz	??_calibration^0,f,c
 10251   003C26  D7FC               	bra	u4787
 10252   003C28  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10253   003C2A  D7FA               	bra	u4787
 10254   003C2C  0000               	nop	
 10255   003C2E                     
 10256                           ;dc_motor.c: 625:         if (!PORTFbits.RF3) {
 10257   003C2E  B68E               	btfsc	142,3,c	;volatile
 10258   003C30  EF1C  F01E         	goto	u2801
 10259   003C34  EF1E  F01E         	goto	u2800
 10260   003C38                     u2801:
 10261   003C38  EF25  F01E         	goto	l745
 10262   003C3C                     u2800:
 10263   003C3C                     
 10264                           ;dc_motor.c: 626:             (*turnDuration)--;
 10265   003C3C  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10266   003C40  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10267   003C44  06DF               	decf	indf2,f,c
 10268                           
 10269                           ;dc_motor.c: 627:             break;
 10270   003C46  EF9D  F01E         	goto	l746
 10271   003C4A                     l745:
 10272                           
 10273                           ;dc_motor.c: 630:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10274   003C4A  9680               	bcf	128,3,c	;volatile
 10275   003C4C  9E7C               	bcf	124,7,c	;volatile
 10276   003C4E                     
 10277                           ;dc_motor.c: 633:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10278   003C4E  C031  F023         	movff	calibration@mL,turnLeft@mL
 10279   003C52  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10280   003C56  C033  F025         	movff	calibration@mR,turnLeft@mR
 10281   003C5A  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10282   003C5E  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10283   003C62  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10284   003C66  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10285   003C6A  50DF               	movf	indf2,w,c
 10286   003C6C  6E28               	movwf	turnLeft@turnDuration^0,c
 10287   003C6E  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10288   003C72  EC79  F022         	call	_turnLeft	;wreg free
 10289   003C76                     
 10290                           ;dc_motor.c: 634:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10291   003C76  0E05               	movlw	5
 10292   003C78  6E3A               	movwf	(??_calibration+1)^0,c
 10293   003C7A  0E0F               	movlw	15
 10294   003C7C  6E39               	movwf	??_calibration^0,c
 10295   003C7E  0EF1               	movlw	241
 10296   003C80                     u4797:
 10297   003C80  2EE8               	decfsz	wreg,f,c
 10298   003C82  D7FE               	bra	u4797
 10299   003C84  2E39               	decfsz	??_calibration^0,f,c
 10300   003C86  D7FC               	bra	u4797
 10301   003C88  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10302   003C8A  D7FA               	bra	u4797
 10303   003C8C  0000               	nop	
 10304   003C8E                     
 10305                           ;dc_motor.c: 635:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10306   003C8E  C031  F023         	movff	calibration@mL,turnLeft@mL
 10307   003C92  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10308   003C96  C033  F025         	movff	calibration@mR,turnLeft@mR
 10309   003C9A  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10310   003C9E  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10311   003CA2  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10312   003CA6  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10313   003CAA  50DF               	movf	indf2,w,c
 10314   003CAC  6E28               	movwf	turnLeft@turnDuration^0,c
 10315   003CAE  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10316   003CB2  EC79  F022         	call	_turnLeft	;wreg free
 10317                           
 10318                           ;dc_motor.c: 636:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10319   003CB6  0E05               	movlw	5
 10320   003CB8  6E3A               	movwf	(??_calibration+1)^0,c
 10321   003CBA  0E0F               	movlw	15
 10322   003CBC  6E39               	movwf	??_calibration^0,c
 10323   003CBE  0EF1               	movlw	241
 10324   003CC0                     u4807:
 10325   003CC0  2EE8               	decfsz	wreg,f,c
 10326   003CC2  D7FE               	bra	u4807
 10327   003CC4  2E39               	decfsz	??_calibration^0,f,c
 10328   003CC6  D7FC               	bra	u4807
 10329   003CC8  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10330   003CCA  D7FA               	bra	u4807
 10331   003CCC  0000               	nop	
 10332   003CCE                     
 10333                           ;dc_motor.c: 637:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10334   003CCE  C031  F023         	movff	calibration@mL,turnRight@mL
 10335   003CD2  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10336   003CD6  C033  F025         	movff	calibration@mR,turnRight@mR
 10337   003CDA  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10338   003CDE  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10339   003CE2  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10340   003CE6  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10341   003CEA  50DF               	movf	indf2,w,c
 10342   003CEC  6E28               	movwf	turnRight@turnDuration^0,c
 10343   003CEE  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10344   003CF2  EC8C  F021         	call	_turnRight	;wreg free
 10345   003CF6                     
 10346                           ;dc_motor.c: 638:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10347   003CF6  0E05               	movlw	5
 10348   003CF8  6E3A               	movwf	(??_calibration+1)^0,c
 10349   003CFA  0E0F               	movlw	15
 10350   003CFC  6E39               	movwf	??_calibration^0,c
 10351   003CFE  0EF1               	movlw	241
 10352   003D00                     u4817:
 10353   003D00  2EE8               	decfsz	wreg,f,c
 10354   003D02  D7FE               	bra	u4817
 10355   003D04  2E39               	decfsz	??_calibration^0,f,c
 10356   003D06  D7FC               	bra	u4817
 10357   003D08  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10358   003D0A  D7FA               	bra	u4817
 10359   003D0C  0000               	nop	
 10360                           
 10361                           ;dc_motor.c: 639:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10362   003D0E  C031  F023         	movff	calibration@mL,turnRight@mL
 10363   003D12  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10364   003D16  C033  F025         	movff	calibration@mR,turnRight@mR
 10365   003D1A  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10366   003D1E  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10367   003D22  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10368   003D26  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10369   003D2A  50DF               	movf	indf2,w,c
 10370   003D2C  6E28               	movwf	turnRight@turnDuration^0,c
 10371   003D2E  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10372   003D32  EC8C  F021         	call	_turnRight	;wreg free
 10373   003D36  EFD5  F01D         	goto	l737
 10374   003D3A                     l746:
 10375                           
 10376                           ;dc_motor.c: 644:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
 10377   003D3A  8680               	bsf	128,3,c	;volatile
 10378   003D3C  8E7C               	bsf	124,7,c	;volatile
 10379   003D3E                     
 10380                           ;dc_motor.c: 645:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10381   003D3E  0E09               	movlw	9
 10382   003D40  6E3A               	movwf	(??_calibration+1)^0,c
 10383   003D42  0E1E               	movlw	30
 10384   003D44  6E39               	movwf	??_calibration^0,c
 10385   003D46  0EE4               	movlw	228
 10386   003D48                     u4827:
 10387   003D48  2EE8               	decfsz	wreg,f,c
 10388   003D4A  D7FE               	bra	u4827
 10389   003D4C  2E39               	decfsz	??_calibration^0,f,c
 10390   003D4E  D7FC               	bra	u4827
 10391   003D50  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10392   003D52  D7FA               	bra	u4827
 10393   003D54  D000               	nop2	
 10394   003D56                     
 10395                           ;dc_motor.c: 646:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10396   003D56  9680               	bcf	128,3,c	;volatile
 10397   003D58  9E7C               	bcf	124,7,c	;volatile
 10398   003D5A  0012               	return		;funcret
 10399   003D5C                     __end_of_calibration:
 10400                           	callstack 0
 10401                           
 10402 ;; *************** function _turnRight *****************
 10403 ;; Defined at:
 10404 ;;		line 419 in file "dc_motor.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  mL              2   34[COMRAM] PTR struct DC_motor
 10407 ;;		 -> main@motorL(10), 
 10408 ;;  mR              2   36[COMRAM] PTR struct DC_motor
 10409 ;;		 -> main@motorR(10), 
 10410 ;;  turnSpeed       1   38[COMRAM] unsigned char 
 10411 ;;  turnDuration    1   39[COMRAM] unsigned char 
 10412 ;;  turnRamp        1   40[COMRAM] unsigned char 
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;  cur_power       2   46[COMRAM] int 
 10415 ;;  i               2   44[COMRAM] int 
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  1    wreg      void 
 10418 ;; Registers used:
 10419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10425 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10426 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10427 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10428 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10429 ;;Total ram usage:       14 bytes
 10430 ;; Hardware stack levels used: 1
 10431 ;; Hardware stack levels required when called: 8
 10432 ;; This function calls:
 10433 ;;		_setMotorPWM
 10434 ;; This function is called by:
 10435 ;;		_move
 10436 ;;		_returnHome
 10437 ;;		_lostReturnHome
 10438 ;;		_calibration
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           	psect	text34
 10443   004318                     __ptext34:
 10444                           	callstack 0
 10445   004318                     _turnRight:
 10446                           	callstack 21
 10447   004318                     
 10448                           ;dc_motor.c: 419: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 420: {;dc_motor.c: 421:     mL->dir
      +                          ection = 1;
 10449   004318  EE20 F001          	lfsr	2,1
 10450   00431C  5023               	movf	turnRight@mL^0,w,c
 10451   00431E  26D9               	addwf	fsr2l,f,c
 10452   004320  5024               	movf	(turnRight@mL+1)^0,w,c
 10453   004322  22DA               	addwfc	fsr2h,f,c
 10454   004324  0E01               	movlw	1
 10455   004326  6EDF               	movwf	indf2,c
 10456                           
 10457                           ;dc_motor.c: 422:     mR->direction = 0;
 10458   004328  EE20 F001          	lfsr	2,1
 10459   00432C  5025               	movf	turnRight@mR^0,w,c
 10460   00432E  26D9               	addwf	fsr2l,f,c
 10461   004330  5026               	movf	(turnRight@mR+1)^0,w,c
 10462   004332  22DA               	addwfc	fsr2h,f,c
 10463   004334  6ADF               	clrf	indf2,c
 10464   004336                     
 10465                           ;dc_motor.c: 423:     int i;;dc_motor.c: 424:     int cur_power;;dc_motor.c: 425:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 10466   004336  0E00               	movlw	0
 10467   004338  6E30               	movwf	(turnRight@cur_power+1)^0,c
 10468   00433A  0E01               	movlw	1
 10469   00433C  6E2F               	movwf	turnRight@cur_power^0,c
 10470   00433E  EFEB  F021         	goto	l3177
 10471   004342                     l3163:
 10472                           
 10473                           ;dc_motor.c: 426:         mL->power = cur_power+mL->compensation;
 10474   004342  EE20 F009          	lfsr	2,9
 10475   004346  5023               	movf	turnRight@mL^0,w,c
 10476   004348  26D9               	addwf	fsr2l,f,c
 10477   00434A  5024               	movf	(turnRight@mL+1)^0,w,c
 10478   00434C  22DA               	addwfc	fsr2h,f,c
 10479   00434E  50DF               	movf	indf2,w,c
 10480   004350  242F               	addwf	turnRight@cur_power^0,w,c
 10481   004352  C023  FFD9         	movff	turnRight@mL,fsr2l
 10482   004356  C024  FFDA         	movff	turnRight@mL+1,fsr2h
 10483   00435A  6EDF               	movwf	indf2,c
 10484                           
 10485                           ;dc_motor.c: 427:         mR->power = cur_power+mR->compensation;
 10486   00435C  EE20 F009          	lfsr	2,9
 10487   004360  5025               	movf	turnRight@mR^0,w,c
 10488   004362  26D9               	addwf	fsr2l,f,c
 10489   004364  5026               	movf	(turnRight@mR+1)^0,w,c
 10490   004366  22DA               	addwfc	fsr2h,f,c
 10491   004368  50DF               	movf	indf2,w,c
 10492   00436A  242F               	addwf	turnRight@cur_power^0,w,c
 10493   00436C  C025  FFD9         	movff	turnRight@mR,fsr2l
 10494   004370  C026  FFDA         	movff	turnRight@mR+1,fsr2h
 10495   004374  6EDF               	movwf	indf2,c
 10496   004376                     
 10497                           ;dc_motor.c: 428:         setMotorPWM(mL);
 10498   004376  C023  F01D         	movff	turnRight@mL,setMotorPWM@m
 10499   00437A  C024  F01E         	movff	turnRight@mL+1,setMotorPWM@m+1
 10500   00437E  EC66  F023         	call	_setMotorPWM	;wreg free
 10501   004382                     
 10502                           ;dc_motor.c: 429:         setMotorPWM(mR);
 10503   004382  C025  F01D         	movff	turnRight@mR,setMotorPWM@m
 10504   004386  C026  F01E         	movff	turnRight@mR+1,setMotorPWM@m+1
 10505   00438A  EC66  F023         	call	_setMotorPWM	;wreg free
 10506   00438E                     
 10507                           ;dc_motor.c: 430:         for (i=0;i<turnRamp;i++) {
 10508   00438E  0E00               	movlw	0
 10509   004390  6E2E               	movwf	(turnRight@i+1)^0,c
 10510   004392  0E00               	movlw	0
 10511   004394  6E2D               	movwf	turnRight@i^0,c
 10512   004396  EFD7  F021         	goto	l647
 10513   00439A                     l3171:
 10514                           
 10515                           ;dc_motor.c: 431:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10516   00439A  0E68               	movlw	104
 10517   00439C  6E2A               	movwf	??_turnRight^0,c
 10518   00439E  0EE4               	movlw	228
 10519   0043A0                     u4837:
 10520   0043A0  2EE8               	decfsz	wreg,f,c
 10521   0043A2  D7FE               	bra	u4837
 10522   0043A4  2E2A               	decfsz	??_turnRight^0,f,c
 10523   0043A6  D7FC               	bra	u4837
 10524   0043A8  D000               	nop2	
 10525   0043AA                     
 10526                           ;dc_motor.c: 432:         }
 10527   0043AA  4A2D               	infsnz	turnRight@i^0,f,c
 10528   0043AC  2A2E               	incf	(turnRight@i+1)^0,f,c
 10529   0043AE                     l647:
 10530   0043AE  5029               	movf	turnRight@turnRamp^0,w,c
 10531   0043B0  6E2A               	movwf	??_turnRight^0,c
 10532   0043B2  6A2B               	clrf	(??_turnRight+1)^0,c
 10533   0043B4  502A               	movf	??_turnRight^0,w,c
 10534   0043B6  5C2D               	subwf	turnRight@i^0,w,c
 10535   0043B8  502E               	movf	(turnRight@i+1)^0,w,c
 10536   0043BA  0A80               	xorlw	128
 10537   0043BC  6E2C               	movwf	(??_turnRight+2)^0,c
 10538   0043BE  502B               	movf	(??_turnRight+1)^0,w,c
 10539   0043C0  0A80               	xorlw	128
 10540   0043C2  582C               	subwfb	(??_turnRight+2)^0,w,c
 10541   0043C4  A0D8               	btfss	status,0,c
 10542   0043C6  EFE7  F021         	goto	u1981
 10543   0043CA  EFE9  F021         	goto	u1980
 10544   0043CE                     u1981:
 10545   0043CE  EFCD  F021         	goto	l3171
 10546   0043D2                     u1980:
 10547   0043D2                     
 10548                           ;dc_motor.c: 433:     }
 10549   0043D2  4A2F               	infsnz	turnRight@cur_power^0,f,c
 10550   0043D4  2A30               	incf	(turnRight@cur_power+1)^0,f,c
 10551   0043D6                     l3177:
 10552   0043D6  5027               	movf	turnRight@turnSpeed^0,w,c
 10553   0043D8  6E2A               	movwf	??_turnRight^0,c
 10554   0043DA  6A2B               	clrf	(??_turnRight+1)^0,c
 10555   0043DC  502F               	movf	turnRight@cur_power^0,w,c
 10556   0043DE  5C2A               	subwf	??_turnRight^0,w,c
 10557   0043E0  502B               	movf	(??_turnRight+1)^0,w,c
 10558   0043E2  0A80               	xorlw	128
 10559   0043E4  6E2C               	movwf	(??_turnRight+2)^0,c
 10560   0043E6  5030               	movf	(turnRight@cur_power+1)^0,w,c
 10561   0043E8  0A80               	xorlw	128
 10562   0043EA  582C               	subwfb	(??_turnRight+2)^0,w,c
 10563   0043EC  B0D8               	btfsc	status,0,c
 10564   0043EE  EFFB  F021         	goto	u1991
 10565   0043F2  EFFD  F021         	goto	u1990
 10566   0043F6                     u1991:
 10567   0043F6  EFA1  F021         	goto	l3163
 10568   0043FA                     u1990:
 10569   0043FA                     
 10570                           ;dc_motor.c: 435:     for (i=0;i<turnDuration;i++) {
 10571   0043FA  0E00               	movlw	0
 10572   0043FC  6E2E               	movwf	(turnRight@i+1)^0,c
 10573   0043FE  0E00               	movlw	0
 10574   004400  6E2D               	movwf	turnRight@i^0,c
 10575   004402  EF0D  F022         	goto	l651
 10576   004406                     l3181:
 10577                           
 10578                           ;dc_motor.c: 436:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10579   004406  0E68               	movlw	104
 10580   004408  6E2A               	movwf	??_turnRight^0,c
 10581   00440A  0EE4               	movlw	228
 10582   00440C                     u4847:
 10583   00440C  2EE8               	decfsz	wreg,f,c
 10584   00440E  D7FE               	bra	u4847
 10585   004410  2E2A               	decfsz	??_turnRight^0,f,c
 10586   004412  D7FC               	bra	u4847
 10587   004414  D000               	nop2	
 10588   004416                     
 10589                           ;dc_motor.c: 437:         }
 10590   004416  4A2D               	infsnz	turnRight@i^0,f,c
 10591   004418  2A2E               	incf	(turnRight@i+1)^0,f,c
 10592   00441A                     l651:
 10593   00441A  5028               	movf	turnRight@turnDuration^0,w,c
 10594   00441C  6E2A               	movwf	??_turnRight^0,c
 10595   00441E  6A2B               	clrf	(??_turnRight+1)^0,c
 10596   004420  502A               	movf	??_turnRight^0,w,c
 10597   004422  5C2D               	subwf	turnRight@i^0,w,c
 10598   004424  502E               	movf	(turnRight@i+1)^0,w,c
 10599   004426  0A80               	xorlw	128
 10600   004428  6E2C               	movwf	(??_turnRight+2)^0,c
 10601   00442A  502B               	movf	(??_turnRight+1)^0,w,c
 10602   00442C  0A80               	xorlw	128
 10603   00442E  582C               	subwfb	(??_turnRight+2)^0,w,c
 10604   004430  A0D8               	btfss	status,0,c
 10605   004432  EF1D  F022         	goto	u2001
 10606   004436  EF1F  F022         	goto	u2000
 10607   00443A                     u2001:
 10608   00443A  EF03  F022         	goto	l3181
 10609   00443E                     u2000:
 10610   00443E                     
 10611                           ;dc_motor.c: 439:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 10612   00443E  C027  F02F         	movff	turnRight@turnSpeed,turnRight@cur_power
 10613   004442  6A30               	clrf	(turnRight@cur_power+1)^0,c
 10614   004444                     l3185:
 10615   004444  BE30               	btfsc	(turnRight@cur_power+1)^0,7,c
 10616   004446  EF29  F022         	goto	u2010
 10617   00444A  EF27  F022         	goto	u2011
 10618   00444E                     u2011:
 10619   00444E  EF2B  F022         	goto	l3189
 10620   004452                     u2010:
 10621   004452  EF78  F022         	goto	l659
 10622   004456                     l3189:
 10623                           
 10624                           ;dc_motor.c: 440:         mL->power = cur_power+mL->compensation;
 10625   004456  EE20 F009          	lfsr	2,9
 10626   00445A  5023               	movf	turnRight@mL^0,w,c
 10627   00445C  26D9               	addwf	fsr2l,f,c
 10628   00445E  5024               	movf	(turnRight@mL+1)^0,w,c
 10629   004460  22DA               	addwfc	fsr2h,f,c
 10630   004462  50DF               	movf	indf2,w,c
 10631   004464  242F               	addwf	turnRight@cur_power^0,w,c
 10632   004466  C023  FFD9         	movff	turnRight@mL,fsr2l
 10633   00446A  C024  FFDA         	movff	turnRight@mL+1,fsr2h
 10634   00446E  6EDF               	movwf	indf2,c
 10635                           
 10636                           ;dc_motor.c: 441:         mR->power = cur_power+mR->compensation;
 10637   004470  EE20 F009          	lfsr	2,9
 10638   004474  5025               	movf	turnRight@mR^0,w,c
 10639   004476  26D9               	addwf	fsr2l,f,c
 10640   004478  5026               	movf	(turnRight@mR+1)^0,w,c
 10641   00447A  22DA               	addwfc	fsr2h,f,c
 10642   00447C  50DF               	movf	indf2,w,c
 10643   00447E  242F               	addwf	turnRight@cur_power^0,w,c
 10644   004480  C025  FFD9         	movff	turnRight@mR,fsr2l
 10645   004484  C026  FFDA         	movff	turnRight@mR+1,fsr2h
 10646   004488  6EDF               	movwf	indf2,c
 10647   00448A                     
 10648                           ;dc_motor.c: 442:         setMotorPWM(mL);
 10649   00448A  C023  F01D         	movff	turnRight@mL,setMotorPWM@m
 10650   00448E  C024  F01E         	movff	turnRight@mL+1,setMotorPWM@m+1
 10651   004492  EC66  F023         	call	_setMotorPWM	;wreg free
 10652   004496                     
 10653                           ;dc_motor.c: 443:         setMotorPWM(mR);
 10654   004496  C025  F01D         	movff	turnRight@mR,setMotorPWM@m
 10655   00449A  C026  F01E         	movff	turnRight@mR+1,setMotorPWM@m+1
 10656   00449E  EC66  F023         	call	_setMotorPWM	;wreg free
 10657   0044A2                     
 10658                           ;dc_motor.c: 444:         for (i=0;i<turnRamp;i++) {
 10659   0044A2  0E00               	movlw	0
 10660   0044A4  6E2E               	movwf	(turnRight@i+1)^0,c
 10661   0044A6  0E00               	movlw	0
 10662   0044A8  6E2D               	movwf	turnRight@i^0,c
 10663   0044AA  EF61  F022         	goto	l656
 10664   0044AE                     l3197:
 10665                           
 10666                           ;dc_motor.c: 445:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10667   0044AE  0E68               	movlw	104
 10668   0044B0  6E2A               	movwf	??_turnRight^0,c
 10669   0044B2  0EE4               	movlw	228
 10670   0044B4                     u4857:
 10671   0044B4  2EE8               	decfsz	wreg,f,c
 10672   0044B6  D7FE               	bra	u4857
 10673   0044B8  2E2A               	decfsz	??_turnRight^0,f,c
 10674   0044BA  D7FC               	bra	u4857
 10675   0044BC  D000               	nop2	
 10676   0044BE                     
 10677                           ;dc_motor.c: 446:         }
 10678   0044BE  4A2D               	infsnz	turnRight@i^0,f,c
 10679   0044C0  2A2E               	incf	(turnRight@i+1)^0,f,c
 10680   0044C2                     l656:
 10681   0044C2  5029               	movf	turnRight@turnRamp^0,w,c
 10682   0044C4  6E2A               	movwf	??_turnRight^0,c
 10683   0044C6  6A2B               	clrf	(??_turnRight+1)^0,c
 10684   0044C8  502A               	movf	??_turnRight^0,w,c
 10685   0044CA  5C2D               	subwf	turnRight@i^0,w,c
 10686   0044CC  502E               	movf	(turnRight@i+1)^0,w,c
 10687   0044CE  0A80               	xorlw	128
 10688   0044D0  6E2C               	movwf	(??_turnRight+2)^0,c
 10689   0044D2  502B               	movf	(??_turnRight+1)^0,w,c
 10690   0044D4  0A80               	xorlw	128
 10691   0044D6  582C               	subwfb	(??_turnRight+2)^0,w,c
 10692   0044D8  A0D8               	btfss	status,0,c
 10693   0044DA  EF71  F022         	goto	u2021
 10694   0044DE  EF73  F022         	goto	u2020
 10695   0044E2                     u2021:
 10696   0044E2  EF57  F022         	goto	l3197
 10697   0044E6                     u2020:
 10698   0044E6                     
 10699                           ;dc_motor.c: 447:     }
 10700   0044E6  062F               	decf	turnRight@cur_power^0,f,c
 10701   0044E8  A0D8               	btfss	status,0,c
 10702   0044EA  0630               	decf	(turnRight@cur_power+1)^0,f,c
 10703   0044EC  EF22  F022         	goto	l3185
 10704   0044F0                     l659:
 10705   0044F0  0012               	return		;funcret
 10706   0044F2                     __end_of_turnRight:
 10707                           	callstack 0
 10708                           
 10709 ;; *************** function _turnLeft *****************
 10710 ;; Defined at:
 10711 ;;		line 387 in file "dc_motor.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;  mL              2   34[COMRAM] PTR struct DC_motor
 10714 ;;		 -> main@motorL(10), 
 10715 ;;  mR              2   36[COMRAM] PTR struct DC_motor
 10716 ;;		 -> main@motorR(10), 
 10717 ;;  turnSpeed       1   38[COMRAM] unsigned char 
 10718 ;;  turnDuration    1   39[COMRAM] unsigned char 
 10719 ;;  turnRamp        1   40[COMRAM] unsigned char 
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;  cur_power       2   46[COMRAM] int 
 10722 ;;  i               2   44[COMRAM] int 
 10723 ;; Return value:  Size  Location     Type
 10724 ;;                  1    wreg      void 
 10725 ;; Registers used:
 10726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10727 ;; Tracked objects:
 10728 ;;		On entry : 0/0
 10729 ;;		On exit  : 0/0
 10730 ;;		Unchanged: 0/0
 10731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10732 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10733 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10734 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10735 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10736 ;;Total ram usage:       14 bytes
 10737 ;; Hardware stack levels used: 1
 10738 ;; Hardware stack levels required when called: 8
 10739 ;; This function calls:
 10740 ;;		_setMotorPWM
 10741 ;; This function is called by:
 10742 ;;		_move
 10743 ;;		_returnHome
 10744 ;;		_lostReturnHome
 10745 ;;		_calibration
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749                           	psect	text35
 10750   0044F2                     __ptext35:
 10751                           	callstack 0
 10752   0044F2                     _turnLeft:
 10753                           	callstack 21
 10754   0044F2                     
 10755                           ;dc_motor.c: 387: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 388: {;dc_motor.c: 389:     mL->dire
      +                          ction = 0;
 10756   0044F2  EE20 F001          	lfsr	2,1
 10757   0044F6  5023               	movf	turnLeft@mL^0,w,c
 10758   0044F8  26D9               	addwf	fsr2l,f,c
 10759   0044FA  5024               	movf	(turnLeft@mL+1)^0,w,c
 10760   0044FC  22DA               	addwfc	fsr2h,f,c
 10761   0044FE  6ADF               	clrf	indf2,c
 10762                           
 10763                           ;dc_motor.c: 390:     mR->direction = 1;
 10764   004500  EE20 F001          	lfsr	2,1
 10765   004504  5025               	movf	turnLeft@mR^0,w,c
 10766   004506  26D9               	addwf	fsr2l,f,c
 10767   004508  5026               	movf	(turnLeft@mR+1)^0,w,c
 10768   00450A  22DA               	addwfc	fsr2h,f,c
 10769   00450C  0E01               	movlw	1
 10770   00450E  6EDF               	movwf	indf2,c
 10771   004510                     
 10772                           ;dc_motor.c: 391:     int i;;dc_motor.c: 392:     int cur_power;;dc_motor.c: 393:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 10773   004510  0E00               	movlw	0
 10774   004512  6E30               	movwf	(turnLeft@cur_power+1)^0,c
 10775   004514  0E01               	movlw	1
 10776   004516  6E2F               	movwf	turnLeft@cur_power^0,c
 10777   004518  EFD8  F022         	goto	l3223
 10778   00451C                     l3209:
 10779                           
 10780                           ;dc_motor.c: 394:         mL->power = cur_power+mL->compensation;
 10781   00451C  EE20 F009          	lfsr	2,9
 10782   004520  5023               	movf	turnLeft@mL^0,w,c
 10783   004522  26D9               	addwf	fsr2l,f,c
 10784   004524  5024               	movf	(turnLeft@mL+1)^0,w,c
 10785   004526  22DA               	addwfc	fsr2h,f,c
 10786   004528  50DF               	movf	indf2,w,c
 10787   00452A  242F               	addwf	turnLeft@cur_power^0,w,c
 10788   00452C  C023  FFD9         	movff	turnLeft@mL,fsr2l
 10789   004530  C024  FFDA         	movff	turnLeft@mL+1,fsr2h
 10790   004534  6EDF               	movwf	indf2,c
 10791                           
 10792                           ;dc_motor.c: 395:         mR->power = cur_power+mR->compensation;
 10793   004536  EE20 F009          	lfsr	2,9
 10794   00453A  5025               	movf	turnLeft@mR^0,w,c
 10795   00453C  26D9               	addwf	fsr2l,f,c
 10796   00453E  5026               	movf	(turnLeft@mR+1)^0,w,c
 10797   004540  22DA               	addwfc	fsr2h,f,c
 10798   004542  50DF               	movf	indf2,w,c
 10799   004544  242F               	addwf	turnLeft@cur_power^0,w,c
 10800   004546  C025  FFD9         	movff	turnLeft@mR,fsr2l
 10801   00454A  C026  FFDA         	movff	turnLeft@mR+1,fsr2h
 10802   00454E  6EDF               	movwf	indf2,c
 10803   004550                     
 10804                           ;dc_motor.c: 396:         setMotorPWM(mL);
 10805   004550  C023  F01D         	movff	turnLeft@mL,setMotorPWM@m
 10806   004554  C024  F01E         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10807   004558  EC66  F023         	call	_setMotorPWM	;wreg free
 10808   00455C                     
 10809                           ;dc_motor.c: 397:         setMotorPWM(mR);
 10810   00455C  C025  F01D         	movff	turnLeft@mR,setMotorPWM@m
 10811   004560  C026  F01E         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10812   004564  EC66  F023         	call	_setMotorPWM	;wreg free
 10813   004568                     
 10814                           ;dc_motor.c: 398:         for (i=0;i<turnRamp;i++) {
 10815   004568  0E00               	movlw	0
 10816   00456A  6E2E               	movwf	(turnLeft@i+1)^0,c
 10817   00456C  0E00               	movlw	0
 10818   00456E  6E2D               	movwf	turnLeft@i^0,c
 10819   004570  EFC4  F022         	goto	l630
 10820   004574                     l3217:
 10821                           
 10822                           ;dc_motor.c: 399:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10823   004574  0E68               	movlw	104
 10824   004576  6E2A               	movwf	??_turnLeft^0,c
 10825   004578  0EE4               	movlw	228
 10826   00457A                     u4867:
 10827   00457A  2EE8               	decfsz	wreg,f,c
 10828   00457C  D7FE               	bra	u4867
 10829   00457E  2E2A               	decfsz	??_turnLeft^0,f,c
 10830   004580  D7FC               	bra	u4867
 10831   004582  D000               	nop2	
 10832   004584                     
 10833                           ;dc_motor.c: 400:         }
 10834   004584  4A2D               	infsnz	turnLeft@i^0,f,c
 10835   004586  2A2E               	incf	(turnLeft@i+1)^0,f,c
 10836   004588                     l630:
 10837   004588  5029               	movf	turnLeft@turnRamp^0,w,c
 10838   00458A  6E2A               	movwf	??_turnLeft^0,c
 10839   00458C  6A2B               	clrf	(??_turnLeft+1)^0,c
 10840   00458E  502A               	movf	??_turnLeft^0,w,c
 10841   004590  5C2D               	subwf	turnLeft@i^0,w,c
 10842   004592  502E               	movf	(turnLeft@i+1)^0,w,c
 10843   004594  0A80               	xorlw	128
 10844   004596  6E2C               	movwf	(??_turnLeft+2)^0,c
 10845   004598  502B               	movf	(??_turnLeft+1)^0,w,c
 10846   00459A  0A80               	xorlw	128
 10847   00459C  582C               	subwfb	(??_turnLeft+2)^0,w,c
 10848   00459E  A0D8               	btfss	status,0,c
 10849   0045A0  EFD4  F022         	goto	u2031
 10850   0045A4  EFD6  F022         	goto	u2030
 10851   0045A8                     u2031:
 10852   0045A8  EFBA  F022         	goto	l3217
 10853   0045AC                     u2030:
 10854   0045AC                     
 10855                           ;dc_motor.c: 401:     }
 10856   0045AC  4A2F               	infsnz	turnLeft@cur_power^0,f,c
 10857   0045AE  2A30               	incf	(turnLeft@cur_power+1)^0,f,c
 10858   0045B0                     l3223:
 10859   0045B0  5027               	movf	turnLeft@turnSpeed^0,w,c
 10860   0045B2  6E2A               	movwf	??_turnLeft^0,c
 10861   0045B4  6A2B               	clrf	(??_turnLeft+1)^0,c
 10862   0045B6  502F               	movf	turnLeft@cur_power^0,w,c
 10863   0045B8  5C2A               	subwf	??_turnLeft^0,w,c
 10864   0045BA  502B               	movf	(??_turnLeft+1)^0,w,c
 10865   0045BC  0A80               	xorlw	128
 10866   0045BE  6E2C               	movwf	(??_turnLeft+2)^0,c
 10867   0045C0  5030               	movf	(turnLeft@cur_power+1)^0,w,c
 10868   0045C2  0A80               	xorlw	128
 10869   0045C4  582C               	subwfb	(??_turnLeft+2)^0,w,c
 10870   0045C6  B0D8               	btfsc	status,0,c
 10871   0045C8  EFE8  F022         	goto	u2041
 10872   0045CC  EFEA  F022         	goto	u2040
 10873   0045D0                     u2041:
 10874   0045D0  EF8E  F022         	goto	l3209
 10875   0045D4                     u2040:
 10876   0045D4                     
 10877                           ;dc_motor.c: 403:     for (i=0;i<turnDuration;i++) {
 10878   0045D4  0E00               	movlw	0
 10879   0045D6  6E2E               	movwf	(turnLeft@i+1)^0,c
 10880   0045D8  0E00               	movlw	0
 10881   0045DA  6E2D               	movwf	turnLeft@i^0,c
 10882   0045DC  EFFA  F022         	goto	l634
 10883   0045E0                     l3227:
 10884                           
 10885                           ;dc_motor.c: 404:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10886   0045E0  0E68               	movlw	104
 10887   0045E2  6E2A               	movwf	??_turnLeft^0,c
 10888   0045E4  0EE4               	movlw	228
 10889   0045E6                     u4877:
 10890   0045E6  2EE8               	decfsz	wreg,f,c
 10891   0045E8  D7FE               	bra	u4877
 10892   0045EA  2E2A               	decfsz	??_turnLeft^0,f,c
 10893   0045EC  D7FC               	bra	u4877
 10894   0045EE  D000               	nop2	
 10895   0045F0                     
 10896                           ;dc_motor.c: 405:         }
 10897   0045F0  4A2D               	infsnz	turnLeft@i^0,f,c
 10898   0045F2  2A2E               	incf	(turnLeft@i+1)^0,f,c
 10899   0045F4                     l634:
 10900   0045F4  5028               	movf	turnLeft@turnDuration^0,w,c
 10901   0045F6  6E2A               	movwf	??_turnLeft^0,c
 10902   0045F8  6A2B               	clrf	(??_turnLeft+1)^0,c
 10903   0045FA  502A               	movf	??_turnLeft^0,w,c
 10904   0045FC  5C2D               	subwf	turnLeft@i^0,w,c
 10905   0045FE  502E               	movf	(turnLeft@i+1)^0,w,c
 10906   004600  0A80               	xorlw	128
 10907   004602  6E2C               	movwf	(??_turnLeft+2)^0,c
 10908   004604  502B               	movf	(??_turnLeft+1)^0,w,c
 10909   004606  0A80               	xorlw	128
 10910   004608  582C               	subwfb	(??_turnLeft+2)^0,w,c
 10911   00460A  A0D8               	btfss	status,0,c
 10912   00460C  EF0A  F023         	goto	u2051
 10913   004610  EF0C  F023         	goto	u2050
 10914   004614                     u2051:
 10915   004614  EFF0  F022         	goto	l3227
 10916   004618                     u2050:
 10917   004618                     
 10918                           ;dc_motor.c: 407:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 10919   004618  C027  F02F         	movff	turnLeft@turnSpeed,turnLeft@cur_power
 10920   00461C  6A30               	clrf	(turnLeft@cur_power+1)^0,c
 10921   00461E                     l3231:
 10922   00461E  BE30               	btfsc	(turnLeft@cur_power+1)^0,7,c
 10923   004620  EF16  F023         	goto	u2060
 10924   004624  EF14  F023         	goto	u2061
 10925   004628                     u2061:
 10926   004628  EF18  F023         	goto	l3235
 10927   00462C                     u2060:
 10928   00462C  EF65  F023         	goto	l642
 10929   004630                     l3235:
 10930                           
 10931                           ;dc_motor.c: 408:         mL->power = cur_power+mL->compensation;
 10932   004630  EE20 F009          	lfsr	2,9
 10933   004634  5023               	movf	turnLeft@mL^0,w,c
 10934   004636  26D9               	addwf	fsr2l,f,c
 10935   004638  5024               	movf	(turnLeft@mL+1)^0,w,c
 10936   00463A  22DA               	addwfc	fsr2h,f,c
 10937   00463C  50DF               	movf	indf2,w,c
 10938   00463E  242F               	addwf	turnLeft@cur_power^0,w,c
 10939   004640  C023  FFD9         	movff	turnLeft@mL,fsr2l
 10940   004644  C024  FFDA         	movff	turnLeft@mL+1,fsr2h
 10941   004648  6EDF               	movwf	indf2,c
 10942                           
 10943                           ;dc_motor.c: 409:         mR->power = cur_power+mR->compensation;
 10944   00464A  EE20 F009          	lfsr	2,9
 10945   00464E  5025               	movf	turnLeft@mR^0,w,c
 10946   004650  26D9               	addwf	fsr2l,f,c
 10947   004652  5026               	movf	(turnLeft@mR+1)^0,w,c
 10948   004654  22DA               	addwfc	fsr2h,f,c
 10949   004656  50DF               	movf	indf2,w,c
 10950   004658  242F               	addwf	turnLeft@cur_power^0,w,c
 10951   00465A  C025  FFD9         	movff	turnLeft@mR,fsr2l
 10952   00465E  C026  FFDA         	movff	turnLeft@mR+1,fsr2h
 10953   004662  6EDF               	movwf	indf2,c
 10954   004664                     
 10955                           ;dc_motor.c: 410:         setMotorPWM(mL);
 10956   004664  C023  F01D         	movff	turnLeft@mL,setMotorPWM@m
 10957   004668  C024  F01E         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10958   00466C  EC66  F023         	call	_setMotorPWM	;wreg free
 10959   004670                     
 10960                           ;dc_motor.c: 411:         setMotorPWM(mR);
 10961   004670  C025  F01D         	movff	turnLeft@mR,setMotorPWM@m
 10962   004674  C026  F01E         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10963   004678  EC66  F023         	call	_setMotorPWM	;wreg free
 10964   00467C                     
 10965                           ;dc_motor.c: 412:         for (i=0;i<turnRamp;i++) {
 10966   00467C  0E00               	movlw	0
 10967   00467E  6E2E               	movwf	(turnLeft@i+1)^0,c
 10968   004680  0E00               	movlw	0
 10969   004682  6E2D               	movwf	turnLeft@i^0,c
 10970   004684  EF4E  F023         	goto	l639
 10971   004688                     l3243:
 10972                           
 10973                           ;dc_motor.c: 413:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10974   004688  0E68               	movlw	104
 10975   00468A  6E2A               	movwf	??_turnLeft^0,c
 10976   00468C  0EE4               	movlw	228
 10977   00468E                     u4887:
 10978   00468E  2EE8               	decfsz	wreg,f,c
 10979   004690  D7FE               	bra	u4887
 10980   004692  2E2A               	decfsz	??_turnLeft^0,f,c
 10981   004694  D7FC               	bra	u4887
 10982   004696  D000               	nop2	
 10983   004698                     
 10984                           ;dc_motor.c: 414:         }
 10985   004698  4A2D               	infsnz	turnLeft@i^0,f,c
 10986   00469A  2A2E               	incf	(turnLeft@i+1)^0,f,c
 10987   00469C                     l639:
 10988   00469C  5029               	movf	turnLeft@turnRamp^0,w,c
 10989   00469E  6E2A               	movwf	??_turnLeft^0,c
 10990   0046A0  6A2B               	clrf	(??_turnLeft+1)^0,c
 10991   0046A2  502A               	movf	??_turnLeft^0,w,c
 10992   0046A4  5C2D               	subwf	turnLeft@i^0,w,c
 10993   0046A6  502E               	movf	(turnLeft@i+1)^0,w,c
 10994   0046A8  0A80               	xorlw	128
 10995   0046AA  6E2C               	movwf	(??_turnLeft+2)^0,c
 10996   0046AC  502B               	movf	(??_turnLeft+1)^0,w,c
 10997   0046AE  0A80               	xorlw	128
 10998   0046B0  582C               	subwfb	(??_turnLeft+2)^0,w,c
 10999   0046B2  A0D8               	btfss	status,0,c
 11000   0046B4  EF5E  F023         	goto	u2071
 11001   0046B8  EF60  F023         	goto	u2070
 11002   0046BC                     u2071:
 11003   0046BC  EF44  F023         	goto	l3243
 11004   0046C0                     u2070:
 11005   0046C0                     
 11006                           ;dc_motor.c: 415:     }
 11007   0046C0  062F               	decf	turnLeft@cur_power^0,f,c
 11008   0046C2  A0D8               	btfss	status,0,c
 11009   0046C4  0630               	decf	(turnLeft@cur_power+1)^0,f,c
 11010   0046C6  EF0F  F023         	goto	l3231
 11011   0046CA                     l642:
 11012   0046CA  0012               	return		;funcret
 11013   0046CC                     __end_of_turnLeft:
 11014                           	callstack 0
 11015                           
 11016 ;; *************** function _setMotorPWM *****************
 11017 ;; Defined at:
 11018 ;;		line 68 in file "dc_motor.c"
 11019 ;; Parameters:    Size  Location     Type
 11020 ;;  m               2   28[COMRAM] PTR struct DC_motor
 11021 ;;		 -> main@motorR(10), main@motorL(10), 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;  negDuty         1   33[COMRAM] unsigned char 
 11024 ;;  posDuty         1   32[COMRAM] unsigned char 
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1    wreg      void 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11035 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11037 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11038 ;;Total ram usage:        6 bytes
 11039 ;; Hardware stack levels used: 1
 11040 ;; Hardware stack levels required when called: 7
 11041 ;; This function calls:
 11042 ;;		___lwdiv
 11043 ;;		___wmul
 11044 ;; This function is called by:
 11045 ;;		_stop
 11046 ;;		_turnLeft
 11047 ;;		_turnRight
 11048 ;;		_fullSpeedAhead
 11049 ;;		_reverseOneSquare
 11050 ;;		_wallAdjust
 11051 ;;		_reverseShort
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           	psect	text36
 11056   0046CC                     __ptext36:
 11057                           	callstack 0
 11058   0046CC                     _setMotorPWM:
 11059                           	callstack 22
 11060   0046CC                     
 11061                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11062   0046CC  EE20 F002          	lfsr	2,2
 11063   0046D0  501D               	movf	setMotorPWM@m^0,w,c
 11064   0046D2  26D9               	addwf	fsr2l,f,c
 11065   0046D4  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11066   0046D6  22DA               	addwfc	fsr2h,f,c
 11067   0046D8  50DF               	movf	indf2,w,c
 11068   0046DA  B4D8               	btfsc	status,2,c
 11069   0046DC  EF72  F023         	goto	u1861
 11070   0046E0  EF74  F023         	goto	u1860
 11071   0046E4                     u1861:
 11072   0046E4  EFA8  F023         	goto	l3059
 11073   0046E8                     u1860:
 11074   0046E8                     
 11075                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11076   0046E8  C01D  FFD9         	movff	setMotorPWM@m,fsr2l
 11077   0046EC  C01E  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11078   0046F0  50DF               	movf	indf2,w,c
 11079   0046F2  6E1F               	movwf	??_setMotorPWM^0,c
 11080   0046F4  501F               	movf	??_setMotorPWM^0,w,c
 11081   0046F6  6E10               	movwf	___wmul@multiplier^0,c
 11082   0046F8  6A11               	clrf	(___wmul@multiplier+1)^0,c
 11083   0046FA  EE20 F003          	lfsr	2,3
 11084   0046FE  501D               	movf	setMotorPWM@m^0,w,c
 11085   004700  26D9               	addwf	fsr2l,f,c
 11086   004702  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11087   004704  22DA               	addwfc	fsr2h,f,c
 11088   004706  CFDE F012          	movff	postinc2,___wmul@multiplicand
 11089   00470A  CFDD F013          	movff	postdec2,___wmul@multiplicand+1
 11090   00470E  EC0B  F029         	call	___wmul	;wreg free
 11091   004712  C010  F016         	movff	?___wmul,___lwdiv@dividend
 11092   004716  C011  F017         	movff	?___wmul+1,___lwdiv@dividend+1
 11093   00471A  0E00               	movlw	0
 11094   00471C  6E19               	movwf	(___lwdiv@divisor+1)^0,c
 11095   00471E  0E64               	movlw	100
 11096   004720  6E18               	movwf	___lwdiv@divisor^0,c
 11097   004722  EC3B  F027         	call	___lwdiv	;wreg free
 11098   004726  EE20 F003          	lfsr	2,3
 11099   00472A  501D               	movf	setMotorPWM@m^0,w,c
 11100   00472C  26D9               	addwf	fsr2l,f,c
 11101   00472E  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11102   004730  22DA               	addwfc	fsr2h,f,c
 11103   004732  50DF               	movf	indf2,w,c
 11104   004734  6E20               	movwf	(??_setMotorPWM+1)^0,c
 11105   004736  5016               	movf	?___lwdiv^0,w,c
 11106   004738  5C20               	subwf	(??_setMotorPWM+1)^0,w,c
 11107   00473A  6E21               	movwf	setMotorPWM@posDuty^0,c
 11108   00473C                     
 11109                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11110   00473C  EE20 F003          	lfsr	2,3
 11111   004740  501D               	movf	setMotorPWM@m^0,w,c
 11112   004742  26D9               	addwf	fsr2l,f,c
 11113   004744  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11114   004746  22DA               	addwfc	fsr2h,f,c
 11115   004748  50DF               	movf	indf2,w,c
 11116   00474A  6E22               	movwf	setMotorPWM@negDuty^0,c
 11117                           
 11118                           ;dc_motor.c: 75:     }
 11119   00474C  EFCB  F023         	goto	l3063
 11120   004750                     l3059:
 11121                           
 11122                           ;dc_motor.c: 77:         posDuty=0;
 11123   004750  0E00               	movlw	0
 11124   004752  6E21               	movwf	setMotorPWM@posDuty^0,c
 11125   004754                     
 11126                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11127   004754  C01D  FFD9         	movff	setMotorPWM@m,fsr2l
 11128   004758  C01E  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11129   00475C  50DF               	movf	indf2,w,c
 11130   00475E  6E1F               	movwf	??_setMotorPWM^0,c
 11131   004760  501F               	movf	??_setMotorPWM^0,w,c
 11132   004762  6E10               	movwf	___wmul@multiplier^0,c
 11133   004764  6A11               	clrf	(___wmul@multiplier+1)^0,c
 11134   004766  EE20 F003          	lfsr	2,3
 11135   00476A  501D               	movf	setMotorPWM@m^0,w,c
 11136   00476C  26D9               	addwf	fsr2l,f,c
 11137   00476E  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11138   004770  22DA               	addwfc	fsr2h,f,c
 11139   004772  CFDE F012          	movff	postinc2,___wmul@multiplicand
 11140   004776  CFDD F013          	movff	postdec2,___wmul@multiplicand+1
 11141   00477A  EC0B  F029         	call	___wmul	;wreg free
 11142   00477E  C010  F016         	movff	?___wmul,___lwdiv@dividend
 11143   004782  C011  F017         	movff	?___wmul+1,___lwdiv@dividend+1
 11144   004786  0E00               	movlw	0
 11145   004788  6E19               	movwf	(___lwdiv@divisor+1)^0,c
 11146   00478A  0E64               	movlw	100
 11147   00478C  6E18               	movwf	___lwdiv@divisor^0,c
 11148   00478E  EC3B  F027         	call	___lwdiv	;wreg free
 11149   004792  5016               	movf	?___lwdiv^0,w,c
 11150   004794  6E22               	movwf	setMotorPWM@negDuty^0,c
 11151   004796                     l3063:
 11152                           
 11153                           ;dc_motor.c: 81:     if (m->direction) {
 11154   004796  EE20 F001          	lfsr	2,1
 11155   00479A  501D               	movf	setMotorPWM@m^0,w,c
 11156   00479C  26D9               	addwf	fsr2l,f,c
 11157   00479E  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11158   0047A0  22DA               	addwfc	fsr2h,f,c
 11159   0047A2  50DF               	movf	indf2,w,c
 11160   0047A4  B4D8               	btfsc	status,2,c
 11161   0047A6  EFD7  F023         	goto	u1871
 11162   0047AA  EFD9  F023         	goto	u1870
 11163   0047AE                     u1871:
 11164   0047AE  EFFB  F023         	goto	l3067
 11165   0047B2                     u1870:
 11166   0047B2                     
 11167                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 11168   0047B2  EE20 F005          	lfsr	2,5
 11169   0047B6  501D               	movf	setMotorPWM@m^0,w,c
 11170   0047B8  26D9               	addwf	fsr2l,f,c
 11171   0047BA  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11172   0047BC  22DA               	addwfc	fsr2h,f,c
 11173   0047BE  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11174   0047C2  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11175   0047C6  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11176   0047CA  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11177   0047CE  C021  FFDF         	movff	setMotorPWM@posDuty,indf2
 11178                           
 11179                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 11180   0047D2  EE20 F007          	lfsr	2,7
 11181   0047D6  501D               	movf	setMotorPWM@m^0,w,c
 11182   0047D8  26D9               	addwf	fsr2l,f,c
 11183   0047DA  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11184   0047DC  22DA               	addwfc	fsr2h,f,c
 11185   0047DE  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11186   0047E2  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11187   0047E6  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11188   0047EA  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11189   0047EE  C022  FFDF         	movff	setMotorPWM@negDuty,indf2
 11190                           
 11191                           ;dc_motor.c: 84:     } else {
 11192   0047F2  EF1B  F024         	goto	l548
 11193   0047F6                     l3067:
 11194                           
 11195                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
 11196   0047F6  EE20 F005          	lfsr	2,5
 11197   0047FA  501D               	movf	setMotorPWM@m^0,w,c
 11198   0047FC  26D9               	addwf	fsr2l,f,c
 11199   0047FE  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11200   004800  22DA               	addwfc	fsr2h,f,c
 11201   004802  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11202   004806  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11203   00480A  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11204   00480E  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11205   004812  C022  FFDF         	movff	setMotorPWM@negDuty,indf2
 11206                           
 11207                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
 11208   004816  EE20 F007          	lfsr	2,7
 11209   00481A  501D               	movf	setMotorPWM@m^0,w,c
 11210   00481C  26D9               	addwf	fsr2l,f,c
 11211   00481E  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11212   004820  22DA               	addwfc	fsr2h,f,c
 11213   004822  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11214   004826  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11215   00482A  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11216   00482E  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11217   004832  C021  FFDF         	movff	setMotorPWM@posDuty,indf2
 11218   004836                     l548:
 11219   004836  0012               	return		;funcret
 11220   004838                     __end_of_setMotorPWM:
 11221                           	callstack 0
 11222                           
 11223 ;; *************** function ___wmul *****************
 11224 ;; Defined at:
 11225 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
 11226 ;; Parameters:    Size  Location     Type
 11227 ;;  multiplier      2   15[COMRAM] unsigned int 
 11228 ;;  multiplicand    2   17[COMRAM] unsigned int 
 11229 ;; Auto vars:     Size  Location     Type
 11230 ;;  product         2   19[COMRAM] unsigned int 
 11231 ;; Return value:  Size  Location     Type
 11232 ;;                  2   15[COMRAM] unsigned int 
 11233 ;; Registers used:
 11234 ;;		wreg, status,2, status,0, prodl, prodh
 11235 ;; Tracked objects:
 11236 ;;		On entry : 0/0
 11237 ;;		On exit  : 0/0
 11238 ;;		Unchanged: 0/0
 11239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11243 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11244 ;;Total ram usage:        6 bytes
 11245 ;; Hardware stack levels used: 1
 11246 ;; Hardware stack levels required when called: 6
 11247 ;; This function calls:
 11248 ;;		Nothing
 11249 ;; This function is called by:
 11250 ;;		_setMotorPWM
 11251 ;; This function uses a non-reentrant model
 11252 ;;
 11253                           
 11254                           	psect	text37
 11255   005216                     __ptext37:
 11256                           	callstack 0
 11257   005216                     ___wmul:
 11258                           	callstack 22
 11259   005216  5010               	movf	___wmul@multiplier^0,w,c
 11260   005218  0212               	mulwf	___wmul@multiplicand^0,c
 11261   00521A  CFF3 F014          	movff	prodl,___wmul@product
 11262   00521E  CFF4 F015          	movff	prodh,___wmul@product+1
 11263   005222  5010               	movf	___wmul@multiplier^0,w,c
 11264   005224  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 11265   005226  50F3               	movf	243,w,c
 11266   005228  2615               	addwf	(___wmul@product+1)^0,f,c
 11267   00522A  5011               	movf	(___wmul@multiplier+1)^0,w,c
 11268   00522C  0212               	mulwf	___wmul@multiplicand^0,c
 11269   00522E  50F3               	movf	243,w,c
 11270   005230  2615               	addwf	(___wmul@product+1)^0,f,c
 11271   005232  C014  F010         	movff	___wmul@product,?___wmul
 11272   005236  C015  F011         	movff	___wmul@product+1,?___wmul+1
 11273   00523A  0012               	return		;funcret
 11274   00523C                     __end_of___wmul:
 11275                           	callstack 0
 11276                           
 11277 ;; *************** function ___lwdiv *****************
 11278 ;; Defined at:
 11279 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 11280 ;; Parameters:    Size  Location     Type
 11281 ;;  dividend        2   21[COMRAM] unsigned int 
 11282 ;;  divisor         2   23[COMRAM] unsigned int 
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;  quotient        2   25[COMRAM] unsigned int 
 11285 ;;  counter         1   27[COMRAM] unsigned char 
 11286 ;; Return value:  Size  Location     Type
 11287 ;;                  2   21[COMRAM] unsigned int 
 11288 ;; Registers used:
 11289 ;;		wreg, status,2, status,0
 11290 ;; Tracked objects:
 11291 ;;		On entry : 0/0
 11292 ;;		On exit  : 0/0
 11293 ;;		Unchanged: 0/0
 11294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11296 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11298 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11299 ;;Total ram usage:        7 bytes
 11300 ;; Hardware stack levels used: 1
 11301 ;; Hardware stack levels required when called: 6
 11302 ;; This function calls:
 11303 ;;		Nothing
 11304 ;; This function is called by:
 11305 ;;		_color_clear_init_interrupts
 11306 ;;		_setMotorPWM
 11307 ;; This function uses a non-reentrant model
 11308 ;;
 11309                           
 11310                           	psect	text38
 11311   004E76                     __ptext38:
 11312                           	callstack 0
 11313   004E76                     ___lwdiv:
 11314                           	callstack 22
 11315   004E76  0E00               	movlw	0
 11316   004E78  6E1B               	movwf	(___lwdiv@quotient+1)^0,c
 11317   004E7A  0E00               	movlw	0
 11318   004E7C  6E1A               	movwf	___lwdiv@quotient^0,c
 11319   004E7E  5018               	movf	___lwdiv@divisor^0,w,c
 11320   004E80  1019               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11321   004E82  B4D8               	btfsc	status,2,c
 11322   004E84  EF46  F027         	goto	u1831
 11323   004E88  EF48  F027         	goto	u1830
 11324   004E8C                     u1831:
 11325   004E8C  EF70  F027         	goto	l1259
 11326   004E90                     u1830:
 11327   004E90  0E01               	movlw	1
 11328   004E92  6E1C               	movwf	___lwdiv@counter^0,c
 11329   004E94  EF50  F027         	goto	l3027
 11330   004E98                     l3025:
 11331   004E98  90D8               	bcf	status,0,c
 11332   004E9A  3618               	rlcf	___lwdiv@divisor^0,f,c
 11333   004E9C  3619               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11334   004E9E  2A1C               	incf	___lwdiv@counter^0,f,c
 11335   004EA0                     l3027:
 11336   004EA0  AE19               	btfss	(___lwdiv@divisor+1)^0,7,c
 11337   004EA2  EF55  F027         	goto	u1841
 11338   004EA6  EF57  F027         	goto	u1840
 11339   004EAA                     u1841:
 11340   004EAA  EF4C  F027         	goto	l3025
 11341   004EAE                     u1840:
 11342   004EAE                     l3029:
 11343   004EAE  90D8               	bcf	status,0,c
 11344   004EB0  361A               	rlcf	___lwdiv@quotient^0,f,c
 11345   004EB2  361B               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11346   004EB4  5018               	movf	___lwdiv@divisor^0,w,c
 11347   004EB6  5C16               	subwf	___lwdiv@dividend^0,w,c
 11348   004EB8  5019               	movf	(___lwdiv@divisor+1)^0,w,c
 11349   004EBA  5817               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11350   004EBC  A0D8               	btfss	status,0,c
 11351   004EBE  EF63  F027         	goto	u1851
 11352   004EC2  EF65  F027         	goto	u1850
 11353   004EC6                     u1851:
 11354   004EC6  EF6A  F027         	goto	l3037
 11355   004ECA                     u1850:
 11356   004ECA  5018               	movf	___lwdiv@divisor^0,w,c
 11357   004ECC  5E16               	subwf	___lwdiv@dividend^0,f,c
 11358   004ECE  5019               	movf	(___lwdiv@divisor+1)^0,w,c
 11359   004ED0  5A17               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11360   004ED2  801A               	bsf	___lwdiv@quotient^0,0,c
 11361   004ED4                     l3037:
 11362   004ED4  90D8               	bcf	status,0,c
 11363   004ED6  3219               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11364   004ED8  3218               	rrcf	___lwdiv@divisor^0,f,c
 11365   004EDA  2E1C               	decfsz	___lwdiv@counter^0,f,c
 11366   004EDC  EF57  F027         	goto	l3029
 11367   004EE0                     l1259:
 11368   004EE0  C01A  F016         	movff	___lwdiv@quotient,?___lwdiv
 11369   004EE4  C01B  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11370   004EE8  0012               	return		;funcret
 11371   004EEA                     __end_of___lwdiv:
 11372                           	callstack 0
 11373                           
 11374 ;; *************** function _batteryLevel *****************
 11375 ;; Defined at:
 11376 ;;		line 6 in file "battery.c"
 11377 ;; Parameters:    Size  Location     Type
 11378 ;;		None
 11379 ;; Auto vars:     Size  Location     Type
 11380 ;;  batteryQuart    1   24[COMRAM] unsigned char 
 11381 ;;  batteryVolta    1   23[COMRAM] unsigned char 
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      void 
 11384 ;; Registers used:
 11385 ;;		wreg, status,2, status,0, cstack
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11395 ;;Total ram usage:        2 bytes
 11396 ;; Hardware stack levels used: 1
 11397 ;; Hardware stack levels required when called: 7
 11398 ;; This function calls:
 11399 ;;		_ADC_getval
 11400 ;;		_ADC_init
 11401 ;;		___awdiv
 11402 ;; This function is called by:
 11403 ;;		_main
 11404 ;; This function uses a non-reentrant model
 11405 ;;
 11406                           
 11407                           	psect	text39
 11408   00501E                     __ptext39:
 11409                           	callstack 0
 11410   00501E                     _batteryLevel:
 11411                           	callstack 23
 11412   00501E                     
 11413                           ;battery.c: 7:     ADC_init();
 11414   00501E  EC80  F029         	call	_ADC_init	;wreg free
 11415                           
 11416                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
 11417   005022  EC8D  F029         	call	_ADC_getval	;wreg free
 11418   005026  6E18               	movwf	batteryLevel@batteryVoltage^0,c
 11419   005028                     
 11420                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
 11421   005028  C018  F010         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
 11422   00502C  6A11               	clrf	(___awdiv@dividend+1)^0,c
 11423   00502E  0E00               	movlw	0
 11424   005030  6E13               	movwf	(___awdiv@divisor+1)^0,c
 11425   005032  0E18               	movlw	24
 11426   005034  6E12               	movwf	___awdiv@divisor^0,c
 11427   005036  EC99  F025         	call	___awdiv	;wreg free
 11428   00503A  5010               	movf	?___awdiv^0,w,c
 11429   00503C  6E19               	movwf	batteryLevel@batteryQuarter^0,c
 11430   00503E                     
 11431                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
 11432   00503E  A219               	btfss	batteryLevel@batteryQuarter^0,1,c
 11433   005040  EF24  F028         	goto	u2571
 11434   005044  EF26  F028         	goto	u2570
 11435   005048                     u2571:
 11436   005048  EF29  F028         	goto	l460
 11437   00504C                     u2570:
 11438   00504C  8E7C               	bsf	124,7,c	;volatile
 11439   00504E  EF2A  F028         	goto	l461
 11440   005052                     l460:
 11441   005052  9E7C               	bcf	124,7,c	;volatile
 11442   005054                     l461:
 11443                           
 11444                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
 11445   005054  A019               	btfss	batteryLevel@batteryQuarter^0,0,c
 11446   005056  EF2F  F028         	goto	u2581
 11447   00505A  EF31  F028         	goto	u2580
 11448   00505E                     u2581:
 11449   00505E  EF34  F028         	goto	l462
 11450   005062                     u2580:
 11451   005062  8680               	bsf	128,3,c	;volatile
 11452   005064  EF35  F028         	goto	l464
 11453   005068                     l462:
 11454   005068  9680               	bcf	128,3,c	;volatile
 11455   00506A                     l464:
 11456   00506A  0012               	return		;funcret
 11457   00506C                     __end_of_batteryLevel:
 11458                           	callstack 0
 11459                           
 11460 ;; *************** function ___awdiv *****************
 11461 ;; Defined at:
 11462 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;  dividend        2   15[COMRAM] int 
 11465 ;;  divisor         2   17[COMRAM] int 
 11466 ;; Auto vars:     Size  Location     Type
 11467 ;;  quotient        2   21[COMRAM] int 
 11468 ;;  sign            1   20[COMRAM] unsigned char 
 11469 ;;  counter         1   19[COMRAM] unsigned char 
 11470 ;; Return value:  Size  Location     Type
 11471 ;;                  2   15[COMRAM] int 
 11472 ;; Registers used:
 11473 ;;		wreg, status,2, status,0
 11474 ;; Tracked objects:
 11475 ;;		On entry : 0/0
 11476 ;;		On exit  : 0/0
 11477 ;;		Unchanged: 0/0
 11478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11479 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11480 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11482 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11483 ;;Total ram usage:        8 bytes
 11484 ;; Hardware stack levels used: 1
 11485 ;; Hardware stack levels required when called: 6
 11486 ;; This function calls:
 11487 ;;		Nothing
 11488 ;; This function is called by:
 11489 ;;		_batteryLevel
 11490 ;; This function uses a non-reentrant model
 11491 ;;
 11492                           
 11493                           	psect	text40
 11494   004B32                     __ptext40:
 11495                           	callstack 0
 11496   004B32                     ___awdiv:
 11497                           	callstack 23
 11498   004B32  0E00               	movlw	0
 11499   004B34  6E15               	movwf	___awdiv@sign^0,c
 11500   004B36  BE13               	btfsc	(___awdiv@divisor+1)^0,7,c
 11501   004B38  EFA2  F025         	goto	u2480
 11502   004B3C  EFA0  F025         	goto	u2481
 11503   004B40                     u2481:
 11504   004B40  EFA8  F025         	goto	l3649
 11505   004B44                     u2480:
 11506   004B44  6C12               	negf	___awdiv@divisor^0,c
 11507   004B46  1E13               	comf	(___awdiv@divisor+1)^0,f,c
 11508   004B48  B0D8               	btfsc	status,0,c
 11509   004B4A  2A13               	incf	(___awdiv@divisor+1)^0,f,c
 11510   004B4C  0E01               	movlw	1
 11511   004B4E  6E15               	movwf	___awdiv@sign^0,c
 11512   004B50                     l3649:
 11513   004B50  BE11               	btfsc	(___awdiv@dividend+1)^0,7,c
 11514   004B52  EFAF  F025         	goto	u2490
 11515   004B56  EFAD  F025         	goto	u2491
 11516   004B5A                     u2491:
 11517   004B5A  EFB5  F025         	goto	l3655
 11518   004B5E                     u2490:
 11519   004B5E  6C10               	negf	___awdiv@dividend^0,c
 11520   004B60  1E11               	comf	(___awdiv@dividend+1)^0,f,c
 11521   004B62  B0D8               	btfsc	status,0,c
 11522   004B64  2A11               	incf	(___awdiv@dividend+1)^0,f,c
 11523   004B66  0E01               	movlw	1
 11524   004B68  1A15               	xorwf	___awdiv@sign^0,f,c
 11525   004B6A                     l3655:
 11526   004B6A  0E00               	movlw	0
 11527   004B6C  6E17               	movwf	(___awdiv@quotient+1)^0,c
 11528   004B6E  0E00               	movlw	0
 11529   004B70  6E16               	movwf	___awdiv@quotient^0,c
 11530   004B72  5012               	movf	___awdiv@divisor^0,w,c
 11531   004B74  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
 11532   004B76  B4D8               	btfsc	status,2,c
 11533   004B78  EFC0  F025         	goto	u2501
 11534   004B7C  EFC2  F025         	goto	u2500
 11535   004B80                     u2501:
 11536   004B80  EFEA  F025         	goto	l3677
 11537   004B84                     u2500:
 11538   004B84  0E01               	movlw	1
 11539   004B86  6E14               	movwf	___awdiv@counter^0,c
 11540   004B88  EFCA  F025         	goto	l3663
 11541   004B8C                     l3661:
 11542   004B8C  90D8               	bcf	status,0,c
 11543   004B8E  3612               	rlcf	___awdiv@divisor^0,f,c
 11544   004B90  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
 11545   004B92  2A14               	incf	___awdiv@counter^0,f,c
 11546   004B94                     l3663:
 11547   004B94  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
 11548   004B96  EFCF  F025         	goto	u2511
 11549   004B9A  EFD1  F025         	goto	u2510
 11550   004B9E                     u2511:
 11551   004B9E  EFC6  F025         	goto	l3661
 11552   004BA2                     u2510:
 11553   004BA2                     l3665:
 11554   004BA2  90D8               	bcf	status,0,c
 11555   004BA4  3616               	rlcf	___awdiv@quotient^0,f,c
 11556   004BA6  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
 11557   004BA8  5012               	movf	___awdiv@divisor^0,w,c
 11558   004BAA  5C10               	subwf	___awdiv@dividend^0,w,c
 11559   004BAC  5013               	movf	(___awdiv@divisor+1)^0,w,c
 11560   004BAE  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
 11561   004BB0  A0D8               	btfss	status,0,c
 11562   004BB2  EFDD  F025         	goto	u2521
 11563   004BB6  EFDF  F025         	goto	u2520
 11564   004BBA                     u2521:
 11565   004BBA  EFE4  F025         	goto	l3673
 11566   004BBE                     u2520:
 11567   004BBE  5012               	movf	___awdiv@divisor^0,w,c
 11568   004BC0  5E10               	subwf	___awdiv@dividend^0,f,c
 11569   004BC2  5013               	movf	(___awdiv@divisor+1)^0,w,c
 11570   004BC4  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
 11571   004BC6  8016               	bsf	___awdiv@quotient^0,0,c
 11572   004BC8                     l3673:
 11573   004BC8  90D8               	bcf	status,0,c
 11574   004BCA  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
 11575   004BCC  3212               	rrcf	___awdiv@divisor^0,f,c
 11576   004BCE  2E14               	decfsz	___awdiv@counter^0,f,c
 11577   004BD0  EFD1  F025         	goto	l3665
 11578   004BD4                     l3677:
 11579   004BD4  5015               	movf	___awdiv@sign^0,w,c
 11580   004BD6  B4D8               	btfsc	status,2,c
 11581   004BD8  EFF0  F025         	goto	u2531
 11582   004BDC  EFF2  F025         	goto	u2530
 11583   004BE0                     u2531:
 11584   004BE0  EFF6  F025         	goto	l3681
 11585   004BE4                     u2530:
 11586   004BE4  6C16               	negf	___awdiv@quotient^0,c
 11587   004BE6  1E17               	comf	(___awdiv@quotient+1)^0,f,c
 11588   004BE8  B0D8               	btfsc	status,0,c
 11589   004BEA  2A17               	incf	(___awdiv@quotient+1)^0,f,c
 11590   004BEC                     l3681:
 11591   004BEC  C016  F010         	movff	___awdiv@quotient,?___awdiv
 11592   004BF0  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
 11593   004BF4  0012               	return		;funcret
 11594   004BF6                     __end_of___awdiv:
 11595                           	callstack 0
 11596                           
 11597 ;; *************** function _ADC_init *****************
 11598 ;; Defined at:
 11599 ;;		line 9 in file "ADC.c"
 11600 ;; Parameters:    Size  Location     Type
 11601 ;;		None
 11602 ;; Auto vars:     Size  Location     Type
 11603 ;;		None
 11604 ;; Return value:  Size  Location     Type
 11605 ;;                  1    wreg      void 
 11606 ;; Registers used:
 11607 ;;		wreg, status,2
 11608 ;; Tracked objects:
 11609 ;;		On entry : 0/0
 11610 ;;		On exit  : 0/0
 11611 ;;		Unchanged: 0/0
 11612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11617 ;;Total ram usage:        0 bytes
 11618 ;; Hardware stack levels used: 1
 11619 ;; Hardware stack levels required when called: 6
 11620 ;; This function calls:
 11621 ;;		Nothing
 11622 ;; This function is called by:
 11623 ;;		_batteryLevel
 11624 ;; This function uses a non-reentrant model
 11625 ;;
 11626                           
 11627                           	psect	text41
 11628   005300                     __ptext41:
 11629                           	callstack 0
 11630   005300                     _ADC_init:
 11631                           	callstack 23
 11632   005300                     
 11633                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 11634   005300  8C86               	bsf	134,6,c	;volatile
 11635                           
 11636                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 11637   005302  010E               	movlb	14	; () banked
 11638   005304  8DB4               	bsf	180,6,b	;volatile
 11639                           
 11640                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 11641   005306  010F               	movlb	15	; () banked
 11642   005308  9958               	bcf	88,4,b	;volatile
 11643   00530A                     
 11644                           ; BSR set to: 15
 11645                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 11646   00530A  0EFC               	movlw	-4
 11647   00530C  1758               	andwf	88,f,b	;volatile
 11648                           
 11649                           ;ADC.c: 17:     ADPCH=0b101110;
 11650   00530E  0E2E               	movlw	46
 11651   005310  6F5F               	movwf	95,b	;volatile
 11652   005312                     
 11653                           ; BSR set to: 15
 11654                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 11655   005312  9460               	bcf	96,2,c	;volatile
 11656   005314                     
 11657                           ; BSR set to: 15
 11658                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 11659   005314  8860               	bsf	96,4,c	;volatile
 11660   005316                     
 11661                           ; BSR set to: 15
 11662                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 11663   005316  8E60               	bsf	96,7,c	;volatile
 11664   005318                     
 11665                           ; BSR set to: 15
 11666   005318  0012               	return		;funcret
 11667   00531A                     __end_of_ADC_init:
 11668                           	callstack 0
 11669                           
 11670 ;; *************** function _ADC_getval *****************
 11671 ;; Defined at:
 11672 ;;		line 23 in file "ADC.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;		None
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;  tmpval          1   15[COMRAM] unsigned char 
 11677 ;; Return value:  Size  Location     Type
 11678 ;;                  1    wreg      unsigned char 
 11679 ;; Registers used:
 11680 ;;		wreg, status,2
 11681 ;; Tracked objects:
 11682 ;;		On entry : 0/0
 11683 ;;		On exit  : 0/0
 11684 ;;		Unchanged: 0/0
 11685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11689 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11690 ;;Total ram usage:        1 bytes
 11691 ;; Hardware stack levels used: 1
 11692 ;; Hardware stack levels required when called: 6
 11693 ;; This function calls:
 11694 ;;		Nothing
 11695 ;; This function is called by:
 11696 ;;		_batteryLevel
 11697 ;; This function uses a non-reentrant model
 11698 ;;
 11699                           
 11700                           	psect	text42
 11701   00531A                     __ptext42:
 11702                           	callstack 0
 11703   00531A                     _ADC_getval:
 11704                           	callstack 23
 11705   00531A                     
 11706                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
 11707   00531A  8060               	bsf	96,0,c	;volatile
 11708   00531C                     l446:
 11709   00531C  B060               	btfsc	96,0,c	;volatile
 11710   00531E  EF93  F029         	goto	u2321
 11711   005322  EF95  F029         	goto	u2320
 11712   005326                     u2321:
 11713   005326  EF8E  F029         	goto	l446
 11714   00532A                     u2320:
 11715   00532A                     
 11716                           ;ADC.c: 31:     tmpval = ADRESH;
 11717   00532A  CF64 F010          	movff	3940,ADC_getval@tmpval	;volatile
 11718   00532E                     
 11719                           ;ADC.c: 35:     return tmpval;
 11720   00532E  5010               	movf	ADC_getval@tmpval^0,w,c
 11721   005330  0012               	return		;funcret
 11722   005332                     __end_of_ADC_getval:
 11723                           	callstack 0
 11724                           
 11725 ;; *************** function _Timer0_init *****************
 11726 ;; Defined at:
 11727 ;;		line 7 in file "timers.c"
 11728 ;; Parameters:    Size  Location     Type
 11729 ;;		None
 11730 ;; Auto vars:     Size  Location     Type
 11731 ;;		None
 11732 ;; Return value:  Size  Location     Type
 11733 ;;                  1    wreg      void 
 11734 ;; Registers used:
 11735 ;;		wreg, status,2
 11736 ;; Tracked objects:
 11737 ;;		On entry : 0/0
 11738 ;;		On exit  : 0/0
 11739 ;;		Unchanged: 0/0
 11740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11745 ;;Total ram usage:        0 bytes
 11746 ;; Hardware stack levels used: 1
 11747 ;; Hardware stack levels required when called: 6
 11748 ;; This function calls:
 11749 ;;		Nothing
 11750 ;; This function is called by:
 11751 ;;		_main
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           	psect	text43
 11756   0052A2                     __ptext43:
 11757                           	callstack 0
 11758   0052A2                     _Timer0_init:
 11759                           	callstack 24
 11760   0052A2                     
 11761                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 11762   0052A2  50D6               	movf	214,w,c	;volatile
 11763   0052A4  0B1F               	andlw	-225
 11764   0052A6  0940               	iorlw	64
 11765   0052A8  6ED6               	movwf	214,c	;volatile
 11766   0052AA                     
 11767                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 11768   0052AA  88D6               	bsf	214,4,c	;volatile
 11769                           
 11770                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
 11771   0052AC  50D6               	movf	214,w,c	;volatile
 11772   0052AE  0BF0               	andlw	-16
 11773   0052B0  090B               	iorlw	11
 11774   0052B2  6ED6               	movwf	214,c	;volatile
 11775   0052B4                     
 11776                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 11777   0052B4  88D5               	bsf	213,4,c	;volatile
 11778                           
 11779                           ;timers.c: 15:     TMR0H=0;
 11780   0052B6  0E00               	movlw	0
 11781   0052B8  6ED4               	movwf	212,c	;volatile
 11782                           
 11783                           ;timers.c: 16:     TMR0L=0;
 11784   0052BA  0E00               	movlw	0
 11785   0052BC  6ED3               	movwf	211,c	;volatile
 11786   0052BE                     
 11787                           ;timers.c: 17:     T0CON0bits.T0EN=1;
 11788   0052BE  8ED5               	bsf	213,7,c	;volatile
 11789   0052C0  0012               	return		;funcret
 11790   0052C2                     __end_of_Timer0_init:
 11791                           	callstack 0
 11792                           
 11793 ;; *************** function _Interrupts_init *****************
 11794 ;; Defined at:
 11795 ;;		line 11 in file "interrupts.c"
 11796 ;; Parameters:    Size  Location     Type
 11797 ;;		None
 11798 ;; Auto vars:     Size  Location     Type
 11799 ;;		None
 11800 ;; Return value:  Size  Location     Type
 11801 ;;                  1    wreg      void 
 11802 ;; Registers used:
 11803 ;;		None
 11804 ;; Tracked objects:
 11805 ;;		On entry : 0/0
 11806 ;;		On exit  : 0/0
 11807 ;;		Unchanged: 0/0
 11808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11813 ;;Total ram usage:        0 bytes
 11814 ;; Hardware stack levels used: 1
 11815 ;; Hardware stack levels required when called: 6
 11816 ;; This function calls:
 11817 ;;		Nothing
 11818 ;; This function is called by:
 11819 ;;		_main
 11820 ;; This function uses a non-reentrant model
 11821 ;;
 11822                           
 11823                           	psect	text44
 11824   005332                     __ptext44:
 11825                           	callstack 0
 11826   005332                     _Interrupts_init:
 11827                           	callstack 24
 11828   005332                     
 11829                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
 11830   005332  8082               	bsf	130,0,c	;volatile
 11831                           
 11832                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
 11833   005334  010E               	movlb	14	; () banked
 11834   005336  919A               	bcf	154,0,b	;volatile
 11835                           
 11836                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
 11837   005338  8129               	bsf	41,0,b	;volatile
 11838                           
 11839                           ;interrupts.c: 17:     IPR0bits.INT0IP=1;
 11840   00533A  811F               	bsf	31,0,b	;volatile
 11841                           
 11842                           ;interrupts.c: 18:     INTCONbits.INT0EDG=0;
 11843   00533C  90F2               	bcf	242,0,c	;volatile
 11844                           
 11845                           ;interrupts.c: 29:     INTCONbits.PEIE=1;
 11846   00533E  8CF2               	bsf	242,6,c	;volatile
 11847                           
 11848                           ;interrupts.c: 30:     INTCONbits.GIE=1;
 11849   005340  8EF2               	bsf	242,7,c	;volatile
 11850   005342                     
 11851                           ; BSR set to: 14
 11852   005342  0012               	return		;funcret
 11853   005344                     __end_of_Interrupts_init:
 11854                           	callstack 0
 11855                           
 11856 ;; *************** function _Buggy_init *****************
 11857 ;; Defined at:
 11858 ;;		line 7 in file "buggysetup.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;		None
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;		None
 11863 ;; Return value:  Size  Location     Type
 11864 ;;                  1    wreg      void 
 11865 ;; Registers used:
 11866 ;;		None
 11867 ;; Tracked objects:
 11868 ;;		On entry : 0/0
 11869 ;;		On exit  : 0/0
 11870 ;;		Unchanged: 0/0
 11871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11876 ;;Total ram usage:        0 bytes
 11877 ;; Hardware stack levels used: 1
 11878 ;; Hardware stack levels required when called: 6
 11879 ;; This function calls:
 11880 ;;		Nothing
 11881 ;; This function is called by:
 11882 ;;		_main
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886                           	psect	text45
 11887   0050E6                     __ptext45:
 11888                           	callstack 0
 11889   0050E6                     _Buggy_init:
 11890                           	callstack 24
 11891   0050E6                     
 11892                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
 11893   0050E6  9E7C               	bcf	124,7,c	;volatile
 11894                           
 11895                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
 11896   0050E8  9E84               	bcf	132,7,c	;volatile
 11897                           
 11898                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
 11899   0050EA  9680               	bcf	128,3,c	;volatile
 11900                           
 11901                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
 11902   0050EC  9688               	bcf	136,3,c	;volatile
 11903                           
 11904                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
 11905   0050EE  8486               	bsf	134,2,c	;volatile
 11906                           
 11907                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
 11908   0050F0  010E               	movlb	14	; () banked
 11909   0050F2  95B4               	bcf	180,2,b	;volatile
 11910                           
 11911                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
 11912   0050F4  8686               	bsf	134,3,c	;volatile
 11913                           
 11914                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
 11915   0050F6  97B4               	bcf	180,3,b	;volatile
 11916                           
 11917                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
 11918   0050F8  9280               	bcf	128,1,c	;volatile
 11919                           
 11920                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
 11921   0050FA  9288               	bcf	136,1,c	;volatile
 11922                           
 11923                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
 11924   0050FC  987C               	bcf	124,4,c	;volatile
 11925                           
 11926                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
 11927   0050FE  9884               	bcf	132,4,c	;volatile
 11928                           
 11929                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
 11930   005100  967C               	bcf	124,3,c	;volatile
 11931                           
 11932                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
 11933   005102  9684               	bcf	132,3,c	;volatile
 11934                           
 11935                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
 11936   005104  97A7               	bcf	167,3,b	;volatile
 11937                           
 11938                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
 11939   005106  9080               	bcf	128,0,c	;volatile
 11940                           
 11941                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
 11942   005108  9088               	bcf	136,0,c	;volatile
 11943                           
 11944                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
 11945   00510A  907E               	bcf	126,0,c	;volatile
 11946                           
 11947                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
 11948   00510C  9086               	bcf	134,0,c	;volatile
 11949                           
 11950                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
 11951   00510E  907F               	bcf	127,0,c	;volatile
 11952                           
 11953                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
 11954   005110  9087               	bcf	135,0,c	;volatile
 11955                           
 11956                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
 11957   005112  9E7D               	bcf	125,7,c	;volatile
 11958                           
 11959                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
 11960   005114  9E85               	bcf	133,7,c	;volatile
 11961                           
 11962                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
 11963   005116  9679               	bcf	121,3,c	;volatile
 11964                           
 11965                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
 11966   005118  9681               	bcf	129,3,c	;volatile
 11967   00511A                     
 11968                           ; BSR set to: 14
 11969   00511A  0012               	return		;funcret
 11970   00511C                     __end_of_Buggy_init:
 11971                           	callstack 0
 11972                           
 11973 ;; *************** function _LowISR *****************
 11974 ;; Defined at:
 11975 ;;		line 69 in file "interrupts.c"
 11976 ;; Parameters:    Size  Location     Type
 11977 ;;		None
 11978 ;; Auto vars:     Size  Location     Type
 11979 ;;		None
 11980 ;; Return value:  Size  Location     Type
 11981 ;;                  1    wreg      void 
 11982 ;; Registers used:
 11983 ;;		wreg, status,2
 11984 ;; Tracked objects:
 11985 ;;		On entry : 0/0
 11986 ;;		On exit  : 0/0
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11991 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11992 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11993 ;;Total ram usage:        3 bytes
 11994 ;; Hardware stack levels used: 1
 11995 ;; Hardware stack levels required when called: 5
 11996 ;; This function calls:
 11997 ;;		Nothing
 11998 ;; This function is called by:
 11999 ;;		Interrupt level 1
 12000 ;; This function uses a non-reentrant model
 12001 ;;
 12002                           
 12003                           	psect	intcodelo
 12004   000018                     __pintcodelo:
 12005                           	callstack 0
 12006   000018                     _LowISR:
 12007                           	callstack 20
 12008                           
 12009                           ; BSR set to: 14
 12010                           ;incstack = 0
 12011   000018  804F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 12012   00001A  CFD8 F00D          	movff	status,??_LowISR
 12013   00001E  CFE8 F00E          	movff	wreg,??_LowISR+1
 12014   000022  CFE0 F00F          	movff	bsr,??_LowISR+2
 12015   000026                     
 12016                           ;interrupts.c: 73:     if(PIR0bits.TMR0IF){
 12017   000026  010E               	movlb	14	; () banked
 12018   000028  AB33               	btfss	51,5,b	;volatile
 12019   00002A  EF19  F000         	goto	i1u353_21
 12020   00002E  EF1B  F000         	goto	i1u353_20
 12021   000032                     i1u353_21:
 12022   000032  EF24  F000         	goto	i1l365
 12023   000036                     i1u353_20:
 12024   000036                     
 12025                           ; BSR set to: 14
 12026                           ;interrupts.c: 74:         lost = 1;
 12027   000036  0E01               	movlw	1
 12028   000038  0100               	movlb	0	; () banked
 12029   00003A  6FF4               	movwf	_lost& (0+255),b
 12030                           
 12031                           ;interrupts.c: 75:         TMR0H=0;
 12032   00003C  0E00               	movlw	0
 12033   00003E  6ED4               	movwf	212,c	;volatile
 12034                           
 12035                           ;interrupts.c: 76:         TMR0L=0;
 12036   000040  0E00               	movlw	0
 12037   000042  6ED3               	movwf	211,c	;volatile
 12038   000044                     
 12039                           ; BSR set to: 0
 12040                           ;interrupts.c: 77:         PIR0bits.TMR0IF=0;
 12041   000044  010E               	movlb	14	; () banked
 12042   000046  9B33               	bcf	51,5,b	;volatile
 12043   000048                     i1l365:
 12044                           
 12045                           ; BSR set to: 14
 12046   000048  C00F  FFE0         	movff	??_LowISR+2,bsr
 12047   00004C  C00E  FFE8         	movff	??_LowISR+1,wreg
 12048   000050  C00D  FFD8         	movff	??_LowISR,status
 12049   000054  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 12050   000056  0010               	retfie	
 12051   000058                     __end_of_LowISR:
 12052                           	callstack 0
 12053                           
 12054 ;; *************** function _HighISR *****************
 12055 ;; Defined at:
 12056 ;;		line 38 in file "interrupts.c"
 12057 ;; Parameters:    Size  Location     Type
 12058 ;;		None
 12059 ;; Auto vars:     Size  Location     Type
 12060 ;;		None
 12061 ;; Return value:  Size  Location     Type
 12062 ;;                  1    wreg      void 
 12063 ;; Registers used:
 12064 ;;		wreg, status,2, status,0, cstack
 12065 ;; Tracked objects:
 12066 ;;		On entry : 0/0
 12067 ;;		On exit  : 0/0
 12068 ;;		Unchanged: 0/0
 12069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12074 ;;Total ram usage:        0 bytes
 12075 ;; Hardware stack levels used: 1
 12076 ;; Hardware stack levels required when called: 4
 12077 ;; This function calls:
 12078 ;;		i2_color_clear_init_interrupts
 12079 ;; This function is called by:
 12080 ;;		Interrupt level 2
 12081 ;; This function uses a non-reentrant model
 12082 ;;
 12083                           
 12084                           	psect	intcode
 12085   000008                     __pintcode:
 12086                           	callstack 0
 12087   000008                     _HighISR:
 12088                           	callstack 20
 12089                           
 12090                           ; BSR set to: 14
 12091                           ;incstack = 0
 12092   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12093   00000A  EF30  F029         	goto	int_func
 12094                           
 12095                           	psect	intcode_body
 12096   005260                     __pintcode_body:
 12097                           	callstack 20
 12098   005260                     int_func:
 12099                           	callstack 20
 12100   005260                     
 12101                           ;interrupts.c: 42:     if(PIR0bits.INT0IF){
 12102   005260  010E               	movlb	14	; () banked
 12103   005262  A133               	btfss	51,0,b	;volatile
 12104   005264  EF36  F029         	goto	i2u352_41
 12105   005268  EF38  F029         	goto	i2u352_40
 12106   00526C                     i2u352_41:
 12107   00526C  EF3F  F029         	goto	i2l359
 12108   005270                     i2u352_40:
 12109   005270                     
 12110                           ; BSR set to: 14
 12111                           ;interrupts.c: 43:         brightnessChange = 1;
 12112   005270  0E01               	movlw	1
 12113   005272  0100               	movlb	0	; () banked
 12114   005274  6FF5               	movwf	_brightnessChange& (0+255),b
 12115   005276                     
 12116                           ; BSR set to: 0
 12117                           ;interrupts.c: 44:         color_clear_init_interrupts();
 12118   005276  EC4E  F026         	call	i2_color_clear_init_interrupts	;wreg free
 12119   00527A                     
 12120                           ;interrupts.c: 45:         PIR0bits.INT0IF = 0;
 12121   00527A  010E               	movlb	14	; () banked
 12122   00527C  9133               	bcf	51,0,b	;volatile
 12123   00527E                     i2l359:
 12124                           
 12125                           ; BSR set to: 14
 12126   00527E  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12127   005280  0011               	retfie		f
 12128   005282                     __end_of_HighISR:
 12129                           	callstack 0
 12130                           
 12131 ;; *************** function i2_color_clear_init_interrupts *****************
 12132 ;; Defined at:
 12133 ;;		line 27 in file "color.c"
 12134 ;; Parameters:    Size  Location     Type
 12135 ;;		None
 12136 ;; Auto vars:     Size  Location     Type
 12137 ;;  low_threshol    2   10[COMRAM] unsigned int 
 12138 ;;  high_thresho    2    8[COMRAM] unsigned int 
 12139 ;; Return value:  Size  Location     Type
 12140 ;;                  1    wreg      void 
 12141 ;; Registers used:
 12142 ;;		wreg, status,2, status,0, cstack
 12143 ;; Tracked objects:
 12144 ;;		On entry : 0/0
 12145 ;;		On exit  : 0/0
 12146 ;;		Unchanged: 0/0
 12147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12149 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12151 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12152 ;;Total ram usage:        5 bytes
 12153 ;; Hardware stack levels used: 1
 12154 ;; Hardware stack levels required when called: 3
 12155 ;; This function calls:
 12156 ;;		i2_I2C_2_Master_Start
 12157 ;;		i2_I2C_2_Master_Stop
 12158 ;;		i2_I2C_2_Master_Write
 12159 ;;		i2___lwdiv
 12160 ;;		i2_color_writetoaddr
 12161 ;; This function is called by:
 12162 ;;		_HighISR
 12163 ;; This function uses a non-reentrant model
 12164 ;;
 12165                           
 12166                           	psect	text48
 12167   004C9C                     __ptext48:
 12168                           	callstack 0
 12169   004C9C                     i2_color_clear_init_interrupts:
 12170                           	callstack 20
 12171   004C9C                     
 12172                           ;color.c: 29:     I2C_2_Master_Start();
 12173   004C9C  ECC7  F029         	call	i2_I2C_2_Master_Start	;wreg free
 12174                           
 12175                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
 12176   004CA0  0E52               	movlw	82
 12177   004CA2  ECA8  F029         	call	i2_I2C_2_Master_Write
 12178                           
 12179                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
 12180   004CA6  0EE6               	movlw	230
 12181   004CA8  ECA8  F029         	call	i2_I2C_2_Master_Write
 12182                           
 12183                           ;color.c: 32:     I2C_2_Master_Stop();
 12184   004CAC  ECC2  F029         	call	i2_I2C_2_Master_Stop	;wreg free
 12185                           
 12186                           ;color.c: 38:     unsigned int high_threshold = ambient + (ambient/3);
 12187   004CB0  C0FA  F001         	movff	_ambient,i2___lwdiv@dividend
 12188   004CB4  C0FB  F002         	movff	_ambient+1,i2___lwdiv@dividend+1
 12189   004CB8  0E00               	movlw	0
 12190   004CBA  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 12191   004CBC  0E03               	movlw	3
 12192   004CBE  6E03               	movwf	i2___lwdiv@divisor^0,c
 12193   004CC0  EC75  F027         	call	i2___lwdiv	;wreg free
 12194   004CC4  0100               	movlb	0	; () banked
 12195   004CC6  51FA               	movf	_ambient& (0+255),w,b
 12196   004CC8  2401               	addwf	?i2___lwdiv^0,w,c
 12197   004CCA  6E09               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
 12198   004CCC  51FB               	movf	(_ambient+1)& (0+255),w,b
 12199   004CCE  2002               	addwfc	(?i2___lwdiv+1)^0,w,c
 12200   004CD0  6E0A               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
 12201                           
 12202                           ;color.c: 39:     unsigned int low_threshold = ambient - (ambient/20);
 12203   004CD2  C0FA  F001         	movff	_ambient,i2___lwdiv@dividend
 12204   004CD6  C0FB  F002         	movff	_ambient+1,i2___lwdiv@dividend+1
 12205   004CDA  0E00               	movlw	0
 12206   004CDC  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 12207   004CDE  0E14               	movlw	20
 12208   004CE0  6E03               	movwf	i2___lwdiv@divisor^0,c
 12209   004CE2  EC75  F027         	call	i2___lwdiv	;wreg free
 12210   004CE6  5001               	movf	?i2___lwdiv^0,w,c
 12211   004CE8  0100               	movlb	0	; () banked
 12212   004CEA  5DFA               	subwf	_ambient& (0+255),w,b
 12213   004CEC  6E0B               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
 12214   004CEE  5002               	movf	(?i2___lwdiv+1)^0,w,c
 12215   004CF0  59FB               	subwfb	(_ambient+1)& (0+255),w,b
 12216   004CF2  6E0C               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
 12217                           
 12218                           ;color.c: 42:  color_writetoaddr(0x00, 0x13);
 12219   004CF4  0E13               	movlw	19
 12220   004CF6  6E03               	movwf	i2color_writetoaddr@value^0,c
 12221   004CF8  0E00               	movlw	0
 12222   004CFA  EC61  F029         	call	i2_color_writetoaddr
 12223   004CFE                     
 12224                           ;color.c: 43:     _delay((unsigned long)((3)*(64000000/4000.0)));
 12225   004CFE  0E3F               	movlw	63
 12226   004D00  6E08               	movwf	??i2_color_clear_init_interrupts^0,c
 12227   004D02  0E55               	movlw	85
 12228   004D04                     i2u489_47:
 12229   004D04  2EE8               	decfsz	wreg,f,c
 12230   004D06  D7FE               	bra	i2u489_47
 12231   004D08  2E08               	decfsz	??i2_color_clear_init_interrupts^0,f,c
 12232   004D0A  D7FC               	bra	i2u489_47
 12233   004D0C  0000               	nop	
 12234   004D0E                     
 12235                           ;color.c: 44:     color_writetoaddr(0x07, (high_threshold >> 8));
 12236   004D0E  500A               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
 12237   004D10  6E03               	movwf	i2color_writetoaddr@value^0,c
 12238   004D12  0E07               	movlw	7
 12239   004D14  EC61  F029         	call	i2_color_writetoaddr
 12240   004D18                     
 12241                           ;color.c: 45:     color_writetoaddr(0x06, (high_threshold & 0xFF));
 12242   004D18  C009  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
 12243   004D1C  0E06               	movlw	6
 12244   004D1E  EC61  F029         	call	i2_color_writetoaddr
 12245   004D22                     
 12246                           ;color.c: 46:     color_writetoaddr(0x05, (low_threshold >> 8));
 12247   004D22  500C               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
 12248   004D24  6E03               	movwf	i2color_writetoaddr@value^0,c
 12249   004D26  0E05               	movlw	5
 12250   004D28  EC61  F029         	call	i2_color_writetoaddr
 12251   004D2C                     
 12252                           ;color.c: 47:     color_writetoaddr(0x04, (low_threshold & 0xFF));
 12253   004D2C  C00B  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
 12254   004D30  0E04               	movlw	4
 12255   004D32  EC61  F029         	call	i2_color_writetoaddr
 12256   004D36                     
 12257                           ;color.c: 48:     color_writetoaddr(0x0C, 0b11);
 12258   004D36  0E03               	movlw	3
 12259   004D38  6E03               	movwf	i2color_writetoaddr@value^0,c
 12260   004D3A  0E0C               	movlw	12
 12261   004D3C  EC61  F029         	call	i2_color_writetoaddr
 12262   004D40  0012               	return		;funcret
 12263   004D42                     __end_ofi2_color_clear_init_interrupts:
 12264                           	callstack 0
 12265                           
 12266 ;; *************** function i2_color_writetoaddr *****************
 12267 ;; Defined at:
 12268 ;;		line 53 in file "color.c"
 12269 ;; Parameters:    Size  Location     Type
 12270 ;;  address         1    wreg     unsigned char 
 12271 ;;  value           1    2[COMRAM] unsigned char 
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;  address         1    3[COMRAM] unsigned char 
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  1    wreg      void 
 12276 ;; Registers used:
 12277 ;;		wreg, status,2, status,0, cstack
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12283 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12287 ;;Total ram usage:        2 bytes
 12288 ;; Hardware stack levels used: 1
 12289 ;; Hardware stack levels required when called: 2
 12290 ;; This function calls:
 12291 ;;		i2_I2C_2_Master_Start
 12292 ;;		i2_I2C_2_Master_Stop
 12293 ;;		i2_I2C_2_Master_Write
 12294 ;; This function is called by:
 12295 ;;		i2_color_clear_init_interrupts
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299                           	psect	text49
 12300   0052C2                     __ptext49:
 12301                           	callstack 0
 12302   0052C2                     i2_color_writetoaddr:
 12303                           	callstack 20
 12304                           
 12305                           ;incstack = 0
 12306                           ;i2color_writetoaddr@address stored from wreg
 12307   0052C2  6E04               	movwf	i2color_writetoaddr@address^0,c
 12308   0052C4                     
 12309                           ;color.c: 54:     I2C_2_Master_Start();
 12310   0052C4  ECC7  F029         	call	i2_I2C_2_Master_Start	;wreg free
 12311                           
 12312                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
 12313   0052C8  0E52               	movlw	82
 12314   0052CA  ECA8  F029         	call	i2_I2C_2_Master_Write
 12315                           
 12316                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
 12317   0052CE  5004               	movf	i2color_writetoaddr@address^0,w,c
 12318   0052D0  0980               	iorlw	128
 12319   0052D2  ECA8  F029         	call	i2_I2C_2_Master_Write
 12320                           
 12321                           ;color.c: 57:     I2C_2_Master_Write(value);
 12322   0052D6  5003               	movf	i2color_writetoaddr@value^0,w,c
 12323   0052D8  ECA8  F029         	call	i2_I2C_2_Master_Write
 12324                           
 12325                           ;color.c: 58:     I2C_2_Master_Stop();
 12326   0052DC  ECC2  F029         	call	i2_I2C_2_Master_Stop	;wreg free
 12327   0052E0  0012               	return		;funcret
 12328   0052E2                     __end_ofi2_color_writetoaddr:
 12329                           	callstack 0
 12330                           
 12331 ;; *************** function i2_I2C_2_Master_Write *****************
 12332 ;; Defined at:
 12333 ;;		line 45 in file "i2c.c"
 12334 ;; Parameters:    Size  Location     Type
 12335 ;;  data_byte       1    wreg     unsigned char 
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;  data_byte       1    1[COMRAM] unsigned char 
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  1    wreg      void 
 12340 ;; Registers used:
 12341 ;;		wreg, status,2, status,0, cstack
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12351 ;;Total ram usage:        1 bytes
 12352 ;; Hardware stack levels used: 1
 12353 ;; Hardware stack levels required when called: 1
 12354 ;; This function calls:
 12355 ;;		i2_I2C_2_Master_Idle
 12356 ;; This function is called by:
 12357 ;;		i2_color_clear_init_interrupts
 12358 ;;		i2_color_writetoaddr
 12359 ;; This function uses a non-reentrant model
 12360 ;;
 12361                           
 12362                           	psect	text50
 12363   005350                     __ptext50:
 12364                           	callstack 0
 12365   005350                     i2_I2C_2_Master_Write:
 12366                           	callstack 20
 12367                           
 12368                           ;incstack = 0
 12369                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 12370   005350  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 12371   005352                     
 12372                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 12373   005352  ECF7  F028         	call	i2_I2C_2_Master_Idle	;wreg free
 12374   005356                     
 12375                           ;i2c.c: 48:   SSP2BUF = data_byte;
 12376   005356  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 12377   00535A  0012               	return		;funcret
 12378   00535C                     __end_ofi2_I2C_2_Master_Write:
 12379                           	callstack 0
 12380                           
 12381 ;; *************** function i2_I2C_2_Master_Stop *****************
 12382 ;; Defined at:
 12383 ;;		line 39 in file "i2c.c"
 12384 ;; Parameters:    Size  Location     Type
 12385 ;;		None
 12386 ;; Auto vars:     Size  Location     Type
 12387 ;;		None
 12388 ;; Return value:  Size  Location     Type
 12389 ;;                  1    wreg      void 
 12390 ;; Registers used:
 12391 ;;		wreg, status,2, status,0, cstack
 12392 ;; Tracked objects:
 12393 ;;		On entry : 0/0
 12394 ;;		On exit  : 0/0
 12395 ;;		Unchanged: 0/0
 12396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12401 ;;Total ram usage:        0 bytes
 12402 ;; Hardware stack levels used: 1
 12403 ;; Hardware stack levels required when called: 1
 12404 ;; This function calls:
 12405 ;;		i2_I2C_2_Master_Idle
 12406 ;; This function is called by:
 12407 ;;		i2_color_clear_init_interrupts
 12408 ;;		i2_color_writetoaddr
 12409 ;; This function uses a non-reentrant model
 12410 ;;
 12411                           
 12412                           	psect	text51
 12413   005384                     __ptext51:
 12414                           	callstack 0
 12415   005384                     i2_I2C_2_Master_Stop:
 12416                           	callstack 20
 12417   005384                     
 12418                           ;i2c.c: 41:   I2C_2_Master_Idle();
 12419   005384  ECF7  F028         	call	i2_I2C_2_Master_Idle	;wreg free
 12420   005388                     
 12421                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 12422   005388  010E               	movlb	14	; () banked
 12423   00538A  85DA               	bsf	218,2,b	;volatile
 12424   00538C                     
 12425                           ; BSR set to: 14
 12426   00538C  0012               	return		;funcret
 12427   00538E                     __end_ofi2_I2C_2_Master_Stop:
 12428                           	callstack 0
 12429                           
 12430 ;; *************** function i2_I2C_2_Master_Start *****************
 12431 ;; Defined at:
 12432 ;;		line 27 in file "i2c.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;		None
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;		None
 12437 ;; Return value:  Size  Location     Type
 12438 ;;                  1    wreg      void 
 12439 ;; Registers used:
 12440 ;;		wreg, status,2, status,0, cstack
 12441 ;; Tracked objects:
 12442 ;;		On entry : 0/0
 12443 ;;		On exit  : 0/0
 12444 ;;		Unchanged: 0/0
 12445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12450 ;;Total ram usage:        0 bytes
 12451 ;; Hardware stack levels used: 1
 12452 ;; Hardware stack levels required when called: 1
 12453 ;; This function calls:
 12454 ;;		i2_I2C_2_Master_Idle
 12455 ;; This function is called by:
 12456 ;;		i2_color_clear_init_interrupts
 12457 ;;		i2_color_writetoaddr
 12458 ;; This function uses a non-reentrant model
 12459 ;;
 12460                           
 12461                           	psect	text52
 12462   00538E                     __ptext52:
 12463                           	callstack 0
 12464   00538E                     i2_I2C_2_Master_Start:
 12465                           	callstack 20
 12466   00538E                     
 12467                           ;i2c.c: 29:   I2C_2_Master_Idle();
 12468   00538E  ECF7  F028         	call	i2_I2C_2_Master_Idle	;wreg free
 12469   005392                     
 12470                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 12471   005392  010E               	movlb	14	; () banked
 12472   005394  81DA               	bsf	218,0,b	;volatile
 12473   005396                     
 12474                           ; BSR set to: 14
 12475   005396  0012               	return		;funcret
 12476   005398                     __end_ofi2_I2C_2_Master_Start:
 12477                           	callstack 0
 12478                           
 12479 ;; *************** function i2_I2C_2_Master_Idle *****************
 12480 ;; Defined at:
 12481 ;;		line 22 in file "i2c.c"
 12482 ;; Parameters:    Size  Location     Type
 12483 ;;		None
 12484 ;; Auto vars:     Size  Location     Type
 12485 ;;		None
 12486 ;; Return value:  Size  Location     Type
 12487 ;;                  1    wreg      void 
 12488 ;; Registers used:
 12489 ;;		wreg, status,2, status,0
 12490 ;; Tracked objects:
 12491 ;;		On entry : 0/0
 12492 ;;		On exit  : 0/0
 12493 ;;		Unchanged: 0/0
 12494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12499 ;;Total ram usage:        1 bytes
 12500 ;; Hardware stack levels used: 1
 12501 ;; This function calls:
 12502 ;;		Nothing
 12503 ;; This function is called by:
 12504 ;;		i2_I2C_2_Master_Start
 12505 ;;		i2_I2C_2_Master_Stop
 12506 ;;		i2_I2C_2_Master_Write
 12507 ;; This function uses a non-reentrant model
 12508 ;;
 12509                           
 12510                           	psect	text53
 12511   0051EE                     __ptext53:
 12512                           	callstack 0
 12513   0051EE                     i2_I2C_2_Master_Idle:
 12514                           	callstack 20
 12515   0051EE                     i2l267:
 12516   0051EE  010E               	movlb	14	; () banked
 12517   0051F0  B5D8               	btfsc	216,2,b	;volatile
 12518   0051F2  EFFD  F028         	goto	i2u188_41
 12519   0051F6  EFFF  F028         	goto	i2u188_40
 12520   0051FA                     i2u188_41:
 12521   0051FA  EFF7  F028         	goto	i2l267
 12522   0051FE                     i2u188_40:
 12523   0051FE                     
 12524                           ; BSR set to: 14
 12525   0051FE  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 12526   005202  0E1F               	movlw	31
 12527   005204  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 12528   005206  A4D8               	btfss	status,2,c
 12529   005208  EF08  F029         	goto	i2u189_41
 12530   00520C  EF0A  F029         	goto	i2u189_40
 12531   005210                     i2u189_41:
 12532   005210  EFF7  F028         	goto	i2l267
 12533   005214                     i2u189_40:
 12534   005214                     
 12535                           ; BSR set to: 14
 12536   005214  0012               	return		;funcret
 12537   005216                     __end_ofi2_I2C_2_Master_Idle:
 12538                           	callstack 0
 12539                           
 12540 ;; *************** function i2___lwdiv *****************
 12541 ;; Defined at:
 12542 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 12543 ;; Parameters:    Size  Location     Type
 12544 ;;  dividend        2    0[COMRAM] unsigned int 
 12545 ;;  divisor         2    2[COMRAM] unsigned int 
 12546 ;; Auto vars:     Size  Location     Type
 12547 ;;  quotient        2    4[COMRAM] unsigned int 
 12548 ;;  counter         1    6[COMRAM] unsigned char 
 12549 ;; Return value:  Size  Location     Type
 12550 ;;                  2    0[COMRAM] unsigned int 
 12551 ;; Registers used:
 12552 ;;		wreg, status,2, status,0
 12553 ;; Tracked objects:
 12554 ;;		On entry : 0/0
 12555 ;;		On exit  : 0/0
 12556 ;;		Unchanged: 0/0
 12557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12559 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12561 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12562 ;;Total ram usage:        7 bytes
 12563 ;; Hardware stack levels used: 1
 12564 ;; This function calls:
 12565 ;;		Nothing
 12566 ;; This function is called by:
 12567 ;;		i2_color_clear_init_interrupts
 12568 ;; This function uses a non-reentrant model
 12569 ;;
 12570                           
 12571                           	psect	text54
 12572   004EEA                     __ptext54:
 12573                           	callstack 0
 12574   004EEA                     i2___lwdiv:
 12575                           	callstack 22
 12576   004EEA  0E00               	movlw	0
 12577   004EEC  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
 12578   004EEE  0E00               	movlw	0
 12579   004EF0  6E05               	movwf	i2___lwdiv@quotient^0,c
 12580   004EF2  5003               	movf	i2___lwdiv@divisor^0,w,c
 12581   004EF4  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 12582   004EF6  B4D8               	btfsc	status,2,c
 12583   004EF8  EF80  F027         	goto	i2u254_41
 12584   004EFC  EF82  F027         	goto	i2u254_40
 12585   004F00                     i2u254_41:
 12586   004F00  EFAA  F027         	goto	i2l1259
 12587   004F04                     i2u254_40:
 12588   004F04  0E01               	movlw	1
 12589   004F06  6E07               	movwf	i2___lwdiv@counter^0,c
 12590   004F08  EF8A  F027         	goto	i2l3695
 12591   004F0C                     i2l3693:
 12592   004F0C  90D8               	bcf	status,0,c
 12593   004F0E  3603               	rlcf	i2___lwdiv@divisor^0,f,c
 12594   004F10  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 12595   004F12  2A07               	incf	i2___lwdiv@counter^0,f,c
 12596   004F14                     i2l3695:
 12597   004F14  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 12598   004F16  EF8F  F027         	goto	i2u255_41
 12599   004F1A  EF91  F027         	goto	i2u255_40
 12600   004F1E                     i2u255_41:
 12601   004F1E  EF86  F027         	goto	i2l3693
 12602   004F22                     i2u255_40:
 12603   004F22                     i2l3697:
 12604   004F22  90D8               	bcf	status,0,c
 12605   004F24  3605               	rlcf	i2___lwdiv@quotient^0,f,c
 12606   004F26  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 12607   004F28  5003               	movf	i2___lwdiv@divisor^0,w,c
 12608   004F2A  5C01               	subwf	i2___lwdiv@dividend^0,w,c
 12609   004F2C  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 12610   004F2E  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 12611   004F30  A0D8               	btfss	status,0,c
 12612   004F32  EF9D  F027         	goto	i2u256_41
 12613   004F36  EF9F  F027         	goto	i2u256_40
 12614   004F3A                     i2u256_41:
 12615   004F3A  EFA4  F027         	goto	i2l3705
 12616   004F3E                     i2u256_40:
 12617   004F3E  5003               	movf	i2___lwdiv@divisor^0,w,c
 12618   004F40  5E01               	subwf	i2___lwdiv@dividend^0,f,c
 12619   004F42  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 12620   004F44  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 12621   004F46  8005               	bsf	i2___lwdiv@quotient^0,0,c
 12622   004F48                     i2l3705:
 12623   004F48  90D8               	bcf	status,0,c
 12624   004F4A  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 12625   004F4C  3203               	rrcf	i2___lwdiv@divisor^0,f,c
 12626   004F4E  2E07               	decfsz	i2___lwdiv@counter^0,f,c
 12627   004F50  EF91  F027         	goto	i2l3697
 12628   004F54                     i2l1259:
 12629   004F54  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 12630   004F58  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 12631   004F5C  0012               	return		;funcret
 12632   004F5E                     __end_ofi2___lwdiv:
 12633                           	callstack 0
 12634                           
 12635                           	psect	smallconst
 12636   000E00                     __psmallconst:
 12637                           	callstack 0
 12638   000E00  00                 	db	0
 12639   000E01  00                 	db	0	; dummy byte at the end
 12640   000000                     
 12641                           	psect	rparam
 12642   000000                     
 12643                           	psect	temp
 12644   00004F                     btemp:
 12645                           	callstack 0
 12646   00004F                     	ds	1
 12647   000000                     int$flags	set	btemp
 12648   000000                     wtemp8	set	btemp+1
 12649   000000                     ttemp5	set	btemp+1
 12650   000000                     ttemp6	set	btemp+4
 12651   000000                     ttemp7	set	btemp+8
 12652                           
 12653                           	psect	config
 12654                           
 12655                           ;Config register CONFIG1L @ 0x300000
 12656                           ;	External Oscillator mode Selection bits
 12657                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12658                           ;	Power-up default value for COSC bits
 12659                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12660   300000                     	org	3145728
 12661   300000  AA                 	db	170
 12662                           
 12663                           ;Config register CONFIG1H @ 0x300001
 12664                           ;	unspecified, using default values
 12665                           ;	Clock Out Enable bit
 12666                           ;	CLKOUTEN = 0x1, unprogrammed default
 12667                           ;	Clock Switch Enable bit
 12668                           ;	CSWEN = 0x1, unprogrammed default
 12669                           ;	Fail-Safe Clock Monitor Enable bit
 12670                           ;	FCMEN = 0x1, unprogrammed default
 12671   300001                     	org	3145729
 12672   300001  FF                 	db	255
 12673                           
 12674                           ;Config register CONFIG3L @ 0x300004
 12675                           ;	WDT Period Select bits
 12676                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12677                           ;	WDT operating mode
 12678                           ;	WDTE = OFF, WDT Disabled
 12679   300004                     	org	3145732
 12680   300004  9F                 	db	159
 12681                           
 12682                           ;Config register CONFIG3H @ 0x300005
 12683                           ;	unspecified, using default values
 12684                           ;	WDT Window Select bits
 12685                           ;	WDTCWS = 0x7, unprogrammed default
 12686                           ;	WDT input clock selector
 12687                           ;	WDTCCS = 0x7, unprogrammed default
 12688   300005                     	org	3145733
 12689   300005  FF                 	db	255
 12690                           tosu	equ	0xFFF
 12691                           tosh	equ	0xFFE
 12692                           tosl	equ	0xFFD
 12693                           stkptr	equ	0xFFC
 12694                           pclatu	equ	0xFFB
 12695                           pclath	equ	0xFFA
 12696                           pcl	equ	0xFF9
 12697                           tblptru	equ	0xFF8
 12698                           tblptrh	equ	0xFF7
 12699                           tblptrl	equ	0xFF6
 12700                           tablat	equ	0xFF5
 12701                           prodh	equ	0xFF4
 12702                           prodl	equ	0xFF3
 12703                           indf0	equ	0xFEF
 12704                           postinc0	equ	0xFEE
 12705                           postdec0	equ	0xFED
 12706                           preinc0	equ	0xFEC
 12707                           plusw0	equ	0xFEB
 12708                           fsr0h	equ	0xFEA
 12709                           fsr0l	equ	0xFE9
 12710                           wreg	equ	0xFE8
 12711                           indf1	equ	0xFE7
 12712                           postinc1	equ	0xFE6
 12713                           postdec1	equ	0xFE5
 12714                           preinc1	equ	0xFE4
 12715                           plusw1	equ	0xFE3
 12716                           fsr1h	equ	0xFE2
 12717                           fsr1l	equ	0xFE1
 12718                           bsr	equ	0xFE0
 12719                           indf2	equ	0xFDF
 12720                           postinc2	equ	0xFDE
 12721                           postdec2	equ	0xFDD
 12722                           preinc2	equ	0xFDC
 12723                           plusw2	equ	0xFDB
 12724                           fsr2h	equ	0xFDA
 12725                           fsr2l	equ	0xFD9
 12726                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      78
    BANK0           160     88     156
    BANK1           256    216     256
    BANK2           256      0     142
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK1[1]), 

    color_calibration@blue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@blue(BANK1[6]), 

    color_calibration@green	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@green(BANK1[6]), 

    color_calibration@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK1[6]), 

    color_calibration@lightblue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@lightblue(BANK1[6]), 

    color_calibration@orange	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@orange(BANK1[6]), 

    color_calibration@pink	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@pink(BANK1[6]), 

    color_calibration@red	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@red(BANK1[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    color_calibration@white	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@white(BANK1[6]), 

    color_calibration@yellow	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@yellow(BANK1[6]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseShort@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseShort@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    rgb_2_hsv@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK1[6]), 

    S33DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S33DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), main@motorR(BANK1[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    wallAdjust@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    wallAdjust@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_detect
    _main->_move
    _wallAdjust->_setMotorPWM
    _move->_returnHome
    _reverseShort->_setMotorPWM
    _returnHome->_reverseOneSquare
    _lostReturnHome->_reverseOneSquare
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_detect->_max
    _color_detect->_min
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->___lwdiv
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_rgb_2_hsv
    _rgb_2_hsv->___aldiv
    ___lldiv->___lmul
    ___aldiv->___lmul
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2___lwdiv
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_calibration
    _color_calibration->_rgb_2_hsv

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               272   272      0  263354
                                             42 BANK0     46    46      0
                                              0 BANK1    216   216      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
        _color_clear_init_interrupts
                   _color_click_init
                       _color_detect
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                          _rgb_2_hsv
                               _stop
                         _wallAdjust
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _wallAdjust                                          16    10      6    5148
                                             34 COMRAM    16    10      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _move                                                19     2     17  120174
                                             72 COMRAM     2     2      0
                                              0 BANK0     17     0     17
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                       _reverseShort
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _reverseShort                                        14     8      6    6930
                                             34 COMRAM    14     8      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          23     7     16   59232
                                             49 COMRAM    23     7     16
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      21     5     16   58352
                                             49 COMRAM    21     5     16
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    5269
                                             34 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    15     7      8    6473
                                             34 COMRAM    15     7      8
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2      69
                                             15 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    7461
                                             34 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        68    14     54    3036
                                             19 COMRAM    55     1     54
                                              0 BANK0     13    13      0
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    2274
                                             33 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0    1524
                                             28 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                            ___lwdiv
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             17 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20   10744
                                             63 COMRAM     2     2      0
                                             22 BANK0     20     0     20
                         _color_read
                          _rgb_2_hsv
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rgb_2_hsv                                           44    34     10    7135
                                             41 COMRAM    22    12     10
                                              0 BANK0     22    22      0
                            ___aldiv
                            ___lldiv
                             ___lmul
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (2) _min                                                  4     0      4     696
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _max                                                  4     0      4     696
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1586
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     922
                                             27 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             27 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2    1243
                                             19 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                             16 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                             16 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   36246
                                             48 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   13649
                                             34 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   21249
                                             34 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3501
                                             28 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     662
                                             21 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     543
                                             23 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _LowISR                                               3     3      0       0
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighISR                                              0     0      0     600
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (8) i2_color_clear_init_interrupts                        5     5      0     600
                                              7 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                          i2___lwdiv
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (9) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _rgb_2_hsv
       ___aldiv
         ___lmul (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _max
       _min
     _white_Light
   _color_clear_init_interrupts
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
     ___lwdiv
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
     _color_writetoaddr
   _color_detect
     _max
     _min
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _reverseShort
       _setMotorPWM
     _turnLeft
     _turnRight
   _resetTimer
   _rgb_2_hsv
   _stop
   _wallAdjust
     _setMotorPWM
   _white_Light

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2___lwdiv
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      66        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      8E       9       55.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D8     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4A      4E       1       83.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2E      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      64        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhlllh       E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRllllhh      A      0       0      47        0.0%
BITBIGSFRlllllh      9      0       0      61        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      63        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      59        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      60        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      62        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhllll       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     278      65        0.0%
DATA                 0      0     278       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 12:45:18 2024

                                _white_Light 523C                                           l91 2A5C  
                                         l93 2A6A                                 ___awdiv@sign 0015  
                                         bsr 0FE0                          ___wmul@multiplicand 0012  
                         i2___lwdiv@dividend 0001                wallAdjust@wallReverseDuration 002D  
                           main@turnDuration 01B5                            ??_Interrupts_init 0010  
                                        l200 2600                                          l105 2E68  
                                        l202 260E                                          l211 2830  
                                        l203 26B6                                          l212 28D8  
                                        l205 26C4                                          l214 28E6  
                                        l206 276C                                          l223 513E  
                                        l215 298E                                          l160 4138  
                                        l224 5146                                          l232 32B0  
                                        l208 277A                                          l152 52A0  
                                        l209 2822                                          l218 516A  
                                        l146 50E4                                          l219 5172  
                                        l155 5258                                          l316 511A  
                                        l237 3346                                          l157 525E  
                                        l149 4C9A                                          l165 37C0  
                                        l270 51EC                                          l182 3ABE  
                                        l191 23DE                                          l264 519C  
                                        l353 5342                                          l273 5378  
                                        l193 23EC                                          l601 2358  
                                        l282 534E                                          l194 2494  
                                        l443 5318                                          l267 51C6  
                                        l460 5052                                          l276 5382  
                                        l196 24A2                                          l188 3AC0  
                                        l461 5054                                          l285 50AC  
                                        l197 254A                                          l541 4E74  
                                        l446 531C                                          l462 5068  
                                        l630 4588                                          l622 4A08  
                                        l710 3652                                          l279 536E  
                                        l199 2558                                          l607 2358  
                                        l448 532A                                          l464 506A  
                                        l704 35C2                                          l449 5330  
                                        l625 4A4A                                          l617 23D2  
                                        l721 3DF4                                          l713 36D6  
                                        l642 46CA                                          l634 45F4  
                                        l802 4DE4                                          l730 3F08  
                                        l651 441A                                          l548 4836  
                                        l636 4618                                          l396 52FE  
                                        l716 3718                                          l708 362E  
                                        l653 443E                                          l741 3BC6  
                                        l733 3F4A                                          l725 3E60  
                                        l742 3BFC                                          l582 1C98  
                                        l639 469C                                          l647 43AE  
                                        l727 3E84                                          l567 163A  
                                        l656 44C2                                          l664 4AE4  
                                        l592 1D26                                          l576 1C98  
                                        l745 3C4A                                          l737 3BAA  
                                        l673 41CE                                          l746 3D3A  
                                        l762 5364                                          l682 42D4  
                                        l690 33EC                                          l659 44F0  
                                        l748 3D5A                                          l780 4FC6  
                                        l668 4B30                                          l765 51C4  
                                        l685 4316                                          l677 423A  
                                        l694 3458                                          l759 52C0  
                                        l847 4942                                          l679 4250  
                                        l768 523A                                          l696 347C  
                                        l795 4DD4                                          l779 4FB6  
                                        l699 3500                                          l999 4BF4  
                                        _max 5148                                          _min 511C  
                            color_detect@HSV 0014                                ?_color_detect 0014  
                                        prod 0FF3                          i2_color_writetoaddr 52C2  
                                        wreg 0FE8                              color_detect@red 001A  
  color_clear_init_interrupts@high_threshold 001E  i2color_clear_init_interrupts@high_threshold 0009  
                                       l3011 51D6                                         l3021 4E7E  
                                       l3013 5216                                         l3031 4EB4  
                                       l3023 4E90                                         l3015 5232  
                                       l3111 49D2                                         l3103 4944  
                                       l3033 4ECA                                         l3025 4E98  
                                       l3201 44E6                                         l3009 51C6  
                                       l3041 5370                                         l3121 4A2C  
                                       l3113 49DE                                         l3105 498C  
                                       l4001 35E6                                         l1266 4EE8  
                                       l3035 4ED2                                         l3027 4EA0  
                                       l1259 4EE0                                         l3019 4E76  
                                       l3211 4550                                         l3131 537E  
                                       l3043 5374                                         l3051 536A  
                                       l3115 49EA                                         l4011 3658  
                                       l4003 35EA                                         l3037 4ED4  
                                       l3029 4EAE                                         l3061 4754  
                                       l3053 46CC                                         l3221 45AC  
                                       l3213 455C                                         l3205 44F2  
                                       l3141 50A8                                         l3133 506E  
                                       l3045 5346                                         l3301 4F6E  
                                       l3117 49F6                                         l3125 4A36  
                                       l3109 499E                                         l4101 0E14  
                                       l4021 36B6                                         l4005 360E  
                                       l3039 4EDA                                         l3063 4796  
                                       l3055 46E8                                         l3231 461E  
                                       l3215 4568                                         l3223 45B0  
                                       l3207 4510                                         l3143 50AA  
                                       l3135 5072                                         l3047 534A  
                                       l3311 4D52                                         l3303 4F7C  
                                       l3127 5284                                         l3119 4A04  
                                       l4103 0E30                                         l4111 0ED8  
                                       l4023 36C2                                         l4031 3704  
                                       l4015 366A                                         l4007 361A  
                                       l3065 47B2                                         l3057 473C  
                                       l3241 467C                                         l3225 45D4  
                                       l3217 4574                                         l3209 451C  
                                       l3161 4336                                         l3137 507A  
                                       l3129 537A                                         l3049 5366  
                                       l3401 4056                                         l3321 4D94  
                                       l3313 4D68                                         l3305 4F8C  
                                       l3153 5148                                         l4041 37B0  
                                       l4033 371A                                         l3081 4AAC  
                                       l3073 535C                                         l4201 14FC  
                                       l4121 0F76                                         l4113 0EEA  
                                       l4105 0E48                                         l4025 36D2  
                                       l4017 369E                                         l4009 362A  
                                       l3067 47F6                                         l3059 4750  
                                       l3243 4688                                         l3235 4630  
                                       l3227 45E0                                         l3219 4584  
                                       l3171 439A                                         l3163 4342  
                                       l3139 5082                                         l3403 4074  
                                       l3331 4838                                         l3323 4DB2  
                                       l3315 4D70                                         l3307 4F96  
                                       l3155 515E                                         l3147 511C  
                                       l3411 4C58                                         l4051 3810  
                                       l4043 37B8                                         l4035 371E  
                                       l3091 4B08                                         l3083 4AB8  
                                       l3075 4A4C                                         l3251 413A  
                                       l4211 157A                                         l4203 1514  
                                       l4131 102C                                         l4115 0F06  
                                       l4123 0FAE                                         l4107 0E80  
                                       l4027 36FA                                         l4019 36AA  
                                       l3245 4698                                         l3237 4664  
                                       l3229 45F0                                         l3181 4406  
                                       l3173 43AA                                         l3165 4376  
                                       l3405 40D4                                         l3341 486C  
                                       l3333 483C                                         l3325 4DC2  
                                       l3317 4D7C                                         l3309 4D42  
                                       l3149 5132                                         l3421 4C90  
                                       l3413 4C68                                         l4053 3848  
                                       l4061 38B2                                         l4037 3756  
                                       l4045 37C4                                         l3085 4AC4  
                                       l3093 4B0C                                         l3077 4A6C  
                                       l3261 41AE                                         l3253 4156  
                                       l4301 21F4                                         l4221 1D2C  
                                       l3501 3E1C                                         l4213 15C2  
                                       l4205 1534                                         l4133 104C  
                                       l4125 0FC0                                         l4141 10F4  
                                       l4117 0F1E                                         l4109 0EA0  
                                       l3247 46C0                                         l3239 4670  
                                       l3191 448A                                         l3183 4416  
                                       l3175 43D2                                         l3167 4382  
                                       l3159 4318                                         l3407 40F2  
                                       l3351 48AE                                         l3343 487C  
                                       l3335 484A                                         l3327 4DC4  
                                       l3319 4D8A                                         l3431 3008  
                                       l3423 2E6C                                         l3415 4C72  
                                       l4071 3942                                         l4063 38D4  
                                       l4055 3880                                         l4047 37E6  
                                       l4039 378E                                         l3087 4AD0  
                                       l3079 4A78                                         l3095 519E  
                                       l3271 421A                                         l3263 41BA  
                                       l3255 4162                                         l4303 2212  
                                       l4231 1DF4                                         l4223 1D4C  
                                       l3503 3E40                                         l4215 15DE  
                                       l4207 1546                                         l4151 1196  
                                       l4143 1106                                         l4135 1084  
                                       l4127 0FDC                                         l4119 0F56  
                                       l3193 4496                                         l3185 4444  
                                       l3169 438E                                         l3177 43D6  
                                       l3361 4900                                         l3353 48BA  
                                       l3345 4880                                         l3337 485A  
                                       l3329 4DCE                                         l3441 3158  
                                       l3433 306C                                         l3425 2FC0  
                                       l3417 4C7C                                         l3409 4BF6  
                                       l4081 39A6                                         l4065 38F6  
                                       l4057 38A2                                         l4049 3808  
                                       l4073 3946                                         l3089 4AE0  
                                       l3097 51AA                                         l3281 4268  
                                       l3273 4226                                         l3265 41CA  
                                       l3257 4196                                         l4321 2334  
                                       l4305 2232                                         l4313 22A6  
                                       l4241 1E42                                         l4233 1E0C  
                                       l4225 1D64                                         l3601 1ABC  
                                       l3521 3EF4                                         l3513 3E9C  
                                       l3505 3E4C                                         l4217 15F6  
                                       l4209 1562                                         l4161 1234  
                                       l4153 11CE                                         l4145 1122  
                                       l4137 109C                                         l4129 0FF4  
                                       l3195 44A2                                         l3179 43FA  
                                       l3371 4932                                         l3363 4902  
                                       l3355 48C8                                         l3347 4890  
                                       l3339 485E                                         l3451 3332  
                                       l3443 31F2                                         l3435 3082  
                                       l3427 2FDA                                         l3419 4C86  
                                       l4091 3A86                                         l4083 3A00  
                                       l4075 395C                                         l4067 38FE  
                                       l4059 38AA                                         l3099 51BC  
                                       l3291 42D0                                         l3283 429C  
                                       l3275 4236                                         l3267 41F2  
                                       l3259 41A2                                         l4315 22C4  
                                       l4307 224A                                         l4251 1EA0  
                                       l4331 23C2                                         l4243 1E5A  
                                       l4235 1E28                                         l4227 1D9C  
                                       l4219 1D28                                         l3611 1B52  
                                       l3603 1AD4                                         l3531 163C  
                                       l3523 3F04                                         l3515 3ED0  
                                       l3507 3E5C                                         l4171 12F8  
                                       l4163 124C                                         l4155 11E6  
                                       l4147 113A                                         l4139 10D4  
                                       l3197 44AE                                         l3189 4456  
                                       l3365 490C                                         l3357 48D2  
                                       l3349 48A6                                         l3445 320A  
                                       l3437 30E4                                         l3429 2FF2  
                                       l3461 5188                                         l3453 5174  
                                       l4093 3A98                                         l4077 397E  
                                       l4085 3A04                                         l4069 3920  
                                       l3293 42F8                                         l3285 42A8  
                                       l3277 4256                                         l3269 41F6  
                                       l4325 2374                                         l4317 22E4  
                                       l4309 2282                                         l4261 1F4A  
                                       l4253 1EB8                                         l4245 1E62  
                                       l4237 1E2C                                         l4229 1DBC  
                                       l3613 1B72                                         l3621 1BE6  
                                       l3605 1B0C                                         l3541 1704  
                                       l3533 165C                                         l3525 3F2C  
                                       l3517 3EDC                                         l3509 3E8A  
                                       l4181 1396                                         l4165 1288  
                                       l4173 1318                                         l4149 1176  
                                       l4157 1206                                         l3471 5314  
                                       l3199 44BE                                         l3391 3F4C  
                                       l3359 48F0                                         l3367 4912  
                                       l3447 3308                                         l3439 3140  
                                       l3463 518A                                         l3455 517E  
                                       l3711 50AE                                         l4095 3ABA  
                                       l4087 3A1A                                         l4079 3994  
                                       l3287 42B4                                         l4327 2378  
                                       l4319 22FC                                         l4271 2014  
                                       l4263 1F86                                         l4255 1EF4  
                                       l4247 1E64                                         l4239 1E32  
                                       l3623 1C04                                         l3615 1B8A  
                                       l3551 179A                                         l3543 171C  
                                       l3535 1674                                         l3519 3EE8  
                                       l4191 1438                                         l4183 13B6  
                                       l4175 132A                                         l4167 12A8  
                                       l4159 1218                                         l3473 5316  
                                       l3465 5300                                         l3641 4B32  
                                       l3393 3F66                                         l3369 4922  
                                       l3449 3326                                         l3801 255C  
                                       l3457 5184                                         l3721 50E0  
                                       l3713 50B2                                         l4089 3A70  
                                       l3289 42C0                                         l3297 4302  
                                       l4329 23AA                                         l4281 20C6  
                                       l4273 2034                                         l4265 1FA4  
                                       l4257 1F12                                         l4249 1E80  
                                       l3633 1CB4                                         l3625 1C24  
                                       l3617 1BC2                                         l3609 1B34  
                                       l3561 17F8                                         l3553 17A2  
                                       l3545 1738                                         l3537 16AC  
                                       l3529 3F36                                         l3481 3D5C  
                                       l4193 1454                                         l4185 13EE  
                                       l4177 1346                                         l4169 12E0  
                                       l4601 2A08                                         l3475 531A  
                                       l3467 530A                                         l3651 4B5E  
                                       l3643 4B36                                         l3395 3F80  
                                       l3299 4F5E                                         l3387 523E  
                                       l3811 25E4                                         l3803 2568  
                                       l3459 5186                                         l3715 50BC  
                                       l3731 52FA                                         l3723 52E2  
                                       l4291 215C                                         l4283 20DE  
                                       l4275 206C                                         l4267 1FC4  
                                       l4259 1F32                                         l3635 1CB8  
                                       l3627 1C3C                                         l3571 18C6  
                                       l3563 1834                                         l3555 17A4  
                                       l3547 173C                                         l3539 16CC  
                                       l3491 3DC8                                         l3483 3D60  
                                       l4195 146C                                         l4187 1406  
                                       l4179 135E                                         l4099 0E02  
                                       l4611 2A20                                         l4603 2A10  
                                       l3709 50E6                                         l3477 532E  
                                       l3469 5312                                         l3661 4B8C  
                                       l3653 4B66                                         l3645 4B44  
                                       l3901 3BF6                                         l3397 3FD8  
                                       l3389 524E                                         l3821 2658  
                                       l3813 25FC                                         l3805 258A  
                                       l3717 50CC                                         l3741 4E20  
                                       l3733 52FC                                         l3725 52EC  
                                       l4293 217C                                         l4285 2116  
                                       l4269 1FDC                                         l4277 2088  
                                       l3637 1CFE                                         l3629 1C74  
                                       l3581 1974                                         l3573 18E4  
                                       l3565 1852                                         l3557 17C0  
                                       l3549 1782                                         l3493 3DD4  
                                       l3485 3D6E                                         l4197 14A4  
                                       l4189 1426                                         l4701 2D9E  
                                       l4621 2A40                                         l4613 2A28  
                                       l4605 2A14                                         l3671 4BC6  
                                       l3663 4B94                                         l3655 4B6A  
                                       l3647 4B4C                                         l3911 3C3C  
                                       l3903 3C0A                                         l3399 3FF6  
                                       l3831 26D4                                         l3823 267A  
                                       l3815 2612                                         l3807 25A2  
                                       l3719 50D6                                         l3751 4E5C  
                                       l3743 4E44                                         l3735 4DE6  
                                       l3727 52EE                                         l4295 2194  
                                       l4279 20A6                                         l3591 1A1E  
                                       l3583 19AC                                         l3575 1904  
                                       l3567 1872                                         l3559 17E0  
                                       l3639 1D16                                         l3495 3DE0  
                                       l3487 3D88                                         l4199 14C4  
                                       l4711 2DB8                                         l4703 2DA6  
                                       l4631 2A58                                         l4623 2A44  
                                       l4615 2A30                                         l4607 2A18  
                                       l3681 4BEC                                         l3673 4BC8  
                                       l3665 4BA2                                         l3657 4B72  
                                       l3649 4B50                                         l3761 5028  
                                       l3921 3CF6                                         l3913 3C4E  
                                       l3905 3C14                                         l3841 2768  
                                       l3833 26F6                                         l3825 269A  
                                       l3817 261E                                         l3809 25C4  
                                       l3753 4E66                                         l3745 4E4E  
                                       l3737 4DF6                                         l3729 52F8  
                                       l4297 21CC                                         l4289 213E  
                                       l3593 1A56                                         l3577 191C  
                                       l3585 19C8                                         l3569 188A  
                                       l3497 3DF0                                         l3489 3DBC  
                                       l4721 2E34                                         l4713 2DBC  
                                       l4705 2DAA                                         l4641 2B0A  
                                       l4633 2A72                                         l4625 2A4C  
                                       l4617 2A38                                         l4609 2A1C  
                                       l3931 52B4                                         l3675 4BCE  
                                       l3667 4BA8                                         l3659 4B84  
                                       l3763 503E                                         l3923 3D3E  
                                       l3915 3C76                                         l3907 3C16  
                                       l3851 27E6                                         l3843 277E  
                                       l3835 270E                                         l3827 26B2  
                                       l3819 2640                                         l3771 23DA  
                                       l3755 4E68                                         l3747 4E50  
                                       l3739 4E1C                                         l3587 19E6  
                                       l3579 1954                                         l3499 3E18  
                                       l4723 2E38                                         l4707 2DB0  
                                       l4715 2DC2                                         l4651 2B3C  
                                       l4643 2B24                                         l4635 2A8A  
                                       l4627 2A50                                         l4619 2A3C  
                                       l4571 299C                                         l3933 52BE  
                                       l3669 4BBE                                         l3677 4BD4  
                                       l3765 504C                                         l3925 3D56  
                                       l3917 3C8E                                         l3909 3C2E  
                                       l3861 2862                                         l3853 2806  
                                       l3845 278A                                         l3837 2730  
                                       l3829 26C8                                         l3781 2458  
                                       l3773 23F0                                         l3757 4E72  
                                       l3749 4E5A                                         l3589 1A06  
                                       l3597 1A7E                                         l3941 3364  
                                       l4717 2DD4                                         l4725 2E42  
                                       l4709 2DB4                                         l4661 2B7A  
                                       l4653 2B44                                         l4645 2B28  
                                       l4637 2AE0                                         l4629 2A54  
                                       l4581 29C2                                         l4573 29A2  
                                       ?_max 0010                                         l3935 5332  
                                       l3927 52A2                                         l3679 4BE4  
                                       l3767 5062                                         l3759 501E  
                                       l3919 3CCE                                         l3871 28EA  
                                       l3863 287A                                         l3855 281E  
                                       l3847 27AC                                         l3839 2750  
                                       l3791 24D4                                         l3783 2478  
                                       l3775 23FC                                         l3599 1A9C  
                                       l3951 33D8                                         l3943 3380  
                                       l4727 2E56                                         l4719 2DD8  
                                       l4671 2BAA                                         l4663 2B80  
                                       l4655 2B48                                         l4647 2B2C  
                                       l4639 2B04                                         l4591 29EA  
                                       l4583 29D2                                         l4575 29A6  
                                       l4567 2990                                         l3929 52AA  
                                       l3881 2972                                         l3873 28F6  
                                       l3865 289C                                         l3857 2834  
                                       l3849 27C4                                         l3793 24EC  
                                       l3785 2490                                         l3777 241E  
                                       l3769 23D4                                         l3961 3444  
                                       l3953 33E8                                         l3945 33B4  
                                       l3937 3348                                         l4673 2BC8  
                                       l4681 2BF0                                         l4665 2B84  
                                       l4657 2B5A                                         l4649 2B30  
                                       l4593 29F0                                         l4585 29D6  
                                       l4577 29B2                                         l4569 299C  
                                main@curMove 01B3                                         l3891 3B42  
                                       l3883 298A                                         l3875 2918  
                                       l3867 28BC                                         l3859 2840  
                                       l3795 250E                                         l3787 24A6  
                                       l3779 2436                                         l3971 34C8  
                                       l3963 3454                                         l3955 3410  
                                       l3947 33C0                                         l3939 3354  
                                       l4691 2C70                                         l4675 2BD0  
                                       l4667 2B96                                         l4683 2BFC  
                                       l4659 2B76                                         l4595 29F4  
                                       l4587 29DA                                         l4579 29BE  
                                       ?_min 0010                                         l3893 3B6A  
                                       l3885 3AC2                                         l3877 2930  
                                       l3869 28D4                                         l3797 252E  
                                       l3789 24B2                                         l3981 3524  
                                       l3973 34D4                                         l3965 3482  
                                       l3949 33CC                                         l3957 3414  
                                       l4693 2C8E                                         l4685 2C0E  
                                       l4677 2BD4                                         l4669 2BA2  
                                       l4597 29F8                                         l4589 29DE  
                                       l3895 3BB8                                         l3887 3AEA  
                                       l3879 2952                                         l3799 2546  
                                       l3991 358A                                         l3975 34E0  
                                       l3959 3438                                         l4695 2D38  
                                       l4687 2C12                                         l4679 2BE6  
                                       l4599 2A00                                         l3897 3BD4  
                                       l3889 3B02                                         l3993 3596  
                                       l3977 34EC                                         l3985 352E  
                                       l3969 3494                                         l4697 2D48  
                                       l4689 2C64                                         l3899 3BEC  
                                       l3995 35A2                                         l3987 354A  
                                       l3979 34FC                                         l4699 2D92  
                                       l3997 35AE                                         l3989 3556  
                                       l3999 35BE                                         u2000 443E  
                                       u2001 443A                                         u2010 4452  
                                       u2011 444E                                         u2020 44E6  
                                       u2100 4250                                         u2021 44E2  
                                       u2101 424C                                         u2030 45AC  
                                       u2110 4264                                         u2031 45A8  
                                       u2111 4260                                         u2040 45D4  
                                       u2200 48A6                                         u3000 38F6  
                                       u2120 42F8                                         u2041 45D0  
                                       u2201 48A2                                         u3001 38F2  
                                       u2121 42F4                                         u2050 4618  
                                       u2210 48C8                                         u2130 4F7C  
                                       u3010 3920                                         u2051 4614  
                                       u2211 48C4                                         u2131 4F78  
                                       u3011 391C                                         u2060 462C  
                                       u2220 48F0                                         u2140 4FB6  
                                       u3100 3A86                                         u3020 3942  
                                       u2061 4628                                         u2221 48EC  
                                       u2141 4FB2                                         u3101 3A82  
                                       u3021 393E                                         u2070 46C0  
                                       u2230 4922                                         u2150 4D68  
                                       u2310 3326                                         u3110 3A98  
                                       u3030 395C                                         u2071 46BC  
                                       u2231 491E                                         u2151 4D64  
                                       u2311 3322                                         u3111 3A94  
                                       u3031 3958                                         u2320 532A  
                                       u2160 4D8A                                         u2240 524E  
                                       u3120 3ABA                                         u3040 397E  
                                       u2080 41F2                                         u2400 1852  
                                       u3200 1546                      color_calibration@orange 0084  
                               _BAUD4CONbits 0EE9                                         u2321 5326  
                                       u2161 4D86                                         u2305 3228  
                                       u2241 524A                                         u3121 3AB6  
                                       u3041 397A                                         u2081 41EE  
                                       u2401 184E                                         u3201 1542  
                                       u2170 4DB2                                         u2250 2FF2  
                                       u3050 3994                                         u2090 421A  
                                       u3210 1E42                                         u2410 18E4  
                                       u2330 3E18                                         u3130 0E14  
                                       u2171 4DAE                                         u2251 2FEE  
                                       u3051 3990                                         u2091 4216  
                                       u3211 1E3E                                         u2411 18E0  
                                       u2331 3E14                                         u3131 0E10  
                                       u2500 4B84                                         u2180 484A  
                                       u2260 3008                                         u3060 39A6  
                                       u3300 23D2                                         u3220 1E80  
                                       u2420 19E6                                         u2340 3E40  
                                       u3140 0EEA                                         u2501 4B80  
                                       u2181 4846                                         u2261 3004  
                                       u3061 39A2                                         u3301 23CE  
                                       u3221 1E7C                                         u2421 19E2  
                                       u2341 3E3C                                         u3141 0EE6  
                                       u2510 4BA2                                         u2190 486C  
                                       u2270 3082                                         u3070 3A00  
                                       u3230 1F12                                         u2430 1A9C  
                                       u2350 3E84                                         u3150 0FC0  
                                       u2511 4B9E                                         u2191 4868  
                                       u2271 307E                                         u3071 39FC  
                                       u3231 1F0E                                         u2431 1A98  
                                       u2351 3E80                                         u4007 1168  
                                       u3151 0FBC                                         u2520 4BBE  
                                       u2280 3158                                         u3080 3A1A  
                                       u3240 1FA4                                         u2440 1B52  
                                       u2360 3E98                                         u3160 1106  
                                       u2521 4BBA                                         u2281 3154  
                                       u2601 240A                                         u3081 3A16  
                                       u3241 1FA0                                         u2441 1B4E  
                                       u2361 3E94                                         u4017 11A0  
                                       u3161 1102                                         u2530 4BE4  
                                       u1810 51D6                                         u2290 320A  
                                       u2610 24A2                                         u3090 3A70  
                                       u3250 20A6                                         u2450 1C04  
                                       u2370 3F2C                                         u3170 1218  
                                       _T2PR 0FBC                                         u2531 4BE0  
                                       u1811 51D2                                         u2291 3206  
                                       u2611 249E                                         u3091 3A6C  
                                       u3251 20A2                                         u2451 1C00  
                                       u2371 3F28                                         u4107 13F8  
                                       u3171 1214                                         u4027 11D8  
                                       u1820 51EC                                         u1900 4B08  
                                       u3260 215C                                         u2460 1CFE  
                                       u2380 1782                                         u3180 132A  
                                       u1821 51E8                                         u2701 2798  
                                       u2621 24C0                                         u1901 4B04  
                                       u3261 2158                                         u2461 1CFA  
                                       u2381 177E                                         u4117 145E  
                                       u3181 1326                                         u4037 123E  
                                       u1830 4E90                                         u2710 2830  
                                       u2630 2558                                         u1910 4B30  
                                       u3270 2212                                         u2470 1D26  
                                       u2390 17C0                                         u3190 1438  
                                       u1831 4E8C                                         u2711 282C  
                                       u2631 2554                                         u1911 4B2C  
                                       u3271 220E                                         u2471 1D22  
                                       u2391 17BC                                         u4207 1666  
                                       u4127 1496                                         u3191 1434  
                                       u4047 127A                                         u2480 4B44  
                                       u1840 4EAE                                         u2800 3C3C  
                                       u1920 499A                                         u3280 22C4  
                                       u2481 4B40                                         u1841 4EAA  
                                       u2801 3C38                                         u2721 284E  
                                       u2641 2576                                         u1921 4996  
                                       u3281 22C0                                         u4217 169E  
                                       u4137 14CE                                         u4057 12B2  
                                       u3601 29B8                                         u2490 4B5E  
                                       u2570 504C                                         u1850 4ECA  
                                       u2730 28E6                                         u2650 260E  
                                       u1930 4A2C                                         u3290 23AA  
                                       u2810 3410                                         u3610 2A6A  
                                       u2491 4B5A                                         u2571 5048  
                                       u1851 4EC6                                         u2731 28E2  
                                       u2651 260A                                         u1931 4A28  
                                       u3291 23A6                                         u4307 197E  
                                       u4227 16D6                                         u4147 1506  
                                       u4067 12EA                                         u2811 340C  
                                       u3611 2A66                                         u2580 5062  
                                       u1860 46E8                                         u1940 5096  
                                       u2900 36FA                                         u2820 3438  
                                       u3620 2B96                                         u2581 505E  
                                       u1861 46E4                                         u1941 508E  
                                       u2741 2904                                         u2661 262C  
                                       u4317 19B6                                         u4237 170E  
                                       u4157 156C                                         u4077 1350  
                                       u2901 36F6                                         u2821 3434  
                                       u3701 2CE0                                         u3621 2B92  
                                       u1870 47B2                                         u2750 3BB8  
                                       u2670 26C4                                         u2590 23EC  
                                       u2910 3756                                         u2830 347C  
                                       u3630 2BC8                                         u1871 47AE  
                                       u2751 3BB4                                         u2671 26C0  
                                       u2591 23E8                                         u2911 3752  
                                       u4407 1D56                                         u4327 1A10  
                                       u4247 17EA                                         u4167 15E8  
                                       u4087 1388                                         u2831 3478  
                                       u3711 2CF2                                         u3631 2BC4  
                                       u2760 3BC6                                         u1960 5132  
                                       u2920 378E                                         u2840 3490  
                                       u3640 2C0E                                         u2761 3BC2  
                                       u1961 512E                                         u2681 26E2  
                                       u2921 378A                                         u4417 1D8E  
                                       u4337 1A48                                         u4257 1822  
                                       u4177 3DE6                                         u4097 13C0  
                                       u2841 348C                                         u3721 2D04  
                                       u3641 2C0A                                         u2770 3BD4  
                                       u1970 515E                                         u2690 277A  
                                       u2930 37B0                                         u2850 3524  
                                       u2771 3BD0                                         u1971 515A  
                                       u2691 2776                                         u2931 37AC  
                                       u4507 203E                                         u4427 1DC6  
                                       u4347 1AC6                                         u4267 187C  
                                       u4187 3E52                                         u2851 3520  
                                       u3731 2D16                                         u3651 2C7A  
                                       u1980 43D2                                         u2780 3BEC  
                                       u2940 37E6                                         u2860 35E6  
                                       u1981 43CE                                         u2781 3BE8  
                                       u2941 37E2                                         u4517 2076  
                                       u4437 1DFE                                         u4357 1AFE  
                                       u4277 18B4                                         u4197 3EFA  
                                       u2861 35E2                                         u3741 2D28  
                                       u3661 2C98                                         u3581 2996  
                                       u1990 43FA                                         u2790 3C0A  
                                       u1958 5098                                         u2950 3808  
                                       u2870 360E                                         u3750 2DD4  
                                       u1991 43F6                                         u2791 3C06  
                                       u2951 3804                                         u4607 49FC  
                                       u4527 20D0                                         u4447 1EAA  
                                       u4367 1B7C                                         u4287 190E  
                                       u2871 360A                                         u3751 2DD0  
                                       u3671 2CAA                                         u3807 2B50  
                                       u3591 29AC                                         u2960 3848  
                                       u2880 3652                                         u3760 2E56  
                                       u2961 3844                                         u4617 41C0  
                                       u4537 2108                                         u4457 1EE2  
                                       u4377 1BB4                                         u4297 1946  
                                       u2881 364E                                         u3761 2E52  
                                       u3681 2CBC                                         u3817 2BDC  
                                       u2970 3880                                         u2890 3666  
                                       u3770 2E68                                         u4707 26A4  
                                       u2971 387C                                         u4627 422C  
                                       u4547 2186                                         u4467 1F3C  
                                       u4387 1C2E                                         u3907 0EAA  
                                       u2891 3662                                         u3827 33DE  
                                       u3771 2E64                                         u3691 2CCE  
                                       u2980 38A2                                         u4717 275A  
                                       u2981 389E                                         u4637 42C6  
                                       u4557 21BE                                         u4477 1F74  
                                       u4397 1C66                                         u3917 0F10  
                                       u3837 344A                                         u2990 38D4  
                                       u4807 3CC0                                         u4727 2810  
                                       u2991 38D0                                         u4647 4AD6  
                                       u4567 223C                                         u4487 1FCE  
                                       u3927 0F48                                         u3847 34F2  
                                       u4817 3D00                                         u4737 28C6  
                                       u4657 50C2                                         u4577 2274  
                                       u4497 2006                                         u3937 0F80  
                                       u3857 35B4                                         u4827 3D48  
                                       u4747 297C                                         u4667 4C5E  
                                       u4587 22EE                                         u3947 0FE6  
                                       u3867 3620                                         u3787 2A7E  
                                       u4837 43A0                                         u4757 3AF4  
                                       u4677 2482                                         u4597 2326  
                                       u3957 101E                                         u3877 36C8  
                                       u3797 2B16                                         u4847 440C  
                                       u4767 3B34                                         u4687 2538  
                                       u3967 1056                                         u3887 0E3A  
                                       u4857 44B4                                         u4777 3B74  
                                       u4697 25EE                                         u3977 108E  
                                       u3897 0E72                                         u4867 457A  
                                       u4787 3C20                                         u3987 10C6  
                                       u4877 45E6                                         u4797 3C80  
                                       u3997 112C                                         u4887 468E  
                    color_calibration@yellow 0080                  lostReturnHome@straightSpeed 003B  
                                       _main 2990                                         _move 0E02  
                                       _lost 00F4                                         fsr1h 0FE2  
                         i2___lwdiv@quotient 0005                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         max@a 0010  
                                       max@b 0012                                         btemp 004F  
                                       _stop 4944                                         min@a 0010  
                                       min@b 0012                                         prodh 0FF4  
                                       prodl 0FF3                                         start 0058  
                           color_detect@blue 0026                          main@reverseDuration 017D  
                           __end_of_ADC_init 531A                         ?i2_color_writetoaddr 0003  
                           color_detect@pink 0032                              __end_of_HighISR 5282  
                      lostReturnHome@curMove 003A                                 ___param_bank 0000  
                       __end_of_batteryLevel 506C                                        ??_max 0014  
                                      ??_min 0014                              __end_of___aldiv 4944  
                                      ?_main 0001                                        _ADPCH 0F5F  
                            __end_of___awdiv 4BF6                                        ?_move 0060  
                            __end_of___lldiv 4DE6                                        ?_stop 0023  
                            ___awdiv@divisor 0012                              __end_of___lwdiv 4EEA  
                                      i1l365 0048                                        i2l152 52E0  
                                      i2l149 4D40                                        i2l270 5214  
                                      i2l273 5396                                        i2l282 535A  
                                      i2l267 51EE                                        i2l279 538C  
                                      i2l359 527E                              ___awdiv@counter 0014  
                             ??_color_detect 0060                                        _TMR0H 0FD4  
                                      _TMR0L 0FD3                          ___lmul@multiplicand 0014  
                 __end_of_I2C_2_Master_Start 537A                   __end_of_I2C_2_Master_Write 5350  
                                 _Buggy_init 50E6                   color_calibration@lightblue 0086  
                     returnHome@straightRamp 003E                       returnHome@straightTime 0038  
                                      tablat 0FF5                                        plusw0 0FEB  
                                      plusw2 0FDB                                        ttemp5 0050  
                                      ttemp6 0053                                        ttemp7 0057  
                                      stop@i 002B                                        status 0FD8  
                                      wtemp8 0050                            color_detect@color 004A  
                          color_detect@green 0020                            color_detect@white 0044  
                      ??i2_color_writetoaddr 0004                                 main@turnRamp 01B0  
                      _I2C_2_Master_RepStart 537A                              __initialization 4FC8  
                  get16bitTMR0val@timer_high 0016                                 __end_of_main 2E6C  
                               __end_of_move 163C                                 __end_of_stop 4A4C  
                        move@reverseDuration 006B                              _get16bitTMR0val 519E  
                                     ??_main 008A                                       ??_move 0049  
                                     ??_stop 0028                                __activetblptr 0000  
                              calibration@mL 0031                                calibration@mR 0033  
                     returnHome@turnDuration 0040                                 ?_setMotorPWM 001D  
                                     _ADRESH 0F64                                       _CCPR1H 0FAA  
                                     _CCPR2H 0FA6                                       _CCPR3H 0F25  
                                     _CCPR4H 0F21                             ___awdiv@dividend 0010  
                     lostReturnHome@turnRamp 0041                                       _RC0PPS 0E62  
                     wallAdjust@straightRamp 0028                                       _RE2PPS 0E74  
                                     _RC7PPS 0E69                                       _RD5PPS 0E6F  
                                     _RE4PPS 0E76                                       _RD6PPS 0E70  
                                     i1l4525 0026                                       i1l4527 0036  
                                     i1l4529 0044                                       i2l1266 4F5C  
                                     i2l1259 4F54                                       i2l3071 51FE  
                                     i2l3069 51EE                                       i2l3701 4F3E  
                                     i2l3381 5388                                       i2l4341 4C9C  
                                     i2l3703 4F46                                       i2l3375 538E  
                                     i2l3383 5352                                       i2l4351 4D2C  
                                     i2l4343 4CFE                                       i2l3705 4F48  
                                     i2l3377 5392                                       i2l3385 5356  
                                     i2l4353 4D36                                       i2l4345 4D0E  
                                     i2l4521 5276                                       i2l3707 4F4E  
                                     i2l3379 5384                                       i2l4347 4D18  
                                     i2l4523 527A                                       i2l4349 4D22  
                                     i2l4517 5260                                       i2l4519 5270  
                                     i2l3691 4F04                                       _RG6PPS 0E88  
                                     i2l3693 4F0C                                       i2l3685 52C4  
                                     i2l3695 4F14                                       i2l3687 4EEA  
                                     i2l3697 4F22                                       i2l3689 4EF2  
                                     i2l3699 4F28                                    ??_HighISR 000D  
                   __end_of_color_click_init 50E6                                       _RX4PPS 0E15  
                              main@lightblue 01A3                                       _LowISR 0018  
                               ??_ADC_getval 0010                                ??_Timer0_init 0010  
                        calibration@turnRamp 0038                      calibration@turnDuration 0036  
                               _CCPTMRS0bits 0FAD                                       ___lmul 4F5E  
                                  ??___aldiv 0024                                       ___wmul 5216  
                                  ??___awdiv 0014                                    ??___lldiv 0024  
                                  ??___lwdiv 001A                                       clear_0 4FEE  
                                     clear_1 4FFA                                       clear_2 5006  
                           ___awdiv@quotient 0016                                       isa$std 0001  
                    returnHome@straightSpeed 003B                                       move@mL 0060  
                                     move@mR 0062                            __end_ofi2___lwdiv 4F5E  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                  ?_ADC_init 0001                                       stop@mL 0023  
                                     stop@mR 0025                                  ?_Buggy_init 0001  
                          ??_initDCmotorsPWM 0012                           __end_of_ADC_getval 5332  
                 i2color_writetoaddr@address 0004                             __end_of_turnLeft 46CC  
                         color_detect@orange 0038                   lostReturnHome@moveSequence 0036  
                                 __accesstop 0060                      __end_of__initialization 5014  
                         color_detect@yellow 002C                              fullSpeedAhead@i 002C  
                              main@turnSpeed 01AF                       ?_I2C_2_Master_RepStart 0001  
                              ___rparam_used 0001                         __end_of_color_detect 3AC2  
                  reverseShort@straightSpeed 0027                lostReturnHome@reverseDuration 003C  
                            _Interrupts_init 5332                               __pcstackCOMRAM 0001  
                    __end_of_get16bitTMR0val 51C6                                 ?_white_Light 0001  
                               __pidataBANK0 5398                     get16bitTMR0val@timer_low 0014  
                   get16bitTMR0val@timer_val 0018                 ?_color_clear_init_interrupts 0001  
                           _reverseOneSquare 413A                          __end_of_Timer0_init 52C2  
                             main@ambientNew 017B                                   ??_ADC_init 0010  
                               rgb_2_hsv@HSV 0032                                 _batteryLevel 501E  
                                 __pbssBANK0 00B8                                   __pbssBANK1 01D8  
                                 __pbssBANK2 0200                               _rgb_2_hsv$3556 0066  
                             _rgb_2_hsv$3557 0068                               _rgb_2_hsv$3558 0060  
                                    ?_LowISR 0001                            _color_writetoaddr 5282  
                               _T2CLKCONbits 0FBF                               _lostReturnHome 1D28  
                   reverseShort@straightRamp 0028                           ?_color_writetoaddr 0012  
                                    ?___lmul 0010                                      ?___wmul 0010  
                   wallAdjust@adjustDuration 002C                               ___lmul@product 0018  
              ??_color_clear_init_interrupts 001D                                  move@curMove 0069  
                    lostReturnHome@turnSpeed 003F                          ??_color_writetoaddr 0013  
                    wallAdjust@straightSpeed 0027                                      _SP4BRGH 0EE6  
                                    _SP4BRGL 0EE5                   fullSpeedAhead@straightRamp 0028  
                      turnRight@turnDuration 0028                                      _SSP2ADD 0ED6  
                                    _SSP2BUF 0ED5                             _brightnessChange 00F5  
                                 _color_read 3F4C                      __end_of_Interrupts_init 5344  
                     color_writetoaddr@value 0012                                      _HighISR 0008  
                  __end_of_color_writetoaddr 52A2                       __end_of_lostReturnHome 23D4  
                                  _ADREFbits 0F58                           _I2C_2_Master_Start 5370  
                                 _initUSART4 52E2                          i2_I2C_2_Master_Idle 51EE  
                         _I2C_2_Master_Write 5344                                      __Hparam 0000  
                        i2_I2C_2_Master_Stop 5384                                      __Lparam 0000  
                                wallAdjust@i 002F                                  _Timer0_init 52A2  
                       calibration@turnSpeed 0035                             ?_get16bitTMR0val 0010  
                                    ___aldiv 4838                                      ___awdiv 4B32  
                            lostReturnHome@i 0046                                      ___lldiv 4D42  
                              ??_calibration 0039                          ?_I2C_2_Master_Start 0001  
                                    ___lwdiv 4E76                          ?_I2C_2_Master_Write 0001  
                               __psmallconst 0E00                                      _ambient 00FA  
                                    __pcinit 4FC8                                      __ramtop 0E00  
                                  ?_turnLeft 0023                            __end_of_rgb_2_hsv 3348  
                                    __ptext0 2990                                      __ptext1 3348  
                                    __ptext2 0E02                                      __ptext3 3D5C  
                                    __ptext4 163C                                      __ptext5 1D28  
                                    __ptext6 4944                                      __ptext7 413A  
                                    __ptext8 535C                                      __ptext9 519E  
                       ?i2_I2C_2_Master_Idle 0001                                    _T2CONbits 0FBD  
                              ?_reverseShort 0023                         ?i2_I2C_2_Master_Stop 0001  
                           ___aldiv@dividend 001C                                    _T2HLTbits 0FBE  
                              _RxBufWriteCnt 004E                                      main@HSV 01B6  
                                    main@buf 008C                                      main@red 017F  
                       ??_I2C_2_Master_Start 0011                         ??_I2C_2_Master_Write 0011  
                             __pintcode_body 5260                         end_of_initialization 5014  
            ??i2_color_clear_init_interrupts 0008                  __end_ofi2_color_writetoaddr 52E2  
                           ADC_getval@tmpval 0010                            reverseOneSquare@i 002E  
                                    int_func 5260                            ?_color_click_init 0001  
                            ?_lostReturnHome 0032                                   _wallAdjust 3348  
                            ___lldiv@divisor 0020                                   _resetTimer 535C  
                         ??_color_click_init 0022                              ___lldiv@counter 0028  
                           ___aldiv@quotient 0026                   batteryLevel@batteryQuarter 0019  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc1 0FE6  
                                    postinc2 0FDE                   batteryLevel@batteryVoltage 0018  
                                 main@F14651 00B8                                   main@F14662 00F6  
                                 main@F14657 01D8                                   main@F14659 0200  
                                 _returnHome 163C                              _initDCmotorsPWM 4DE6  
                                 ??_turnLeft 002A                                    _PORTFbits 0F8E  
                         setMotorPWM@negDuty 0022                               ??_reverseShort 0029  
                      ??i2_I2C_2_Master_Idle 0001                                move@turnSpeed 006E  
                          __end_of_turnRight 44F2                        ??i2_I2C_2_Master_Stop 0002  
                        __end_of_calibration 3D5C                                 _color_detect 371A  
                                returnHome@i 0048                                    _TRISAbits 0F81  
                         setMotorPWM@posDuty 0021                                    _TRISBbits 0F82  
                                  _TRISCbits 0F83                                    _TRISDbits 0F84  
                                  _TRISEbits 0F85                                    _TRISFbits 0F86  
                                  _TRISGbits 0F87                                    _TRISHbits 0F88  
                           white_Light@state 0010                                 ??_Buggy_init 0010  
                           fullSpeedAhead@mL 0023                             fullSpeedAhead@mR 0025  
                                ?_color_read 0014                            i2___lwdiv@divisor 0003  
                   color_writetoaddr@address 0013                                    i2___lwdiv 4EEA  
                    ??_I2C_2_Master_RepStart 0011                            i2___lwdiv@counter 0007  
                   __end_of_reverseOneSquare 4318                             ?_Interrupts_init 0001  
                              stop@cur_power 002D                                  _CCP1CONbits 0FAB  
                     color_calibration@green 007C                                 _EUSART4RXbuf 00E0  
                        returnHome@turnSpeed 003F                                 _EUSART4TXbuf 0252  
                                _CCP2CONbits 0FA7                       color_calibration@white 0088  
                                _CCP3CONbits 0F26                   lostReturnHome@straightRamp 003E  
                 lostReturnHome@straightTime 0038                                  ?_initUSART4 0001  
                                 main@orange 019D                                  _CCP4CONbits 0F22  
                                 main@motorL 01CE                                   main@motorR 01C4  
                                 main@yellow 0191                               __end_of_LowISR 0058  
                             color_read@RGBC 0014                               _fullSpeedAhead 4A4C  
                             __end_of___lmul 4FC8                         turnLeft@turnDuration 0028  
                             __end_of___wmul 523C                           __end_of_Buggy_init 511C  
                        start_initialization 4FC8                                  __end_of_max 5174  
                                __end_of_min 5148                                _TxBufWriteCnt 004C  
                 lostReturnHome@turnDuration 0040                                   rgb_2_hsv@b 0074  
                                 rgb_2_hsv@g 0072                                   ?i2___lwdiv 0001  
                                 rgb_2_hsv@r 006A                             move@moveSequence 0065  
                        wallAdjust@cur_power 0031        __end_ofi2_color_clear_init_interrupts 4D42  
              i2_color_clear_init_interrupts 4C9C                                  ?_wallAdjust 0023  
                                ?_resetTimer 0001                                     ??_LowISR 000D  
                    __end_of_initDCmotorsPWM 4E76                       __end_of_fullSpeedAhead 4B32  
                         turnRight@cur_power 002F                                     ??___lmul 0018  
                              rgb_2_hsv@RGBC 002A                                     ??___wmul 0014  
                                __pdataBANK0 00F6                                rgb_2_hsv@diff 006E  
              i2I2C_2_Master_Write@data_byte 0002                                  _calibration 3AC2  
                              rgb_2_hsv@cmax 006C                                rgb_2_hsv@cmin 0064  
                                ?_returnHome 0032                          wallAdjust@wallSpeed 002E  
               reverseOneSquare@straightRamp 002A                 __end_ofi2_I2C_2_Master_Start 5398  
               __end_ofi2_I2C_2_Master_Write 535C                            turnLeft@cur_power 002F  
                                __pbssCOMRAM 004B                                __pcstackBANK0 0060  
                              __pcstackBANK1 0100                                     ?_HighISR 0001  
                       __end_of_reverseShort 3F4C                             stop@straightRamp 0027  
                           ___lwdiv@dividend 0016                                 ?_Timer0_init 0001  
                            ?_fullSpeedAhead 0023                                    __pintcode 0008  
                                   ?___aldiv 001C                           turnRight@turnSpeed 0027  
                                   ?___awdiv 0010                                     ?___lldiv 001C  
                                   ?___lwdiv 0016             reverseShort@shortReverseDuration 002C  
                                __pintcodelo 0018                         I2C_2_Master_Read@ack 0012  
                       I2C_2_Master_Read@tmp 0013                                  __smallconst 0E00  
                             reverseShort@mL 0023                               reverseShort@mR 0025  
                           main@moveSequence 0152                            _I2C_2_Master_Idle 51C6  
                          _I2C_2_Master_Init 5174                            _I2C_2_Master_Read 506C  
                          turnLeft@turnSpeed 0027                            _I2C_2_Master_Stop 5366  
                                  _rgb_2_hsv 2E6C                                 _RxBufReadCnt 004D  
                                   _ADC_init 5300                           ?_I2C_2_Master_Idle 0001  
                         ?_I2C_2_Master_Init 0001                           ?_I2C_2_Master_Read 0001  
                              ??_setMotorPWM 001F                           ?_I2C_2_Master_Stop 0001  
                           ___lwdiv@quotient 001A                     initDCmotorsPWM@PWMperiod 0010  
                                ??i2___lwdiv 0005                             ??_lostReturnHome 0042  
                          move@straightSpeed 006A                              ___aldiv@divisor 0020  
                        ??_I2C_2_Master_Idle 0010                              ___aldiv@counter 0024  
                        ??_I2C_2_Master_Init 0010                          ??_I2C_2_Master_Read 0011  
                             ___wmul@product 0014                                     _LATAbits 0F79  
                        ??_I2C_2_Master_Stop 0011                                     _LATCbits 0F7B  
                                   _LATDbits 0F7C                                     _LATEbits 0F7D  
                                   _LATFbits 0F7E                                     _LATGbits 0F7F  
                                   _LATHbits 0F80                                     _IPR0bits 0E1F  
                                   _PIE0bits 0E29                                     _PIE4bits 0E2D  
                                   i1u353_20 0036                                     i1u353_21 0032  
                                turnRight@mL 0023                                  turnRight@mR 0025  
                                   i2u254_40 4F04                                     i2u254_41 4F00  
                                   i2u255_40 4F22                                     i2u255_41 4F1E  
                                   _PIR0bits 0E33                                     i2u256_40 4F3E  
                                   i2u352_40 5270                                     i2u256_41 4F3A  
                                   i2u352_41 526C                                     i2u188_40 51FE  
                                   i2u188_41 51FA                                     i2u189_40 5214  
                                   i2u189_41 5210                                     i2u489_47 4D04  
                           ?_initDCmotorsPWM 0010                  fullSpeedAhead@straightSpeed 0027  
        __end_of_color_clear_init_interrupts 4C9C               ?i2_color_clear_init_interrupts 0001  
                _color_clear_init_interrupts 4BF6                                     _SSP2CON2 0EDA  
                                   _SSP2STAT 0ED8                                 move@turnRamp 0070  
                                 _ADCON0bits 0F60                    __end_of_I2C_2_Master_Idle 51EE  
                      color_calibration@RGBC 0076                    __end_of_I2C_2_Master_Init 519E  
                  __end_of_I2C_2_Master_Read 50AE                            ___wmul@multiplier 0010  
                  __end_of_I2C_2_Master_Stop 5370     color_clear_init_interrupts@low_threshold 0020  
 i2color_clear_init_interrupts@low_threshold 000B                                 setMotorPWM@m 001D  
                I2C_2_Master_Write@data_byte 0011                        color_calibration@blue 007E  
                         returnHome@turnRamp 0041                                    main@color 01B2  
                      color_calibration@pink 0082                                    main@green 0185  
                                  main@white 01A9                                   ?_rgb_2_hsv 002A  
                               _TxBufReadCnt 004B                     i2color_writetoaddr@value 0003  
                                  _turnRight 4318                    returnHome@reverseDuration 003C  
                               ??_color_read 0016                            ___lmul@multiplier 0010  
                                  copy_data0 4FDC                __end_of_I2C_2_Master_RepStart 5384  
                          ?_reverseOneSquare 0023                          __end_of_setMotorPWM 4838  
                               ??_initUSART4 0010                         i2_I2C_2_Master_Start 538E  
            reverseOneSquare@reverseDuration 0028                         i2_I2C_2_Master_Write 5350  
                         ??_reverseOneSquare 002B                                     __Hrparam 0000  
                                 _ADC_getval 531A                             main@testSequence 00B4  
                                   __Lrparam 0000                                 wallAdjust@mL 0023  
                               wallAdjust@mR 0025                                ??_white_Light 0010  
                __end_ofi2_I2C_2_Master_Idle 5216                  __end_ofi2_I2C_2_Master_Stop 538E  
                           lostReturnHome@mL 0032                             lostReturnHome@mR 0034  
                         __end_of_color_read 413A                                   _ANSELBbits 0E9A  
                                 _ANSELDbits 0EA7                                   _ANSELFbits 0EB4  
                                 _T0CON0bits 0FD5                                   _T0CON1bits 0FD6  
                          _color_calibration 23D4                reverseOneSquare@straightSpeed 0027  
                            ___lwdiv@divisor 0018                       returnHome@moveSequence 0036  
                         __end_of_initUSART4 5300                              ___lwdiv@counter 001C  
                          turnRight@turnRamp 0029                                   ?_turnRight 0023  
                                   __ptext10 4A4C                                     __ptext11 52E2  
                                   __ptext20 2E6C                                     __ptext12 4DE6  
                                   __ptext21 511C                                     __ptext13 371A  
                                   __ptext30 537A                                     __ptext22 5148  
                                   __ptext14 50AE                                     __ptext31 506C  
                                   __ptext23 4F5E                                     __ptext15 4BF6  
                                   __ptext40 4B32                                     __ptext32 51C6  
                                   __ptext24 4D42                                     __ptext16 5282  
                                   __ptext41 5300                                     __ptext33 3AC2  
                                   __ptext25 4838                                     __ptext17 5174  
                                   __ptext50 5350                                     __ptext42 531A  
                                   __ptext34 4318                                     __ptext26 3F4C  
                                   __ptext18 23D4                                     __ptext51 5384  
                                   __ptext43 52A2                                     __ptext35 44F2  
                                   __ptext27 5344                                     __ptext19 523C  
                                   __ptext52 538E                                     __ptext44 5332  
                                   __ptext36 46CC                                     __ptext28 5366  
                                   __ptext53 51EE                                     __ptext45 50E6  
                                   __ptext37 5216                                     __ptext29 5370  
                                   __ptext54 4EEA                                     __ptext38 4E76  
                                   __ptext39 501E                                     __ptext48 4C9C  
                                   __ptext49 52C2                                    move@color 0064  
                         ?_color_calibration 0076                                ?_batteryLevel 0001  
                               _SSP2CON1bits 0ED9                                 _SSP2CON2bits 0EDA  
                              reverseShort@i 002D                             turnLeft@turnRamp 0029  
                      reverseShort@cur_power 002F                                   turnLeft@mL 0023  
                                 turnLeft@mR 0025                          ??_color_calibration 0040  
                      ?i2_I2C_2_Master_Start 0001                                 ??_wallAdjust 0029  
                           move@straightRamp 006D                        ?i2_I2C_2_Master_Write 0001  
                           move@straightTime 0067                            returnHome@curMove 003A  
                               ??_resetTimer 0010                                   turnRight@i 002D  
                                   isa$xinst 0000                                   _RC4STAbits 0EE7  
                                   main@RGBC 01BC                                     int$flags 004F  
                       color_calibration@HSV 0078                                 ?_calibration 0031  
                                   main@blue 018B                         color_calibration@red 007A  
                               ??_returnHome 0042                                     main@pink 0197  
                                   main@wall 017A                                     _turnLeft 44F2  
                    fullSpeedAhead@cur_power 002E                          __end_of_white_Light 5260  
                  __end_of_color_calibration 2990                                   _INTCONbits 0FF2  
                               _reverseShort 3D5C                    reverseOneSquare@cur_power 0030  
                                ??_rgb_2_hsv 0034                           __end_of_wallAdjust 371A  
                         reverseOneSquare@mL 0023                           reverseOneSquare@mR 0025  
                         __end_of_resetTimer 5366                             move@turnDuration 006F  
                             ??_batteryLevel 0018                                  _setMotorPWM 46CC  
                          ??_get16bitTMR0val 0012                                     intlevel1 0000  
                                   intlevel2 0000                             ___lldiv@dividend 001C  
                           ??_fullSpeedAhead 0029                           __end_of_returnHome 1D28  
                                  turnLeft@i 002D                                  ?_ADC_getval 0001  
                          main@straightSpeed 01B1                             _color_click_init 50AE  
                      color_detect@lightblue 003E                                   _SSP2DATPPS 0E1D  
                           ___lldiv@quotient 0024                                   _SSP2CLKPPS 0E1C  
                               ___aldiv@sign 0025                                  ??_turnRight 002A  
                           main@straightRamp 01B4                             main@straightTime 0100  
                                 _TX4STAbits 0EE8                       ??i2_I2C_2_Master_Start 0002  
                     ??i2_I2C_2_Master_Write 0002                                 returnHome@mL 0032  
                               returnHome@mR 0034  
