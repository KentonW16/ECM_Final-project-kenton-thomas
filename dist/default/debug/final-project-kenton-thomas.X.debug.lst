

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 13:17:05 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Generated 21/07/2023 GMT
    78                           ; 
    79                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F67K40 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	idataCOMRAM
   113   005194                     __pidataCOMRAM:
   114                           	callstack 0
   115                           
   116                           ;initializer for main@F14659
   117   005194  02                 	db	2
   118   005195  01                 	db	1
   119   005196  01                 	db	1
   120   005197  08                 	db	8
   121                           
   122                           ;initializer for _ambient
   123   005198  01F4               	dw	500
   124   000000                     _TRISCbits	set	3971
   125   000000                     _RC4STAbits	set	3815
   126   000000                     _SP4BRGH	set	3814
   127   000000                     _SP4BRGL	set	3813
   128   000000                     _TX4STAbits	set	3816
   129   000000                     _BAUD4CONbits	set	3817
   130   000000                     _TX4REG	set	3812
   131   000000                     _TRISBbits	set	3970
   132   000000                     _TRISAbits	set	3969
   133   000000                     _TRISEbits	set	3973
   134   000000                     _TRISGbits	set	3975
   135   000000                     _LATFbits	set	3966
   136   000000                     _TRISFbits	set	3974
   137   000000                     _TRISHbits	set	3976
   138   000000                     _TRISDbits	set	3972
   139   000000                     _LATEbits	set	3965
   140   000000                     _LATGbits	set	3967
   141   000000                     _LATHbits	set	3968
   142   000000                     _SSP2CON2bits	set	3802
   143   000000                     _TMR0IF	set	29085
   144   000000                     _TMR0IE	set	29005
   145   000000                     _RX4PPS	set	3605
   146   000000                     _SSP2CLKPPS	set	3612
   147   000000                     _SSP2DATPPS	set	3613
   148   000000                     _PIE0bits	set	3625
   149   000000                     _CCPR4H	set	3873
   150   000000                     _CCPR3H	set	3877
   151   000000                     _CCPR2H	set	4006
   152   000000                     _CCPR1H	set	4010
   153   000000                     _CCP1CONbits	set	4011
   154   000000                     _CCPTMRS0bits	set	4013
   155   000000                     _T2PR	set	4028
   156   000000                     _T2CONbits	set	4029
   157   000000                     _INTCONbits	set	4082
   158   000000                     _CCP2CONbits	set	4007
   159   000000                     _CCP3CONbits	set	3878
   160   000000                     _ADREFbits	set	3928
   161   000000                     _LATAbits	set	3961
   162   000000                     _LATDbits	set	3964
   163   000000                     _PORTFbits	set	3982
   164   000000                     _CCP4CONbits	set	3874
   165   000000                     _PIE4bits	set	3629
   166   000000                     _RD5PPS	set	3695
   167   000000                     _ANSELDbits	set	3751
   168   000000                     _SSP2ADD	set	3798
   169   000000                     _SSP2CON1bits	set	3801
   170   000000                     _LATCbits	set	3963
   171   000000                     _RC4REG	set	3811
   172   000000                     _SSP2CON2	set	3802
   173   000000                     _SSP2STAT	set	3800
   174   000000                     _ANSELFbits	set	3764
   175   000000                     _SSP2BUF	set	3797
   176   000000                     _IPR0bits	set	3615
   177   000000                     _RE2PPS	set	3700
   178   000000                     _ANSELBbits	set	3738
   179   000000                     _RD6PPS	set	3696
   180   000000                     _PIR0bits	set	3635
   181   000000                     _PIR4bits	set	3639
   182   000000                     _RC0PPS	set	3682
   183   000000                     _RC7PPS	set	3689
   184   000000                     _ADPCH	set	3935
   185   000000                     _ADRESH	set	3940
   186   000000                     _ADCON0bits	set	3936
   187   000000                     _RE4PPS	set	3702
   188   000000                     _RG6PPS	set	3720
   189   000000                     _TMR0L	set	4051
   190   000000                     _TMR0H	set	4052
   191   000000                     _T0CON0bits	set	4053
   192   000000                     _T0CON1bits	set	4054
   193   000000                     _T2CLKCONbits	set	4031
   194   000000                     _T2HLTbits	set	4030
   195                           
   196                           ; #config settings
   197                           
   198                           	psect	cinit
   199   004D86                     __pcinit:
   200                           	callstack 0
   201   004D86                     start_initialization:
   202                           	callstack 0
   203   004D86                     __initialization:
   204                           	callstack 0
   205                           
   206                           ; Initialize objects allocated to COMRAM (6 bytes)
   207                           ; load TBLPTR registers with __pidataCOMRAM
   208   004D86  0E94               	movlw	low __pidataCOMRAM
   209   004D88  6EF6               	movwf	tblptrl,c
   210   004D8A  0E51               	movlw	high __pidataCOMRAM
   211   004D8C  6EF7               	movwf	tblptrh,c
   212   004D8E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   213   004D90  6EF8               	movwf	tblptru,c
   214   004D92  EE00  F049         	lfsr	0,__pdataCOMRAM
   215   004D96  EE10 F006          	lfsr	1,6
   216   004D9A                     copy_data0:
   217   004D9A  0009               	tblrd		*+
   218   004D9C  CFF5 FFEE          	movff	tablat,postinc0
   219   004DA0  50E5               	movf	postdec1,w,c
   220   004DA2  50E1               	movf	fsr1l,w,c
   221   004DA4  E1FA               	bnz	copy_data0
   222                           
   223                           ; Clear objects allocated to BANK2 (122 bytes)
   224   004DA6  EE02  F000         	lfsr	0,__pbssBANK2
   225   004DAA  0E7A               	movlw	122
   226   004DAC                     clear_0:
   227   004DAC  6AEE               	clrf	postinc0,c
   228   004DAE  06E8               	decf	wreg,f,c
   229   004DB0  E1FD               	bnz	clear_0
   230                           
   231                           ; Clear objects allocated to BANK0 (120 bytes)
   232   004DB2  EE00  F060         	lfsr	0,__pbssBANK0
   233   004DB6  0E78               	movlw	120
   234   004DB8                     clear_1:
   235   004DB8  6AEE               	clrf	postinc0,c
   236   004DBA  06E8               	decf	wreg,f,c
   237   004DBC  E1FD               	bnz	clear_1
   238                           
   239                           ; Clear objects allocated to COMRAM (6 bytes)
   240   004DBE  6A48               	clrf	(__pbssCOMRAM+5)& (0+255),c
   241   004DC0  6A47               	clrf	(__pbssCOMRAM+4)& (0+255),c
   242   004DC2  6A46               	clrf	(__pbssCOMRAM+3)& (0+255),c
   243   004DC4  6A45               	clrf	(__pbssCOMRAM+2)& (0+255),c
   244   004DC6  6A44               	clrf	(__pbssCOMRAM+1)& (0+255),c
   245   004DC8  6A43               	clrf	__pbssCOMRAM& (0+255),c
   246   004DCA                     end_of_initialization:
   247                           	callstack 0
   248   004DCA                     __end_of__initialization:
   249                           	callstack 0
   250   004DCA  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   251   004DCC  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   252   004DCE  0100               	movlb	0
   253   004DD0  EFA3  F014         	goto	_main	;jump to C main() function
   254                           
   255                           	psect	bssCOMRAM
   256   000043                     __pbssCOMRAM:
   257                           	callstack 0
   258   000043                     _lost:
   259                           	callstack 0
   260   000043                     	ds	1
   261   000044                     _wall:
   262                           	callstack 0
   263   000044                     	ds	1
   264   000045                     _TxBufReadCnt:
   265                           	callstack 0
   266   000045                     	ds	1
   267   000046                     _TxBufWriteCnt:
   268                           	callstack 0
   269   000046                     	ds	1
   270   000047                     _RxBufReadCnt:
   271                           	callstack 0
   272   000047                     	ds	1
   273   000048                     _RxBufWriteCnt:
   274                           	callstack 0
   275   000048                     	ds	1
   276                           
   277                           	psect	dataCOMRAM
   278   000049                     __pdataCOMRAM:
   279                           	callstack 0
   280   000049                     main@F14659:
   281                           	callstack 0
   282   000049                     	ds	4
   283   00004D                     _ambient:
   284                           	callstack 0
   285   00004D                     	ds	2
   286                           
   287                           	psect	bssBANK0
   288   000060                     __pbssBANK0:
   289                           	callstack 0
   290   000060                     _EUSART4TXbuf:
   291                           	callstack 0
   292   000060                     	ds	60
   293   00009C                     	ds	40
   294   0000C4                     _EUSART4RXbuf:
   295                           	callstack 0
   296   0000C4                     	ds	20
   297                           
   298                           	psect	bssBANK2
   299   000200                     __pbssBANK2:
   300                           	callstack 0
   301   000200                     	ds	82
   302   000252                     	ds	40
   303                           
   304                           	psect	cstackBANK3
   305   000300                     __pcstackBANK3:
   306                           	callstack 0
   307   000300                     main@buf:
   308                           	callstack 0
   309                           
   310                           ; 40 bytes @ 0x0
   311   000300                     	ds	40
   312   000328                     main@straightTime:
   313                           	callstack 0
   314                           
   315                           ; 82 bytes @ 0x28
   316   000328                     	ds	82
   317   00037A                     main@testSequence:
   318                           	callstack 0
   319                           
   320                           ; 4 bytes @ 0x7A
   321   00037A                     	ds	4
   322   00037E                     main@moveSequence:
   323                           	callstack 0
   324                           
   325                           ; 40 bytes @ 0x7E
   326   00037E                     	ds	40
   327   0003A6                     main@reverseDuration:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0xA6
   331   0003A6                     	ds	1
   332   0003A7                     main@turnSpeed:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0xA7
   336   0003A7                     	ds	1
   337   0003A8                     main@turnRamp:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0xA8
   341   0003A8                     	ds	1
   342   0003A9                     main@straightSpeed:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0xA9
   346   0003A9                     	ds	1
   347   0003AA                     main@red:
   348                           	callstack 0
   349                           
   350                           ; 6 bytes @ 0xAA
   351   0003AA                     	ds	6
   352   0003B0                     main@green:
   353                           	callstack 0
   354                           
   355                           ; 6 bytes @ 0xB0
   356   0003B0                     	ds	6
   357   0003B6                     main@blue:
   358                           	callstack 0
   359                           
   360                           ; 6 bytes @ 0xB6
   361   0003B6                     	ds	6
   362   0003BC                     main@yellow:
   363                           	callstack 0
   364                           
   365                           ; 6 bytes @ 0xBC
   366   0003BC                     	ds	6
   367   0003C2                     main@pink:
   368                           	callstack 0
   369                           
   370                           ; 6 bytes @ 0xC2
   371   0003C2                     	ds	6
   372   0003C8                     main@orange:
   373                           	callstack 0
   374                           
   375                           ; 6 bytes @ 0xC8
   376   0003C8                     	ds	6
   377   0003CE                     main@lightblue:
   378                           	callstack 0
   379                           
   380                           ; 6 bytes @ 0xCE
   381   0003CE                     	ds	6
   382   0003D4                     main@white:
   383                           	callstack 0
   384                           
   385                           ; 6 bytes @ 0xD4
   386   0003D4                     	ds	6
   387   0003DA                     main@curMove:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0xDA
   391   0003DA                     	ds	1
   392   0003DB                     main@color:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0xDB
   396   0003DB                     	ds	1
   397   0003DC                     main@straightRamp:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0xDC
   401   0003DC                     	ds	1
   402   0003DD                     main@turnDuration:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0xDD
   406   0003DD                     	ds	1
   407   0003DE                     main@HSV:
   408                           	callstack 0
   409                           
   410                           ; 6 bytes @ 0xDE
   411   0003DE                     	ds	6
   412   0003E4                     main@RGBC:
   413                           	callstack 0
   414                           
   415                           ; 8 bytes @ 0xE4
   416   0003E4                     	ds	8
   417   0003EC                     main@motorR:
   418                           	callstack 0
   419                           
   420                           ; 10 bytes @ 0xEC
   421   0003EC                     	ds	10
   422   0003F6                     main@motorL:
   423                           	callstack 0
   424                           
   425                           ; 10 bytes @ 0xF6
   426   0003F6                     	ds	10
   427                           
   428                           	psect	cstackBANK1
   429   000100                     __pcstackBANK1:
   430                           	callstack 0
   431   000100                     color_calibration@RGBC:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x0
   435   000100                     	ds	2
   436   000102                     color_calibration@HSV:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2
   440   000102                     	ds	2
   441   000104                     color_calibration@red:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x4
   445   000104                     	ds	2
   446   000106                     color_calibration@green:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x6
   450   000106                     	ds	2
   451   000108                     color_calibration@blue:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x8
   455   000108                     	ds	2
   456   00010A                     color_calibration@yellow:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0xA
   460   00010A                     	ds	2
   461   00010C                     color_calibration@pink:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xC
   465   00010C                     	ds	2
   466   00010E                     color_calibration@orange:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0xE
   470   00010E                     	ds	2
   471   000110                     color_calibration@lightblue:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x10
   475   000110                     	ds	2
   476   000112                     color_calibration@white:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x12
   480   000112                     	ds	2
   481                           
   482                           	psect	cstackBANK0
   483   0000D8                     __pcstackBANK0:
   484                           	callstack 0
   485   0000D8                     move@mL:
   486                           	callstack 0
   487   0000D8                     _rgb_2_hsv$3593:
   488                           	callstack 0
   489                           
   490                           ; 4 bytes @ 0x0
   491   0000D8                     	ds	2
   492   0000DA                     move@mR:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x2
   496   0000DA                     	ds	2
   497   0000DC                     move@color:
   498                           	callstack 0
   499   0000DC                     rgb_2_hsv@cmin:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x4
   503   0000DC                     	ds	1
   504   0000DD                     move@moveSequence:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x5
   508   0000DD                     	ds	1
   509   0000DE                     _rgb_2_hsv$3591:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x6
   513   0000DE                     	ds	1
   514   0000DF                     move@straightTime:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x7
   518   0000DF                     	ds	1
   519   0000E0                     _rgb_2_hsv$3592:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x8
   523   0000E0                     	ds	1
   524   0000E1                     move@curMove:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x9
   528   0000E1                     	ds	1
   529   0000E2                     move@straightSpeed:
   530                           	callstack 0
   531   0000E2                     rgb_2_hsv@r:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0xA
   535   0000E2                     	ds	1
   536   0000E3                     move@reverseDuration:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0xB
   540   0000E3                     	ds	1
   541   0000E4                     move@straightRamp:
   542                           	callstack 0
   543   0000E4                     rgb_2_hsv@cmax:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0xC
   547   0000E4                     	ds	1
   548   0000E5                     move@turnSpeed:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0xD
   552   0000E5                     	ds	1
   553   0000E6                     move@turnDuration:
   554                           	callstack 0
   555   0000E6                     rgb_2_hsv@diff:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0xE
   559   0000E6                     	ds	1
   560   0000E7                     move@turnRamp:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0xF
   564   0000E7                     	ds	3
   565   0000EA                     rgb_2_hsv@g:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x12
   569   0000EA                     	ds	2
   570   0000EC                     rgb_2_hsv@b:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x14
   574   0000EC                     	ds	2
   575                           
   576                           	psect	cstackCOMRAM
   577   000001                     __pcstackCOMRAM:
   578                           	callstack 0
   579   000001                     ??_getCharFromTxBuf:
   580   000001                     ??i2_I2C_2_Master_Idle:
   581   000001                     putCharToRxBuf@byte:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x0
   585   000001                     	ds	1
   586   000002                     i2I2C_2_Master_Write@data_byte:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x1
   590   000002                     	ds	1
   591   000003                     i2color_writetoaddr@value:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x2
   595   000003                     	ds	1
   596   000004                     i2color_writetoaddr@address:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x3
   600   000004                     	ds	1
   601   000005                     ??i2_color_clear_init_interrupts:
   602                           
   603                           ; 1 bytes @ 0x4
   604   000005                     	ds	1
   605   000006                     ??_HighISR:
   606                           
   607                           ; 1 bytes @ 0x5
   608   000006                     	ds	2
   609   000008                     ??_I2C_2_Master_Idle:
   610   000008                     ?_get16bitTMR0val:
   611                           	callstack 0
   612   000008                     ?_max:
   613                           	callstack 0
   614   000008                     ?_min:
   615                           	callstack 0
   616   000008                     ?___wmul:
   617                           	callstack 0
   618   000008                     ?___awdiv:
   619                           	callstack 0
   620   000008                     ?___lmul:
   621                           	callstack 0
   622   000008                     white_Light@state:
   623                           	callstack 0
   624   000008                     ADC_getval@tmpval:
   625                           	callstack 0
   626   000008                     max@a:
   627                           	callstack 0
   628   000008                     min@a:
   629                           	callstack 0
   630   000008                     initDCmotorsPWM@PWMperiod:
   631                           	callstack 0
   632   000008                     ___wmul@multiplier:
   633                           	callstack 0
   634   000008                     ___awdiv@dividend:
   635                           	callstack 0
   636   000008                     ___lmul@multiplier:
   637                           	callstack 0
   638   000008                     color_detect@HSV:
   639                           	callstack 0
   640                           
   641                           ; 6 bytes @ 0x7
   642   000008                     	ds	1
   643   000009                     ??_I2C_2_Master_Read:
   644   000009                     I2C_2_Master_Write@data_byte:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x8
   648   000009                     	ds	1
   649   00000A                     ??_get16bitTMR0val:
   650   00000A                     color_writetoaddr@value:
   651                           	callstack 0
   652   00000A                     I2C_2_Master_Read@ack:
   653                           	callstack 0
   654   00000A                     max@b:
   655                           	callstack 0
   656   00000A                     min@b:
   657                           	callstack 0
   658   00000A                     ___wmul@multiplicand:
   659                           	callstack 0
   660   00000A                     ___awdiv@divisor:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x9
   664   00000A                     	ds	1
   665   00000B                     color_writetoaddr@address:
   666                           	callstack 0
   667   00000B                     I2C_2_Master_Read@tmp:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0xA
   671   00000B                     	ds	1
   672   00000C                     ??_color_clear_init_interrupts:
   673   00000C                     ___awdiv@counter:
   674                           	callstack 0
   675   00000C                     color_read@RGBC:
   676                           	callstack 0
   677   00000C                     get16bitTMR0val@timer_low:
   678                           	callstack 0
   679   00000C                     ___wmul@product:
   680                           	callstack 0
   681   00000C                     ___lmul@multiplicand:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0xB
   685   00000C                     	ds	1
   686   00000D                     ??_color_click_init:
   687   00000D                     ___awdiv@sign:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0xC
   691   00000D                     	ds	1
   692   00000E                     ??_color_read:
   693   00000E                     ?___lwdiv:
   694                           	callstack 0
   695   00000E                     get16bitTMR0val@timer_high:
   696                           	callstack 0
   697   00000E                     ___awdiv@quotient:
   698                           	callstack 0
   699   00000E                     ___lwdiv@dividend:
   700                           	callstack 0
   701   00000E                     color_detect@red:
   702                           	callstack 0
   703                           
   704                           ; 6 bytes @ 0xD
   705   00000E                     	ds	2
   706   000010                     batteryLevel@batteryVoltage:
   707                           	callstack 0
   708   000010                     get16bitTMR0val@timer_val:
   709                           	callstack 0
   710   000010                     ___lwdiv@divisor:
   711                           	callstack 0
   712   000010                     ___lmul@product:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0xF
   716   000010                     	ds	1
   717   000011                     batteryLevel@batteryQuarter:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x10
   721   000011                     	ds	1
   722   000012                     ___lwdiv@counter:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x11
   726   000012                     	ds	1
   727   000013                     ___lwdiv@quotient:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x12
   731   000013                     	ds	1
   732   000014                     ?___lldiv:
   733                           	callstack 0
   734   000014                     ?___aldiv:
   735                           	callstack 0
   736   000014                     ___lldiv@dividend:
   737                           	callstack 0
   738   000014                     ___aldiv@dividend:
   739                           	callstack 0
   740   000014                     color_detect@green:
   741                           	callstack 0
   742                           
   743                           ; 6 bytes @ 0x13
   744   000014                     	ds	1
   745   000015                     setMotorPWM@m:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x14
   749   000015                     	ds	2
   750   000017                     ??_setMotorPWM:
   751                           
   752                           ; 1 bytes @ 0x16
   753   000017                     	ds	1
   754   000018                     ___lldiv@divisor:
   755                           	callstack 0
   756   000018                     ___aldiv@divisor:
   757                           	callstack 0
   758                           
   759                           ; 4 bytes @ 0x17
   760   000018                     	ds	1
   761   000019                     setMotorPWM@posDuty:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x18
   765   000019                     	ds	1
   766   00001A                     setMotorPWM@negDuty:
   767                           	callstack 0
   768   00001A                     color_detect@blue:
   769                           	callstack 0
   770                           
   771                           ; 6 bytes @ 0x19
   772   00001A                     	ds	1
   773   00001B                     stop@mL:
   774                           	callstack 0
   775   00001B                     turnLeft@mL:
   776                           	callstack 0
   777   00001B                     turnRight@mL:
   778                           	callstack 0
   779   00001B                     fullSpeedAhead@mL:
   780                           	callstack 0
   781   00001B                     reverseOneSquare@mL:
   782                           	callstack 0
   783   00001B                     wallAdjust@mL:
   784                           	callstack 0
   785   00001B                     reverseShort@mL:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x1A
   789   00001B                     	ds	1
   790   00001C                     ___aldiv@counter:
   791                           	callstack 0
   792   00001C                     ___lldiv@quotient:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x1B
   796   00001C                     	ds	1
   797   00001D                     ___aldiv@sign:
   798                           	callstack 0
   799   00001D                     stop@mR:
   800                           	callstack 0
   801   00001D                     turnLeft@mR:
   802                           	callstack 0
   803   00001D                     turnRight@mR:
   804                           	callstack 0
   805   00001D                     fullSpeedAhead@mR:
   806                           	callstack 0
   807   00001D                     reverseOneSquare@mR:
   808                           	callstack 0
   809   00001D                     wallAdjust@mR:
   810                           	callstack 0
   811   00001D                     reverseShort@mR:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x1C
   815   00001D                     	ds	1
   816   00001E                     ___aldiv@quotient:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x1D
   820   00001E                     	ds	1
   821   00001F                     stop@straightRamp:
   822                           	callstack 0
   823   00001F                     turnLeft@turnSpeed:
   824                           	callstack 0
   825   00001F                     turnRight@turnSpeed:
   826                           	callstack 0
   827   00001F                     fullSpeedAhead@straightSpeed:
   828                           	callstack 0
   829   00001F                     reverseOneSquare@straightSpeed:
   830                           	callstack 0
   831   00001F                     wallAdjust@straightSpeed:
   832                           	callstack 0
   833   00001F                     reverseShort@straightSpeed:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x1E
   837   00001F                     	ds	1
   838   000020                     ??_stop:
   839   000020                     turnLeft@turnDuration:
   840                           	callstack 0
   841   000020                     turnRight@turnDuration:
   842                           	callstack 0
   843   000020                     fullSpeedAhead@straightRamp:
   844                           	callstack 0
   845   000020                     reverseOneSquare@reverseDuration:
   846                           	callstack 0
   847   000020                     wallAdjust@straightRamp:
   848                           	callstack 0
   849   000020                     reverseShort@straightRamp:
   850                           	callstack 0
   851   000020                     ___lldiv@counter:
   852                           	callstack 0
   853   000020                     color_detect@yellow:
   854                           	callstack 0
   855                           
   856                           ; 6 bytes @ 0x1F
   857   000020                     	ds	1
   858   000021                     ??_fullSpeedAhead:
   859   000021                     ??_wallAdjust:
   860   000021                     ??_reverseShort:
   861   000021                     turnLeft@turnRamp:
   862                           	callstack 0
   863   000021                     turnRight@turnRamp:
   864                           	callstack 0
   865   000021                     reverseOneSquare@straightRamp:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x20
   869   000021                     	ds	1
   870   000022                     ??_turnRight:
   871   000022                     ??_turnLeft:
   872   000022                     ??_reverseOneSquare:
   873   000022                     rgb_2_hsv@RGBC:
   874                           	callstack 0
   875                           
   876                           ; 8 bytes @ 0x21
   877   000022                     	ds	1
   878   000023                     stop@i:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x22
   882   000023                     	ds	1
   883   000024                     wallAdjust@adjustDuration:
   884                           	callstack 0
   885   000024                     reverseShort@reverseDuration:
   886                           	callstack 0
   887   000024                     fullSpeedAhead@i:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x23
   891   000024                     	ds	1
   892   000025                     wallAdjust@wallReverseDuration:
   893                           	callstack 0
   894   000025                     stop@cur_power:
   895                           	callstack 0
   896   000025                     turnLeft@i:
   897                           	callstack 0
   898   000025                     turnRight@i:
   899                           	callstack 0
   900   000025                     reverseOneSquare@i:
   901                           	callstack 0
   902   000025                     reverseShort@i:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x24
   906   000025                     	ds	1
   907   000026                     fullSpeedAhead@cur_power:
   908                           	callstack 0
   909   000026                     wallAdjust@i:
   910                           	callstack 0
   911   000026                     color_detect@pink:
   912                           	callstack 0
   913                           
   914                           ; 6 bytes @ 0x25
   915   000026                     	ds	1
   916   000027                     turnLeft@cur_power:
   917                           	callstack 0
   918   000027                     turnRight@cur_power:
   919                           	callstack 0
   920   000027                     reverseOneSquare@cur_power:
   921                           	callstack 0
   922   000027                     reverseShort@cur_power:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x26
   926   000027                     	ds	1
   927   000028                     wallAdjust@cur_power:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x27
   931   000028                     	ds	1
   932   000029                     returnHome@mL:
   933                           	callstack 0
   934   000029                     lostReturnHome@mL:
   935                           	callstack 0
   936   000029                     calibration@mL:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x28
   940   000029                     	ds	1
   941   00002A                     rgb_2_hsv@HSV:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x29
   945   00002A                     	ds	1
   946   00002B                     returnHome@mR:
   947                           	callstack 0
   948   00002B                     lostReturnHome@mR:
   949                           	callstack 0
   950   00002B                     calibration@mR:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x2A
   954   00002B                     	ds	1
   955   00002C                     ??_rgb_2_hsv:
   956   00002C                     color_detect@orange:
   957                           	callstack 0
   958                           
   959                           ; 6 bytes @ 0x2B
   960   00002C                     	ds	1
   961   00002D                     calibration@turnSpeed:
   962                           	callstack 0
   963   00002D                     returnHome@moveSequence:
   964                           	callstack 0
   965   00002D                     lostReturnHome@moveSequence:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x2C
   969   00002D                     	ds	1
   970   00002E                     calibration@turnDuration:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x2D
   974   00002E                     	ds	1
   975   00002F                     returnHome@straightTime:
   976                           	callstack 0
   977   00002F                     lostReturnHome@straightTime:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x2E
   981   00002F                     	ds	1
   982   000030                     calibration@turnRamp:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x2F
   986   000030                     	ds	1
   987   000031                     ??_calibration:
   988   000031                     returnHome@curMove:
   989                           	callstack 0
   990   000031                     lostReturnHome@curMove:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0x30
   994   000031                     	ds	1
   995   000032                     returnHome@straightSpeed:
   996                           	callstack 0
   997   000032                     lostReturnHome@straightSpeed:
   998                           	callstack 0
   999   000032                     color_detect@lightblue:
  1000                           	callstack 0
  1001                           
  1002                           ; 6 bytes @ 0x31
  1003   000032                     	ds	1
  1004   000033                     returnHome@reverseDuration:
  1005                           	callstack 0
  1006   000033                     lostReturnHome@reverseDuration:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x32
  1010   000033                     	ds	1
  1011   000034                     returnHome@straightRamp:
  1012                           	callstack 0
  1013   000034                     lostReturnHome@straightRamp:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x33
  1017   000034                     	ds	1
  1018   000035                     returnHome@turnSpeed:
  1019                           	callstack 0
  1020   000035                     lostReturnHome@turnSpeed:
  1021                           	callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x34
  1024   000035                     	ds	1
  1025   000036                     returnHome@turnDuration:
  1026                           	callstack 0
  1027   000036                     lostReturnHome@turnDuration:
  1028                           	callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x35
  1031   000036                     	ds	1
  1032   000037                     returnHome@turnRamp:
  1033                           	callstack 0
  1034   000037                     lostReturnHome@turnRamp:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x36
  1038   000037                     	ds	1
  1039   000038                     ??_color_calibration:
  1040   000038                     ??_lostReturnHome:
  1041   000038                     ??_returnHome:
  1042   000038                     color_detect@white:
  1043                           	callstack 0
  1044                           
  1045                           ; 6 bytes @ 0x37
  1046   000038                     	ds	4
  1047   00003C                     returnHome@i:
  1048                           	callstack 0
  1049   00003C                     lostReturnHome@i:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x3B
  1053   00003C                     	ds	1
  1054   00003D                     ??_move:
  1055                           
  1056                           ; 1 bytes @ 0x3C
  1057   00003D                     	ds	1
  1058   00003E                     ??_color_detect:
  1059                           
  1060                           ; 1 bytes @ 0x3D
  1061   00003E                     	ds	2
  1062   000040                     color_detect@color:
  1063                           	callstack 0
  1064                           
  1065                           ; 1 bytes @ 0x3F
  1066   000040                     	ds	1
  1067   000041                     ??_main:
  1068                           
  1069                           ; 1 bytes @ 0x40
  1070   000041                     	ds	2
  1071                           
  1072 ;;
  1073 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1074 ;;
  1075 ;; *************** function _main *****************
  1076 ;; Defined at:
  1077 ;;		line 28 in file "main.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  straightTime   82   40[BANK3 ] unsigned int [41]
  1082 ;;  moveSequence   40  126[BANK3 ] unsigned char [40]
  1083 ;;  buf            40    0[BANK3 ] unsigned char [40]
  1084 ;;  motorL         10  246[BANK3 ] struct DC_motor
  1085 ;;  motorR         10  236[BANK3 ] struct DC_motor
  1086 ;;  RGBC            8  228[BANK3 ] struct RGBC_val
  1087 ;;  RGBC_n          8    0        struct RGBC_val
  1088 ;;  HSV             6  222[BANK3 ] struct HSV_val
  1089 ;;  white           6  212[BANK3 ] struct HSV_calib
  1090 ;;  lightblue       6  206[BANK3 ] struct HSV_calib
  1091 ;;  orange          6  200[BANK3 ] struct HSV_calib
  1092 ;;  pink            6  194[BANK3 ] struct HSV_calib
  1093 ;;  yellow          6  188[BANK3 ] struct HSV_calib
  1094 ;;  blue            6  182[BANK3 ] struct HSV_calib
  1095 ;;  green           6  176[BANK3 ] struct HSV_calib
  1096 ;;  red             6  170[BANK3 ] struct HSV_calib
  1097 ;;  testSequence    4  122[BANK3 ] unsigned char [4]
  1098 ;;  PWMcycle        2    0        unsigned int 
  1099 ;;  turnDuration    1  221[BANK3 ] unsigned char 
  1100 ;;  straightRamp    1  220[BANK3 ] unsigned char 
  1101 ;;  color           1  219[BANK3 ] unsigned char 
  1102 ;;  curMove         1  218[BANK3 ] unsigned char 
  1103 ;;  straightSpee    1  169[BANK3 ] unsigned char 
  1104 ;;  turnRamp        1  168[BANK3 ] unsigned char 
  1105 ;;  turnSpeed       1  167[BANK3 ] unsigned char 
  1106 ;;  reverseDurat    1  166[BANK3 ] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1117 ;;      Locals:         0       0       0       0     256       0       0       0       0       0       0       0       
      +0       0       0
  1118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1119 ;;      Totals:         2       0       0       0     256       0       0       0       0       0       0       0       
      +0       0       0
  1120 ;;Total ram usage:      258 bytes
  1121 ;; Hardware stack levels required when called: 10
  1122 ;; This function calls:
  1123 ;;		_Buggy_init
  1124 ;;		_Interrupts_init
  1125 ;;		_Timer0_init
  1126 ;;		_batteryLevel
  1127 ;;		_calibration
  1128 ;;		_color_calibration
  1129 ;;		_color_click_init
  1130 ;;		_color_detect
  1131 ;;		_color_read
  1132 ;;		_fullSpeedAhead
  1133 ;;		_get16bitTMR0val
  1134 ;;		_initDCmotorsPWM
  1135 ;;		_initUSART4
  1136 ;;		_lostReturnHome
  1137 ;;		_move
  1138 ;;		_resetTimer
  1139 ;;		_rgb_2_hsv
  1140 ;;		_stop
  1141 ;;		_wallAdjust
  1142 ;;		_white_Light
  1143 ;; This function is called by:
  1144 ;;		Startup code after reset
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text0
  1149   002946                     __ptext0:
  1150                           	callstack 0
  1151   002946                     _main:
  1152                           	callstack 21
  1153   002946                     
  1154                           ;main.c: 30:     char buf[40] = {0};
  1155   002946  EE23  F000         	lfsr	2,main@buf
  1156   00294A  0E27               	movlw	39
  1157   00294C                     u5051:
  1158   00294C  6ADE               	clrf	postinc2,c
  1159   00294E  06E8               	decf	wreg,f,c
  1160   002950  E2FD               	bc	u5051
  1161   002952                     
  1162                           ;main.c: 33:     unsigned char moveSequence[40] = {0};
  1163   002952  EE23  F07E         	lfsr	2,main@moveSequence
  1164   002956  0E27               	movlw	39
  1165   002958                     u5061:
  1166   002958  6ADE               	clrf	postinc2,c
  1167   00295A  06E8               	decf	wreg,f,c
  1168   00295C  E2FD               	bc	u5061
  1169                           
  1170                           ;main.c: 34:     unsigned int straightTime[41] = {0};
  1171   00295E  EE23  F028         	lfsr	2,main@straightTime
  1172   002962  0E51               	movlw	81
  1173   002964                     u5071:
  1174   002964  6ADE               	clrf	postinc2,c
  1175   002966  06E8               	decf	wreg,f,c
  1176   002968  E2FD               	bc	u5071
  1177   00296A                     
  1178                           ;main.c: 35:     char curMove = 0;
  1179   00296A  0E00               	movlw	0
  1180   00296C  0103               	movlb	3	; () banked
  1181   00296E  6FDA               	movwf	main@curMove& (0+255),b
  1182   002970                     
  1183                           ; BSR set to: 3
  1184                           ;main.c: 37:     unsigned char testSequence[4] = {2,1,1,8};
  1185   002970  C049  F37A         	movff	main@F14659,main@testSequence
  1186   002974  C04A  F37B         	movff	main@F14659+1,main@testSequence+1
  1187   002978  C04B  F37C         	movff	main@F14659+2,main@testSequence+2
  1188   00297C  C04C  F37D         	movff	main@F14659+3,main@testSequence+3
  1189   002980                     
  1190                           ; BSR set to: 3
  1191                           ;main.c: 40:     struct RGBC_val RGBC, RGBC_n;;main.c: 41:     struct HSV_val HSV;;main.
      +                          c: 42:     struct DC_motor motorL, motorR;;main.c: 45:     Buggy_init();
  1192   002980  EC4E  F027         	call	_Buggy_init	;wreg free
  1193   002984                     
  1194                           ;main.c: 46:     color_click_init();
  1195   002984  EC32  F027         	call	_color_click_init	;wreg free
  1196   002988                     
  1197                           ;main.c: 47:     Timer0_init();
  1198   002988  EC41  F028         	call	_Timer0_init	;wreg free
  1199   00298C                     
  1200                           ;main.c: 48:     Interrupts_init();
  1201   00298C  EC95  F028         	call	_Interrupts_init	;wreg free
  1202   002990                     
  1203                           ;main.c: 49:     initUSART4();
  1204   002990  EC61  F028         	call	_initUSART4	;wreg free
  1205   002994                     
  1206                           ;main.c: 50:     initDCmotorsPWM(PWMcycle);
  1207   002994  0E00               	movlw	0
  1208   002996  6E09               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1209   002998  0EC7               	movlw	199
  1210   00299A  6E08               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1211   00299C  ECAA  F025         	call	_initDCmotorsPWM	;wreg free
  1212   0029A0                     
  1213                           ;main.c: 52:     motorL.power=0;
  1214   0029A0  0E00               	movlw	0
  1215   0029A2  0103               	movlb	3	; () banked
  1216   0029A4  6FF6               	movwf	main@motorL& (0+255),b
  1217   0029A6                     
  1218                           ; BSR set to: 3
  1219                           ;main.c: 53:     motorL.direction=1;
  1220   0029A6  0E01               	movlw	1
  1221   0029A8  6FF7               	movwf	(main@motorL+1)& (0+255),b
  1222   0029AA                     
  1223                           ; BSR set to: 3
  1224                           ;main.c: 54:     motorL.brakemode=1;
  1225   0029AA  0E01               	movlw	1
  1226   0029AC  6FF8               	movwf	(main@motorL+2)& (0+255),b
  1227   0029AE                     
  1228                           ; BSR set to: 3
  1229                           ;main.c: 55:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1230   0029AE  0EAA               	movlw	170
  1231   0029B0  6FFB               	movwf	(main@motorL+5)& (0+255),b
  1232   0029B2  0E0F               	movlw	15
  1233   0029B4  6FFC               	movwf	(main@motorL+6)& (0+255),b
  1234   0029B6                     
  1235                           ; BSR set to: 3
  1236                           ;main.c: 56:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1237   0029B6  0EA6               	movlw	166
  1238   0029B8  6FFD               	movwf	(main@motorL+7)& (0+255),b
  1239   0029BA  0E0F               	movlw	15
  1240   0029BC  6FFE               	movwf	(main@motorL+8)& (0+255),b
  1241   0029BE                     
  1242                           ; BSR set to: 3
  1243                           ;main.c: 57:     motorL.PWMperiod=PWMcycle;
  1244   0029BE  0E00               	movlw	0
  1245   0029C0  6FFA               	movwf	(main@motorL+4)& (0+255),b
  1246   0029C2  0EC7               	movlw	199
  1247   0029C4  6FF9               	movwf	(main@motorL+3)& (0+255),b
  1248   0029C6                     
  1249                           ; BSR set to: 3
  1250                           ;main.c: 58:     motorL.compensation=0;
  1251   0029C6  0E00               	movlw	0
  1252   0029C8  6FFF               	movwf	(main@motorL+9)& (0+255),b
  1253   0029CA                     
  1254                           ; BSR set to: 3
  1255                           ;main.c: 60:     motorR.power=0;
  1256   0029CA  0E00               	movlw	0
  1257   0029CC  6FEC               	movwf	main@motorR& (0+255),b
  1258   0029CE                     
  1259                           ; BSR set to: 3
  1260                           ;main.c: 61:     motorR.direction=1;
  1261   0029CE  0E01               	movlw	1
  1262   0029D0  6FED               	movwf	(main@motorR+1)& (0+255),b
  1263   0029D2                     
  1264                           ; BSR set to: 3
  1265                           ;main.c: 62:     motorR.brakemode=1;
  1266   0029D2  0E01               	movlw	1
  1267   0029D4  6FEE               	movwf	(main@motorR+2)& (0+255),b
  1268   0029D6                     
  1269                           ; BSR set to: 3
  1270                           ;main.c: 63:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1271   0029D6  0E25               	movlw	37
  1272   0029D8  6FF1               	movwf	(main@motorR+5)& (0+255),b
  1273   0029DA  0E0F               	movlw	15
  1274   0029DC  6FF2               	movwf	(main@motorR+6)& (0+255),b
  1275   0029DE                     
  1276                           ; BSR set to: 3
  1277                           ;main.c: 64:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1278   0029DE  0E21               	movlw	33
  1279   0029E0  6FF3               	movwf	(main@motorR+7)& (0+255),b
  1280   0029E2  0E0F               	movlw	15
  1281   0029E4  6FF4               	movwf	(main@motorR+8)& (0+255),b
  1282   0029E6                     
  1283                           ; BSR set to: 3
  1284                           ;main.c: 65:     motorR.PWMperiod=PWMcycle;
  1285   0029E6  0E00               	movlw	0
  1286   0029E8  6FF0               	movwf	(main@motorR+4)& (0+255),b
  1287   0029EA  0EC7               	movlw	199
  1288   0029EC  6FEF               	movwf	(main@motorR+3)& (0+255),b
  1289   0029EE                     
  1290                           ; BSR set to: 3
  1291                           ;main.c: 66:     motorR.compensation=0;
  1292   0029EE  0E00               	movlw	0
  1293   0029F0  6FF5               	movwf	(main@motorR+9)& (0+255),b
  1294   0029F2                     
  1295                           ; BSR set to: 3
  1296                           ;main.c: 69:     char straightSpeed=20;
  1297   0029F2  0E14               	movlw	20
  1298   0029F4  6FA9               	movwf	main@straightSpeed& (0+255),b
  1299   0029F6                     
  1300                           ; BSR set to: 3
  1301                           ;main.c: 70:     unsigned char straightRamp=1;
  1302   0029F6  0E01               	movlw	1
  1303   0029F8  6FDC               	movwf	main@straightRamp& (0+255),b
  1304   0029FA                     
  1305                           ; BSR set to: 3
  1306                           ;main.c: 72:     unsigned char reverseDuration=200;
  1307   0029FA  0EC8               	movlw	200
  1308   0029FC  6FA6               	movwf	main@reverseDuration& (0+255),b
  1309   0029FE                     
  1310                           ; BSR set to: 3
  1311                           ;main.c: 74:     char turnSpeed=28;
  1312   0029FE  0E1C               	movlw	28
  1313   002A00  6FA7               	movwf	main@turnSpeed& (0+255),b
  1314   002A02                     
  1315                           ; BSR set to: 3
  1316                           ;main.c: 75:     unsigned char turnDuration=13;
  1317   002A02  0E0D               	movlw	13
  1318   002A04  6FDD               	movwf	main@turnDuration& (0+255),b
  1319   002A06                     
  1320                           ; BSR set to: 3
  1321                           ;main.c: 76:     unsigned char turnRamp=1;
  1322   002A06  0E01               	movlw	1
  1323   002A08  6FA8               	movwf	main@turnRamp& (0+255),b
  1324   002A0A                     
  1325                           ; BSR set to: 3
  1326                           ;main.c: 79:     batteryLevel();
  1327   002A0A  ECEA  F026         	call	_batteryLevel	;wreg free
  1328   002A0E                     l91:
  1329   002A0E  B48E               	btfsc	142,2,c	;volatile
  1330   002A10  EF0C  F015         	goto	u5081
  1331   002A14  EF0E  F015         	goto	u5080
  1332   002A18                     u5081:
  1333   002A18  EF07  F015         	goto	l91
  1334   002A1C                     u5080:
  1335   002A1C                     
  1336                           ;main.c: 92:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1337   002A1C  9680               	bcf	128,3,c	;volatile
  1338   002A1E  9E7C               	bcf	124,7,c	;volatile
  1339                           
  1340                           ;main.c: 95:     LATHbits.LATH1=LATDbits.LATD3=1;
  1341   002A20  867C               	bsf	124,3,c	;volatile
  1342   002A22  8280               	bsf	128,1,c	;volatile
  1343   002A24                     
  1344                           ;main.c: 96:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1345   002A24  0E29               	movlw	41
  1346   002A26  6E42               	movwf	(??_main+1)^0,c
  1347   002A28  0E96               	movlw	150
  1348   002A2A  6E41               	movwf	??_main^0,c
  1349   002A2C  0E7F               	movlw	127
  1350   002A2E                     u5357:
  1351   002A2E  2EE8               	decfsz	wreg,f,c
  1352   002A30  D7FE               	bra	u5357
  1353   002A32  2E41               	decfsz	??_main^0,f,c
  1354   002A34  D7FC               	bra	u5357
  1355   002A36  2E42               	decfsz	(??_main+1)^0,f,c
  1356   002A38  D7FA               	bra	u5357
  1357   002A3A  0000               	nop	
  1358   002A3C                     
  1359                           ;main.c: 99:     struct HSV_calib red, green, blue, yellow, pink, orange, lightblue, whi
      +                          te;;main.c: 100:     color_calibration(&RGBC, &HSV, &red, &green, &blue, &yellow, &pink,
      +                           &orange, &lightblue, &white);
  1360   002A3C  0EE4               	movlw	low main@RGBC
  1361   002A3E  0101               	movlb	1	; () banked
  1362   002A40  6F00               	movwf	color_calibration@RGBC& (0+255),b
  1363   002A42  0E03               	movlw	high main@RGBC
  1364   002A44  6F01               	movwf	(color_calibration@RGBC+1)& (0+255),b
  1365   002A46  0EDE               	movlw	low main@HSV
  1366   002A48  6F02               	movwf	color_calibration@HSV& (0+255),b
  1367   002A4A  0E03               	movlw	high main@HSV
  1368   002A4C  6F03               	movwf	(color_calibration@HSV+1)& (0+255),b
  1369   002A4E  0EAA               	movlw	low main@red
  1370   002A50  6F04               	movwf	color_calibration@red& (0+255),b
  1371   002A52  0E03               	movlw	high main@red
  1372   002A54  6F05               	movwf	(color_calibration@red+1)& (0+255),b
  1373   002A56  0EB0               	movlw	low main@green
  1374   002A58  6F06               	movwf	color_calibration@green& (0+255),b
  1375   002A5A  0E03               	movlw	high main@green
  1376   002A5C  6F07               	movwf	(color_calibration@green+1)& (0+255),b
  1377   002A5E  0EB6               	movlw	low main@blue
  1378   002A60  6F08               	movwf	color_calibration@blue& (0+255),b
  1379   002A62  0E03               	movlw	high main@blue
  1380   002A64  6F09               	movwf	(color_calibration@blue+1)& (0+255),b
  1381   002A66  0EBC               	movlw	low main@yellow
  1382   002A68  6F0A               	movwf	color_calibration@yellow& (0+255),b
  1383   002A6A  0E03               	movlw	high main@yellow
  1384   002A6C  6F0B               	movwf	(color_calibration@yellow+1)& (0+255),b
  1385   002A6E  0EC2               	movlw	low main@pink
  1386   002A70  6F0C               	movwf	color_calibration@pink& (0+255),b
  1387   002A72  0E03               	movlw	high main@pink
  1388   002A74  6F0D               	movwf	(color_calibration@pink+1)& (0+255),b
  1389   002A76  0EC8               	movlw	low main@orange
  1390   002A78  6F0E               	movwf	color_calibration@orange& (0+255),b
  1391   002A7A  0E03               	movlw	high main@orange
  1392   002A7C  6F0F               	movwf	(color_calibration@orange+1)& (0+255),b
  1393   002A7E  0ECE               	movlw	low main@lightblue
  1394   002A80  6F10               	movwf	color_calibration@lightblue& (0+255),b
  1395   002A82  0E03               	movlw	high main@lightblue
  1396   002A84  6F11               	movwf	(color_calibration@lightblue+1)& (0+255),b
  1397   002A86  0ED4               	movlw	low main@white
  1398   002A88  6F12               	movwf	color_calibration@white& (0+255),b
  1399   002A8A  0E03               	movlw	high main@white
  1400   002A8C  6F13               	movwf	(color_calibration@white+1)& (0+255),b
  1401   002A8E  ECC5  F011         	call	_color_calibration	;wreg free
  1402   002A92                     
  1403                           ;main.c: 103:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1404   002A92  0EF6               	movlw	low main@motorL
  1405   002A94  6E29               	movwf	calibration@mL^0,c
  1406   002A96  0E03               	movlw	high main@motorL
  1407   002A98  6E2A               	movwf	(calibration@mL+1)^0,c
  1408   002A9A  0EEC               	movlw	low main@motorR
  1409   002A9C  6E2B               	movwf	calibration@mR^0,c
  1410   002A9E  0E03               	movlw	high main@motorR
  1411   002AA0  6E2C               	movwf	(calibration@mR+1)^0,c
  1412   002AA2  0E1C               	movlw	28
  1413   002AA4  6E2D               	movwf	calibration@turnSpeed^0,c
  1414   002AA6  0EDD               	movlw	low main@turnDuration
  1415   002AA8  6E2E               	movwf	calibration@turnDuration^0,c
  1416   002AAA  0E03               	movlw	high main@turnDuration
  1417   002AAC  6E2F               	movwf	(calibration@turnDuration+1)^0,c
  1418   002AAE  0E01               	movlw	1
  1419   002AB0  6E30               	movwf	calibration@turnRamp^0,c
  1420   002AB2  EC90  F01B         	call	_calibration	;wreg free
  1421   002AB6                     
  1422                           ;main.c: 106:     color_read(&RGBC);
  1423   002AB6  0EE4               	movlw	low main@RGBC
  1424   002AB8  6E0C               	movwf	color_read@RGBC^0,c
  1425   002ABA  0E03               	movlw	high main@RGBC
  1426   002ABC  6E0D               	movwf	(color_read@RGBC+1)^0,c
  1427   002ABE  EC11  F01E         	call	_color_read	;wreg free
  1428   002AC2                     
  1429                           ;main.c: 107:     rgb_2_hsv(RGBC, &HSV);
  1430   002AC2  EE23  F0E4         	lfsr	2,main@RGBC
  1431   002AC6  EE00  F022         	lfsr	0,rgb_2_hsv@RGBC
  1432   002ACA  0E07               	movlw	7
  1433   002ACC                     u5091:
  1434   002ACC  CFDB FFEB          	movff	plusw2,plusw0
  1435   002AD0  06E8               	decf	wreg,f,c
  1436   002AD2  E2FC               	bc	u5091
  1437   002AD4  0EDE               	movlw	low main@HSV
  1438   002AD6  6E2A               	movwf	rgb_2_hsv@HSV^0,c
  1439   002AD8  0E03               	movlw	high main@HSV
  1440   002ADA  6E2B               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1441   002ADC  EC41  F017         	call	_rgb_2_hsv	;wreg free
  1442   002AE0                     
  1443                           ;main.c: 108:     color = color_detect(HSV, red, green, blue, yellow, pink, orange, ligh
      +                          tblue, white);
  1444   002AE0  EE23  F0DE         	lfsr	2,main@HSV
  1445   002AE4  EE00  F008         	lfsr	0,color_detect@HSV
  1446   002AE8  0E05               	movlw	5
  1447   002AEA                     u5101:
  1448   002AEA  CFDB FFEB          	movff	plusw2,plusw0
  1449   002AEE  06E8               	decf	wreg,f,c
  1450   002AF0  E2FC               	bc	u5101
  1451   002AF2  EE23  F0AA         	lfsr	2,main@red
  1452   002AF6  EE00  F00E         	lfsr	0,color_detect@red
  1453   002AFA  0E05               	movlw	5
  1454   002AFC                     u5111:
  1455   002AFC  CFDB FFEB          	movff	plusw2,plusw0
  1456   002B00  06E8               	decf	wreg,f,c
  1457   002B02  E2FC               	bc	u5111
  1458   002B04  EE23  F0B0         	lfsr	2,main@green
  1459   002B08  EE00  F014         	lfsr	0,color_detect@green
  1460   002B0C  0E05               	movlw	5
  1461   002B0E                     u5121:
  1462   002B0E  CFDB FFEB          	movff	plusw2,plusw0
  1463   002B12  06E8               	decf	wreg,f,c
  1464   002B14  E2FC               	bc	u5121
  1465   002B16  EE23  F0B6         	lfsr	2,main@blue
  1466   002B1A  EE00  F01A         	lfsr	0,color_detect@blue
  1467   002B1E  0E05               	movlw	5
  1468   002B20                     u5131:
  1469   002B20  CFDB FFEB          	movff	plusw2,plusw0
  1470   002B24  06E8               	decf	wreg,f,c
  1471   002B26  E2FC               	bc	u5131
  1472   002B28  EE23  F0BC         	lfsr	2,main@yellow
  1473   002B2C  EE00  F020         	lfsr	0,color_detect@yellow
  1474   002B30  0E05               	movlw	5
  1475   002B32                     u5141:
  1476   002B32  CFDB FFEB          	movff	plusw2,plusw0
  1477   002B36  06E8               	decf	wreg,f,c
  1478   002B38  E2FC               	bc	u5141
  1479   002B3A  EE23  F0C2         	lfsr	2,main@pink
  1480   002B3E  EE00  F026         	lfsr	0,color_detect@pink
  1481   002B42  0E05               	movlw	5
  1482   002B44                     u5151:
  1483   002B44  CFDB FFEB          	movff	plusw2,plusw0
  1484   002B48  06E8               	decf	wreg,f,c
  1485   002B4A  E2FC               	bc	u5151
  1486   002B4C  EE23  F0C8         	lfsr	2,main@orange
  1487   002B50  EE00  F02C         	lfsr	0,color_detect@orange
  1488   002B54  0E05               	movlw	5
  1489   002B56                     u5161:
  1490   002B56  CFDB FFEB          	movff	plusw2,plusw0
  1491   002B5A  06E8               	decf	wreg,f,c
  1492   002B5C  E2FC               	bc	u5161
  1493   002B5E  EE23  F0CE         	lfsr	2,main@lightblue
  1494   002B62  EE00  F032         	lfsr	0,color_detect@lightblue
  1495   002B66  0E05               	movlw	5
  1496   002B68                     u5171:
  1497   002B68  CFDB FFEB          	movff	plusw2,plusw0
  1498   002B6C  06E8               	decf	wreg,f,c
  1499   002B6E  E2FC               	bc	u5171
  1500   002B70  EE23  F0D4         	lfsr	2,main@white
  1501   002B74  EE00  F038         	lfsr	0,color_detect@white
  1502   002B78  0E05               	movlw	5
  1503   002B7A                     u5181:
  1504   002B7A  CFDB FFEB          	movff	plusw2,plusw0
  1505   002B7E  06E8               	decf	wreg,f,c
  1506   002B80  E2FC               	bc	u5181
  1507   002B82  ECDD  F01C         	call	_color_detect	;wreg free
  1508   002B86  0103               	movlb	3	; () banked
  1509   002B88  6FDB               	movwf	main@color& (0+255),b
  1510   002B8A                     
  1511                           ; BSR set to: 3
  1512                           ;main.c: 112:     white_Light(1);
  1513   002B8A  0E01               	movlw	1
  1514   002B8C  EC1F  F028         	call	_white_Light
  1515   002B90                     
  1516                           ;main.c: 113:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1517   002B90  0E52               	movlw	82
  1518   002B92  6E42               	movwf	(??_main+1)^0,c
  1519   002B94  0E2B               	movlw	43
  1520   002B96  6E41               	movwf	??_main^0,c
  1521   002B98  0E00               	movlw	0
  1522   002B9A                     u5367:
  1523   002B9A  2EE8               	decfsz	wreg,f,c
  1524   002B9C  D7FE               	bra	u5367
  1525   002B9E  2E41               	decfsz	??_main^0,f,c
  1526   002BA0  D7FC               	bra	u5367
  1527   002BA2  2E42               	decfsz	(??_main+1)^0,f,c
  1528   002BA4  D7FA               	bra	u5367
  1529   002BA6  D000               	nop2	
  1530   002BA8                     
  1531                           ;main.c: 116:     color_read(&RGBC);
  1532   002BA8  0EE4               	movlw	low main@RGBC
  1533   002BAA  6E0C               	movwf	color_read@RGBC^0,c
  1534   002BAC  0E03               	movlw	high main@RGBC
  1535   002BAE  6E0D               	movwf	(color_read@RGBC+1)^0,c
  1536   002BB0  EC11  F01E         	call	_color_read	;wreg free
  1537   002BB4                     
  1538                           ;main.c: 117:     ambient=RGBC.C;
  1539   002BB4  C3EA  F04D         	movff	main@RGBC+6,_ambient
  1540   002BB8  C3EB  F04E         	movff	main@RGBC+7,_ambient+1
  1541   002BBC                     
  1542                           ;main.c: 118:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1543   002BBC  0E29               	movlw	41
  1544   002BBE  6E42               	movwf	(??_main+1)^0,c
  1545   002BC0  0E96               	movlw	150
  1546   002BC2  6E41               	movwf	??_main^0,c
  1547   002BC4  0E7F               	movlw	127
  1548   002BC6                     u5377:
  1549   002BC6  2EE8               	decfsz	wreg,f,c
  1550   002BC8  D7FE               	bra	u5377
  1551   002BCA  2E41               	decfsz	??_main^0,f,c
  1552   002BCC  D7FC               	bra	u5377
  1553   002BCE  2E42               	decfsz	(??_main+1)^0,f,c
  1554   002BD0  D7FA               	bra	u5377
  1555   002BD2  0000               	nop	
  1556   002BD4                     
  1557                           ;main.c: 120:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1558   002BD4  0EF6               	movlw	low main@motorL
  1559   002BD6  6E1B               	movwf	fullSpeedAhead@mL^0,c
  1560   002BD8  0E03               	movlw	high main@motorL
  1561   002BDA  6E1C               	movwf	(fullSpeedAhead@mL+1)^0,c
  1562   002BDC  0EEC               	movlw	low main@motorR
  1563   002BDE  6E1D               	movwf	fullSpeedAhead@mR^0,c
  1564   002BE0  0E03               	movlw	high main@motorR
  1565   002BE2  6E1E               	movwf	(fullSpeedAhead@mR+1)^0,c
  1566   002BE4  0E14               	movlw	20
  1567   002BE6  6E1F               	movwf	fullSpeedAhead@straightSpeed^0,c
  1568   002BE8  0E01               	movlw	1
  1569   002BEA  6E20               	movwf	fullSpeedAhead@straightRamp^0,c
  1570   002BEC  EC84  F024         	call	_fullSpeedAhead	;wreg free
  1571   002BF0                     
  1572                           ;main.c: 121:     resetTimer();
  1573   002BF0  ECAC  F028         	call	_resetTimer	;wreg free
  1574   002BF4                     
  1575                           ;main.c: 123:     wall=0;
  1576   002BF4  0E00               	movlw	0
  1577   002BF6  6E44               	movwf	_wall^0,c
  1578   002BF8                     
  1579                           ;main.c: 124:     lost=0;
  1580   002BF8  0E00               	movlw	0
  1581   002BFA  6E43               	movwf	_lost^0,c
  1582   002BFC                     l5870:
  1583                           
  1584                           ;main.c: 127:         if (wall == 1) {
  1585   002BFC  0444               	decf	_wall^0,w,c
  1586   002BFE  A4D8               	btfss	status,2,c
  1587   002C00  EF04  F016         	goto	u5191
  1588   002C04  EF06  F016         	goto	u5190
  1589   002C08                     u5191:
  1590   002C08  EFF0  F016         	goto	l5900
  1591   002C0C                     u5190:
  1592   002C0C                     
  1593                           ;main.c: 128:             PIE0bits.INT0IE=TMR0IE=0;
  1594   002C0C  010E               	movlb	14	; () banked
  1595   002C0E  9B29               	bcf	41,5,b	;volatile
  1596   002C10  AB29               	btfss	41,5,b	;volatile
  1597   002C12  D002               	bra	u5205
  1598   002C14  8129               	bsf	41,0,b	;volatile
  1599   002C16  D002               	bra	u5207
  1600   002C18                     u5205:
  1601   002C18  010E               	movlb	14	; () banked
  1602   002C1A  9129               	bcf	41,0,b	;volatile
  1603   002C1C                     u5207:
  1604   002C1C                     
  1605                           ; BSR set to: 14
  1606                           ;main.c: 129:             straightTime[curMove] = get16bitTMR0val();
  1607   002C1C  ECAA  F027         	call	_get16bitTMR0val	;wreg free
  1608   002C20  0103               	movlb	3	; () banked
  1609   002C22  51DA               	movf	main@curMove& (0+255),w,b
  1610   002C24  0D02               	mullw	2
  1611   002C26  0E28               	movlw	low main@straightTime
  1612   002C28  24F3               	addwf	243,w,c
  1613   002C2A  6ED9               	movwf	fsr2l,c
  1614   002C2C  0E03               	movlw	high main@straightTime
  1615   002C2E  20F4               	addwfc	prodh,w,c
  1616   002C30  6EDA               	movwf	fsr2h,c
  1617   002C32  C008  FFDE         	movff	?_get16bitTMR0val,postinc2
  1618   002C36  C009  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1619                           
  1620                           ;main.c: 132:             stop(&motorL, &motorR, straightRamp);
  1621   002C3A  0EF6               	movlw	low main@motorL
  1622   002C3C  6E1B               	movwf	stop@mL^0,c
  1623   002C3E  0E03               	movlw	high main@motorL
  1624   002C40  6E1C               	movwf	(stop@mL+1)^0,c
  1625   002C42  0EEC               	movlw	low main@motorR
  1626   002C44  6E1D               	movwf	stop@mR^0,c
  1627   002C46  0E03               	movlw	high main@motorR
  1628   002C48  6E1E               	movwf	(stop@mR+1)^0,c
  1629   002C4A  C3DC  F01F         	movff	main@straightRamp,stop@straightRamp
  1630   002C4E  EC00  F024         	call	_stop	;wreg free
  1631                           
  1632                           ;main.c: 133:             wallAdjust(&motorL, &motorR, straightSpeed, straightRamp);
  1633   002C52  0EF6               	movlw	low main@motorL
  1634   002C54  6E1B               	movwf	wallAdjust@mL^0,c
  1635   002C56  0E03               	movlw	high main@motorL
  1636   002C58  6E1C               	movwf	(wallAdjust@mL+1)^0,c
  1637   002C5A  0EEC               	movlw	low main@motorR
  1638   002C5C  6E1D               	movwf	wallAdjust@mR^0,c
  1639   002C5E  0E03               	movlw	high main@motorR
  1640   002C60  6E1E               	movwf	(wallAdjust@mR+1)^0,c
  1641   002C62  C3A9  F01F         	movff	main@straightSpeed,wallAdjust@straightSpeed
  1642   002C66  C3DC  F020         	movff	main@straightRamp,wallAdjust@straightRamp
  1643   002C6A  ECAF  F019         	call	_wallAdjust	;wreg free
  1644   002C6E                     
  1645                           ;main.c: 134:             color_read(&RGBC);
  1646   002C6E  0EE4               	movlw	low main@RGBC
  1647   002C70  6E0C               	movwf	color_read@RGBC^0,c
  1648   002C72  0E03               	movlw	high main@RGBC
  1649   002C74  6E0D               	movwf	(color_read@RGBC+1)^0,c
  1650   002C76  EC11  F01E         	call	_color_read	;wreg free
  1651   002C7A                     
  1652                           ;main.c: 136:             rgb_2_hsv(RGBC, &HSV);
  1653   002C7A  EE23  F0E4         	lfsr	2,main@RGBC
  1654   002C7E  EE00  F022         	lfsr	0,rgb_2_hsv@RGBC
  1655   002C82  0E07               	movlw	7
  1656   002C84                     u5211:
  1657   002C84  CFDB FFEB          	movff	plusw2,plusw0
  1658   002C88  06E8               	decf	wreg,f,c
  1659   002C8A  E2FC               	bc	u5211
  1660   002C8C  0EDE               	movlw	low main@HSV
  1661   002C8E  6E2A               	movwf	rgb_2_hsv@HSV^0,c
  1662   002C90  0E03               	movlw	high main@HSV
  1663   002C92  6E2B               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1664   002C94  EC41  F017         	call	_rgb_2_hsv	;wreg free
  1665   002C98                     
  1666                           ;main.c: 137:             color = color_detect(HSV, red, green, blue, yellow, pink, oran
      +                          ge, lightblue, white);
  1667   002C98  EE23  F0DE         	lfsr	2,main@HSV
  1668   002C9C  EE00  F008         	lfsr	0,color_detect@HSV
  1669   002CA0  0E05               	movlw	5
  1670   002CA2                     u5221:
  1671   002CA2  CFDB FFEB          	movff	plusw2,plusw0
  1672   002CA6  06E8               	decf	wreg,f,c
  1673   002CA8  E2FC               	bc	u5221
  1674   002CAA  EE23  F0AA         	lfsr	2,main@red
  1675   002CAE  EE00  F00E         	lfsr	0,color_detect@red
  1676   002CB2  0E05               	movlw	5
  1677   002CB4                     u5231:
  1678   002CB4  CFDB FFEB          	movff	plusw2,plusw0
  1679   002CB8  06E8               	decf	wreg,f,c
  1680   002CBA  E2FC               	bc	u5231
  1681   002CBC  EE23  F0B0         	lfsr	2,main@green
  1682   002CC0  EE00  F014         	lfsr	0,color_detect@green
  1683   002CC4  0E05               	movlw	5
  1684   002CC6                     u5241:
  1685   002CC6  CFDB FFEB          	movff	plusw2,plusw0
  1686   002CCA  06E8               	decf	wreg,f,c
  1687   002CCC  E2FC               	bc	u5241
  1688   002CCE  EE23  F0B6         	lfsr	2,main@blue
  1689   002CD2  EE00  F01A         	lfsr	0,color_detect@blue
  1690   002CD6  0E05               	movlw	5
  1691   002CD8                     u5251:
  1692   002CD8  CFDB FFEB          	movff	plusw2,plusw0
  1693   002CDC  06E8               	decf	wreg,f,c
  1694   002CDE  E2FC               	bc	u5251
  1695   002CE0  EE23  F0BC         	lfsr	2,main@yellow
  1696   002CE4  EE00  F020         	lfsr	0,color_detect@yellow
  1697   002CE8  0E05               	movlw	5
  1698   002CEA                     u5261:
  1699   002CEA  CFDB FFEB          	movff	plusw2,plusw0
  1700   002CEE  06E8               	decf	wreg,f,c
  1701   002CF0  E2FC               	bc	u5261
  1702   002CF2  EE23  F0C2         	lfsr	2,main@pink
  1703   002CF6  EE00  F026         	lfsr	0,color_detect@pink
  1704   002CFA  0E05               	movlw	5
  1705   002CFC                     u5271:
  1706   002CFC  CFDB FFEB          	movff	plusw2,plusw0
  1707   002D00  06E8               	decf	wreg,f,c
  1708   002D02  E2FC               	bc	u5271
  1709   002D04  EE23  F0C8         	lfsr	2,main@orange
  1710   002D08  EE00  F02C         	lfsr	0,color_detect@orange
  1711   002D0C  0E05               	movlw	5
  1712   002D0E                     u5281:
  1713   002D0E  CFDB FFEB          	movff	plusw2,plusw0
  1714   002D12  06E8               	decf	wreg,f,c
  1715   002D14  E2FC               	bc	u5281
  1716   002D16  EE23  F0CE         	lfsr	2,main@lightblue
  1717   002D1A  EE00  F032         	lfsr	0,color_detect@lightblue
  1718   002D1E  0E05               	movlw	5
  1719   002D20                     u5291:
  1720   002D20  CFDB FFEB          	movff	plusw2,plusw0
  1721   002D24  06E8               	decf	wreg,f,c
  1722   002D26  E2FC               	bc	u5291
  1723   002D28  EE23  F0D4         	lfsr	2,main@white
  1724   002D2C  EE00  F038         	lfsr	0,color_detect@white
  1725   002D30  0E05               	movlw	5
  1726   002D32                     u5301:
  1727   002D32  CFDB FFEB          	movff	plusw2,plusw0
  1728   002D36  06E8               	decf	wreg,f,c
  1729   002D38  E2FC               	bc	u5301
  1730   002D3A  ECDD  F01C         	call	_color_detect	;wreg free
  1731   002D3E  0103               	movlb	3	; () banked
  1732   002D40  6FDB               	movwf	main@color& (0+255),b
  1733   002D42                     
  1734                           ; BSR set to: 3
  1735                           ;main.c: 139:             moveSequence[curMove] = color;
  1736   002D42  0E7E               	movlw	low main@moveSequence
  1737   002D44  25DA               	addwf	main@curMove& (0+255),w,b
  1738   002D46  6ED9               	movwf	fsr2l,c
  1739   002D48  6ADA               	clrf	fsr2h,c
  1740   002D4A  0E03               	movlw	high main@moveSequence
  1741   002D4C  22DA               	addwfc	fsr2h,f,c
  1742   002D4E  C3DB  FFDF         	movff	main@color,indf2
  1743   002D52                     
  1744                           ; BSR set to: 3
  1745                           ;main.c: 142:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1746   002D52  0EF6               	movlw	low main@motorL
  1747   002D54  0100               	movlb	0	; () banked
  1748   002D56  6FD8               	movwf	move@mL& (0+255),b
  1749   002D58  0E03               	movlw	high main@motorL
  1750   002D5A  6FD9               	movwf	(move@mL+1)& (0+255),b
  1751   002D5C  0EEC               	movlw	low main@motorR
  1752   002D5E  6FDA               	movwf	move@mR& (0+255),b
  1753   002D60  0E03               	movlw	high main@motorR
  1754   002D62  6FDB               	movwf	(move@mR+1)& (0+255),b
  1755   002D64  C3DB  F0DC         	movff	main@color,move@color
  1756   002D68  0E7E               	movlw	low main@moveSequence
  1757   002D6A  6FDD               	movwf	move@moveSequence& (0+255),b
  1758   002D6C  0E03               	movlw	high main@moveSequence
  1759   002D6E  6FDE               	movwf	(move@moveSequence+1)& (0+255),b
  1760   002D70  0E28               	movlw	low main@straightTime
  1761   002D72  6FDF               	movwf	move@straightTime& (0+255),b
  1762   002D74  0E03               	movlw	high main@straightTime
  1763   002D76  6FE0               	movwf	(move@straightTime+1)& (0+255),b
  1764   002D78  C3DA  F0E1         	movff	main@curMove,move@curMove
  1765   002D7C  C3A9  F0E2         	movff	main@straightSpeed,move@straightSpeed
  1766   002D80  C3A6  F0E3         	movff	main@reverseDuration,move@reverseDuration
  1767   002D84  C3DC  F0E4         	movff	main@straightRamp,move@straightRamp
  1768   002D88  C3A7  F0E5         	movff	main@turnSpeed,move@turnSpeed
  1769   002D8C  C3DD  F0E6         	movff	main@turnDuration,move@turnDuration
  1770   002D90  C3A8  F0E7         	movff	main@turnRamp,move@turnRamp
  1771   002D94  EC01  F007         	call	_move	;wreg free
  1772   002D98                     
  1773                           ;main.c: 145:             color_read(&RGBC);
  1774   002D98  0EE4               	movlw	low main@RGBC
  1775   002D9A  6E0C               	movwf	color_read@RGBC^0,c
  1776   002D9C  0E03               	movlw	high main@RGBC
  1777   002D9E  6E0D               	movwf	(color_read@RGBC+1)^0,c
  1778   002DA0  EC11  F01E         	call	_color_read	;wreg free
  1779   002DA4                     
  1780                           ;main.c: 146:             ambient=RGBC.C;
  1781   002DA4  C3EA  F04D         	movff	main@RGBC+6,_ambient
  1782   002DA8  C3EB  F04E         	movff	main@RGBC+7,_ambient+1
  1783   002DAC                     
  1784                           ;main.c: 147:             _delay((unsigned long)((50)*(64000000/4000.0)));
  1785   002DAC  0E05               	movlw	5
  1786   002DAE  6E42               	movwf	(??_main+1)^0,c
  1787   002DB0  0E0F               	movlw	15
  1788   002DB2  6E41               	movwf	??_main^0,c
  1789   002DB4  0EF1               	movlw	241
  1790   002DB6                     u5387:
  1791   002DB6  2EE8               	decfsz	wreg,f,c
  1792   002DB8  D7FE               	bra	u5387
  1793   002DBA  2E41               	decfsz	??_main^0,f,c
  1794   002DBC  D7FC               	bra	u5387
  1795   002DBE  2E42               	decfsz	(??_main+1)^0,f,c
  1796   002DC0  D7FA               	bra	u5387
  1797   002DC2  0000               	nop	
  1798   002DC4                     
  1799                           ;main.c: 149:             curMove++;
  1800   002DC4  0103               	movlb	3	; () banked
  1801   002DC6  2BDA               	incf	main@curMove& (0+255),f,b
  1802   002DC8                     
  1803                           ; BSR set to: 3
  1804                           ;main.c: 150:             resetTimer();
  1805   002DC8  ECAC  F028         	call	_resetTimer	;wreg free
  1806   002DCC                     
  1807                           ;main.c: 151:             PIE0bits.INT0IE=TMR0IE=1;
  1808   002DCC  010E               	movlb	14	; () banked
  1809   002DCE  8B29               	bsf	41,5,b	;volatile
  1810   002DD0  AB29               	btfss	41,5,b	;volatile
  1811   002DD2  D002               	bra	u5315
  1812   002DD4  8129               	bsf	41,0,b	;volatile
  1813   002DD6  D002               	bra	u5317
  1814   002DD8                     u5315:
  1815   002DD8  010E               	movlb	14	; () banked
  1816   002DDA  9129               	bcf	41,0,b	;volatile
  1817   002DDC                     u5317:
  1818   002DDC                     
  1819                           ; BSR set to: 14
  1820                           ;main.c: 152:             wall = 0;
  1821   002DDC  0E00               	movlw	0
  1822   002DDE  6E44               	movwf	_wall^0,c
  1823   002DE0                     l5900:
  1824                           
  1825                           ;main.c: 156:         if (lost == 1) {
  1826   002DE0  0443               	decf	_lost^0,w,c
  1827   002DE2  A4D8               	btfss	status,2,c
  1828   002DE4  EFF6  F016         	goto	u5321
  1829   002DE8  EFF8  F016         	goto	u5320
  1830   002DEC                     u5321:
  1831   002DEC  EF2C  F017         	goto	l5910
  1832   002DF0                     u5320:
  1833   002DF0                     
  1834                           ;main.c: 157:             PIE0bits.INT0IE=0;
  1835   002DF0  010E               	movlb	14	; () banked
  1836   002DF2  9129               	bcf	41,0,b	;volatile
  1837   002DF4                     
  1838                           ; BSR set to: 14
  1839                           ;main.c: 158:             stop(&motorL, &motorR, straightRamp);
  1840   002DF4  0EF6               	movlw	low main@motorL
  1841   002DF6  6E1B               	movwf	stop@mL^0,c
  1842   002DF8  0E03               	movlw	high main@motorL
  1843   002DFA  6E1C               	movwf	(stop@mL+1)^0,c
  1844   002DFC  0EEC               	movlw	low main@motorR
  1845   002DFE  6E1D               	movwf	stop@mR^0,c
  1846   002E00  0E03               	movlw	high main@motorR
  1847   002E02  6E1E               	movwf	(stop@mR+1)^0,c
  1848   002E04  C3DC  F01F         	movff	main@straightRamp,stop@straightRamp
  1849   002E08  EC00  F024         	call	_stop	;wreg free
  1850                           
  1851                           ;main.c: 159:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1852   002E0C  0EF6               	movlw	low main@motorL
  1853   002E0E  6E29               	movwf	lostReturnHome@mL^0,c
  1854   002E10  0E03               	movlw	high main@motorL
  1855   002E12  6E2A               	movwf	(lostReturnHome@mL+1)^0,c
  1856   002E14  0EEC               	movlw	low main@motorR
  1857   002E16  6E2B               	movwf	lostReturnHome@mR^0,c
  1858   002E18  0E03               	movlw	high main@motorR
  1859   002E1A  6E2C               	movwf	(lostReturnHome@mR+1)^0,c
  1860   002E1C  0E7E               	movlw	low main@moveSequence
  1861   002E1E  6E2D               	movwf	lostReturnHome@moveSequence^0,c
  1862   002E20  0E03               	movlw	high main@moveSequence
  1863   002E22  6E2E               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1864   002E24  0E28               	movlw	low main@straightTime
  1865   002E26  6E2F               	movwf	lostReturnHome@straightTime^0,c
  1866   002E28  0E03               	movlw	high main@straightTime
  1867   002E2A  6E30               	movwf	(lostReturnHome@straightTime+1)^0,c
  1868   002E2C  C3DA  F031         	movff	main@curMove,lostReturnHome@curMove
  1869   002E30  C3A9  F032         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1870   002E34  C3A6  F033         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1871   002E38  C3DC  F034         	movff	main@straightRamp,lostReturnHome@straightRamp
  1872   002E3C  C3A7  F035         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1873   002E40  C3DD  F036         	movff	main@turnDuration,lostReturnHome@turnDuration
  1874   002E44  C3A8  F037         	movff	main@turnRamp,lostReturnHome@turnRamp
  1875   002E48  EC74  F00E         	call	_lostReturnHome	;wreg free
  1876   002E4C                     
  1877                           ;main.c: 160:             PIE0bits.INT0IE=1;
  1878   002E4C  010E               	movlb	14	; () banked
  1879   002E4E  8129               	bsf	41,0,b	;volatile
  1880   002E50                     
  1881                           ; BSR set to: 14
  1882                           ;main.c: 161:             lost = 0;
  1883   002E50  0E00               	movlw	0
  1884   002E52  6E43               	movwf	_lost^0,c
  1885                           
  1886                           ;main.c: 162:             break;
  1887   002E54  EF3F  F017         	goto	l102
  1888   002E58                     l5910:
  1889                           
  1890                           ;main.c: 165:         if (color == 8 || color == 9) {break;}
  1891   002E58  0E08               	movlw	8
  1892   002E5A  0103               	movlb	3	; () banked
  1893   002E5C  19DB               	xorwf	main@color& (0+255),w,b
  1894   002E5E  B4D8               	btfsc	status,2,c
  1895   002E60  EF34  F017         	goto	u5331
  1896   002E64  EF36  F017         	goto	u5330
  1897   002E68                     u5331:
  1898   002E68  EF3F  F017         	goto	l102
  1899   002E6C                     u5330:
  1900   002E6C                     
  1901                           ; BSR set to: 3
  1902   002E6C  0E09               	movlw	9
  1903   002E6E  19DB               	xorwf	main@color& (0+255),w,b
  1904   002E70  A4D8               	btfss	status,2,c
  1905   002E72  EF3D  F017         	goto	u5341
  1906   002E76  EF3F  F017         	goto	u5340
  1907   002E7A                     u5341:
  1908   002E7A  EFFE  F015         	goto	l5870
  1909   002E7E                     u5340:
  1910   002E7E                     l102:
  1911   002E7E  EF49  F000         	goto	start
  1912   002E82                     __end_of_main:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function _wallAdjust *****************
  1916 ;; Defined at:
  1917 ;;		line 501 in file "dc_motor.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  1920 ;;		 -> main@motorL(10), 
  1921 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  1922 ;;		 -> main@motorR(10), 
  1923 ;;  straightSpee    1   30[COMRAM] unsigned char 
  1924 ;;  straightRamp    1   31[COMRAM] unsigned char 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  cur_power       2   39[COMRAM] int 
  1927 ;;  i               2   37[COMRAM] int 
  1928 ;;  wallReverseD    1   36[COMRAM] unsigned char 
  1929 ;;  adjustDurati    1   35[COMRAM] unsigned char 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1939 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1940 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1941 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1942 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1943 ;;Total ram usage:       15 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 7
  1946 ;; This function calls:
  1947 ;;		_setMotorPWM
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text1
  1954   00335E                     __ptext1:
  1955                           	callstack 0
  1956   00335E                     _wallAdjust:
  1957                           	callstack 23
  1958   00335E                     
  1959                           ;dc_motor.c: 501: void wallAdjust(DC_motor *mL, DC_motor *mR, char straightSpeed, unsign
      +                          ed char straightRamp);dc_motor.c: 502: {;dc_motor.c: 503:     unsigned char adjustDurati
      +                          on = 100;
  1960   00335E  0E64               	movlw	100
  1961   003360  6E24               	movwf	wallAdjust@adjustDuration^0,c
  1962                           
  1963                           ;dc_motor.c: 504:     unsigned char wallReverseDuration = 20;
  1964   003362  0E14               	movlw	20
  1965   003364  6E25               	movwf	wallAdjust@wallReverseDuration^0,c
  1966   003366                     
  1967                           ;dc_motor.c: 506:     mL->direction = 1;
  1968   003366  EE20 F001          	lfsr	2,1
  1969   00336A  501B               	movf	wallAdjust@mL^0,w,c
  1970   00336C  26D9               	addwf	fsr2l,f,c
  1971   00336E  501C               	movf	(wallAdjust@mL+1)^0,w,c
  1972   003370  22DA               	addwfc	fsr2h,f,c
  1973   003372  0E01               	movlw	1
  1974   003374  6EDF               	movwf	indf2,c
  1975   003376                     
  1976                           ;dc_motor.c: 507:     mR->direction = 1;
  1977   003376  EE20 F001          	lfsr	2,1
  1978   00337A  501D               	movf	wallAdjust@mR^0,w,c
  1979   00337C  26D9               	addwf	fsr2l,f,c
  1980   00337E  501E               	movf	(wallAdjust@mR+1)^0,w,c
  1981   003380  22DA               	addwfc	fsr2h,f,c
  1982   003382  0E01               	movlw	1
  1983   003384  6EDF               	movwf	indf2,c
  1984                           
  1985                           ;dc_motor.c: 508:     int i;;dc_motor.c: 509:     int cur_power;;dc_motor.c: 510:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  1986   003386  0E00               	movlw	0
  1987   003388  6E29               	movwf	(wallAdjust@cur_power+1)^0,c
  1988   00338A  0E01               	movlw	1
  1989   00338C  6E28               	movwf	wallAdjust@cur_power^0,c
  1990   00338E  EF12  F01A         	goto	l5466
  1991   003392                     l5452:
  1992                           
  1993                           ;dc_motor.c: 511:         mL->power = cur_power+mL->compensation;
  1994   003392  EE20 F009          	lfsr	2,9
  1995   003396  501B               	movf	wallAdjust@mL^0,w,c
  1996   003398  26D9               	addwf	fsr2l,f,c
  1997   00339A  501C               	movf	(wallAdjust@mL+1)^0,w,c
  1998   00339C  22DA               	addwfc	fsr2h,f,c
  1999   00339E  50DF               	movf	indf2,w,c
  2000   0033A0  2428               	addwf	wallAdjust@cur_power^0,w,c
  2001   0033A2  C01B  FFD9         	movff	wallAdjust@mL,fsr2l
  2002   0033A6  C01C  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2003   0033AA  6EDF               	movwf	indf2,c
  2004                           
  2005                           ;dc_motor.c: 512:         mR->power = cur_power+mR->compensation;
  2006   0033AC  EE20 F009          	lfsr	2,9
  2007   0033B0  501D               	movf	wallAdjust@mR^0,w,c
  2008   0033B2  26D9               	addwf	fsr2l,f,c
  2009   0033B4  501E               	movf	(wallAdjust@mR+1)^0,w,c
  2010   0033B6  22DA               	addwfc	fsr2h,f,c
  2011   0033B8  50DF               	movf	indf2,w,c
  2012   0033BA  2428               	addwf	wallAdjust@cur_power^0,w,c
  2013   0033BC  C01D  FFD9         	movff	wallAdjust@mR,fsr2l
  2014   0033C0  C01E  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2015   0033C4  6EDF               	movwf	indf2,c
  2016   0033C6                     
  2017                           ;dc_motor.c: 513:         setMotorPWM(mL);
  2018   0033C6  C01B  F015         	movff	wallAdjust@mL,setMotorPWM@m
  2019   0033CA  C01C  F016         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2020   0033CE  ECC4  F022         	call	_setMotorPWM	;wreg free
  2021   0033D2                     
  2022                           ;dc_motor.c: 514:         setMotorPWM(mR);
  2023   0033D2  C01D  F015         	movff	wallAdjust@mR,setMotorPWM@m
  2024   0033D6  C01E  F016         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2025   0033DA  ECC4  F022         	call	_setMotorPWM	;wreg free
  2026   0033DE                     
  2027                           ;dc_motor.c: 515:         for (i=0;i<straightRamp;i++) {
  2028   0033DE  0E00               	movlw	0
  2029   0033E0  6E27               	movwf	(wallAdjust@i+1)^0,c
  2030   0033E2  0E00               	movlw	0
  2031   0033E4  6E26               	movwf	wallAdjust@i^0,c
  2032   0033E6  EFFE  F019         	goto	l687
  2033   0033EA                     l5460:
  2034                           
  2035                           ;dc_motor.c: 516:             _delay((unsigned long)((10)*(64000000/4000.0)));
  2036   0033EA  0ED0               	movlw	208
  2037   0033EC  6E21               	movwf	??_wallAdjust^0,c
  2038   0033EE  0ECA               	movlw	202
  2039   0033F0                     u5397:
  2040   0033F0  2EE8               	decfsz	wreg,f,c
  2041   0033F2  D7FE               	bra	u5397
  2042   0033F4  2E21               	decfsz	??_wallAdjust^0,f,c
  2043   0033F6  D7FC               	bra	u5397
  2044   0033F8                     
  2045                           ;dc_motor.c: 517:         }
  2046   0033F8  4A26               	infsnz	wallAdjust@i^0,f,c
  2047   0033FA  2A27               	incf	(wallAdjust@i+1)^0,f,c
  2048   0033FC                     l687:
  2049   0033FC  5020               	movf	wallAdjust@straightRamp^0,w,c
  2050   0033FE  6E21               	movwf	??_wallAdjust^0,c
  2051   003400  6A22               	clrf	(??_wallAdjust+1)^0,c
  2052   003402  5021               	movf	??_wallAdjust^0,w,c
  2053   003404  5C26               	subwf	wallAdjust@i^0,w,c
  2054   003406  5027               	movf	(wallAdjust@i+1)^0,w,c
  2055   003408  0A80               	xorlw	128
  2056   00340A  6E23               	movwf	(??_wallAdjust+2)^0,c
  2057   00340C  5022               	movf	(??_wallAdjust+1)^0,w,c
  2058   00340E  0A80               	xorlw	128
  2059   003410  5823               	subwfb	(??_wallAdjust+2)^0,w,c
  2060   003412  A0D8               	btfss	status,0,c
  2061   003414  EF0E  F01A         	goto	u4771
  2062   003418  EF10  F01A         	goto	u4770
  2063   00341C                     u4771:
  2064   00341C  EFF5  F019         	goto	l5460
  2065   003420                     u4770:
  2066   003420                     
  2067                           ;dc_motor.c: 518:     }
  2068   003420  4A28               	infsnz	wallAdjust@cur_power^0,f,c
  2069   003422  2A29               	incf	(wallAdjust@cur_power+1)^0,f,c
  2070   003424                     l5466:
  2071   003424  501F               	movf	wallAdjust@straightSpeed^0,w,c
  2072   003426  6E21               	movwf	??_wallAdjust^0,c
  2073   003428  6A22               	clrf	(??_wallAdjust+1)^0,c
  2074   00342A  5028               	movf	wallAdjust@cur_power^0,w,c
  2075   00342C  5C21               	subwf	??_wallAdjust^0,w,c
  2076   00342E  5022               	movf	(??_wallAdjust+1)^0,w,c
  2077   003430  0A80               	xorlw	128
  2078   003432  6E23               	movwf	(??_wallAdjust+2)^0,c
  2079   003434  5029               	movf	(wallAdjust@cur_power+1)^0,w,c
  2080   003436  0A80               	xorlw	128
  2081   003438  5823               	subwfb	(??_wallAdjust+2)^0,w,c
  2082   00343A  B0D8               	btfsc	status,0,c
  2083   00343C  EF22  F01A         	goto	u4781
  2084   003440  EF24  F01A         	goto	u4780
  2085   003444                     u4781:
  2086   003444  EFC9  F019         	goto	l5452
  2087   003448                     u4780:
  2088   003448                     
  2089                           ;dc_motor.c: 520:     for (i=0;i<adjustDuration;i++) {
  2090   003448  0E00               	movlw	0
  2091   00344A  6E27               	movwf	(wallAdjust@i+1)^0,c
  2092   00344C  0E00               	movlw	0
  2093   00344E  6E26               	movwf	wallAdjust@i^0,c
  2094   003450  EF33  F01A         	goto	l691
  2095   003454                     l5470:
  2096                           
  2097                           ;dc_motor.c: 521:             _delay((unsigned long)((10)*(64000000/4000.0)));
  2098   003454  0ED0               	movlw	208
  2099   003456  6E21               	movwf	??_wallAdjust^0,c
  2100   003458  0ECA               	movlw	202
  2101   00345A                     u5407:
  2102   00345A  2EE8               	decfsz	wreg,f,c
  2103   00345C  D7FE               	bra	u5407
  2104   00345E  2E21               	decfsz	??_wallAdjust^0,f,c
  2105   003460  D7FC               	bra	u5407
  2106   003462                     
  2107                           ;dc_motor.c: 522:         }
  2108   003462  4A26               	infsnz	wallAdjust@i^0,f,c
  2109   003464  2A27               	incf	(wallAdjust@i+1)^0,f,c
  2110   003466                     l691:
  2111   003466  5024               	movf	wallAdjust@adjustDuration^0,w,c
  2112   003468  6E21               	movwf	??_wallAdjust^0,c
  2113   00346A  6A22               	clrf	(??_wallAdjust+1)^0,c
  2114   00346C  5021               	movf	??_wallAdjust^0,w,c
  2115   00346E  5C26               	subwf	wallAdjust@i^0,w,c
  2116   003470  5027               	movf	(wallAdjust@i+1)^0,w,c
  2117   003472  0A80               	xorlw	128
  2118   003474  6E23               	movwf	(??_wallAdjust+2)^0,c
  2119   003476  5022               	movf	(??_wallAdjust+1)^0,w,c
  2120   003478  0A80               	xorlw	128
  2121   00347A  5823               	subwfb	(??_wallAdjust+2)^0,w,c
  2122   00347C  A0D8               	btfss	status,0,c
  2123   00347E  EF43  F01A         	goto	u4791
  2124   003482  EF45  F01A         	goto	u4790
  2125   003486                     u4791:
  2126   003486  EF2A  F01A         	goto	l5470
  2127   00348A                     u4790:
  2128   00348A                     
  2129                           ;dc_motor.c: 524:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  2130   00348A  C01F  F028         	movff	wallAdjust@straightSpeed,wallAdjust@cur_power
  2131   00348E  6A29               	clrf	(wallAdjust@cur_power+1)^0,c
  2132   003490                     l5474:
  2133   003490  BE29               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2134   003492  EF4F  F01A         	goto	u4800
  2135   003496  EF4D  F01A         	goto	u4801
  2136   00349A                     u4801:
  2137   00349A  EF51  F01A         	goto	l5478
  2138   00349E                     u4800:
  2139   00349E  EF9D  F01A         	goto	l5494
  2140   0034A2                     l5478:
  2141                           
  2142                           ;dc_motor.c: 525:         mL->power = cur_power+mL->compensation;
  2143   0034A2  EE20 F009          	lfsr	2,9
  2144   0034A6  501B               	movf	wallAdjust@mL^0,w,c
  2145   0034A8  26D9               	addwf	fsr2l,f,c
  2146   0034AA  501C               	movf	(wallAdjust@mL+1)^0,w,c
  2147   0034AC  22DA               	addwfc	fsr2h,f,c
  2148   0034AE  50DF               	movf	indf2,w,c
  2149   0034B0  2428               	addwf	wallAdjust@cur_power^0,w,c
  2150   0034B2  C01B  FFD9         	movff	wallAdjust@mL,fsr2l
  2151   0034B6  C01C  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2152   0034BA  6EDF               	movwf	indf2,c
  2153                           
  2154                           ;dc_motor.c: 526:         mR->power = cur_power+mR->compensation;
  2155   0034BC  EE20 F009          	lfsr	2,9
  2156   0034C0  501D               	movf	wallAdjust@mR^0,w,c
  2157   0034C2  26D9               	addwf	fsr2l,f,c
  2158   0034C4  501E               	movf	(wallAdjust@mR+1)^0,w,c
  2159   0034C6  22DA               	addwfc	fsr2h,f,c
  2160   0034C8  50DF               	movf	indf2,w,c
  2161   0034CA  2428               	addwf	wallAdjust@cur_power^0,w,c
  2162   0034CC  C01D  FFD9         	movff	wallAdjust@mR,fsr2l
  2163   0034D0  C01E  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2164   0034D4  6EDF               	movwf	indf2,c
  2165   0034D6                     
  2166                           ;dc_motor.c: 527:         setMotorPWM(mL);
  2167   0034D6  C01B  F015         	movff	wallAdjust@mL,setMotorPWM@m
  2168   0034DA  C01C  F016         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2169   0034DE  ECC4  F022         	call	_setMotorPWM	;wreg free
  2170   0034E2                     
  2171                           ;dc_motor.c: 528:         setMotorPWM(mR);
  2172   0034E2  C01D  F015         	movff	wallAdjust@mR,setMotorPWM@m
  2173   0034E6  C01E  F016         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2174   0034EA  ECC4  F022         	call	_setMotorPWM	;wreg free
  2175   0034EE                     
  2176                           ;dc_motor.c: 529:         for (i=0;i<straightRamp;i++) {
  2177   0034EE  0E00               	movlw	0
  2178   0034F0  6E27               	movwf	(wallAdjust@i+1)^0,c
  2179   0034F2  0E00               	movlw	0
  2180   0034F4  6E26               	movwf	wallAdjust@i^0,c
  2181   0034F6  EF86  F01A         	goto	l696
  2182   0034FA                     l5486:
  2183                           
  2184                           ;dc_motor.c: 530:             _delay((unsigned long)((10)*(64000000/4000.0)));
  2185   0034FA  0ED0               	movlw	208
  2186   0034FC  6E21               	movwf	??_wallAdjust^0,c
  2187   0034FE  0ECA               	movlw	202
  2188   003500                     u5417:
  2189   003500  2EE8               	decfsz	wreg,f,c
  2190   003502  D7FE               	bra	u5417
  2191   003504  2E21               	decfsz	??_wallAdjust^0,f,c
  2192   003506  D7FC               	bra	u5417
  2193   003508                     
  2194                           ;dc_motor.c: 531:         }
  2195   003508  4A26               	infsnz	wallAdjust@i^0,f,c
  2196   00350A  2A27               	incf	(wallAdjust@i+1)^0,f,c
  2197   00350C                     l696:
  2198   00350C  5020               	movf	wallAdjust@straightRamp^0,w,c
  2199   00350E  6E21               	movwf	??_wallAdjust^0,c
  2200   003510  6A22               	clrf	(??_wallAdjust+1)^0,c
  2201   003512  5021               	movf	??_wallAdjust^0,w,c
  2202   003514  5C26               	subwf	wallAdjust@i^0,w,c
  2203   003516  5027               	movf	(wallAdjust@i+1)^0,w,c
  2204   003518  0A80               	xorlw	128
  2205   00351A  6E23               	movwf	(??_wallAdjust+2)^0,c
  2206   00351C  5022               	movf	(??_wallAdjust+1)^0,w,c
  2207   00351E  0A80               	xorlw	128
  2208   003520  5823               	subwfb	(??_wallAdjust+2)^0,w,c
  2209   003522  A0D8               	btfss	status,0,c
  2210   003524  EF96  F01A         	goto	u4811
  2211   003528  EF98  F01A         	goto	u4810
  2212   00352C                     u4811:
  2213   00352C  EF7D  F01A         	goto	l5486
  2214   003530                     u4810:
  2215   003530                     
  2216                           ;dc_motor.c: 532:     }
  2217   003530  0628               	decf	wallAdjust@cur_power^0,f,c
  2218   003532  A0D8               	btfss	status,0,c
  2219   003534  0629               	decf	(wallAdjust@cur_power+1)^0,f,c
  2220   003536  EF48  F01A         	goto	l5474
  2221   00353A                     l5494:
  2222                           
  2223                           ;dc_motor.c: 534:     mL->direction = 0;
  2224   00353A  EE20 F001          	lfsr	2,1
  2225   00353E  501B               	movf	wallAdjust@mL^0,w,c
  2226   003540  26D9               	addwf	fsr2l,f,c
  2227   003542  501C               	movf	(wallAdjust@mL+1)^0,w,c
  2228   003544  22DA               	addwfc	fsr2h,f,c
  2229   003546  6ADF               	clrf	indf2,c
  2230                           
  2231                           ;dc_motor.c: 535:     mR->direction = 0;
  2232   003548  EE20 F001          	lfsr	2,1
  2233   00354C  501D               	movf	wallAdjust@mR^0,w,c
  2234   00354E  26D9               	addwf	fsr2l,f,c
  2235   003550  501E               	movf	(wallAdjust@mR+1)^0,w,c
  2236   003552  22DA               	addwfc	fsr2h,f,c
  2237   003554  6ADF               	clrf	indf2,c
  2238   003556                     
  2239                           ;dc_motor.c: 536:     for (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  2240   003556  0E00               	movlw	0
  2241   003558  6E29               	movwf	(wallAdjust@cur_power+1)^0,c
  2242   00355A  0E01               	movlw	1
  2243   00355C  6E28               	movwf	wallAdjust@cur_power^0,c
  2244   00355E  EFFA  F01A         	goto	l5512
  2245   003562                     l5498:
  2246                           
  2247                           ;dc_motor.c: 537:         mL->power = cur_power+mL->compensation;
  2248   003562  EE20 F009          	lfsr	2,9
  2249   003566  501B               	movf	wallAdjust@mL^0,w,c
  2250   003568  26D9               	addwf	fsr2l,f,c
  2251   00356A  501C               	movf	(wallAdjust@mL+1)^0,w,c
  2252   00356C  22DA               	addwfc	fsr2h,f,c
  2253   00356E  50DF               	movf	indf2,w,c
  2254   003570  2428               	addwf	wallAdjust@cur_power^0,w,c
  2255   003572  C01B  FFD9         	movff	wallAdjust@mL,fsr2l
  2256   003576  C01C  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2257   00357A  6EDF               	movwf	indf2,c
  2258                           
  2259                           ;dc_motor.c: 538:         mR->power = cur_power+mR->compensation;
  2260   00357C  EE20 F009          	lfsr	2,9
  2261   003580  501D               	movf	wallAdjust@mR^0,w,c
  2262   003582  26D9               	addwf	fsr2l,f,c
  2263   003584  501E               	movf	(wallAdjust@mR+1)^0,w,c
  2264   003586  22DA               	addwfc	fsr2h,f,c
  2265   003588  50DF               	movf	indf2,w,c
  2266   00358A  2428               	addwf	wallAdjust@cur_power^0,w,c
  2267   00358C  C01D  FFD9         	movff	wallAdjust@mR,fsr2l
  2268   003590  C01E  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2269   003594  6EDF               	movwf	indf2,c
  2270   003596                     
  2271                           ;dc_motor.c: 539:         setMotorPWM(mL);
  2272   003596  C01B  F015         	movff	wallAdjust@mL,setMotorPWM@m
  2273   00359A  C01C  F016         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2274   00359E  ECC4  F022         	call	_setMotorPWM	;wreg free
  2275   0035A2                     
  2276                           ;dc_motor.c: 540:         setMotorPWM(mR);
  2277   0035A2  C01D  F015         	movff	wallAdjust@mR,setMotorPWM@m
  2278   0035A6  C01E  F016         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2279   0035AA  ECC4  F022         	call	_setMotorPWM	;wreg free
  2280   0035AE                     
  2281                           ;dc_motor.c: 541:         for (i=0;i<straightRamp;i++) {
  2282   0035AE  0E00               	movlw	0
  2283   0035B0  6E27               	movwf	(wallAdjust@i+1)^0,c
  2284   0035B2  0E00               	movlw	0
  2285   0035B4  6E26               	movwf	wallAdjust@i^0,c
  2286   0035B6  EFE6  F01A         	goto	l701
  2287   0035BA                     l5506:
  2288                           
  2289                           ;dc_motor.c: 542:             _delay((unsigned long)((10)*(64000000/4000.0)));
  2290   0035BA  0ED0               	movlw	208
  2291   0035BC  6E21               	movwf	??_wallAdjust^0,c
  2292   0035BE  0ECA               	movlw	202
  2293   0035C0                     u5427:
  2294   0035C0  2EE8               	decfsz	wreg,f,c
  2295   0035C2  D7FE               	bra	u5427
  2296   0035C4  2E21               	decfsz	??_wallAdjust^0,f,c
  2297   0035C6  D7FC               	bra	u5427
  2298   0035C8                     
  2299                           ;dc_motor.c: 543:         }
  2300   0035C8  4A26               	infsnz	wallAdjust@i^0,f,c
  2301   0035CA  2A27               	incf	(wallAdjust@i+1)^0,f,c
  2302   0035CC                     l701:
  2303   0035CC  5020               	movf	wallAdjust@straightRamp^0,w,c
  2304   0035CE  6E21               	movwf	??_wallAdjust^0,c
  2305   0035D0  6A22               	clrf	(??_wallAdjust+1)^0,c
  2306   0035D2  5021               	movf	??_wallAdjust^0,w,c
  2307   0035D4  5C26               	subwf	wallAdjust@i^0,w,c
  2308   0035D6  5027               	movf	(wallAdjust@i+1)^0,w,c
  2309   0035D8  0A80               	xorlw	128
  2310   0035DA  6E23               	movwf	(??_wallAdjust+2)^0,c
  2311   0035DC  5022               	movf	(??_wallAdjust+1)^0,w,c
  2312   0035DE  0A80               	xorlw	128
  2313   0035E0  5823               	subwfb	(??_wallAdjust+2)^0,w,c
  2314   0035E2  A0D8               	btfss	status,0,c
  2315   0035E4  EFF6  F01A         	goto	u4821
  2316   0035E8  EFF8  F01A         	goto	u4820
  2317   0035EC                     u4821:
  2318   0035EC  EFDD  F01A         	goto	l5506
  2319   0035F0                     u4820:
  2320   0035F0                     
  2321                           ;dc_motor.c: 544:     }
  2322   0035F0  4A28               	infsnz	wallAdjust@cur_power^0,f,c
  2323   0035F2  2A29               	incf	(wallAdjust@cur_power+1)^0,f,c
  2324   0035F4                     l5512:
  2325   0035F4  501F               	movf	wallAdjust@straightSpeed^0,w,c
  2326   0035F6  6E21               	movwf	??_wallAdjust^0,c
  2327   0035F8  6A22               	clrf	(??_wallAdjust+1)^0,c
  2328   0035FA  5028               	movf	wallAdjust@cur_power^0,w,c
  2329   0035FC  5C21               	subwf	??_wallAdjust^0,w,c
  2330   0035FE  5022               	movf	(??_wallAdjust+1)^0,w,c
  2331   003600  0A80               	xorlw	128
  2332   003602  6E23               	movwf	(??_wallAdjust+2)^0,c
  2333   003604  5029               	movf	(wallAdjust@cur_power+1)^0,w,c
  2334   003606  0A80               	xorlw	128
  2335   003608  5823               	subwfb	(??_wallAdjust+2)^0,w,c
  2336   00360A  B0D8               	btfsc	status,0,c
  2337   00360C  EF0A  F01B         	goto	u4831
  2338   003610  EF0C  F01B         	goto	u4830
  2339   003614                     u4831:
  2340   003614  EFB1  F01A         	goto	l5498
  2341   003618                     u4830:
  2342   003618                     
  2343                           ;dc_motor.c: 546:     for (i=0;i<wallReverseDuration;i++) {
  2344   003618  0E00               	movlw	0
  2345   00361A  6E27               	movwf	(wallAdjust@i+1)^0,c
  2346   00361C  0E00               	movlw	0
  2347   00361E  6E26               	movwf	wallAdjust@i^0,c
  2348   003620  EF1B  F01B         	goto	l705
  2349   003624                     l5516:
  2350                           
  2351                           ;dc_motor.c: 547:             _delay((unsigned long)((10)*(64000000/4000.0)));
  2352   003624  0ED0               	movlw	208
  2353   003626  6E21               	movwf	??_wallAdjust^0,c
  2354   003628  0ECA               	movlw	202
  2355   00362A                     u5437:
  2356   00362A  2EE8               	decfsz	wreg,f,c
  2357   00362C  D7FE               	bra	u5437
  2358   00362E  2E21               	decfsz	??_wallAdjust^0,f,c
  2359   003630  D7FC               	bra	u5437
  2360   003632                     
  2361                           ;dc_motor.c: 548:         }
  2362   003632  4A26               	infsnz	wallAdjust@i^0,f,c
  2363   003634  2A27               	incf	(wallAdjust@i+1)^0,f,c
  2364   003636                     l705:
  2365   003636  5025               	movf	wallAdjust@wallReverseDuration^0,w,c
  2366   003638  6E21               	movwf	??_wallAdjust^0,c
  2367   00363A  6A22               	clrf	(??_wallAdjust+1)^0,c
  2368   00363C  5021               	movf	??_wallAdjust^0,w,c
  2369   00363E  5C26               	subwf	wallAdjust@i^0,w,c
  2370   003640  5027               	movf	(wallAdjust@i+1)^0,w,c
  2371   003642  0A80               	xorlw	128
  2372   003644  6E23               	movwf	(??_wallAdjust+2)^0,c
  2373   003646  5022               	movf	(??_wallAdjust+1)^0,w,c
  2374   003648  0A80               	xorlw	128
  2375   00364A  5823               	subwfb	(??_wallAdjust+2)^0,w,c
  2376   00364C  A0D8               	btfss	status,0,c
  2377   00364E  EF2B  F01B         	goto	u4841
  2378   003652  EF2D  F01B         	goto	u4840
  2379   003656                     u4841:
  2380   003656  EF12  F01B         	goto	l5516
  2381   00365A                     u4840:
  2382   00365A                     
  2383                           ;dc_motor.c: 550:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  2384   00365A  C01F  F028         	movff	wallAdjust@straightSpeed,wallAdjust@cur_power
  2385   00365E  6A29               	clrf	(wallAdjust@cur_power+1)^0,c
  2386   003660                     l5520:
  2387   003660  BE29               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2388   003662  EF37  F01B         	goto	u4850
  2389   003666  EF35  F01B         	goto	u4851
  2390   00366A                     u4851:
  2391   00366A  EF39  F01B         	goto	l5524
  2392   00366E                     u4850:
  2393   00366E  EF85  F01B         	goto	l5540
  2394   003672                     l5524:
  2395                           
  2396                           ;dc_motor.c: 551:         mL->power = cur_power+mL->compensation;
  2397   003672  EE20 F009          	lfsr	2,9
  2398   003676  501B               	movf	wallAdjust@mL^0,w,c
  2399   003678  26D9               	addwf	fsr2l,f,c
  2400   00367A  501C               	movf	(wallAdjust@mL+1)^0,w,c
  2401   00367C  22DA               	addwfc	fsr2h,f,c
  2402   00367E  50DF               	movf	indf2,w,c
  2403   003680  2428               	addwf	wallAdjust@cur_power^0,w,c
  2404   003682  C01B  FFD9         	movff	wallAdjust@mL,fsr2l
  2405   003686  C01C  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2406   00368A  6EDF               	movwf	indf2,c
  2407                           
  2408                           ;dc_motor.c: 552:         mR->power = cur_power+mR->compensation;
  2409   00368C  EE20 F009          	lfsr	2,9
  2410   003690  501D               	movf	wallAdjust@mR^0,w,c
  2411   003692  26D9               	addwf	fsr2l,f,c
  2412   003694  501E               	movf	(wallAdjust@mR+1)^0,w,c
  2413   003696  22DA               	addwfc	fsr2h,f,c
  2414   003698  50DF               	movf	indf2,w,c
  2415   00369A  2428               	addwf	wallAdjust@cur_power^0,w,c
  2416   00369C  C01D  FFD9         	movff	wallAdjust@mR,fsr2l
  2417   0036A0  C01E  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2418   0036A4  6EDF               	movwf	indf2,c
  2419   0036A6                     
  2420                           ;dc_motor.c: 553:         setMotorPWM(mL);
  2421   0036A6  C01B  F015         	movff	wallAdjust@mL,setMotorPWM@m
  2422   0036AA  C01C  F016         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2423   0036AE  ECC4  F022         	call	_setMotorPWM	;wreg free
  2424   0036B2                     
  2425                           ;dc_motor.c: 554:         setMotorPWM(mR);
  2426   0036B2  C01D  F015         	movff	wallAdjust@mR,setMotorPWM@m
  2427   0036B6  C01E  F016         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2428   0036BA  ECC4  F022         	call	_setMotorPWM	;wreg free
  2429   0036BE                     
  2430                           ;dc_motor.c: 555:         for (i=0;i<straightRamp;i++) {
  2431   0036BE  0E00               	movlw	0
  2432   0036C0  6E27               	movwf	(wallAdjust@i+1)^0,c
  2433   0036C2  0E00               	movlw	0
  2434   0036C4  6E26               	movwf	wallAdjust@i^0,c
  2435   0036C6  EF6E  F01B         	goto	l710
  2436   0036CA                     l5532:
  2437                           
  2438                           ;dc_motor.c: 556:             _delay((unsigned long)((10)*(64000000/4000.0)));
  2439   0036CA  0ED0               	movlw	208
  2440   0036CC  6E21               	movwf	??_wallAdjust^0,c
  2441   0036CE  0ECA               	movlw	202
  2442   0036D0                     u5447:
  2443   0036D0  2EE8               	decfsz	wreg,f,c
  2444   0036D2  D7FE               	bra	u5447
  2445   0036D4  2E21               	decfsz	??_wallAdjust^0,f,c
  2446   0036D6  D7FC               	bra	u5447
  2447   0036D8                     
  2448                           ;dc_motor.c: 557:         }
  2449   0036D8  4A26               	infsnz	wallAdjust@i^0,f,c
  2450   0036DA  2A27               	incf	(wallAdjust@i+1)^0,f,c
  2451   0036DC                     l710:
  2452   0036DC  5020               	movf	wallAdjust@straightRamp^0,w,c
  2453   0036DE  6E21               	movwf	??_wallAdjust^0,c
  2454   0036E0  6A22               	clrf	(??_wallAdjust+1)^0,c
  2455   0036E2  5021               	movf	??_wallAdjust^0,w,c
  2456   0036E4  5C26               	subwf	wallAdjust@i^0,w,c
  2457   0036E6  5027               	movf	(wallAdjust@i+1)^0,w,c
  2458   0036E8  0A80               	xorlw	128
  2459   0036EA  6E23               	movwf	(??_wallAdjust+2)^0,c
  2460   0036EC  5022               	movf	(??_wallAdjust+1)^0,w,c
  2461   0036EE  0A80               	xorlw	128
  2462   0036F0  5823               	subwfb	(??_wallAdjust+2)^0,w,c
  2463   0036F2  A0D8               	btfss	status,0,c
  2464   0036F4  EF7E  F01B         	goto	u4861
  2465   0036F8  EF80  F01B         	goto	u4860
  2466   0036FC                     u4861:
  2467   0036FC  EF65  F01B         	goto	l5532
  2468   003700                     u4860:
  2469   003700                     
  2470                           ;dc_motor.c: 558:     }
  2471   003700  0628               	decf	wallAdjust@cur_power^0,f,c
  2472   003702  A0D8               	btfss	status,0,c
  2473   003704  0629               	decf	(wallAdjust@cur_power+1)^0,f,c
  2474   003706  EF30  F01B         	goto	l5520
  2475   00370A                     l5540:
  2476                           
  2477                           ;dc_motor.c: 559:     mL->power = 0;
  2478   00370A  C01B  FFD9         	movff	wallAdjust@mL,fsr2l
  2479   00370E  C01C  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2480   003712  6ADF               	clrf	indf2,c
  2481                           
  2482                           ;dc_motor.c: 560:     mR->power = 0;
  2483   003714  C01D  FFD9         	movff	wallAdjust@mR,fsr2l
  2484   003718  C01E  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2485   00371C  6ADF               	clrf	indf2,c
  2486   00371E  0012               	return		;funcret
  2487   003720                     __end_of_wallAdjust:
  2488                           	callstack 0
  2489                           
  2490 ;; *************** function _move *****************
  2491 ;; Defined at:
  2492 ;;		line 91 in file "dc_motor.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  2495 ;;		 -> main@motorL(10), 
  2496 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  2497 ;;		 -> main@motorR(10), 
  2498 ;;  color           1    4[BANK0 ] unsigned char 
  2499 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  2500 ;;		 -> main@moveSequence(40), 
  2501 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  2502 ;;		 -> main@straightTime(82), 
  2503 ;;  curMove         1    9[BANK0 ] unsigned char 
  2504 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  2505 ;;  reverseDurat    1   11[BANK0 ] unsigned char 
  2506 ;;  straightRamp    1   12[BANK0 ] unsigned char 
  2507 ;;  turnSpeed       1   13[BANK0 ] unsigned char 
  2508 ;;  turnDuration    1   14[BANK0 ] unsigned char 
  2509 ;;  turnRamp        1   15[BANK0 ] unsigned char 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2521 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;Total ram usage:       18 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; Hardware stack levels required when called: 9
  2528 ;; This function calls:
  2529 ;;		_fullSpeedAhead
  2530 ;;		_returnHome
  2531 ;;		_reverseOneSquare
  2532 ;;		_reverseShort
  2533 ;;		_turnLeft
  2534 ;;		_turnRight
  2535 ;; This function is called by:
  2536 ;;		_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text2
  2541   000E02                     __ptext2:
  2542                           	callstack 0
  2543   000E02                     _move:
  2544                           	callstack 21
  2545   000E02                     
  2546                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reve
      +                          rseDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, uns
      +                          igned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  2547   000E02  0100               	movlb	0	; () banked
  2548   000E04  05DC               	decf	move@color& (0+255),w,b
  2549   000E06  A4D8               	btfss	status,2,c
  2550   000E08  EF08  F007         	goto	u4871
  2551   000E0C  EF0A  F007         	goto	u4870
  2552   000E10                     u4871:
  2553   000E10  EF6C  F007         	goto	l5554
  2554   000E14                     u4870:
  2555   000E14                     
  2556                           ; BSR set to: 0
  2557                           ;dc_motor.c: 94:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2558   000E14  C0D8  F01B         	movff	move@mL,reverseShort@mL
  2559   000E18  C0D9  F01C         	movff	move@mL+1,reverseShort@mL+1
  2560   000E1C  C0DA  F01D         	movff	move@mR,reverseShort@mR
  2561   000E20  C0DB  F01E         	movff	move@mR+1,reverseShort@mR+1
  2562   000E24  C0E2  F01F         	movff	move@straightSpeed,reverseShort@straightSpeed
  2563   000E28  C0E4  F020         	movff	move@straightRamp,reverseShort@straightRamp
  2564   000E2C  EC08  F01F         	call	_reverseShort	;wreg free
  2565   000E30                     
  2566                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2567   000E30  0E05               	movlw	5
  2568   000E32  6E3E               	movwf	(??_move+1)^0,c
  2569   000E34  0E0F               	movlw	15
  2570   000E36  6E3D               	movwf	??_move^0,c
  2571   000E38  0EF1               	movlw	241
  2572   000E3A                     u5457:
  2573   000E3A  2EE8               	decfsz	wreg,f,c
  2574   000E3C  D7FE               	bra	u5457
  2575   000E3E  2E3D               	decfsz	??_move^0,f,c
  2576   000E40  D7FC               	bra	u5457
  2577   000E42  2E3E               	decfsz	(??_move+1)^0,f,c
  2578   000E44  D7FA               	bra	u5457
  2579   000E46  0000               	nop	
  2580   000E48                     
  2581                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2582   000E48  C0D8  F01B         	movff	move@mL,turnRight@mL
  2583   000E4C  C0D9  F01C         	movff	move@mL+1,turnRight@mL+1
  2584   000E50  C0DA  F01D         	movff	move@mR,turnRight@mR
  2585   000E54  C0DB  F01E         	movff	move@mR+1,turnRight@mR+1
  2586   000E58  C0E5  F01F         	movff	move@turnSpeed,turnRight@turnSpeed
  2587   000E5C  C0E6  F020         	movff	move@turnDuration,turnRight@turnDuration
  2588   000E60  C0E7  F021         	movff	move@turnRamp,turnRight@turnRamp
  2589   000E64  ECF0  F020         	call	_turnRight	;wreg free
  2590                           
  2591                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2592   000E68  0E05               	movlw	5
  2593   000E6A  6E3E               	movwf	(??_move+1)^0,c
  2594   000E6C  0E0F               	movlw	15
  2595   000E6E  6E3D               	movwf	??_move^0,c
  2596   000E70  0EF1               	movlw	241
  2597   000E72                     u5467:
  2598   000E72  2EE8               	decfsz	wreg,f,c
  2599   000E74  D7FE               	bra	u5467
  2600   000E76  2E3D               	decfsz	??_move^0,f,c
  2601   000E78  D7FC               	bra	u5467
  2602   000E7A  2E3E               	decfsz	(??_move+1)^0,f,c
  2603   000E7C  D7FA               	bra	u5467
  2604   000E7E  0000               	nop	
  2605   000E80                     
  2606                           ;dc_motor.c: 98:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2607   000E80  C0D8  F01B         	movff	move@mL,turnRight@mL
  2608   000E84  C0D9  F01C         	movff	move@mL+1,turnRight@mL+1
  2609   000E88  C0DA  F01D         	movff	move@mR,turnRight@mR
  2610   000E8C  C0DB  F01E         	movff	move@mR+1,turnRight@mR+1
  2611   000E90  C0E5  F01F         	movff	move@turnSpeed,turnRight@turnSpeed
  2612   000E94  C0E6  F020         	movff	move@turnDuration,turnRight@turnDuration
  2613   000E98  C0E7  F021         	movff	move@turnRamp,turnRight@turnRamp
  2614   000E9C  ECF0  F020         	call	_turnRight	;wreg free
  2615   000EA0                     
  2616                           ;dc_motor.c: 99:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2617   000EA0  0E05               	movlw	5
  2618   000EA2  6E3E               	movwf	(??_move+1)^0,c
  2619   000EA4  0E0F               	movlw	15
  2620   000EA6  6E3D               	movwf	??_move^0,c
  2621   000EA8  0EF1               	movlw	241
  2622   000EAA                     u5477:
  2623   000EAA  2EE8               	decfsz	wreg,f,c
  2624   000EAC  D7FE               	bra	u5477
  2625   000EAE  2E3D               	decfsz	??_move^0,f,c
  2626   000EB0  D7FC               	bra	u5477
  2627   000EB2  2E3E               	decfsz	(??_move+1)^0,f,c
  2628   000EB4  D7FA               	bra	u5477
  2629   000EB6  0000               	nop	
  2630                           
  2631                           ;dc_motor.c: 100:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2632   000EB8  C0D8  F01B         	movff	move@mL,fullSpeedAhead@mL
  2633   000EBC  C0D9  F01C         	movff	move@mL+1,fullSpeedAhead@mL+1
  2634   000EC0  C0DA  F01D         	movff	move@mR,fullSpeedAhead@mR
  2635   000EC4  C0DB  F01E         	movff	move@mR+1,fullSpeedAhead@mR+1
  2636   000EC8  C0E2  F01F         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2637   000ECC  C0E4  F020         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2638   000ED0  EC84  F024         	call	_fullSpeedAhead	;wreg free
  2639                           
  2640                           ;dc_motor.c: 101:     }
  2641   000ED4  EF15  F00B         	goto	l564
  2642   000ED8                     l5554:
  2643                           
  2644                           ; BSR set to: 0
  2645   000ED8  0E02               	movlw	2
  2646   000EDA  19DC               	xorwf	move@color& (0+255),w,b
  2647   000EDC  A4D8               	btfss	status,2,c
  2648   000EDE  EF73  F007         	goto	u4881
  2649   000EE2  EF75  F007         	goto	u4880
  2650   000EE6                     u4881:
  2651   000EE6  EFD7  F007         	goto	l5566
  2652   000EEA                     u4880:
  2653   000EEA                     
  2654                           ; BSR set to: 0
  2655                           ;dc_motor.c: 104:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2656   000EEA  C0D8  F01B         	movff	move@mL,reverseShort@mL
  2657   000EEE  C0D9  F01C         	movff	move@mL+1,reverseShort@mL+1
  2658   000EF2  C0DA  F01D         	movff	move@mR,reverseShort@mR
  2659   000EF6  C0DB  F01E         	movff	move@mR+1,reverseShort@mR+1
  2660   000EFA  C0E2  F01F         	movff	move@straightSpeed,reverseShort@straightSpeed
  2661   000EFE  C0E4  F020         	movff	move@straightRamp,reverseShort@straightRamp
  2662   000F02  EC08  F01F         	call	_reverseShort	;wreg free
  2663   000F06                     
  2664                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2665   000F06  0E05               	movlw	5
  2666   000F08  6E3E               	movwf	(??_move+1)^0,c
  2667   000F0A  0E0F               	movlw	15
  2668   000F0C  6E3D               	movwf	??_move^0,c
  2669   000F0E  0EF1               	movlw	241
  2670   000F10                     u5487:
  2671   000F10  2EE8               	decfsz	wreg,f,c
  2672   000F12  D7FE               	bra	u5487
  2673   000F14  2E3D               	decfsz	??_move^0,f,c
  2674   000F16  D7FC               	bra	u5487
  2675   000F18  2E3E               	decfsz	(??_move+1)^0,f,c
  2676   000F1A  D7FA               	bra	u5487
  2677   000F1C  0000               	nop	
  2678   000F1E                     
  2679                           ;dc_motor.c: 106:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2680   000F1E  C0D8  F01B         	movff	move@mL,turnLeft@mL
  2681   000F22  C0D9  F01C         	movff	move@mL+1,turnLeft@mL+1
  2682   000F26  C0DA  F01D         	movff	move@mR,turnLeft@mR
  2683   000F2A  C0DB  F01E         	movff	move@mR+1,turnLeft@mR+1
  2684   000F2E  C0E5  F01F         	movff	move@turnSpeed,turnLeft@turnSpeed
  2685   000F32  C0E6  F020         	movff	move@turnDuration,turnLeft@turnDuration
  2686   000F36  C0E7  F021         	movff	move@turnRamp,turnLeft@turnRamp
  2687   000F3A  ECDA  F021         	call	_turnLeft	;wreg free
  2688                           
  2689                           ;dc_motor.c: 107:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2690   000F3E  0E05               	movlw	5
  2691   000F40  6E3E               	movwf	(??_move+1)^0,c
  2692   000F42  0E0F               	movlw	15
  2693   000F44  6E3D               	movwf	??_move^0,c
  2694   000F46  0EF1               	movlw	241
  2695   000F48                     u5497:
  2696   000F48  2EE8               	decfsz	wreg,f,c
  2697   000F4A  D7FE               	bra	u5497
  2698   000F4C  2E3D               	decfsz	??_move^0,f,c
  2699   000F4E  D7FC               	bra	u5497
  2700   000F50  2E3E               	decfsz	(??_move+1)^0,f,c
  2701   000F52  D7FA               	bra	u5497
  2702   000F54  0000               	nop	
  2703   000F56                     
  2704                           ;dc_motor.c: 108:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2705   000F56  C0D8  F01B         	movff	move@mL,turnLeft@mL
  2706   000F5A  C0D9  F01C         	movff	move@mL+1,turnLeft@mL+1
  2707   000F5E  C0DA  F01D         	movff	move@mR,turnLeft@mR
  2708   000F62  C0DB  F01E         	movff	move@mR+1,turnLeft@mR+1
  2709   000F66  C0E5  F01F         	movff	move@turnSpeed,turnLeft@turnSpeed
  2710   000F6A  C0E6  F020         	movff	move@turnDuration,turnLeft@turnDuration
  2711   000F6E  C0E7  F021         	movff	move@turnRamp,turnLeft@turnRamp
  2712   000F72  ECDA  F021         	call	_turnLeft	;wreg free
  2713   000F76                     
  2714                           ;dc_motor.c: 109:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2715   000F76  0E05               	movlw	5
  2716   000F78  6E3E               	movwf	(??_move+1)^0,c
  2717   000F7A  0E0F               	movlw	15
  2718   000F7C  6E3D               	movwf	??_move^0,c
  2719   000F7E  0EF1               	movlw	241
  2720   000F80                     u5507:
  2721   000F80  2EE8               	decfsz	wreg,f,c
  2722   000F82  D7FE               	bra	u5507
  2723   000F84  2E3D               	decfsz	??_move^0,f,c
  2724   000F86  D7FC               	bra	u5507
  2725   000F88  2E3E               	decfsz	(??_move+1)^0,f,c
  2726   000F8A  D7FA               	bra	u5507
  2727   000F8C  0000               	nop	
  2728                           
  2729                           ;dc_motor.c: 110:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2730   000F8E  C0D8  F01B         	movff	move@mL,fullSpeedAhead@mL
  2731   000F92  C0D9  F01C         	movff	move@mL+1,fullSpeedAhead@mL+1
  2732   000F96  C0DA  F01D         	movff	move@mR,fullSpeedAhead@mR
  2733   000F9A  C0DB  F01E         	movff	move@mR+1,fullSpeedAhead@mR+1
  2734   000F9E  C0E2  F01F         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2735   000FA2  C0E4  F020         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2736   000FA6  EC84  F024         	call	_fullSpeedAhead	;wreg free
  2737                           
  2738                           ;dc_motor.c: 111:     }
  2739   000FAA  EF15  F00B         	goto	l564
  2740   000FAE                     l5566:
  2741                           
  2742                           ; BSR set to: 0
  2743   000FAE  0E03               	movlw	3
  2744   000FB0  19DC               	xorwf	move@color& (0+255),w,b
  2745   000FB2  A4D8               	btfss	status,2,c
  2746   000FB4  EFDE  F007         	goto	u4891
  2747   000FB8  EFE0  F007         	goto	u4890
  2748   000FBC                     u4891:
  2749   000FBC  EF7A  F008         	goto	l5584
  2750   000FC0                     u4890:
  2751   000FC0                     
  2752                           ; BSR set to: 0
  2753                           ;dc_motor.c: 114:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2754   000FC0  C0D8  F01B         	movff	move@mL,reverseShort@mL
  2755   000FC4  C0D9  F01C         	movff	move@mL+1,reverseShort@mL+1
  2756   000FC8  C0DA  F01D         	movff	move@mR,reverseShort@mR
  2757   000FCC  C0DB  F01E         	movff	move@mR+1,reverseShort@mR+1
  2758   000FD0  C0E2  F01F         	movff	move@straightSpeed,reverseShort@straightSpeed
  2759   000FD4  C0E4  F020         	movff	move@straightRamp,reverseShort@straightRamp
  2760   000FD8  EC08  F01F         	call	_reverseShort	;wreg free
  2761   000FDC                     
  2762                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2763   000FDC  0E05               	movlw	5
  2764   000FDE  6E3E               	movwf	(??_move+1)^0,c
  2765   000FE0  0E0F               	movlw	15
  2766   000FE2  6E3D               	movwf	??_move^0,c
  2767   000FE4  0EF1               	movlw	241
  2768   000FE6                     u5517:
  2769   000FE6  2EE8               	decfsz	wreg,f,c
  2770   000FE8  D7FE               	bra	u5517
  2771   000FEA  2E3D               	decfsz	??_move^0,f,c
  2772   000FEC  D7FC               	bra	u5517
  2773   000FEE  2E3E               	decfsz	(??_move+1)^0,f,c
  2774   000FF0  D7FA               	bra	u5517
  2775   000FF2  0000               	nop	
  2776   000FF4                     
  2777                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2778   000FF4  C0D8  F01B         	movff	move@mL,turnLeft@mL
  2779   000FF8  C0D9  F01C         	movff	move@mL+1,turnLeft@mL+1
  2780   000FFC  C0DA  F01D         	movff	move@mR,turnLeft@mR
  2781   001000  C0DB  F01E         	movff	move@mR+1,turnLeft@mR+1
  2782   001004  C0E5  F01F         	movff	move@turnSpeed,turnLeft@turnSpeed
  2783   001008  C0E6  F020         	movff	move@turnDuration,turnLeft@turnDuration
  2784   00100C  C0E7  F021         	movff	move@turnRamp,turnLeft@turnRamp
  2785   001010  ECDA  F021         	call	_turnLeft	;wreg free
  2786                           
  2787                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2788   001014  0E05               	movlw	5
  2789   001016  6E3E               	movwf	(??_move+1)^0,c
  2790   001018  0E0F               	movlw	15
  2791   00101A  6E3D               	movwf	??_move^0,c
  2792   00101C  0EF1               	movlw	241
  2793   00101E                     u5527:
  2794   00101E  2EE8               	decfsz	wreg,f,c
  2795   001020  D7FE               	bra	u5527
  2796   001022  2E3D               	decfsz	??_move^0,f,c
  2797   001024  D7FC               	bra	u5527
  2798   001026  2E3E               	decfsz	(??_move+1)^0,f,c
  2799   001028  D7FA               	bra	u5527
  2800   00102A  0000               	nop	
  2801   00102C                     
  2802                           ;dc_motor.c: 118:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2803   00102C  C0D8  F01B         	movff	move@mL,turnLeft@mL
  2804   001030  C0D9  F01C         	movff	move@mL+1,turnLeft@mL+1
  2805   001034  C0DA  F01D         	movff	move@mR,turnLeft@mR
  2806   001038  C0DB  F01E         	movff	move@mR+1,turnLeft@mR+1
  2807   00103C  C0E5  F01F         	movff	move@turnSpeed,turnLeft@turnSpeed
  2808   001040  C0E6  F020         	movff	move@turnDuration,turnLeft@turnDuration
  2809   001044  C0E7  F021         	movff	move@turnRamp,turnLeft@turnRamp
  2810   001048  ECDA  F021         	call	_turnLeft	;wreg free
  2811   00104C                     
  2812                           ;dc_motor.c: 119:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2813   00104C  0E05               	movlw	5
  2814   00104E  6E3E               	movwf	(??_move+1)^0,c
  2815   001050  0E0F               	movlw	15
  2816   001052  6E3D               	movwf	??_move^0,c
  2817   001054  0EF1               	movlw	241
  2818   001056                     u5537:
  2819   001056  2EE8               	decfsz	wreg,f,c
  2820   001058  D7FE               	bra	u5537
  2821   00105A  2E3D               	decfsz	??_move^0,f,c
  2822   00105C  D7FC               	bra	u5537
  2823   00105E  2E3E               	decfsz	(??_move+1)^0,f,c
  2824   001060  D7FA               	bra	u5537
  2825   001062  0000               	nop	
  2826                           
  2827                           ;dc_motor.c: 120:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2828   001064  C0D8  F01B         	movff	move@mL,turnLeft@mL
  2829   001068  C0D9  F01C         	movff	move@mL+1,turnLeft@mL+1
  2830   00106C  C0DA  F01D         	movff	move@mR,turnLeft@mR
  2831   001070  C0DB  F01E         	movff	move@mR+1,turnLeft@mR+1
  2832   001074  C0E5  F01F         	movff	move@turnSpeed,turnLeft@turnSpeed
  2833   001078  C0E6  F020         	movff	move@turnDuration,turnLeft@turnDuration
  2834   00107C  C0E7  F021         	movff	move@turnRamp,turnLeft@turnRamp
  2835   001080  ECDA  F021         	call	_turnLeft	;wreg free
  2836   001084                     
  2837                           ;dc_motor.c: 121:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2838   001084  0E05               	movlw	5
  2839   001086  6E3E               	movwf	(??_move+1)^0,c
  2840   001088  0E0F               	movlw	15
  2841   00108A  6E3D               	movwf	??_move^0,c
  2842   00108C  0EF1               	movlw	241
  2843   00108E                     u5547:
  2844   00108E  2EE8               	decfsz	wreg,f,c
  2845   001090  D7FE               	bra	u5547
  2846   001092  2E3D               	decfsz	??_move^0,f,c
  2847   001094  D7FC               	bra	u5547
  2848   001096  2E3E               	decfsz	(??_move+1)^0,f,c
  2849   001098  D7FA               	bra	u5547
  2850   00109A  0000               	nop	
  2851   00109C                     
  2852                           ;dc_motor.c: 122:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2853   00109C  C0D8  F01B         	movff	move@mL,turnLeft@mL
  2854   0010A0  C0D9  F01C         	movff	move@mL+1,turnLeft@mL+1
  2855   0010A4  C0DA  F01D         	movff	move@mR,turnLeft@mR
  2856   0010A8  C0DB  F01E         	movff	move@mR+1,turnLeft@mR+1
  2857   0010AC  C0E5  F01F         	movff	move@turnSpeed,turnLeft@turnSpeed
  2858   0010B0  C0E6  F020         	movff	move@turnDuration,turnLeft@turnDuration
  2859   0010B4  C0E7  F021         	movff	move@turnRamp,turnLeft@turnRamp
  2860   0010B8  ECDA  F021         	call	_turnLeft	;wreg free
  2861                           
  2862                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2863   0010BC  0E05               	movlw	5
  2864   0010BE  6E3E               	movwf	(??_move+1)^0,c
  2865   0010C0  0E0F               	movlw	15
  2866   0010C2  6E3D               	movwf	??_move^0,c
  2867   0010C4  0EF1               	movlw	241
  2868   0010C6                     u5557:
  2869   0010C6  2EE8               	decfsz	wreg,f,c
  2870   0010C8  D7FE               	bra	u5557
  2871   0010CA  2E3D               	decfsz	??_move^0,f,c
  2872   0010CC  D7FC               	bra	u5557
  2873   0010CE  2E3E               	decfsz	(??_move+1)^0,f,c
  2874   0010D0  D7FA               	bra	u5557
  2875   0010D2  0000               	nop	
  2876   0010D4                     
  2877                           ;dc_motor.c: 124:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2878   0010D4  C0D8  F01B         	movff	move@mL,fullSpeedAhead@mL
  2879   0010D8  C0D9  F01C         	movff	move@mL+1,fullSpeedAhead@mL+1
  2880   0010DC  C0DA  F01D         	movff	move@mR,fullSpeedAhead@mR
  2881   0010E0  C0DB  F01E         	movff	move@mR+1,fullSpeedAhead@mR+1
  2882   0010E4  C0E2  F01F         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2883   0010E8  C0E4  F020         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2884   0010EC  EC84  F024         	call	_fullSpeedAhead	;wreg free
  2885                           
  2886                           ;dc_motor.c: 125:     }
  2887   0010F0  EF15  F00B         	goto	l564
  2888   0010F4                     l5584:
  2889                           
  2890                           ; BSR set to: 0
  2891   0010F4  0E04               	movlw	4
  2892   0010F6  19DC               	xorwf	move@color& (0+255),w,b
  2893   0010F8  A4D8               	btfss	status,2,c
  2894   0010FA  EF81  F008         	goto	u4901
  2895   0010FE  EF83  F008         	goto	u4900
  2896   001102                     u4901:
  2897   001102  EF01  F009         	goto	l5600
  2898   001106                     u4900:
  2899   001106                     
  2900                           ; BSR set to: 0
  2901                           ;dc_motor.c: 128:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2902   001106  C0D8  F01B         	movff	move@mL,reverseShort@mL
  2903   00110A  C0D9  F01C         	movff	move@mL+1,reverseShort@mL+1
  2904   00110E  C0DA  F01D         	movff	move@mR,reverseShort@mR
  2905   001112  C0DB  F01E         	movff	move@mR+1,reverseShort@mR+1
  2906   001116  C0E2  F01F         	movff	move@straightSpeed,reverseShort@straightSpeed
  2907   00111A  C0E4  F020         	movff	move@straightRamp,reverseShort@straightRamp
  2908   00111E  EC08  F01F         	call	_reverseShort	;wreg free
  2909   001122                     
  2910                           ;dc_motor.c: 129:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2911   001122  0E05               	movlw	5
  2912   001124  6E3E               	movwf	(??_move+1)^0,c
  2913   001126  0E0F               	movlw	15
  2914   001128  6E3D               	movwf	??_move^0,c
  2915   00112A  0EF1               	movlw	241
  2916   00112C                     u5567:
  2917   00112C  2EE8               	decfsz	wreg,f,c
  2918   00112E  D7FE               	bra	u5567
  2919   001130  2E3D               	decfsz	??_move^0,f,c
  2920   001132  D7FC               	bra	u5567
  2921   001134  2E3E               	decfsz	(??_move+1)^0,f,c
  2922   001136  D7FA               	bra	u5567
  2923   001138  0000               	nop	
  2924   00113A                     
  2925                           ;dc_motor.c: 130:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2926   00113A  C0D8  F01B         	movff	move@mL,reverseOneSquare@mL
  2927   00113E  C0D9  F01C         	movff	move@mL+1,reverseOneSquare@mL+1
  2928   001142  C0DA  F01D         	movff	move@mR,reverseOneSquare@mR
  2929   001146  C0DB  F01E         	movff	move@mR+1,reverseOneSquare@mR+1
  2930   00114A  C0E2  F01F         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2931   00114E  C0E3  F020         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2932   001152  C0E4  F021         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2933   001156  ECFD  F01F         	call	_reverseOneSquare	;wreg free
  2934                           
  2935                           ;dc_motor.c: 131:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2936   00115A  0E05               	movlw	5
  2937   00115C  6E3E               	movwf	(??_move+1)^0,c
  2938   00115E  0E0F               	movlw	15
  2939   001160  6E3D               	movwf	??_move^0,c
  2940   001162  0EF1               	movlw	241
  2941   001164                     u5577:
  2942   001164  2EE8               	decfsz	wreg,f,c
  2943   001166  D7FE               	bra	u5577
  2944   001168  2E3D               	decfsz	??_move^0,f,c
  2945   00116A  D7FC               	bra	u5577
  2946   00116C  2E3E               	decfsz	(??_move+1)^0,f,c
  2947   00116E  D7FA               	bra	u5577
  2948   001170  0000               	nop	
  2949   001172                     
  2950                           ;dc_motor.c: 132:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2951   001172  C0D8  F01B         	movff	move@mL,turnRight@mL
  2952   001176  C0D9  F01C         	movff	move@mL+1,turnRight@mL+1
  2953   00117A  C0DA  F01D         	movff	move@mR,turnRight@mR
  2954   00117E  C0DB  F01E         	movff	move@mR+1,turnRight@mR+1
  2955   001182  C0E5  F01F         	movff	move@turnSpeed,turnRight@turnSpeed
  2956   001186  C0E6  F020         	movff	move@turnDuration,turnRight@turnDuration
  2957   00118A  C0E7  F021         	movff	move@turnRamp,turnRight@turnRamp
  2958   00118E  ECF0  F020         	call	_turnRight	;wreg free
  2959   001192                     
  2960                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2961   001192  0E05               	movlw	5
  2962   001194  6E3E               	movwf	(??_move+1)^0,c
  2963   001196  0E0F               	movlw	15
  2964   001198  6E3D               	movwf	??_move^0,c
  2965   00119A  0EF1               	movlw	241
  2966   00119C                     u5587:
  2967   00119C  2EE8               	decfsz	wreg,f,c
  2968   00119E  D7FE               	bra	u5587
  2969   0011A0  2E3D               	decfsz	??_move^0,f,c
  2970   0011A2  D7FC               	bra	u5587
  2971   0011A4  2E3E               	decfsz	(??_move+1)^0,f,c
  2972   0011A6  D7FA               	bra	u5587
  2973   0011A8  0000               	nop	
  2974                           
  2975                           ;dc_motor.c: 134:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2976   0011AA  C0D8  F01B         	movff	move@mL,turnRight@mL
  2977   0011AE  C0D9  F01C         	movff	move@mL+1,turnRight@mL+1
  2978   0011B2  C0DA  F01D         	movff	move@mR,turnRight@mR
  2979   0011B6  C0DB  F01E         	movff	move@mR+1,turnRight@mR+1
  2980   0011BA  C0E5  F01F         	movff	move@turnSpeed,turnRight@turnSpeed
  2981   0011BE  C0E6  F020         	movff	move@turnDuration,turnRight@turnDuration
  2982   0011C2  C0E7  F021         	movff	move@turnRamp,turnRight@turnRamp
  2983   0011C6  ECF0  F020         	call	_turnRight	;wreg free
  2984   0011CA                     
  2985                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2986   0011CA  0E05               	movlw	5
  2987   0011CC  6E3E               	movwf	(??_move+1)^0,c
  2988   0011CE  0E0F               	movlw	15
  2989   0011D0  6E3D               	movwf	??_move^0,c
  2990   0011D2  0EF1               	movlw	241
  2991   0011D4                     u5597:
  2992   0011D4  2EE8               	decfsz	wreg,f,c
  2993   0011D6  D7FE               	bra	u5597
  2994   0011D8  2E3D               	decfsz	??_move^0,f,c
  2995   0011DA  D7FC               	bra	u5597
  2996   0011DC  2E3E               	decfsz	(??_move+1)^0,f,c
  2997   0011DE  D7FA               	bra	u5597
  2998   0011E0  0000               	nop	
  2999   0011E2                     
  3000                           ;dc_motor.c: 136:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3001   0011E2  C0D8  F01B         	movff	move@mL,fullSpeedAhead@mL
  3002   0011E6  C0D9  F01C         	movff	move@mL+1,fullSpeedAhead@mL+1
  3003   0011EA  C0DA  F01D         	movff	move@mR,fullSpeedAhead@mR
  3004   0011EE  C0DB  F01E         	movff	move@mR+1,fullSpeedAhead@mR+1
  3005   0011F2  C0E2  F01F         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3006   0011F6  C0E4  F020         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3007   0011FA  EC84  F024         	call	_fullSpeedAhead	;wreg free
  3008                           
  3009                           ;dc_motor.c: 137:     }
  3010   0011FE  EF15  F00B         	goto	l564
  3011   001202                     l5600:
  3012                           
  3013                           ; BSR set to: 0
  3014   001202  0E05               	movlw	5
  3015   001204  19DC               	xorwf	move@color& (0+255),w,b
  3016   001206  A4D8               	btfss	status,2,c
  3017   001208  EF08  F009         	goto	u4911
  3018   00120C  EF0A  F009         	goto	u4910
  3019   001210                     u4911:
  3020   001210  EF88  F009         	goto	l5616
  3021   001214                     u4910:
  3022   001214                     
  3023                           ; BSR set to: 0
  3024                           ;dc_motor.c: 140:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3025   001214  C0D8  F01B         	movff	move@mL,reverseShort@mL
  3026   001218  C0D9  F01C         	movff	move@mL+1,reverseShort@mL+1
  3027   00121C  C0DA  F01D         	movff	move@mR,reverseShort@mR
  3028   001220  C0DB  F01E         	movff	move@mR+1,reverseShort@mR+1
  3029   001224  C0E2  F01F         	movff	move@straightSpeed,reverseShort@straightSpeed
  3030   001228  C0E4  F020         	movff	move@straightRamp,reverseShort@straightRamp
  3031   00122C  EC08  F01F         	call	_reverseShort	;wreg free
  3032   001230                     
  3033                           ;dc_motor.c: 141:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3034   001230  0E05               	movlw	5
  3035   001232  6E3E               	movwf	(??_move+1)^0,c
  3036   001234  0E0F               	movlw	15
  3037   001236  6E3D               	movwf	??_move^0,c
  3038   001238  0EF1               	movlw	241
  3039   00123A                     u5607:
  3040   00123A  2EE8               	decfsz	wreg,f,c
  3041   00123C  D7FE               	bra	u5607
  3042   00123E  2E3D               	decfsz	??_move^0,f,c
  3043   001240  D7FC               	bra	u5607
  3044   001242  2E3E               	decfsz	(??_move+1)^0,f,c
  3045   001244  D7FA               	bra	u5607
  3046   001246  0000               	nop	
  3047   001248                     
  3048                           ;dc_motor.c: 142:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  3049   001248  C0D8  F01B         	movff	move@mL,reverseOneSquare@mL
  3050   00124C  C0D9  F01C         	movff	move@mL+1,reverseOneSquare@mL+1
  3051   001250  C0DA  F01D         	movff	move@mR,reverseOneSquare@mR
  3052   001254  C0DB  F01E         	movff	move@mR+1,reverseOneSquare@mR+1
  3053   001258  C0E2  F01F         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  3054   00125C  C0E3  F020         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  3055   001260  C0E4  F021         	movff	move@straightRamp,reverseOneSquare@straightRamp
  3056   001264  ECFD  F01F         	call	_reverseOneSquare	;wreg free
  3057                           
  3058                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3059   001268  0E05               	movlw	5
  3060   00126A  6E3E               	movwf	(??_move+1)^0,c
  3061   00126C  0E0F               	movlw	15
  3062   00126E  6E3D               	movwf	??_move^0,c
  3063   001270  0EF1               	movlw	241
  3064   001272                     u5617:
  3065   001272  2EE8               	decfsz	wreg,f,c
  3066   001274  D7FE               	bra	u5617
  3067   001276  2E3D               	decfsz	??_move^0,f,c
  3068   001278  D7FC               	bra	u5617
  3069   00127A  2E3E               	decfsz	(??_move+1)^0,f,c
  3070   00127C  D7FA               	bra	u5617
  3071   00127E  0000               	nop	
  3072   001280                     
  3073                           ;dc_motor.c: 144:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3074   001280  C0D8  F01B         	movff	move@mL,turnLeft@mL
  3075   001284  C0D9  F01C         	movff	move@mL+1,turnLeft@mL+1
  3076   001288  C0DA  F01D         	movff	move@mR,turnLeft@mR
  3077   00128C  C0DB  F01E         	movff	move@mR+1,turnLeft@mR+1
  3078   001290  C0E5  F01F         	movff	move@turnSpeed,turnLeft@turnSpeed
  3079   001294  C0E6  F020         	movff	move@turnDuration,turnLeft@turnDuration
  3080   001298  C0E7  F021         	movff	move@turnRamp,turnLeft@turnRamp
  3081   00129C  ECDA  F021         	call	_turnLeft	;wreg free
  3082   0012A0                     
  3083                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3084   0012A0  0E05               	movlw	5
  3085   0012A2  6E3E               	movwf	(??_move+1)^0,c
  3086   0012A4  0E0F               	movlw	15
  3087   0012A6  6E3D               	movwf	??_move^0,c
  3088   0012A8  0EF1               	movlw	241
  3089   0012AA                     u5627:
  3090   0012AA  2EE8               	decfsz	wreg,f,c
  3091   0012AC  D7FE               	bra	u5627
  3092   0012AE  2E3D               	decfsz	??_move^0,f,c
  3093   0012B0  D7FC               	bra	u5627
  3094   0012B2  2E3E               	decfsz	(??_move+1)^0,f,c
  3095   0012B4  D7FA               	bra	u5627
  3096   0012B6  0000               	nop	
  3097                           
  3098                           ;dc_motor.c: 146:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3099   0012B8  C0D8  F01B         	movff	move@mL,turnLeft@mL
  3100   0012BC  C0D9  F01C         	movff	move@mL+1,turnLeft@mL+1
  3101   0012C0  C0DA  F01D         	movff	move@mR,turnLeft@mR
  3102   0012C4  C0DB  F01E         	movff	move@mR+1,turnLeft@mR+1
  3103   0012C8  C0E5  F01F         	movff	move@turnSpeed,turnLeft@turnSpeed
  3104   0012CC  C0E6  F020         	movff	move@turnDuration,turnLeft@turnDuration
  3105   0012D0  C0E7  F021         	movff	move@turnRamp,turnLeft@turnRamp
  3106   0012D4  ECDA  F021         	call	_turnLeft	;wreg free
  3107   0012D8                     
  3108                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3109   0012D8  0E05               	movlw	5
  3110   0012DA  6E3E               	movwf	(??_move+1)^0,c
  3111   0012DC  0E0F               	movlw	15
  3112   0012DE  6E3D               	movwf	??_move^0,c
  3113   0012E0  0EF1               	movlw	241
  3114   0012E2                     u5637:
  3115   0012E2  2EE8               	decfsz	wreg,f,c
  3116   0012E4  D7FE               	bra	u5637
  3117   0012E6  2E3D               	decfsz	??_move^0,f,c
  3118   0012E8  D7FC               	bra	u5637
  3119   0012EA  2E3E               	decfsz	(??_move+1)^0,f,c
  3120   0012EC  D7FA               	bra	u5637
  3121   0012EE  0000               	nop	
  3122   0012F0                     
  3123                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3124   0012F0  C0D8  F01B         	movff	move@mL,fullSpeedAhead@mL
  3125   0012F4  C0D9  F01C         	movff	move@mL+1,fullSpeedAhead@mL+1
  3126   0012F8  C0DA  F01D         	movff	move@mR,fullSpeedAhead@mR
  3127   0012FC  C0DB  F01E         	movff	move@mR+1,fullSpeedAhead@mR+1
  3128   001300  C0E2  F01F         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3129   001304  C0E4  F020         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3130   001308  EC84  F024         	call	_fullSpeedAhead	;wreg free
  3131                           
  3132                           ;dc_motor.c: 149:     }
  3133   00130C  EF15  F00B         	goto	l564
  3134   001310                     l5616:
  3135                           
  3136                           ; BSR set to: 0
  3137   001310  0E06               	movlw	6
  3138   001312  19DC               	xorwf	move@color& (0+255),w,b
  3139   001314  A4D8               	btfss	status,2,c
  3140   001316  EF8F  F009         	goto	u4921
  3141   00131A  EF91  F009         	goto	u4920
  3142   00131E                     u4921:
  3143   00131E  EF0F  F00A         	goto	l5632
  3144   001322                     u4920:
  3145   001322                     
  3146                           ; BSR set to: 0
  3147                           ;dc_motor.c: 152:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3148   001322  C0D8  F01B         	movff	move@mL,reverseShort@mL
  3149   001326  C0D9  F01C         	movff	move@mL+1,reverseShort@mL+1
  3150   00132A  C0DA  F01D         	movff	move@mR,reverseShort@mR
  3151   00132E  C0DB  F01E         	movff	move@mR+1,reverseShort@mR+1
  3152   001332  C0E2  F01F         	movff	move@straightSpeed,reverseShort@straightSpeed
  3153   001336  C0E4  F020         	movff	move@straightRamp,reverseShort@straightRamp
  3154   00133A  EC08  F01F         	call	_reverseShort	;wreg free
  3155   00133E                     
  3156                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3157   00133E  0E05               	movlw	5
  3158   001340  6E3E               	movwf	(??_move+1)^0,c
  3159   001342  0E0F               	movlw	15
  3160   001344  6E3D               	movwf	??_move^0,c
  3161   001346  0EF1               	movlw	241
  3162   001348                     u5647:
  3163   001348  2EE8               	decfsz	wreg,f,c
  3164   00134A  D7FE               	bra	u5647
  3165   00134C  2E3D               	decfsz	??_move^0,f,c
  3166   00134E  D7FC               	bra	u5647
  3167   001350  2E3E               	decfsz	(??_move+1)^0,f,c
  3168   001352  D7FA               	bra	u5647
  3169   001354  0000               	nop	
  3170   001356                     
  3171                           ;dc_motor.c: 154:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3172   001356  C0D8  F01B         	movff	move@mL,turnRight@mL
  3173   00135A  C0D9  F01C         	movff	move@mL+1,turnRight@mL+1
  3174   00135E  C0DA  F01D         	movff	move@mR,turnRight@mR
  3175   001362  C0DB  F01E         	movff	move@mR+1,turnRight@mR+1
  3176   001366  C0E5  F01F         	movff	move@turnSpeed,turnRight@turnSpeed
  3177   00136A  C0E6  F020         	movff	move@turnDuration,turnRight@turnDuration
  3178   00136E  C0E7  F021         	movff	move@turnRamp,turnRight@turnRamp
  3179   001372  ECF0  F020         	call	_turnRight	;wreg free
  3180                           
  3181                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3182   001376  0E05               	movlw	5
  3183   001378  6E3E               	movwf	(??_move+1)^0,c
  3184   00137A  0E0F               	movlw	15
  3185   00137C  6E3D               	movwf	??_move^0,c
  3186   00137E  0EF1               	movlw	241
  3187   001380                     u5657:
  3188   001380  2EE8               	decfsz	wreg,f,c
  3189   001382  D7FE               	bra	u5657
  3190   001384  2E3D               	decfsz	??_move^0,f,c
  3191   001386  D7FC               	bra	u5657
  3192   001388  2E3E               	decfsz	(??_move+1)^0,f,c
  3193   00138A  D7FA               	bra	u5657
  3194   00138C  0000               	nop	
  3195   00138E                     
  3196                           ;dc_motor.c: 156:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3197   00138E  C0D8  F01B         	movff	move@mL,turnRight@mL
  3198   001392  C0D9  F01C         	movff	move@mL+1,turnRight@mL+1
  3199   001396  C0DA  F01D         	movff	move@mR,turnRight@mR
  3200   00139A  C0DB  F01E         	movff	move@mR+1,turnRight@mR+1
  3201   00139E  C0E5  F01F         	movff	move@turnSpeed,turnRight@turnSpeed
  3202   0013A2  C0E6  F020         	movff	move@turnDuration,turnRight@turnDuration
  3203   0013A6  C0E7  F021         	movff	move@turnRamp,turnRight@turnRamp
  3204   0013AA  ECF0  F020         	call	_turnRight	;wreg free
  3205   0013AE                     
  3206                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3207   0013AE  0E05               	movlw	5
  3208   0013B0  6E3E               	movwf	(??_move+1)^0,c
  3209   0013B2  0E0F               	movlw	15
  3210   0013B4  6E3D               	movwf	??_move^0,c
  3211   0013B6  0EF1               	movlw	241
  3212   0013B8                     u5667:
  3213   0013B8  2EE8               	decfsz	wreg,f,c
  3214   0013BA  D7FE               	bra	u5667
  3215   0013BC  2E3D               	decfsz	??_move^0,f,c
  3216   0013BE  D7FC               	bra	u5667
  3217   0013C0  2E3E               	decfsz	(??_move+1)^0,f,c
  3218   0013C2  D7FA               	bra	u5667
  3219   0013C4  0000               	nop	
  3220                           
  3221                           ;dc_motor.c: 158:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3222   0013C6  C0D8  F01B         	movff	move@mL,turnRight@mL
  3223   0013CA  C0D9  F01C         	movff	move@mL+1,turnRight@mL+1
  3224   0013CE  C0DA  F01D         	movff	move@mR,turnRight@mR
  3225   0013D2  C0DB  F01E         	movff	move@mR+1,turnRight@mR+1
  3226   0013D6  C0E5  F01F         	movff	move@turnSpeed,turnRight@turnSpeed
  3227   0013DA  C0E6  F020         	movff	move@turnDuration,turnRight@turnDuration
  3228   0013DE  C0E7  F021         	movff	move@turnRamp,turnRight@turnRamp
  3229   0013E2  ECF0  F020         	call	_turnRight	;wreg free
  3230   0013E6                     
  3231                           ;dc_motor.c: 159:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3232   0013E6  0E05               	movlw	5
  3233   0013E8  6E3E               	movwf	(??_move+1)^0,c
  3234   0013EA  0E0F               	movlw	15
  3235   0013EC  6E3D               	movwf	??_move^0,c
  3236   0013EE  0EF1               	movlw	241
  3237   0013F0                     u5677:
  3238   0013F0  2EE8               	decfsz	wreg,f,c
  3239   0013F2  D7FE               	bra	u5677
  3240   0013F4  2E3D               	decfsz	??_move^0,f,c
  3241   0013F6  D7FC               	bra	u5677
  3242   0013F8  2E3E               	decfsz	(??_move+1)^0,f,c
  3243   0013FA  D7FA               	bra	u5677
  3244   0013FC  0000               	nop	
  3245   0013FE                     
  3246                           ;dc_motor.c: 160:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3247   0013FE  C0D8  F01B         	movff	move@mL,fullSpeedAhead@mL
  3248   001402  C0D9  F01C         	movff	move@mL+1,fullSpeedAhead@mL+1
  3249   001406  C0DA  F01D         	movff	move@mR,fullSpeedAhead@mR
  3250   00140A  C0DB  F01E         	movff	move@mR+1,fullSpeedAhead@mR+1
  3251   00140E  C0E2  F01F         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3252   001412  C0E4  F020         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3253   001416  EC84  F024         	call	_fullSpeedAhead	;wreg free
  3254                           
  3255                           ;dc_motor.c: 161:     }
  3256   00141A  EF15  F00B         	goto	l564
  3257   00141E                     l5632:
  3258                           
  3259                           ; BSR set to: 0
  3260   00141E  0E07               	movlw	7
  3261   001420  19DC               	xorwf	move@color& (0+255),w,b
  3262   001422  A4D8               	btfss	status,2,c
  3263   001424  EF16  F00A         	goto	u4931
  3264   001428  EF18  F00A         	goto	u4930
  3265   00142C                     u4931:
  3266   00142C  EF96  F00A         	goto	l5648
  3267   001430                     u4930:
  3268   001430                     
  3269                           ; BSR set to: 0
  3270                           ;dc_motor.c: 164:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3271   001430  C0D8  F01B         	movff	move@mL,reverseShort@mL
  3272   001434  C0D9  F01C         	movff	move@mL+1,reverseShort@mL+1
  3273   001438  C0DA  F01D         	movff	move@mR,reverseShort@mR
  3274   00143C  C0DB  F01E         	movff	move@mR+1,reverseShort@mR+1
  3275   001440  C0E2  F01F         	movff	move@straightSpeed,reverseShort@straightSpeed
  3276   001444  C0E4  F020         	movff	move@straightRamp,reverseShort@straightRamp
  3277   001448  EC08  F01F         	call	_reverseShort	;wreg free
  3278   00144C                     
  3279                           ;dc_motor.c: 165:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3280   00144C  0E05               	movlw	5
  3281   00144E  6E3E               	movwf	(??_move+1)^0,c
  3282   001450  0E0F               	movlw	15
  3283   001452  6E3D               	movwf	??_move^0,c
  3284   001454  0EF1               	movlw	241
  3285   001456                     u5687:
  3286   001456  2EE8               	decfsz	wreg,f,c
  3287   001458  D7FE               	bra	u5687
  3288   00145A  2E3D               	decfsz	??_move^0,f,c
  3289   00145C  D7FC               	bra	u5687
  3290   00145E  2E3E               	decfsz	(??_move+1)^0,f,c
  3291   001460  D7FA               	bra	u5687
  3292   001462  0000               	nop	
  3293   001464                     
  3294                           ;dc_motor.c: 166:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3295   001464  C0D8  F01B         	movff	move@mL,turnLeft@mL
  3296   001468  C0D9  F01C         	movff	move@mL+1,turnLeft@mL+1
  3297   00146C  C0DA  F01D         	movff	move@mR,turnLeft@mR
  3298   001470  C0DB  F01E         	movff	move@mR+1,turnLeft@mR+1
  3299   001474  C0E5  F01F         	movff	move@turnSpeed,turnLeft@turnSpeed
  3300   001478  C0E6  F020         	movff	move@turnDuration,turnLeft@turnDuration
  3301   00147C  C0E7  F021         	movff	move@turnRamp,turnLeft@turnRamp
  3302   001480  ECDA  F021         	call	_turnLeft	;wreg free
  3303                           
  3304                           ;dc_motor.c: 167:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3305   001484  0E05               	movlw	5
  3306   001486  6E3E               	movwf	(??_move+1)^0,c
  3307   001488  0E0F               	movlw	15
  3308   00148A  6E3D               	movwf	??_move^0,c
  3309   00148C  0EF1               	movlw	241
  3310   00148E                     u5697:
  3311   00148E  2EE8               	decfsz	wreg,f,c
  3312   001490  D7FE               	bra	u5697
  3313   001492  2E3D               	decfsz	??_move^0,f,c
  3314   001494  D7FC               	bra	u5697
  3315   001496  2E3E               	decfsz	(??_move+1)^0,f,c
  3316   001498  D7FA               	bra	u5697
  3317   00149A  0000               	nop	
  3318   00149C                     
  3319                           ;dc_motor.c: 168:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3320   00149C  C0D8  F01B         	movff	move@mL,turnLeft@mL
  3321   0014A0  C0D9  F01C         	movff	move@mL+1,turnLeft@mL+1
  3322   0014A4  C0DA  F01D         	movff	move@mR,turnLeft@mR
  3323   0014A8  C0DB  F01E         	movff	move@mR+1,turnLeft@mR+1
  3324   0014AC  C0E5  F01F         	movff	move@turnSpeed,turnLeft@turnSpeed
  3325   0014B0  C0E6  F020         	movff	move@turnDuration,turnLeft@turnDuration
  3326   0014B4  C0E7  F021         	movff	move@turnRamp,turnLeft@turnRamp
  3327   0014B8  ECDA  F021         	call	_turnLeft	;wreg free
  3328   0014BC                     
  3329                           ;dc_motor.c: 169:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3330   0014BC  0E05               	movlw	5
  3331   0014BE  6E3E               	movwf	(??_move+1)^0,c
  3332   0014C0  0E0F               	movlw	15
  3333   0014C2  6E3D               	movwf	??_move^0,c
  3334   0014C4  0EF1               	movlw	241
  3335   0014C6                     u5707:
  3336   0014C6  2EE8               	decfsz	wreg,f,c
  3337   0014C8  D7FE               	bra	u5707
  3338   0014CA  2E3D               	decfsz	??_move^0,f,c
  3339   0014CC  D7FC               	bra	u5707
  3340   0014CE  2E3E               	decfsz	(??_move+1)^0,f,c
  3341   0014D0  D7FA               	bra	u5707
  3342   0014D2  0000               	nop	
  3343                           
  3344                           ;dc_motor.c: 170:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3345   0014D4  C0D8  F01B         	movff	move@mL,turnLeft@mL
  3346   0014D8  C0D9  F01C         	movff	move@mL+1,turnLeft@mL+1
  3347   0014DC  C0DA  F01D         	movff	move@mR,turnLeft@mR
  3348   0014E0  C0DB  F01E         	movff	move@mR+1,turnLeft@mR+1
  3349   0014E4  C0E5  F01F         	movff	move@turnSpeed,turnLeft@turnSpeed
  3350   0014E8  C0E6  F020         	movff	move@turnDuration,turnLeft@turnDuration
  3351   0014EC  C0E7  F021         	movff	move@turnRamp,turnLeft@turnRamp
  3352   0014F0  ECDA  F021         	call	_turnLeft	;wreg free
  3353   0014F4                     
  3354                           ;dc_motor.c: 171:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3355   0014F4  0E05               	movlw	5
  3356   0014F6  6E3E               	movwf	(??_move+1)^0,c
  3357   0014F8  0E0F               	movlw	15
  3358   0014FA  6E3D               	movwf	??_move^0,c
  3359   0014FC  0EF1               	movlw	241
  3360   0014FE                     u5717:
  3361   0014FE  2EE8               	decfsz	wreg,f,c
  3362   001500  D7FE               	bra	u5717
  3363   001502  2E3D               	decfsz	??_move^0,f,c
  3364   001504  D7FC               	bra	u5717
  3365   001506  2E3E               	decfsz	(??_move+1)^0,f,c
  3366   001508  D7FA               	bra	u5717
  3367   00150A  0000               	nop	
  3368   00150C                     
  3369                           ;dc_motor.c: 172:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3370   00150C  C0D8  F01B         	movff	move@mL,fullSpeedAhead@mL
  3371   001510  C0D9  F01C         	movff	move@mL+1,fullSpeedAhead@mL+1
  3372   001514  C0DA  F01D         	movff	move@mR,fullSpeedAhead@mR
  3373   001518  C0DB  F01E         	movff	move@mR+1,fullSpeedAhead@mR+1
  3374   00151C  C0E2  F01F         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3375   001520  C0E4  F020         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3376   001524  EC84  F024         	call	_fullSpeedAhead	;wreg free
  3377                           
  3378                           ;dc_motor.c: 173:     }
  3379   001528  EF15  F00B         	goto	l564
  3380   00152C                     l5648:
  3381                           
  3382                           ; BSR set to: 0
  3383   00152C  0E08               	movlw	8
  3384   00152E  19DC               	xorwf	move@color& (0+255),w,b
  3385   001530  A4D8               	btfss	status,2,c
  3386   001532  EF9D  F00A         	goto	u4941
  3387   001536  EF9F  F00A         	goto	u4940
  3388   00153A                     u4941:
  3389   00153A  EFDB  F00A         	goto	l5656
  3390   00153E                     u4940:
  3391   00153E                     
  3392                           ; BSR set to: 0
  3393                           ;dc_motor.c: 176:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3394   00153E  C0D8  F01B         	movff	move@mL,reverseShort@mL
  3395   001542  C0D9  F01C         	movff	move@mL+1,reverseShort@mL+1
  3396   001546  C0DA  F01D         	movff	move@mR,reverseShort@mR
  3397   00154A  C0DB  F01E         	movff	move@mR+1,reverseShort@mR+1
  3398   00154E  C0E2  F01F         	movff	move@straightSpeed,reverseShort@straightSpeed
  3399   001552  C0E4  F020         	movff	move@straightRamp,reverseShort@straightRamp
  3400   001556  EC08  F01F         	call	_reverseShort	;wreg free
  3401   00155A                     
  3402                           ;dc_motor.c: 177:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3403   00155A  0E05               	movlw	5
  3404   00155C  6E3E               	movwf	(??_move+1)^0,c
  3405   00155E  0E0F               	movlw	15
  3406   001560  6E3D               	movwf	??_move^0,c
  3407   001562  0EF1               	movlw	241
  3408   001564                     u5727:
  3409   001564  2EE8               	decfsz	wreg,f,c
  3410   001566  D7FE               	bra	u5727
  3411   001568  2E3D               	decfsz	??_move^0,f,c
  3412   00156A  D7FC               	bra	u5727
  3413   00156C  2E3E               	decfsz	(??_move+1)^0,f,c
  3414   00156E  D7FA               	bra	u5727
  3415   001570  0000               	nop	
  3416   001572                     
  3417                           ;dc_motor.c: 178:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3418   001572  C0D8  F029         	movff	move@mL,returnHome@mL
  3419   001576  C0D9  F02A         	movff	move@mL+1,returnHome@mL+1
  3420   00157A  C0DA  F02B         	movff	move@mR,returnHome@mR
  3421   00157E  C0DB  F02C         	movff	move@mR+1,returnHome@mR+1
  3422   001582  C0DD  F02D         	movff	move@moveSequence,returnHome@moveSequence
  3423   001586  C0DE  F02E         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3424   00158A  C0DF  F02F         	movff	move@straightTime,returnHome@straightTime
  3425   00158E  C0E0  F030         	movff	move@straightTime+1,returnHome@straightTime+1
  3426   001592  C0E1  F031         	movff	move@curMove,returnHome@curMove
  3427   001596  C0E2  F032         	movff	move@straightSpeed,returnHome@straightSpeed
  3428   00159A  C0E3  F033         	movff	move@reverseDuration,returnHome@reverseDuration
  3429   00159E  C0E4  F034         	movff	move@straightRamp,returnHome@straightRamp
  3430   0015A2  C0E5  F035         	movff	move@turnSpeed,returnHome@turnSpeed
  3431   0015A6  C0E6  F036         	movff	move@turnDuration,returnHome@turnDuration
  3432   0015AA  C0E7  F037         	movff	move@turnRamp,returnHome@turnRamp
  3433   0015AE  EC16  F00B         	call	_returnHome	;wreg free
  3434                           
  3435                           ;dc_motor.c: 179:     }
  3436   0015B2  EF15  F00B         	goto	l564
  3437   0015B6                     l5656:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;dc_motor.c: 182:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3441   0015B6  C0D8  F01B         	movff	move@mL,reverseShort@mL
  3442   0015BA  C0D9  F01C         	movff	move@mL+1,reverseShort@mL+1
  3443   0015BE  C0DA  F01D         	movff	move@mR,reverseShort@mR
  3444   0015C2  C0DB  F01E         	movff	move@mR+1,reverseShort@mR+1
  3445   0015C6  C0E2  F01F         	movff	move@straightSpeed,reverseShort@straightSpeed
  3446   0015CA  C0E4  F020         	movff	move@straightRamp,reverseShort@straightRamp
  3447   0015CE  EC08  F01F         	call	_reverseShort	;wreg free
  3448   0015D2                     
  3449                           ;dc_motor.c: 183:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3450   0015D2  0E05               	movlw	5
  3451   0015D4  6E3E               	movwf	(??_move+1)^0,c
  3452   0015D6  0E0F               	movlw	15
  3453   0015D8  6E3D               	movwf	??_move^0,c
  3454   0015DA  0EF1               	movlw	241
  3455   0015DC                     u5737:
  3456   0015DC  2EE8               	decfsz	wreg,f,c
  3457   0015DE  D7FE               	bra	u5737
  3458   0015E0  2E3D               	decfsz	??_move^0,f,c
  3459   0015E2  D7FC               	bra	u5737
  3460   0015E4  2E3E               	decfsz	(??_move+1)^0,f,c
  3461   0015E6  D7FA               	bra	u5737
  3462   0015E8  0000               	nop	
  3463   0015EA                     
  3464                           ;dc_motor.c: 184:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3465   0015EA  C0D8  F029         	movff	move@mL,returnHome@mL
  3466   0015EE  C0D9  F02A         	movff	move@mL+1,returnHome@mL+1
  3467   0015F2  C0DA  F02B         	movff	move@mR,returnHome@mR
  3468   0015F6  C0DB  F02C         	movff	move@mR+1,returnHome@mR+1
  3469   0015FA  C0DD  F02D         	movff	move@moveSequence,returnHome@moveSequence
  3470   0015FE  C0DE  F02E         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3471   001602  C0DF  F02F         	movff	move@straightTime,returnHome@straightTime
  3472   001606  C0E0  F030         	movff	move@straightTime+1,returnHome@straightTime+1
  3473   00160A  C0E1  F031         	movff	move@curMove,returnHome@curMove
  3474   00160E  C0E2  F032         	movff	move@straightSpeed,returnHome@straightSpeed
  3475   001612  C0E3  F033         	movff	move@reverseDuration,returnHome@reverseDuration
  3476   001616  C0E4  F034         	movff	move@straightRamp,returnHome@straightRamp
  3477   00161A  C0E5  F035         	movff	move@turnSpeed,returnHome@turnSpeed
  3478   00161E  C0E6  F036         	movff	move@turnDuration,returnHome@turnDuration
  3479   001622  C0E7  F037         	movff	move@turnRamp,returnHome@turnRamp
  3480   001626  EC16  F00B         	call	_returnHome	;wreg free
  3481   00162A                     l564:
  3482   00162A  0012               	return		;funcret
  3483   00162C                     __end_of_move:
  3484                           	callstack 0
  3485                           
  3486 ;; *************** function _reverseShort *****************
  3487 ;; Defined at:
  3488 ;;		line 563 in file "dc_motor.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  3491 ;;		 -> main@motorL(10), 
  3492 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  3493 ;;		 -> main@motorR(10), 
  3494 ;;  straightSpee    1   30[COMRAM] unsigned char 
  3495 ;;  straightRamp    1   31[COMRAM] unsigned char 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  cur_power       2   38[COMRAM] int 
  3498 ;;  i               2   36[COMRAM] int 
  3499 ;;  reverseDurat    1   35[COMRAM] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3509 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3510 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3511 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3512 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3513 ;;Total ram usage:       14 bytes
  3514 ;; Hardware stack levels used: 1
  3515 ;; Hardware stack levels required when called: 7
  3516 ;; This function calls:
  3517 ;;		_setMotorPWM
  3518 ;; This function is called by:
  3519 ;;		_move
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text3
  3524   003E10                     __ptext3:
  3525                           	callstack 0
  3526   003E10                     _reverseShort:
  3527                           	callstack 22
  3528   003E10                     
  3529                           ;dc_motor.c: 563: void reverseShort(DC_motor *mL, DC_motor *mR, char straightSpeed, unsi
      +                          gned char straightRamp);dc_motor.c: 564: {;dc_motor.c: 565:     unsigned char reverseDur
      +                          ation = 30;
  3530   003E10  0E1E               	movlw	30
  3531   003E12  6E24               	movwf	reverseShort@reverseDuration^0,c
  3532   003E14                     
  3533                           ;dc_motor.c: 567:     mL->direction = 0;
  3534   003E14  EE20 F001          	lfsr	2,1
  3535   003E18  501B               	movf	reverseShort@mL^0,w,c
  3536   003E1A  26D9               	addwf	fsr2l,f,c
  3537   003E1C  501C               	movf	(reverseShort@mL+1)^0,w,c
  3538   003E1E  22DA               	addwfc	fsr2h,f,c
  3539   003E20  6ADF               	clrf	indf2,c
  3540   003E22                     
  3541                           ;dc_motor.c: 568:     mR->direction = 0;
  3542   003E22  EE20 F001          	lfsr	2,1
  3543   003E26  501D               	movf	reverseShort@mR^0,w,c
  3544   003E28  26D9               	addwf	fsr2l,f,c
  3545   003E2A  501E               	movf	(reverseShort@mR+1)^0,w,c
  3546   003E2C  22DA               	addwfc	fsr2h,f,c
  3547   003E2E  6ADF               	clrf	indf2,c
  3548                           
  3549                           ;dc_motor.c: 569:     int i;;dc_motor.c: 570:     int cur_power;;dc_motor.c: 571:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  3550   003E30  0E00               	movlw	0
  3551   003E32  6E28               	movwf	(reverseShort@cur_power+1)^0,c
  3552   003E34  0E01               	movlw	1
  3553   003E36  6E27               	movwf	reverseShort@cur_power^0,c
  3554   003E38  EF67  F01F         	goto	l4980
  3555   003E3C                     l4966:
  3556                           
  3557                           ;dc_motor.c: 572:         mL->power = cur_power+mL->compensation;
  3558   003E3C  EE20 F009          	lfsr	2,9
  3559   003E40  501B               	movf	reverseShort@mL^0,w,c
  3560   003E42  26D9               	addwf	fsr2l,f,c
  3561   003E44  501C               	movf	(reverseShort@mL+1)^0,w,c
  3562   003E46  22DA               	addwfc	fsr2h,f,c
  3563   003E48  50DF               	movf	indf2,w,c
  3564   003E4A  2427               	addwf	reverseShort@cur_power^0,w,c
  3565   003E4C  C01B  FFD9         	movff	reverseShort@mL,fsr2l
  3566   003E50  C01C  FFDA         	movff	reverseShort@mL+1,fsr2h
  3567   003E54  6EDF               	movwf	indf2,c
  3568                           
  3569                           ;dc_motor.c: 573:         mR->power = cur_power+mR->compensation;
  3570   003E56  EE20 F009          	lfsr	2,9
  3571   003E5A  501D               	movf	reverseShort@mR^0,w,c
  3572   003E5C  26D9               	addwf	fsr2l,f,c
  3573   003E5E  501E               	movf	(reverseShort@mR+1)^0,w,c
  3574   003E60  22DA               	addwfc	fsr2h,f,c
  3575   003E62  50DF               	movf	indf2,w,c
  3576   003E64  2427               	addwf	reverseShort@cur_power^0,w,c
  3577   003E66  C01D  FFD9         	movff	reverseShort@mR,fsr2l
  3578   003E6A  C01E  FFDA         	movff	reverseShort@mR+1,fsr2h
  3579   003E6E  6EDF               	movwf	indf2,c
  3580   003E70                     
  3581                           ;dc_motor.c: 574:         setMotorPWM(mL);
  3582   003E70  C01B  F015         	movff	reverseShort@mL,setMotorPWM@m
  3583   003E74  C01C  F016         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3584   003E78  ECC4  F022         	call	_setMotorPWM	;wreg free
  3585   003E7C                     
  3586                           ;dc_motor.c: 575:         setMotorPWM(mR);
  3587   003E7C  C01D  F015         	movff	reverseShort@mR,setMotorPWM@m
  3588   003E80  C01E  F016         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3589   003E84  ECC4  F022         	call	_setMotorPWM	;wreg free
  3590   003E88                     
  3591                           ;dc_motor.c: 576:         for (i=0;i<straightRamp;i++) {
  3592   003E88  0E00               	movlw	0
  3593   003E8A  6E26               	movwf	(reverseShort@i+1)^0,c
  3594   003E8C  0E00               	movlw	0
  3595   003E8E  6E25               	movwf	reverseShort@i^0,c
  3596   003E90  EF53  F01F         	goto	l718
  3597   003E94                     l4974:
  3598                           
  3599                           ;dc_motor.c: 577:             _delay((unsigned long)((10)*(64000000/4000.0)));
  3600   003E94  0ED0               	movlw	208
  3601   003E96  6E21               	movwf	??_reverseShort^0,c
  3602   003E98  0ECA               	movlw	202
  3603   003E9A                     u5747:
  3604   003E9A  2EE8               	decfsz	wreg,f,c
  3605   003E9C  D7FE               	bra	u5747
  3606   003E9E  2E21               	decfsz	??_reverseShort^0,f,c
  3607   003EA0  D7FC               	bra	u5747
  3608   003EA2                     
  3609                           ;dc_motor.c: 578:         }
  3610   003EA2  4A25               	infsnz	reverseShort@i^0,f,c
  3611   003EA4  2A26               	incf	(reverseShort@i+1)^0,f,c
  3612   003EA6                     l718:
  3613   003EA6  5020               	movf	reverseShort@straightRamp^0,w,c
  3614   003EA8  6E21               	movwf	??_reverseShort^0,c
  3615   003EAA  6A22               	clrf	(??_reverseShort+1)^0,c
  3616   003EAC  5021               	movf	??_reverseShort^0,w,c
  3617   003EAE  5C25               	subwf	reverseShort@i^0,w,c
  3618   003EB0  5026               	movf	(reverseShort@i+1)^0,w,c
  3619   003EB2  0A80               	xorlw	128
  3620   003EB4  6E23               	movwf	(??_reverseShort+2)^0,c
  3621   003EB6  5022               	movf	(??_reverseShort+1)^0,w,c
  3622   003EB8  0A80               	xorlw	128
  3623   003EBA  5823               	subwfb	(??_reverseShort+2)^0,w,c
  3624   003EBC  A0D8               	btfss	status,0,c
  3625   003EBE  EF63  F01F         	goto	u4161
  3626   003EC2  EF65  F01F         	goto	u4160
  3627   003EC6                     u4161:
  3628   003EC6  EF4A  F01F         	goto	l4974
  3629   003ECA                     u4160:
  3630   003ECA                     
  3631                           ;dc_motor.c: 579:     }
  3632   003ECA  4A27               	infsnz	reverseShort@cur_power^0,f,c
  3633   003ECC  2A28               	incf	(reverseShort@cur_power+1)^0,f,c
  3634   003ECE                     l4980:
  3635   003ECE  501F               	movf	reverseShort@straightSpeed^0,w,c
  3636   003ED0  6E21               	movwf	??_reverseShort^0,c
  3637   003ED2  6A22               	clrf	(??_reverseShort+1)^0,c
  3638   003ED4  5027               	movf	reverseShort@cur_power^0,w,c
  3639   003ED6  5C21               	subwf	??_reverseShort^0,w,c
  3640   003ED8  5022               	movf	(??_reverseShort+1)^0,w,c
  3641   003EDA  0A80               	xorlw	128
  3642   003EDC  6E23               	movwf	(??_reverseShort+2)^0,c
  3643   003EDE  5028               	movf	(reverseShort@cur_power+1)^0,w,c
  3644   003EE0  0A80               	xorlw	128
  3645   003EE2  5823               	subwfb	(??_reverseShort+2)^0,w,c
  3646   003EE4  B0D8               	btfsc	status,0,c
  3647   003EE6  EF77  F01F         	goto	u4171
  3648   003EEA  EF79  F01F         	goto	u4170
  3649   003EEE                     u4171:
  3650   003EEE  EF1E  F01F         	goto	l4966
  3651   003EF2                     u4170:
  3652   003EF2                     
  3653                           ;dc_motor.c: 581:     for (i=0;i<reverseDuration;i++) {
  3654   003EF2  0E00               	movlw	0
  3655   003EF4  6E26               	movwf	(reverseShort@i+1)^0,c
  3656   003EF6  0E00               	movlw	0
  3657   003EF8  6E25               	movwf	reverseShort@i^0,c
  3658   003EFA  EF88  F01F         	goto	l722
  3659   003EFE                     l4984:
  3660                           
  3661                           ;dc_motor.c: 582:             _delay((unsigned long)((10)*(64000000/4000.0)));
  3662   003EFE  0ED0               	movlw	208
  3663   003F00  6E21               	movwf	??_reverseShort^0,c
  3664   003F02  0ECA               	movlw	202
  3665   003F04                     u5757:
  3666   003F04  2EE8               	decfsz	wreg,f,c
  3667   003F06  D7FE               	bra	u5757
  3668   003F08  2E21               	decfsz	??_reverseShort^0,f,c
  3669   003F0A  D7FC               	bra	u5757
  3670   003F0C                     
  3671                           ;dc_motor.c: 583:         }
  3672   003F0C  4A25               	infsnz	reverseShort@i^0,f,c
  3673   003F0E  2A26               	incf	(reverseShort@i+1)^0,f,c
  3674   003F10                     l722:
  3675   003F10  5024               	movf	reverseShort@reverseDuration^0,w,c
  3676   003F12  6E21               	movwf	??_reverseShort^0,c
  3677   003F14  6A22               	clrf	(??_reverseShort+1)^0,c
  3678   003F16  5021               	movf	??_reverseShort^0,w,c
  3679   003F18  5C25               	subwf	reverseShort@i^0,w,c
  3680   003F1A  5026               	movf	(reverseShort@i+1)^0,w,c
  3681   003F1C  0A80               	xorlw	128
  3682   003F1E  6E23               	movwf	(??_reverseShort+2)^0,c
  3683   003F20  5022               	movf	(??_reverseShort+1)^0,w,c
  3684   003F22  0A80               	xorlw	128
  3685   003F24  5823               	subwfb	(??_reverseShort+2)^0,w,c
  3686   003F26  A0D8               	btfss	status,0,c
  3687   003F28  EF98  F01F         	goto	u4181
  3688   003F2C  EF9A  F01F         	goto	u4180
  3689   003F30                     u4181:
  3690   003F30  EF7F  F01F         	goto	l4984
  3691   003F34                     u4180:
  3692   003F34                     
  3693                           ;dc_motor.c: 585:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  3694   003F34  C01F  F027         	movff	reverseShort@straightSpeed,reverseShort@cur_power
  3695   003F38  6A28               	clrf	(reverseShort@cur_power+1)^0,c
  3696   003F3A                     l4988:
  3697   003F3A  BE28               	btfsc	(reverseShort@cur_power+1)^0,7,c
  3698   003F3C  EFA4  F01F         	goto	u4190
  3699   003F40  EFA2  F01F         	goto	u4191
  3700   003F44                     u4191:
  3701   003F44  EFA6  F01F         	goto	l4992
  3702   003F48                     u4190:
  3703   003F48  EFF2  F01F         	goto	l5008
  3704   003F4C                     l4992:
  3705                           
  3706                           ;dc_motor.c: 586:         mL->power = cur_power+mL->compensation;
  3707   003F4C  EE20 F009          	lfsr	2,9
  3708   003F50  501B               	movf	reverseShort@mL^0,w,c
  3709   003F52  26D9               	addwf	fsr2l,f,c
  3710   003F54  501C               	movf	(reverseShort@mL+1)^0,w,c
  3711   003F56  22DA               	addwfc	fsr2h,f,c
  3712   003F58  50DF               	movf	indf2,w,c
  3713   003F5A  2427               	addwf	reverseShort@cur_power^0,w,c
  3714   003F5C  C01B  FFD9         	movff	reverseShort@mL,fsr2l
  3715   003F60  C01C  FFDA         	movff	reverseShort@mL+1,fsr2h
  3716   003F64  6EDF               	movwf	indf2,c
  3717                           
  3718                           ;dc_motor.c: 587:         mR->power = cur_power+mR->compensation;
  3719   003F66  EE20 F009          	lfsr	2,9
  3720   003F6A  501D               	movf	reverseShort@mR^0,w,c
  3721   003F6C  26D9               	addwf	fsr2l,f,c
  3722   003F6E  501E               	movf	(reverseShort@mR+1)^0,w,c
  3723   003F70  22DA               	addwfc	fsr2h,f,c
  3724   003F72  50DF               	movf	indf2,w,c
  3725   003F74  2427               	addwf	reverseShort@cur_power^0,w,c
  3726   003F76  C01D  FFD9         	movff	reverseShort@mR,fsr2l
  3727   003F7A  C01E  FFDA         	movff	reverseShort@mR+1,fsr2h
  3728   003F7E  6EDF               	movwf	indf2,c
  3729   003F80                     
  3730                           ;dc_motor.c: 588:         setMotorPWM(mL);
  3731   003F80  C01B  F015         	movff	reverseShort@mL,setMotorPWM@m
  3732   003F84  C01C  F016         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3733   003F88  ECC4  F022         	call	_setMotorPWM	;wreg free
  3734   003F8C                     
  3735                           ;dc_motor.c: 589:         setMotorPWM(mR);
  3736   003F8C  C01D  F015         	movff	reverseShort@mR,setMotorPWM@m
  3737   003F90  C01E  F016         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3738   003F94  ECC4  F022         	call	_setMotorPWM	;wreg free
  3739   003F98                     
  3740                           ;dc_motor.c: 590:         for (i=0;i<straightRamp;i++) {
  3741   003F98  0E00               	movlw	0
  3742   003F9A  6E26               	movwf	(reverseShort@i+1)^0,c
  3743   003F9C  0E00               	movlw	0
  3744   003F9E  6E25               	movwf	reverseShort@i^0,c
  3745   003FA0  EFDB  F01F         	goto	l727
  3746   003FA4                     l5000:
  3747                           
  3748                           ;dc_motor.c: 591:             _delay((unsigned long)((10)*(64000000/4000.0)));
  3749   003FA4  0ED0               	movlw	208
  3750   003FA6  6E21               	movwf	??_reverseShort^0,c
  3751   003FA8  0ECA               	movlw	202
  3752   003FAA                     u5767:
  3753   003FAA  2EE8               	decfsz	wreg,f,c
  3754   003FAC  D7FE               	bra	u5767
  3755   003FAE  2E21               	decfsz	??_reverseShort^0,f,c
  3756   003FB0  D7FC               	bra	u5767
  3757   003FB2                     
  3758                           ;dc_motor.c: 592:         }
  3759   003FB2  4A25               	infsnz	reverseShort@i^0,f,c
  3760   003FB4  2A26               	incf	(reverseShort@i+1)^0,f,c
  3761   003FB6                     l727:
  3762   003FB6  5020               	movf	reverseShort@straightRamp^0,w,c
  3763   003FB8  6E21               	movwf	??_reverseShort^0,c
  3764   003FBA  6A22               	clrf	(??_reverseShort+1)^0,c
  3765   003FBC  5021               	movf	??_reverseShort^0,w,c
  3766   003FBE  5C25               	subwf	reverseShort@i^0,w,c
  3767   003FC0  5026               	movf	(reverseShort@i+1)^0,w,c
  3768   003FC2  0A80               	xorlw	128
  3769   003FC4  6E23               	movwf	(??_reverseShort+2)^0,c
  3770   003FC6  5022               	movf	(??_reverseShort+1)^0,w,c
  3771   003FC8  0A80               	xorlw	128
  3772   003FCA  5823               	subwfb	(??_reverseShort+2)^0,w,c
  3773   003FCC  A0D8               	btfss	status,0,c
  3774   003FCE  EFEB  F01F         	goto	u4201
  3775   003FD2  EFED  F01F         	goto	u4200
  3776   003FD6                     u4201:
  3777   003FD6  EFD2  F01F         	goto	l5000
  3778   003FDA                     u4200:
  3779   003FDA                     
  3780                           ;dc_motor.c: 593:     }
  3781   003FDA  0627               	decf	reverseShort@cur_power^0,f,c
  3782   003FDC  A0D8               	btfss	status,0,c
  3783   003FDE  0628               	decf	(reverseShort@cur_power+1)^0,f,c
  3784   003FE0  EF9D  F01F         	goto	l4988
  3785   003FE4                     l5008:
  3786                           
  3787                           ;dc_motor.c: 594:     mL->power = 0;
  3788   003FE4  C01B  FFD9         	movff	reverseShort@mL,fsr2l
  3789   003FE8  C01C  FFDA         	movff	reverseShort@mL+1,fsr2h
  3790   003FEC  6ADF               	clrf	indf2,c
  3791                           
  3792                           ;dc_motor.c: 595:     mR->power = 0;
  3793   003FEE  C01D  FFD9         	movff	reverseShort@mR,fsr2l
  3794   003FF2  C01E  FFDA         	movff	reverseShort@mR+1,fsr2h
  3795   003FF6  6ADF               	clrf	indf2,c
  3796   003FF8  0012               	return		;funcret
  3797   003FFA                     __end_of_reverseShort:
  3798                           	callstack 0
  3799                           
  3800 ;; *************** function _returnHome *****************
  3801 ;; Defined at:
  3802 ;;		line 189 in file "dc_motor.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  3805 ;;		 -> main@motorL(10), 
  3806 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  3807 ;;		 -> main@motorR(10), 
  3808 ;;  moveSequence    2   44[COMRAM] PTR unsigned char 
  3809 ;;		 -> main@moveSequence(40), 
  3810 ;;  straightTime    2   46[COMRAM] PTR unsigned int 
  3811 ;;		 -> main@straightTime(82), 
  3812 ;;  curMove         1   48[COMRAM] unsigned char 
  3813 ;;  straightSpee    1   49[COMRAM] unsigned char 
  3814 ;;  reverseDurat    1   50[COMRAM] unsigned char 
  3815 ;;  straightRamp    1   51[COMRAM] unsigned char 
  3816 ;;  turnSpeed       1   52[COMRAM] unsigned char 
  3817 ;;  turnDuration    1   53[COMRAM] unsigned char 
  3818 ;;  turnRamp        1   54[COMRAM] unsigned char 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  i               1   59[COMRAM] unsigned char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3830 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3833 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3834 ;;Total ram usage:       20 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 8
  3837 ;; This function calls:
  3838 ;;		_fullSpeedAhead
  3839 ;;		_get16bitTMR0val
  3840 ;;		_resetTimer
  3841 ;;		_reverseOneSquare
  3842 ;;		_stop
  3843 ;;		_turnLeft
  3844 ;;		_turnRight
  3845 ;; This function is called by:
  3846 ;;		_move
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text4
  3851   00162C                     __ptext4:
  3852                           	callstack 0
  3853   00162C                     _returnHome:
  3854                           	callstack 21
  3855   00162C                     
  3856                           ;dc_motor.c: 189: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reverseDu
      +                          ration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned
      +                           char turnRamp);dc_motor.c: 190: {;dc_motor.c: 191:     turnLeft(mL, mR, turnSpeed, turn
      +                          Duration, turnRamp);
  3857   00162C  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  3858   001630  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  3859   001634  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  3860   001638  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  3861   00163C  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3862   001640  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3863   001644  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3864   001648  ECDA  F021         	call	_turnLeft	;wreg free
  3865   00164C                     
  3866                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3867   00164C  0E05               	movlw	5
  3868   00164E  6E39               	movwf	(??_returnHome+1)^0,c
  3869   001650  0E0F               	movlw	15
  3870   001652  6E38               	movwf	??_returnHome^0,c
  3871   001654  0EF1               	movlw	241
  3872   001656                     u5777:
  3873   001656  2EE8               	decfsz	wreg,f,c
  3874   001658  D7FE               	bra	u5777
  3875   00165A  2E38               	decfsz	??_returnHome^0,f,c
  3876   00165C  D7FC               	bra	u5777
  3877   00165E  2E39               	decfsz	(??_returnHome+1)^0,f,c
  3878   001660  D7FA               	bra	u5777
  3879   001662  0000               	nop	
  3880   001664                     
  3881                           ;dc_motor.c: 193:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3882   001664  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  3883   001668  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  3884   00166C  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  3885   001670  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  3886   001674  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3887   001678  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3888   00167C  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3889   001680  ECDA  F021         	call	_turnLeft	;wreg free
  3890                           
  3891                           ;dc_motor.c: 194:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3892   001684  0E05               	movlw	5
  3893   001686  6E39               	movwf	(??_returnHome+1)^0,c
  3894   001688  0E0F               	movlw	15
  3895   00168A  6E38               	movwf	??_returnHome^0,c
  3896   00168C  0EF1               	movlw	241
  3897   00168E                     u5787:
  3898   00168E  2EE8               	decfsz	wreg,f,c
  3899   001690  D7FE               	bra	u5787
  3900   001692  2E38               	decfsz	??_returnHome^0,f,c
  3901   001694  D7FC               	bra	u5787
  3902   001696  2E39               	decfsz	(??_returnHome+1)^0,f,c
  3903   001698  D7FA               	bra	u5787
  3904   00169A  0000               	nop	
  3905   00169C                     
  3906                           ;dc_motor.c: 195:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3907   00169C  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  3908   0016A0  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  3909   0016A4  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  3910   0016A8  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  3911   0016AC  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3912   0016B0  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3913   0016B4  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3914   0016B8  ECDA  F021         	call	_turnLeft	;wreg free
  3915   0016BC                     
  3916                           ;dc_motor.c: 196:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3917   0016BC  0E05               	movlw	5
  3918   0016BE  6E39               	movwf	(??_returnHome+1)^0,c
  3919   0016C0  0E0F               	movlw	15
  3920   0016C2  6E38               	movwf	??_returnHome^0,c
  3921   0016C4  0EF1               	movlw	241
  3922   0016C6                     u5797:
  3923   0016C6  2EE8               	decfsz	wreg,f,c
  3924   0016C8  D7FE               	bra	u5797
  3925   0016CA  2E38               	decfsz	??_returnHome^0,f,c
  3926   0016CC  D7FC               	bra	u5797
  3927   0016CE  2E39               	decfsz	(??_returnHome+1)^0,f,c
  3928   0016D0  D7FA               	bra	u5797
  3929   0016D2  0000               	nop	
  3930                           
  3931                           ;dc_motor.c: 197:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3932   0016D4  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  3933   0016D8  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  3934   0016DC  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  3935   0016E0  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  3936   0016E4  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3937   0016E8  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3938   0016EC  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3939   0016F0  ECDA  F021         	call	_turnLeft	;wreg free
  3940   0016F4                     
  3941                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3942   0016F4  0E05               	movlw	5
  3943   0016F6  6E39               	movwf	(??_returnHome+1)^0,c
  3944   0016F8  0E0F               	movlw	15
  3945   0016FA  6E38               	movwf	??_returnHome^0,c
  3946   0016FC  0EF1               	movlw	241
  3947   0016FE                     u5807:
  3948   0016FE  2EE8               	decfsz	wreg,f,c
  3949   001700  D7FE               	bra	u5807
  3950   001702  2E38               	decfsz	??_returnHome^0,f,c
  3951   001704  D7FC               	bra	u5807
  3952   001706  2E39               	decfsz	(??_returnHome+1)^0,f,c
  3953   001708  D7FA               	bra	u5807
  3954   00170A  0000               	nop	
  3955   00170C                     
  3956                           ;dc_motor.c: 199:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3957   00170C  C029  F01B         	movff	returnHome@mL,fullSpeedAhead@mL
  3958   001710  C02A  F01C         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  3959   001714  C02B  F01D         	movff	returnHome@mR,fullSpeedAhead@mR
  3960   001718  C02C  F01E         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  3961   00171C  C032  F01F         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3962   001720  C034  F020         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  3963   001724  EC84  F024         	call	_fullSpeedAhead	;wreg free
  3964   001728                     
  3965                           ;dc_motor.c: 200:     resetTimer();
  3966   001728  ECAC  F028         	call	_resetTimer	;wreg free
  3967   00172C                     l5026:
  3968   00172C  5031               	movf	returnHome@curMove^0,w,c
  3969   00172E  0D02               	mullw	2
  3970   001730  CFF3 F038          	movff	prodl,??_returnHome
  3971   001734  CFF4 F039          	movff	prodh,??_returnHome+1
  3972   001738  5038               	movf	??_returnHome^0,w,c
  3973   00173A  242F               	addwf	returnHome@straightTime^0,w,c
  3974   00173C  6ED9               	movwf	fsr2l,c
  3975   00173E  5039               	movf	(??_returnHome+1)^0,w,c
  3976   001740  2030               	addwfc	(returnHome@straightTime+1)^0,w,c
  3977   001742  6EDA               	movwf	fsr2h,c
  3978   001744  ECAA  F027         	call	_get16bitTMR0val	;wreg free
  3979   001748  50DE               	movf	postinc2,w,c
  3980   00174A  5C08               	subwf	?_get16bitTMR0val^0,w,c
  3981   00174C  50DE               	movf	postinc2,w,c
  3982   00174E  5809               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  3983   001750  A0D8               	btfss	status,0,c
  3984   001752  EFAD  F00B         	goto	u4211
  3985   001756  EFAF  F00B         	goto	u4210
  3986   00175A                     u4211:
  3987   00175A  EF96  F00B         	goto	l5026
  3988   00175E                     u4210:
  3989   00175E                     
  3990                           ;dc_motor.c: 202:     stop(mL, mR, straightRamp);
  3991   00175E  C029  F01B         	movff	returnHome@mL,stop@mL
  3992   001762  C02A  F01C         	movff	returnHome@mL+1,stop@mL+1
  3993   001766  C02B  F01D         	movff	returnHome@mR,stop@mR
  3994   00176A  C02C  F01E         	movff	returnHome@mR+1,stop@mR+1
  3995   00176E  C034  F01F         	movff	returnHome@straightRamp,stop@straightRamp
  3996   001772  EC00  F024         	call	_stop	;wreg free
  3997   001776                     
  3998                           ;dc_motor.c: 204:     char i=curMove;
  3999   001776  C031  F03C         	movff	returnHome@curMove,returnHome@i
  4000                           
  4001                           ;dc_motor.c: 205:     while (i>0) {
  4002   00177A  EF6B  F00E         	goto	l5118
  4003   00177E                     l5032:
  4004                           
  4005                           ;dc_motor.c: 206:         i--;
  4006   00177E  063C               	decf	returnHome@i^0,f,c
  4007   001780                     
  4008                           ;dc_motor.c: 208:         if (moveSequence[i] == 1) {
  4009   001780  503C               	movf	returnHome@i^0,w,c
  4010   001782  242D               	addwf	returnHome@moveSequence^0,w,c
  4011   001784  6ED9               	movwf	fsr2l,c
  4012   001786  0E00               	movlw	0
  4013   001788  202E               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4014   00178A  6EDA               	movwf	fsr2h,c
  4015   00178C  04DE               	decf	postinc2,w,c
  4016   00178E  A4D8               	btfss	status,2,c
  4017   001790  EFCC  F00B         	goto	u4221
  4018   001794  EFCE  F00B         	goto	u4220
  4019   001798                     u4221:
  4020   001798  EF08  F00C         	goto	l5042
  4021   00179C                     u4220:
  4022   00179C                     
  4023                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4024   00179C  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  4025   0017A0  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  4026   0017A4  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  4027   0017A8  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  4028   0017AC  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4029   0017B0  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4030   0017B4  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4031   0017B8  ECDA  F021         	call	_turnLeft	;wreg free
  4032   0017BC                     
  4033                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4034   0017BC  0E05               	movlw	5
  4035   0017BE  6E39               	movwf	(??_returnHome+1)^0,c
  4036   0017C0  0E0F               	movlw	15
  4037   0017C2  6E38               	movwf	??_returnHome^0,c
  4038   0017C4  0EF1               	movlw	241
  4039   0017C6                     u5817:
  4040   0017C6  2EE8               	decfsz	wreg,f,c
  4041   0017C8  D7FE               	bra	u5817
  4042   0017CA  2E38               	decfsz	??_returnHome^0,f,c
  4043   0017CC  D7FC               	bra	u5817
  4044   0017CE  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4045   0017D0  D7FA               	bra	u5817
  4046   0017D2  0000               	nop	
  4047   0017D4                     
  4048                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4049   0017D4  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  4050   0017D8  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  4051   0017DC  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  4052   0017E0  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  4053   0017E4  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4054   0017E8  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4055   0017EC  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4056   0017F0  ECDA  F021         	call	_turnLeft	;wreg free
  4057                           
  4058                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4059   0017F4  0E05               	movlw	5
  4060   0017F6  6E39               	movwf	(??_returnHome+1)^0,c
  4061   0017F8  0E0F               	movlw	15
  4062   0017FA  6E38               	movwf	??_returnHome^0,c
  4063   0017FC  0EF1               	movlw	241
  4064   0017FE                     u5827:
  4065   0017FE  2EE8               	decfsz	wreg,f,c
  4066   001800  D7FE               	bra	u5827
  4067   001802  2E38               	decfsz	??_returnHome^0,f,c
  4068   001804  D7FC               	bra	u5827
  4069   001806  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4070   001808  D7FA               	bra	u5827
  4071   00180A  0000               	nop	
  4072                           
  4073                           ;dc_motor.c: 213:         }
  4074   00180C  EF36  F00E         	goto	l573
  4075   001810                     l5042:
  4076   001810  503C               	movf	returnHome@i^0,w,c
  4077   001812  242D               	addwf	returnHome@moveSequence^0,w,c
  4078   001814  6ED9               	movwf	fsr2l,c
  4079   001816  0E00               	movlw	0
  4080   001818  202E               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4081   00181A  6EDA               	movwf	fsr2h,c
  4082   00181C  0E02               	movlw	2
  4083   00181E  18DE               	xorwf	postinc2,w,c
  4084   001820  A4D8               	btfss	status,2,c
  4085   001822  EF15  F00C         	goto	u4231
  4086   001826  EF17  F00C         	goto	u4230
  4087   00182A                     u4231:
  4088   00182A  EF51  F00C         	goto	l5050
  4089   00182E                     u4230:
  4090   00182E                     
  4091                           ;dc_motor.c: 216:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4092   00182E  C029  F01B         	movff	returnHome@mL,turnRight@mL
  4093   001832  C02A  F01C         	movff	returnHome@mL+1,turnRight@mL+1
  4094   001836  C02B  F01D         	movff	returnHome@mR,turnRight@mR
  4095   00183A  C02C  F01E         	movff	returnHome@mR+1,turnRight@mR+1
  4096   00183E  C035  F01F         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4097   001842  C036  F020         	movff	returnHome@turnDuration,turnRight@turnDuration
  4098   001846  C037  F021         	movff	returnHome@turnRamp,turnRight@turnRamp
  4099   00184A  ECF0  F020         	call	_turnRight	;wreg free
  4100   00184E                     
  4101                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4102   00184E  0E05               	movlw	5
  4103   001850  6E39               	movwf	(??_returnHome+1)^0,c
  4104   001852  0E0F               	movlw	15
  4105   001854  6E38               	movwf	??_returnHome^0,c
  4106   001856  0EF1               	movlw	241
  4107   001858                     u5837:
  4108   001858  2EE8               	decfsz	wreg,f,c
  4109   00185A  D7FE               	bra	u5837
  4110   00185C  2E38               	decfsz	??_returnHome^0,f,c
  4111   00185E  D7FC               	bra	u5837
  4112   001860  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4113   001862  D7FA               	bra	u5837
  4114   001864  0000               	nop	
  4115   001866                     
  4116                           ;dc_motor.c: 218:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4117   001866  C029  F01B         	movff	returnHome@mL,turnRight@mL
  4118   00186A  C02A  F01C         	movff	returnHome@mL+1,turnRight@mL+1
  4119   00186E  C02B  F01D         	movff	returnHome@mR,turnRight@mR
  4120   001872  C02C  F01E         	movff	returnHome@mR+1,turnRight@mR+1
  4121   001876  C035  F01F         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4122   00187A  C036  F020         	movff	returnHome@turnDuration,turnRight@turnDuration
  4123   00187E  C037  F021         	movff	returnHome@turnRamp,turnRight@turnRamp
  4124   001882  ECF0  F020         	call	_turnRight	;wreg free
  4125                           
  4126                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4127   001886  0E05               	movlw	5
  4128   001888  6E39               	movwf	(??_returnHome+1)^0,c
  4129   00188A  0E0F               	movlw	15
  4130   00188C  6E38               	movwf	??_returnHome^0,c
  4131   00188E  0EF1               	movlw	241
  4132   001890                     u5847:
  4133   001890  2EE8               	decfsz	wreg,f,c
  4134   001892  D7FE               	bra	u5847
  4135   001894  2E38               	decfsz	??_returnHome^0,f,c
  4136   001896  D7FC               	bra	u5847
  4137   001898  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4138   00189A  D7FA               	bra	u5847
  4139   00189C  0000               	nop	
  4140                           
  4141                           ;dc_motor.c: 220:         }
  4142   00189E  EF36  F00E         	goto	l573
  4143   0018A2                     l5050:
  4144   0018A2  503C               	movf	returnHome@i^0,w,c
  4145   0018A4  242D               	addwf	returnHome@moveSequence^0,w,c
  4146   0018A6  6ED9               	movwf	fsr2l,c
  4147   0018A8  0E00               	movlw	0
  4148   0018AA  202E               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4149   0018AC  6EDA               	movwf	fsr2h,c
  4150   0018AE  0E03               	movlw	3
  4151   0018B0  18DE               	xorwf	postinc2,w,c
  4152   0018B2  A4D8               	btfss	status,2,c
  4153   0018B4  EF5E  F00C         	goto	u4241
  4154   0018B8  EF60  F00C         	goto	u4240
  4155   0018BC                     u4241:
  4156   0018BC  EFD2  F00C         	goto	l5064
  4157   0018C0                     u4240:
  4158   0018C0                     
  4159                           ;dc_motor.c: 223:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4160   0018C0  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  4161   0018C4  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  4162   0018C8  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  4163   0018CC  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  4164   0018D0  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4165   0018D4  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4166   0018D8  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4167   0018DC  ECDA  F021         	call	_turnLeft	;wreg free
  4168   0018E0                     
  4169                           ;dc_motor.c: 224:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4170   0018E0  0E05               	movlw	5
  4171   0018E2  6E39               	movwf	(??_returnHome+1)^0,c
  4172   0018E4  0E0F               	movlw	15
  4173   0018E6  6E38               	movwf	??_returnHome^0,c
  4174   0018E8  0EF1               	movlw	241
  4175   0018EA                     u5857:
  4176   0018EA  2EE8               	decfsz	wreg,f,c
  4177   0018EC  D7FE               	bra	u5857
  4178   0018EE  2E38               	decfsz	??_returnHome^0,f,c
  4179   0018F0  D7FC               	bra	u5857
  4180   0018F2  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4181   0018F4  D7FA               	bra	u5857
  4182   0018F6  0000               	nop	
  4183   0018F8                     
  4184                           ;dc_motor.c: 225:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4185   0018F8  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  4186   0018FC  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  4187   001900  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  4188   001904  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  4189   001908  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4190   00190C  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4191   001910  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4192   001914  ECDA  F021         	call	_turnLeft	;wreg free
  4193                           
  4194                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4195   001918  0E05               	movlw	5
  4196   00191A  6E39               	movwf	(??_returnHome+1)^0,c
  4197   00191C  0E0F               	movlw	15
  4198   00191E  6E38               	movwf	??_returnHome^0,c
  4199   001920  0EF1               	movlw	241
  4200   001922                     u5867:
  4201   001922  2EE8               	decfsz	wreg,f,c
  4202   001924  D7FE               	bra	u5867
  4203   001926  2E38               	decfsz	??_returnHome^0,f,c
  4204   001928  D7FC               	bra	u5867
  4205   00192A  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4206   00192C  D7FA               	bra	u5867
  4207   00192E  0000               	nop	
  4208   001930                     
  4209                           ;dc_motor.c: 227:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4210   001930  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  4211   001934  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  4212   001938  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  4213   00193C  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  4214   001940  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4215   001944  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4216   001948  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4217   00194C  ECDA  F021         	call	_turnLeft	;wreg free
  4218   001950                     
  4219                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4220   001950  0E05               	movlw	5
  4221   001952  6E39               	movwf	(??_returnHome+1)^0,c
  4222   001954  0E0F               	movlw	15
  4223   001956  6E38               	movwf	??_returnHome^0,c
  4224   001958  0EF1               	movlw	241
  4225   00195A                     u5877:
  4226   00195A  2EE8               	decfsz	wreg,f,c
  4227   00195C  D7FE               	bra	u5877
  4228   00195E  2E38               	decfsz	??_returnHome^0,f,c
  4229   001960  D7FC               	bra	u5877
  4230   001962  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4231   001964  D7FA               	bra	u5877
  4232   001966  0000               	nop	
  4233                           
  4234                           ;dc_motor.c: 229:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4235   001968  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  4236   00196C  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  4237   001970  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  4238   001974  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  4239   001978  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4240   00197C  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4241   001980  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4242   001984  ECDA  F021         	call	_turnLeft	;wreg free
  4243   001988                     l5062:
  4244                           
  4245                           ;dc_motor.c: 230:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4246   001988  0E05               	movlw	5
  4247   00198A  6E39               	movwf	(??_returnHome+1)^0,c
  4248   00198C  0E0F               	movlw	15
  4249   00198E  6E38               	movwf	??_returnHome^0,c
  4250   001990  0EF1               	movlw	241
  4251   001992                     u5887:
  4252   001992  2EE8               	decfsz	wreg,f,c
  4253   001994  D7FE               	bra	u5887
  4254   001996  2E38               	decfsz	??_returnHome^0,f,c
  4255   001998  D7FC               	bra	u5887
  4256   00199A  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4257   00199C  D7FA               	bra	u5887
  4258   00199E  0000               	nop	
  4259                           
  4260                           ;dc_motor.c: 231:         }
  4261   0019A0  EF36  F00E         	goto	l573
  4262   0019A4                     l5064:
  4263   0019A4  503C               	movf	returnHome@i^0,w,c
  4264   0019A6  242D               	addwf	returnHome@moveSequence^0,w,c
  4265   0019A8  6ED9               	movwf	fsr2l,c
  4266   0019AA  0E00               	movlw	0
  4267   0019AC  202E               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4268   0019AE  6EDA               	movwf	fsr2h,c
  4269   0019B0  0E04               	movlw	4
  4270   0019B2  18DE               	xorwf	postinc2,w,c
  4271   0019B4  A4D8               	btfss	status,2,c
  4272   0019B6  EFDF  F00C         	goto	u4251
  4273   0019BA  EFE1  F00C         	goto	u4250
  4274   0019BE                     u4251:
  4275   0019BE  EF2B  F00D         	goto	l5076
  4276   0019C2                     u4250:
  4277   0019C2                     
  4278                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4279   0019C2  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  4280   0019C6  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  4281   0019CA  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  4282   0019CE  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  4283   0019D2  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4284   0019D6  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4285   0019DA  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4286   0019DE  ECDA  F021         	call	_turnLeft	;wreg free
  4287   0019E2                     
  4288                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4289   0019E2  0E05               	movlw	5
  4290   0019E4  6E39               	movwf	(??_returnHome+1)^0,c
  4291   0019E6  0E0F               	movlw	15
  4292   0019E8  6E38               	movwf	??_returnHome^0,c
  4293   0019EA  0EF1               	movlw	241
  4294   0019EC                     u5897:
  4295   0019EC  2EE8               	decfsz	wreg,f,c
  4296   0019EE  D7FE               	bra	u5897
  4297   0019F0  2E38               	decfsz	??_returnHome^0,f,c
  4298   0019F2  D7FC               	bra	u5897
  4299   0019F4  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4300   0019F6  D7FA               	bra	u5897
  4301   0019F8  0000               	nop	
  4302   0019FA                     
  4303                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4304   0019FA  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  4305   0019FE  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  4306   001A02  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  4307   001A06  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  4308   001A0A  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4309   001A0E  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4310   001A12  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4311   001A16  ECDA  F021         	call	_turnLeft	;wreg free
  4312                           
  4313                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4314   001A1A  0E05               	movlw	5
  4315   001A1C  6E39               	movwf	(??_returnHome+1)^0,c
  4316   001A1E  0E0F               	movlw	15
  4317   001A20  6E38               	movwf	??_returnHome^0,c
  4318   001A22  0EF1               	movlw	241
  4319   001A24                     u5907:
  4320   001A24  2EE8               	decfsz	wreg,f,c
  4321   001A26  D7FE               	bra	u5907
  4322   001A28  2E38               	decfsz	??_returnHome^0,f,c
  4323   001A2A  D7FC               	bra	u5907
  4324   001A2C  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4325   001A2E  D7FA               	bra	u5907
  4326   001A30  0000               	nop	
  4327   001A32                     
  4328                           ;dc_motor.c: 238:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4329   001A32  C029  F01B         	movff	returnHome@mL,reverseOneSquare@mL
  4330   001A36  C02A  F01C         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4331   001A3A  C02B  F01D         	movff	returnHome@mR,reverseOneSquare@mR
  4332   001A3E  C02C  F01E         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4333   001A42  C032  F01F         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4334   001A46  C033  F020         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4335   001A4A  C034  F021         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4336   001A4E  ECFD  F01F         	call	_reverseOneSquare	;wreg free
  4337   001A52  EFC4  F00C         	goto	l5062
  4338   001A56                     l5076:
  4339   001A56  503C               	movf	returnHome@i^0,w,c
  4340   001A58  242D               	addwf	returnHome@moveSequence^0,w,c
  4341   001A5A  6ED9               	movwf	fsr2l,c
  4342   001A5C  0E00               	movlw	0
  4343   001A5E  202E               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4344   001A60  6EDA               	movwf	fsr2h,c
  4345   001A62  0E05               	movlw	5
  4346   001A64  18DE               	xorwf	postinc2,w,c
  4347   001A66  A4D8               	btfss	status,2,c
  4348   001A68  EF38  F00D         	goto	u4261
  4349   001A6C  EF3A  F00D         	goto	u4260
  4350   001A70                     u4261:
  4351   001A70  EF84  F00D         	goto	l5088
  4352   001A74                     u4260:
  4353   001A74                     
  4354                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4355   001A74  C029  F01B         	movff	returnHome@mL,turnRight@mL
  4356   001A78  C02A  F01C         	movff	returnHome@mL+1,turnRight@mL+1
  4357   001A7C  C02B  F01D         	movff	returnHome@mR,turnRight@mR
  4358   001A80  C02C  F01E         	movff	returnHome@mR+1,turnRight@mR+1
  4359   001A84  C035  F01F         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4360   001A88  C036  F020         	movff	returnHome@turnDuration,turnRight@turnDuration
  4361   001A8C  C037  F021         	movff	returnHome@turnRamp,turnRight@turnRamp
  4362   001A90  ECF0  F020         	call	_turnRight	;wreg free
  4363   001A94                     
  4364                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4365   001A94  0E05               	movlw	5
  4366   001A96  6E39               	movwf	(??_returnHome+1)^0,c
  4367   001A98  0E0F               	movlw	15
  4368   001A9A  6E38               	movwf	??_returnHome^0,c
  4369   001A9C  0EF1               	movlw	241
  4370   001A9E                     u5917:
  4371   001A9E  2EE8               	decfsz	wreg,f,c
  4372   001AA0  D7FE               	bra	u5917
  4373   001AA2  2E38               	decfsz	??_returnHome^0,f,c
  4374   001AA4  D7FC               	bra	u5917
  4375   001AA6  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4376   001AA8  D7FA               	bra	u5917
  4377   001AAA  0000               	nop	
  4378   001AAC                     
  4379                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4380   001AAC  C029  F01B         	movff	returnHome@mL,turnRight@mL
  4381   001AB0  C02A  F01C         	movff	returnHome@mL+1,turnRight@mL+1
  4382   001AB4  C02B  F01D         	movff	returnHome@mR,turnRight@mR
  4383   001AB8  C02C  F01E         	movff	returnHome@mR+1,turnRight@mR+1
  4384   001ABC  C035  F01F         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4385   001AC0  C036  F020         	movff	returnHome@turnDuration,turnRight@turnDuration
  4386   001AC4  C037  F021         	movff	returnHome@turnRamp,turnRight@turnRamp
  4387   001AC8  ECF0  F020         	call	_turnRight	;wreg free
  4388                           
  4389                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4390   001ACC  0E05               	movlw	5
  4391   001ACE  6E39               	movwf	(??_returnHome+1)^0,c
  4392   001AD0  0E0F               	movlw	15
  4393   001AD2  6E38               	movwf	??_returnHome^0,c
  4394   001AD4  0EF1               	movlw	241
  4395   001AD6                     u5927:
  4396   001AD6  2EE8               	decfsz	wreg,f,c
  4397   001AD8  D7FE               	bra	u5927
  4398   001ADA  2E38               	decfsz	??_returnHome^0,f,c
  4399   001ADC  D7FC               	bra	u5927
  4400   001ADE  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4401   001AE0  D7FA               	bra	u5927
  4402   001AE2  0000               	nop	
  4403   001AE4                     
  4404                           ;dc_motor.c: 247:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4405   001AE4  C029  F01B         	movff	returnHome@mL,reverseOneSquare@mL
  4406   001AE8  C02A  F01C         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4407   001AEC  C02B  F01D         	movff	returnHome@mR,reverseOneSquare@mR
  4408   001AF0  C02C  F01E         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4409   001AF4  C032  F01F         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4410   001AF8  C033  F020         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4411   001AFC  C034  F021         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4412   001B00  ECFD  F01F         	call	_reverseOneSquare	;wreg free
  4413   001B04  EFC4  F00C         	goto	l5062
  4414   001B08                     l5088:
  4415   001B08  503C               	movf	returnHome@i^0,w,c
  4416   001B0A  242D               	addwf	returnHome@moveSequence^0,w,c
  4417   001B0C  6ED9               	movwf	fsr2l,c
  4418   001B0E  0E00               	movlw	0
  4419   001B10  202E               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4420   001B12  6EDA               	movwf	fsr2h,c
  4421   001B14  0E06               	movlw	6
  4422   001B16  18DE               	xorwf	postinc2,w,c
  4423   001B18  A4D8               	btfss	status,2,c
  4424   001B1A  EF91  F00D         	goto	u4271
  4425   001B1E  EF93  F00D         	goto	u4270
  4426   001B22                     u4271:
  4427   001B22  EFDD  F00D         	goto	l5100
  4428   001B26                     u4270:
  4429   001B26                     
  4430                           ;dc_motor.c: 252:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4431   001B26  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  4432   001B2A  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  4433   001B2E  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  4434   001B32  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  4435   001B36  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4436   001B3A  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4437   001B3E  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4438   001B42  ECDA  F021         	call	_turnLeft	;wreg free
  4439   001B46                     
  4440                           ;dc_motor.c: 253:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4441   001B46  0E05               	movlw	5
  4442   001B48  6E39               	movwf	(??_returnHome+1)^0,c
  4443   001B4A  0E0F               	movlw	15
  4444   001B4C  6E38               	movwf	??_returnHome^0,c
  4445   001B4E  0EF1               	movlw	241
  4446   001B50                     u5937:
  4447   001B50  2EE8               	decfsz	wreg,f,c
  4448   001B52  D7FE               	bra	u5937
  4449   001B54  2E38               	decfsz	??_returnHome^0,f,c
  4450   001B56  D7FC               	bra	u5937
  4451   001B58  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4452   001B5A  D7FA               	bra	u5937
  4453   001B5C  0000               	nop	
  4454   001B5E                     
  4455                           ;dc_motor.c: 254:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4456   001B5E  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  4457   001B62  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  4458   001B66  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  4459   001B6A  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  4460   001B6E  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4461   001B72  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4462   001B76  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4463   001B7A  ECDA  F021         	call	_turnLeft	;wreg free
  4464                           
  4465                           ;dc_motor.c: 255:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4466   001B7E  0E05               	movlw	5
  4467   001B80  6E39               	movwf	(??_returnHome+1)^0,c
  4468   001B82  0E0F               	movlw	15
  4469   001B84  6E38               	movwf	??_returnHome^0,c
  4470   001B86  0EF1               	movlw	241
  4471   001B88                     u5947:
  4472   001B88  2EE8               	decfsz	wreg,f,c
  4473   001B8A  D7FE               	bra	u5947
  4474   001B8C  2E38               	decfsz	??_returnHome^0,f,c
  4475   001B8E  D7FC               	bra	u5947
  4476   001B90  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4477   001B92  D7FA               	bra	u5947
  4478   001B94  0000               	nop	
  4479   001B96                     
  4480                           ;dc_motor.c: 256:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4481   001B96  C029  F01B         	movff	returnHome@mL,turnLeft@mL
  4482   001B9A  C02A  F01C         	movff	returnHome@mL+1,turnLeft@mL+1
  4483   001B9E  C02B  F01D         	movff	returnHome@mR,turnLeft@mR
  4484   001BA2  C02C  F01E         	movff	returnHome@mR+1,turnLeft@mR+1
  4485   001BA6  C035  F01F         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4486   001BAA  C036  F020         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4487   001BAE  C037  F021         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4488   001BB2  ECDA  F021         	call	_turnLeft	;wreg free
  4489   001BB6  EFC4  F00C         	goto	l5062
  4490   001BBA                     l5100:
  4491   001BBA  503C               	movf	returnHome@i^0,w,c
  4492   001BBC  242D               	addwf	returnHome@moveSequence^0,w,c
  4493   001BBE  6ED9               	movwf	fsr2l,c
  4494   001BC0  0E00               	movlw	0
  4495   001BC2  202E               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4496   001BC4  6EDA               	movwf	fsr2h,c
  4497   001BC6  0E07               	movlw	7
  4498   001BC8  18DE               	xorwf	postinc2,w,c
  4499   001BCA  A4D8               	btfss	status,2,c
  4500   001BCC  EFEA  F00D         	goto	u4281
  4501   001BD0  EFEC  F00D         	goto	u4280
  4502   001BD4                     u4281:
  4503   001BD4  EF36  F00E         	goto	l579
  4504   001BD8                     u4280:
  4505   001BD8                     
  4506                           ;dc_motor.c: 261:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4507   001BD8  C029  F01B         	movff	returnHome@mL,turnRight@mL
  4508   001BDC  C02A  F01C         	movff	returnHome@mL+1,turnRight@mL+1
  4509   001BE0  C02B  F01D         	movff	returnHome@mR,turnRight@mR
  4510   001BE4  C02C  F01E         	movff	returnHome@mR+1,turnRight@mR+1
  4511   001BE8  C035  F01F         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4512   001BEC  C036  F020         	movff	returnHome@turnDuration,turnRight@turnDuration
  4513   001BF0  C037  F021         	movff	returnHome@turnRamp,turnRight@turnRamp
  4514   001BF4  ECF0  F020         	call	_turnRight	;wreg free
  4515   001BF8                     
  4516                           ;dc_motor.c: 262:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4517   001BF8  0E05               	movlw	5
  4518   001BFA  6E39               	movwf	(??_returnHome+1)^0,c
  4519   001BFC  0E0F               	movlw	15
  4520   001BFE  6E38               	movwf	??_returnHome^0,c
  4521   001C00  0EF1               	movlw	241
  4522   001C02                     u5957:
  4523   001C02  2EE8               	decfsz	wreg,f,c
  4524   001C04  D7FE               	bra	u5957
  4525   001C06  2E38               	decfsz	??_returnHome^0,f,c
  4526   001C08  D7FC               	bra	u5957
  4527   001C0A  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4528   001C0C  D7FA               	bra	u5957
  4529   001C0E  0000               	nop	
  4530   001C10                     
  4531                           ;dc_motor.c: 263:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4532   001C10  C029  F01B         	movff	returnHome@mL,turnRight@mL
  4533   001C14  C02A  F01C         	movff	returnHome@mL+1,turnRight@mL+1
  4534   001C18  C02B  F01D         	movff	returnHome@mR,turnRight@mR
  4535   001C1C  C02C  F01E         	movff	returnHome@mR+1,turnRight@mR+1
  4536   001C20  C035  F01F         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4537   001C24  C036  F020         	movff	returnHome@turnDuration,turnRight@turnDuration
  4538   001C28  C037  F021         	movff	returnHome@turnRamp,turnRight@turnRamp
  4539   001C2C  ECF0  F020         	call	_turnRight	;wreg free
  4540                           
  4541                           ;dc_motor.c: 264:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4542   001C30  0E05               	movlw	5
  4543   001C32  6E39               	movwf	(??_returnHome+1)^0,c
  4544   001C34  0E0F               	movlw	15
  4545   001C36  6E38               	movwf	??_returnHome^0,c
  4546   001C38  0EF1               	movlw	241
  4547   001C3A                     u5967:
  4548   001C3A  2EE8               	decfsz	wreg,f,c
  4549   001C3C  D7FE               	bra	u5967
  4550   001C3E  2E38               	decfsz	??_returnHome^0,f,c
  4551   001C40  D7FC               	bra	u5967
  4552   001C42  2E39               	decfsz	(??_returnHome+1)^0,f,c
  4553   001C44  D7FA               	bra	u5967
  4554   001C46  0000               	nop	
  4555   001C48                     
  4556                           ;dc_motor.c: 265:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4557   001C48  C029  F01B         	movff	returnHome@mL,turnRight@mL
  4558   001C4C  C02A  F01C         	movff	returnHome@mL+1,turnRight@mL+1
  4559   001C50  C02B  F01D         	movff	returnHome@mR,turnRight@mR
  4560   001C54  C02C  F01E         	movff	returnHome@mR+1,turnRight@mR+1
  4561   001C58  C035  F01F         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4562   001C5C  C036  F020         	movff	returnHome@turnDuration,turnRight@turnDuration
  4563   001C60  C037  F021         	movff	returnHome@turnRamp,turnRight@turnRamp
  4564   001C64  ECF0  F020         	call	_turnRight	;wreg free
  4565   001C68  EFC4  F00C         	goto	l5062
  4566   001C6C                     l579:
  4567   001C6C                     l573:
  4568                           
  4569                           ;dc_motor.c: 269:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4570   001C6C  C029  F01B         	movff	returnHome@mL,fullSpeedAhead@mL
  4571   001C70  C02A  F01C         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4572   001C74  C02B  F01D         	movff	returnHome@mR,fullSpeedAhead@mR
  4573   001C78  C02C  F01E         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4574   001C7C  C032  F01F         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4575   001C80  C034  F020         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4576   001C84  EC84  F024         	call	_fullSpeedAhead	;wreg free
  4577   001C88                     
  4578                           ;dc_motor.c: 270:         resetTimer();
  4579   001C88  ECAC  F028         	call	_resetTimer	;wreg free
  4580   001C8C                     l5114:
  4581   001C8C  503C               	movf	returnHome@i^0,w,c
  4582   001C8E  0D02               	mullw	2
  4583   001C90  CFF3 F038          	movff	prodl,??_returnHome
  4584   001C94  CFF4 F039          	movff	prodh,??_returnHome+1
  4585   001C98  5038               	movf	??_returnHome^0,w,c
  4586   001C9A  242F               	addwf	returnHome@straightTime^0,w,c
  4587   001C9C  6ED9               	movwf	fsr2l,c
  4588   001C9E  5039               	movf	(??_returnHome+1)^0,w,c
  4589   001CA0  2030               	addwfc	(returnHome@straightTime+1)^0,w,c
  4590   001CA2  6EDA               	movwf	fsr2h,c
  4591   001CA4  ECAA  F027         	call	_get16bitTMR0val	;wreg free
  4592   001CA8  50DE               	movf	postinc2,w,c
  4593   001CAA  5C08               	subwf	?_get16bitTMR0val^0,w,c
  4594   001CAC  50DE               	movf	postinc2,w,c
  4595   001CAE  5809               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4596   001CB0  A0D8               	btfss	status,0,c
  4597   001CB2  EF5D  F00E         	goto	u4291
  4598   001CB6  EF5F  F00E         	goto	u4290
  4599   001CBA                     u4291:
  4600   001CBA  EF46  F00E         	goto	l5114
  4601   001CBE                     u4290:
  4602   001CBE                     
  4603                           ;dc_motor.c: 272:         stop(mL, mR, straightRamp);
  4604   001CBE  C029  F01B         	movff	returnHome@mL,stop@mL
  4605   001CC2  C02A  F01C         	movff	returnHome@mL+1,stop@mL+1
  4606   001CC6  C02B  F01D         	movff	returnHome@mR,stop@mR
  4607   001CCA  C02C  F01E         	movff	returnHome@mR+1,stop@mR+1
  4608   001CCE  C034  F01F         	movff	returnHome@straightRamp,stop@straightRamp
  4609   001CD2  EC00  F024         	call	_stop	;wreg free
  4610   001CD6                     l5118:
  4611                           
  4612                           ;dc_motor.c: 205:     while (i>0) {
  4613   001CD6  503C               	movf	returnHome@i^0,w,c
  4614   001CD8  A4D8               	btfss	status,2,c
  4615   001CDA  EF71  F00E         	goto	u4301
  4616   001CDE  EF73  F00E         	goto	u4300
  4617   001CE2                     u4301:
  4618   001CE2  EFBF  F00B         	goto	l5032
  4619   001CE6                     u4300:
  4620   001CE6  0012               	return		;funcret
  4621   001CE8                     __end_of_returnHome:
  4622                           	callstack 0
  4623                           
  4624 ;; *************** function _lostReturnHome *****************
  4625 ;; Defined at:
  4626 ;;		line 277 in file "dc_motor.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  4629 ;;		 -> main@motorL(10), 
  4630 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  4631 ;;		 -> main@motorR(10), 
  4632 ;;  moveSequence    2   44[COMRAM] PTR unsigned char 
  4633 ;;		 -> main@moveSequence(40), 
  4634 ;;  straightTime    2   46[COMRAM] PTR unsigned int 
  4635 ;;		 -> main@straightTime(82), 
  4636 ;;  curMove         1   48[COMRAM] unsigned char 
  4637 ;;  straightSpee    1   49[COMRAM] unsigned char 
  4638 ;;  reverseDurat    1   50[COMRAM] unsigned char 
  4639 ;;  straightRamp    1   51[COMRAM] unsigned char 
  4640 ;;  turnSpeed       1   52[COMRAM] unsigned char 
  4641 ;;  turnDuration    1   53[COMRAM] unsigned char 
  4642 ;;  turnRamp        1   54[COMRAM] unsigned char 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  i               1   59[COMRAM] unsigned char 
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      void 
  4647 ;; Registers used:
  4648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4654 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4656 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4657 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4658 ;;Total ram usage:       20 bytes
  4659 ;; Hardware stack levels used: 1
  4660 ;; Hardware stack levels required when called: 8
  4661 ;; This function calls:
  4662 ;;		_fullSpeedAhead
  4663 ;;		_get16bitTMR0val
  4664 ;;		_resetTimer
  4665 ;;		_reverseOneSquare
  4666 ;;		_stop
  4667 ;;		_turnLeft
  4668 ;;		_turnRight
  4669 ;; This function is called by:
  4670 ;;		_main
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text5
  4675   001CE8                     __ptext5:
  4676                           	callstack 0
  4677   001CE8                     _lostReturnHome:
  4678                           	callstack 22
  4679   001CE8                     
  4680                           ;dc_motor.c: 277: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 278: {;dc_motor.c: 279:     LATDbits.LATD7 = LATHbits.LA
      +                          TH3 = 1;
  4681   001CE8  8680               	bsf	128,3,c	;volatile
  4682   001CEA  8E7C               	bsf	124,7,c	;volatile
  4683   001CEC                     
  4684                           ;dc_motor.c: 280:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4685   001CEC  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  4686   001CF0  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4687   001CF4  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  4688   001CF8  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4689   001CFC  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4690   001D00  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4691   001D04  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4692   001D08  ECDA  F021         	call	_turnLeft	;wreg free
  4693   001D0C                     
  4694                           ;dc_motor.c: 281:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4695   001D0C  0E05               	movlw	5
  4696   001D0E  6E39               	movwf	(??_lostReturnHome+1)^0,c
  4697   001D10  0E0F               	movlw	15
  4698   001D12  6E38               	movwf	??_lostReturnHome^0,c
  4699   001D14  0EF1               	movlw	241
  4700   001D16                     u5977:
  4701   001D16  2EE8               	decfsz	wreg,f,c
  4702   001D18  D7FE               	bra	u5977
  4703   001D1A  2E38               	decfsz	??_lostReturnHome^0,f,c
  4704   001D1C  D7FC               	bra	u5977
  4705   001D1E  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  4706   001D20  D7FA               	bra	u5977
  4707   001D22  0000               	nop	
  4708   001D24                     
  4709                           ;dc_motor.c: 282:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4710   001D24  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  4711   001D28  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4712   001D2C  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  4713   001D30  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4714   001D34  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4715   001D38  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4716   001D3C  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4717   001D40  ECDA  F021         	call	_turnLeft	;wreg free
  4718                           
  4719                           ;dc_motor.c: 283:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4720   001D44  0E05               	movlw	5
  4721   001D46  6E39               	movwf	(??_lostReturnHome+1)^0,c
  4722   001D48  0E0F               	movlw	15
  4723   001D4A  6E38               	movwf	??_lostReturnHome^0,c
  4724   001D4C  0EF1               	movlw	241
  4725   001D4E                     u5987:
  4726   001D4E  2EE8               	decfsz	wreg,f,c
  4727   001D50  D7FE               	bra	u5987
  4728   001D52  2E38               	decfsz	??_lostReturnHome^0,f,c
  4729   001D54  D7FC               	bra	u5987
  4730   001D56  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  4731   001D58  D7FA               	bra	u5987
  4732   001D5A  0000               	nop	
  4733   001D5C                     
  4734                           ;dc_motor.c: 284:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4735   001D5C  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  4736   001D60  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4737   001D64  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  4738   001D68  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4739   001D6C  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4740   001D70  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4741   001D74  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4742   001D78  ECDA  F021         	call	_turnLeft	;wreg free
  4743   001D7C                     
  4744                           ;dc_motor.c: 285:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4745   001D7C  0E05               	movlw	5
  4746   001D7E  6E39               	movwf	(??_lostReturnHome+1)^0,c
  4747   001D80  0E0F               	movlw	15
  4748   001D82  6E38               	movwf	??_lostReturnHome^0,c
  4749   001D84  0EF1               	movlw	241
  4750   001D86                     u5997:
  4751   001D86  2EE8               	decfsz	wreg,f,c
  4752   001D88  D7FE               	bra	u5997
  4753   001D8A  2E38               	decfsz	??_lostReturnHome^0,f,c
  4754   001D8C  D7FC               	bra	u5997
  4755   001D8E  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  4756   001D90  D7FA               	bra	u5997
  4757   001D92  0000               	nop	
  4758                           
  4759                           ;dc_motor.c: 286:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4760   001D94  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  4761   001D98  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4762   001D9C  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  4763   001DA0  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4764   001DA4  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4765   001DA8  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4766   001DAC  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4767   001DB0  ECDA  F021         	call	_turnLeft	;wreg free
  4768   001DB4                     
  4769                           ;dc_motor.c: 287:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4770   001DB4  0E05               	movlw	5
  4771   001DB6  6E39               	movwf	(??_lostReturnHome+1)^0,c
  4772   001DB8  0E0F               	movlw	15
  4773   001DBA  6E38               	movwf	??_lostReturnHome^0,c
  4774   001DBC  0EF1               	movlw	241
  4775   001DBE                     u6007:
  4776   001DBE  2EE8               	decfsz	wreg,f,c
  4777   001DC0  D7FE               	bra	u6007
  4778   001DC2  2E38               	decfsz	??_lostReturnHome^0,f,c
  4779   001DC4  D7FC               	bra	u6007
  4780   001DC6  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  4781   001DC8  D7FA               	bra	u6007
  4782   001DCA  0000               	nop	
  4783   001DCC                     
  4784                           ;dc_motor.c: 288:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4785   001DCC  C029  F01B         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4786   001DD0  C02A  F01C         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4787   001DD4  C02B  F01D         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4788   001DD8  C02C  F01E         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4789   001DDC  C032  F01F         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4790   001DE0  C034  F020         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4791   001DE4  EC84  F024         	call	_fullSpeedAhead	;wreg free
  4792   001DE8                     
  4793                           ;dc_motor.c: 289:     resetTimer();
  4794   001DE8  ECAC  F028         	call	_resetTimer	;wreg free
  4795   001DEC                     
  4796                           ;dc_motor.c: 290:     lost = 0;
  4797   001DEC  0E00               	movlw	0
  4798   001DEE  6E43               	movwf	_lost^0,c
  4799   001DF0                     l5682:
  4800   001DF0  5043               	movf	_lost^0,w,c
  4801   001DF2  B4D8               	btfsc	status,2,c
  4802   001DF4  EFFE  F00E         	goto	u4951
  4803   001DF8  EF00  F00F         	goto	u4950
  4804   001DFC                     u4951:
  4805   001DFC  EFF8  F00E         	goto	l5682
  4806   001E00                     u4950:
  4807   001E00                     
  4808                           ;dc_motor.c: 292:     stop(mL, mR, straightRamp);
  4809   001E00  C029  F01B         	movff	lostReturnHome@mL,stop@mL
  4810   001E04  C02A  F01C         	movff	lostReturnHome@mL+1,stop@mL+1
  4811   001E08  C02B  F01D         	movff	lostReturnHome@mR,stop@mR
  4812   001E0C  C02C  F01E         	movff	lostReturnHome@mR+1,stop@mR+1
  4813   001E10  C034  F01F         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4814   001E14  EC00  F024         	call	_stop	;wreg free
  4815   001E18                     
  4816                           ;dc_motor.c: 294:     char i=curMove;
  4817   001E18  C031  F03C         	movff	lostReturnHome@curMove,lostReturnHome@i
  4818                           
  4819                           ;dc_motor.c: 295:     while (i>0) {
  4820   001E1C  EFBC  F011         	goto	l5774
  4821   001E20                     l5688:
  4822                           
  4823                           ;dc_motor.c: 296:         i--;
  4824   001E20  063C               	decf	lostReturnHome@i^0,f,c
  4825   001E22                     
  4826                           ;dc_motor.c: 298:         if (moveSequence[i] == 1) {
  4827   001E22  503C               	movf	lostReturnHome@i^0,w,c
  4828   001E24  242D               	addwf	lostReturnHome@moveSequence^0,w,c
  4829   001E26  6ED9               	movwf	fsr2l,c
  4830   001E28  0E00               	movlw	0
  4831   001E2A  202E               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4832   001E2C  6EDA               	movwf	fsr2h,c
  4833   001E2E  04DE               	decf	postinc2,w,c
  4834   001E30  A4D8               	btfss	status,2,c
  4835   001E32  EF1D  F00F         	goto	u4961
  4836   001E36  EF1F  F00F         	goto	u4960
  4837   001E3A                     u4961:
  4838   001E3A  EF59  F00F         	goto	l5698
  4839   001E3E                     u4960:
  4840   001E3E                     
  4841                           ;dc_motor.c: 299:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4842   001E3E  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  4843   001E42  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4844   001E46  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  4845   001E4A  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4846   001E4E  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4847   001E52  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4848   001E56  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4849   001E5A  ECDA  F021         	call	_turnLeft	;wreg free
  4850   001E5E                     
  4851                           ;dc_motor.c: 300:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4852   001E5E  0E05               	movlw	5
  4853   001E60  6E39               	movwf	(??_lostReturnHome+1)^0,c
  4854   001E62  0E0F               	movlw	15
  4855   001E64  6E38               	movwf	??_lostReturnHome^0,c
  4856   001E66  0EF1               	movlw	241
  4857   001E68                     u6017:
  4858   001E68  2EE8               	decfsz	wreg,f,c
  4859   001E6A  D7FE               	bra	u6017
  4860   001E6C  2E38               	decfsz	??_lostReturnHome^0,f,c
  4861   001E6E  D7FC               	bra	u6017
  4862   001E70  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  4863   001E72  D7FA               	bra	u6017
  4864   001E74  0000               	nop	
  4865   001E76                     
  4866                           ;dc_motor.c: 301:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4867   001E76  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  4868   001E7A  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4869   001E7E  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  4870   001E82  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4871   001E86  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4872   001E8A  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4873   001E8E  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4874   001E92  ECDA  F021         	call	_turnLeft	;wreg free
  4875                           
  4876                           ;dc_motor.c: 302:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4877   001E96  0E05               	movlw	5
  4878   001E98  6E39               	movwf	(??_lostReturnHome+1)^0,c
  4879   001E9A  0E0F               	movlw	15
  4880   001E9C  6E38               	movwf	??_lostReturnHome^0,c
  4881   001E9E  0EF1               	movlw	241
  4882   001EA0                     u6027:
  4883   001EA0  2EE8               	decfsz	wreg,f,c
  4884   001EA2  D7FE               	bra	u6027
  4885   001EA4  2E38               	decfsz	??_lostReturnHome^0,f,c
  4886   001EA6  D7FC               	bra	u6027
  4887   001EA8  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  4888   001EAA  D7FA               	bra	u6027
  4889   001EAC  0000               	nop	
  4890                           
  4891                           ;dc_motor.c: 303:         }
  4892   001EAE  EF87  F011         	goto	l598
  4893   001EB2                     l5698:
  4894   001EB2  503C               	movf	lostReturnHome@i^0,w,c
  4895   001EB4  242D               	addwf	lostReturnHome@moveSequence^0,w,c
  4896   001EB6  6ED9               	movwf	fsr2l,c
  4897   001EB8  0E00               	movlw	0
  4898   001EBA  202E               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4899   001EBC  6EDA               	movwf	fsr2h,c
  4900   001EBE  0E02               	movlw	2
  4901   001EC0  18DE               	xorwf	postinc2,w,c
  4902   001EC2  A4D8               	btfss	status,2,c
  4903   001EC4  EF66  F00F         	goto	u4971
  4904   001EC8  EF68  F00F         	goto	u4970
  4905   001ECC                     u4971:
  4906   001ECC  EFA2  F00F         	goto	l5706
  4907   001ED0                     u4970:
  4908   001ED0                     
  4909                           ;dc_motor.c: 306:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4910   001ED0  C029  F01B         	movff	lostReturnHome@mL,turnRight@mL
  4911   001ED4  C02A  F01C         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4912   001ED8  C02B  F01D         	movff	lostReturnHome@mR,turnRight@mR
  4913   001EDC  C02C  F01E         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4914   001EE0  C035  F01F         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4915   001EE4  C036  F020         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4916   001EE8  C037  F021         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4917   001EEC  ECF0  F020         	call	_turnRight	;wreg free
  4918   001EF0                     
  4919                           ;dc_motor.c: 307:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4920   001EF0  0E05               	movlw	5
  4921   001EF2  6E39               	movwf	(??_lostReturnHome+1)^0,c
  4922   001EF4  0E0F               	movlw	15
  4923   001EF6  6E38               	movwf	??_lostReturnHome^0,c
  4924   001EF8  0EF1               	movlw	241
  4925   001EFA                     u6037:
  4926   001EFA  2EE8               	decfsz	wreg,f,c
  4927   001EFC  D7FE               	bra	u6037
  4928   001EFE  2E38               	decfsz	??_lostReturnHome^0,f,c
  4929   001F00  D7FC               	bra	u6037
  4930   001F02  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  4931   001F04  D7FA               	bra	u6037
  4932   001F06  0000               	nop	
  4933   001F08                     
  4934                           ;dc_motor.c: 308:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4935   001F08  C029  F01B         	movff	lostReturnHome@mL,turnRight@mL
  4936   001F0C  C02A  F01C         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4937   001F10  C02B  F01D         	movff	lostReturnHome@mR,turnRight@mR
  4938   001F14  C02C  F01E         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4939   001F18  C035  F01F         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4940   001F1C  C036  F020         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4941   001F20  C037  F021         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4942   001F24  ECF0  F020         	call	_turnRight	;wreg free
  4943                           
  4944                           ;dc_motor.c: 309:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4945   001F28  0E05               	movlw	5
  4946   001F2A  6E39               	movwf	(??_lostReturnHome+1)^0,c
  4947   001F2C  0E0F               	movlw	15
  4948   001F2E  6E38               	movwf	??_lostReturnHome^0,c
  4949   001F30  0EF1               	movlw	241
  4950   001F32                     u6047:
  4951   001F32  2EE8               	decfsz	wreg,f,c
  4952   001F34  D7FE               	bra	u6047
  4953   001F36  2E38               	decfsz	??_lostReturnHome^0,f,c
  4954   001F38  D7FC               	bra	u6047
  4955   001F3A  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  4956   001F3C  D7FA               	bra	u6047
  4957   001F3E  0000               	nop	
  4958                           
  4959                           ;dc_motor.c: 310:         }
  4960   001F40  EF87  F011         	goto	l598
  4961   001F44                     l5706:
  4962   001F44  503C               	movf	lostReturnHome@i^0,w,c
  4963   001F46  242D               	addwf	lostReturnHome@moveSequence^0,w,c
  4964   001F48  6ED9               	movwf	fsr2l,c
  4965   001F4A  0E00               	movlw	0
  4966   001F4C  202E               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4967   001F4E  6EDA               	movwf	fsr2h,c
  4968   001F50  0E03               	movlw	3
  4969   001F52  18DE               	xorwf	postinc2,w,c
  4970   001F54  A4D8               	btfss	status,2,c
  4971   001F56  EFAF  F00F         	goto	u4981
  4972   001F5A  EFB1  F00F         	goto	u4980
  4973   001F5E                     u4981:
  4974   001F5E  EF23  F010         	goto	l5720
  4975   001F62                     u4980:
  4976   001F62                     
  4977                           ;dc_motor.c: 313:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4978   001F62  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  4979   001F66  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4980   001F6A  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  4981   001F6E  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4982   001F72  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4983   001F76  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4984   001F7A  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4985   001F7E  ECDA  F021         	call	_turnLeft	;wreg free
  4986   001F82                     
  4987                           ;dc_motor.c: 314:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4988   001F82  0E05               	movlw	5
  4989   001F84  6E39               	movwf	(??_lostReturnHome+1)^0,c
  4990   001F86  0E0F               	movlw	15
  4991   001F88  6E38               	movwf	??_lostReturnHome^0,c
  4992   001F8A  0EF1               	movlw	241
  4993   001F8C                     u6057:
  4994   001F8C  2EE8               	decfsz	wreg,f,c
  4995   001F8E  D7FE               	bra	u6057
  4996   001F90  2E38               	decfsz	??_lostReturnHome^0,f,c
  4997   001F92  D7FC               	bra	u6057
  4998   001F94  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  4999   001F96  D7FA               	bra	u6057
  5000   001F98  0000               	nop	
  5001   001F9A                     
  5002                           ;dc_motor.c: 315:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5003   001F9A  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  5004   001F9E  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5005   001FA2  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  5006   001FA6  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5007   001FAA  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5008   001FAE  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5009   001FB2  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5010   001FB6  ECDA  F021         	call	_turnLeft	;wreg free
  5011                           
  5012                           ;dc_motor.c: 316:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5013   001FBA  0E05               	movlw	5
  5014   001FBC  6E39               	movwf	(??_lostReturnHome+1)^0,c
  5015   001FBE  0E0F               	movlw	15
  5016   001FC0  6E38               	movwf	??_lostReturnHome^0,c
  5017   001FC2  0EF1               	movlw	241
  5018   001FC4                     u6067:
  5019   001FC4  2EE8               	decfsz	wreg,f,c
  5020   001FC6  D7FE               	bra	u6067
  5021   001FC8  2E38               	decfsz	??_lostReturnHome^0,f,c
  5022   001FCA  D7FC               	bra	u6067
  5023   001FCC  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  5024   001FCE  D7FA               	bra	u6067
  5025   001FD0  0000               	nop	
  5026   001FD2                     
  5027                           ;dc_motor.c: 317:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5028   001FD2  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  5029   001FD6  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5030   001FDA  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  5031   001FDE  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5032   001FE2  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5033   001FE6  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5034   001FEA  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5035   001FEE  ECDA  F021         	call	_turnLeft	;wreg free
  5036   001FF2                     
  5037                           ;dc_motor.c: 318:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5038   001FF2  0E05               	movlw	5
  5039   001FF4  6E39               	movwf	(??_lostReturnHome+1)^0,c
  5040   001FF6  0E0F               	movlw	15
  5041   001FF8  6E38               	movwf	??_lostReturnHome^0,c
  5042   001FFA  0EF1               	movlw	241
  5043   001FFC                     u6077:
  5044   001FFC  2EE8               	decfsz	wreg,f,c
  5045   001FFE  D7FE               	bra	u6077
  5046   002000  2E38               	decfsz	??_lostReturnHome^0,f,c
  5047   002002  D7FC               	bra	u6077
  5048   002004  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  5049   002006  D7FA               	bra	u6077
  5050   002008  0000               	nop	
  5051                           
  5052                           ;dc_motor.c: 319:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5053   00200A  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  5054   00200E  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5055   002012  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  5056   002016  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5057   00201A  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5058   00201E  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5059   002022  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5060   002026  ECDA  F021         	call	_turnLeft	;wreg free
  5061   00202A                     l5718:
  5062                           
  5063                           ;dc_motor.c: 320:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5064   00202A  0E05               	movlw	5
  5065   00202C  6E39               	movwf	(??_lostReturnHome+1)^0,c
  5066   00202E  0E0F               	movlw	15
  5067   002030  6E38               	movwf	??_lostReturnHome^0,c
  5068   002032  0EF1               	movlw	241
  5069   002034                     u6087:
  5070   002034  2EE8               	decfsz	wreg,f,c
  5071   002036  D7FE               	bra	u6087
  5072   002038  2E38               	decfsz	??_lostReturnHome^0,f,c
  5073   00203A  D7FC               	bra	u6087
  5074   00203C  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  5075   00203E  D7FA               	bra	u6087
  5076   002040  0000               	nop	
  5077                           
  5078                           ;dc_motor.c: 321:         }
  5079   002042  EF87  F011         	goto	l598
  5080   002046                     l5720:
  5081   002046  503C               	movf	lostReturnHome@i^0,w,c
  5082   002048  242D               	addwf	lostReturnHome@moveSequence^0,w,c
  5083   00204A  6ED9               	movwf	fsr2l,c
  5084   00204C  0E00               	movlw	0
  5085   00204E  202E               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5086   002050  6EDA               	movwf	fsr2h,c
  5087   002052  0E04               	movlw	4
  5088   002054  18DE               	xorwf	postinc2,w,c
  5089   002056  A4D8               	btfss	status,2,c
  5090   002058  EF30  F010         	goto	u4991
  5091   00205C  EF32  F010         	goto	u4990
  5092   002060                     u4991:
  5093   002060  EF7C  F010         	goto	l5732
  5094   002064                     u4990:
  5095   002064                     
  5096                           ;dc_motor.c: 324:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5097   002064  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  5098   002068  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5099   00206C  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  5100   002070  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5101   002074  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5102   002078  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5103   00207C  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5104   002080  ECDA  F021         	call	_turnLeft	;wreg free
  5105   002084                     
  5106                           ;dc_motor.c: 325:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5107   002084  0E05               	movlw	5
  5108   002086  6E39               	movwf	(??_lostReturnHome+1)^0,c
  5109   002088  0E0F               	movlw	15
  5110   00208A  6E38               	movwf	??_lostReturnHome^0,c
  5111   00208C  0EF1               	movlw	241
  5112   00208E                     u6097:
  5113   00208E  2EE8               	decfsz	wreg,f,c
  5114   002090  D7FE               	bra	u6097
  5115   002092  2E38               	decfsz	??_lostReturnHome^0,f,c
  5116   002094  D7FC               	bra	u6097
  5117   002096  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  5118   002098  D7FA               	bra	u6097
  5119   00209A  0000               	nop	
  5120   00209C                     
  5121                           ;dc_motor.c: 326:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5122   00209C  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  5123   0020A0  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5124   0020A4  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  5125   0020A8  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5126   0020AC  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5127   0020B0  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5128   0020B4  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5129   0020B8  ECDA  F021         	call	_turnLeft	;wreg free
  5130                           
  5131                           ;dc_motor.c: 327:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5132   0020BC  0E05               	movlw	5
  5133   0020BE  6E39               	movwf	(??_lostReturnHome+1)^0,c
  5134   0020C0  0E0F               	movlw	15
  5135   0020C2  6E38               	movwf	??_lostReturnHome^0,c
  5136   0020C4  0EF1               	movlw	241
  5137   0020C6                     u6107:
  5138   0020C6  2EE8               	decfsz	wreg,f,c
  5139   0020C8  D7FE               	bra	u6107
  5140   0020CA  2E38               	decfsz	??_lostReturnHome^0,f,c
  5141   0020CC  D7FC               	bra	u6107
  5142   0020CE  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  5143   0020D0  D7FA               	bra	u6107
  5144   0020D2  0000               	nop	
  5145   0020D4                     
  5146                           ;dc_motor.c: 328:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5147   0020D4  C029  F01B         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5148   0020D8  C02A  F01C         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5149   0020DC  C02B  F01D         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5150   0020E0  C02C  F01E         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5151   0020E4  C032  F01F         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5152   0020E8  C033  F020         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5153   0020EC  C034  F021         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5154   0020F0  ECFD  F01F         	call	_reverseOneSquare	;wreg free
  5155   0020F4  EF15  F010         	goto	l5718
  5156   0020F8                     l5732:
  5157   0020F8  503C               	movf	lostReturnHome@i^0,w,c
  5158   0020FA  242D               	addwf	lostReturnHome@moveSequence^0,w,c
  5159   0020FC  6ED9               	movwf	fsr2l,c
  5160   0020FE  0E00               	movlw	0
  5161   002100  202E               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5162   002102  6EDA               	movwf	fsr2h,c
  5163   002104  0E05               	movlw	5
  5164   002106  18DE               	xorwf	postinc2,w,c
  5165   002108  A4D8               	btfss	status,2,c
  5166   00210A  EF89  F010         	goto	u5001
  5167   00210E  EF8B  F010         	goto	u5000
  5168   002112                     u5001:
  5169   002112  EFD5  F010         	goto	l5744
  5170   002116                     u5000:
  5171   002116                     
  5172                           ;dc_motor.c: 333:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5173   002116  C029  F01B         	movff	lostReturnHome@mL,turnRight@mL
  5174   00211A  C02A  F01C         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5175   00211E  C02B  F01D         	movff	lostReturnHome@mR,turnRight@mR
  5176   002122  C02C  F01E         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5177   002126  C035  F01F         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5178   00212A  C036  F020         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5179   00212E  C037  F021         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5180   002132  ECF0  F020         	call	_turnRight	;wreg free
  5181   002136                     
  5182                           ;dc_motor.c: 334:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5183   002136  0E05               	movlw	5
  5184   002138  6E39               	movwf	(??_lostReturnHome+1)^0,c
  5185   00213A  0E0F               	movlw	15
  5186   00213C  6E38               	movwf	??_lostReturnHome^0,c
  5187   00213E  0EF1               	movlw	241
  5188   002140                     u6117:
  5189   002140  2EE8               	decfsz	wreg,f,c
  5190   002142  D7FE               	bra	u6117
  5191   002144  2E38               	decfsz	??_lostReturnHome^0,f,c
  5192   002146  D7FC               	bra	u6117
  5193   002148  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  5194   00214A  D7FA               	bra	u6117
  5195   00214C  0000               	nop	
  5196   00214E                     
  5197                           ;dc_motor.c: 335:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5198   00214E  C029  F01B         	movff	lostReturnHome@mL,turnRight@mL
  5199   002152  C02A  F01C         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5200   002156  C02B  F01D         	movff	lostReturnHome@mR,turnRight@mR
  5201   00215A  C02C  F01E         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5202   00215E  C035  F01F         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5203   002162  C036  F020         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5204   002166  C037  F021         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5205   00216A  ECF0  F020         	call	_turnRight	;wreg free
  5206                           
  5207                           ;dc_motor.c: 336:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5208   00216E  0E05               	movlw	5
  5209   002170  6E39               	movwf	(??_lostReturnHome+1)^0,c
  5210   002172  0E0F               	movlw	15
  5211   002174  6E38               	movwf	??_lostReturnHome^0,c
  5212   002176  0EF1               	movlw	241
  5213   002178                     u6127:
  5214   002178  2EE8               	decfsz	wreg,f,c
  5215   00217A  D7FE               	bra	u6127
  5216   00217C  2E38               	decfsz	??_lostReturnHome^0,f,c
  5217   00217E  D7FC               	bra	u6127
  5218   002180  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  5219   002182  D7FA               	bra	u6127
  5220   002184  0000               	nop	
  5221   002186                     
  5222                           ;dc_motor.c: 337:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5223   002186  C029  F01B         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5224   00218A  C02A  F01C         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5225   00218E  C02B  F01D         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5226   002192  C02C  F01E         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5227   002196  C032  F01F         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5228   00219A  C033  F020         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5229   00219E  C034  F021         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5230   0021A2  ECFD  F01F         	call	_reverseOneSquare	;wreg free
  5231   0021A6  EF15  F010         	goto	l5718
  5232   0021AA                     l5744:
  5233   0021AA  503C               	movf	lostReturnHome@i^0,w,c
  5234   0021AC  242D               	addwf	lostReturnHome@moveSequence^0,w,c
  5235   0021AE  6ED9               	movwf	fsr2l,c
  5236   0021B0  0E00               	movlw	0
  5237   0021B2  202E               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5238   0021B4  6EDA               	movwf	fsr2h,c
  5239   0021B6  0E06               	movlw	6
  5240   0021B8  18DE               	xorwf	postinc2,w,c
  5241   0021BA  A4D8               	btfss	status,2,c
  5242   0021BC  EFE2  F010         	goto	u5011
  5243   0021C0  EFE4  F010         	goto	u5010
  5244   0021C4                     u5011:
  5245   0021C4  EF2E  F011         	goto	l5756
  5246   0021C8                     u5010:
  5247   0021C8                     
  5248                           ;dc_motor.c: 342:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5249   0021C8  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  5250   0021CC  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5251   0021D0  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  5252   0021D4  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5253   0021D8  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5254   0021DC  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5255   0021E0  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5256   0021E4  ECDA  F021         	call	_turnLeft	;wreg free
  5257   0021E8                     
  5258                           ;dc_motor.c: 343:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5259   0021E8  0E05               	movlw	5
  5260   0021EA  6E39               	movwf	(??_lostReturnHome+1)^0,c
  5261   0021EC  0E0F               	movlw	15
  5262   0021EE  6E38               	movwf	??_lostReturnHome^0,c
  5263   0021F0  0EF1               	movlw	241
  5264   0021F2                     u6137:
  5265   0021F2  2EE8               	decfsz	wreg,f,c
  5266   0021F4  D7FE               	bra	u6137
  5267   0021F6  2E38               	decfsz	??_lostReturnHome^0,f,c
  5268   0021F8  D7FC               	bra	u6137
  5269   0021FA  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  5270   0021FC  D7FA               	bra	u6137
  5271   0021FE  0000               	nop	
  5272   002200                     
  5273                           ;dc_motor.c: 344:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5274   002200  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  5275   002204  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5276   002208  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  5277   00220C  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5278   002210  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5279   002214  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5280   002218  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5281   00221C  ECDA  F021         	call	_turnLeft	;wreg free
  5282                           
  5283                           ;dc_motor.c: 345:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5284   002220  0E05               	movlw	5
  5285   002222  6E39               	movwf	(??_lostReturnHome+1)^0,c
  5286   002224  0E0F               	movlw	15
  5287   002226  6E38               	movwf	??_lostReturnHome^0,c
  5288   002228  0EF1               	movlw	241
  5289   00222A                     u6147:
  5290   00222A  2EE8               	decfsz	wreg,f,c
  5291   00222C  D7FE               	bra	u6147
  5292   00222E  2E38               	decfsz	??_lostReturnHome^0,f,c
  5293   002230  D7FC               	bra	u6147
  5294   002232  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  5295   002234  D7FA               	bra	u6147
  5296   002236  0000               	nop	
  5297   002238                     
  5298                           ;dc_motor.c: 346:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5299   002238  C029  F01B         	movff	lostReturnHome@mL,turnLeft@mL
  5300   00223C  C02A  F01C         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5301   002240  C02B  F01D         	movff	lostReturnHome@mR,turnLeft@mR
  5302   002244  C02C  F01E         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5303   002248  C035  F01F         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5304   00224C  C036  F020         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5305   002250  C037  F021         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5306   002254  ECDA  F021         	call	_turnLeft	;wreg free
  5307   002258  EF15  F010         	goto	l5718
  5308   00225C                     l5756:
  5309   00225C  503C               	movf	lostReturnHome@i^0,w,c
  5310   00225E  242D               	addwf	lostReturnHome@moveSequence^0,w,c
  5311   002260  6ED9               	movwf	fsr2l,c
  5312   002262  0E00               	movlw	0
  5313   002264  202E               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5314   002266  6EDA               	movwf	fsr2h,c
  5315   002268  0E07               	movlw	7
  5316   00226A  18DE               	xorwf	postinc2,w,c
  5317   00226C  A4D8               	btfss	status,2,c
  5318   00226E  EF3B  F011         	goto	u5021
  5319   002272  EF3D  F011         	goto	u5020
  5320   002276                     u5021:
  5321   002276  EF87  F011         	goto	l604
  5322   00227A                     u5020:
  5323   00227A                     
  5324                           ;dc_motor.c: 351:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5325   00227A  C029  F01B         	movff	lostReturnHome@mL,turnRight@mL
  5326   00227E  C02A  F01C         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5327   002282  C02B  F01D         	movff	lostReturnHome@mR,turnRight@mR
  5328   002286  C02C  F01E         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5329   00228A  C035  F01F         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5330   00228E  C036  F020         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5331   002292  C037  F021         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5332   002296  ECF0  F020         	call	_turnRight	;wreg free
  5333   00229A                     
  5334                           ;dc_motor.c: 352:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5335   00229A  0E05               	movlw	5
  5336   00229C  6E39               	movwf	(??_lostReturnHome+1)^0,c
  5337   00229E  0E0F               	movlw	15
  5338   0022A0  6E38               	movwf	??_lostReturnHome^0,c
  5339   0022A2  0EF1               	movlw	241
  5340   0022A4                     u6157:
  5341   0022A4  2EE8               	decfsz	wreg,f,c
  5342   0022A6  D7FE               	bra	u6157
  5343   0022A8  2E38               	decfsz	??_lostReturnHome^0,f,c
  5344   0022AA  D7FC               	bra	u6157
  5345   0022AC  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  5346   0022AE  D7FA               	bra	u6157
  5347   0022B0  0000               	nop	
  5348   0022B2                     
  5349                           ;dc_motor.c: 353:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5350   0022B2  C029  F01B         	movff	lostReturnHome@mL,turnRight@mL
  5351   0022B6  C02A  F01C         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5352   0022BA  C02B  F01D         	movff	lostReturnHome@mR,turnRight@mR
  5353   0022BE  C02C  F01E         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5354   0022C2  C035  F01F         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5355   0022C6  C036  F020         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5356   0022CA  C037  F021         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5357   0022CE  ECF0  F020         	call	_turnRight	;wreg free
  5358                           
  5359                           ;dc_motor.c: 354:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5360   0022D2  0E05               	movlw	5
  5361   0022D4  6E39               	movwf	(??_lostReturnHome+1)^0,c
  5362   0022D6  0E0F               	movlw	15
  5363   0022D8  6E38               	movwf	??_lostReturnHome^0,c
  5364   0022DA  0EF1               	movlw	241
  5365   0022DC                     u6167:
  5366   0022DC  2EE8               	decfsz	wreg,f,c
  5367   0022DE  D7FE               	bra	u6167
  5368   0022E0  2E38               	decfsz	??_lostReturnHome^0,f,c
  5369   0022E2  D7FC               	bra	u6167
  5370   0022E4  2E39               	decfsz	(??_lostReturnHome+1)^0,f,c
  5371   0022E6  D7FA               	bra	u6167
  5372   0022E8  0000               	nop	
  5373   0022EA                     
  5374                           ;dc_motor.c: 355:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5375   0022EA  C029  F01B         	movff	lostReturnHome@mL,turnRight@mL
  5376   0022EE  C02A  F01C         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5377   0022F2  C02B  F01D         	movff	lostReturnHome@mR,turnRight@mR
  5378   0022F6  C02C  F01E         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5379   0022FA  C035  F01F         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5380   0022FE  C036  F020         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5381   002302  C037  F021         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5382   002306  ECF0  F020         	call	_turnRight	;wreg free
  5383   00230A  EF15  F010         	goto	l5718
  5384   00230E                     l604:
  5385   00230E                     l598:
  5386                           
  5387                           ;dc_motor.c: 359:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  5388   00230E  C029  F01B         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  5389   002312  C02A  F01C         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  5390   002316  C02B  F01D         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  5391   00231A  C02C  F01E         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  5392   00231E  C032  F01F         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  5393   002322  C034  F020         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  5394   002326  EC84  F024         	call	_fullSpeedAhead	;wreg free
  5395   00232A                     
  5396                           ;dc_motor.c: 360:         resetTimer();
  5397   00232A  ECAC  F028         	call	_resetTimer	;wreg free
  5398   00232E                     l5770:
  5399   00232E  503C               	movf	lostReturnHome@i^0,w,c
  5400   002330  0D02               	mullw	2
  5401   002332  CFF3 F038          	movff	prodl,??_lostReturnHome
  5402   002336  CFF4 F039          	movff	prodh,??_lostReturnHome+1
  5403   00233A  5038               	movf	??_lostReturnHome^0,w,c
  5404   00233C  242F               	addwf	lostReturnHome@straightTime^0,w,c
  5405   00233E  6ED9               	movwf	fsr2l,c
  5406   002340  5039               	movf	(??_lostReturnHome+1)^0,w,c
  5407   002342  2030               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  5408   002344  6EDA               	movwf	fsr2h,c
  5409   002346  ECAA  F027         	call	_get16bitTMR0val	;wreg free
  5410   00234A  50DE               	movf	postinc2,w,c
  5411   00234C  5C08               	subwf	?_get16bitTMR0val^0,w,c
  5412   00234E  50DE               	movf	postinc2,w,c
  5413   002350  5809               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  5414   002352  A0D8               	btfss	status,0,c
  5415   002354  EFAE  F011         	goto	u5031
  5416   002358  EFB0  F011         	goto	u5030
  5417   00235C                     u5031:
  5418   00235C  EF97  F011         	goto	l5770
  5419   002360                     u5030:
  5420   002360                     
  5421                           ;dc_motor.c: 362:         stop(mL, mR, straightRamp);
  5422   002360  C029  F01B         	movff	lostReturnHome@mL,stop@mL
  5423   002364  C02A  F01C         	movff	lostReturnHome@mL+1,stop@mL+1
  5424   002368  C02B  F01D         	movff	lostReturnHome@mR,stop@mR
  5425   00236C  C02C  F01E         	movff	lostReturnHome@mR+1,stop@mR+1
  5426   002370  C034  F01F         	movff	lostReturnHome@straightRamp,stop@straightRamp
  5427   002374  EC00  F024         	call	_stop	;wreg free
  5428   002378                     l5774:
  5429                           
  5430                           ;dc_motor.c: 295:     while (i>0) {
  5431   002378  503C               	movf	lostReturnHome@i^0,w,c
  5432   00237A  A4D8               	btfss	status,2,c
  5433   00237C  EFC2  F011         	goto	u5041
  5434   002380  EFC4  F011         	goto	u5040
  5435   002384                     u5041:
  5436   002384  EF10  F00F         	goto	l5688
  5437   002388                     u5040:
  5438   002388  0012               	return		;funcret
  5439   00238A                     __end_of_lostReturnHome:
  5440                           	callstack 0
  5441                           
  5442 ;; *************** function _stop *****************
  5443 ;; Defined at:
  5444 ;;		line 367 in file "dc_motor.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  5447 ;;		 -> main@motorL(10), 
  5448 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  5449 ;;		 -> main@motorR(10), 
  5450 ;;  straightRamp    1   30[COMRAM] unsigned char 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  cur_power       2   36[COMRAM] int 
  5453 ;;  i               2   34[COMRAM] int 
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  1    wreg      void 
  5456 ;; Registers used:
  5457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5463 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5464 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5465 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5466 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5467 ;;Total ram usage:       12 bytes
  5468 ;; Hardware stack levels used: 1
  5469 ;; Hardware stack levels required when called: 7
  5470 ;; This function calls:
  5471 ;;		_setMotorPWM
  5472 ;; This function is called by:
  5473 ;;		_main
  5474 ;;		_returnHome
  5475 ;;		_lostReturnHome
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text6
  5480   004800                     __ptext6:
  5481                           	callstack 0
  5482   004800                     _stop:
  5483                           	callstack 23
  5484   004800                     
  5485                           ;dc_motor.c: 367: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 368: {;dc_motor.c: 369:     mL->direction = 1;
  5486   004800  EE20 F001          	lfsr	2,1
  5487   004804  501B               	movf	stop@mL^0,w,c
  5488   004806  26D9               	addwf	fsr2l,f,c
  5489   004808  501C               	movf	(stop@mL+1)^0,w,c
  5490   00480A  22DA               	addwfc	fsr2h,f,c
  5491   00480C  0E01               	movlw	1
  5492   00480E  6EDF               	movwf	indf2,c
  5493                           
  5494                           ;dc_motor.c: 370:     mR->direction = 1;
  5495   004810  EE20 F001          	lfsr	2,1
  5496   004814  501D               	movf	stop@mR^0,w,c
  5497   004816  26D9               	addwf	fsr2l,f,c
  5498   004818  501E               	movf	(stop@mR+1)^0,w,c
  5499   00481A  22DA               	addwfc	fsr2h,f,c
  5500   00481C  0E01               	movlw	1
  5501   00481E  6EDF               	movwf	indf2,c
  5502                           
  5503                           ;dc_motor.c: 371:     int i;;dc_motor.c: 372:     int cur_power;;dc_motor.c: 373:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  5504   004820  C01B  FFD9         	movff	stop@mL,fsr2l
  5505   004824  C01C  FFDA         	movff	stop@mL+1,fsr2h
  5506   004828  50DF               	movf	indf2,w,c
  5507   00482A  6E20               	movwf	??_stop^0,c
  5508   00482C  EE20 F009          	lfsr	2,9
  5509   004830  501B               	movf	stop@mL^0,w,c
  5510   004832  26D9               	addwf	fsr2l,f,c
  5511   004834  501C               	movf	(stop@mL+1)^0,w,c
  5512   004836  22DA               	addwfc	fsr2h,f,c
  5513   004838  50DF               	movf	indf2,w,c
  5514   00483A  6E21               	movwf	(??_stop+1)^0,c
  5515   00483C  5021               	movf	(??_stop+1)^0,w,c
  5516   00483E  5C20               	subwf	??_stop^0,w,c
  5517   004840  6E25               	movwf	stop@cur_power^0,c
  5518   004842  6A26               	clrf	(stop@cur_power+1)^0,c
  5519   004844  A0D8               	btfss	status,0,c
  5520   004846  0626               	decf	(stop@cur_power+1)^0,f,c
  5521   004848                     l4592:
  5522   004848  BE26               	btfsc	(stop@cur_power+1)^0,7,c
  5523   00484A  EF2B  F024         	goto	u3750
  5524   00484E  EF29  F024         	goto	u3751
  5525   004852                     u3751:
  5526   004852  EF2D  F024         	goto	l4596
  5527   004856                     u3750:
  5528   004856  EF79  F024         	goto	l4612
  5529   00485A                     l4596:
  5530                           
  5531                           ;dc_motor.c: 374:         mL->power = cur_power+mL->compensation;
  5532   00485A  EE20 F009          	lfsr	2,9
  5533   00485E  501B               	movf	stop@mL^0,w,c
  5534   004860  26D9               	addwf	fsr2l,f,c
  5535   004862  501C               	movf	(stop@mL+1)^0,w,c
  5536   004864  22DA               	addwfc	fsr2h,f,c
  5537   004866  50DF               	movf	indf2,w,c
  5538   004868  2425               	addwf	stop@cur_power^0,w,c
  5539   00486A  C01B  FFD9         	movff	stop@mL,fsr2l
  5540   00486E  C01C  FFDA         	movff	stop@mL+1,fsr2h
  5541   004872  6EDF               	movwf	indf2,c
  5542                           
  5543                           ;dc_motor.c: 375:         mR->power = cur_power+mR->compensation;
  5544   004874  EE20 F009          	lfsr	2,9
  5545   004878  501D               	movf	stop@mR^0,w,c
  5546   00487A  26D9               	addwf	fsr2l,f,c
  5547   00487C  501E               	movf	(stop@mR+1)^0,w,c
  5548   00487E  22DA               	addwfc	fsr2h,f,c
  5549   004880  50DF               	movf	indf2,w,c
  5550   004882  2425               	addwf	stop@cur_power^0,w,c
  5551   004884  C01D  FFD9         	movff	stop@mR,fsr2l
  5552   004888  C01E  FFDA         	movff	stop@mR+1,fsr2h
  5553   00488C  6EDF               	movwf	indf2,c
  5554   00488E                     
  5555                           ;dc_motor.c: 376:         setMotorPWM(mL);
  5556   00488E  C01B  F015         	movff	stop@mL,setMotorPWM@m
  5557   004892  C01C  F016         	movff	stop@mL+1,setMotorPWM@m+1
  5558   004896  ECC4  F022         	call	_setMotorPWM	;wreg free
  5559   00489A                     
  5560                           ;dc_motor.c: 377:         setMotorPWM(mR);
  5561   00489A  C01D  F015         	movff	stop@mR,setMotorPWM@m
  5562   00489E  C01E  F016         	movff	stop@mR+1,setMotorPWM@m+1
  5563   0048A2  ECC4  F022         	call	_setMotorPWM	;wreg free
  5564   0048A6                     
  5565                           ;dc_motor.c: 378:         for (i=0;i<straightRamp;i++) {
  5566   0048A6  0E00               	movlw	0
  5567   0048A8  6E24               	movwf	(stop@i+1)^0,c
  5568   0048AA  0E00               	movlw	0
  5569   0048AC  6E23               	movwf	stop@i^0,c
  5570   0048AE  EF62  F024         	goto	l619
  5571   0048B2                     l4604:
  5572                           
  5573                           ;dc_motor.c: 379:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5574   0048B2  0ED0               	movlw	208
  5575   0048B4  6E20               	movwf	??_stop^0,c
  5576   0048B6  0ECA               	movlw	202
  5577   0048B8                     u6177:
  5578   0048B8  2EE8               	decfsz	wreg,f,c
  5579   0048BA  D7FE               	bra	u6177
  5580   0048BC  2E20               	decfsz	??_stop^0,f,c
  5581   0048BE  D7FC               	bra	u6177
  5582   0048C0                     
  5583                           ;dc_motor.c: 380:         }
  5584   0048C0  4A23               	infsnz	stop@i^0,f,c
  5585   0048C2  2A24               	incf	(stop@i+1)^0,f,c
  5586   0048C4                     l619:
  5587   0048C4  501F               	movf	stop@straightRamp^0,w,c
  5588   0048C6  6E20               	movwf	??_stop^0,c
  5589   0048C8  6A21               	clrf	(??_stop+1)^0,c
  5590   0048CA  5020               	movf	??_stop^0,w,c
  5591   0048CC  5C23               	subwf	stop@i^0,w,c
  5592   0048CE  5024               	movf	(stop@i+1)^0,w,c
  5593   0048D0  0A80               	xorlw	128
  5594   0048D2  6E22               	movwf	(??_stop+2)^0,c
  5595   0048D4  5021               	movf	(??_stop+1)^0,w,c
  5596   0048D6  0A80               	xorlw	128
  5597   0048D8  5822               	subwfb	(??_stop+2)^0,w,c
  5598   0048DA  A0D8               	btfss	status,0,c
  5599   0048DC  EF72  F024         	goto	u3761
  5600   0048E0  EF74  F024         	goto	u3760
  5601   0048E4                     u3761:
  5602   0048E4  EF59  F024         	goto	l4604
  5603   0048E8                     u3760:
  5604   0048E8                     
  5605                           ;dc_motor.c: 381:     }
  5606   0048E8  0625               	decf	stop@cur_power^0,f,c
  5607   0048EA  A0D8               	btfss	status,0,c
  5608   0048EC  0626               	decf	(stop@cur_power+1)^0,f,c
  5609   0048EE  EF24  F024         	goto	l4592
  5610   0048F2                     l4612:
  5611                           
  5612                           ;dc_motor.c: 382:     mL->power = 0;
  5613   0048F2  C01B  FFD9         	movff	stop@mL,fsr2l
  5614   0048F6  C01C  FFDA         	movff	stop@mL+1,fsr2h
  5615   0048FA  6ADF               	clrf	indf2,c
  5616                           
  5617                           ;dc_motor.c: 383:     mR->power = 0;
  5618   0048FC  C01D  FFD9         	movff	stop@mR,fsr2l
  5619   004900  C01E  FFDA         	movff	stop@mR+1,fsr2h
  5620   004904  6ADF               	clrf	indf2,c
  5621   004906  0012               	return		;funcret
  5622   004908                     __end_of_stop:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function _reverseOneSquare *****************
  5626 ;; Defined at:
  5627 ;;		line 468 in file "dc_motor.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  5630 ;;		 -> main@motorL(10), 
  5631 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  5632 ;;		 -> main@motorR(10), 
  5633 ;;  straightSpee    1   30[COMRAM] unsigned char 
  5634 ;;  reverseDurat    1   31[COMRAM] unsigned char 
  5635 ;;  straightRamp    1   32[COMRAM] unsigned char 
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;  cur_power       2   38[COMRAM] int 
  5638 ;;  i               2   36[COMRAM] int 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5648 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5649 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5650 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5651 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5652 ;;Total ram usage:       14 bytes
  5653 ;; Hardware stack levels used: 1
  5654 ;; Hardware stack levels required when called: 7
  5655 ;; This function calls:
  5656 ;;		_setMotorPWM
  5657 ;; This function is called by:
  5658 ;;		_move
  5659 ;;		_returnHome
  5660 ;;		_lostReturnHome
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text7
  5665   003FFA                     __ptext7:
  5666                           	callstack 0
  5667   003FFA                     _reverseOneSquare:
  5668                           	callstack 22
  5669   003FFA                     
  5670                           ;dc_motor.c: 468: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned char reverseDuration, unsigned char straightRamp);dc_motor.c: 469: {;dc_motor.c
      +                          : 470:     mL->direction = 0;
  5671   003FFA  EE20 F001          	lfsr	2,1
  5672   003FFE  501B               	movf	reverseOneSquare@mL^0,w,c
  5673   004000  26D9               	addwf	fsr2l,f,c
  5674   004002  501C               	movf	(reverseOneSquare@mL+1)^0,w,c
  5675   004004  22DA               	addwfc	fsr2h,f,c
  5676   004006  6ADF               	clrf	indf2,c
  5677                           
  5678                           ;dc_motor.c: 471:     mR->direction = 0;
  5679   004008  EE20 F001          	lfsr	2,1
  5680   00400C  501D               	movf	reverseOneSquare@mR^0,w,c
  5681   00400E  26D9               	addwf	fsr2l,f,c
  5682   004010  501E               	movf	(reverseOneSquare@mR+1)^0,w,c
  5683   004012  22DA               	addwfc	fsr2h,f,c
  5684   004014  6ADF               	clrf	indf2,c
  5685   004016                     
  5686                           ;dc_motor.c: 472:     int i;;dc_motor.c: 473:     int cur_power;;dc_motor.c: 474:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  5687   004016  0E00               	movlw	0
  5688   004018  6E28               	movwf	(reverseOneSquare@cur_power+1)^0,c
  5689   00401A  0E01               	movlw	1
  5690   00401C  6E27               	movwf	reverseOneSquare@cur_power^0,c
  5691   00401E  EF5A  F020         	goto	l4756
  5692   004022                     l4742:
  5693                           
  5694                           ;dc_motor.c: 475:         mL->power = cur_power+mL->compensation;
  5695   004022  EE20 F009          	lfsr	2,9
  5696   004026  501B               	movf	reverseOneSquare@mL^0,w,c
  5697   004028  26D9               	addwf	fsr2l,f,c
  5698   00402A  501C               	movf	(reverseOneSquare@mL+1)^0,w,c
  5699   00402C  22DA               	addwfc	fsr2h,f,c
  5700   00402E  50DF               	movf	indf2,w,c
  5701   004030  2427               	addwf	reverseOneSquare@cur_power^0,w,c
  5702   004032  C01B  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5703   004036  C01C  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5704   00403A  6EDF               	movwf	indf2,c
  5705                           
  5706                           ;dc_motor.c: 476:         mR->power = cur_power+mR->compensation;
  5707   00403C  EE20 F009          	lfsr	2,9
  5708   004040  501D               	movf	reverseOneSquare@mR^0,w,c
  5709   004042  26D9               	addwf	fsr2l,f,c
  5710   004044  501E               	movf	(reverseOneSquare@mR+1)^0,w,c
  5711   004046  22DA               	addwfc	fsr2h,f,c
  5712   004048  50DF               	movf	indf2,w,c
  5713   00404A  2427               	addwf	reverseOneSquare@cur_power^0,w,c
  5714   00404C  C01D  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5715   004050  C01E  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5716   004054  6EDF               	movwf	indf2,c
  5717   004056                     
  5718                           ;dc_motor.c: 477:         setMotorPWM(mL);
  5719   004056  C01B  F015         	movff	reverseOneSquare@mL,setMotorPWM@m
  5720   00405A  C01C  F016         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  5721   00405E  ECC4  F022         	call	_setMotorPWM	;wreg free
  5722   004062                     
  5723                           ;dc_motor.c: 478:         setMotorPWM(mR);
  5724   004062  C01D  F015         	movff	reverseOneSquare@mR,setMotorPWM@m
  5725   004066  C01E  F016         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  5726   00406A  ECC4  F022         	call	_setMotorPWM	;wreg free
  5727   00406E                     
  5728                           ;dc_motor.c: 479:         for (i=0;i<straightRamp;i++) {
  5729   00406E  0E00               	movlw	0
  5730   004070  6E26               	movwf	(reverseOneSquare@i+1)^0,c
  5731   004072  0E00               	movlw	0
  5732   004074  6E25               	movwf	reverseOneSquare@i^0,c
  5733   004076  EF46  F020         	goto	l670
  5734   00407A                     l4750:
  5735                           
  5736                           ;dc_motor.c: 480:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5737   00407A  0ED0               	movlw	208
  5738   00407C  6E22               	movwf	??_reverseOneSquare^0,c
  5739   00407E  0ECA               	movlw	202
  5740   004080                     u6187:
  5741   004080  2EE8               	decfsz	wreg,f,c
  5742   004082  D7FE               	bra	u6187
  5743   004084  2E22               	decfsz	??_reverseOneSquare^0,f,c
  5744   004086  D7FC               	bra	u6187
  5745   004088                     
  5746                           ;dc_motor.c: 481:         }
  5747   004088  4A25               	infsnz	reverseOneSquare@i^0,f,c
  5748   00408A  2A26               	incf	(reverseOneSquare@i+1)^0,f,c
  5749   00408C                     l670:
  5750   00408C  5021               	movf	reverseOneSquare@straightRamp^0,w,c
  5751   00408E  6E22               	movwf	??_reverseOneSquare^0,c
  5752   004090  6A23               	clrf	(??_reverseOneSquare+1)^0,c
  5753   004092  5022               	movf	??_reverseOneSquare^0,w,c
  5754   004094  5C25               	subwf	reverseOneSquare@i^0,w,c
  5755   004096  5026               	movf	(reverseOneSquare@i+1)^0,w,c
  5756   004098  0A80               	xorlw	128
  5757   00409A  6E24               	movwf	(??_reverseOneSquare+2)^0,c
  5758   00409C  5023               	movf	(??_reverseOneSquare+1)^0,w,c
  5759   00409E  0A80               	xorlw	128
  5760   0040A0  5824               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5761   0040A2  A0D8               	btfss	status,0,c
  5762   0040A4  EF56  F020         	goto	u3911
  5763   0040A8  EF58  F020         	goto	u3910
  5764   0040AC                     u3911:
  5765   0040AC  EF3D  F020         	goto	l4750
  5766   0040B0                     u3910:
  5767   0040B0                     
  5768                           ;dc_motor.c: 482:     }
  5769   0040B0  4A27               	infsnz	reverseOneSquare@cur_power^0,f,c
  5770   0040B2  2A28               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  5771   0040B4                     l4756:
  5772   0040B4  501F               	movf	reverseOneSquare@straightSpeed^0,w,c
  5773   0040B6  6E22               	movwf	??_reverseOneSquare^0,c
  5774   0040B8  6A23               	clrf	(??_reverseOneSquare+1)^0,c
  5775   0040BA  5027               	movf	reverseOneSquare@cur_power^0,w,c
  5776   0040BC  5C22               	subwf	??_reverseOneSquare^0,w,c
  5777   0040BE  5023               	movf	(??_reverseOneSquare+1)^0,w,c
  5778   0040C0  0A80               	xorlw	128
  5779   0040C2  6E24               	movwf	(??_reverseOneSquare+2)^0,c
  5780   0040C4  5028               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  5781   0040C6  0A80               	xorlw	128
  5782   0040C8  5824               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5783   0040CA  B0D8               	btfsc	status,0,c
  5784   0040CC  EF6A  F020         	goto	u3921
  5785   0040D0  EF6C  F020         	goto	u3920
  5786   0040D4                     u3921:
  5787   0040D4  EF11  F020         	goto	l4742
  5788   0040D8                     u3920:
  5789   0040D8                     
  5790                           ;dc_motor.c: 484:     for (i=0;i<reverseDuration;i++) {
  5791   0040D8  0E00               	movlw	0
  5792   0040DA  6E26               	movwf	(reverseOneSquare@i+1)^0,c
  5793   0040DC  0E00               	movlw	0
  5794   0040DE  6E25               	movwf	reverseOneSquare@i^0,c
  5795   0040E0  EF7B  F020         	goto	l674
  5796   0040E4                     l4760:
  5797                           
  5798                           ;dc_motor.c: 485:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5799   0040E4  0ED0               	movlw	208
  5800   0040E6  6E22               	movwf	??_reverseOneSquare^0,c
  5801   0040E8  0ECA               	movlw	202
  5802   0040EA                     u6197:
  5803   0040EA  2EE8               	decfsz	wreg,f,c
  5804   0040EC  D7FE               	bra	u6197
  5805   0040EE  2E22               	decfsz	??_reverseOneSquare^0,f,c
  5806   0040F0  D7FC               	bra	u6197
  5807   0040F2                     
  5808                           ;dc_motor.c: 486:         }
  5809   0040F2  4A25               	infsnz	reverseOneSquare@i^0,f,c
  5810   0040F4  2A26               	incf	(reverseOneSquare@i+1)^0,f,c
  5811   0040F6                     l674:
  5812   0040F6  5020               	movf	reverseOneSquare@reverseDuration^0,w,c
  5813   0040F8  6E22               	movwf	??_reverseOneSquare^0,c
  5814   0040FA  6A23               	clrf	(??_reverseOneSquare+1)^0,c
  5815   0040FC  5022               	movf	??_reverseOneSquare^0,w,c
  5816   0040FE  5C25               	subwf	reverseOneSquare@i^0,w,c
  5817   004100  5026               	movf	(reverseOneSquare@i+1)^0,w,c
  5818   004102  0A80               	xorlw	128
  5819   004104  6E24               	movwf	(??_reverseOneSquare+2)^0,c
  5820   004106  5023               	movf	(??_reverseOneSquare+1)^0,w,c
  5821   004108  0A80               	xorlw	128
  5822   00410A  5824               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5823   00410C  A0D8               	btfss	status,0,c
  5824   00410E  EF8B  F020         	goto	u3931
  5825   004112  EF8D  F020         	goto	u3930
  5826   004116                     u3931:
  5827   004116  EF72  F020         	goto	l4760
  5828   00411A                     u3930:
  5829   00411A                     
  5830                           ;dc_motor.c: 488:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  5831   00411A  C01F  F027         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  5832   00411E  6A28               	clrf	(reverseOneSquare@cur_power+1)^0,c
  5833   004120                     l4764:
  5834   004120  BE28               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  5835   004122  EF97  F020         	goto	u3940
  5836   004126  EF95  F020         	goto	u3941
  5837   00412A                     u3941:
  5838   00412A  EF99  F020         	goto	l4768
  5839   00412E                     u3940:
  5840   00412E  EFE5  F020         	goto	l4784
  5841   004132                     l4768:
  5842                           
  5843                           ;dc_motor.c: 489:         mL->power = cur_power+mL->compensation;
  5844   004132  EE20 F009          	lfsr	2,9
  5845   004136  501B               	movf	reverseOneSquare@mL^0,w,c
  5846   004138  26D9               	addwf	fsr2l,f,c
  5847   00413A  501C               	movf	(reverseOneSquare@mL+1)^0,w,c
  5848   00413C  22DA               	addwfc	fsr2h,f,c
  5849   00413E  50DF               	movf	indf2,w,c
  5850   004140  2427               	addwf	reverseOneSquare@cur_power^0,w,c
  5851   004142  C01B  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5852   004146  C01C  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5853   00414A  6EDF               	movwf	indf2,c
  5854                           
  5855                           ;dc_motor.c: 490:         mR->power = cur_power+mR->compensation;
  5856   00414C  EE20 F009          	lfsr	2,9
  5857   004150  501D               	movf	reverseOneSquare@mR^0,w,c
  5858   004152  26D9               	addwf	fsr2l,f,c
  5859   004154  501E               	movf	(reverseOneSquare@mR+1)^0,w,c
  5860   004156  22DA               	addwfc	fsr2h,f,c
  5861   004158  50DF               	movf	indf2,w,c
  5862   00415A  2427               	addwf	reverseOneSquare@cur_power^0,w,c
  5863   00415C  C01D  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5864   004160  C01E  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5865   004164  6EDF               	movwf	indf2,c
  5866   004166                     
  5867                           ;dc_motor.c: 491:         setMotorPWM(mL);
  5868   004166  C01B  F015         	movff	reverseOneSquare@mL,setMotorPWM@m
  5869   00416A  C01C  F016         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  5870   00416E  ECC4  F022         	call	_setMotorPWM	;wreg free
  5871   004172                     
  5872                           ;dc_motor.c: 492:         setMotorPWM(mR);
  5873   004172  C01D  F015         	movff	reverseOneSquare@mR,setMotorPWM@m
  5874   004176  C01E  F016         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  5875   00417A  ECC4  F022         	call	_setMotorPWM	;wreg free
  5876   00417E                     
  5877                           ;dc_motor.c: 493:         for (i=0;i<straightRamp;i++) {
  5878   00417E  0E00               	movlw	0
  5879   004180  6E26               	movwf	(reverseOneSquare@i+1)^0,c
  5880   004182  0E00               	movlw	0
  5881   004184  6E25               	movwf	reverseOneSquare@i^0,c
  5882   004186  EFCE  F020         	goto	l679
  5883   00418A                     l4776:
  5884                           
  5885                           ;dc_motor.c: 494:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5886   00418A  0ED0               	movlw	208
  5887   00418C  6E22               	movwf	??_reverseOneSquare^0,c
  5888   00418E  0ECA               	movlw	202
  5889   004190                     u6207:
  5890   004190  2EE8               	decfsz	wreg,f,c
  5891   004192  D7FE               	bra	u6207
  5892   004194  2E22               	decfsz	??_reverseOneSquare^0,f,c
  5893   004196  D7FC               	bra	u6207
  5894   004198                     
  5895                           ;dc_motor.c: 495:         }
  5896   004198  4A25               	infsnz	reverseOneSquare@i^0,f,c
  5897   00419A  2A26               	incf	(reverseOneSquare@i+1)^0,f,c
  5898   00419C                     l679:
  5899   00419C  5021               	movf	reverseOneSquare@straightRamp^0,w,c
  5900   00419E  6E22               	movwf	??_reverseOneSquare^0,c
  5901   0041A0  6A23               	clrf	(??_reverseOneSquare+1)^0,c
  5902   0041A2  5022               	movf	??_reverseOneSquare^0,w,c
  5903   0041A4  5C25               	subwf	reverseOneSquare@i^0,w,c
  5904   0041A6  5026               	movf	(reverseOneSquare@i+1)^0,w,c
  5905   0041A8  0A80               	xorlw	128
  5906   0041AA  6E24               	movwf	(??_reverseOneSquare+2)^0,c
  5907   0041AC  5023               	movf	(??_reverseOneSquare+1)^0,w,c
  5908   0041AE  0A80               	xorlw	128
  5909   0041B0  5824               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5910   0041B2  A0D8               	btfss	status,0,c
  5911   0041B4  EFDE  F020         	goto	u3951
  5912   0041B8  EFE0  F020         	goto	u3950
  5913   0041BC                     u3951:
  5914   0041BC  EFC5  F020         	goto	l4776
  5915   0041C0                     u3950:
  5916   0041C0                     
  5917                           ;dc_motor.c: 496:     }
  5918   0041C0  0627               	decf	reverseOneSquare@cur_power^0,f,c
  5919   0041C2  A0D8               	btfss	status,0,c
  5920   0041C4  0628               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  5921   0041C6  EF90  F020         	goto	l4764
  5922   0041CA                     l4784:
  5923                           
  5924                           ;dc_motor.c: 497:     mL->power = 0;
  5925   0041CA  C01B  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5926   0041CE  C01C  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5927   0041D2  6ADF               	clrf	indf2,c
  5928                           
  5929                           ;dc_motor.c: 498:     mR->power = 0;
  5930   0041D4  C01D  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5931   0041D8  C01E  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5932   0041DC  6ADF               	clrf	indf2,c
  5933   0041DE  0012               	return		;funcret
  5934   0041E0                     __end_of_reverseOneSquare:
  5935                           	callstack 0
  5936                           
  5937 ;; *************** function _resetTimer *****************
  5938 ;; Defined at:
  5939 ;;		line 23 in file "timers.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;		None
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;		None
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      void 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5957 ;;Total ram usage:        0 bytes
  5958 ;; Hardware stack levels used: 1
  5959 ;; Hardware stack levels required when called: 5
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_main
  5964 ;;		_returnHome
  5965 ;;		_lostReturnHome
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text8
  5970   005158                     __ptext8:
  5971                           	callstack 0
  5972   005158                     _resetTimer:
  5973                           	callstack 25
  5974   005158                     
  5975                           ;timers.c: 25:     TMR0H=0;
  5976   005158  0E00               	movlw	0
  5977   00515A  6ED4               	movwf	212,c	;volatile
  5978                           
  5979                           ;timers.c: 26:     TMR0L=0;
  5980   00515C  0E00               	movlw	0
  5981   00515E  6ED3               	movwf	211,c	;volatile
  5982   005160  0012               	return		;funcret
  5983   005162                     __end_of_resetTimer:
  5984                           	callstack 0
  5985                           
  5986 ;; *************** function _get16bitTMR0val *****************
  5987 ;; Defined at:
  5988 ;;		line 33 in file "timers.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;		None
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;  timer_val       2   15[COMRAM] unsigned int 
  5993 ;;  timer_high      2   13[COMRAM] unsigned int 
  5994 ;;  timer_low       2   11[COMRAM] unsigned int 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  2    7[COMRAM] unsigned int 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, status,0
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6005 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6006 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6007 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6008 ;;Total ram usage:       10 bytes
  6009 ;; Hardware stack levels used: 1
  6010 ;; Hardware stack levels required when called: 5
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_main
  6015 ;;		_returnHome
  6016 ;;		_lostReturnHome
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text9
  6021   004F54                     __ptext9:
  6022                           	callstack 0
  6023   004F54                     _get16bitTMR0val:
  6024                           	callstack 23
  6025   004F54                     
  6026                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  6027   004F54  CFD3 F00C          	movff	4051,get16bitTMR0val@timer_low	;volatile
  6028   004F58  6A0D               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  6029                           
  6030                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  6031   004F5A  CFD4 F00E          	movff	4052,get16bitTMR0val@timer_high	;volatile
  6032   004F5E  6A0F               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  6033   004F60                     
  6034                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  6035   004F60  500E               	movf	get16bitTMR0val@timer_high^0,w,c
  6036   004F62  6E0B               	movwf	(??_get16bitTMR0val+1)^0,c
  6037   004F64  6A0A               	clrf	??_get16bitTMR0val^0,c
  6038   004F66  500C               	movf	get16bitTMR0val@timer_low^0,w,c
  6039   004F68  100A               	iorwf	??_get16bitTMR0val^0,w,c
  6040   004F6A  6E10               	movwf	get16bitTMR0val@timer_val^0,c
  6041   004F6C  500D               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  6042   004F6E  100B               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  6043   004F70  6E11               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  6044   004F72                     
  6045                           ;timers.c: 39:     return timer_val;
  6046   004F72  C010  F008         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  6047   004F76  C011  F009         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  6048   004F7A  0012               	return		;funcret
  6049   004F7C                     __end_of_get16bitTMR0val:
  6050                           	callstack 0
  6051                           
  6052 ;; *************** function _fullSpeedAhead *****************
  6053 ;; Defined at:
  6054 ;;		line 451 in file "dc_motor.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  6057 ;;		 -> main@motorL(10), 
  6058 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  6059 ;;		 -> main@motorR(10), 
  6060 ;;  straightSpee    1   30[COMRAM] unsigned char 
  6061 ;;  straightRamp    1   31[COMRAM] unsigned char 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  cur_power       2   37[COMRAM] int 
  6064 ;;  i               2   35[COMRAM] int 
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1    wreg      void 
  6067 ;; Registers used:
  6068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6074 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6075 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6076 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6077 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6078 ;;Total ram usage:       13 bytes
  6079 ;; Hardware stack levels used: 1
  6080 ;; Hardware stack levels required when called: 7
  6081 ;; This function calls:
  6082 ;;		_setMotorPWM
  6083 ;; This function is called by:
  6084 ;;		_main
  6085 ;;		_move
  6086 ;;		_returnHome
  6087 ;;		_lostReturnHome
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text10
  6092   004908                     __ptext10:
  6093                           	callstack 0
  6094   004908                     _fullSpeedAhead:
  6095                           	callstack 21
  6096   004908                     
  6097                           ;dc_motor.c: 451: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 452: {;dc_motor.c: 453:     mL->direction = 1;
  6098   004908  EE20 F001          	lfsr	2,1
  6099   00490C  501B               	movf	fullSpeedAhead@mL^0,w,c
  6100   00490E  26D9               	addwf	fsr2l,f,c
  6101   004910  501C               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6102   004912  22DA               	addwfc	fsr2h,f,c
  6103   004914  0E01               	movlw	1
  6104   004916  6EDF               	movwf	indf2,c
  6105                           
  6106                           ;dc_motor.c: 454:     mR->direction = 1;
  6107   004918  EE20 F001          	lfsr	2,1
  6108   00491C  501D               	movf	fullSpeedAhead@mR^0,w,c
  6109   00491E  26D9               	addwf	fsr2l,f,c
  6110   004920  501E               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6111   004922  22DA               	addwfc	fsr2h,f,c
  6112   004924  0E01               	movlw	1
  6113   004926  6EDF               	movwf	indf2,c
  6114   004928                     
  6115                           ;dc_motor.c: 455:     int i;;dc_motor.c: 456:     int cur_power;;dc_motor.c: 457:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  6116   004928  0E00               	movlw	0
  6117   00492A  6E27               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  6118   00492C  0E01               	movlw	1
  6119   00492E  6E26               	movwf	fullSpeedAhead@cur_power^0,c
  6120   004930  EFE3  F024         	goto	l4578
  6121   004934                     l4564:
  6122                           
  6123                           ;dc_motor.c: 458:         mL->power = cur_power+mL->compensation;
  6124   004934  EE20 F009          	lfsr	2,9
  6125   004938  501B               	movf	fullSpeedAhead@mL^0,w,c
  6126   00493A  26D9               	addwf	fsr2l,f,c
  6127   00493C  501C               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6128   00493E  22DA               	addwfc	fsr2h,f,c
  6129   004940  50DF               	movf	indf2,w,c
  6130   004942  2426               	addwf	fullSpeedAhead@cur_power^0,w,c
  6131   004944  C01B  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6132   004948  C01C  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6133   00494C  6EDF               	movwf	indf2,c
  6134                           
  6135                           ;dc_motor.c: 459:         mR->power = cur_power+mR->compensation;
  6136   00494E  EE20 F009          	lfsr	2,9
  6137   004952  501D               	movf	fullSpeedAhead@mR^0,w,c
  6138   004954  26D9               	addwf	fsr2l,f,c
  6139   004956  501E               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6140   004958  22DA               	addwfc	fsr2h,f,c
  6141   00495A  50DF               	movf	indf2,w,c
  6142   00495C  2426               	addwf	fullSpeedAhead@cur_power^0,w,c
  6143   00495E  C01D  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6144   004962  C01E  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6145   004966  6EDF               	movwf	indf2,c
  6146   004968                     
  6147                           ;dc_motor.c: 460:         setMotorPWM(mL);
  6148   004968  C01B  F015         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6149   00496C  C01C  F016         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6150   004970  ECC4  F022         	call	_setMotorPWM	;wreg free
  6151   004974                     
  6152                           ;dc_motor.c: 461:         setMotorPWM(mR);
  6153   004974  C01D  F015         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6154   004978  C01E  F016         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6155   00497C  ECC4  F022         	call	_setMotorPWM	;wreg free
  6156   004980                     
  6157                           ;dc_motor.c: 462:         for (i=0;i<straightRamp;i++) {
  6158   004980  0E00               	movlw	0
  6159   004982  6E25               	movwf	(fullSpeedAhead@i+1)^0,c
  6160   004984  0E00               	movlw	0
  6161   004986  6E24               	movwf	fullSpeedAhead@i^0,c
  6162   004988  EFCF  F024         	goto	l661
  6163   00498C                     l4572:
  6164                           
  6165                           ;dc_motor.c: 463:             _delay((unsigned long)((10)*(64000000/4000.0)));
  6166   00498C  0ED0               	movlw	208
  6167   00498E  6E21               	movwf	??_fullSpeedAhead^0,c
  6168   004990  0ECA               	movlw	202
  6169   004992                     u6217:
  6170   004992  2EE8               	decfsz	wreg,f,c
  6171   004994  D7FE               	bra	u6217
  6172   004996  2E21               	decfsz	??_fullSpeedAhead^0,f,c
  6173   004998  D7FC               	bra	u6217
  6174   00499A                     
  6175                           ;dc_motor.c: 464:         }
  6176   00499A  4A24               	infsnz	fullSpeedAhead@i^0,f,c
  6177   00499C  2A25               	incf	(fullSpeedAhead@i+1)^0,f,c
  6178   00499E                     l661:
  6179   00499E  5020               	movf	fullSpeedAhead@straightRamp^0,w,c
  6180   0049A0  6E21               	movwf	??_fullSpeedAhead^0,c
  6181   0049A2  6A22               	clrf	(??_fullSpeedAhead+1)^0,c
  6182   0049A4  5021               	movf	??_fullSpeedAhead^0,w,c
  6183   0049A6  5C24               	subwf	fullSpeedAhead@i^0,w,c
  6184   0049A8  5025               	movf	(fullSpeedAhead@i+1)^0,w,c
  6185   0049AA  0A80               	xorlw	128
  6186   0049AC  6E23               	movwf	(??_fullSpeedAhead+2)^0,c
  6187   0049AE  5022               	movf	(??_fullSpeedAhead+1)^0,w,c
  6188   0049B0  0A80               	xorlw	128
  6189   0049B2  5823               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6190   0049B4  A0D8               	btfss	status,0,c
  6191   0049B6  EFDF  F024         	goto	u3731
  6192   0049BA  EFE1  F024         	goto	u3730
  6193   0049BE                     u3731:
  6194   0049BE  EFC6  F024         	goto	l4572
  6195   0049C2                     u3730:
  6196   0049C2                     
  6197                           ;dc_motor.c: 465:     }
  6198   0049C2  4A26               	infsnz	fullSpeedAhead@cur_power^0,f,c
  6199   0049C4  2A27               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  6200   0049C6                     l4578:
  6201   0049C6  501F               	movf	fullSpeedAhead@straightSpeed^0,w,c
  6202   0049C8  6E21               	movwf	??_fullSpeedAhead^0,c
  6203   0049CA  6A22               	clrf	(??_fullSpeedAhead+1)^0,c
  6204   0049CC  5026               	movf	fullSpeedAhead@cur_power^0,w,c
  6205   0049CE  5C21               	subwf	??_fullSpeedAhead^0,w,c
  6206   0049D0  5022               	movf	(??_fullSpeedAhead+1)^0,w,c
  6207   0049D2  0A80               	xorlw	128
  6208   0049D4  6E23               	movwf	(??_fullSpeedAhead+2)^0,c
  6209   0049D6  5027               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  6210   0049D8  0A80               	xorlw	128
  6211   0049DA  5823               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6212   0049DC  B0D8               	btfsc	status,0,c
  6213   0049DE  EFF3  F024         	goto	u3741
  6214   0049E2  EFF5  F024         	goto	u3740
  6215   0049E6                     u3741:
  6216   0049E6  EF9A  F024         	goto	l4564
  6217   0049EA                     u3740:
  6218   0049EA  0012               	return		;funcret
  6219   0049EC                     __end_of_fullSpeedAhead:
  6220                           	callstack 0
  6221                           
  6222 ;; *************** function _initUSART4 *****************
  6223 ;; Defined at:
  6224 ;;		line 4 in file "serial.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      void 
  6231 ;; Registers used:
  6232 ;;		wreg, status,2
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6242 ;;Total ram usage:        0 bytes
  6243 ;; Hardware stack levels used: 1
  6244 ;; Hardware stack levels required when called: 5
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_main
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text11
  6253   0050C2                     __ptext11:
  6254                           	callstack 0
  6255   0050C2                     _initUSART4:
  6256                           	callstack 25
  6257   0050C2                     
  6258                           ;serial.c: 7:     RC0PPS = 0x12;
  6259   0050C2  0E12               	movlw	18
  6260   0050C4  010E               	movlb	14	; () banked
  6261   0050C6  6F62               	movwf	98,b	;volatile
  6262                           
  6263                           ;serial.c: 8:     RX4PPS = 0x11;
  6264   0050C8  0E11               	movlw	17
  6265   0050CA  6F15               	movwf	21,b	;volatile
  6266   0050CC                     
  6267                           ; BSR set to: 14
  6268                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  6269   0050CC  97E9               	bcf	233,3,b	;volatile
  6270   0050CE                     
  6271                           ; BSR set to: 14
  6272                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  6273   0050CE  95E8               	bcf	232,2,b	;volatile
  6274                           
  6275                           ;serial.c: 13:     SP4BRGL = 51;
  6276   0050D0  0E33               	movlw	51
  6277   0050D2  6FE5               	movwf	229,b	;volatile
  6278                           
  6279                           ;serial.c: 14:     SP4BRGH = 0;
  6280   0050D4  0E00               	movlw	0
  6281   0050D6  6FE6               	movwf	230,b	;volatile
  6282   0050D8                     
  6283                           ; BSR set to: 14
  6284                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  6285   0050D8  89E7               	bsf	231,4,b	;volatile
  6286   0050DA                     
  6287                           ; BSR set to: 14
  6288                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  6289   0050DA  8BE8               	bsf	232,5,b	;volatile
  6290   0050DC                     
  6291                           ; BSR set to: 14
  6292                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  6293   0050DC  8FE7               	bsf	231,7,b	;volatile
  6294   0050DE                     
  6295                           ; BSR set to: 14
  6296   0050DE  0012               	return		;funcret
  6297   0050E0                     __end_of_initUSART4:
  6298                           	callstack 0
  6299                           
  6300 ;; *************** function _initDCmotorsPWM *****************
  6301 ;; Defined at:
  6302 ;;		line 8 in file "dc_motor.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  PWMperiod       2    7[COMRAM] unsigned int 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;		None
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      void 
  6309 ;; Registers used:
  6310 ;;		wreg, status,2
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6320 ;;Total ram usage:        2 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; Hardware stack levels required when called: 5
  6323 ;; This function calls:
  6324 ;;		Nothing
  6325 ;; This function is called by:
  6326 ;;		_main
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text12
  6331   004B54                     __ptext12:
  6332                           	callstack 0
  6333   004B54                     _initDCmotorsPWM:
  6334                           	callstack 25
  6335   004B54                     
  6336                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  6337   004B54  947D               	bcf	125,2,c	;volatile
  6338                           
  6339                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  6340   004B56  9485               	bcf	133,2,c	;volatile
  6341                           
  6342                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  6343   004B58  987D               	bcf	125,4,c	;volatile
  6344                           
  6345                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  6346   004B5A  9885               	bcf	133,4,c	;volatile
  6347                           
  6348                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  6349   004B5C  9E7B               	bcf	123,7,c	;volatile
  6350                           
  6351                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  6352   004B5E  9E83               	bcf	131,7,c	;volatile
  6353                           
  6354                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  6355   004B60  9C7F               	bcf	127,6,c	;volatile
  6356                           
  6357                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  6358   004B62  9C87               	bcf	135,6,c	;volatile
  6359   004B64                     
  6360                           ;dc_motor.c: 21:     RE2PPS=0x05;
  6361   004B64  0E05               	movlw	5
  6362   004B66  010E               	movlb	14	; () banked
  6363   004B68  6F74               	movwf	116,b	;volatile
  6364                           
  6365                           ;dc_motor.c: 22:     RE4PPS=0x06;
  6366   004B6A  0E06               	movlw	6
  6367   004B6C  6F76               	movwf	118,b	;volatile
  6368                           
  6369                           ;dc_motor.c: 23:     RC7PPS=0x07;
  6370   004B6E  0E07               	movlw	7
  6371   004B70  6F69               	movwf	105,b	;volatile
  6372                           
  6373                           ;dc_motor.c: 24:     RG6PPS=0x08;
  6374   004B72  0E08               	movlw	8
  6375   004B74  6F88               	movwf	136,b	;volatile
  6376                           
  6377                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  6378   004B76  50BD               	movf	189,w,c	;volatile
  6379   004B78  0B8F               	andlw	-113
  6380   004B7A  0930               	iorlw	48
  6381   004B7C  6EBD               	movwf	189,c	;volatile
  6382                           
  6383                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  6384   004B7E  0EE0               	movlw	-32
  6385   004B80  16BE               	andwf	190,f,c	;volatile
  6386                           
  6387                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  6388   004B82  50BF               	movf	191,w,c	;volatile
  6389   004B84  0BF0               	andlw	-16
  6390   004B86  0901               	iorlw	1
  6391   004B88  6EBF               	movwf	191,c	;volatile
  6392   004B8A                     
  6393                           ; BSR set to: 14
  6394                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  6395   004B8A  C008  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  6396   004B8E                     
  6397                           ; BSR set to: 14
  6398                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  6399   004B8E  8EBD               	bsf	189,7,c	;volatile
  6400                           
  6401                           ;dc_motor.c: 38:     CCPR1H=0;
  6402   004B90  0E00               	movlw	0
  6403   004B92  6EAA               	movwf	170,c	;volatile
  6404                           
  6405                           ;dc_motor.c: 39:     CCPR2H=0;
  6406   004B94  0E00               	movlw	0
  6407   004B96  6EA6               	movwf	166,c	;volatile
  6408                           
  6409                           ;dc_motor.c: 40:     CCPR3H=0;
  6410   004B98  0E00               	movlw	0
  6411   004B9A  010F               	movlb	15	; () banked
  6412   004B9C  6F25               	movwf	37,b	;volatile
  6413                           
  6414                           ;dc_motor.c: 41:     CCPR4H=0;
  6415   004B9E  0E00               	movlw	0
  6416   004BA0  6F21               	movwf	33,b	;volatile
  6417                           
  6418                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  6419   004BA2  0EFC               	movlw	-4
  6420   004BA4  16AD               	andwf	173,f,c	;volatile
  6421                           
  6422                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  6423   004BA6  0EF3               	movlw	-13
  6424   004BA8  16AD               	andwf	173,f,c	;volatile
  6425                           
  6426                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  6427   004BAA  0ECF               	movlw	-49
  6428   004BAC  16AD               	andwf	173,f,c	;volatile
  6429                           
  6430                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  6431   004BAE  0E3F               	movlw	-193
  6432   004BB0  16AD               	andwf	173,f,c	;volatile
  6433   004BB2                     
  6434                           ; BSR set to: 15
  6435                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  6436   004BB2  88AB               	bsf	171,4,c	;volatile
  6437                           
  6438                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  6439   004BB4  50AB               	movf	171,w,c	;volatile
  6440   004BB6  0BF0               	andlw	-16
  6441   004BB8  090C               	iorlw	12
  6442   004BBA  6EAB               	movwf	171,c	;volatile
  6443   004BBC                     
  6444                           ; BSR set to: 15
  6445                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  6446   004BBC  8EAB               	bsf	171,7,c	;volatile
  6447   004BBE                     
  6448                           ; BSR set to: 15
  6449                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  6450   004BBE  88A7               	bsf	167,4,c	;volatile
  6451                           
  6452                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  6453   004BC0  50A7               	movf	167,w,c	;volatile
  6454   004BC2  0BF0               	andlw	-16
  6455   004BC4  090C               	iorlw	12
  6456   004BC6  6EA7               	movwf	167,c	;volatile
  6457   004BC8                     
  6458                           ; BSR set to: 15
  6459                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  6460   004BC8  8EA7               	bsf	167,7,c	;volatile
  6461   004BCA                     
  6462                           ; BSR set to: 15
  6463                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  6464   004BCA  8926               	bsf	38,4,b	;volatile
  6465                           
  6466                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  6467   004BCC  5126               	movf	38,w,b	;volatile
  6468   004BCE  0BF0               	andlw	-16
  6469   004BD0  090C               	iorlw	12
  6470   004BD2  6F26               	movwf	38,b	;volatile
  6471   004BD4                     
  6472                           ; BSR set to: 15
  6473                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  6474   004BD4  8F26               	bsf	38,7,b	;volatile
  6475   004BD6                     
  6476                           ; BSR set to: 15
  6477                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  6478   004BD6  8922               	bsf	34,4,b	;volatile
  6479                           
  6480                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  6481   004BD8  5122               	movf	34,w,b	;volatile
  6482   004BDA  0BF0               	andlw	-16
  6483   004BDC  090C               	iorlw	12
  6484   004BDE  6F22               	movwf	34,b	;volatile
  6485   004BE0                     
  6486                           ; BSR set to: 15
  6487                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  6488   004BE0  8F22               	bsf	34,7,b	;volatile
  6489   004BE2                     
  6490                           ; BSR set to: 15
  6491   004BE2  0012               	return		;funcret
  6492   004BE4                     __end_of_initDCmotorsPWM:
  6493                           	callstack 0
  6494                           
  6495 ;; *************** function _color_detect *****************
  6496 ;; Defined at:
  6497 ;;		line 144 in file "color.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;  HSV             6    7[COMRAM] struct HSV_val
  6500 ;;  red             6   13[COMRAM] struct HSV_calib
  6501 ;;  green           6   19[COMRAM] struct HSV_calib
  6502 ;;  blue            6   25[COMRAM] struct HSV_calib
  6503 ;;  yellow          6   31[COMRAM] struct HSV_calib
  6504 ;;  pink            6   37[COMRAM] struct HSV_calib
  6505 ;;  orange          6   43[COMRAM] struct HSV_calib
  6506 ;;  lightblue       6   49[COMRAM] struct HSV_calib
  6507 ;;  white           6   55[COMRAM] struct HSV_calib
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  color           1   63[COMRAM] unsigned char 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      unsigned char 
  6512 ;; Registers used:
  6513 ;;		wreg, status,2, status,0
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6519 ;;      Params:        54       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6522 ;;      Totals:        57       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6523 ;;Total ram usage:       57 bytes
  6524 ;; Hardware stack levels used: 1
  6525 ;; Hardware stack levels required when called: 5
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_main
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text13
  6534   0039BA                     __ptext13:
  6535                           	callstack 0
  6536   0039BA                     _color_detect:
  6537                           	callstack 25
  6538   0039BA                     
  6539                           ;color.c: 149:     if ((red.H)-1000 < HSV.H && HSV.H < (red.H)+1000) {color = 1;}
  6540   0039BA  0E18               	movlw	24
  6541   0039BC  240E               	addwf	color_detect@red^0,w,c
  6542   0039BE  6E3E               	movwf	??_color_detect^0,c
  6543   0039C0  0EFC               	movlw	252
  6544   0039C2  200F               	addwfc	(color_detect@red+1)^0,w,c
  6545   0039C4  6E3F               	movwf	(??_color_detect+1)^0,c
  6546   0039C6  5008               	movf	color_detect@HSV^0,w,c
  6547   0039C8  5C3E               	subwf	??_color_detect^0,w,c
  6548   0039CA  5009               	movf	(color_detect@HSV+1)^0,w,c
  6549   0039CC  583F               	subwfb	(??_color_detect+1)^0,w,c
  6550   0039CE  B0D8               	btfsc	status,0,c
  6551   0039D0  EFEC  F01C         	goto	u4611
  6552   0039D4  EFEE  F01C         	goto	u4610
  6553   0039D8                     u4611:
  6554   0039D8  EF03  F01D         	goto	l5400
  6555   0039DC                     u4610:
  6556   0039DC  0EE8               	movlw	232
  6557   0039DE  240E               	addwf	color_detect@red^0,w,c
  6558   0039E0  6E3E               	movwf	??_color_detect^0,c
  6559   0039E2  0E03               	movlw	3
  6560   0039E4  200F               	addwfc	(color_detect@red+1)^0,w,c
  6561   0039E6  6E3F               	movwf	(??_color_detect+1)^0,c
  6562   0039E8  503E               	movf	??_color_detect^0,w,c
  6563   0039EA  5C08               	subwf	color_detect@HSV^0,w,c
  6564   0039EC  503F               	movf	(??_color_detect+1)^0,w,c
  6565   0039EE  5809               	subwfb	(color_detect@HSV+1)^0,w,c
  6566   0039F0  B0D8               	btfsc	status,0,c
  6567   0039F2  EFFD  F01C         	goto	u4621
  6568   0039F6  EFFF  F01C         	goto	u4620
  6569   0039FA                     u4621:
  6570   0039FA  EF03  F01D         	goto	l5400
  6571   0039FE                     u4620:
  6572   0039FE  0E01               	movlw	1
  6573   003A00  6E40               	movwf	color_detect@color^0,c
  6574   003A02  EF0F  F01E         	goto	l158
  6575   003A06                     l5400:
  6576   003A06  0E18               	movlw	24
  6577   003A08  2414               	addwf	color_detect@green^0,w,c
  6578   003A0A  6E3E               	movwf	??_color_detect^0,c
  6579   003A0C  0EFC               	movlw	252
  6580   003A0E  2015               	addwfc	(color_detect@green+1)^0,w,c
  6581   003A10  6E3F               	movwf	(??_color_detect+1)^0,c
  6582   003A12  5008               	movf	color_detect@HSV^0,w,c
  6583   003A14  5C3E               	subwf	??_color_detect^0,w,c
  6584   003A16  5009               	movf	(color_detect@HSV+1)^0,w,c
  6585   003A18  583F               	subwfb	(??_color_detect+1)^0,w,c
  6586   003A1A  B0D8               	btfsc	status,0,c
  6587   003A1C  EF12  F01D         	goto	u4631
  6588   003A20  EF14  F01D         	goto	u4630
  6589   003A24                     u4631:
  6590   003A24  EF29  F01D         	goto	l5406
  6591   003A28                     u4630:
  6592   003A28  0EE8               	movlw	232
  6593   003A2A  2414               	addwf	color_detect@green^0,w,c
  6594   003A2C  6E3E               	movwf	??_color_detect^0,c
  6595   003A2E  0E03               	movlw	3
  6596   003A30  2015               	addwfc	(color_detect@green+1)^0,w,c
  6597   003A32  6E3F               	movwf	(??_color_detect+1)^0,c
  6598   003A34  503E               	movf	??_color_detect^0,w,c
  6599   003A36  5C08               	subwf	color_detect@HSV^0,w,c
  6600   003A38  503F               	movf	(??_color_detect+1)^0,w,c
  6601   003A3A  5809               	subwfb	(color_detect@HSV+1)^0,w,c
  6602   003A3C  B0D8               	btfsc	status,0,c
  6603   003A3E  EF23  F01D         	goto	u4641
  6604   003A42  EF25  F01D         	goto	u4640
  6605   003A46                     u4641:
  6606   003A46  EF29  F01D         	goto	l5406
  6607   003A4A                     u4640:
  6608   003A4A  0E02               	movlw	2
  6609   003A4C  6E40               	movwf	color_detect@color^0,c
  6610   003A4E  EF0F  F01E         	goto	l158
  6611   003A52                     l5406:
  6612   003A52  0E18               	movlw	24
  6613   003A54  241A               	addwf	color_detect@blue^0,w,c
  6614   003A56  6E3E               	movwf	??_color_detect^0,c
  6615   003A58  0EFC               	movlw	252
  6616   003A5A  201B               	addwfc	(color_detect@blue+1)^0,w,c
  6617   003A5C  6E3F               	movwf	(??_color_detect+1)^0,c
  6618   003A5E  5008               	movf	color_detect@HSV^0,w,c
  6619   003A60  5C3E               	subwf	??_color_detect^0,w,c
  6620   003A62  5009               	movf	(color_detect@HSV+1)^0,w,c
  6621   003A64  583F               	subwfb	(??_color_detect+1)^0,w,c
  6622   003A66  B0D8               	btfsc	status,0,c
  6623   003A68  EF38  F01D         	goto	u4651
  6624   003A6C  EF3A  F01D         	goto	u4650
  6625   003A70                     u4651:
  6626   003A70  EF4F  F01D         	goto	l5412
  6627   003A74                     u4650:
  6628   003A74  0EE8               	movlw	232
  6629   003A76  241A               	addwf	color_detect@blue^0,w,c
  6630   003A78  6E3E               	movwf	??_color_detect^0,c
  6631   003A7A  0E03               	movlw	3
  6632   003A7C  201B               	addwfc	(color_detect@blue+1)^0,w,c
  6633   003A7E  6E3F               	movwf	(??_color_detect+1)^0,c
  6634   003A80  503E               	movf	??_color_detect^0,w,c
  6635   003A82  5C08               	subwf	color_detect@HSV^0,w,c
  6636   003A84  503F               	movf	(??_color_detect+1)^0,w,c
  6637   003A86  5809               	subwfb	(color_detect@HSV+1)^0,w,c
  6638   003A88  B0D8               	btfsc	status,0,c
  6639   003A8A  EF49  F01D         	goto	u4661
  6640   003A8E  EF4B  F01D         	goto	u4660
  6641   003A92                     u4661:
  6642   003A92  EF4F  F01D         	goto	l5412
  6643   003A96                     u4660:
  6644   003A96  0E03               	movlw	3
  6645   003A98  6E40               	movwf	color_detect@color^0,c
  6646   003A9A  EF0F  F01E         	goto	l158
  6647   003A9E                     l5412:
  6648   003A9E  0E18               	movlw	24
  6649   003AA0  2420               	addwf	color_detect@yellow^0,w,c
  6650   003AA2  6E3E               	movwf	??_color_detect^0,c
  6651   003AA4  0EFC               	movlw	252
  6652   003AA6  2021               	addwfc	(color_detect@yellow+1)^0,w,c
  6653   003AA8  6E3F               	movwf	(??_color_detect+1)^0,c
  6654   003AAA  5008               	movf	color_detect@HSV^0,w,c
  6655   003AAC  5C3E               	subwf	??_color_detect^0,w,c
  6656   003AAE  5009               	movf	(color_detect@HSV+1)^0,w,c
  6657   003AB0  583F               	subwfb	(??_color_detect+1)^0,w,c
  6658   003AB2  B0D8               	btfsc	status,0,c
  6659   003AB4  EF5E  F01D         	goto	u4671
  6660   003AB8  EF60  F01D         	goto	u4670
  6661   003ABC                     u4671:
  6662   003ABC  EF75  F01D         	goto	l5418
  6663   003AC0                     u4670:
  6664   003AC0  0EE8               	movlw	232
  6665   003AC2  2420               	addwf	color_detect@yellow^0,w,c
  6666   003AC4  6E3E               	movwf	??_color_detect^0,c
  6667   003AC6  0E03               	movlw	3
  6668   003AC8  2021               	addwfc	(color_detect@yellow+1)^0,w,c
  6669   003ACA  6E3F               	movwf	(??_color_detect+1)^0,c
  6670   003ACC  503E               	movf	??_color_detect^0,w,c
  6671   003ACE  5C08               	subwf	color_detect@HSV^0,w,c
  6672   003AD0  503F               	movf	(??_color_detect+1)^0,w,c
  6673   003AD2  5809               	subwfb	(color_detect@HSV+1)^0,w,c
  6674   003AD4  B0D8               	btfsc	status,0,c
  6675   003AD6  EF6F  F01D         	goto	u4681
  6676   003ADA  EF71  F01D         	goto	u4680
  6677   003ADE                     u4681:
  6678   003ADE  EF75  F01D         	goto	l5418
  6679   003AE2                     u4680:
  6680   003AE2  0E04               	movlw	4
  6681   003AE4  6E40               	movwf	color_detect@color^0,c
  6682   003AE6  EF0F  F01E         	goto	l158
  6683   003AEA                     l5418:
  6684   003AEA  0E18               	movlw	24
  6685   003AEC  2426               	addwf	color_detect@pink^0,w,c
  6686   003AEE  6E3E               	movwf	??_color_detect^0,c
  6687   003AF0  0EFC               	movlw	252
  6688   003AF2  2027               	addwfc	(color_detect@pink+1)^0,w,c
  6689   003AF4  6E3F               	movwf	(??_color_detect+1)^0,c
  6690   003AF6  5008               	movf	color_detect@HSV^0,w,c
  6691   003AF8  5C3E               	subwf	??_color_detect^0,w,c
  6692   003AFA  5009               	movf	(color_detect@HSV+1)^0,w,c
  6693   003AFC  583F               	subwfb	(??_color_detect+1)^0,w,c
  6694   003AFE  B0D8               	btfsc	status,0,c
  6695   003B00  EF84  F01D         	goto	u4691
  6696   003B04  EF86  F01D         	goto	u4690
  6697   003B08                     u4691:
  6698   003B08  EF9B  F01D         	goto	l5424
  6699   003B0C                     u4690:
  6700   003B0C  0EE8               	movlw	232
  6701   003B0E  2426               	addwf	color_detect@pink^0,w,c
  6702   003B10  6E3E               	movwf	??_color_detect^0,c
  6703   003B12  0E03               	movlw	3
  6704   003B14  2027               	addwfc	(color_detect@pink+1)^0,w,c
  6705   003B16  6E3F               	movwf	(??_color_detect+1)^0,c
  6706   003B18  503E               	movf	??_color_detect^0,w,c
  6707   003B1A  5C08               	subwf	color_detect@HSV^0,w,c
  6708   003B1C  503F               	movf	(??_color_detect+1)^0,w,c
  6709   003B1E  5809               	subwfb	(color_detect@HSV+1)^0,w,c
  6710   003B20  B0D8               	btfsc	status,0,c
  6711   003B22  EF95  F01D         	goto	u4701
  6712   003B26  EF97  F01D         	goto	u4700
  6713   003B2A                     u4701:
  6714   003B2A  EF9B  F01D         	goto	l5424
  6715   003B2E                     u4700:
  6716   003B2E  0E05               	movlw	5
  6717   003B30  6E40               	movwf	color_detect@color^0,c
  6718   003B32  EF0F  F01E         	goto	l158
  6719   003B36                     l5424:
  6720   003B36  0E18               	movlw	24
  6721   003B38  242C               	addwf	color_detect@orange^0,w,c
  6722   003B3A  6E3E               	movwf	??_color_detect^0,c
  6723   003B3C  0EFC               	movlw	252
  6724   003B3E  202D               	addwfc	(color_detect@orange+1)^0,w,c
  6725   003B40  6E3F               	movwf	(??_color_detect+1)^0,c
  6726   003B42  5008               	movf	color_detect@HSV^0,w,c
  6727   003B44  5C3E               	subwf	??_color_detect^0,w,c
  6728   003B46  5009               	movf	(color_detect@HSV+1)^0,w,c
  6729   003B48  583F               	subwfb	(??_color_detect+1)^0,w,c
  6730   003B4A  B0D8               	btfsc	status,0,c
  6731   003B4C  EFAA  F01D         	goto	u4711
  6732   003B50  EFAC  F01D         	goto	u4710
  6733   003B54                     u4711:
  6734   003B54  EFC1  F01D         	goto	l5430
  6735   003B58                     u4710:
  6736   003B58  0EE8               	movlw	232
  6737   003B5A  242C               	addwf	color_detect@orange^0,w,c
  6738   003B5C  6E3E               	movwf	??_color_detect^0,c
  6739   003B5E  0E03               	movlw	3
  6740   003B60  202D               	addwfc	(color_detect@orange+1)^0,w,c
  6741   003B62  6E3F               	movwf	(??_color_detect+1)^0,c
  6742   003B64  503E               	movf	??_color_detect^0,w,c
  6743   003B66  5C08               	subwf	color_detect@HSV^0,w,c
  6744   003B68  503F               	movf	(??_color_detect+1)^0,w,c
  6745   003B6A  5809               	subwfb	(color_detect@HSV+1)^0,w,c
  6746   003B6C  B0D8               	btfsc	status,0,c
  6747   003B6E  EFBB  F01D         	goto	u4721
  6748   003B72  EFBD  F01D         	goto	u4720
  6749   003B76                     u4721:
  6750   003B76  EFC1  F01D         	goto	l5430
  6751   003B7A                     u4720:
  6752   003B7A  0E06               	movlw	6
  6753   003B7C  6E40               	movwf	color_detect@color^0,c
  6754   003B7E  EF0F  F01E         	goto	l158
  6755   003B82                     l5430:
  6756   003B82  0E18               	movlw	24
  6757   003B84  2432               	addwf	color_detect@lightblue^0,w,c
  6758   003B86  6E3E               	movwf	??_color_detect^0,c
  6759   003B88  0EFC               	movlw	252
  6760   003B8A  2033               	addwfc	(color_detect@lightblue+1)^0,w,c
  6761   003B8C  6E3F               	movwf	(??_color_detect+1)^0,c
  6762   003B8E  5008               	movf	color_detect@HSV^0,w,c
  6763   003B90  5C3E               	subwf	??_color_detect^0,w,c
  6764   003B92  5009               	movf	(color_detect@HSV+1)^0,w,c
  6765   003B94  583F               	subwfb	(??_color_detect+1)^0,w,c
  6766   003B96  B0D8               	btfsc	status,0,c
  6767   003B98  EFD0  F01D         	goto	u4731
  6768   003B9C  EFD2  F01D         	goto	u4730
  6769   003BA0                     u4731:
  6770   003BA0  EFE7  F01D         	goto	l5436
  6771   003BA4                     u4730:
  6772   003BA4  0EE8               	movlw	232
  6773   003BA6  2432               	addwf	color_detect@lightblue^0,w,c
  6774   003BA8  6E3E               	movwf	??_color_detect^0,c
  6775   003BAA  0E03               	movlw	3
  6776   003BAC  2033               	addwfc	(color_detect@lightblue+1)^0,w,c
  6777   003BAE  6E3F               	movwf	(??_color_detect+1)^0,c
  6778   003BB0  503E               	movf	??_color_detect^0,w,c
  6779   003BB2  5C08               	subwf	color_detect@HSV^0,w,c
  6780   003BB4  503F               	movf	(??_color_detect+1)^0,w,c
  6781   003BB6  5809               	subwfb	(color_detect@HSV+1)^0,w,c
  6782   003BB8  B0D8               	btfsc	status,0,c
  6783   003BBA  EFE1  F01D         	goto	u4741
  6784   003BBE  EFE3  F01D         	goto	u4740
  6785   003BC2                     u4741:
  6786   003BC2  EFE7  F01D         	goto	l5436
  6787   003BC6                     u4740:
  6788   003BC6  0E07               	movlw	7
  6789   003BC8  6E40               	movwf	color_detect@color^0,c
  6790   003BCA  EF0F  F01E         	goto	l158
  6791   003BCE                     l5436:
  6792   003BCE  0E18               	movlw	24
  6793   003BD0  2438               	addwf	color_detect@white^0,w,c
  6794   003BD2  6E3E               	movwf	??_color_detect^0,c
  6795   003BD4  0EFC               	movlw	252
  6796   003BD6  2039               	addwfc	(color_detect@white+1)^0,w,c
  6797   003BD8  6E3F               	movwf	(??_color_detect+1)^0,c
  6798   003BDA  5008               	movf	color_detect@HSV^0,w,c
  6799   003BDC  5C3E               	subwf	??_color_detect^0,w,c
  6800   003BDE  5009               	movf	(color_detect@HSV+1)^0,w,c
  6801   003BE0  583F               	subwfb	(??_color_detect+1)^0,w,c
  6802   003BE2  B0D8               	btfsc	status,0,c
  6803   003BE4  EFF6  F01D         	goto	u4751
  6804   003BE8  EFF8  F01D         	goto	u4750
  6805   003BEC                     u4751:
  6806   003BEC  EF0D  F01E         	goto	l5442
  6807   003BF0                     u4750:
  6808   003BF0  0EE8               	movlw	232
  6809   003BF2  2438               	addwf	color_detect@white^0,w,c
  6810   003BF4  6E3E               	movwf	??_color_detect^0,c
  6811   003BF6  0E03               	movlw	3
  6812   003BF8  2039               	addwfc	(color_detect@white+1)^0,w,c
  6813   003BFA  6E3F               	movwf	(??_color_detect+1)^0,c
  6814   003BFC  503E               	movf	??_color_detect^0,w,c
  6815   003BFE  5C08               	subwf	color_detect@HSV^0,w,c
  6816   003C00  503F               	movf	(??_color_detect+1)^0,w,c
  6817   003C02  5809               	subwfb	(color_detect@HSV+1)^0,w,c
  6818   003C04  B0D8               	btfsc	status,0,c
  6819   003C06  EF07  F01E         	goto	u4761
  6820   003C0A  EF09  F01E         	goto	u4760
  6821   003C0E                     u4761:
  6822   003C0E  EF0D  F01E         	goto	l5442
  6823   003C12                     u4760:
  6824   003C12  0E08               	movlw	8
  6825   003C14  6E40               	movwf	color_detect@color^0,c
  6826   003C16  EF0F  F01E         	goto	l158
  6827   003C1A                     l5442:
  6828   003C1A  0E09               	movlw	9
  6829   003C1C  6E40               	movwf	color_detect@color^0,c
  6830   003C1E                     l158:
  6831                           
  6832                           ;color.c: 174:     return color;
  6833   003C1E  5040               	movf	color_detect@color^0,w,c
  6834   003C20  0012               	return		;funcret
  6835   003C22                     __end_of_color_detect:
  6836                           	callstack 0
  6837                           
  6838 ;; *************** function _color_click_init *****************
  6839 ;; Defined at:
  6840 ;;		line 7 in file "color.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;		None
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;		None
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  1    wreg      void 
  6847 ;; Registers used:
  6848 ;;		wreg, status,2, status,0, cstack
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;Total ram usage:        1 bytes
  6859 ;; Hardware stack levels used: 1
  6860 ;; Hardware stack levels required when called: 9
  6861 ;; This function calls:
  6862 ;;		_I2C_2_Master_Init
  6863 ;;		_color_clear_init_interrupts
  6864 ;;		_color_writetoaddr
  6865 ;; This function is called by:
  6866 ;;		_main
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text14
  6871   004E64                     __ptext14:
  6872                           	callstack 0
  6873   004E64                     _color_click_init:
  6874                           	callstack 21
  6875   004E64                     
  6876                           ;color.c: 10:     I2C_2_Master_Init();
  6877   004E64  EC95  F027         	call	_I2C_2_Master_Init	;wreg free
  6878   004E68                     
  6879                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  6880   004E68  0E01               	movlw	1
  6881   004E6A  6E0A               	movwf	color_writetoaddr@value^0,c
  6882   004E6C  0E00               	movlw	0
  6883   004E6E  EC31  F028         	call	_color_writetoaddr
  6884   004E72                     
  6885                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6886   004E72  0E3F               	movlw	63
  6887   004E74  6E0D               	movwf	??_color_click_init^0,c
  6888   004E76  0E55               	movlw	85
  6889   004E78                     u6227:
  6890   004E78  2EE8               	decfsz	wreg,f,c
  6891   004E7A  D7FE               	bra	u6227
  6892   004E7C  2E0D               	decfsz	??_color_click_init^0,f,c
  6893   004E7E  D7FC               	bra	u6227
  6894   004E80  0000               	nop	
  6895   004E82                     
  6896                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  6897   004E82  0E03               	movlw	3
  6898   004E84  6E0A               	movwf	color_writetoaddr@value^0,c
  6899   004E86  0E00               	movlw	0
  6900   004E88  EC31  F028         	call	_color_writetoaddr
  6901   004E8C                     
  6902                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  6903   004E8C  0ED5               	movlw	213
  6904   004E8E  6E0A               	movwf	color_writetoaddr@value^0,c
  6905   004E90  0E01               	movlw	1
  6906   004E92  EC31  F028         	call	_color_writetoaddr
  6907   004E96                     
  6908                           ;color.c: 23:     color_clear_init_interrupts();
  6909   004E96  EC61  F026         	call	_color_clear_init_interrupts	;wreg free
  6910   004E9A  0012               	return		;funcret
  6911   004E9C                     __end_of_color_click_init:
  6912                           	callstack 0
  6913                           
  6914 ;; *************** function _color_clear_init_interrupts *****************
  6915 ;; Defined at:
  6916 ;;		line 27 in file "color.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;		None
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;  low_threshol    2    0        unsigned int 
  6921 ;;  high_thresho    2    0        unsigned int 
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		wreg, status,2, status,0, cstack
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6935 ;;Total ram usage:        1 bytes
  6936 ;; Hardware stack levels used: 1
  6937 ;; Hardware stack levels required when called: 8
  6938 ;; This function calls:
  6939 ;;		_I2C_2_Master_Start
  6940 ;;		_I2C_2_Master_Stop
  6941 ;;		_I2C_2_Master_Write
  6942 ;;		_color_writetoaddr
  6943 ;; This function is called by:
  6944 ;;		_color_click_init
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           	psect	text15
  6949   004CC2                     __ptext15:
  6950                           	callstack 0
  6951   004CC2                     _color_clear_init_interrupts:
  6952                           	callstack 21
  6953   004CC2                     
  6954                           ;color.c: 29:     I2C_2_Master_Start();
  6955   004CC2  ECB6  F028         	call	_I2C_2_Master_Start	;wreg free
  6956                           
  6957                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  6958   004CC6  0E52               	movlw	82
  6959   004CC8  ECA0  F028         	call	_I2C_2_Master_Write
  6960                           
  6961                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  6962   004CCC  0EE6               	movlw	230
  6963   004CCE  ECA0  F028         	call	_I2C_2_Master_Write
  6964                           
  6965                           ;color.c: 32:     I2C_2_Master_Stop();
  6966   004CD2  ECB1  F028         	call	_I2C_2_Master_Stop	;wreg free
  6967   004CD6                     
  6968                           ;color.c: 45:  color_writetoaddr(0x00, 0x13);
  6969   004CD6  0E13               	movlw	19
  6970   004CD8  6E0A               	movwf	color_writetoaddr@value^0,c
  6971   004CDA  0E00               	movlw	0
  6972   004CDC  EC31  F028         	call	_color_writetoaddr
  6973   004CE0                     
  6974                           ;color.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6975   004CE0  0E3F               	movlw	63
  6976   004CE2  6E0C               	movwf	??_color_clear_init_interrupts^0,c
  6977   004CE4  0E55               	movlw	85
  6978   004CE6                     u6237:
  6979   004CE6  2EE8               	decfsz	wreg,f,c
  6980   004CE8  D7FE               	bra	u6237
  6981   004CEA  2E0C               	decfsz	??_color_clear_init_interrupts^0,f,c
  6982   004CEC  D7FC               	bra	u6237
  6983   004CEE  0000               	nop	
  6984   004CF0                     
  6985                           ;color.c: 47:     color_writetoaddr(0x07, (high_threshold >> 8));
  6986   004CF0  0E01               	movlw	1
  6987   004CF2  6E0A               	movwf	color_writetoaddr@value^0,c
  6988   004CF4  0E07               	movlw	7
  6989   004CF6  EC31  F028         	call	_color_writetoaddr
  6990   004CFA                     
  6991                           ;color.c: 48:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  6992   004CFA  0E90               	movlw	144
  6993   004CFC  6E0A               	movwf	color_writetoaddr@value^0,c
  6994   004CFE  0E06               	movlw	6
  6995   004D00  EC31  F028         	call	_color_writetoaddr
  6996   004D04                     
  6997                           ;color.c: 49:     color_writetoaddr(0x05, (low_threshold >> 8));
  6998   004D04  0E00               	movlw	0
  6999   004D06  6E0A               	movwf	color_writetoaddr@value^0,c
  7000   004D08  0E05               	movlw	5
  7001   004D0A  EC31  F028         	call	_color_writetoaddr
  7002   004D0E                     
  7003                           ;color.c: 50:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  7004   004D0E  0EC8               	movlw	200
  7005   004D10  6E0A               	movwf	color_writetoaddr@value^0,c
  7006   004D12  0E04               	movlw	4
  7007   004D14  EC31  F028         	call	_color_writetoaddr
  7008   004D18                     
  7009                           ;color.c: 51:     color_writetoaddr(0x0C, 0b0100);
  7010   004D18  0E04               	movlw	4
  7011   004D1A  6E0A               	movwf	color_writetoaddr@value^0,c
  7012   004D1C  0E0C               	movlw	12
  7013   004D1E  EC31  F028         	call	_color_writetoaddr
  7014   004D22  0012               	return		;funcret
  7015   004D24                     __end_of_color_clear_init_interrupts:
  7016                           	callstack 0
  7017                           
  7018 ;; *************** function _color_writetoaddr *****************
  7019 ;; Defined at:
  7020 ;;		line 56 in file "color.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;  address         1    wreg     unsigned char 
  7023 ;;  value           1    9[COMRAM] unsigned char 
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;  address         1   10[COMRAM] unsigned char 
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  1    wreg      void 
  7028 ;; Registers used:
  7029 ;;		wreg, status,2, status,0, cstack
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7035 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7039 ;;Total ram usage:        2 bytes
  7040 ;; Hardware stack levels used: 1
  7041 ;; Hardware stack levels required when called: 7
  7042 ;; This function calls:
  7043 ;;		_I2C_2_Master_Start
  7044 ;;		_I2C_2_Master_Stop
  7045 ;;		_I2C_2_Master_Write
  7046 ;; This function is called by:
  7047 ;;		_color_click_init
  7048 ;;		_color_clear_init_interrupts
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text16
  7053   005062                     __ptext16:
  7054                           	callstack 0
  7055   005062                     _color_writetoaddr:
  7056                           	callstack 22
  7057                           
  7058                           ;incstack = 0
  7059                           ;color_writetoaddr@address stored from wreg
  7060   005062  6E0B               	movwf	color_writetoaddr@address^0,c
  7061   005064                     
  7062                           ;color.c: 57:     I2C_2_Master_Start();
  7063   005064  ECB6  F028         	call	_I2C_2_Master_Start	;wreg free
  7064                           
  7065                           ;color.c: 58:     I2C_2_Master_Write(0x52 | 0x00);
  7066   005068  0E52               	movlw	82
  7067   00506A  ECA0  F028         	call	_I2C_2_Master_Write
  7068                           
  7069                           ;color.c: 59:     I2C_2_Master_Write(0x80 | address);
  7070   00506E  500B               	movf	color_writetoaddr@address^0,w,c
  7071   005070  0980               	iorlw	128
  7072   005072  ECA0  F028         	call	_I2C_2_Master_Write
  7073                           
  7074                           ;color.c: 60:     I2C_2_Master_Write(value);
  7075   005076  500A               	movf	color_writetoaddr@value^0,w,c
  7076   005078  ECA0  F028         	call	_I2C_2_Master_Write
  7077                           
  7078                           ;color.c: 61:     I2C_2_Master_Stop();
  7079   00507C  ECB1  F028         	call	_I2C_2_Master_Stop	;wreg free
  7080   005080  0012               	return		;funcret
  7081   005082                     __end_of_color_writetoaddr:
  7082                           	callstack 0
  7083                           
  7084 ;; *************** function _I2C_2_Master_Init *****************
  7085 ;; Defined at:
  7086 ;;		line 4 in file "i2c.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;		None
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;		None
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  1    wreg      void 
  7093 ;; Registers used:
  7094 ;;		wreg, status,2
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7104 ;;Total ram usage:        0 bytes
  7105 ;; Hardware stack levels used: 1
  7106 ;; Hardware stack levels required when called: 5
  7107 ;; This function calls:
  7108 ;;		Nothing
  7109 ;; This function is called by:
  7110 ;;		_color_click_init
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           	psect	text17
  7115   004F2A                     __ptext17:
  7116                           	callstack 0
  7117   004F2A                     _I2C_2_Master_Init:
  7118                           	callstack 24
  7119   004F2A                     
  7120                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7121   004F2A  010E               	movlb	14	; () banked
  7122   004F2C  51D9               	movf	217,w,b	;volatile
  7123   004F2E  0BF0               	andlw	-16
  7124   004F30  0908               	iorlw	8
  7125   004F32  6FD9               	movwf	217,b	;volatile
  7126   004F34                     
  7127                           ; BSR set to: 14
  7128                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7129   004F34  8BD9               	bsf	217,5,b	;volatile
  7130                           
  7131                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7132   004F36  0E9F               	movlw	159
  7133   004F38  6FD6               	movwf	214,b	;volatile
  7134   004F3A                     
  7135                           ; BSR set to: 14
  7136                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7137   004F3A  8A84               	bsf	132,5,c	;volatile
  7138   004F3C                     
  7139                           ; BSR set to: 14
  7140                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7141   004F3C  8C84               	bsf	132,6,c	;volatile
  7142   004F3E                     
  7143                           ; BSR set to: 14
  7144                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7145   004F3E  9BA7               	bcf	167,5,b	;volatile
  7146   004F40                     
  7147                           ; BSR set to: 14
  7148                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7149   004F40  9DA7               	bcf	167,6,b	;volatile
  7150                           
  7151                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7152   004F42  0E1D               	movlw	29
  7153   004F44  6F1D               	movwf	29,b	;volatile
  7154                           
  7155                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7156   004F46  0E1E               	movlw	30
  7157   004F48  6F1C               	movwf	28,b	;volatile
  7158                           
  7159                           ;i2c.c: 18:   RD5PPS=0x1C;
  7160   004F4A  0E1C               	movlw	28
  7161   004F4C  6F6F               	movwf	111,b	;volatile
  7162                           
  7163                           ;i2c.c: 19:   RD6PPS=0x1B;
  7164   004F4E  0E1B               	movlw	27
  7165   004F50  6F70               	movwf	112,b	;volatile
  7166   004F52                     
  7167                           ; BSR set to: 14
  7168   004F52  0012               	return		;funcret
  7169   004F54                     __end_of_I2C_2_Master_Init:
  7170                           	callstack 0
  7171                           
  7172 ;; *************** function _color_calibration *****************
  7173 ;; Defined at:
  7174 ;;		line 177 in file "color.c"
  7175 ;; Parameters:    Size  Location     Type
  7176 ;;  RGBC            2    0[BANK1 ] PTR struct RGBC_val
  7177 ;;		 -> main@RGBC(8), 
  7178 ;;  HSV             2    2[BANK1 ] PTR struct HSV_val
  7179 ;;		 -> main@HSV(6), 
  7180 ;;  red             2    4[BANK1 ] PTR struct HSV_calib
  7181 ;;		 -> main@red(6), 
  7182 ;;  green           2    6[BANK1 ] PTR struct HSV_calib
  7183 ;;		 -> main@green(6), 
  7184 ;;  blue            2    8[BANK1 ] PTR struct HSV_calib
  7185 ;;		 -> main@blue(6), 
  7186 ;;  yellow          2   10[BANK1 ] PTR struct HSV_calib
  7187 ;;		 -> main@yellow(6), 
  7188 ;;  pink            2   12[BANK1 ] PTR struct HSV_calib
  7189 ;;		 -> main@pink(6), 
  7190 ;;  orange          2   14[BANK1 ] PTR struct HSV_calib
  7191 ;;		 -> main@orange(6), 
  7192 ;;  lightblue       2   16[BANK1 ] PTR struct HSV_calib
  7193 ;;		 -> main@lightblue(6), 
  7194 ;;  white           2   18[BANK1 ] PTR struct HSV_calib
  7195 ;;		 -> main@white(6), 
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;		None
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      void 
  7200 ;; Registers used:
  7201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7207 ;;      Params:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7209 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7210 ;;      Totals:         2       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7211 ;;Total ram usage:       22 bytes
  7212 ;; Hardware stack levels used: 1
  7213 ;; Hardware stack levels required when called: 8
  7214 ;; This function calls:
  7215 ;;		_color_read
  7216 ;;		_rgb_2_hsv
  7217 ;;		_white_Light
  7218 ;; This function is called by:
  7219 ;;		_main
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           	psect	text18
  7224   00238A                     __ptext18:
  7225                           	callstack 0
  7226   00238A                     _color_calibration:
  7227                           	callstack 22
  7228   00238A                     
  7229                           ;color.c: 177: void color_calibration(RGBC_val *RGBC, HSV_val *HSV, HSV_calib *red, HSV_
      +                          calib *green, HSV_calib *blue, HSV_calib *yellow, HSV_calib *pink, HSV_calib *orange, HS
      +                          V_calib *lightblue, HSV_calib *white);color.c: 178: {;color.c: 179:     white_Light(1);
  7230   00238A  0E01               	movlw	1
  7231   00238C  EC1F  F028         	call	_white_Light
  7232   002390                     
  7233                           ;color.c: 180:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7234   002390  8680               	bsf	128,3,c	;volatile
  7235   002392  8E7C               	bsf	124,7,c	;volatile
  7236   002394                     l176:
  7237   002394  B48E               	btfsc	142,2,c	;volatile
  7238   002396  EFCF  F011         	goto	u4391
  7239   00239A  EFD1  F011         	goto	u4390
  7240   00239E                     u4391:
  7241   00239E  EFCA  F011         	goto	l176
  7242   0023A2                     u4390:
  7243   0023A2                     
  7244                           ;color.c: 183:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7245   0023A2  9680               	bcf	128,3,c	;volatile
  7246   0023A4  9E7C               	bcf	124,7,c	;volatile
  7247   0023A6                     
  7248                           ;color.c: 184:     color_read(RGBC);
  7249   0023A6  C100  F00C         	movff	color_calibration@RGBC,color_read@RGBC
  7250   0023AA  C101  F00D         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7251   0023AE  EC11  F01E         	call	_color_read	;wreg free
  7252   0023B2                     
  7253                           ;color.c: 185:     rgb_2_hsv(*RGBC, HSV);
  7254   0023B2  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  7255   0023B6  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7256   0023BA  EE00  F022         	lfsr	0,rgb_2_hsv@RGBC
  7257   0023BE  0E07               	movlw	7
  7258   0023C0                     u4401:
  7259   0023C0  CFDB FFEB          	movff	plusw2,plusw0
  7260   0023C4  06E8               	decf	wreg,f,c
  7261   0023C6  E2FC               	bc	u4401
  7262   0023C8  C102  F02A         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7263   0023CC  C103  F02B         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7264   0023D0  EC41  F017         	call	_rgb_2_hsv	;wreg free
  7265   0023D4                     
  7266                           ;color.c: 186:     red->H = HSV->H;
  7267   0023D4  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  7268   0023D8  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7269   0023DC  C104  FFE1         	movff	color_calibration@red,fsr1l
  7270   0023E0  C105  FFE2         	movff	color_calibration@red+1,fsr1h
  7271   0023E4  CFDE FFE6          	movff	postinc2,postinc1
  7272   0023E8  CFDD FFE5          	movff	postdec2,postdec1
  7273   0023EC                     
  7274                           ;color.c: 187:     red->S = HSV->S;
  7275   0023EC  0101               	movlb	1	; () banked
  7276   0023EE  EE20 F002          	lfsr	2,2
  7277   0023F2  5102               	movf	color_calibration@HSV& (0+255),w,b
  7278   0023F4  26D9               	addwf	fsr2l,f,c
  7279   0023F6  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7280   0023F8  22DA               	addwfc	fsr2h,f,c
  7281   0023FA  EE10 F002          	lfsr	1,2
  7282   0023FE  5104               	movf	color_calibration@red& (0+255),w,b
  7283   002400  26E1               	addwf	fsr1l,f,c
  7284   002402  5105               	movf	(color_calibration@red+1)& (0+255),w,b
  7285   002404  22E2               	addwfc	fsr1h,f,c
  7286   002406  CFDE FFE6          	movff	postinc2,postinc1
  7287   00240A  CFDD FFE5          	movff	postdec2,postdec1
  7288   00240E                     
  7289                           ; BSR set to: 1
  7290                           ;color.c: 188:     red->V = HSV->V;
  7291   00240E  EE20 F004          	lfsr	2,4
  7292   002412  5102               	movf	color_calibration@HSV& (0+255),w,b
  7293   002414  26D9               	addwf	fsr2l,f,c
  7294   002416  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7295   002418  22DA               	addwfc	fsr2h,f,c
  7296   00241A  EE10 F004          	lfsr	1,4
  7297   00241E  5104               	movf	color_calibration@red& (0+255),w,b
  7298   002420  26E1               	addwf	fsr1l,f,c
  7299   002422  5105               	movf	(color_calibration@red+1)& (0+255),w,b
  7300   002424  22E2               	addwfc	fsr1h,f,c
  7301   002426  CFDE FFE6          	movff	postinc2,postinc1
  7302   00242A  CFDD FFE5          	movff	postdec2,postdec1
  7303   00242E                     
  7304                           ; BSR set to: 1
  7305                           ;color.c: 190:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7306   00242E  0E29               	movlw	41
  7307   002430  6E39               	movwf	(??_color_calibration+1)^0,c
  7308   002432  0E96               	movlw	150
  7309   002434  6E38               	movwf	??_color_calibration^0,c
  7310   002436  0E7F               	movlw	127
  7311   002438                     u6247:
  7312   002438  2EE8               	decfsz	wreg,f,c
  7313   00243A  D7FE               	bra	u6247
  7314   00243C  2E38               	decfsz	??_color_calibration^0,f,c
  7315   00243E  D7FC               	bra	u6247
  7316   002440  2E39               	decfsz	(??_color_calibration+1)^0,f,c
  7317   002442  D7FA               	bra	u6247
  7318   002444  0000               	nop	
  7319   002446                     
  7320                           ;color.c: 191:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7321   002446  8680               	bsf	128,3,c	;volatile
  7322   002448  8E7C               	bsf	124,7,c	;volatile
  7323   00244A                     l179:
  7324   00244A  B48E               	btfsc	142,2,c	;volatile
  7325   00244C  EF2A  F012         	goto	u4411
  7326   002450  EF2C  F012         	goto	u4410
  7327   002454                     u4411:
  7328   002454  EF25  F012         	goto	l179
  7329   002458                     u4410:
  7330   002458                     
  7331                           ;color.c: 194:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7332   002458  9680               	bcf	128,3,c	;volatile
  7333   00245A  9E7C               	bcf	124,7,c	;volatile
  7334   00245C                     
  7335                           ;color.c: 195:     color_read(RGBC);
  7336   00245C  C100  F00C         	movff	color_calibration@RGBC,color_read@RGBC
  7337   002460  C101  F00D         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7338   002464  EC11  F01E         	call	_color_read	;wreg free
  7339   002468                     
  7340                           ;color.c: 196:     rgb_2_hsv(*RGBC, HSV);
  7341   002468  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  7342   00246C  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7343   002470  EE00  F022         	lfsr	0,rgb_2_hsv@RGBC
  7344   002474  0E07               	movlw	7
  7345   002476                     u4421:
  7346   002476  CFDB FFEB          	movff	plusw2,plusw0
  7347   00247A  06E8               	decf	wreg,f,c
  7348   00247C  E2FC               	bc	u4421
  7349   00247E  C102  F02A         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7350   002482  C103  F02B         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7351   002486  EC41  F017         	call	_rgb_2_hsv	;wreg free
  7352   00248A                     
  7353                           ;color.c: 197:     green->H = HSV->H;
  7354   00248A  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  7355   00248E  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7356   002492  C106  FFE1         	movff	color_calibration@green,fsr1l
  7357   002496  C107  FFE2         	movff	color_calibration@green+1,fsr1h
  7358   00249A  CFDE FFE6          	movff	postinc2,postinc1
  7359   00249E  CFDD FFE5          	movff	postdec2,postdec1
  7360   0024A2                     
  7361                           ;color.c: 198:     green->S = HSV->S;
  7362   0024A2  0101               	movlb	1	; () banked
  7363   0024A4  EE20 F002          	lfsr	2,2
  7364   0024A8  5102               	movf	color_calibration@HSV& (0+255),w,b
  7365   0024AA  26D9               	addwf	fsr2l,f,c
  7366   0024AC  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7367   0024AE  22DA               	addwfc	fsr2h,f,c
  7368   0024B0  EE10 F002          	lfsr	1,2
  7369   0024B4  5106               	movf	color_calibration@green& (0+255),w,b
  7370   0024B6  26E1               	addwf	fsr1l,f,c
  7371   0024B8  5107               	movf	(color_calibration@green+1)& (0+255),w,b
  7372   0024BA  22E2               	addwfc	fsr1h,f,c
  7373   0024BC  CFDE FFE6          	movff	postinc2,postinc1
  7374   0024C0  CFDD FFE5          	movff	postdec2,postdec1
  7375   0024C4                     
  7376                           ; BSR set to: 1
  7377                           ;color.c: 199:     green->V = HSV->V;
  7378   0024C4  EE20 F004          	lfsr	2,4
  7379   0024C8  5102               	movf	color_calibration@HSV& (0+255),w,b
  7380   0024CA  26D9               	addwf	fsr2l,f,c
  7381   0024CC  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7382   0024CE  22DA               	addwfc	fsr2h,f,c
  7383   0024D0  EE10 F004          	lfsr	1,4
  7384   0024D4  5106               	movf	color_calibration@green& (0+255),w,b
  7385   0024D6  26E1               	addwf	fsr1l,f,c
  7386   0024D8  5107               	movf	(color_calibration@green+1)& (0+255),w,b
  7387   0024DA  22E2               	addwfc	fsr1h,f,c
  7388   0024DC  CFDE FFE6          	movff	postinc2,postinc1
  7389   0024E0  CFDD FFE5          	movff	postdec2,postdec1
  7390   0024E4                     
  7391                           ; BSR set to: 1
  7392                           ;color.c: 201:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7393   0024E4  0E29               	movlw	41
  7394   0024E6  6E39               	movwf	(??_color_calibration+1)^0,c
  7395   0024E8  0E96               	movlw	150
  7396   0024EA  6E38               	movwf	??_color_calibration^0,c
  7397   0024EC  0E7F               	movlw	127
  7398   0024EE                     u6257:
  7399   0024EE  2EE8               	decfsz	wreg,f,c
  7400   0024F0  D7FE               	bra	u6257
  7401   0024F2  2E38               	decfsz	??_color_calibration^0,f,c
  7402   0024F4  D7FC               	bra	u6257
  7403   0024F6  2E39               	decfsz	(??_color_calibration+1)^0,f,c
  7404   0024F8  D7FA               	bra	u6257
  7405   0024FA  0000               	nop	
  7406   0024FC                     
  7407                           ;color.c: 202:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7408   0024FC  8680               	bsf	128,3,c	;volatile
  7409   0024FE  8E7C               	bsf	124,7,c	;volatile
  7410   002500                     l182:
  7411   002500  B48E               	btfsc	142,2,c	;volatile
  7412   002502  EF85  F012         	goto	u4431
  7413   002506  EF87  F012         	goto	u4430
  7414   00250A                     u4431:
  7415   00250A  EF80  F012         	goto	l182
  7416   00250E                     u4430:
  7417   00250E                     
  7418                           ;color.c: 205:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7419   00250E  9680               	bcf	128,3,c	;volatile
  7420   002510  9E7C               	bcf	124,7,c	;volatile
  7421   002512                     
  7422                           ;color.c: 206:     color_read(RGBC);
  7423   002512  C100  F00C         	movff	color_calibration@RGBC,color_read@RGBC
  7424   002516  C101  F00D         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7425   00251A  EC11  F01E         	call	_color_read	;wreg free
  7426   00251E                     
  7427                           ;color.c: 207:     rgb_2_hsv(*RGBC, HSV);
  7428   00251E  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  7429   002522  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7430   002526  EE00  F022         	lfsr	0,rgb_2_hsv@RGBC
  7431   00252A  0E07               	movlw	7
  7432   00252C                     u4441:
  7433   00252C  CFDB FFEB          	movff	plusw2,plusw0
  7434   002530  06E8               	decf	wreg,f,c
  7435   002532  E2FC               	bc	u4441
  7436   002534  C102  F02A         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7437   002538  C103  F02B         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7438   00253C  EC41  F017         	call	_rgb_2_hsv	;wreg free
  7439   002540                     
  7440                           ;color.c: 208:     blue->H = HSV->H;
  7441   002540  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  7442   002544  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7443   002548  C108  FFE1         	movff	color_calibration@blue,fsr1l
  7444   00254C  C109  FFE2         	movff	color_calibration@blue+1,fsr1h
  7445   002550  CFDE FFE6          	movff	postinc2,postinc1
  7446   002554  CFDD FFE5          	movff	postdec2,postdec1
  7447   002558                     
  7448                           ;color.c: 209:     blue->S = HSV->S;
  7449   002558  0101               	movlb	1	; () banked
  7450   00255A  EE20 F002          	lfsr	2,2
  7451   00255E  5102               	movf	color_calibration@HSV& (0+255),w,b
  7452   002560  26D9               	addwf	fsr2l,f,c
  7453   002562  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7454   002564  22DA               	addwfc	fsr2h,f,c
  7455   002566  EE10 F002          	lfsr	1,2
  7456   00256A  5108               	movf	color_calibration@blue& (0+255),w,b
  7457   00256C  26E1               	addwf	fsr1l,f,c
  7458   00256E  5109               	movf	(color_calibration@blue+1)& (0+255),w,b
  7459   002570  22E2               	addwfc	fsr1h,f,c
  7460   002572  CFDE FFE6          	movff	postinc2,postinc1
  7461   002576  CFDD FFE5          	movff	postdec2,postdec1
  7462   00257A                     
  7463                           ; BSR set to: 1
  7464                           ;color.c: 210:     blue->V = HSV->V;
  7465   00257A  EE20 F004          	lfsr	2,4
  7466   00257E  5102               	movf	color_calibration@HSV& (0+255),w,b
  7467   002580  26D9               	addwf	fsr2l,f,c
  7468   002582  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7469   002584  22DA               	addwfc	fsr2h,f,c
  7470   002586  EE10 F004          	lfsr	1,4
  7471   00258A  5108               	movf	color_calibration@blue& (0+255),w,b
  7472   00258C  26E1               	addwf	fsr1l,f,c
  7473   00258E  5109               	movf	(color_calibration@blue+1)& (0+255),w,b
  7474   002590  22E2               	addwfc	fsr1h,f,c
  7475   002592  CFDE FFE6          	movff	postinc2,postinc1
  7476   002596  CFDD FFE5          	movff	postdec2,postdec1
  7477   00259A                     
  7478                           ; BSR set to: 1
  7479                           ;color.c: 212:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7480   00259A  0E29               	movlw	41
  7481   00259C  6E39               	movwf	(??_color_calibration+1)^0,c
  7482   00259E  0E96               	movlw	150
  7483   0025A0  6E38               	movwf	??_color_calibration^0,c
  7484   0025A2  0E7F               	movlw	127
  7485   0025A4                     u6267:
  7486   0025A4  2EE8               	decfsz	wreg,f,c
  7487   0025A6  D7FE               	bra	u6267
  7488   0025A8  2E38               	decfsz	??_color_calibration^0,f,c
  7489   0025AA  D7FC               	bra	u6267
  7490   0025AC  2E39               	decfsz	(??_color_calibration+1)^0,f,c
  7491   0025AE  D7FA               	bra	u6267
  7492   0025B0  0000               	nop	
  7493   0025B2                     
  7494                           ;color.c: 213:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7495   0025B2  8680               	bsf	128,3,c	;volatile
  7496   0025B4  8E7C               	bsf	124,7,c	;volatile
  7497   0025B6                     l185:
  7498   0025B6  B48E               	btfsc	142,2,c	;volatile
  7499   0025B8  EFE0  F012         	goto	u4451
  7500   0025BC  EFE2  F012         	goto	u4450
  7501   0025C0                     u4451:
  7502   0025C0  EFDB  F012         	goto	l185
  7503   0025C4                     u4450:
  7504   0025C4                     
  7505                           ;color.c: 216:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7506   0025C4  9680               	bcf	128,3,c	;volatile
  7507   0025C6  9E7C               	bcf	124,7,c	;volatile
  7508   0025C8                     
  7509                           ;color.c: 217:     color_read(RGBC);
  7510   0025C8  C100  F00C         	movff	color_calibration@RGBC,color_read@RGBC
  7511   0025CC  C101  F00D         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7512   0025D0  EC11  F01E         	call	_color_read	;wreg free
  7513   0025D4                     
  7514                           ;color.c: 218:     rgb_2_hsv(*RGBC, HSV);
  7515   0025D4  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  7516   0025D8  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7517   0025DC  EE00  F022         	lfsr	0,rgb_2_hsv@RGBC
  7518   0025E0  0E07               	movlw	7
  7519   0025E2                     u4461:
  7520   0025E2  CFDB FFEB          	movff	plusw2,plusw0
  7521   0025E6  06E8               	decf	wreg,f,c
  7522   0025E8  E2FC               	bc	u4461
  7523   0025EA  C102  F02A         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7524   0025EE  C103  F02B         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7525   0025F2  EC41  F017         	call	_rgb_2_hsv	;wreg free
  7526   0025F6                     
  7527                           ;color.c: 219:     yellow->H = HSV->H;
  7528   0025F6  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  7529   0025FA  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7530   0025FE  C10A  FFE1         	movff	color_calibration@yellow,fsr1l
  7531   002602  C10B  FFE2         	movff	color_calibration@yellow+1,fsr1h
  7532   002606  CFDE FFE6          	movff	postinc2,postinc1
  7533   00260A  CFDD FFE5          	movff	postdec2,postdec1
  7534   00260E                     
  7535                           ;color.c: 220:     yellow->S = HSV->S;
  7536   00260E  0101               	movlb	1	; () banked
  7537   002610  EE20 F002          	lfsr	2,2
  7538   002614  5102               	movf	color_calibration@HSV& (0+255),w,b
  7539   002616  26D9               	addwf	fsr2l,f,c
  7540   002618  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7541   00261A  22DA               	addwfc	fsr2h,f,c
  7542   00261C  EE10 F002          	lfsr	1,2
  7543   002620  510A               	movf	color_calibration@yellow& (0+255),w,b
  7544   002622  26E1               	addwf	fsr1l,f,c
  7545   002624  510B               	movf	(color_calibration@yellow+1)& (0+255),w,b
  7546   002626  22E2               	addwfc	fsr1h,f,c
  7547   002628  CFDE FFE6          	movff	postinc2,postinc1
  7548   00262C  CFDD FFE5          	movff	postdec2,postdec1
  7549   002630                     
  7550                           ; BSR set to: 1
  7551                           ;color.c: 221:     yellow->V = HSV->V;
  7552   002630  EE20 F004          	lfsr	2,4
  7553   002634  5102               	movf	color_calibration@HSV& (0+255),w,b
  7554   002636  26D9               	addwf	fsr2l,f,c
  7555   002638  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7556   00263A  22DA               	addwfc	fsr2h,f,c
  7557   00263C  EE10 F004          	lfsr	1,4
  7558   002640  510A               	movf	color_calibration@yellow& (0+255),w,b
  7559   002642  26E1               	addwf	fsr1l,f,c
  7560   002644  510B               	movf	(color_calibration@yellow+1)& (0+255),w,b
  7561   002646  22E2               	addwfc	fsr1h,f,c
  7562   002648  CFDE FFE6          	movff	postinc2,postinc1
  7563   00264C  CFDD FFE5          	movff	postdec2,postdec1
  7564   002650                     
  7565                           ; BSR set to: 1
  7566                           ;color.c: 223:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7567   002650  0E29               	movlw	41
  7568   002652  6E39               	movwf	(??_color_calibration+1)^0,c
  7569   002654  0E96               	movlw	150
  7570   002656  6E38               	movwf	??_color_calibration^0,c
  7571   002658  0E7F               	movlw	127
  7572   00265A                     u6277:
  7573   00265A  2EE8               	decfsz	wreg,f,c
  7574   00265C  D7FE               	bra	u6277
  7575   00265E  2E38               	decfsz	??_color_calibration^0,f,c
  7576   002660  D7FC               	bra	u6277
  7577   002662  2E39               	decfsz	(??_color_calibration+1)^0,f,c
  7578   002664  D7FA               	bra	u6277
  7579   002666  0000               	nop	
  7580   002668                     
  7581                           ;color.c: 224:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7582   002668  8680               	bsf	128,3,c	;volatile
  7583   00266A  8E7C               	bsf	124,7,c	;volatile
  7584   00266C                     l188:
  7585   00266C  B48E               	btfsc	142,2,c	;volatile
  7586   00266E  EF3B  F013         	goto	u4471
  7587   002672  EF3D  F013         	goto	u4470
  7588   002676                     u4471:
  7589   002676  EF36  F013         	goto	l188
  7590   00267A                     u4470:
  7591   00267A                     
  7592                           ;color.c: 227:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7593   00267A  9680               	bcf	128,3,c	;volatile
  7594   00267C  9E7C               	bcf	124,7,c	;volatile
  7595   00267E                     
  7596                           ;color.c: 228:     color_read(RGBC);
  7597   00267E  C100  F00C         	movff	color_calibration@RGBC,color_read@RGBC
  7598   002682  C101  F00D         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7599   002686  EC11  F01E         	call	_color_read	;wreg free
  7600   00268A                     
  7601                           ;color.c: 229:     rgb_2_hsv(*RGBC, HSV);
  7602   00268A  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  7603   00268E  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7604   002692  EE00  F022         	lfsr	0,rgb_2_hsv@RGBC
  7605   002696  0E07               	movlw	7
  7606   002698                     u4481:
  7607   002698  CFDB FFEB          	movff	plusw2,plusw0
  7608   00269C  06E8               	decf	wreg,f,c
  7609   00269E  E2FC               	bc	u4481
  7610   0026A0  C102  F02A         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7611   0026A4  C103  F02B         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7612   0026A8  EC41  F017         	call	_rgb_2_hsv	;wreg free
  7613   0026AC                     
  7614                           ;color.c: 230:     pink->H = HSV->H;
  7615   0026AC  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  7616   0026B0  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7617   0026B4  C10C  FFE1         	movff	color_calibration@pink,fsr1l
  7618   0026B8  C10D  FFE2         	movff	color_calibration@pink+1,fsr1h
  7619   0026BC  CFDE FFE6          	movff	postinc2,postinc1
  7620   0026C0  CFDD FFE5          	movff	postdec2,postdec1
  7621   0026C4                     
  7622                           ;color.c: 231:     pink->S = HSV->S;
  7623   0026C4  0101               	movlb	1	; () banked
  7624   0026C6  EE20 F002          	lfsr	2,2
  7625   0026CA  5102               	movf	color_calibration@HSV& (0+255),w,b
  7626   0026CC  26D9               	addwf	fsr2l,f,c
  7627   0026CE  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7628   0026D0  22DA               	addwfc	fsr2h,f,c
  7629   0026D2  EE10 F002          	lfsr	1,2
  7630   0026D6  510C               	movf	color_calibration@pink& (0+255),w,b
  7631   0026D8  26E1               	addwf	fsr1l,f,c
  7632   0026DA  510D               	movf	(color_calibration@pink+1)& (0+255),w,b
  7633   0026DC  22E2               	addwfc	fsr1h,f,c
  7634   0026DE  CFDE FFE6          	movff	postinc2,postinc1
  7635   0026E2  CFDD FFE5          	movff	postdec2,postdec1
  7636   0026E6                     
  7637                           ; BSR set to: 1
  7638                           ;color.c: 232:     pink->V = HSV->V;
  7639   0026E6  EE20 F004          	lfsr	2,4
  7640   0026EA  5102               	movf	color_calibration@HSV& (0+255),w,b
  7641   0026EC  26D9               	addwf	fsr2l,f,c
  7642   0026EE  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7643   0026F0  22DA               	addwfc	fsr2h,f,c
  7644   0026F2  EE10 F004          	lfsr	1,4
  7645   0026F6  510C               	movf	color_calibration@pink& (0+255),w,b
  7646   0026F8  26E1               	addwf	fsr1l,f,c
  7647   0026FA  510D               	movf	(color_calibration@pink+1)& (0+255),w,b
  7648   0026FC  22E2               	addwfc	fsr1h,f,c
  7649   0026FE  CFDE FFE6          	movff	postinc2,postinc1
  7650   002702  CFDD FFE5          	movff	postdec2,postdec1
  7651   002706                     
  7652                           ; BSR set to: 1
  7653                           ;color.c: 234:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7654   002706  0E29               	movlw	41
  7655   002708  6E39               	movwf	(??_color_calibration+1)^0,c
  7656   00270A  0E96               	movlw	150
  7657   00270C  6E38               	movwf	??_color_calibration^0,c
  7658   00270E  0E7F               	movlw	127
  7659   002710                     u6287:
  7660   002710  2EE8               	decfsz	wreg,f,c
  7661   002712  D7FE               	bra	u6287
  7662   002714  2E38               	decfsz	??_color_calibration^0,f,c
  7663   002716  D7FC               	bra	u6287
  7664   002718  2E39               	decfsz	(??_color_calibration+1)^0,f,c
  7665   00271A  D7FA               	bra	u6287
  7666   00271C  0000               	nop	
  7667   00271E                     
  7668                           ;color.c: 235:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7669   00271E  8680               	bsf	128,3,c	;volatile
  7670   002720  8E7C               	bsf	124,7,c	;volatile
  7671   002722                     l191:
  7672   002722  B48E               	btfsc	142,2,c	;volatile
  7673   002724  EF96  F013         	goto	u4491
  7674   002728  EF98  F013         	goto	u4490
  7675   00272C                     u4491:
  7676   00272C  EF91  F013         	goto	l191
  7677   002730                     u4490:
  7678   002730                     
  7679                           ;color.c: 238:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7680   002730  9680               	bcf	128,3,c	;volatile
  7681   002732  9E7C               	bcf	124,7,c	;volatile
  7682   002734                     
  7683                           ;color.c: 239:     color_read(RGBC);
  7684   002734  C100  F00C         	movff	color_calibration@RGBC,color_read@RGBC
  7685   002738  C101  F00D         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7686   00273C  EC11  F01E         	call	_color_read	;wreg free
  7687   002740                     
  7688                           ;color.c: 240:     rgb_2_hsv(*RGBC, HSV);
  7689   002740  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  7690   002744  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7691   002748  EE00  F022         	lfsr	0,rgb_2_hsv@RGBC
  7692   00274C  0E07               	movlw	7
  7693   00274E                     u4501:
  7694   00274E  CFDB FFEB          	movff	plusw2,plusw0
  7695   002752  06E8               	decf	wreg,f,c
  7696   002754  E2FC               	bc	u4501
  7697   002756  C102  F02A         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7698   00275A  C103  F02B         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7699   00275E  EC41  F017         	call	_rgb_2_hsv	;wreg free
  7700   002762                     
  7701                           ;color.c: 241:     orange->H = HSV->H;
  7702   002762  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  7703   002766  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7704   00276A  C10E  FFE1         	movff	color_calibration@orange,fsr1l
  7705   00276E  C10F  FFE2         	movff	color_calibration@orange+1,fsr1h
  7706   002772  CFDE FFE6          	movff	postinc2,postinc1
  7707   002776  CFDD FFE5          	movff	postdec2,postdec1
  7708   00277A                     
  7709                           ;color.c: 242:     orange->S = HSV->S;
  7710   00277A  0101               	movlb	1	; () banked
  7711   00277C  EE20 F002          	lfsr	2,2
  7712   002780  5102               	movf	color_calibration@HSV& (0+255),w,b
  7713   002782  26D9               	addwf	fsr2l,f,c
  7714   002784  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7715   002786  22DA               	addwfc	fsr2h,f,c
  7716   002788  EE10 F002          	lfsr	1,2
  7717   00278C  510E               	movf	color_calibration@orange& (0+255),w,b
  7718   00278E  26E1               	addwf	fsr1l,f,c
  7719   002790  510F               	movf	(color_calibration@orange+1)& (0+255),w,b
  7720   002792  22E2               	addwfc	fsr1h,f,c
  7721   002794  CFDE FFE6          	movff	postinc2,postinc1
  7722   002798  CFDD FFE5          	movff	postdec2,postdec1
  7723   00279C                     
  7724                           ; BSR set to: 1
  7725                           ;color.c: 243:     orange->V = HSV->V;
  7726   00279C  EE20 F004          	lfsr	2,4
  7727   0027A0  5102               	movf	color_calibration@HSV& (0+255),w,b
  7728   0027A2  26D9               	addwf	fsr2l,f,c
  7729   0027A4  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7730   0027A6  22DA               	addwfc	fsr2h,f,c
  7731   0027A8  EE10 F004          	lfsr	1,4
  7732   0027AC  510E               	movf	color_calibration@orange& (0+255),w,b
  7733   0027AE  26E1               	addwf	fsr1l,f,c
  7734   0027B0  510F               	movf	(color_calibration@orange+1)& (0+255),w,b
  7735   0027B2  22E2               	addwfc	fsr1h,f,c
  7736   0027B4  CFDE FFE6          	movff	postinc2,postinc1
  7737   0027B8  CFDD FFE5          	movff	postdec2,postdec1
  7738   0027BC                     
  7739                           ; BSR set to: 1
  7740                           ;color.c: 245:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7741   0027BC  0E29               	movlw	41
  7742   0027BE  6E39               	movwf	(??_color_calibration+1)^0,c
  7743   0027C0  0E96               	movlw	150
  7744   0027C2  6E38               	movwf	??_color_calibration^0,c
  7745   0027C4  0E7F               	movlw	127
  7746   0027C6                     u6297:
  7747   0027C6  2EE8               	decfsz	wreg,f,c
  7748   0027C8  D7FE               	bra	u6297
  7749   0027CA  2E38               	decfsz	??_color_calibration^0,f,c
  7750   0027CC  D7FC               	bra	u6297
  7751   0027CE  2E39               	decfsz	(??_color_calibration+1)^0,f,c
  7752   0027D0  D7FA               	bra	u6297
  7753   0027D2  0000               	nop	
  7754   0027D4                     
  7755                           ;color.c: 246:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7756   0027D4  8680               	bsf	128,3,c	;volatile
  7757   0027D6  8E7C               	bsf	124,7,c	;volatile
  7758   0027D8                     l194:
  7759   0027D8  B48E               	btfsc	142,2,c	;volatile
  7760   0027DA  EFF1  F013         	goto	u4511
  7761   0027DE  EFF3  F013         	goto	u4510
  7762   0027E2                     u4511:
  7763   0027E2  EFEC  F013         	goto	l194
  7764   0027E6                     u4510:
  7765   0027E6                     
  7766                           ;color.c: 249:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7767   0027E6  9680               	bcf	128,3,c	;volatile
  7768   0027E8  9E7C               	bcf	124,7,c	;volatile
  7769   0027EA                     
  7770                           ;color.c: 250:     color_read(RGBC);
  7771   0027EA  C100  F00C         	movff	color_calibration@RGBC,color_read@RGBC
  7772   0027EE  C101  F00D         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7773   0027F2  EC11  F01E         	call	_color_read	;wreg free
  7774   0027F6                     
  7775                           ;color.c: 251:     rgb_2_hsv(*RGBC, HSV);
  7776   0027F6  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  7777   0027FA  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7778   0027FE  EE00  F022         	lfsr	0,rgb_2_hsv@RGBC
  7779   002802  0E07               	movlw	7
  7780   002804                     u4521:
  7781   002804  CFDB FFEB          	movff	plusw2,plusw0
  7782   002808  06E8               	decf	wreg,f,c
  7783   00280A  E2FC               	bc	u4521
  7784   00280C  C102  F02A         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7785   002810  C103  F02B         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7786   002814  EC41  F017         	call	_rgb_2_hsv	;wreg free
  7787   002818                     
  7788                           ;color.c: 252:     lightblue->H = HSV->H;
  7789   002818  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  7790   00281C  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7791   002820  C110  FFE1         	movff	color_calibration@lightblue,fsr1l
  7792   002824  C111  FFE2         	movff	color_calibration@lightblue+1,fsr1h
  7793   002828  CFDE FFE6          	movff	postinc2,postinc1
  7794   00282C  CFDD FFE5          	movff	postdec2,postdec1
  7795   002830                     
  7796                           ;color.c: 253:     lightblue->S = HSV->S;
  7797   002830  0101               	movlb	1	; () banked
  7798   002832  EE20 F002          	lfsr	2,2
  7799   002836  5102               	movf	color_calibration@HSV& (0+255),w,b
  7800   002838  26D9               	addwf	fsr2l,f,c
  7801   00283A  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7802   00283C  22DA               	addwfc	fsr2h,f,c
  7803   00283E  EE10 F002          	lfsr	1,2
  7804   002842  5110               	movf	color_calibration@lightblue& (0+255),w,b
  7805   002844  26E1               	addwf	fsr1l,f,c
  7806   002846  5111               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  7807   002848  22E2               	addwfc	fsr1h,f,c
  7808   00284A  CFDE FFE6          	movff	postinc2,postinc1
  7809   00284E  CFDD FFE5          	movff	postdec2,postdec1
  7810   002852                     
  7811                           ; BSR set to: 1
  7812                           ;color.c: 254:     lightblue->V = HSV->V;
  7813   002852  EE20 F004          	lfsr	2,4
  7814   002856  5102               	movf	color_calibration@HSV& (0+255),w,b
  7815   002858  26D9               	addwf	fsr2l,f,c
  7816   00285A  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7817   00285C  22DA               	addwfc	fsr2h,f,c
  7818   00285E  EE10 F004          	lfsr	1,4
  7819   002862  5110               	movf	color_calibration@lightblue& (0+255),w,b
  7820   002864  26E1               	addwf	fsr1l,f,c
  7821   002866  5111               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  7822   002868  22E2               	addwfc	fsr1h,f,c
  7823   00286A  CFDE FFE6          	movff	postinc2,postinc1
  7824   00286E  CFDD FFE5          	movff	postdec2,postdec1
  7825   002872                     
  7826                           ; BSR set to: 1
  7827                           ;color.c: 256:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7828   002872  0E29               	movlw	41
  7829   002874  6E39               	movwf	(??_color_calibration+1)^0,c
  7830   002876  0E96               	movlw	150
  7831   002878  6E38               	movwf	??_color_calibration^0,c
  7832   00287A  0E7F               	movlw	127
  7833   00287C                     u6307:
  7834   00287C  2EE8               	decfsz	wreg,f,c
  7835   00287E  D7FE               	bra	u6307
  7836   002880  2E38               	decfsz	??_color_calibration^0,f,c
  7837   002882  D7FC               	bra	u6307
  7838   002884  2E39               	decfsz	(??_color_calibration+1)^0,f,c
  7839   002886  D7FA               	bra	u6307
  7840   002888  0000               	nop	
  7841   00288A                     
  7842                           ;color.c: 257:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7843   00288A  8680               	bsf	128,3,c	;volatile
  7844   00288C  8E7C               	bsf	124,7,c	;volatile
  7845   00288E                     l197:
  7846   00288E  B48E               	btfsc	142,2,c	;volatile
  7847   002890  EF4C  F014         	goto	u4531
  7848   002894  EF4E  F014         	goto	u4530
  7849   002898                     u4531:
  7850   002898  EF47  F014         	goto	l197
  7851   00289C                     u4530:
  7852   00289C                     
  7853                           ;color.c: 260:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7854   00289C  9680               	bcf	128,3,c	;volatile
  7855   00289E  9E7C               	bcf	124,7,c	;volatile
  7856   0028A0                     
  7857                           ;color.c: 261:     color_read(RGBC);
  7858   0028A0  C100  F00C         	movff	color_calibration@RGBC,color_read@RGBC
  7859   0028A4  C101  F00D         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7860   0028A8  EC11  F01E         	call	_color_read	;wreg free
  7861   0028AC                     
  7862                           ;color.c: 262:     rgb_2_hsv(*RGBC, HSV);
  7863   0028AC  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  7864   0028B0  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7865   0028B4  EE00  F022         	lfsr	0,rgb_2_hsv@RGBC
  7866   0028B8  0E07               	movlw	7
  7867   0028BA                     u4541:
  7868   0028BA  CFDB FFEB          	movff	plusw2,plusw0
  7869   0028BE  06E8               	decf	wreg,f,c
  7870   0028C0  E2FC               	bc	u4541
  7871   0028C2  C102  F02A         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7872   0028C6  C103  F02B         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7873   0028CA  EC41  F017         	call	_rgb_2_hsv	;wreg free
  7874   0028CE                     
  7875                           ;color.c: 263:     white->H = HSV->H;
  7876   0028CE  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  7877   0028D2  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7878   0028D6  C112  FFE1         	movff	color_calibration@white,fsr1l
  7879   0028DA  C113  FFE2         	movff	color_calibration@white+1,fsr1h
  7880   0028DE  CFDE FFE6          	movff	postinc2,postinc1
  7881   0028E2  CFDD FFE5          	movff	postdec2,postdec1
  7882   0028E6                     
  7883                           ;color.c: 264:     white->S = HSV->S;
  7884   0028E6  0101               	movlb	1	; () banked
  7885   0028E8  EE20 F002          	lfsr	2,2
  7886   0028EC  5102               	movf	color_calibration@HSV& (0+255),w,b
  7887   0028EE  26D9               	addwf	fsr2l,f,c
  7888   0028F0  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7889   0028F2  22DA               	addwfc	fsr2h,f,c
  7890   0028F4  EE10 F002          	lfsr	1,2
  7891   0028F8  5112               	movf	color_calibration@white& (0+255),w,b
  7892   0028FA  26E1               	addwf	fsr1l,f,c
  7893   0028FC  5113               	movf	(color_calibration@white+1)& (0+255),w,b
  7894   0028FE  22E2               	addwfc	fsr1h,f,c
  7895   002900  CFDE FFE6          	movff	postinc2,postinc1
  7896   002904  CFDD FFE5          	movff	postdec2,postdec1
  7897   002908                     
  7898                           ; BSR set to: 1
  7899                           ;color.c: 265:     white->V = HSV->V;
  7900   002908  EE20 F004          	lfsr	2,4
  7901   00290C  5102               	movf	color_calibration@HSV& (0+255),w,b
  7902   00290E  26D9               	addwf	fsr2l,f,c
  7903   002910  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7904   002912  22DA               	addwfc	fsr2h,f,c
  7905   002914  EE10 F004          	lfsr	1,4
  7906   002918  5112               	movf	color_calibration@white& (0+255),w,b
  7907   00291A  26E1               	addwf	fsr1l,f,c
  7908   00291C  5113               	movf	(color_calibration@white+1)& (0+255),w,b
  7909   00291E  22E2               	addwfc	fsr1h,f,c
  7910   002920  CFDE FFE6          	movff	postinc2,postinc1
  7911   002924  CFDD FFE5          	movff	postdec2,postdec1
  7912   002928                     
  7913                           ; BSR set to: 1
  7914                           ;color.c: 267:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7915   002928  0E29               	movlw	41
  7916   00292A  6E39               	movwf	(??_color_calibration+1)^0,c
  7917   00292C  0E96               	movlw	150
  7918   00292E  6E38               	movwf	??_color_calibration^0,c
  7919   002930  0E7F               	movlw	127
  7920   002932                     u6317:
  7921   002932  2EE8               	decfsz	wreg,f,c
  7922   002934  D7FE               	bra	u6317
  7923   002936  2E38               	decfsz	??_color_calibration^0,f,c
  7924   002938  D7FC               	bra	u6317
  7925   00293A  2E39               	decfsz	(??_color_calibration+1)^0,f,c
  7926   00293C  D7FA               	bra	u6317
  7927   00293E  0000               	nop	
  7928   002940                     
  7929                           ;color.c: 268:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7930   002940  8680               	bsf	128,3,c	;volatile
  7931   002942  8E7C               	bsf	124,7,c	;volatile
  7932   002944  0012               	return		;funcret
  7933   002946                     __end_of_color_calibration:
  7934                           	callstack 0
  7935                           
  7936 ;; *************** function _white_Light *****************
  7937 ;; Defined at:
  7938 ;;		line 65 in file "color.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  state           1    wreg     unsigned char 
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;  state           1    7[COMRAM] unsigned char 
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  1    wreg      void 
  7945 ;; Registers used:
  7946 ;;		wreg, status,2
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7956 ;;Total ram usage:        1 bytes
  7957 ;; Hardware stack levels used: 1
  7958 ;; Hardware stack levels required when called: 5
  7959 ;; This function calls:
  7960 ;;		Nothing
  7961 ;; This function is called by:
  7962 ;;		_main
  7963 ;;		_color_calibration
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967                           	psect	text19
  7968   00503E                     __ptext19:
  7969                           	callstack 0
  7970   00503E                     _white_Light:
  7971                           	callstack 25
  7972                           
  7973                           ;incstack = 0
  7974                           ;white_Light@state stored from wreg
  7975   00503E  6E08               	movwf	white_Light@state^0,c
  7976   005040                     
  7977                           ;color.c: 65: void white_Light(char state);color.c: 66: {;color.c: 67:     if (state){
  7978   005040  5008               	movf	white_Light@state^0,w,c
  7979   005042  B4D8               	btfsc	status,2,c
  7980   005044  EF26  F028         	goto	u4141
  7981   005048  EF28  F028         	goto	u4140
  7982   00504C                     u4141:
  7983   00504C  EF2D  F028         	goto	l146
  7984   005050                     u4140:
  7985   005050                     
  7986                           ;color.c: 68:         LATGbits.LATG0 = 1;
  7987   005050  807F               	bsf	127,0,c	;volatile
  7988                           
  7989                           ;color.c: 69:         LATEbits.LATE7 = 1;
  7990   005052  8E7D               	bsf	125,7,c	;volatile
  7991                           
  7992                           ;color.c: 70:         LATAbits.LATA3 = 1;
  7993   005054  8679               	bsf	121,3,c	;volatile
  7994                           
  7995                           ;color.c: 71:     }
  7996   005056  EF30  F028         	goto	l148
  7997   00505A                     l146:
  7998                           
  7999                           ;color.c: 73:         LATGbits.LATG0 = 0;
  8000   00505A  907F               	bcf	127,0,c	;volatile
  8001                           
  8002                           ;color.c: 74:         LATEbits.LATE7 = 0;
  8003   00505C  9E7D               	bcf	125,7,c	;volatile
  8004                           
  8005                           ;color.c: 75:         LATAbits.LATA3 = 0;
  8006   00505E  9679               	bcf	121,3,c	;volatile
  8007   005060                     l148:
  8008   005060  0012               	return		;funcret
  8009   005062                     __end_of_white_Light:
  8010                           	callstack 0
  8011                           
  8012 ;; *************** function _rgb_2_hsv *****************
  8013 ;; Defined at:
  8014 ;;		line 282 in file "color.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;  RGBC            8   33[COMRAM] struct RGBC_val
  8017 ;;  HSV             2   41[COMRAM] PTR struct HSV_val
  8018 ;;		 -> main@HSV(6), 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  diff            4   14[BANK0 ] unsigned long 
  8021 ;;  b               2   20[BANK0 ] unsigned int 
  8022 ;;  g               2   18[BANK0 ] unsigned int 
  8023 ;;  cmax            2   12[BANK0 ] unsigned int 
  8024 ;;  r               2   10[BANK0 ] unsigned int 
  8025 ;;  cmin            2    4[BANK0 ] unsigned int 
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  1    wreg      void 
  8028 ;; Registers used:
  8029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/0
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8035 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8036 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8037 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8038 ;;      Totals:        22      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8039 ;;Total ram usage:       44 bytes
  8040 ;; Hardware stack levels used: 1
  8041 ;; Hardware stack levels required when called: 6
  8042 ;; This function calls:
  8043 ;;		___aldiv
  8044 ;;		___lldiv
  8045 ;;		___lmul
  8046 ;;		_max
  8047 ;;		_min
  8048 ;; This function is called by:
  8049 ;;		_main
  8050 ;;		_color_calibration
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           	psect	text20
  8055   002E82                     __ptext20:
  8056                           	callstack 0
  8057   002E82                     _rgb_2_hsv:
  8058                           	callstack 24
  8059   002E82                     
  8060                           ;color.c: 285:     unsigned int r = (unsigned int)(RGBC.R*10000L/255);
  8061   002E82  C022  F008         	movff	rgb_2_hsv@RGBC,___lmul@multiplier
  8062   002E86  C023  F009         	movff	rgb_2_hsv@RGBC+1,___lmul@multiplier+1
  8063   002E8A  6A0A               	clrf	(___lmul@multiplier+2)^0,c
  8064   002E8C  6A0B               	clrf	(___lmul@multiplier+3)^0,c
  8065   002E8E  0E10               	movlw	16
  8066   002E90  6E0C               	movwf	___lmul@multiplicand^0,c
  8067   002E92  0E27               	movlw	39
  8068   002E94  6E0D               	movwf	(___lmul@multiplicand+1)^0,c
  8069   002E96  0E00               	movlw	0
  8070   002E98  6E0E               	movwf	(___lmul@multiplicand+2)^0,c
  8071   002E9A  0E00               	movlw	0
  8072   002E9C  6E0F               	movwf	(___lmul@multiplicand+3)^0,c
  8073   002E9E  EC2C  F026         	call	___lmul	;wreg free
  8074   002EA2  C008  F014         	movff	?___lmul,___aldiv@dividend
  8075   002EA6  C009  F015         	movff	?___lmul+1,___aldiv@dividend+1
  8076   002EAA  C00A  F016         	movff	?___lmul+2,___aldiv@dividend+2
  8077   002EAE  C00B  F017         	movff	?___lmul+3,___aldiv@dividend+3
  8078   002EB2  0EFF               	movlw	255
  8079   002EB4  6E18               	movwf	___aldiv@divisor^0,c
  8080   002EB6  0E00               	movlw	0
  8081   002EB8  6E19               	movwf	(___aldiv@divisor+1)^0,c
  8082   002EBA  0E00               	movlw	0
  8083   002EBC  6E1A               	movwf	(___aldiv@divisor+2)^0,c
  8084   002EBE  0E00               	movlw	0
  8085   002EC0  6E1B               	movwf	(___aldiv@divisor+3)^0,c
  8086   002EC2  EC7A  F023         	call	___aldiv	;wreg free
  8087   002EC6  C014  F0E2         	movff	?___aldiv,rgb_2_hsv@r
  8088   002ECA  C015  F0E3         	movff	?___aldiv+1,rgb_2_hsv@r+1
  8089                           
  8090                           ;color.c: 286:     unsigned int g = (unsigned int)(RGBC.G*10000L/255);
  8091   002ECE  C024  F008         	movff	rgb_2_hsv@RGBC+2,___lmul@multiplier
  8092   002ED2  C025  F009         	movff	rgb_2_hsv@RGBC+3,___lmul@multiplier+1
  8093   002ED6  6A0A               	clrf	(___lmul@multiplier+2)^0,c
  8094   002ED8  6A0B               	clrf	(___lmul@multiplier+3)^0,c
  8095   002EDA  0E10               	movlw	16
  8096   002EDC  6E0C               	movwf	___lmul@multiplicand^0,c
  8097   002EDE  0E27               	movlw	39
  8098   002EE0  6E0D               	movwf	(___lmul@multiplicand+1)^0,c
  8099   002EE2  0E00               	movlw	0
  8100   002EE4  6E0E               	movwf	(___lmul@multiplicand+2)^0,c
  8101   002EE6  0E00               	movlw	0
  8102   002EE8  6E0F               	movwf	(___lmul@multiplicand+3)^0,c
  8103   002EEA  EC2C  F026         	call	___lmul	;wreg free
  8104   002EEE  C008  F014         	movff	?___lmul,___aldiv@dividend
  8105   002EF2  C009  F015         	movff	?___lmul+1,___aldiv@dividend+1
  8106   002EF6  C00A  F016         	movff	?___lmul+2,___aldiv@dividend+2
  8107   002EFA  C00B  F017         	movff	?___lmul+3,___aldiv@dividend+3
  8108   002EFE  0EFF               	movlw	255
  8109   002F00  6E18               	movwf	___aldiv@divisor^0,c
  8110   002F02  0E00               	movlw	0
  8111   002F04  6E19               	movwf	(___aldiv@divisor+1)^0,c
  8112   002F06  0E00               	movlw	0
  8113   002F08  6E1A               	movwf	(___aldiv@divisor+2)^0,c
  8114   002F0A  0E00               	movlw	0
  8115   002F0C  6E1B               	movwf	(___aldiv@divisor+3)^0,c
  8116   002F0E  EC7A  F023         	call	___aldiv	;wreg free
  8117   002F12  C014  F0EA         	movff	?___aldiv,rgb_2_hsv@g
  8118   002F16  C015  F0EB         	movff	?___aldiv+1,rgb_2_hsv@g+1
  8119                           
  8120                           ;color.c: 287:     unsigned int b = (unsigned int)(RGBC.B*10000L/255);
  8121   002F1A  C026  F008         	movff	rgb_2_hsv@RGBC+4,___lmul@multiplier
  8122   002F1E  C027  F009         	movff	rgb_2_hsv@RGBC+5,___lmul@multiplier+1
  8123   002F22  6A0A               	clrf	(___lmul@multiplier+2)^0,c
  8124   002F24  6A0B               	clrf	(___lmul@multiplier+3)^0,c
  8125   002F26  0E10               	movlw	16
  8126   002F28  6E0C               	movwf	___lmul@multiplicand^0,c
  8127   002F2A  0E27               	movlw	39
  8128   002F2C  6E0D               	movwf	(___lmul@multiplicand+1)^0,c
  8129   002F2E  0E00               	movlw	0
  8130   002F30  6E0E               	movwf	(___lmul@multiplicand+2)^0,c
  8131   002F32  0E00               	movlw	0
  8132   002F34  6E0F               	movwf	(___lmul@multiplicand+3)^0,c
  8133   002F36  EC2C  F026         	call	___lmul	;wreg free
  8134   002F3A  C008  F014         	movff	?___lmul,___aldiv@dividend
  8135   002F3E  C009  F015         	movff	?___lmul+1,___aldiv@dividend+1
  8136   002F42  C00A  F016         	movff	?___lmul+2,___aldiv@dividend+2
  8137   002F46  C00B  F017         	movff	?___lmul+3,___aldiv@dividend+3
  8138   002F4A  0EFF               	movlw	255
  8139   002F4C  6E18               	movwf	___aldiv@divisor^0,c
  8140   002F4E  0E00               	movlw	0
  8141   002F50  6E19               	movwf	(___aldiv@divisor+1)^0,c
  8142   002F52  0E00               	movlw	0
  8143   002F54  6E1A               	movwf	(___aldiv@divisor+2)^0,c
  8144   002F56  0E00               	movlw	0
  8145   002F58  6E1B               	movwf	(___aldiv@divisor+3)^0,c
  8146   002F5A  EC7A  F023         	call	___aldiv	;wreg free
  8147   002F5E  C014  F0EC         	movff	?___aldiv,rgb_2_hsv@b
  8148   002F62  C015  F0ED         	movff	?___aldiv+1,rgb_2_hsv@b+1
  8149                           
  8150                           ;color.c: 290:     unsigned int cmax = max(r, max(g, b));
  8151   002F66  C0EA  F008         	movff	rgb_2_hsv@g,max@a
  8152   002F6A  C0EB  F009         	movff	rgb_2_hsv@g+1,max@a+1
  8153   002F6E  C0EC  F00A         	movff	rgb_2_hsv@b,max@b
  8154   002F72  C0ED  F00B         	movff	rgb_2_hsv@b+1,max@b+1
  8155   002F76  EC7F  F027         	call	_max	;wreg free
  8156   002F7A  C008  F0DE         	movff	?_max,_rgb_2_hsv$3591
  8157   002F7E  C009  F0DF         	movff	?_max+1,_rgb_2_hsv$3591+1
  8158                           
  8159                           ;color.c: 290:     unsigned int cmax = max(r, max(g, b));
  8160   002F82  C0E2  F008         	movff	rgb_2_hsv@r,max@a
  8161   002F86  C0E3  F009         	movff	rgb_2_hsv@r+1,max@a+1
  8162   002F8A  C0DE  F00A         	movff	_rgb_2_hsv$3591,max@b
  8163   002F8E  C0DF  F00B         	movff	_rgb_2_hsv$3591+1,max@b+1
  8164   002F92  EC7F  F027         	call	_max	;wreg free
  8165   002F96  C008  F0E4         	movff	?_max,rgb_2_hsv@cmax
  8166   002F9A  C009  F0E5         	movff	?_max+1,rgb_2_hsv@cmax+1
  8167                           
  8168                           ;color.c: 291:     unsigned int cmin = min(r, min(g, b));
  8169   002F9E  C0EA  F008         	movff	rgb_2_hsv@g,min@a
  8170   002FA2  C0EB  F009         	movff	rgb_2_hsv@g+1,min@a+1
  8171   002FA6  C0EC  F00A         	movff	rgb_2_hsv@b,min@b
  8172   002FAA  C0ED  F00B         	movff	rgb_2_hsv@b+1,min@b+1
  8173   002FAE  EC69  F027         	call	_min	;wreg free
  8174   002FB2  C008  F0E0         	movff	?_min,_rgb_2_hsv$3592
  8175   002FB6  C009  F0E1         	movff	?_min+1,_rgb_2_hsv$3592+1
  8176                           
  8177                           ;color.c: 291:     unsigned int cmin = min(r, min(g, b));
  8178   002FBA  C0E2  F008         	movff	rgb_2_hsv@r,min@a
  8179   002FBE  C0E3  F009         	movff	rgb_2_hsv@r+1,min@a+1
  8180   002FC2  C0E0  F00A         	movff	_rgb_2_hsv$3592,min@b
  8181   002FC6  C0E1  F00B         	movff	_rgb_2_hsv$3592+1,min@b+1
  8182   002FCA  EC69  F027         	call	_min	;wreg free
  8183   002FCE  C008  F0DC         	movff	?_min,rgb_2_hsv@cmin
  8184   002FD2  C009  F0DD         	movff	?_min+1,rgb_2_hsv@cmin+1
  8185   002FD6                     
  8186                           ;color.c: 292:     unsigned long diff = cmax - cmin;
  8187   002FD6  0100               	movlb	0	; () banked
  8188   002FD8  51DC               	movf	rgb_2_hsv@cmin& (0+255),w,b
  8189   002FDA  5DE4               	subwf	rgb_2_hsv@cmax& (0+255),w,b
  8190   002FDC  6E2C               	movwf	??_rgb_2_hsv^0,c
  8191   002FDE  51DD               	movf	(rgb_2_hsv@cmin+1)& (0+255),w,b
  8192   002FE0  59E5               	subwfb	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8193   002FE2  6E2D               	movwf	(??_rgb_2_hsv+1)^0,c
  8194   002FE4  C02C  F0E6         	movff	??_rgb_2_hsv,rgb_2_hsv@diff
  8195   002FE8  C02D  F0E7         	movff	??_rgb_2_hsv+1,rgb_2_hsv@diff+1
  8196   002FEC  6BE8               	clrf	(rgb_2_hsv@diff+2)& (0+255),b
  8197   002FEE  6BE9               	clrf	(rgb_2_hsv@diff+3)& (0+255),b
  8198   002FF0                     
  8199                           ; BSR set to: 0
  8200                           ;color.c: 295:     if (cmax == r){
  8201   002FF0  51E2               	movf	rgb_2_hsv@r& (0+255),w,b
  8202   002FF2  19E4               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8203   002FF4  E107               	bnz	u4071
  8204   002FF6  51E3               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8205   002FF8  19E5               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8206   002FFA  A4D8               	btfss	status,2,c
  8207   002FFC  EF02  F018         	goto	u4071
  8208   003000  EF04  F018         	goto	u4070
  8209   003004                     u4071:
  8210   003004  EFAB  F018         	goto	l4896
  8211   003008                     u4070:
  8212   003008                     
  8213                           ; BSR set to: 0
  8214                           ;color.c: 296:         if (g > b){HSV->H = (unsigned int)((g-b)*6000L/diff);}
  8215   003008  51EA               	movf	rgb_2_hsv@g& (0+255),w,b
  8216   00300A  5DEC               	subwf	rgb_2_hsv@b& (0+255),w,b
  8217   00300C  51EB               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8218   00300E  59ED               	subwfb	(rgb_2_hsv@b+1)& (0+255),w,b
  8219   003010  B0D8               	btfsc	status,0,c
  8220   003012  EF0D  F018         	goto	u4081
  8221   003016  EF0F  F018         	goto	u4080
  8222   00301A                     u4081:
  8223   00301A  EF41  F018         	goto	l4890
  8224   00301E                     u4080:
  8225   00301E                     
  8226                           ; BSR set to: 0
  8227   00301E  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  8228   003020  5DEA               	subwf	rgb_2_hsv@g& (0+255),w,b
  8229   003022  6E2C               	movwf	??_rgb_2_hsv^0,c
  8230   003024  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8231   003026  59EB               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8232   003028  6E2D               	movwf	(??_rgb_2_hsv+1)^0,c
  8233   00302A  C02C  F008         	movff	??_rgb_2_hsv,___lmul@multiplier
  8234   00302E  C02D  F009         	movff	??_rgb_2_hsv+1,___lmul@multiplier+1
  8235   003032  6A0A               	clrf	(___lmul@multiplier+2)^0,c
  8236   003034  6A0B               	clrf	(___lmul@multiplier+3)^0,c
  8237   003036  0E70               	movlw	112
  8238   003038  6E0C               	movwf	___lmul@multiplicand^0,c
  8239   00303A  0E17               	movlw	23
  8240   00303C  6E0D               	movwf	(___lmul@multiplicand+1)^0,c
  8241   00303E  0E00               	movlw	0
  8242   003040  6E0E               	movwf	(___lmul@multiplicand+2)^0,c
  8243   003042  0E00               	movlw	0
  8244   003044  6E0F               	movwf	(___lmul@multiplicand+3)^0,c
  8245   003046  EC2C  F026         	call	___lmul	;wreg free
  8246   00304A  C008  F014         	movff	?___lmul,___lldiv@dividend
  8247   00304E  C009  F015         	movff	?___lmul+1,___lldiv@dividend+1
  8248   003052  C00A  F016         	movff	?___lmul+2,___lldiv@dividend+2
  8249   003056  C00B  F017         	movff	?___lmul+3,___lldiv@dividend+3
  8250   00305A  C0E6  F018         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8251   00305E  C0E7  F019         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8252   003062  C0E8  F01A         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8253   003066  C0E9  F01B         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8254   00306A  EC58  F025         	call	___lldiv	;wreg free
  8255   00306E  C02A  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8256   003072  C02B  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8257   003076  C014  FFDE         	movff	?___lldiv,postinc2
  8258   00307A  C015  FFDD         	movff	?___lldiv+1,postdec2
  8259   00307E  EF63  F019         	goto	l217
  8260   003082                     l4890:
  8261                           
  8262                           ; BSR set to: 0
  8263   003082  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  8264   003084  5DEA               	subwf	rgb_2_hsv@g& (0+255),w,b
  8265   003086  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8266   003088  59EB               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8267   00308A  B0D8               	btfsc	status,0,c
  8268   00308C  EF4A  F018         	goto	u4091
  8269   003090  EF4C  F018         	goto	u4090
  8270   003094                     u4091:
  8271   003094  EF63  F019         	goto	l217
  8272   003098                     u4090:
  8273   003098                     
  8274                           ; BSR set to: 0
  8275   003098  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  8276   00309A  6E2C               	movwf	??_rgb_2_hsv^0,c
  8277   00309C  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8278   00309E  6E2D               	movwf	(??_rgb_2_hsv+1)^0,c
  8279   0030A0  6A2E               	clrf	(??_rgb_2_hsv+2)^0,c
  8280   0030A2  6A2F               	clrf	(??_rgb_2_hsv+3)^0,c
  8281   0030A4  C0E6  F008         	movff	rgb_2_hsv@diff,___lmul@multiplier
  8282   0030A8  C0E7  F009         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  8283   0030AC  C0E8  F00A         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  8284   0030B0  C0E9  F00B         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  8285   0030B4  0E06               	movlw	6
  8286   0030B6  6E0C               	movwf	___lmul@multiplicand^0,c
  8287   0030B8  0E00               	movlw	0
  8288   0030BA  6E0D               	movwf	(___lmul@multiplicand+1)^0,c
  8289   0030BC  0E00               	movlw	0
  8290   0030BE  6E0E               	movwf	(___lmul@multiplicand+2)^0,c
  8291   0030C0  0E00               	movlw	0
  8292   0030C2  6E0F               	movwf	(___lmul@multiplicand+3)^0,c
  8293   0030C4  EC2C  F026         	call	___lmul	;wreg free
  8294   0030C8  0100               	movlb	0	; () banked
  8295   0030CA  51EA               	movf	rgb_2_hsv@g& (0+255),w,b
  8296   0030CC  2408               	addwf	?___lmul^0,w,c
  8297   0030CE  6E30               	movwf	(??_rgb_2_hsv+4)^0,c
  8298   0030D0  51EB               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8299   0030D2  2009               	addwfc	(?___lmul+1)^0,w,c
  8300   0030D4  6E31               	movwf	(??_rgb_2_hsv+5)^0,c
  8301   0030D6  0E00               	movlw	0
  8302   0030D8  200A               	addwfc	(?___lmul+2)^0,w,c
  8303   0030DA  6E32               	movwf	(??_rgb_2_hsv+6)^0,c
  8304   0030DC  0E00               	movlw	0
  8305   0030DE  200B               	addwfc	(?___lmul+3)^0,w,c
  8306   0030E0  6E33               	movwf	(??_rgb_2_hsv+7)^0,c
  8307   0030E2  502C               	movf	??_rgb_2_hsv^0,w,c
  8308   0030E4  5C30               	subwf	(??_rgb_2_hsv+4)^0,w,c
  8309   0030E6  6FD8               	movwf	_rgb_2_hsv$3593& (0+255),b
  8310   0030E8  502D               	movf	(??_rgb_2_hsv+1)^0,w,c
  8311   0030EA  5831               	subwfb	(??_rgb_2_hsv+5)^0,w,c
  8312   0030EC  6FD9               	movwf	(_rgb_2_hsv$3593+1)& (0+255),b
  8313   0030EE  502E               	movf	(??_rgb_2_hsv+2)^0,w,c
  8314   0030F0  5832               	subwfb	(??_rgb_2_hsv+6)^0,w,c
  8315   0030F2  6FDA               	movwf	(_rgb_2_hsv$3593+2)& (0+255),b
  8316   0030F4  502F               	movf	(??_rgb_2_hsv+3)^0,w,c
  8317   0030F6  5833               	subwfb	(??_rgb_2_hsv+7)^0,w,c
  8318   0030F8  6FDB               	movwf	(_rgb_2_hsv$3593+3)& (0+255),b
  8319   0030FA                     
  8320                           ; BSR set to: 0
  8321   0030FA  C0D8  F008         	movff	_rgb_2_hsv$3593,___lmul@multiplier
  8322   0030FE  C0D9  F009         	movff	_rgb_2_hsv$3593+1,___lmul@multiplier+1
  8323   003102  C0DA  F00A         	movff	_rgb_2_hsv$3593+2,___lmul@multiplier+2
  8324   003106  C0DB  F00B         	movff	_rgb_2_hsv$3593+3,___lmul@multiplier+3
  8325   00310A  0E70               	movlw	112
  8326   00310C  6E0C               	movwf	___lmul@multiplicand^0,c
  8327   00310E  0E17               	movlw	23
  8328   003110  6E0D               	movwf	(___lmul@multiplicand+1)^0,c
  8329   003112  0E00               	movlw	0
  8330   003114  6E0E               	movwf	(___lmul@multiplicand+2)^0,c
  8331   003116  0E00               	movlw	0
  8332   003118  6E0F               	movwf	(___lmul@multiplicand+3)^0,c
  8333   00311A  EC2C  F026         	call	___lmul	;wreg free
  8334   00311E  C008  F014         	movff	?___lmul,___lldiv@dividend
  8335   003122  C009  F015         	movff	?___lmul+1,___lldiv@dividend+1
  8336   003126  C00A  F016         	movff	?___lmul+2,___lldiv@dividend+2
  8337   00312A  C00B  F017         	movff	?___lmul+3,___lldiv@dividend+3
  8338   00312E  C0E6  F018         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8339   003132  C0E7  F019         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8340   003136  C0E8  F01A         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8341   00313A  C0E9  F01B         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8342   00313E  EC58  F025         	call	___lldiv	;wreg free
  8343   003142  C02A  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8344   003146  C02B  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8345   00314A  C014  FFDE         	movff	?___lldiv,postinc2
  8346   00314E  C015  FFDD         	movff	?___lldiv+1,postdec2
  8347   003152  EF63  F019         	goto	l217
  8348   003156                     l4896:
  8349                           
  8350                           ; BSR set to: 0
  8351   003156  51EA               	movf	rgb_2_hsv@g& (0+255),w,b
  8352   003158  19E4               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8353   00315A  E107               	bnz	u4101
  8354   00315C  51EB               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8355   00315E  19E5               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8356   003160  A4D8               	btfss	status,2,c
  8357   003162  EFB5  F018         	goto	u4101
  8358   003166  EFB7  F018         	goto	u4100
  8359   00316A                     u4101:
  8360   00316A  EF04  F019         	goto	l4900
  8361   00316E                     u4100:
  8362   00316E                     
  8363                           ; BSR set to: 0
  8364   00316E  51E2               	movf	rgb_2_hsv@r& (0+255),w,b
  8365   003170  6E2C               	movwf	??_rgb_2_hsv^0,c
  8366   003172  51E3               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8367   003174  6E2D               	movwf	(??_rgb_2_hsv+1)^0,c
  8368   003176  6A2E               	clrf	(??_rgb_2_hsv+2)^0,c
  8369   003178  6A2F               	clrf	(??_rgb_2_hsv+3)^0,c
  8370   00317A  90D8               	bcf	status,0,c
  8371   00317C  35E6               	rlcf	rgb_2_hsv@diff& (0+255),w,b
  8372   00317E  6E30               	movwf	(??_rgb_2_hsv+4)^0,c
  8373   003180  35E7               	rlcf	(rgb_2_hsv@diff+1)& (0+255),w,b
  8374   003182  6E31               	movwf	(??_rgb_2_hsv+5)^0,c
  8375   003184  35E8               	rlcf	(rgb_2_hsv@diff+2)& (0+255),w,b
  8376   003186  6E32               	movwf	(??_rgb_2_hsv+6)^0,c
  8377   003188  35E9               	rlcf	(rgb_2_hsv@diff+3)& (0+255),w,b
  8378   00318A  6E33               	movwf	(??_rgb_2_hsv+7)^0,c
  8379   00318C  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  8380   00318E  2430               	addwf	(??_rgb_2_hsv+4)^0,w,c
  8381   003190  6E34               	movwf	(??_rgb_2_hsv+8)^0,c
  8382   003192  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8383   003194  2031               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  8384   003196  6E35               	movwf	(??_rgb_2_hsv+9)^0,c
  8385   003198  0E00               	movlw	0
  8386   00319A  2032               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  8387   00319C  6E36               	movwf	(??_rgb_2_hsv+10)^0,c
  8388   00319E  0E00               	movlw	0
  8389   0031A0  2033               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  8390   0031A2  6E37               	movwf	(??_rgb_2_hsv+11)^0,c
  8391   0031A4  502C               	movf	??_rgb_2_hsv^0,w,c
  8392   0031A6  5C34               	subwf	(??_rgb_2_hsv+8)^0,w,c
  8393   0031A8  6E08               	movwf	___lmul@multiplier^0,c
  8394   0031AA  502D               	movf	(??_rgb_2_hsv+1)^0,w,c
  8395   0031AC  5835               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  8396   0031AE  6E09               	movwf	(___lmul@multiplier+1)^0,c
  8397   0031B0  502E               	movf	(??_rgb_2_hsv+2)^0,w,c
  8398   0031B2  5836               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  8399   0031B4  6E0A               	movwf	(___lmul@multiplier+2)^0,c
  8400   0031B6  502F               	movf	(??_rgb_2_hsv+3)^0,w,c
  8401   0031B8  5837               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  8402   0031BA  6E0B               	movwf	(___lmul@multiplier+3)^0,c
  8403   0031BC  0E70               	movlw	112
  8404   0031BE  6E0C               	movwf	___lmul@multiplicand^0,c
  8405   0031C0  0E17               	movlw	23
  8406   0031C2  6E0D               	movwf	(___lmul@multiplicand+1)^0,c
  8407   0031C4  0E00               	movlw	0
  8408   0031C6  6E0E               	movwf	(___lmul@multiplicand+2)^0,c
  8409   0031C8  0E00               	movlw	0
  8410   0031CA  6E0F               	movwf	(___lmul@multiplicand+3)^0,c
  8411   0031CC  EC2C  F026         	call	___lmul	;wreg free
  8412   0031D0  C008  F014         	movff	?___lmul,___lldiv@dividend
  8413   0031D4  C009  F015         	movff	?___lmul+1,___lldiv@dividend+1
  8414   0031D8  C00A  F016         	movff	?___lmul+2,___lldiv@dividend+2
  8415   0031DC  C00B  F017         	movff	?___lmul+3,___lldiv@dividend+3
  8416   0031E0  C0E6  F018         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8417   0031E4  C0E7  F019         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8418   0031E8  C0E8  F01A         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8419   0031EC  C0E9  F01B         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8420   0031F0  EC58  F025         	call	___lldiv	;wreg free
  8421   0031F4  C02A  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8422   0031F8  C02B  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8423   0031FC  C014  FFDE         	movff	?___lldiv,postinc2
  8424   003200  C015  FFDD         	movff	?___lldiv+1,postdec2
  8425   003204  EF63  F019         	goto	l217
  8426   003208                     l4900:
  8427                           
  8428                           ; BSR set to: 0
  8429   003208  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  8430   00320A  19E4               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8431   00320C  E107               	bnz	u4111
  8432   00320E  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8433   003210  19E5               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8434   003212  A4D8               	btfss	status,2,c
  8435   003214  EF0E  F019         	goto	u4111
  8436   003218  EF10  F019         	goto	u4110
  8437   00321C                     u4111:
  8438   00321C  EF63  F019         	goto	l217
  8439   003220                     u4110:
  8440   003220                     
  8441                           ; BSR set to: 0
  8442   003220  51EA               	movf	rgb_2_hsv@g& (0+255),w,b
  8443   003222  6E2C               	movwf	??_rgb_2_hsv^0,c
  8444   003224  51EB               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8445   003226  6E2D               	movwf	(??_rgb_2_hsv+1)^0,c
  8446   003228  6A2E               	clrf	(??_rgb_2_hsv+2)^0,c
  8447   00322A  6A2F               	clrf	(??_rgb_2_hsv+3)^0,c
  8448   00322C  C0E6  F030         	movff	rgb_2_hsv@diff,??_rgb_2_hsv+4
  8449   003230  C0E7  F031         	movff	rgb_2_hsv@diff+1,??_rgb_2_hsv+5
  8450   003234  C0E8  F032         	movff	rgb_2_hsv@diff+2,??_rgb_2_hsv+6
  8451   003238  C0E9  F033         	movff	rgb_2_hsv@diff+3,??_rgb_2_hsv+7
  8452   00323C  0E02               	movlw	2
  8453   00323E                     u4125:
  8454   00323E  90D8               	bcf	status,0,c
  8455   003240  3630               	rlcf	(??_rgb_2_hsv+4)^0,f,c
  8456   003242  3631               	rlcf	(??_rgb_2_hsv+5)^0,f,c
  8457   003244  3632               	rlcf	(??_rgb_2_hsv+6)^0,f,c
  8458   003246  3633               	rlcf	(??_rgb_2_hsv+7)^0,f,c
  8459   003248  2EE8               	decfsz	wreg,f,c
  8460   00324A  EF1F  F019         	goto	u4125
  8461   00324E  51E2               	movf	rgb_2_hsv@r& (0+255),w,b
  8462   003250  2430               	addwf	(??_rgb_2_hsv+4)^0,w,c
  8463   003252  6E34               	movwf	(??_rgb_2_hsv+8)^0,c
  8464   003254  51E3               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8465   003256  2031               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  8466   003258  6E35               	movwf	(??_rgb_2_hsv+9)^0,c
  8467   00325A  0E00               	movlw	0
  8468   00325C  2032               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  8469   00325E  6E36               	movwf	(??_rgb_2_hsv+10)^0,c
  8470   003260  0E00               	movlw	0
  8471   003262  2033               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  8472   003264  6E37               	movwf	(??_rgb_2_hsv+11)^0,c
  8473   003266  502C               	movf	??_rgb_2_hsv^0,w,c
  8474   003268  5C34               	subwf	(??_rgb_2_hsv+8)^0,w,c
  8475   00326A  6E08               	movwf	___lmul@multiplier^0,c
  8476   00326C  502D               	movf	(??_rgb_2_hsv+1)^0,w,c
  8477   00326E  5835               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  8478   003270  6E09               	movwf	(___lmul@multiplier+1)^0,c
  8479   003272  502E               	movf	(??_rgb_2_hsv+2)^0,w,c
  8480   003274  5836               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  8481   003276  6E0A               	movwf	(___lmul@multiplier+2)^0,c
  8482   003278  502F               	movf	(??_rgb_2_hsv+3)^0,w,c
  8483   00327A  5837               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  8484   00327C  6E0B               	movwf	(___lmul@multiplier+3)^0,c
  8485   00327E  0E70               	movlw	112
  8486   003280  6E0C               	movwf	___lmul@multiplicand^0,c
  8487   003282  0E17               	movlw	23
  8488   003284  6E0D               	movwf	(___lmul@multiplicand+1)^0,c
  8489   003286  0E00               	movlw	0
  8490   003288  6E0E               	movwf	(___lmul@multiplicand+2)^0,c
  8491   00328A  0E00               	movlw	0
  8492   00328C  6E0F               	movwf	(___lmul@multiplicand+3)^0,c
  8493   00328E  EC2C  F026         	call	___lmul	;wreg free
  8494   003292  C008  F014         	movff	?___lmul,___lldiv@dividend
  8495   003296  C009  F015         	movff	?___lmul+1,___lldiv@dividend+1
  8496   00329A  C00A  F016         	movff	?___lmul+2,___lldiv@dividend+2
  8497   00329E  C00B  F017         	movff	?___lmul+3,___lldiv@dividend+3
  8498   0032A2  C0E6  F018         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8499   0032A6  C0E7  F019         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8500   0032AA  C0E8  F01A         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8501   0032AE  C0E9  F01B         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8502   0032B2  EC58  F025         	call	___lldiv	;wreg free
  8503   0032B6  C02A  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8504   0032BA  C02B  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8505   0032BE  C014  FFDE         	movff	?___lldiv,postinc2
  8506   0032C2  C015  FFDD         	movff	?___lldiv+1,postdec2
  8507   0032C6                     l217:
  8508                           
  8509                           ;color.c: 304:     HSV->S = (unsigned int)((diff * 10000)/cmax);
  8510   0032C6  C0E6  F008         	movff	rgb_2_hsv@diff,___lmul@multiplier
  8511   0032CA  C0E7  F009         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  8512   0032CE  C0E8  F00A         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  8513   0032D2  C0E9  F00B         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  8514   0032D6  0E10               	movlw	16
  8515   0032D8  6E0C               	movwf	___lmul@multiplicand^0,c
  8516   0032DA  0E27               	movlw	39
  8517   0032DC  6E0D               	movwf	(___lmul@multiplicand+1)^0,c
  8518   0032DE  0E00               	movlw	0
  8519   0032E0  6E0E               	movwf	(___lmul@multiplicand+2)^0,c
  8520   0032E2  0E00               	movlw	0
  8521   0032E4  6E0F               	movwf	(___lmul@multiplicand+3)^0,c
  8522   0032E6  EC2C  F026         	call	___lmul	;wreg free
  8523   0032EA  C008  F014         	movff	?___lmul,___lldiv@dividend
  8524   0032EE  C009  F015         	movff	?___lmul+1,___lldiv@dividend+1
  8525   0032F2  C00A  F016         	movff	?___lmul+2,___lldiv@dividend+2
  8526   0032F6  C00B  F017         	movff	?___lmul+3,___lldiv@dividend+3
  8527   0032FA  C0E4  F018         	movff	rgb_2_hsv@cmax,___lldiv@divisor
  8528   0032FE  C0E5  F019         	movff	rgb_2_hsv@cmax+1,___lldiv@divisor+1
  8529   003302  6A1A               	clrf	(___lldiv@divisor+2)^0,c
  8530   003304  6A1B               	clrf	(___lldiv@divisor+3)^0,c
  8531   003306  EC58  F025         	call	___lldiv	;wreg free
  8532   00330A  EE20 F002          	lfsr	2,2
  8533   00330E  502A               	movf	rgb_2_hsv@HSV^0,w,c
  8534   003310  26D9               	addwf	fsr2l,f,c
  8535   003312  502B               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8536   003314  22DA               	addwfc	fsr2h,f,c
  8537   003316  C014  FFDE         	movff	?___lldiv,postinc2
  8538   00331A  C015  FFDD         	movff	?___lldiv+1,postdec2
  8539   00331E                     
  8540                           ;color.c: 306:     if (HSV->S == 0){HSV->H = 0;}
  8541   00331E  EE20 F002          	lfsr	2,2
  8542   003322  502A               	movf	rgb_2_hsv@HSV^0,w,c
  8543   003324  26D9               	addwf	fsr2l,f,c
  8544   003326  502B               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8545   003328  22DA               	addwfc	fsr2h,f,c
  8546   00332A  50DE               	movf	postinc2,w,c
  8547   00332C  10DE               	iorwf	postinc2,w,c
  8548   00332E  A4D8               	btfss	status,2,c
  8549   003330  EF9C  F019         	goto	u4131
  8550   003334  EF9E  F019         	goto	u4130
  8551   003338                     u4131:
  8552   003338  EFA4  F019         	goto	l4908
  8553   00333C                     u4130:
  8554   00333C  C02A  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8555   003340  C02B  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8556   003344  6ADE               	clrf	postinc2,c
  8557   003346  6ADD               	clrf	postdec2,c
  8558   003348                     l4908:
  8559                           
  8560                           ;color.c: 309:     HSV->V = cmax;
  8561   003348  EE20 F004          	lfsr	2,4
  8562   00334C  502A               	movf	rgb_2_hsv@HSV^0,w,c
  8563   00334E  26D9               	addwf	fsr2l,f,c
  8564   003350  502B               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8565   003352  22DA               	addwfc	fsr2h,f,c
  8566   003354  C0E4  FFDE         	movff	rgb_2_hsv@cmax,postinc2
  8567   003358  C0E5  FFDD         	movff	rgb_2_hsv@cmax+1,postdec2
  8568   00335C  0012               	return		;funcret
  8569   00335E                     __end_of_rgb_2_hsv:
  8570                           	callstack 0
  8571                           
  8572 ;; *************** function _min *****************
  8573 ;; Defined at:
  8574 ;;		line 277 in file "color.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;  a               2    7[COMRAM] unsigned int 
  8577 ;;  b               2    9[COMRAM] unsigned int 
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;		None
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  2    7[COMRAM] unsigned int 
  8582 ;; Registers used:
  8583 ;;		wreg, status,2, status,0
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8589 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;Total ram usage:        4 bytes
  8594 ;; Hardware stack levels used: 1
  8595 ;; Hardware stack levels required when called: 5
  8596 ;; This function calls:
  8597 ;;		Nothing
  8598 ;; This function is called by:
  8599 ;;		_rgb_2_hsv
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text21
  8604   004ED2                     __ptext21:
  8605                           	callstack 0
  8606   004ED2                     _min:
  8607                           	callstack 24
  8608   004ED2                     
  8609                           ;color.c: 278:     if (a < b){return a;}
  8610   004ED2  500A               	movf	min@b^0,w,c
  8611   004ED4  5C08               	subwf	min@a^0,w,c
  8612   004ED6  500B               	movf	(min@b+1)^0,w,c
  8613   004ED8  5809               	subwfb	(min@a+1)^0,w,c
  8614   004EDA  B0D8               	btfsc	status,0,c
  8615   004EDC  EF72  F027         	goto	u3801
  8616   004EE0  EF74  F027         	goto	u3800
  8617   004EE4                     u3801:
  8618   004EE4  EF7A  F027         	goto	l208
  8619   004EE8                     u3800:
  8620   004EE8  C008  F008         	movff	min@a,?_min
  8621   004EEC  C009  F009         	movff	min@a+1,?_min+1
  8622   004EF0  EF7E  F027         	goto	l209
  8623   004EF4                     l208:
  8624   004EF4  C00A  F008         	movff	min@b,?_min
  8625   004EF8  C00B  F009         	movff	min@b+1,?_min+1
  8626   004EFC                     l209:
  8627   004EFC  0012               	return		;funcret
  8628   004EFE                     __end_of_min:
  8629                           	callstack 0
  8630                           
  8631 ;; *************** function _max *****************
  8632 ;; Defined at:
  8633 ;;		line 272 in file "color.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;  a               2    7[COMRAM] unsigned int 
  8636 ;;  b               2    9[COMRAM] unsigned int 
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;		None
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  2    7[COMRAM] unsigned int 
  8641 ;; Registers used:
  8642 ;;		wreg, status,2, status,0
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 0/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8651 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8652 ;;Total ram usage:        4 bytes
  8653 ;; Hardware stack levels used: 1
  8654 ;; Hardware stack levels required when called: 5
  8655 ;; This function calls:
  8656 ;;		Nothing
  8657 ;; This function is called by:
  8658 ;;		_rgb_2_hsv
  8659 ;; This function uses a non-reentrant model
  8660 ;;
  8661                           
  8662                           	psect	text22
  8663   004EFE                     __ptext22:
  8664                           	callstack 0
  8665   004EFE                     _max:
  8666                           	callstack 24
  8667   004EFE                     
  8668                           ;color.c: 273:     if (a > b){return a;}
  8669   004EFE  5008               	movf	max@a^0,w,c
  8670   004F00  5C0A               	subwf	max@b^0,w,c
  8671   004F02  5009               	movf	(max@a+1)^0,w,c
  8672   004F04  580B               	subwfb	(max@b+1)^0,w,c
  8673   004F06  B0D8               	btfsc	status,0,c
  8674   004F08  EF88  F027         	goto	u3791
  8675   004F0C  EF8A  F027         	goto	u3790
  8676   004F10                     u3791:
  8677   004F10  EF90  F027         	goto	l203
  8678   004F14                     u3790:
  8679   004F14  C008  F008         	movff	max@a,?_max
  8680   004F18  C009  F009         	movff	max@a+1,?_max+1
  8681   004F1C  EF94  F027         	goto	l204
  8682   004F20                     l203:
  8683   004F20  C00A  F008         	movff	max@b,?_max
  8684   004F24  C00B  F009         	movff	max@b+1,?_max+1
  8685   004F28                     l204:
  8686   004F28  0012               	return		;funcret
  8687   004F2A                     __end_of_max:
  8688                           	callstack 0
  8689                           
  8690 ;; *************** function ___lmul *****************
  8691 ;; Defined at:
  8692 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;  multiplier      4    7[COMRAM] unsigned long 
  8695 ;;  multiplicand    4   11[COMRAM] unsigned long 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;  product         4   15[COMRAM] unsigned long 
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  4    7[COMRAM] unsigned long 
  8700 ;; Registers used:
  8701 ;;		wreg, status,2, status,0
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8707 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8708 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8710 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8711 ;;Total ram usage:       12 bytes
  8712 ;; Hardware stack levels used: 1
  8713 ;; Hardware stack levels required when called: 5
  8714 ;; This function calls:
  8715 ;;		Nothing
  8716 ;; This function is called by:
  8717 ;;		_rgb_2_hsv
  8718 ;;		_color_normalise
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text23
  8723   004C58                     __ptext23:
  8724                           	callstack 0
  8725   004C58                     ___lmul:
  8726                           	callstack 24
  8727   004C58  0E00               	movlw	0
  8728   004C5A  6E10               	movwf	___lmul@product^0,c
  8729   004C5C  0E00               	movlw	0
  8730   004C5E  6E11               	movwf	(___lmul@product+1)^0,c
  8731   004C60  0E00               	movlw	0
  8732   004C62  6E12               	movwf	(___lmul@product+2)^0,c
  8733   004C64  0E00               	movlw	0
  8734   004C66  6E13               	movwf	(___lmul@product+3)^0,c
  8735   004C68                     l4788:
  8736   004C68  A008               	btfss	___lmul@multiplier^0,0,c
  8737   004C6A  EF39  F026         	goto	u3961
  8738   004C6E  EF3B  F026         	goto	u3960
  8739   004C72                     u3961:
  8740   004C72  EF43  F026         	goto	l4792
  8741   004C76                     u3960:
  8742   004C76  500C               	movf	___lmul@multiplicand^0,w,c
  8743   004C78  2610               	addwf	___lmul@product^0,f,c
  8744   004C7A  500D               	movf	(___lmul@multiplicand+1)^0,w,c
  8745   004C7C  2211               	addwfc	(___lmul@product+1)^0,f,c
  8746   004C7E  500E               	movf	(___lmul@multiplicand+2)^0,w,c
  8747   004C80  2212               	addwfc	(___lmul@product+2)^0,f,c
  8748   004C82  500F               	movf	(___lmul@multiplicand+3)^0,w,c
  8749   004C84  2213               	addwfc	(___lmul@product+3)^0,f,c
  8750   004C86                     l4792:
  8751   004C86  90D8               	bcf	status,0,c
  8752   004C88  360C               	rlcf	___lmul@multiplicand^0,f,c
  8753   004C8A  360D               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8754   004C8C  360E               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8755   004C8E  360F               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8756   004C90  90D8               	bcf	status,0,c
  8757   004C92  320B               	rrcf	(___lmul@multiplier+3)^0,f,c
  8758   004C94  320A               	rrcf	(___lmul@multiplier+2)^0,f,c
  8759   004C96  3209               	rrcf	(___lmul@multiplier+1)^0,f,c
  8760   004C98  3208               	rrcf	___lmul@multiplier^0,f,c
  8761   004C9A  5008               	movf	___lmul@multiplier^0,w,c
  8762   004C9C  1009               	iorwf	(___lmul@multiplier+1)^0,w,c
  8763   004C9E  100A               	iorwf	(___lmul@multiplier+2)^0,w,c
  8764   004CA0  100B               	iorwf	(___lmul@multiplier+3)^0,w,c
  8765   004CA2  A4D8               	btfss	status,2,c
  8766   004CA4  EF56  F026         	goto	u3971
  8767   004CA8  EF58  F026         	goto	u3970
  8768   004CAC                     u3971:
  8769   004CAC  EF34  F026         	goto	l4788
  8770   004CB0                     u3970:
  8771   004CB0  C010  F008         	movff	___lmul@product,?___lmul
  8772   004CB4  C011  F009         	movff	___lmul@product+1,?___lmul+1
  8773   004CB8  C012  F00A         	movff	___lmul@product+2,?___lmul+2
  8774   004CBC  C013  F00B         	movff	___lmul@product+3,?___lmul+3
  8775   004CC0  0012               	return		;funcret
  8776   004CC2                     __end_of___lmul:
  8777                           	callstack 0
  8778                           
  8779 ;; *************** function ___lldiv *****************
  8780 ;; Defined at:
  8781 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  dividend        4   19[COMRAM] unsigned long 
  8784 ;;  divisor         4   23[COMRAM] unsigned long 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;  quotient        4   27[COMRAM] unsigned long 
  8787 ;;  counter         1   31[COMRAM] unsigned char 
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  4   19[COMRAM] unsigned long 
  8790 ;; Registers used:
  8791 ;;		wreg, status,2, status,0
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8797 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8798 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;Total ram usage:       13 bytes
  8802 ;; Hardware stack levels used: 1
  8803 ;; Hardware stack levels required when called: 5
  8804 ;; This function calls:
  8805 ;;		Nothing
  8806 ;; This function is called by:
  8807 ;;		_rgb_2_hsv
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text24
  8812   004AB0                     __ptext24:
  8813                           	callstack 0
  8814   004AB0                     ___lldiv:
  8815                           	callstack 24
  8816   004AB0  0E00               	movlw	0
  8817   004AB2  6E1C               	movwf	___lldiv@quotient^0,c
  8818   004AB4  0E00               	movlw	0
  8819   004AB6  6E1D               	movwf	(___lldiv@quotient+1)^0,c
  8820   004AB8  0E00               	movlw	0
  8821   004ABA  6E1E               	movwf	(___lldiv@quotient+2)^0,c
  8822   004ABC  0E00               	movlw	0
  8823   004ABE  6E1F               	movwf	(___lldiv@quotient+3)^0,c
  8824   004AC0  5018               	movf	___lldiv@divisor^0,w,c
  8825   004AC2  1019               	iorwf	(___lldiv@divisor+1)^0,w,c
  8826   004AC4  101A               	iorwf	(___lldiv@divisor+2)^0,w,c
  8827   004AC6  101B               	iorwf	(___lldiv@divisor+3)^0,w,c
  8828   004AC8  B4D8               	btfsc	status,2,c
  8829   004ACA  EF69  F025         	goto	u3981
  8830   004ACE  EF6B  F025         	goto	u3980
  8831   004AD2                     u3981:
  8832   004AD2  EFA1  F025         	goto	l792
  8833   004AD6                     u3980:
  8834   004AD6  0E01               	movlw	1
  8835   004AD8  6E20               	movwf	___lldiv@counter^0,c
  8836   004ADA  EF75  F025         	goto	l4804
  8837   004ADE                     l4802:
  8838   004ADE  90D8               	bcf	status,0,c
  8839   004AE0  3618               	rlcf	___lldiv@divisor^0,f,c
  8840   004AE2  3619               	rlcf	(___lldiv@divisor+1)^0,f,c
  8841   004AE4  361A               	rlcf	(___lldiv@divisor+2)^0,f,c
  8842   004AE6  361B               	rlcf	(___lldiv@divisor+3)^0,f,c
  8843   004AE8  2A20               	incf	___lldiv@counter^0,f,c
  8844   004AEA                     l4804:
  8845   004AEA  AE1B               	btfss	(___lldiv@divisor+3)^0,7,c
  8846   004AEC  EF7A  F025         	goto	u3991
  8847   004AF0  EF7C  F025         	goto	u3990
  8848   004AF4                     u3991:
  8849   004AF4  EF6F  F025         	goto	l4802
  8850   004AF8                     u3990:
  8851   004AF8                     l4806:
  8852   004AF8  90D8               	bcf	status,0,c
  8853   004AFA  361C               	rlcf	___lldiv@quotient^0,f,c
  8854   004AFC  361D               	rlcf	(___lldiv@quotient+1)^0,f,c
  8855   004AFE  361E               	rlcf	(___lldiv@quotient+2)^0,f,c
  8856   004B00  361F               	rlcf	(___lldiv@quotient+3)^0,f,c
  8857   004B02  5018               	movf	___lldiv@divisor^0,w,c
  8858   004B04  5C14               	subwf	___lldiv@dividend^0,w,c
  8859   004B06  5019               	movf	(___lldiv@divisor+1)^0,w,c
  8860   004B08  5815               	subwfb	(___lldiv@dividend+1)^0,w,c
  8861   004B0A  501A               	movf	(___lldiv@divisor+2)^0,w,c
  8862   004B0C  5816               	subwfb	(___lldiv@dividend+2)^0,w,c
  8863   004B0E  501B               	movf	(___lldiv@divisor+3)^0,w,c
  8864   004B10  5817               	subwfb	(___lldiv@dividend+3)^0,w,c
  8865   004B12  A0D8               	btfss	status,0,c
  8866   004B14  EF8E  F025         	goto	u4001
  8867   004B18  EF90  F025         	goto	u4000
  8868   004B1C                     u4001:
  8869   004B1C  EF99  F025         	goto	l4814
  8870   004B20                     u4000:
  8871   004B20  5018               	movf	___lldiv@divisor^0,w,c
  8872   004B22  5E14               	subwf	___lldiv@dividend^0,f,c
  8873   004B24  5019               	movf	(___lldiv@divisor+1)^0,w,c
  8874   004B26  5A15               	subwfb	(___lldiv@dividend+1)^0,f,c
  8875   004B28  501A               	movf	(___lldiv@divisor+2)^0,w,c
  8876   004B2A  5A16               	subwfb	(___lldiv@dividend+2)^0,f,c
  8877   004B2C  501B               	movf	(___lldiv@divisor+3)^0,w,c
  8878   004B2E  5A17               	subwfb	(___lldiv@dividend+3)^0,f,c
  8879   004B30  801C               	bsf	___lldiv@quotient^0,0,c
  8880   004B32                     l4814:
  8881   004B32  90D8               	bcf	status,0,c
  8882   004B34  321B               	rrcf	(___lldiv@divisor+3)^0,f,c
  8883   004B36  321A               	rrcf	(___lldiv@divisor+2)^0,f,c
  8884   004B38  3219               	rrcf	(___lldiv@divisor+1)^0,f,c
  8885   004B3A  3218               	rrcf	___lldiv@divisor^0,f,c
  8886   004B3C  2E20               	decfsz	___lldiv@counter^0,f,c
  8887   004B3E  EF7C  F025         	goto	l4806
  8888   004B42                     l792:
  8889   004B42  C01C  F014         	movff	___lldiv@quotient,?___lldiv
  8890   004B46  C01D  F015         	movff	___lldiv@quotient+1,?___lldiv+1
  8891   004B4A  C01E  F016         	movff	___lldiv@quotient+2,?___lldiv+2
  8892   004B4E  C01F  F017         	movff	___lldiv@quotient+3,?___lldiv+3
  8893   004B52  0012               	return		;funcret
  8894   004B54                     __end_of___lldiv:
  8895                           	callstack 0
  8896                           
  8897 ;; *************** function ___aldiv *****************
  8898 ;; Defined at:
  8899 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;  dividend        4   19[COMRAM] long 
  8902 ;;  divisor         4   23[COMRAM] long 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  quotient        4   29[COMRAM] long 
  8905 ;;  sign            1   28[COMRAM] unsigned char 
  8906 ;;  counter         1   27[COMRAM] unsigned char 
  8907 ;; Return value:  Size  Location     Type
  8908 ;;                  4   19[COMRAM] long 
  8909 ;; Registers used:
  8910 ;;		wreg, status,2, status,0
  8911 ;; Tracked objects:
  8912 ;;		On entry : 0/0
  8913 ;;		On exit  : 0/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8916 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8917 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8919 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8920 ;;Total ram usage:       14 bytes
  8921 ;; Hardware stack levels used: 1
  8922 ;; Hardware stack levels required when called: 5
  8923 ;; This function calls:
  8924 ;;		Nothing
  8925 ;; This function is called by:
  8926 ;;		_rgb_2_hsv
  8927 ;;		_color_normalise
  8928 ;; This function uses a non-reentrant model
  8929 ;;
  8930                           
  8931                           	psect	text25
  8932   0046F4                     __ptext25:
  8933                           	callstack 0
  8934   0046F4                     ___aldiv:
  8935                           	callstack 24
  8936   0046F4  0E00               	movlw	0
  8937   0046F6  6E1D               	movwf	___aldiv@sign^0,c
  8938   0046F8  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
  8939   0046FA  EF83  F023         	goto	u4010
  8940   0046FE  EF81  F023         	goto	u4011
  8941   004702                     u4011:
  8942   004702  EF8D  F023         	goto	l4826
  8943   004706                     u4010:
  8944   004706  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
  8945   004708  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
  8946   00470A  1E19               	comf	(___aldiv@divisor+1)^0,f,c
  8947   00470C  6C18               	negf	___aldiv@divisor^0,c
  8948   00470E  0E00               	movlw	0
  8949   004710  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
  8950   004712  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
  8951   004714  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
  8952   004716  0E01               	movlw	1
  8953   004718  6E1D               	movwf	___aldiv@sign^0,c
  8954   00471A                     l4826:
  8955   00471A  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
  8956   00471C  EF94  F023         	goto	u4020
  8957   004720  EF92  F023         	goto	u4021
  8958   004724                     u4021:
  8959   004724  EF9E  F023         	goto	l4832
  8960   004728                     u4020:
  8961   004728  1E17               	comf	(___aldiv@dividend+3)^0,f,c
  8962   00472A  1E16               	comf	(___aldiv@dividend+2)^0,f,c
  8963   00472C  1E15               	comf	(___aldiv@dividend+1)^0,f,c
  8964   00472E  6C14               	negf	___aldiv@dividend^0,c
  8965   004730  0E00               	movlw	0
  8966   004732  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
  8967   004734  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
  8968   004736  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
  8969   004738  0E01               	movlw	1
  8970   00473A  1A1D               	xorwf	___aldiv@sign^0,f,c
  8971   00473C                     l4832:
  8972   00473C  0E00               	movlw	0
  8973   00473E  6E1E               	movwf	___aldiv@quotient^0,c
  8974   004740  0E00               	movlw	0
  8975   004742  6E1F               	movwf	(___aldiv@quotient+1)^0,c
  8976   004744  0E00               	movlw	0
  8977   004746  6E20               	movwf	(___aldiv@quotient+2)^0,c
  8978   004748  0E00               	movlw	0
  8979   00474A  6E21               	movwf	(___aldiv@quotient+3)^0,c
  8980   00474C  5018               	movf	___aldiv@divisor^0,w,c
  8981   00474E  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
  8982   004750  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
  8983   004752  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
  8984   004754  B4D8               	btfsc	status,2,c
  8985   004756  EFAF  F023         	goto	u4031
  8986   00475A  EFB1  F023         	goto	u4030
  8987   00475E                     u4031:
  8988   00475E  EFE7  F023         	goto	l4854
  8989   004762                     u4030:
  8990   004762  0E01               	movlw	1
  8991   004764  6E1C               	movwf	___aldiv@counter^0,c
  8992   004766  EFBB  F023         	goto	l4840
  8993   00476A                     l4838:
  8994   00476A  90D8               	bcf	status,0,c
  8995   00476C  3618               	rlcf	___aldiv@divisor^0,f,c
  8996   00476E  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
  8997   004770  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
  8998   004772  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
  8999   004774  2A1C               	incf	___aldiv@counter^0,f,c
  9000   004776                     l4840:
  9001   004776  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
  9002   004778  EFC0  F023         	goto	u4041
  9003   00477C  EFC2  F023         	goto	u4040
  9004   004780                     u4041:
  9005   004780  EFB5  F023         	goto	l4838
  9006   004784                     u4040:
  9007   004784                     l4842:
  9008   004784  90D8               	bcf	status,0,c
  9009   004786  361E               	rlcf	___aldiv@quotient^0,f,c
  9010   004788  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
  9011   00478A  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
  9012   00478C  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
  9013   00478E  5018               	movf	___aldiv@divisor^0,w,c
  9014   004790  5C14               	subwf	___aldiv@dividend^0,w,c
  9015   004792  5019               	movf	(___aldiv@divisor+1)^0,w,c
  9016   004794  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
  9017   004796  501A               	movf	(___aldiv@divisor+2)^0,w,c
  9018   004798  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
  9019   00479A  501B               	movf	(___aldiv@divisor+3)^0,w,c
  9020   00479C  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
  9021   00479E  A0D8               	btfss	status,0,c
  9022   0047A0  EFD4  F023         	goto	u4051
  9023   0047A4  EFD6  F023         	goto	u4050
  9024   0047A8                     u4051:
  9025   0047A8  EFDF  F023         	goto	l4850
  9026   0047AC                     u4050:
  9027   0047AC  5018               	movf	___aldiv@divisor^0,w,c
  9028   0047AE  5E14               	subwf	___aldiv@dividend^0,f,c
  9029   0047B0  5019               	movf	(___aldiv@divisor+1)^0,w,c
  9030   0047B2  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
  9031   0047B4  501A               	movf	(___aldiv@divisor+2)^0,w,c
  9032   0047B6  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
  9033   0047B8  501B               	movf	(___aldiv@divisor+3)^0,w,c
  9034   0047BA  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
  9035   0047BC  801E               	bsf	___aldiv@quotient^0,0,c
  9036   0047BE                     l4850:
  9037   0047BE  90D8               	bcf	status,0,c
  9038   0047C0  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
  9039   0047C2  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
  9040   0047C4  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
  9041   0047C6  3218               	rrcf	___aldiv@divisor^0,f,c
  9042   0047C8  2E1C               	decfsz	___aldiv@counter^0,f,c
  9043   0047CA  EFC2  F023         	goto	l4842
  9044   0047CE                     l4854:
  9045   0047CE  501D               	movf	___aldiv@sign^0,w,c
  9046   0047D0  B4D8               	btfsc	status,2,c
  9047   0047D2  EFED  F023         	goto	u4061
  9048   0047D6  EFEF  F023         	goto	u4060
  9049   0047DA                     u4061:
  9050   0047DA  EFF7  F023         	goto	l4858
  9051   0047DE                     u4060:
  9052   0047DE  1E21               	comf	(___aldiv@quotient+3)^0,f,c
  9053   0047E0  1E20               	comf	(___aldiv@quotient+2)^0,f,c
  9054   0047E2  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
  9055   0047E4  6C1E               	negf	___aldiv@quotient^0,c
  9056   0047E6  0E00               	movlw	0
  9057   0047E8  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
  9058   0047EA  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
  9059   0047EC  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
  9060   0047EE                     l4858:
  9061   0047EE  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  9062   0047F2  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  9063   0047F6  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  9064   0047FA  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  9065   0047FE  0012               	return		;funcret
  9066   004800                     __end_of___aldiv:
  9067                           	callstack 0
  9068                           
  9069 ;; *************** function _color_read *****************
  9070 ;; Defined at:
  9071 ;;		line 80 in file "color.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  RGBC            2   11[COMRAM] PTR struct RGBC_val
  9074 ;;		 -> main@RGBC(8), 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;		None
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      void 
  9079 ;; Registers used:
  9080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9088 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9089 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9090 ;;Total ram usage:        9 bytes
  9091 ;; Hardware stack levels used: 1
  9092 ;; Hardware stack levels required when called: 7
  9093 ;; This function calls:
  9094 ;;		_I2C_2_Master_Read
  9095 ;;		_I2C_2_Master_RepStart
  9096 ;;		_I2C_2_Master_Start
  9097 ;;		_I2C_2_Master_Stop
  9098 ;;		_I2C_2_Master_Write
  9099 ;; This function is called by:
  9100 ;;		_main
  9101 ;;		_color_calibration
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105                           	psect	text26
  9106   003C22                     __ptext26:
  9107                           	callstack 0
  9108   003C22                     _color_read:
  9109                           	callstack 23
  9110   003C22                     
  9111                           ;color.c: 80: void color_read(RGBC_val *RGBC);color.c: 81: {;color.c: 82:  I2C_2_Master_
      +                          Start();
  9112   003C22  ECB6  F028         	call	_I2C_2_Master_Start	;wreg free
  9113                           
  9114                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x00);
  9115   003C26  0E52               	movlw	82
  9116   003C28  ECA0  F028         	call	_I2C_2_Master_Write
  9117                           
  9118                           ;color.c: 84:  I2C_2_Master_Write(0xA0 | 0x16);
  9119   003C2C  0EB6               	movlw	182
  9120   003C2E  ECA0  F028         	call	_I2C_2_Master_Write
  9121                           
  9122                           ;color.c: 85:  I2C_2_Master_RepStart();
  9123   003C32  ECBB  F028         	call	_I2C_2_Master_RepStart	;wreg free
  9124                           
  9125                           ;color.c: 86:  I2C_2_Master_Write(0x52 | 0x01);
  9126   003C36  0E53               	movlw	83
  9127   003C38  ECA0  F028         	call	_I2C_2_Master_Write
  9128   003C3C                     
  9129                           ;color.c: 87:  RGBC->R=I2C_2_Master_Read(1);
  9130   003C3C  0E01               	movlw	1
  9131   003C3E  EC11  F027         	call	_I2C_2_Master_Read
  9132   003C42  6E0E               	movwf	??_color_read^0,c
  9133   003C44  6A0F               	clrf	(??_color_read+1)^0,c
  9134   003C46  C00C  FFD9         	movff	color_read@RGBC,fsr2l
  9135   003C4A  C00D  FFDA         	movff	color_read@RGBC+1,fsr2h
  9136   003C4E  C00E  FFDE         	movff	??_color_read,postinc2
  9137   003C52  C00F  FFDD         	movff	??_color_read+1,postdec2
  9138   003C56                     
  9139                           ;color.c: 88:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  9140   003C56  C00C  FFD9         	movff	color_read@RGBC,fsr2l
  9141   003C5A  C00D  FFDA         	movff	color_read@RGBC+1,fsr2h
  9142   003C5E  CFDE F00E          	movff	postinc2,??_color_read
  9143   003C62  CFDD F00F          	movff	postdec2,??_color_read+1
  9144   003C66  0E00               	movlw	0
  9145   003C68  EC11  F027         	call	_I2C_2_Master_Read
  9146   003C6C  6E10               	movwf	(??_color_read+2)^0,c
  9147   003C6E  5010               	movf	(??_color_read+2)^0,w,c
  9148   003C70  6E12               	movwf	(??_color_read+4)^0,c
  9149   003C72  6A11               	clrf	(??_color_read+3)^0,c
  9150   003C74  500E               	movf	??_color_read^0,w,c
  9151   003C76  1011               	iorwf	(??_color_read+3)^0,w,c
  9152   003C78  6E13               	movwf	(??_color_read+5)^0,c
  9153   003C7A  500F               	movf	(??_color_read+1)^0,w,c
  9154   003C7C  1012               	iorwf	(??_color_read+4)^0,w,c
  9155   003C7E  6E14               	movwf	(??_color_read+6)^0,c
  9156   003C80  C00C  FFD9         	movff	color_read@RGBC,fsr2l
  9157   003C84  C00D  FFDA         	movff	color_read@RGBC+1,fsr2h
  9158   003C88  C013  FFDE         	movff	??_color_read+5,postinc2
  9159   003C8C  C014  FFDD         	movff	??_color_read+6,postdec2
  9160                           
  9161                           ;color.c: 89:  I2C_2_Master_Stop();
  9162   003C90  ECB1  F028         	call	_I2C_2_Master_Stop	;wreg free
  9163                           
  9164                           ;color.c: 91:     I2C_2_Master_Start();
  9165   003C94  ECB6  F028         	call	_I2C_2_Master_Start	;wreg free
  9166                           
  9167                           ;color.c: 92:  I2C_2_Master_Write(0x52 | 0x00);
  9168   003C98  0E52               	movlw	82
  9169   003C9A  ECA0  F028         	call	_I2C_2_Master_Write
  9170                           
  9171                           ;color.c: 93:  I2C_2_Master_Write(0xA0 | 0x18);
  9172   003C9E  0EB8               	movlw	184
  9173   003CA0  ECA0  F028         	call	_I2C_2_Master_Write
  9174                           
  9175                           ;color.c: 94:  I2C_2_Master_RepStart();
  9176   003CA4  ECBB  F028         	call	_I2C_2_Master_RepStart	;wreg free
  9177                           
  9178                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x01);
  9179   003CA8  0E53               	movlw	83
  9180   003CAA  ECA0  F028         	call	_I2C_2_Master_Write
  9181   003CAE                     
  9182                           ;color.c: 96:  RGBC->G=I2C_2_Master_Read(1);
  9183   003CAE  0E01               	movlw	1
  9184   003CB0  EC11  F027         	call	_I2C_2_Master_Read
  9185   003CB4  6E0E               	movwf	??_color_read^0,c
  9186   003CB6  6A0F               	clrf	(??_color_read+1)^0,c
  9187   003CB8  EE20 F002          	lfsr	2,2
  9188   003CBC  500C               	movf	color_read@RGBC^0,w,c
  9189   003CBE  26D9               	addwf	fsr2l,f,c
  9190   003CC0  500D               	movf	(color_read@RGBC+1)^0,w,c
  9191   003CC2  22DA               	addwfc	fsr2h,f,c
  9192   003CC4  C00E  FFDE         	movff	??_color_read,postinc2
  9193   003CC8  C00F  FFDD         	movff	??_color_read+1,postdec2
  9194   003CCC                     
  9195                           ;color.c: 97:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  9196   003CCC  EE20 F002          	lfsr	2,2
  9197   003CD0  500C               	movf	color_read@RGBC^0,w,c
  9198   003CD2  26D9               	addwf	fsr2l,f,c
  9199   003CD4  500D               	movf	(color_read@RGBC+1)^0,w,c
  9200   003CD6  22DA               	addwfc	fsr2h,f,c
  9201   003CD8  CFDE F00E          	movff	postinc2,??_color_read
  9202   003CDC  CFDD F00F          	movff	postdec2,??_color_read+1
  9203   003CE0  0E00               	movlw	0
  9204   003CE2  EC11  F027         	call	_I2C_2_Master_Read
  9205   003CE6  6E10               	movwf	(??_color_read+2)^0,c
  9206   003CE8  5010               	movf	(??_color_read+2)^0,w,c
  9207   003CEA  6E12               	movwf	(??_color_read+4)^0,c
  9208   003CEC  6A11               	clrf	(??_color_read+3)^0,c
  9209   003CEE  500E               	movf	??_color_read^0,w,c
  9210   003CF0  1011               	iorwf	(??_color_read+3)^0,w,c
  9211   003CF2  6E13               	movwf	(??_color_read+5)^0,c
  9212   003CF4  500F               	movf	(??_color_read+1)^0,w,c
  9213   003CF6  1012               	iorwf	(??_color_read+4)^0,w,c
  9214   003CF8  6E14               	movwf	(??_color_read+6)^0,c
  9215   003CFA  EE20 F002          	lfsr	2,2
  9216   003CFE  500C               	movf	color_read@RGBC^0,w,c
  9217   003D00  26D9               	addwf	fsr2l,f,c
  9218   003D02  500D               	movf	(color_read@RGBC+1)^0,w,c
  9219   003D04  22DA               	addwfc	fsr2h,f,c
  9220   003D06  C013  FFDE         	movff	??_color_read+5,postinc2
  9221   003D0A  C014  FFDD         	movff	??_color_read+6,postdec2
  9222                           
  9223                           ;color.c: 98:  I2C_2_Master_Stop();
  9224   003D0E  ECB1  F028         	call	_I2C_2_Master_Stop	;wreg free
  9225                           
  9226                           ;color.c: 100:     I2C_2_Master_Start();
  9227   003D12  ECB6  F028         	call	_I2C_2_Master_Start	;wreg free
  9228                           
  9229                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x00);
  9230   003D16  0E52               	movlw	82
  9231   003D18  ECA0  F028         	call	_I2C_2_Master_Write
  9232                           
  9233                           ;color.c: 102:  I2C_2_Master_Write(0xA0 | 0x1A);
  9234   003D1C  0EBA               	movlw	186
  9235   003D1E  ECA0  F028         	call	_I2C_2_Master_Write
  9236                           
  9237                           ;color.c: 103:  I2C_2_Master_RepStart();
  9238   003D22  ECBB  F028         	call	_I2C_2_Master_RepStart	;wreg free
  9239                           
  9240                           ;color.c: 104:  I2C_2_Master_Write(0x52 | 0x01);
  9241   003D26  0E53               	movlw	83
  9242   003D28  ECA0  F028         	call	_I2C_2_Master_Write
  9243   003D2C                     
  9244                           ;color.c: 105:  RGBC->B=I2C_2_Master_Read(1);
  9245   003D2C  0E01               	movlw	1
  9246   003D2E  EC11  F027         	call	_I2C_2_Master_Read
  9247   003D32  6E0E               	movwf	??_color_read^0,c
  9248   003D34  6A0F               	clrf	(??_color_read+1)^0,c
  9249   003D36  EE20 F004          	lfsr	2,4
  9250   003D3A  500C               	movf	color_read@RGBC^0,w,c
  9251   003D3C  26D9               	addwf	fsr2l,f,c
  9252   003D3E  500D               	movf	(color_read@RGBC+1)^0,w,c
  9253   003D40  22DA               	addwfc	fsr2h,f,c
  9254   003D42  C00E  FFDE         	movff	??_color_read,postinc2
  9255   003D46  C00F  FFDD         	movff	??_color_read+1,postdec2
  9256   003D4A                     
  9257                           ;color.c: 106:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  9258   003D4A  EE20 F004          	lfsr	2,4
  9259   003D4E  500C               	movf	color_read@RGBC^0,w,c
  9260   003D50  26D9               	addwf	fsr2l,f,c
  9261   003D52  500D               	movf	(color_read@RGBC+1)^0,w,c
  9262   003D54  22DA               	addwfc	fsr2h,f,c
  9263   003D56  CFDE F00E          	movff	postinc2,??_color_read
  9264   003D5A  CFDD F00F          	movff	postdec2,??_color_read+1
  9265   003D5E  0E00               	movlw	0
  9266   003D60  EC11  F027         	call	_I2C_2_Master_Read
  9267   003D64  6E10               	movwf	(??_color_read+2)^0,c
  9268   003D66  5010               	movf	(??_color_read+2)^0,w,c
  9269   003D68  6E12               	movwf	(??_color_read+4)^0,c
  9270   003D6A  6A11               	clrf	(??_color_read+3)^0,c
  9271   003D6C  500E               	movf	??_color_read^0,w,c
  9272   003D6E  1011               	iorwf	(??_color_read+3)^0,w,c
  9273   003D70  6E13               	movwf	(??_color_read+5)^0,c
  9274   003D72  500F               	movf	(??_color_read+1)^0,w,c
  9275   003D74  1012               	iorwf	(??_color_read+4)^0,w,c
  9276   003D76  6E14               	movwf	(??_color_read+6)^0,c
  9277   003D78  EE20 F004          	lfsr	2,4
  9278   003D7C  500C               	movf	color_read@RGBC^0,w,c
  9279   003D7E  26D9               	addwf	fsr2l,f,c
  9280   003D80  500D               	movf	(color_read@RGBC+1)^0,w,c
  9281   003D82  22DA               	addwfc	fsr2h,f,c
  9282   003D84  C013  FFDE         	movff	??_color_read+5,postinc2
  9283   003D88  C014  FFDD         	movff	??_color_read+6,postdec2
  9284                           
  9285                           ;color.c: 107:  I2C_2_Master_Stop();
  9286   003D8C  ECB1  F028         	call	_I2C_2_Master_Stop	;wreg free
  9287                           
  9288                           ;color.c: 109:     I2C_2_Master_Start();
  9289   003D90  ECB6  F028         	call	_I2C_2_Master_Start	;wreg free
  9290                           
  9291                           ;color.c: 110:  I2C_2_Master_Write(0x52 | 0x00);
  9292   003D94  0E52               	movlw	82
  9293   003D96  ECA0  F028         	call	_I2C_2_Master_Write
  9294                           
  9295                           ;color.c: 111:  I2C_2_Master_Write(0xA0 | 0x14);
  9296   003D9A  0EB4               	movlw	180
  9297   003D9C  ECA0  F028         	call	_I2C_2_Master_Write
  9298                           
  9299                           ;color.c: 112:  I2C_2_Master_RepStart();
  9300   003DA0  ECBB  F028         	call	_I2C_2_Master_RepStart	;wreg free
  9301                           
  9302                           ;color.c: 113:  I2C_2_Master_Write(0x52 | 0x01);
  9303   003DA4  0E53               	movlw	83
  9304   003DA6  ECA0  F028         	call	_I2C_2_Master_Write
  9305   003DAA                     
  9306                           ;color.c: 114:  RGBC->C=I2C_2_Master_Read(1);
  9307   003DAA  0E01               	movlw	1
  9308   003DAC  EC11  F027         	call	_I2C_2_Master_Read
  9309   003DB0  6E0E               	movwf	??_color_read^0,c
  9310   003DB2  6A0F               	clrf	(??_color_read+1)^0,c
  9311   003DB4  EE20 F006          	lfsr	2,6
  9312   003DB8  500C               	movf	color_read@RGBC^0,w,c
  9313   003DBA  26D9               	addwf	fsr2l,f,c
  9314   003DBC  500D               	movf	(color_read@RGBC+1)^0,w,c
  9315   003DBE  22DA               	addwfc	fsr2h,f,c
  9316   003DC0  C00E  FFDE         	movff	??_color_read,postinc2
  9317   003DC4  C00F  FFDD         	movff	??_color_read+1,postdec2
  9318   003DC8                     
  9319                           ;color.c: 115:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  9320   003DC8  EE20 F006          	lfsr	2,6
  9321   003DCC  500C               	movf	color_read@RGBC^0,w,c
  9322   003DCE  26D9               	addwf	fsr2l,f,c
  9323   003DD0  500D               	movf	(color_read@RGBC+1)^0,w,c
  9324   003DD2  22DA               	addwfc	fsr2h,f,c
  9325   003DD4  CFDE F00E          	movff	postinc2,??_color_read
  9326   003DD8  CFDD F00F          	movff	postdec2,??_color_read+1
  9327   003DDC  0E00               	movlw	0
  9328   003DDE  EC11  F027         	call	_I2C_2_Master_Read
  9329   003DE2  6E10               	movwf	(??_color_read+2)^0,c
  9330   003DE4  5010               	movf	(??_color_read+2)^0,w,c
  9331   003DE6  6E12               	movwf	(??_color_read+4)^0,c
  9332   003DE8  6A11               	clrf	(??_color_read+3)^0,c
  9333   003DEA  500E               	movf	??_color_read^0,w,c
  9334   003DEC  1011               	iorwf	(??_color_read+3)^0,w,c
  9335   003DEE  6E13               	movwf	(??_color_read+5)^0,c
  9336   003DF0  500F               	movf	(??_color_read+1)^0,w,c
  9337   003DF2  1012               	iorwf	(??_color_read+4)^0,w,c
  9338   003DF4  6E14               	movwf	(??_color_read+6)^0,c
  9339   003DF6  EE20 F006          	lfsr	2,6
  9340   003DFA  500C               	movf	color_read@RGBC^0,w,c
  9341   003DFC  26D9               	addwf	fsr2l,f,c
  9342   003DFE  500D               	movf	(color_read@RGBC+1)^0,w,c
  9343   003E00  22DA               	addwfc	fsr2h,f,c
  9344   003E02  C013  FFDE         	movff	??_color_read+5,postinc2
  9345   003E06  C014  FFDD         	movff	??_color_read+6,postdec2
  9346                           
  9347                           ;color.c: 116:  I2C_2_Master_Stop();
  9348   003E0A  ECB1  F028         	call	_I2C_2_Master_Stop	;wreg free
  9349   003E0E  0012               	return		;funcret
  9350   003E10                     __end_of_color_read:
  9351                           	callstack 0
  9352                           
  9353 ;; *************** function _I2C_2_Master_Write *****************
  9354 ;; Defined at:
  9355 ;;		line 45 in file "i2c.c"
  9356 ;; Parameters:    Size  Location     Type
  9357 ;;  data_byte       1    wreg     unsigned char 
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;  data_byte       1    8[COMRAM] unsigned char 
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  1    wreg      void 
  9362 ;; Registers used:
  9363 ;;		wreg, status,2, status,0, cstack
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9372 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9373 ;;Total ram usage:        1 bytes
  9374 ;; Hardware stack levels used: 1
  9375 ;; Hardware stack levels required when called: 6
  9376 ;; This function calls:
  9377 ;;		_I2C_2_Master_Idle
  9378 ;; This function is called by:
  9379 ;;		_color_clear_init_interrupts
  9380 ;;		_color_writetoaddr
  9381 ;;		_color_read
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           	psect	text27
  9386   005140                     __ptext27:
  9387                           	callstack 0
  9388   005140                     _I2C_2_Master_Write:
  9389                           	callstack 23
  9390                           
  9391                           ;incstack = 0
  9392                           ;I2C_2_Master_Write@data_byte stored from wreg
  9393   005140  6E09               	movwf	I2C_2_Master_Write@data_byte^0,c
  9394   005142                     
  9395                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9396   005142  ECBE  F027         	call	_I2C_2_Master_Idle	;wreg free
  9397   005146                     
  9398                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9399   005146  C009  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9400   00514A  0012               	return		;funcret
  9401   00514C                     __end_of_I2C_2_Master_Write:
  9402                           	callstack 0
  9403                           
  9404 ;; *************** function _I2C_2_Master_Stop *****************
  9405 ;; Defined at:
  9406 ;;		line 39 in file "i2c.c"
  9407 ;; Parameters:    Size  Location     Type
  9408 ;;		None
  9409 ;; Auto vars:     Size  Location     Type
  9410 ;;		None
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  1    wreg      void 
  9413 ;; Registers used:
  9414 ;;		wreg, status,2, status,0, cstack
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9424 ;;Total ram usage:        0 bytes
  9425 ;; Hardware stack levels used: 1
  9426 ;; Hardware stack levels required when called: 6
  9427 ;; This function calls:
  9428 ;;		_I2C_2_Master_Idle
  9429 ;; This function is called by:
  9430 ;;		_color_clear_init_interrupts
  9431 ;;		_color_writetoaddr
  9432 ;;		_color_read
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           	psect	text28
  9437   005162                     __ptext28:
  9438                           	callstack 0
  9439   005162                     _I2C_2_Master_Stop:
  9440                           	callstack 23
  9441   005162                     
  9442                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9443   005162  ECBE  F027         	call	_I2C_2_Master_Idle	;wreg free
  9444   005166                     
  9445                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9446   005166  010E               	movlb	14	; () banked
  9447   005168  85DA               	bsf	218,2,b	;volatile
  9448   00516A                     
  9449                           ; BSR set to: 14
  9450   00516A  0012               	return		;funcret
  9451   00516C                     __end_of_I2C_2_Master_Stop:
  9452                           	callstack 0
  9453                           
  9454 ;; *************** function _I2C_2_Master_Start *****************
  9455 ;; Defined at:
  9456 ;;		line 27 in file "i2c.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;		None
  9459 ;; Auto vars:     Size  Location     Type
  9460 ;;		None
  9461 ;; Return value:  Size  Location     Type
  9462 ;;                  1    wreg      void 
  9463 ;; Registers used:
  9464 ;;		wreg, status,2, status,0, cstack
  9465 ;; Tracked objects:
  9466 ;;		On entry : 0/0
  9467 ;;		On exit  : 0/0
  9468 ;;		Unchanged: 0/0
  9469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9474 ;;Total ram usage:        0 bytes
  9475 ;; Hardware stack levels used: 1
  9476 ;; Hardware stack levels required when called: 6
  9477 ;; This function calls:
  9478 ;;		_I2C_2_Master_Idle
  9479 ;; This function is called by:
  9480 ;;		_color_clear_init_interrupts
  9481 ;;		_color_writetoaddr
  9482 ;;		_color_read
  9483 ;; This function uses a non-reentrant model
  9484 ;;
  9485                           
  9486                           	psect	text29
  9487   00516C                     __ptext29:
  9488                           	callstack 0
  9489   00516C                     _I2C_2_Master_Start:
  9490                           	callstack 23
  9491   00516C                     
  9492                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9493   00516C  ECBE  F027         	call	_I2C_2_Master_Idle	;wreg free
  9494   005170                     
  9495                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9496   005170  010E               	movlb	14	; () banked
  9497   005172  81DA               	bsf	218,0,b	;volatile
  9498   005174                     
  9499                           ; BSR set to: 14
  9500   005174  0012               	return		;funcret
  9501   005176                     __end_of_I2C_2_Master_Start:
  9502                           	callstack 0
  9503                           
  9504 ;; *************** function _I2C_2_Master_RepStart *****************
  9505 ;; Defined at:
  9506 ;;		line 33 in file "i2c.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;		None
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;		None
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  1    wreg      void 
  9513 ;; Registers used:
  9514 ;;		wreg, status,2, status,0, cstack
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;Total ram usage:        0 bytes
  9525 ;; Hardware stack levels used: 1
  9526 ;; Hardware stack levels required when called: 6
  9527 ;; This function calls:
  9528 ;;		_I2C_2_Master_Idle
  9529 ;; This function is called by:
  9530 ;;		_color_read
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text30
  9535   005176                     __ptext30:
  9536                           	callstack 0
  9537   005176                     _I2C_2_Master_RepStart:
  9538                           	callstack 23
  9539   005176                     
  9540                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9541   005176  ECBE  F027         	call	_I2C_2_Master_Idle	;wreg free
  9542   00517A                     
  9543                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9544   00517A  010E               	movlb	14	; () banked
  9545   00517C  83DA               	bsf	218,1,b	;volatile
  9546   00517E                     
  9547                           ; BSR set to: 14
  9548   00517E  0012               	return		;funcret
  9549   005180                     __end_of_I2C_2_Master_RepStart:
  9550                           	callstack 0
  9551                           
  9552 ;; *************** function _I2C_2_Master_Read *****************
  9553 ;; Defined at:
  9554 ;;		line 51 in file "i2c.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;  ack             1    wreg     unsigned char 
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;  ack             1    9[COMRAM] unsigned char 
  9559 ;;  tmp             1   10[COMRAM] unsigned char 
  9560 ;; Return value:  Size  Location     Type
  9561 ;;                  1    wreg      unsigned char 
  9562 ;; Registers used:
  9563 ;;		wreg, status,2, status,0, cstack
  9564 ;; Tracked objects:
  9565 ;;		On entry : 0/0
  9566 ;;		On exit  : 0/0
  9567 ;;		Unchanged: 0/0
  9568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9572 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9573 ;;Total ram usage:        3 bytes
  9574 ;; Hardware stack levels used: 1
  9575 ;; Hardware stack levels required when called: 6
  9576 ;; This function calls:
  9577 ;;		_I2C_2_Master_Idle
  9578 ;; This function is called by:
  9579 ;;		_color_read
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           	psect	text31
  9584   004E22                     __ptext31:
  9585                           	callstack 0
  9586   004E22                     _I2C_2_Master_Read:
  9587                           	callstack 23
  9588                           
  9589                           ; BSR set to: 14
  9590                           ;incstack = 0
  9591                           ;I2C_2_Master_Read@ack stored from wreg
  9592   004E22  6E0A               	movwf	I2C_2_Master_Read@ack^0,c
  9593   004E24                     
  9594                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9595   004E24  ECBE  F027         	call	_I2C_2_Master_Idle	;wreg free
  9596   004E28                     
  9597                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9598   004E28  010E               	movlb	14	; () banked
  9599   004E2A  87DA               	bsf	218,3,b	;volatile
  9600                           
  9601                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9602   004E2C  ECBE  F027         	call	_I2C_2_Master_Idle	;wreg free
  9603   004E30                     
  9604                           ;i2c.c: 57:   tmp = SSP2BUF;
  9605   004E30  CED5 F00B          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9606                           
  9607                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9608   004E34  ECBE  F027         	call	_I2C_2_Master_Idle	;wreg free
  9609   004E38                     
  9610                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9611   004E38  500A               	movf	I2C_2_Master_Read@ack^0,w,c
  9612   004E3A  B4D8               	btfsc	status,2,c
  9613   004E3C  EF22  F027         	goto	u3771
  9614   004E40  EF26  F027         	goto	u3770
  9615   004E44                     u3771:
  9616   004E44  6A09               	clrf	??_I2C_2_Master_Read^0,c
  9617   004E46  2A09               	incf	??_I2C_2_Master_Read^0,f,c
  9618   004E48  EF27  F027         	goto	u3788
  9619   004E4C                     u3770:
  9620   004E4C  6A09               	clrf	??_I2C_2_Master_Read^0,c
  9621   004E4E                     u3788:
  9622   004E4E  3A09               	swapf	??_I2C_2_Master_Read^0,f,c
  9623   004E50  4609               	rlncf	??_I2C_2_Master_Read^0,f,c
  9624   004E52  010E               	movlb	14	; () banked
  9625   004E54  51DA               	movf	218,w,b	;volatile
  9626   004E56  1809               	xorwf	??_I2C_2_Master_Read^0,w,c
  9627   004E58  0BDF               	andlw	-33
  9628   004E5A  1809               	xorwf	??_I2C_2_Master_Read^0,w,c
  9629   004E5C  6FDA               	movwf	218,b	;volatile
  9630   004E5E                     
  9631                           ; BSR set to: 14
  9632                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9633   004E5E  89DA               	bsf	218,4,b	;volatile
  9634   004E60                     
  9635                           ; BSR set to: 14
  9636                           ;i2c.c: 61:   return tmp;
  9637   004E60  500B               	movf	I2C_2_Master_Read@tmp^0,w,c
  9638   004E62                     
  9639                           ; BSR set to: 14
  9640   004E62  0012               	return		;funcret
  9641   004E64                     __end_of_I2C_2_Master_Read:
  9642                           	callstack 0
  9643                           
  9644 ;; *************** function _I2C_2_Master_Idle *****************
  9645 ;; Defined at:
  9646 ;;		line 22 in file "i2c.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;		None
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;		None
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  1    wreg      void 
  9653 ;; Registers used:
  9654 ;;		wreg, status,2, status,0
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9664 ;;Total ram usage:        1 bytes
  9665 ;; Hardware stack levels used: 1
  9666 ;; Hardware stack levels required when called: 5
  9667 ;; This function calls:
  9668 ;;		Nothing
  9669 ;; This function is called by:
  9670 ;;		_I2C_2_Master_Start
  9671 ;;		_I2C_2_Master_RepStart
  9672 ;;		_I2C_2_Master_Stop
  9673 ;;		_I2C_2_Master_Write
  9674 ;;		_I2C_2_Master_Read
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           	psect	text32
  9679   004F7C                     __ptext32:
  9680                           	callstack 0
  9681   004F7C                     _I2C_2_Master_Idle:
  9682                           	callstack 23
  9683   004F7C                     l252:
  9684   004F7C  010E               	movlb	14	; () banked
  9685   004F7E  B5D8               	btfsc	216,2,b	;volatile
  9686   004F80  EFC4  F027         	goto	u3661
  9687   004F84  EFC6  F027         	goto	u3660
  9688   004F88                     u3661:
  9689   004F88  EFBE  F027         	goto	l252
  9690   004F8C                     u3660:
  9691   004F8C                     
  9692                           ; BSR set to: 14
  9693   004F8C  CEDA F008          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9694   004F90  0E1F               	movlw	31
  9695   004F92  1608               	andwf	??_I2C_2_Master_Idle^0,f,c
  9696   004F94  A4D8               	btfss	status,2,c
  9697   004F96  EFCF  F027         	goto	u3671
  9698   004F9A  EFD1  F027         	goto	u3670
  9699   004F9E                     u3671:
  9700   004F9E  EFBE  F027         	goto	l252
  9701   004FA2                     u3670:
  9702   004FA2                     
  9703                           ; BSR set to: 14
  9704   004FA2  0012               	return		;funcret
  9705   004FA4                     __end_of_I2C_2_Master_Idle:
  9706                           	callstack 0
  9707                           
  9708 ;; *************** function _calibration *****************
  9709 ;; Defined at:
  9710 ;;		line 598 in file "dc_motor.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  9713 ;;		 -> main@motorL(10), 
  9714 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  9715 ;;		 -> main@motorR(10), 
  9716 ;;  turnSpeed       1   44[COMRAM] unsigned char 
  9717 ;;  turnDuration    2   45[COMRAM] PTR unsigned char 
  9718 ;;		 -> main@turnDuration(1), 
  9719 ;;  turnRamp        1   47[COMRAM] unsigned char 
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;		None
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  1    wreg      void 
  9724 ;; Registers used:
  9725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/0
  9728 ;;		On exit  : 0/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9731 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9733 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9734 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9735 ;;Total ram usage:       10 bytes
  9736 ;; Hardware stack levels used: 1
  9737 ;; Hardware stack levels required when called: 8
  9738 ;; This function calls:
  9739 ;;		_turnLeft
  9740 ;;		_turnRight
  9741 ;; This function is called by:
  9742 ;;		_main
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text33
  9747   003720                     __ptext33:
  9748                           	callstack 0
  9749   003720                     _calibration:
  9750                           	callstack 22
  9751   003720                     
  9752                           ;dc_motor.c: 598: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 599: {;dc_motor.c: 601:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
  9753   003720  C029  F01B         	movff	calibration@mL,turnLeft@mL
  9754   003724  C02A  F01C         	movff	calibration@mL+1,turnLeft@mL+1
  9755   003728  C02B  F01D         	movff	calibration@mR,turnLeft@mR
  9756   00372C  C02C  F01E         	movff	calibration@mR+1,turnLeft@mR+1
  9757   003730  C02D  F01F         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  9758   003734  C02E  FFD9         	movff	calibration@turnDuration,fsr2l
  9759   003738  C02F  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9760   00373C  50DF               	movf	indf2,w,c
  9761   00373E  6E20               	movwf	turnLeft@turnDuration^0,c
  9762   003740  C030  F021         	movff	calibration@turnRamp,turnLeft@turnRamp
  9763   003744  ECDA  F021         	call	_turnLeft	;wreg free
  9764   003748                     
  9765                           ;dc_motor.c: 602:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9766   003748  0E05               	movlw	5
  9767   00374A  6E32               	movwf	(??_calibration+1)^0,c
  9768   00374C  0E0F               	movlw	15
  9769   00374E  6E31               	movwf	??_calibration^0,c
  9770   003750  0EF1               	movlw	241
  9771   003752                     u6327:
  9772   003752  2EE8               	decfsz	wreg,f,c
  9773   003754  D7FE               	bra	u6327
  9774   003756  2E31               	decfsz	??_calibration^0,f,c
  9775   003758  D7FC               	bra	u6327
  9776   00375A  2E32               	decfsz	(??_calibration+1)^0,f,c
  9777   00375C  D7FA               	bra	u6327
  9778   00375E  0000               	nop	
  9779   003760                     
  9780                           ;dc_motor.c: 603:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  9781   003760  C029  F01B         	movff	calibration@mL,turnLeft@mL
  9782   003764  C02A  F01C         	movff	calibration@mL+1,turnLeft@mL+1
  9783   003768  C02B  F01D         	movff	calibration@mR,turnLeft@mR
  9784   00376C  C02C  F01E         	movff	calibration@mR+1,turnLeft@mR+1
  9785   003770  C02D  F01F         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  9786   003774  C02E  FFD9         	movff	calibration@turnDuration,fsr2l
  9787   003778  C02F  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9788   00377C  50DF               	movf	indf2,w,c
  9789   00377E  6E20               	movwf	turnLeft@turnDuration^0,c
  9790   003780  C030  F021         	movff	calibration@turnRamp,turnLeft@turnRamp
  9791   003784  ECDA  F021         	call	_turnLeft	;wreg free
  9792                           
  9793                           ;dc_motor.c: 604:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9794   003788  0E05               	movlw	5
  9795   00378A  6E32               	movwf	(??_calibration+1)^0,c
  9796   00378C  0E0F               	movlw	15
  9797   00378E  6E31               	movwf	??_calibration^0,c
  9798   003790  0EF1               	movlw	241
  9799   003792                     u6337:
  9800   003792  2EE8               	decfsz	wreg,f,c
  9801   003794  D7FE               	bra	u6337
  9802   003796  2E31               	decfsz	??_calibration^0,f,c
  9803   003798  D7FC               	bra	u6337
  9804   00379A  2E32               	decfsz	(??_calibration+1)^0,f,c
  9805   00379C  D7FA               	bra	u6337
  9806   00379E  0000               	nop	
  9807   0037A0                     
  9808                           ;dc_motor.c: 605:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  9809   0037A0  C029  F01B         	movff	calibration@mL,turnRight@mL
  9810   0037A4  C02A  F01C         	movff	calibration@mL+1,turnRight@mL+1
  9811   0037A8  C02B  F01D         	movff	calibration@mR,turnRight@mR
  9812   0037AC  C02C  F01E         	movff	calibration@mR+1,turnRight@mR+1
  9813   0037B0  C02D  F01F         	movff	calibration@turnSpeed,turnRight@turnSpeed
  9814   0037B4  C02E  FFD9         	movff	calibration@turnDuration,fsr2l
  9815   0037B8  C02F  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9816   0037BC  50DF               	movf	indf2,w,c
  9817   0037BE  6E20               	movwf	turnRight@turnDuration^0,c
  9818   0037C0  C030  F021         	movff	calibration@turnRamp,turnRight@turnRamp
  9819   0037C4  ECF0  F020         	call	_turnRight	;wreg free
  9820   0037C8                     
  9821                           ;dc_motor.c: 606:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9822   0037C8  0E05               	movlw	5
  9823   0037CA  6E32               	movwf	(??_calibration+1)^0,c
  9824   0037CC  0E0F               	movlw	15
  9825   0037CE  6E31               	movwf	??_calibration^0,c
  9826   0037D0  0EF1               	movlw	241
  9827   0037D2                     u6347:
  9828   0037D2  2EE8               	decfsz	wreg,f,c
  9829   0037D4  D7FE               	bra	u6347
  9830   0037D6  2E31               	decfsz	??_calibration^0,f,c
  9831   0037D8  D7FC               	bra	u6347
  9832   0037DA  2E32               	decfsz	(??_calibration+1)^0,f,c
  9833   0037DC  D7FA               	bra	u6347
  9834   0037DE  0000               	nop	
  9835                           
  9836                           ;dc_motor.c: 607:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  9837   0037E0  C029  F01B         	movff	calibration@mL,turnRight@mL
  9838   0037E4  C02A  F01C         	movff	calibration@mL+1,turnRight@mL+1
  9839   0037E8  C02B  F01D         	movff	calibration@mR,turnRight@mR
  9840   0037EC  C02C  F01E         	movff	calibration@mR+1,turnRight@mR+1
  9841   0037F0  C02D  F01F         	movff	calibration@turnSpeed,turnRight@turnSpeed
  9842   0037F4  C02E  FFD9         	movff	calibration@turnDuration,fsr2l
  9843   0037F8  C02F  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9844   0037FC  50DF               	movf	indf2,w,c
  9845   0037FE  6E20               	movwf	turnRight@turnDuration^0,c
  9846   003800  C030  F021         	movff	calibration@turnRamp,turnRight@turnRamp
  9847   003804  ECF0  F020         	call	_turnRight	;wreg free
  9848   003808                     l734:
  9849   003808  A48E               	btfss	142,2,c	;volatile
  9850   00380A  EF09  F01C         	goto	u4551
  9851   00380E  EF0B  F01C         	goto	u4550
  9852   003812                     u4551:
  9853   003812  EF12  F01C         	goto	l738
  9854   003816                     u4550:
  9855   003816  B68E               	btfsc	142,3,c	;volatile
  9856   003818  EF10  F01C         	goto	u4561
  9857   00381C  EF12  F01C         	goto	u4560
  9858   003820                     u4561:
  9859   003820  EF04  F01C         	goto	l734
  9860   003824                     u4560:
  9861   003824                     l738:
  9862                           
  9863                           ;dc_motor.c: 612:         if (!PORTFbits.RF2 && *turnDuration>0) {
  9864   003824  B48E               	btfsc	142,2,c	;volatile
  9865   003826  EF17  F01C         	goto	u4571
  9866   00382A  EF19  F01C         	goto	u4570
  9867   00382E                     u4571:
  9868   00382E  EF2D  F01C         	goto	l739
  9869   003832                     u4570:
  9870   003832  C02E  FFD9         	movff	calibration@turnDuration,fsr2l
  9871   003836  C02F  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9872   00383A  50DF               	movf	indf2,w,c
  9873   00383C  B4D8               	btfsc	status,2,c
  9874   00383E  EF23  F01C         	goto	u4581
  9875   003842  EF25  F01C         	goto	u4580
  9876   003846                     u4581:
  9877   003846  EF2D  F01C         	goto	l739
  9878   00384A                     u4580:
  9879   00384A                     
  9880                           ;dc_motor.c: 613:             (*turnDuration)--;
  9881   00384A  C02E  FFD9         	movff	calibration@turnDuration,fsr2l
  9882   00384E  C02F  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9883   003852  06DF               	decf	indf2,f,c
  9884   003854                     
  9885                           ;dc_motor.c: 614:             LATDbits.LATD7 = 1;
  9886   003854  8E7C               	bsf	124,7,c	;volatile
  9887                           
  9888                           ;dc_motor.c: 615:         }
  9889   003856  EF3A  F01C         	goto	l5372
  9890   00385A                     l739:
  9891   00385A  B68E               	btfsc	142,3,c	;volatile
  9892   00385C  EF32  F01C         	goto	u4591
  9893   003860  EF34  F01C         	goto	u4590
  9894   003864                     u4591:
  9895   003864  EF3A  F01C         	goto	l5372
  9896   003868                     u4590:
  9897   003868                     
  9898                           ;dc_motor.c: 618:             (*turnDuration)++;
  9899   003868  C02E  FFD9         	movff	calibration@turnDuration,fsr2l
  9900   00386C  C02F  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9901   003870  2ADF               	incf	indf2,f,c
  9902   003872                     
  9903                           ;dc_motor.c: 619:             LATHbits.LATH3 = 1;
  9904   003872  8680               	bsf	128,3,c	;volatile
  9905   003874                     l5372:
  9906                           
  9907                           ;dc_motor.c: 622:         _delay((unsigned long)((500)*(64000000/4000.0)));
  9908   003874  0E29               	movlw	41
  9909   003876  6E32               	movwf	(??_calibration+1)^0,c
  9910   003878  0E96               	movlw	150
  9911   00387A  6E31               	movwf	??_calibration^0,c
  9912   00387C  0E7F               	movlw	127
  9913   00387E                     u6357:
  9914   00387E  2EE8               	decfsz	wreg,f,c
  9915   003880  D7FE               	bra	u6357
  9916   003882  2E31               	decfsz	??_calibration^0,f,c
  9917   003884  D7FC               	bra	u6357
  9918   003886  2E32               	decfsz	(??_calibration+1)^0,f,c
  9919   003888  D7FA               	bra	u6357
  9920   00388A  0000               	nop	
  9921   00388C                     
  9922                           ;dc_motor.c: 624:         if (!PORTFbits.RF3) {
  9923   00388C  B68E               	btfsc	142,3,c	;volatile
  9924   00388E  EF4B  F01C         	goto	u4601
  9925   003892  EF4D  F01C         	goto	u4600
  9926   003896                     u4601:
  9927   003896  EF54  F01C         	goto	l742
  9928   00389A                     u4600:
  9929   00389A                     
  9930                           ;dc_motor.c: 625:             (*turnDuration)--;
  9931   00389A  C02E  FFD9         	movff	calibration@turnDuration,fsr2l
  9932   00389E  C02F  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9933   0038A2  06DF               	decf	indf2,f,c
  9934                           
  9935                           ;dc_motor.c: 626:             break;
  9936   0038A4  EFCC  F01C         	goto	l743
  9937   0038A8                     l742:
  9938                           
  9939                           ;dc_motor.c: 629:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
  9940   0038A8  9680               	bcf	128,3,c	;volatile
  9941   0038AA  9E7C               	bcf	124,7,c	;volatile
  9942   0038AC                     
  9943                           ;dc_motor.c: 632:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  9944   0038AC  C029  F01B         	movff	calibration@mL,turnLeft@mL
  9945   0038B0  C02A  F01C         	movff	calibration@mL+1,turnLeft@mL+1
  9946   0038B4  C02B  F01D         	movff	calibration@mR,turnLeft@mR
  9947   0038B8  C02C  F01E         	movff	calibration@mR+1,turnLeft@mR+1
  9948   0038BC  C02D  F01F         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  9949   0038C0  C02E  FFD9         	movff	calibration@turnDuration,fsr2l
  9950   0038C4  C02F  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9951   0038C8  50DF               	movf	indf2,w,c
  9952   0038CA  6E20               	movwf	turnLeft@turnDuration^0,c
  9953   0038CC  C030  F021         	movff	calibration@turnRamp,turnLeft@turnRamp
  9954   0038D0  ECDA  F021         	call	_turnLeft	;wreg free
  9955   0038D4                     
  9956                           ;dc_motor.c: 633:         _delay((unsigned long)((50)*(64000000/4000.0)));
  9957   0038D4  0E05               	movlw	5
  9958   0038D6  6E32               	movwf	(??_calibration+1)^0,c
  9959   0038D8  0E0F               	movlw	15
  9960   0038DA  6E31               	movwf	??_calibration^0,c
  9961   0038DC  0EF1               	movlw	241
  9962   0038DE                     u6367:
  9963   0038DE  2EE8               	decfsz	wreg,f,c
  9964   0038E0  D7FE               	bra	u6367
  9965   0038E2  2E31               	decfsz	??_calibration^0,f,c
  9966   0038E4  D7FC               	bra	u6367
  9967   0038E6  2E32               	decfsz	(??_calibration+1)^0,f,c
  9968   0038E8  D7FA               	bra	u6367
  9969   0038EA  0000               	nop	
  9970   0038EC                     
  9971                           ;dc_motor.c: 634:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  9972   0038EC  C029  F01B         	movff	calibration@mL,turnLeft@mL
  9973   0038F0  C02A  F01C         	movff	calibration@mL+1,turnLeft@mL+1
  9974   0038F4  C02B  F01D         	movff	calibration@mR,turnLeft@mR
  9975   0038F8  C02C  F01E         	movff	calibration@mR+1,turnLeft@mR+1
  9976   0038FC  C02D  F01F         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  9977   003900  C02E  FFD9         	movff	calibration@turnDuration,fsr2l
  9978   003904  C02F  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9979   003908  50DF               	movf	indf2,w,c
  9980   00390A  6E20               	movwf	turnLeft@turnDuration^0,c
  9981   00390C  C030  F021         	movff	calibration@turnRamp,turnLeft@turnRamp
  9982   003910  ECDA  F021         	call	_turnLeft	;wreg free
  9983                           
  9984                           ;dc_motor.c: 635:         _delay((unsigned long)((50)*(64000000/4000.0)));
  9985   003914  0E05               	movlw	5
  9986   003916  6E32               	movwf	(??_calibration+1)^0,c
  9987   003918  0E0F               	movlw	15
  9988   00391A  6E31               	movwf	??_calibration^0,c
  9989   00391C  0EF1               	movlw	241
  9990   00391E                     u6377:
  9991   00391E  2EE8               	decfsz	wreg,f,c
  9992   003920  D7FE               	bra	u6377
  9993   003922  2E31               	decfsz	??_calibration^0,f,c
  9994   003924  D7FC               	bra	u6377
  9995   003926  2E32               	decfsz	(??_calibration+1)^0,f,c
  9996   003928  D7FA               	bra	u6377
  9997   00392A  0000               	nop	
  9998   00392C                     
  9999                           ;dc_motor.c: 636:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10000   00392C  C029  F01B         	movff	calibration@mL,turnRight@mL
 10001   003930  C02A  F01C         	movff	calibration@mL+1,turnRight@mL+1
 10002   003934  C02B  F01D         	movff	calibration@mR,turnRight@mR
 10003   003938  C02C  F01E         	movff	calibration@mR+1,turnRight@mR+1
 10004   00393C  C02D  F01F         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10005   003940  C02E  FFD9         	movff	calibration@turnDuration,fsr2l
 10006   003944  C02F  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10007   003948  50DF               	movf	indf2,w,c
 10008   00394A  6E20               	movwf	turnRight@turnDuration^0,c
 10009   00394C  C030  F021         	movff	calibration@turnRamp,turnRight@turnRamp
 10010   003950  ECF0  F020         	call	_turnRight	;wreg free
 10011   003954                     
 10012                           ;dc_motor.c: 637:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10013   003954  0E05               	movlw	5
 10014   003956  6E32               	movwf	(??_calibration+1)^0,c
 10015   003958  0E0F               	movlw	15
 10016   00395A  6E31               	movwf	??_calibration^0,c
 10017   00395C  0EF1               	movlw	241
 10018   00395E                     u6387:
 10019   00395E  2EE8               	decfsz	wreg,f,c
 10020   003960  D7FE               	bra	u6387
 10021   003962  2E31               	decfsz	??_calibration^0,f,c
 10022   003964  D7FC               	bra	u6387
 10023   003966  2E32               	decfsz	(??_calibration+1)^0,f,c
 10024   003968  D7FA               	bra	u6387
 10025   00396A  0000               	nop	
 10026                           
 10027                           ;dc_motor.c: 638:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10028   00396C  C029  F01B         	movff	calibration@mL,turnRight@mL
 10029   003970  C02A  F01C         	movff	calibration@mL+1,turnRight@mL+1
 10030   003974  C02B  F01D         	movff	calibration@mR,turnRight@mR
 10031   003978  C02C  F01E         	movff	calibration@mR+1,turnRight@mR+1
 10032   00397C  C02D  F01F         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10033   003980  C02E  FFD9         	movff	calibration@turnDuration,fsr2l
 10034   003984  C02F  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10035   003988  50DF               	movf	indf2,w,c
 10036   00398A  6E20               	movwf	turnRight@turnDuration^0,c
 10037   00398C  C030  F021         	movff	calibration@turnRamp,turnRight@turnRamp
 10038   003990  ECF0  F020         	call	_turnRight	;wreg free
 10039   003994  EF04  F01C         	goto	l734
 10040   003998                     l743:
 10041                           
 10042                           ;dc_motor.c: 643:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
 10043   003998  8680               	bsf	128,3,c	;volatile
 10044   00399A  8E7C               	bsf	124,7,c	;volatile
 10045   00399C                     
 10046                           ;dc_motor.c: 644:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10047   00399C  0E09               	movlw	9
 10048   00399E  6E32               	movwf	(??_calibration+1)^0,c
 10049   0039A0  0E1E               	movlw	30
 10050   0039A2  6E31               	movwf	??_calibration^0,c
 10051   0039A4  0EE4               	movlw	228
 10052   0039A6                     u6397:
 10053   0039A6  2EE8               	decfsz	wreg,f,c
 10054   0039A8  D7FE               	bra	u6397
 10055   0039AA  2E31               	decfsz	??_calibration^0,f,c
 10056   0039AC  D7FC               	bra	u6397
 10057   0039AE  2E32               	decfsz	(??_calibration+1)^0,f,c
 10058   0039B0  D7FA               	bra	u6397
 10059   0039B2  D000               	nop2	
 10060   0039B4                     
 10061                           ;dc_motor.c: 645:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10062   0039B4  9680               	bcf	128,3,c	;volatile
 10063   0039B6  9E7C               	bcf	124,7,c	;volatile
 10064   0039B8  0012               	return		;funcret
 10065   0039BA                     __end_of_calibration:
 10066                           	callstack 0
 10067                           
 10068 ;; *************** function _turnRight *****************
 10069 ;; Defined at:
 10070 ;;		line 419 in file "dc_motor.c"
 10071 ;; Parameters:    Size  Location     Type
 10072 ;;  mL              2   26[COMRAM] PTR struct DC_motor
 10073 ;;		 -> main@motorL(10), 
 10074 ;;  mR              2   28[COMRAM] PTR struct DC_motor
 10075 ;;		 -> main@motorR(10), 
 10076 ;;  turnSpeed       1   30[COMRAM] unsigned char 
 10077 ;;  turnDuration    1   31[COMRAM] unsigned char 
 10078 ;;  turnRamp        1   32[COMRAM] unsigned char 
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;  cur_power       2   38[COMRAM] int 
 10081 ;;  i               2   36[COMRAM] int 
 10082 ;; Return value:  Size  Location     Type
 10083 ;;                  1    wreg      void 
 10084 ;; Registers used:
 10085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10086 ;; Tracked objects:
 10087 ;;		On entry : 0/0
 10088 ;;		On exit  : 0/0
 10089 ;;		Unchanged: 0/0
 10090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10091 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10092 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10093 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10094 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10095 ;;Total ram usage:       14 bytes
 10096 ;; Hardware stack levels used: 1
 10097 ;; Hardware stack levels required when called: 7
 10098 ;; This function calls:
 10099 ;;		_setMotorPWM
 10100 ;; This function is called by:
 10101 ;;		_move
 10102 ;;		_returnHome
 10103 ;;		_lostReturnHome
 10104 ;;		_calibration
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           	psect	text34
 10109   0041E0                     __ptext34:
 10110                           	callstack 0
 10111   0041E0                     _turnRight:
 10112                           	callstack 22
 10113   0041E0                     
 10114                           ;dc_motor.c: 419: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 420: {;dc_motor.c: 421:     mL->dir
      +                          ection = 1;
 10115   0041E0  EE20 F001          	lfsr	2,1
 10116   0041E4  501B               	movf	turnRight@mL^0,w,c
 10117   0041E6  26D9               	addwf	fsr2l,f,c
 10118   0041E8  501C               	movf	(turnRight@mL+1)^0,w,c
 10119   0041EA  22DA               	addwfc	fsr2h,f,c
 10120   0041EC  0E01               	movlw	1
 10121   0041EE  6EDF               	movwf	indf2,c
 10122                           
 10123                           ;dc_motor.c: 422:     mR->direction = 0;
 10124   0041F0  EE20 F001          	lfsr	2,1
 10125   0041F4  501D               	movf	turnRight@mR^0,w,c
 10126   0041F6  26D9               	addwf	fsr2l,f,c
 10127   0041F8  501E               	movf	(turnRight@mR+1)^0,w,c
 10128   0041FA  22DA               	addwfc	fsr2h,f,c
 10129   0041FC  6ADF               	clrf	indf2,c
 10130   0041FE                     
 10131                           ;dc_motor.c: 423:     int i;;dc_motor.c: 424:     int cur_power;;dc_motor.c: 425:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 10132   0041FE  0E00               	movlw	0
 10133   004200  6E28               	movwf	(turnRight@cur_power+1)^0,c
 10134   004202  0E01               	movlw	1
 10135   004204  6E27               	movwf	turnRight@cur_power^0,c
 10136   004206  EF4E  F021         	goto	l4664
 10137   00420A                     l4650:
 10138                           
 10139                           ;dc_motor.c: 426:         mL->power = cur_power+mL->compensation;
 10140   00420A  EE20 F009          	lfsr	2,9
 10141   00420E  501B               	movf	turnRight@mL^0,w,c
 10142   004210  26D9               	addwf	fsr2l,f,c
 10143   004212  501C               	movf	(turnRight@mL+1)^0,w,c
 10144   004214  22DA               	addwfc	fsr2h,f,c
 10145   004216  50DF               	movf	indf2,w,c
 10146   004218  2427               	addwf	turnRight@cur_power^0,w,c
 10147   00421A  C01B  FFD9         	movff	turnRight@mL,fsr2l
 10148   00421E  C01C  FFDA         	movff	turnRight@mL+1,fsr2h
 10149   004222  6EDF               	movwf	indf2,c
 10150                           
 10151                           ;dc_motor.c: 427:         mR->power = cur_power+mR->compensation;
 10152   004224  EE20 F009          	lfsr	2,9
 10153   004228  501D               	movf	turnRight@mR^0,w,c
 10154   00422A  26D9               	addwf	fsr2l,f,c
 10155   00422C  501E               	movf	(turnRight@mR+1)^0,w,c
 10156   00422E  22DA               	addwfc	fsr2h,f,c
 10157   004230  50DF               	movf	indf2,w,c
 10158   004232  2427               	addwf	turnRight@cur_power^0,w,c
 10159   004234  C01D  FFD9         	movff	turnRight@mR,fsr2l
 10160   004238  C01E  FFDA         	movff	turnRight@mR+1,fsr2h
 10161   00423C  6EDF               	movwf	indf2,c
 10162   00423E                     
 10163                           ;dc_motor.c: 428:         setMotorPWM(mL);
 10164   00423E  C01B  F015         	movff	turnRight@mL,setMotorPWM@m
 10165   004242  C01C  F016         	movff	turnRight@mL+1,setMotorPWM@m+1
 10166   004246  ECC4  F022         	call	_setMotorPWM	;wreg free
 10167   00424A                     
 10168                           ;dc_motor.c: 429:         setMotorPWM(mR);
 10169   00424A  C01D  F015         	movff	turnRight@mR,setMotorPWM@m
 10170   00424E  C01E  F016         	movff	turnRight@mR+1,setMotorPWM@m+1
 10171   004252  ECC4  F022         	call	_setMotorPWM	;wreg free
 10172   004256                     
 10173                           ;dc_motor.c: 430:         for (i=0;i<turnRamp;i++) {
 10174   004256  0E00               	movlw	0
 10175   004258  6E26               	movwf	(turnRight@i+1)^0,c
 10176   00425A  0E00               	movlw	0
 10177   00425C  6E25               	movwf	turnRight@i^0,c
 10178   00425E  EF3A  F021         	goto	l644
 10179   004262                     l4658:
 10180                           
 10181                           ;dc_motor.c: 431:             _delay((unsigned long)((10)*(64000000/4000.0)));
 10182   004262  0ED0               	movlw	208
 10183   004264  6E22               	movwf	??_turnRight^0,c
 10184   004266  0ECA               	movlw	202
 10185   004268                     u6407:
 10186   004268  2EE8               	decfsz	wreg,f,c
 10187   00426A  D7FE               	bra	u6407
 10188   00426C  2E22               	decfsz	??_turnRight^0,f,c
 10189   00426E  D7FC               	bra	u6407
 10190   004270                     
 10191                           ;dc_motor.c: 432:         }
 10192   004270  4A25               	infsnz	turnRight@i^0,f,c
 10193   004272  2A26               	incf	(turnRight@i+1)^0,f,c
 10194   004274                     l644:
 10195   004274  5021               	movf	turnRight@turnRamp^0,w,c
 10196   004276  6E22               	movwf	??_turnRight^0,c
 10197   004278  6A23               	clrf	(??_turnRight+1)^0,c
 10198   00427A  5022               	movf	??_turnRight^0,w,c
 10199   00427C  5C25               	subwf	turnRight@i^0,w,c
 10200   00427E  5026               	movf	(turnRight@i+1)^0,w,c
 10201   004280  0A80               	xorlw	128
 10202   004282  6E24               	movwf	(??_turnRight+2)^0,c
 10203   004284  5023               	movf	(??_turnRight+1)^0,w,c
 10204   004286  0A80               	xorlw	128
 10205   004288  5824               	subwfb	(??_turnRight+2)^0,w,c
 10206   00428A  A0D8               	btfss	status,0,c
 10207   00428C  EF4A  F021         	goto	u3811
 10208   004290  EF4C  F021         	goto	u3810
 10209   004294                     u3811:
 10210   004294  EF31  F021         	goto	l4658
 10211   004298                     u3810:
 10212   004298                     
 10213                           ;dc_motor.c: 433:     }
 10214   004298  4A27               	infsnz	turnRight@cur_power^0,f,c
 10215   00429A  2A28               	incf	(turnRight@cur_power+1)^0,f,c
 10216   00429C                     l4664:
 10217   00429C  501F               	movf	turnRight@turnSpeed^0,w,c
 10218   00429E  6E22               	movwf	??_turnRight^0,c
 10219   0042A0  6A23               	clrf	(??_turnRight+1)^0,c
 10220   0042A2  5027               	movf	turnRight@cur_power^0,w,c
 10221   0042A4  5C22               	subwf	??_turnRight^0,w,c
 10222   0042A6  5023               	movf	(??_turnRight+1)^0,w,c
 10223   0042A8  0A80               	xorlw	128
 10224   0042AA  6E24               	movwf	(??_turnRight+2)^0,c
 10225   0042AC  5028               	movf	(turnRight@cur_power+1)^0,w,c
 10226   0042AE  0A80               	xorlw	128
 10227   0042B0  5824               	subwfb	(??_turnRight+2)^0,w,c
 10228   0042B2  B0D8               	btfsc	status,0,c
 10229   0042B4  EF5E  F021         	goto	u3821
 10230   0042B8  EF60  F021         	goto	u3820
 10231   0042BC                     u3821:
 10232   0042BC  EF05  F021         	goto	l4650
 10233   0042C0                     u3820:
 10234   0042C0                     
 10235                           ;dc_motor.c: 435:     for (i=0;i<turnDuration;i++) {
 10236   0042C0  0E00               	movlw	0
 10237   0042C2  6E26               	movwf	(turnRight@i+1)^0,c
 10238   0042C4  0E00               	movlw	0
 10239   0042C6  6E25               	movwf	turnRight@i^0,c
 10240   0042C8  EF6F  F021         	goto	l648
 10241   0042CC                     l4668:
 10242                           
 10243                           ;dc_motor.c: 436:             _delay((unsigned long)((10)*(64000000/4000.0)));
 10244   0042CC  0ED0               	movlw	208
 10245   0042CE  6E22               	movwf	??_turnRight^0,c
 10246   0042D0  0ECA               	movlw	202
 10247   0042D2                     u6417:
 10248   0042D2  2EE8               	decfsz	wreg,f,c
 10249   0042D4  D7FE               	bra	u6417
 10250   0042D6  2E22               	decfsz	??_turnRight^0,f,c
 10251   0042D8  D7FC               	bra	u6417
 10252   0042DA                     
 10253                           ;dc_motor.c: 437:         }
 10254   0042DA  4A25               	infsnz	turnRight@i^0,f,c
 10255   0042DC  2A26               	incf	(turnRight@i+1)^0,f,c
 10256   0042DE                     l648:
 10257   0042DE  5020               	movf	turnRight@turnDuration^0,w,c
 10258   0042E0  6E22               	movwf	??_turnRight^0,c
 10259   0042E2  6A23               	clrf	(??_turnRight+1)^0,c
 10260   0042E4  5022               	movf	??_turnRight^0,w,c
 10261   0042E6  5C25               	subwf	turnRight@i^0,w,c
 10262   0042E8  5026               	movf	(turnRight@i+1)^0,w,c
 10263   0042EA  0A80               	xorlw	128
 10264   0042EC  6E24               	movwf	(??_turnRight+2)^0,c
 10265   0042EE  5023               	movf	(??_turnRight+1)^0,w,c
 10266   0042F0  0A80               	xorlw	128
 10267   0042F2  5824               	subwfb	(??_turnRight+2)^0,w,c
 10268   0042F4  A0D8               	btfss	status,0,c
 10269   0042F6  EF7F  F021         	goto	u3831
 10270   0042FA  EF81  F021         	goto	u3830
 10271   0042FE                     u3831:
 10272   0042FE  EF66  F021         	goto	l4668
 10273   004302                     u3830:
 10274   004302                     
 10275                           ;dc_motor.c: 439:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 10276   004302  C01F  F027         	movff	turnRight@turnSpeed,turnRight@cur_power
 10277   004306  6A28               	clrf	(turnRight@cur_power+1)^0,c
 10278   004308                     l4672:
 10279   004308  BE28               	btfsc	(turnRight@cur_power+1)^0,7,c
 10280   00430A  EF8B  F021         	goto	u3840
 10281   00430E  EF89  F021         	goto	u3841
 10282   004312                     u3841:
 10283   004312  EF8D  F021         	goto	l4676
 10284   004316                     u3840:
 10285   004316  EFD9  F021         	goto	l656
 10286   00431A                     l4676:
 10287                           
 10288                           ;dc_motor.c: 440:         mL->power = cur_power+mL->compensation;
 10289   00431A  EE20 F009          	lfsr	2,9
 10290   00431E  501B               	movf	turnRight@mL^0,w,c
 10291   004320  26D9               	addwf	fsr2l,f,c
 10292   004322  501C               	movf	(turnRight@mL+1)^0,w,c
 10293   004324  22DA               	addwfc	fsr2h,f,c
 10294   004326  50DF               	movf	indf2,w,c
 10295   004328  2427               	addwf	turnRight@cur_power^0,w,c
 10296   00432A  C01B  FFD9         	movff	turnRight@mL,fsr2l
 10297   00432E  C01C  FFDA         	movff	turnRight@mL+1,fsr2h
 10298   004332  6EDF               	movwf	indf2,c
 10299                           
 10300                           ;dc_motor.c: 441:         mR->power = cur_power+mR->compensation;
 10301   004334  EE20 F009          	lfsr	2,9
 10302   004338  501D               	movf	turnRight@mR^0,w,c
 10303   00433A  26D9               	addwf	fsr2l,f,c
 10304   00433C  501E               	movf	(turnRight@mR+1)^0,w,c
 10305   00433E  22DA               	addwfc	fsr2h,f,c
 10306   004340  50DF               	movf	indf2,w,c
 10307   004342  2427               	addwf	turnRight@cur_power^0,w,c
 10308   004344  C01D  FFD9         	movff	turnRight@mR,fsr2l
 10309   004348  C01E  FFDA         	movff	turnRight@mR+1,fsr2h
 10310   00434C  6EDF               	movwf	indf2,c
 10311   00434E                     
 10312                           ;dc_motor.c: 442:         setMotorPWM(mL);
 10313   00434E  C01B  F015         	movff	turnRight@mL,setMotorPWM@m
 10314   004352  C01C  F016         	movff	turnRight@mL+1,setMotorPWM@m+1
 10315   004356  ECC4  F022         	call	_setMotorPWM	;wreg free
 10316   00435A                     
 10317                           ;dc_motor.c: 443:         setMotorPWM(mR);
 10318   00435A  C01D  F015         	movff	turnRight@mR,setMotorPWM@m
 10319   00435E  C01E  F016         	movff	turnRight@mR+1,setMotorPWM@m+1
 10320   004362  ECC4  F022         	call	_setMotorPWM	;wreg free
 10321   004366                     
 10322                           ;dc_motor.c: 444:         for (i=0;i<turnRamp;i++) {
 10323   004366  0E00               	movlw	0
 10324   004368  6E26               	movwf	(turnRight@i+1)^0,c
 10325   00436A  0E00               	movlw	0
 10326   00436C  6E25               	movwf	turnRight@i^0,c
 10327   00436E  EFC2  F021         	goto	l653
 10328   004372                     l4684:
 10329                           
 10330                           ;dc_motor.c: 445:             _delay((unsigned long)((10)*(64000000/4000.0)));
 10331   004372  0ED0               	movlw	208
 10332   004374  6E22               	movwf	??_turnRight^0,c
 10333   004376  0ECA               	movlw	202
 10334   004378                     u6427:
 10335   004378  2EE8               	decfsz	wreg,f,c
 10336   00437A  D7FE               	bra	u6427
 10337   00437C  2E22               	decfsz	??_turnRight^0,f,c
 10338   00437E  D7FC               	bra	u6427
 10339   004380                     
 10340                           ;dc_motor.c: 446:         }
 10341   004380  4A25               	infsnz	turnRight@i^0,f,c
 10342   004382  2A26               	incf	(turnRight@i+1)^0,f,c
 10343   004384                     l653:
 10344   004384  5021               	movf	turnRight@turnRamp^0,w,c
 10345   004386  6E22               	movwf	??_turnRight^0,c
 10346   004388  6A23               	clrf	(??_turnRight+1)^0,c
 10347   00438A  5022               	movf	??_turnRight^0,w,c
 10348   00438C  5C25               	subwf	turnRight@i^0,w,c
 10349   00438E  5026               	movf	(turnRight@i+1)^0,w,c
 10350   004390  0A80               	xorlw	128
 10351   004392  6E24               	movwf	(??_turnRight+2)^0,c
 10352   004394  5023               	movf	(??_turnRight+1)^0,w,c
 10353   004396  0A80               	xorlw	128
 10354   004398  5824               	subwfb	(??_turnRight+2)^0,w,c
 10355   00439A  A0D8               	btfss	status,0,c
 10356   00439C  EFD2  F021         	goto	u3851
 10357   0043A0  EFD4  F021         	goto	u3850
 10358   0043A4                     u3851:
 10359   0043A4  EFB9  F021         	goto	l4684
 10360   0043A8                     u3850:
 10361   0043A8                     
 10362                           ;dc_motor.c: 447:     }
 10363   0043A8  0627               	decf	turnRight@cur_power^0,f,c
 10364   0043AA  A0D8               	btfss	status,0,c
 10365   0043AC  0628               	decf	(turnRight@cur_power+1)^0,f,c
 10366   0043AE  EF84  F021         	goto	l4672
 10367   0043B2                     l656:
 10368   0043B2  0012               	return		;funcret
 10369   0043B4                     __end_of_turnRight:
 10370                           	callstack 0
 10371                           
 10372 ;; *************** function _turnLeft *****************
 10373 ;; Defined at:
 10374 ;;		line 387 in file "dc_motor.c"
 10375 ;; Parameters:    Size  Location     Type
 10376 ;;  mL              2   26[COMRAM] PTR struct DC_motor
 10377 ;;		 -> main@motorL(10), 
 10378 ;;  mR              2   28[COMRAM] PTR struct DC_motor
 10379 ;;		 -> main@motorR(10), 
 10380 ;;  turnSpeed       1   30[COMRAM] unsigned char 
 10381 ;;  turnDuration    1   31[COMRAM] unsigned char 
 10382 ;;  turnRamp        1   32[COMRAM] unsigned char 
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;  cur_power       2   38[COMRAM] int 
 10385 ;;  i               2   36[COMRAM] int 
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  1    wreg      void 
 10388 ;; Registers used:
 10389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10395 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10396 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10397 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10398 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10399 ;;Total ram usage:       14 bytes
 10400 ;; Hardware stack levels used: 1
 10401 ;; Hardware stack levels required when called: 7
 10402 ;; This function calls:
 10403 ;;		_setMotorPWM
 10404 ;; This function is called by:
 10405 ;;		_move
 10406 ;;		_returnHome
 10407 ;;		_lostReturnHome
 10408 ;;		_calibration
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           	psect	text35
 10413   0043B4                     __ptext35:
 10414                           	callstack 0
 10415   0043B4                     _turnLeft:
 10416                           	callstack 22
 10417   0043B4                     
 10418                           ;dc_motor.c: 387: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 388: {;dc_motor.c: 389:     mL->dire
      +                          ction = 0;
 10419   0043B4  EE20 F001          	lfsr	2,1
 10420   0043B8  501B               	movf	turnLeft@mL^0,w,c
 10421   0043BA  26D9               	addwf	fsr2l,f,c
 10422   0043BC  501C               	movf	(turnLeft@mL+1)^0,w,c
 10423   0043BE  22DA               	addwfc	fsr2h,f,c
 10424   0043C0  6ADF               	clrf	indf2,c
 10425                           
 10426                           ;dc_motor.c: 390:     mR->direction = 1;
 10427   0043C2  EE20 F001          	lfsr	2,1
 10428   0043C6  501D               	movf	turnLeft@mR^0,w,c
 10429   0043C8  26D9               	addwf	fsr2l,f,c
 10430   0043CA  501E               	movf	(turnLeft@mR+1)^0,w,c
 10431   0043CC  22DA               	addwfc	fsr2h,f,c
 10432   0043CE  0E01               	movlw	1
 10433   0043D0  6EDF               	movwf	indf2,c
 10434   0043D2                     
 10435                           ;dc_motor.c: 391:     int i;;dc_motor.c: 392:     int cur_power;;dc_motor.c: 393:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 10436   0043D2  0E00               	movlw	0
 10437   0043D4  6E28               	movwf	(turnLeft@cur_power+1)^0,c
 10438   0043D6  0E01               	movlw	1
 10439   0043D8  6E27               	movwf	turnLeft@cur_power^0,c
 10440   0043DA  EF38  F022         	goto	l4710
 10441   0043DE                     l4696:
 10442                           
 10443                           ;dc_motor.c: 394:         mL->power = cur_power+mL->compensation;
 10444   0043DE  EE20 F009          	lfsr	2,9
 10445   0043E2  501B               	movf	turnLeft@mL^0,w,c
 10446   0043E4  26D9               	addwf	fsr2l,f,c
 10447   0043E6  501C               	movf	(turnLeft@mL+1)^0,w,c
 10448   0043E8  22DA               	addwfc	fsr2h,f,c
 10449   0043EA  50DF               	movf	indf2,w,c
 10450   0043EC  2427               	addwf	turnLeft@cur_power^0,w,c
 10451   0043EE  C01B  FFD9         	movff	turnLeft@mL,fsr2l
 10452   0043F2  C01C  FFDA         	movff	turnLeft@mL+1,fsr2h
 10453   0043F6  6EDF               	movwf	indf2,c
 10454                           
 10455                           ;dc_motor.c: 395:         mR->power = cur_power+mR->compensation;
 10456   0043F8  EE20 F009          	lfsr	2,9
 10457   0043FC  501D               	movf	turnLeft@mR^0,w,c
 10458   0043FE  26D9               	addwf	fsr2l,f,c
 10459   004400  501E               	movf	(turnLeft@mR+1)^0,w,c
 10460   004402  22DA               	addwfc	fsr2h,f,c
 10461   004404  50DF               	movf	indf2,w,c
 10462   004406  2427               	addwf	turnLeft@cur_power^0,w,c
 10463   004408  C01D  FFD9         	movff	turnLeft@mR,fsr2l
 10464   00440C  C01E  FFDA         	movff	turnLeft@mR+1,fsr2h
 10465   004410  6EDF               	movwf	indf2,c
 10466   004412                     
 10467                           ;dc_motor.c: 396:         setMotorPWM(mL);
 10468   004412  C01B  F015         	movff	turnLeft@mL,setMotorPWM@m
 10469   004416  C01C  F016         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10470   00441A  ECC4  F022         	call	_setMotorPWM	;wreg free
 10471   00441E                     
 10472                           ;dc_motor.c: 397:         setMotorPWM(mR);
 10473   00441E  C01D  F015         	movff	turnLeft@mR,setMotorPWM@m
 10474   004422  C01E  F016         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10475   004426  ECC4  F022         	call	_setMotorPWM	;wreg free
 10476   00442A                     
 10477                           ;dc_motor.c: 398:         for (i=0;i<turnRamp;i++) {
 10478   00442A  0E00               	movlw	0
 10479   00442C  6E26               	movwf	(turnLeft@i+1)^0,c
 10480   00442E  0E00               	movlw	0
 10481   004430  6E25               	movwf	turnLeft@i^0,c
 10482   004432  EF24  F022         	goto	l627
 10483   004436                     l4704:
 10484                           
 10485                           ;dc_motor.c: 399:             _delay((unsigned long)((10)*(64000000/4000.0)));
 10486   004436  0ED0               	movlw	208
 10487   004438  6E22               	movwf	??_turnLeft^0,c
 10488   00443A  0ECA               	movlw	202
 10489   00443C                     u6437:
 10490   00443C  2EE8               	decfsz	wreg,f,c
 10491   00443E  D7FE               	bra	u6437
 10492   004440  2E22               	decfsz	??_turnLeft^0,f,c
 10493   004442  D7FC               	bra	u6437
 10494   004444                     
 10495                           ;dc_motor.c: 400:         }
 10496   004444  4A25               	infsnz	turnLeft@i^0,f,c
 10497   004446  2A26               	incf	(turnLeft@i+1)^0,f,c
 10498   004448                     l627:
 10499   004448  5021               	movf	turnLeft@turnRamp^0,w,c
 10500   00444A  6E22               	movwf	??_turnLeft^0,c
 10501   00444C  6A23               	clrf	(??_turnLeft+1)^0,c
 10502   00444E  5022               	movf	??_turnLeft^0,w,c
 10503   004450  5C25               	subwf	turnLeft@i^0,w,c
 10504   004452  5026               	movf	(turnLeft@i+1)^0,w,c
 10505   004454  0A80               	xorlw	128
 10506   004456  6E24               	movwf	(??_turnLeft+2)^0,c
 10507   004458  5023               	movf	(??_turnLeft+1)^0,w,c
 10508   00445A  0A80               	xorlw	128
 10509   00445C  5824               	subwfb	(??_turnLeft+2)^0,w,c
 10510   00445E  A0D8               	btfss	status,0,c
 10511   004460  EF34  F022         	goto	u3861
 10512   004464  EF36  F022         	goto	u3860
 10513   004468                     u3861:
 10514   004468  EF1B  F022         	goto	l4704
 10515   00446C                     u3860:
 10516   00446C                     
 10517                           ;dc_motor.c: 401:     }
 10518   00446C  4A27               	infsnz	turnLeft@cur_power^0,f,c
 10519   00446E  2A28               	incf	(turnLeft@cur_power+1)^0,f,c
 10520   004470                     l4710:
 10521   004470  501F               	movf	turnLeft@turnSpeed^0,w,c
 10522   004472  6E22               	movwf	??_turnLeft^0,c
 10523   004474  6A23               	clrf	(??_turnLeft+1)^0,c
 10524   004476  5027               	movf	turnLeft@cur_power^0,w,c
 10525   004478  5C22               	subwf	??_turnLeft^0,w,c
 10526   00447A  5023               	movf	(??_turnLeft+1)^0,w,c
 10527   00447C  0A80               	xorlw	128
 10528   00447E  6E24               	movwf	(??_turnLeft+2)^0,c
 10529   004480  5028               	movf	(turnLeft@cur_power+1)^0,w,c
 10530   004482  0A80               	xorlw	128
 10531   004484  5824               	subwfb	(??_turnLeft+2)^0,w,c
 10532   004486  B0D8               	btfsc	status,0,c
 10533   004488  EF48  F022         	goto	u3871
 10534   00448C  EF4A  F022         	goto	u3870
 10535   004490                     u3871:
 10536   004490  EFEF  F021         	goto	l4696
 10537   004494                     u3870:
 10538   004494                     
 10539                           ;dc_motor.c: 403:     for (i=0;i<turnDuration;i++) {
 10540   004494  0E00               	movlw	0
 10541   004496  6E26               	movwf	(turnLeft@i+1)^0,c
 10542   004498  0E00               	movlw	0
 10543   00449A  6E25               	movwf	turnLeft@i^0,c
 10544   00449C  EF59  F022         	goto	l631
 10545   0044A0                     l4714:
 10546                           
 10547                           ;dc_motor.c: 404:             _delay((unsigned long)((10)*(64000000/4000.0)));
 10548   0044A0  0ED0               	movlw	208
 10549   0044A2  6E22               	movwf	??_turnLeft^0,c
 10550   0044A4  0ECA               	movlw	202
 10551   0044A6                     u6447:
 10552   0044A6  2EE8               	decfsz	wreg,f,c
 10553   0044A8  D7FE               	bra	u6447
 10554   0044AA  2E22               	decfsz	??_turnLeft^0,f,c
 10555   0044AC  D7FC               	bra	u6447
 10556   0044AE                     
 10557                           ;dc_motor.c: 405:         }
 10558   0044AE  4A25               	infsnz	turnLeft@i^0,f,c
 10559   0044B0  2A26               	incf	(turnLeft@i+1)^0,f,c
 10560   0044B2                     l631:
 10561   0044B2  5020               	movf	turnLeft@turnDuration^0,w,c
 10562   0044B4  6E22               	movwf	??_turnLeft^0,c
 10563   0044B6  6A23               	clrf	(??_turnLeft+1)^0,c
 10564   0044B8  5022               	movf	??_turnLeft^0,w,c
 10565   0044BA  5C25               	subwf	turnLeft@i^0,w,c
 10566   0044BC  5026               	movf	(turnLeft@i+1)^0,w,c
 10567   0044BE  0A80               	xorlw	128
 10568   0044C0  6E24               	movwf	(??_turnLeft+2)^0,c
 10569   0044C2  5023               	movf	(??_turnLeft+1)^0,w,c
 10570   0044C4  0A80               	xorlw	128
 10571   0044C6  5824               	subwfb	(??_turnLeft+2)^0,w,c
 10572   0044C8  A0D8               	btfss	status,0,c
 10573   0044CA  EF69  F022         	goto	u3881
 10574   0044CE  EF6B  F022         	goto	u3880
 10575   0044D2                     u3881:
 10576   0044D2  EF50  F022         	goto	l4714
 10577   0044D6                     u3880:
 10578   0044D6                     
 10579                           ;dc_motor.c: 407:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 10580   0044D6  C01F  F027         	movff	turnLeft@turnSpeed,turnLeft@cur_power
 10581   0044DA  6A28               	clrf	(turnLeft@cur_power+1)^0,c
 10582   0044DC                     l4718:
 10583   0044DC  BE28               	btfsc	(turnLeft@cur_power+1)^0,7,c
 10584   0044DE  EF75  F022         	goto	u3890
 10585   0044E2  EF73  F022         	goto	u3891
 10586   0044E6                     u3891:
 10587   0044E6  EF77  F022         	goto	l4722
 10588   0044EA                     u3890:
 10589   0044EA  EFC3  F022         	goto	l639
 10590   0044EE                     l4722:
 10591                           
 10592                           ;dc_motor.c: 408:         mL->power = cur_power+mL->compensation;
 10593   0044EE  EE20 F009          	lfsr	2,9
 10594   0044F2  501B               	movf	turnLeft@mL^0,w,c
 10595   0044F4  26D9               	addwf	fsr2l,f,c
 10596   0044F6  501C               	movf	(turnLeft@mL+1)^0,w,c
 10597   0044F8  22DA               	addwfc	fsr2h,f,c
 10598   0044FA  50DF               	movf	indf2,w,c
 10599   0044FC  2427               	addwf	turnLeft@cur_power^0,w,c
 10600   0044FE  C01B  FFD9         	movff	turnLeft@mL,fsr2l
 10601   004502  C01C  FFDA         	movff	turnLeft@mL+1,fsr2h
 10602   004506  6EDF               	movwf	indf2,c
 10603                           
 10604                           ;dc_motor.c: 409:         mR->power = cur_power+mR->compensation;
 10605   004508  EE20 F009          	lfsr	2,9
 10606   00450C  501D               	movf	turnLeft@mR^0,w,c
 10607   00450E  26D9               	addwf	fsr2l,f,c
 10608   004510  501E               	movf	(turnLeft@mR+1)^0,w,c
 10609   004512  22DA               	addwfc	fsr2h,f,c
 10610   004514  50DF               	movf	indf2,w,c
 10611   004516  2427               	addwf	turnLeft@cur_power^0,w,c
 10612   004518  C01D  FFD9         	movff	turnLeft@mR,fsr2l
 10613   00451C  C01E  FFDA         	movff	turnLeft@mR+1,fsr2h
 10614   004520  6EDF               	movwf	indf2,c
 10615   004522                     
 10616                           ;dc_motor.c: 410:         setMotorPWM(mL);
 10617   004522  C01B  F015         	movff	turnLeft@mL,setMotorPWM@m
 10618   004526  C01C  F016         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10619   00452A  ECC4  F022         	call	_setMotorPWM	;wreg free
 10620   00452E                     
 10621                           ;dc_motor.c: 411:         setMotorPWM(mR);
 10622   00452E  C01D  F015         	movff	turnLeft@mR,setMotorPWM@m
 10623   004532  C01E  F016         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10624   004536  ECC4  F022         	call	_setMotorPWM	;wreg free
 10625   00453A                     
 10626                           ;dc_motor.c: 412:         for (i=0;i<turnRamp;i++) {
 10627   00453A  0E00               	movlw	0
 10628   00453C  6E26               	movwf	(turnLeft@i+1)^0,c
 10629   00453E  0E00               	movlw	0
 10630   004540  6E25               	movwf	turnLeft@i^0,c
 10631   004542  EFAC  F022         	goto	l636
 10632   004546                     l4730:
 10633                           
 10634                           ;dc_motor.c: 413:             _delay((unsigned long)((10)*(64000000/4000.0)));
 10635   004546  0ED0               	movlw	208
 10636   004548  6E22               	movwf	??_turnLeft^0,c
 10637   00454A  0ECA               	movlw	202
 10638   00454C                     u6457:
 10639   00454C  2EE8               	decfsz	wreg,f,c
 10640   00454E  D7FE               	bra	u6457
 10641   004550  2E22               	decfsz	??_turnLeft^0,f,c
 10642   004552  D7FC               	bra	u6457
 10643   004554                     
 10644                           ;dc_motor.c: 414:         }
 10645   004554  4A25               	infsnz	turnLeft@i^0,f,c
 10646   004556  2A26               	incf	(turnLeft@i+1)^0,f,c
 10647   004558                     l636:
 10648   004558  5021               	movf	turnLeft@turnRamp^0,w,c
 10649   00455A  6E22               	movwf	??_turnLeft^0,c
 10650   00455C  6A23               	clrf	(??_turnLeft+1)^0,c
 10651   00455E  5022               	movf	??_turnLeft^0,w,c
 10652   004560  5C25               	subwf	turnLeft@i^0,w,c
 10653   004562  5026               	movf	(turnLeft@i+1)^0,w,c
 10654   004564  0A80               	xorlw	128
 10655   004566  6E24               	movwf	(??_turnLeft+2)^0,c
 10656   004568  5023               	movf	(??_turnLeft+1)^0,w,c
 10657   00456A  0A80               	xorlw	128
 10658   00456C  5824               	subwfb	(??_turnLeft+2)^0,w,c
 10659   00456E  A0D8               	btfss	status,0,c
 10660   004570  EFBC  F022         	goto	u3901
 10661   004574  EFBE  F022         	goto	u3900
 10662   004578                     u3901:
 10663   004578  EFA3  F022         	goto	l4730
 10664   00457C                     u3900:
 10665   00457C                     
 10666                           ;dc_motor.c: 415:     }
 10667   00457C  0627               	decf	turnLeft@cur_power^0,f,c
 10668   00457E  A0D8               	btfss	status,0,c
 10669   004580  0628               	decf	(turnLeft@cur_power+1)^0,f,c
 10670   004582  EF6E  F022         	goto	l4718
 10671   004586                     l639:
 10672   004586  0012               	return		;funcret
 10673   004588                     __end_of_turnLeft:
 10674                           	callstack 0
 10675                           
 10676 ;; *************** function _setMotorPWM *****************
 10677 ;; Defined at:
 10678 ;;		line 68 in file "dc_motor.c"
 10679 ;; Parameters:    Size  Location     Type
 10680 ;;  m               2   20[COMRAM] PTR struct DC_motor
 10681 ;;		 -> main@motorR(10), main@motorL(10), 
 10682 ;; Auto vars:     Size  Location     Type
 10683 ;;  negDuty         1   25[COMRAM] unsigned char 
 10684 ;;  posDuty         1   24[COMRAM] unsigned char 
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  1    wreg      void 
 10687 ;; Registers used:
 10688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10697 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10698 ;;Total ram usage:        6 bytes
 10699 ;; Hardware stack levels used: 1
 10700 ;; Hardware stack levels required when called: 6
 10701 ;; This function calls:
 10702 ;;		___lwdiv
 10703 ;;		___wmul
 10704 ;; This function is called by:
 10705 ;;		_stop
 10706 ;;		_turnLeft
 10707 ;;		_turnRight
 10708 ;;		_fullSpeedAhead
 10709 ;;		_reverseOneSquare
 10710 ;;		_wallAdjust
 10711 ;;		_reverseShort
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           	psect	text36
 10716   004588                     __ptext36:
 10717                           	callstack 0
 10718   004588                     _setMotorPWM:
 10719                           	callstack 23
 10720   004588                     
 10721                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 10722   004588  EE20 F002          	lfsr	2,2
 10723   00458C  5015               	movf	setMotorPWM@m^0,w,c
 10724   00458E  26D9               	addwf	fsr2l,f,c
 10725   004590  5016               	movf	(setMotorPWM@m+1)^0,w,c
 10726   004592  22DA               	addwfc	fsr2h,f,c
 10727   004594  50DF               	movf	indf2,w,c
 10728   004596  B4D8               	btfsc	status,2,c
 10729   004598  EFD0  F022         	goto	u3711
 10730   00459C  EFD2  F022         	goto	u3710
 10731   0045A0                     u3711:
 10732   0045A0  EF06  F023         	goto	l4550
 10733   0045A4                     u3710:
 10734   0045A4                     
 10735                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 10736   0045A4  C015  FFD9         	movff	setMotorPWM@m,fsr2l
 10737   0045A8  C016  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10738   0045AC  50DF               	movf	indf2,w,c
 10739   0045AE  6E17               	movwf	??_setMotorPWM^0,c
 10740   0045B0  5017               	movf	??_setMotorPWM^0,w,c
 10741   0045B2  6E08               	movwf	___wmul@multiplier^0,c
 10742   0045B4  6A09               	clrf	(___wmul@multiplier+1)^0,c
 10743   0045B6  EE20 F003          	lfsr	2,3
 10744   0045BA  5015               	movf	setMotorPWM@m^0,w,c
 10745   0045BC  26D9               	addwf	fsr2l,f,c
 10746   0045BE  5016               	movf	(setMotorPWM@m+1)^0,w,c
 10747   0045C0  22DA               	addwfc	fsr2h,f,c
 10748   0045C2  CFDE F00A          	movff	postinc2,___wmul@multiplicand
 10749   0045C6  CFDD F00B          	movff	postdec2,___wmul@multiplicand+1
 10750   0045CA  ECE6  F027         	call	___wmul	;wreg free
 10751   0045CE  C008  F00E         	movff	?___wmul,___lwdiv@dividend
 10752   0045D2  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
 10753   0045D6  0E00               	movlw	0
 10754   0045D8  6E11               	movwf	(___lwdiv@divisor+1)^0,c
 10755   0045DA  0E64               	movlw	100
 10756   0045DC  6E10               	movwf	___lwdiv@divisor^0,c
 10757   0045DE  ECF2  F025         	call	___lwdiv	;wreg free
 10758   0045E2  EE20 F003          	lfsr	2,3
 10759   0045E6  5015               	movf	setMotorPWM@m^0,w,c
 10760   0045E8  26D9               	addwf	fsr2l,f,c
 10761   0045EA  5016               	movf	(setMotorPWM@m+1)^0,w,c
 10762   0045EC  22DA               	addwfc	fsr2h,f,c
 10763   0045EE  50DF               	movf	indf2,w,c
 10764   0045F0  6E18               	movwf	(??_setMotorPWM+1)^0,c
 10765   0045F2  500E               	movf	?___lwdiv^0,w,c
 10766   0045F4  5C18               	subwf	(??_setMotorPWM+1)^0,w,c
 10767   0045F6  6E19               	movwf	setMotorPWM@posDuty^0,c
 10768   0045F8                     
 10769                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 10770   0045F8  EE20 F003          	lfsr	2,3
 10771   0045FC  5015               	movf	setMotorPWM@m^0,w,c
 10772   0045FE  26D9               	addwf	fsr2l,f,c
 10773   004600  5016               	movf	(setMotorPWM@m+1)^0,w,c
 10774   004602  22DA               	addwfc	fsr2h,f,c
 10775   004604  50DF               	movf	indf2,w,c
 10776   004606  6E1A               	movwf	setMotorPWM@negDuty^0,c
 10777                           
 10778                           ;dc_motor.c: 75:     }
 10779   004608  EF29  F023         	goto	l4554
 10780   00460C                     l4550:
 10781                           
 10782                           ;dc_motor.c: 77:         posDuty=0;
 10783   00460C  0E00               	movlw	0
 10784   00460E  6E19               	movwf	setMotorPWM@posDuty^0,c
 10785   004610                     
 10786                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 10787   004610  C015  FFD9         	movff	setMotorPWM@m,fsr2l
 10788   004614  C016  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10789   004618  50DF               	movf	indf2,w,c
 10790   00461A  6E17               	movwf	??_setMotorPWM^0,c
 10791   00461C  5017               	movf	??_setMotorPWM^0,w,c
 10792   00461E  6E08               	movwf	___wmul@multiplier^0,c
 10793   004620  6A09               	clrf	(___wmul@multiplier+1)^0,c
 10794   004622  EE20 F003          	lfsr	2,3
 10795   004626  5015               	movf	setMotorPWM@m^0,w,c
 10796   004628  26D9               	addwf	fsr2l,f,c
 10797   00462A  5016               	movf	(setMotorPWM@m+1)^0,w,c
 10798   00462C  22DA               	addwfc	fsr2h,f,c
 10799   00462E  CFDE F00A          	movff	postinc2,___wmul@multiplicand
 10800   004632  CFDD F00B          	movff	postdec2,___wmul@multiplicand+1
 10801   004636  ECE6  F027         	call	___wmul	;wreg free
 10802   00463A  C008  F00E         	movff	?___wmul,___lwdiv@dividend
 10803   00463E  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
 10804   004642  0E00               	movlw	0
 10805   004644  6E11               	movwf	(___lwdiv@divisor+1)^0,c
 10806   004646  0E64               	movlw	100
 10807   004648  6E10               	movwf	___lwdiv@divisor^0,c
 10808   00464A  ECF2  F025         	call	___lwdiv	;wreg free
 10809   00464E  500E               	movf	?___lwdiv^0,w,c
 10810   004650  6E1A               	movwf	setMotorPWM@negDuty^0,c
 10811   004652                     l4554:
 10812                           
 10813                           ;dc_motor.c: 81:     if (m->direction) {
 10814   004652  EE20 F001          	lfsr	2,1
 10815   004656  5015               	movf	setMotorPWM@m^0,w,c
 10816   004658  26D9               	addwf	fsr2l,f,c
 10817   00465A  5016               	movf	(setMotorPWM@m+1)^0,w,c
 10818   00465C  22DA               	addwfc	fsr2h,f,c
 10819   00465E  50DF               	movf	indf2,w,c
 10820   004660  B4D8               	btfsc	status,2,c
 10821   004662  EF35  F023         	goto	u3721
 10822   004666  EF37  F023         	goto	u3720
 10823   00466A                     u3721:
 10824   00466A  EF59  F023         	goto	l4558
 10825   00466E                     u3720:
 10826   00466E                     
 10827                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 10828   00466E  EE20 F005          	lfsr	2,5
 10829   004672  5015               	movf	setMotorPWM@m^0,w,c
 10830   004674  26D9               	addwf	fsr2l,f,c
 10831   004676  5016               	movf	(setMotorPWM@m+1)^0,w,c
 10832   004678  22DA               	addwfc	fsr2h,f,c
 10833   00467A  CFDE F017          	movff	postinc2,??_setMotorPWM
 10834   00467E  CFDD F018          	movff	postdec2,??_setMotorPWM+1
 10835   004682  C017  FFD9         	movff	??_setMotorPWM,fsr2l
 10836   004686  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10837   00468A  C019  FFDF         	movff	setMotorPWM@posDuty,indf2
 10838                           
 10839                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 10840   00468E  EE20 F007          	lfsr	2,7
 10841   004692  5015               	movf	setMotorPWM@m^0,w,c
 10842   004694  26D9               	addwf	fsr2l,f,c
 10843   004696  5016               	movf	(setMotorPWM@m+1)^0,w,c
 10844   004698  22DA               	addwfc	fsr2h,f,c
 10845   00469A  CFDE F017          	movff	postinc2,??_setMotorPWM
 10846   00469E  CFDD F018          	movff	postdec2,??_setMotorPWM+1
 10847   0046A2  C017  FFD9         	movff	??_setMotorPWM,fsr2l
 10848   0046A6  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10849   0046AA  C01A  FFDF         	movff	setMotorPWM@negDuty,indf2
 10850                           
 10851                           ;dc_motor.c: 84:     } else {
 10852   0046AE  EF79  F023         	goto	l545
 10853   0046B2                     l4558:
 10854                           
 10855                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
 10856   0046B2  EE20 F005          	lfsr	2,5
 10857   0046B6  5015               	movf	setMotorPWM@m^0,w,c
 10858   0046B8  26D9               	addwf	fsr2l,f,c
 10859   0046BA  5016               	movf	(setMotorPWM@m+1)^0,w,c
 10860   0046BC  22DA               	addwfc	fsr2h,f,c
 10861   0046BE  CFDE F017          	movff	postinc2,??_setMotorPWM
 10862   0046C2  CFDD F018          	movff	postdec2,??_setMotorPWM+1
 10863   0046C6  C017  FFD9         	movff	??_setMotorPWM,fsr2l
 10864   0046CA  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10865   0046CE  C01A  FFDF         	movff	setMotorPWM@negDuty,indf2
 10866                           
 10867                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
 10868   0046D2  EE20 F007          	lfsr	2,7
 10869   0046D6  5015               	movf	setMotorPWM@m^0,w,c
 10870   0046D8  26D9               	addwf	fsr2l,f,c
 10871   0046DA  5016               	movf	(setMotorPWM@m+1)^0,w,c
 10872   0046DC  22DA               	addwfc	fsr2h,f,c
 10873   0046DE  CFDE F017          	movff	postinc2,??_setMotorPWM
 10874   0046E2  CFDD F018          	movff	postdec2,??_setMotorPWM+1
 10875   0046E6  C017  FFD9         	movff	??_setMotorPWM,fsr2l
 10876   0046EA  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10877   0046EE  C019  FFDF         	movff	setMotorPWM@posDuty,indf2
 10878   0046F2                     l545:
 10879   0046F2  0012               	return		;funcret
 10880   0046F4                     __end_of_setMotorPWM:
 10881                           	callstack 0
 10882                           
 10883 ;; *************** function ___wmul *****************
 10884 ;; Defined at:
 10885 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  multiplier      2    7[COMRAM] unsigned int 
 10888 ;;  multiplicand    2    9[COMRAM] unsigned int 
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  product         2   11[COMRAM] unsigned int 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  2    7[COMRAM] unsigned int 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0, prodl, prodh
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10903 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10904 ;;Total ram usage:        6 bytes
 10905 ;; Hardware stack levels used: 1
 10906 ;; Hardware stack levels required when called: 5
 10907 ;; This function calls:
 10908 ;;		Nothing
 10909 ;; This function is called by:
 10910 ;;		_setMotorPWM
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914                           	psect	text37
 10915   004FCC                     __ptext37:
 10916                           	callstack 0
 10917   004FCC                     ___wmul:
 10918                           	callstack 23
 10919   004FCC  5008               	movf	___wmul@multiplier^0,w,c
 10920   004FCE  020A               	mulwf	___wmul@multiplicand^0,c
 10921   004FD0  CFF3 F00C          	movff	prodl,___wmul@product
 10922   004FD4  CFF4 F00D          	movff	prodh,___wmul@product+1
 10923   004FD8  5008               	movf	___wmul@multiplier^0,w,c
 10924   004FDA  020B               	mulwf	(___wmul@multiplicand+1)^0,c
 10925   004FDC  50F3               	movf	243,w,c
 10926   004FDE  260D               	addwf	(___wmul@product+1)^0,f,c
 10927   004FE0  5009               	movf	(___wmul@multiplier+1)^0,w,c
 10928   004FE2  020A               	mulwf	___wmul@multiplicand^0,c
 10929   004FE4  50F3               	movf	243,w,c
 10930   004FE6  260D               	addwf	(___wmul@product+1)^0,f,c
 10931   004FE8  C00C  F008         	movff	___wmul@product,?___wmul
 10932   004FEC  C00D  F009         	movff	___wmul@product+1,?___wmul+1
 10933   004FF0  0012               	return		;funcret
 10934   004FF2                     __end_of___wmul:
 10935                           	callstack 0
 10936                           
 10937 ;; *************** function ___lwdiv *****************
 10938 ;; Defined at:
 10939 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;  dividend        2   13[COMRAM] unsigned int 
 10942 ;;  divisor         2   15[COMRAM] unsigned int 
 10943 ;; Auto vars:     Size  Location     Type
 10944 ;;  quotient        2   18[COMRAM] unsigned int 
 10945 ;;  counter         1   17[COMRAM] unsigned char 
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  2   13[COMRAM] unsigned int 
 10948 ;; Registers used:
 10949 ;;		wreg, status,2, status,0
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10956 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10958 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10959 ;;Total ram usage:        7 bytes
 10960 ;; Hardware stack levels used: 1
 10961 ;; Hardware stack levels required when called: 5
 10962 ;; This function calls:
 10963 ;;		Nothing
 10964 ;; This function is called by:
 10965 ;;		_setMotorPWM
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           	psect	text38
 10970   004BE4                     __ptext38:
 10971                           	callstack 0
 10972   004BE4                     ___lwdiv:
 10973                           	callstack 23
 10974   004BE4  0E00               	movlw	0
 10975   004BE6  6E14               	movwf	(___lwdiv@quotient+1)^0,c
 10976   004BE8  0E00               	movlw	0
 10977   004BEA  6E13               	movwf	___lwdiv@quotient^0,c
 10978   004BEC  5010               	movf	___lwdiv@divisor^0,w,c
 10979   004BEE  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10980   004BF0  B4D8               	btfsc	status,2,c
 10981   004BF2  EFFD  F025         	goto	u3681
 10982   004BF6  EFFF  F025         	goto	u3680
 10983   004BFA                     u3681:
 10984   004BFA  EF27  F026         	goto	l1256
 10985   004BFE                     u3680:
 10986   004BFE  0E01               	movlw	1
 10987   004C00  6E12               	movwf	___lwdiv@counter^0,c
 10988   004C02  EF07  F026         	goto	l4518
 10989   004C06                     l4516:
 10990   004C06  90D8               	bcf	status,0,c
 10991   004C08  3610               	rlcf	___lwdiv@divisor^0,f,c
 10992   004C0A  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10993   004C0C  2A12               	incf	___lwdiv@counter^0,f,c
 10994   004C0E                     l4518:
 10995   004C0E  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
 10996   004C10  EF0C  F026         	goto	u3691
 10997   004C14  EF0E  F026         	goto	u3690
 10998   004C18                     u3691:
 10999   004C18  EF03  F026         	goto	l4516
 11000   004C1C                     u3690:
 11001   004C1C                     l4520:
 11002   004C1C  90D8               	bcf	status,0,c
 11003   004C1E  3613               	rlcf	___lwdiv@quotient^0,f,c
 11004   004C20  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11005   004C22  5010               	movf	___lwdiv@divisor^0,w,c
 11006   004C24  5C0E               	subwf	___lwdiv@dividend^0,w,c
 11007   004C26  5011               	movf	(___lwdiv@divisor+1)^0,w,c
 11008   004C28  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11009   004C2A  A0D8               	btfss	status,0,c
 11010   004C2C  EF1A  F026         	goto	u3701
 11011   004C30  EF1C  F026         	goto	u3700
 11012   004C34                     u3701:
 11013   004C34  EF21  F026         	goto	l4528
 11014   004C38                     u3700:
 11015   004C38  5010               	movf	___lwdiv@divisor^0,w,c
 11016   004C3A  5E0E               	subwf	___lwdiv@dividend^0,f,c
 11017   004C3C  5011               	movf	(___lwdiv@divisor+1)^0,w,c
 11018   004C3E  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11019   004C40  8013               	bsf	___lwdiv@quotient^0,0,c
 11020   004C42                     l4528:
 11021   004C42  90D8               	bcf	status,0,c
 11022   004C44  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11023   004C46  3210               	rrcf	___lwdiv@divisor^0,f,c
 11024   004C48  2E12               	decfsz	___lwdiv@counter^0,f,c
 11025   004C4A  EF0E  F026         	goto	l4520
 11026   004C4E                     l1256:
 11027   004C4E  C013  F00E         	movff	___lwdiv@quotient,?___lwdiv
 11028   004C52  C014  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11029   004C56  0012               	return		;funcret
 11030   004C58                     __end_of___lwdiv:
 11031                           	callstack 0
 11032                           
 11033 ;; *************** function _batteryLevel *****************
 11034 ;; Defined at:
 11035 ;;		line 6 in file "battery.c"
 11036 ;; Parameters:    Size  Location     Type
 11037 ;;		None
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;  batteryQuart    1   16[COMRAM] unsigned char 
 11040 ;;  batteryVolta    1   15[COMRAM] unsigned char 
 11041 ;; Return value:  Size  Location     Type
 11042 ;;                  1    wreg      void 
 11043 ;; Registers used:
 11044 ;;		wreg, status,2, status,0, cstack
 11045 ;; Tracked objects:
 11046 ;;		On entry : 0/0
 11047 ;;		On exit  : 0/0
 11048 ;;		Unchanged: 0/0
 11049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11051 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11054 ;;Total ram usage:        2 bytes
 11055 ;; Hardware stack levels used: 1
 11056 ;; Hardware stack levels required when called: 6
 11057 ;; This function calls:
 11058 ;;		_ADC_getval
 11059 ;;		_ADC_init
 11060 ;;		___awdiv
 11061 ;; This function is called by:
 11062 ;;		_main
 11063 ;; This function uses a non-reentrant model
 11064 ;;
 11065                           
 11066                           	psect	text39
 11067   004DD4                     __ptext39:
 11068                           	callstack 0
 11069   004DD4                     _batteryLevel:
 11070                           	callstack 24
 11071   004DD4                     
 11072                           ;battery.c: 7:     ADC_init();
 11073   004DD4  EC70  F028         	call	_ADC_init	;wreg free
 11074                           
 11075                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
 11076   004DD8  EC7D  F028         	call	_ADC_getval	;wreg free
 11077   004DDC  6E10               	movwf	batteryLevel@batteryVoltage^0,c
 11078   004DDE                     
 11079                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
 11080   004DDE  C010  F008         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
 11081   004DE2  6A09               	clrf	(___awdiv@dividend+1)^0,c
 11082   004DE4  0E00               	movlw	0
 11083   004DE6  6E0B               	movwf	(___awdiv@divisor+1)^0,c
 11084   004DE8  0E18               	movlw	24
 11085   004DEA  6E0A               	movwf	___awdiv@divisor^0,c
 11086   004DEC  ECF6  F024         	call	___awdiv	;wreg free
 11087   004DF0  5008               	movf	?___awdiv^0,w,c
 11088   004DF2  6E11               	movwf	batteryLevel@batteryQuarter^0,c
 11089   004DF4                     
 11090                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
 11091   004DF4  A211               	btfss	batteryLevel@batteryQuarter^0,1,c
 11092   004DF6  EFFF  F026         	goto	u4371
 11093   004DFA  EF01  F027         	goto	u4370
 11094   004DFE                     u4371:
 11095   004DFE  EF04  F027         	goto	l457
 11096   004E02                     u4370:
 11097   004E02  8E7C               	bsf	124,7,c	;volatile
 11098   004E04  EF05  F027         	goto	l458
 11099   004E08                     l457:
 11100   004E08  9E7C               	bcf	124,7,c	;volatile
 11101   004E0A                     l458:
 11102                           
 11103                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
 11104   004E0A  A011               	btfss	batteryLevel@batteryQuarter^0,0,c
 11105   004E0C  EF0A  F027         	goto	u4381
 11106   004E10  EF0C  F027         	goto	u4380
 11107   004E14                     u4381:
 11108   004E14  EF0F  F027         	goto	l459
 11109   004E18                     u4380:
 11110   004E18  8680               	bsf	128,3,c	;volatile
 11111   004E1A  EF10  F027         	goto	l461
 11112   004E1E                     l459:
 11113   004E1E  9680               	bcf	128,3,c	;volatile
 11114   004E20                     l461:
 11115   004E20  0012               	return		;funcret
 11116   004E22                     __end_of_batteryLevel:
 11117                           	callstack 0
 11118                           
 11119 ;; *************** function ___awdiv *****************
 11120 ;; Defined at:
 11121 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 11122 ;; Parameters:    Size  Location     Type
 11123 ;;  dividend        2    7[COMRAM] int 
 11124 ;;  divisor         2    9[COMRAM] int 
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;  quotient        2   13[COMRAM] int 
 11127 ;;  sign            1   12[COMRAM] unsigned char 
 11128 ;;  counter         1   11[COMRAM] unsigned char 
 11129 ;; Return value:  Size  Location     Type
 11130 ;;                  2    7[COMRAM] int 
 11131 ;; Registers used:
 11132 ;;		wreg, status,2, status,0
 11133 ;; Tracked objects:
 11134 ;;		On entry : 0/0
 11135 ;;		On exit  : 0/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11139 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11141 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11142 ;;Total ram usage:        8 bytes
 11143 ;; Hardware stack levels used: 1
 11144 ;; Hardware stack levels required when called: 5
 11145 ;; This function calls:
 11146 ;;		Nothing
 11147 ;; This function is called by:
 11148 ;;		_batteryLevel
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           
 11152                           	psect	text40
 11153   0049EC                     __ptext40:
 11154                           	callstack 0
 11155   0049EC                     ___awdiv:
 11156                           	callstack 24
 11157   0049EC  0E00               	movlw	0
 11158   0049EE  6E0D               	movwf	___awdiv@sign^0,c
 11159   0049F0  BE0B               	btfsc	(___awdiv@divisor+1)^0,7,c
 11160   0049F2  EFFF  F024         	goto	u4310
 11161   0049F6  EFFD  F024         	goto	u4311
 11162   0049FA                     u4311:
 11163   0049FA  EF05  F025         	goto	l5128
 11164   0049FE                     u4310:
 11165   0049FE  6C0A               	negf	___awdiv@divisor^0,c
 11166   004A00  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
 11167   004A02  B0D8               	btfsc	status,0,c
 11168   004A04  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
 11169   004A06  0E01               	movlw	1
 11170   004A08  6E0D               	movwf	___awdiv@sign^0,c
 11171   004A0A                     l5128:
 11172   004A0A  BE09               	btfsc	(___awdiv@dividend+1)^0,7,c
 11173   004A0C  EF0C  F025         	goto	u4320
 11174   004A10  EF0A  F025         	goto	u4321
 11175   004A14                     u4321:
 11176   004A14  EF12  F025         	goto	l5134
 11177   004A18                     u4320:
 11178   004A18  6C08               	negf	___awdiv@dividend^0,c
 11179   004A1A  1E09               	comf	(___awdiv@dividend+1)^0,f,c
 11180   004A1C  B0D8               	btfsc	status,0,c
 11181   004A1E  2A09               	incf	(___awdiv@dividend+1)^0,f,c
 11182   004A20  0E01               	movlw	1
 11183   004A22  1A0D               	xorwf	___awdiv@sign^0,f,c
 11184   004A24                     l5134:
 11185   004A24  0E00               	movlw	0
 11186   004A26  6E0F               	movwf	(___awdiv@quotient+1)^0,c
 11187   004A28  0E00               	movlw	0
 11188   004A2A  6E0E               	movwf	___awdiv@quotient^0,c
 11189   004A2C  500A               	movf	___awdiv@divisor^0,w,c
 11190   004A2E  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
 11191   004A30  B4D8               	btfsc	status,2,c
 11192   004A32  EF1D  F025         	goto	u4331
 11193   004A36  EF1F  F025         	goto	u4330
 11194   004A3A                     u4331:
 11195   004A3A  EF47  F025         	goto	l5156
 11196   004A3E                     u4330:
 11197   004A3E  0E01               	movlw	1
 11198   004A40  6E0C               	movwf	___awdiv@counter^0,c
 11199   004A42  EF27  F025         	goto	l5142
 11200   004A46                     l5140:
 11201   004A46  90D8               	bcf	status,0,c
 11202   004A48  360A               	rlcf	___awdiv@divisor^0,f,c
 11203   004A4A  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
 11204   004A4C  2A0C               	incf	___awdiv@counter^0,f,c
 11205   004A4E                     l5142:
 11206   004A4E  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
 11207   004A50  EF2C  F025         	goto	u4341
 11208   004A54  EF2E  F025         	goto	u4340
 11209   004A58                     u4341:
 11210   004A58  EF23  F025         	goto	l5140
 11211   004A5C                     u4340:
 11212   004A5C                     l5144:
 11213   004A5C  90D8               	bcf	status,0,c
 11214   004A5E  360E               	rlcf	___awdiv@quotient^0,f,c
 11215   004A60  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
 11216   004A62  500A               	movf	___awdiv@divisor^0,w,c
 11217   004A64  5C08               	subwf	___awdiv@dividend^0,w,c
 11218   004A66  500B               	movf	(___awdiv@divisor+1)^0,w,c
 11219   004A68  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
 11220   004A6A  A0D8               	btfss	status,0,c
 11221   004A6C  EF3A  F025         	goto	u4351
 11222   004A70  EF3C  F025         	goto	u4350
 11223   004A74                     u4351:
 11224   004A74  EF41  F025         	goto	l5152
 11225   004A78                     u4350:
 11226   004A78  500A               	movf	___awdiv@divisor^0,w,c
 11227   004A7A  5E08               	subwf	___awdiv@dividend^0,f,c
 11228   004A7C  500B               	movf	(___awdiv@divisor+1)^0,w,c
 11229   004A7E  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
 11230   004A80  800E               	bsf	___awdiv@quotient^0,0,c
 11231   004A82                     l5152:
 11232   004A82  90D8               	bcf	status,0,c
 11233   004A84  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
 11234   004A86  320A               	rrcf	___awdiv@divisor^0,f,c
 11235   004A88  2E0C               	decfsz	___awdiv@counter^0,f,c
 11236   004A8A  EF2E  F025         	goto	l5144
 11237   004A8E                     l5156:
 11238   004A8E  500D               	movf	___awdiv@sign^0,w,c
 11239   004A90  B4D8               	btfsc	status,2,c
 11240   004A92  EF4D  F025         	goto	u4361
 11241   004A96  EF4F  F025         	goto	u4360
 11242   004A9A                     u4361:
 11243   004A9A  EF53  F025         	goto	l5160
 11244   004A9E                     u4360:
 11245   004A9E  6C0E               	negf	___awdiv@quotient^0,c
 11246   004AA0  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
 11247   004AA2  B0D8               	btfsc	status,0,c
 11248   004AA4  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
 11249   004AA6                     l5160:
 11250   004AA6  C00E  F008         	movff	___awdiv@quotient,?___awdiv
 11251   004AAA  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
 11252   004AAE  0012               	return		;funcret
 11253   004AB0                     __end_of___awdiv:
 11254                           	callstack 0
 11255                           
 11256 ;; *************** function _ADC_init *****************
 11257 ;; Defined at:
 11258 ;;		line 9 in file "ADC.c"
 11259 ;; Parameters:    Size  Location     Type
 11260 ;;		None
 11261 ;; Auto vars:     Size  Location     Type
 11262 ;;		None
 11263 ;; Return value:  Size  Location     Type
 11264 ;;                  1    wreg      void 
 11265 ;; Registers used:
 11266 ;;		wreg, status,2
 11267 ;; Tracked objects:
 11268 ;;		On entry : 0/0
 11269 ;;		On exit  : 0/0
 11270 ;;		Unchanged: 0/0
 11271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11276 ;;Total ram usage:        0 bytes
 11277 ;; Hardware stack levels used: 1
 11278 ;; Hardware stack levels required when called: 5
 11279 ;; This function calls:
 11280 ;;		Nothing
 11281 ;; This function is called by:
 11282 ;;		_batteryLevel
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           	psect	text41
 11287   0050E0                     __ptext41:
 11288                           	callstack 0
 11289   0050E0                     _ADC_init:
 11290                           	callstack 24
 11291   0050E0                     
 11292                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 11293   0050E0  8C86               	bsf	134,6,c	;volatile
 11294                           
 11295                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 11296   0050E2  010E               	movlb	14	; () banked
 11297   0050E4  8DB4               	bsf	180,6,b	;volatile
 11298                           
 11299                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 11300   0050E6  010F               	movlb	15	; () banked
 11301   0050E8  9958               	bcf	88,4,b	;volatile
 11302   0050EA                     
 11303                           ; BSR set to: 15
 11304                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 11305   0050EA  0EFC               	movlw	-4
 11306   0050EC  1758               	andwf	88,f,b	;volatile
 11307                           
 11308                           ;ADC.c: 17:     ADPCH=0b101110;
 11309   0050EE  0E2E               	movlw	46
 11310   0050F0  6F5F               	movwf	95,b	;volatile
 11311   0050F2                     
 11312                           ; BSR set to: 15
 11313                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 11314   0050F2  9460               	bcf	96,2,c	;volatile
 11315   0050F4                     
 11316                           ; BSR set to: 15
 11317                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 11318   0050F4  8860               	bsf	96,4,c	;volatile
 11319   0050F6                     
 11320                           ; BSR set to: 15
 11321                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 11322   0050F6  8E60               	bsf	96,7,c	;volatile
 11323   0050F8                     
 11324                           ; BSR set to: 15
 11325   0050F8  0012               	return		;funcret
 11326   0050FA                     __end_of_ADC_init:
 11327                           	callstack 0
 11328                           
 11329 ;; *************** function _ADC_getval *****************
 11330 ;; Defined at:
 11331 ;;		line 23 in file "ADC.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;		None
 11334 ;; Auto vars:     Size  Location     Type
 11335 ;;  tmpval          1    7[COMRAM] unsigned char 
 11336 ;; Return value:  Size  Location     Type
 11337 ;;                  1    wreg      unsigned char 
 11338 ;; Registers used:
 11339 ;;		wreg, status,2
 11340 ;; Tracked objects:
 11341 ;;		On entry : 0/0
 11342 ;;		On exit  : 0/0
 11343 ;;		Unchanged: 0/0
 11344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11349 ;;Total ram usage:        1 bytes
 11350 ;; Hardware stack levels used: 1
 11351 ;; Hardware stack levels required when called: 5
 11352 ;; This function calls:
 11353 ;;		Nothing
 11354 ;; This function is called by:
 11355 ;;		_batteryLevel
 11356 ;; This function uses a non-reentrant model
 11357 ;;
 11358                           
 11359                           	psect	text42
 11360   0050FA                     __ptext42:
 11361                           	callstack 0
 11362   0050FA                     _ADC_getval:
 11363                           	callstack 24
 11364   0050FA                     
 11365                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
 11366   0050FA  8060               	bsf	96,0,c	;volatile
 11367   0050FC                     l443:
 11368   0050FC  B060               	btfsc	96,0,c	;volatile
 11369   0050FE  EF83  F028         	goto	u4151
 11370   005102  EF85  F028         	goto	u4150
 11371   005106                     u4151:
 11372   005106  EF7E  F028         	goto	l443
 11373   00510A                     u4150:
 11374   00510A                     
 11375                           ;ADC.c: 31:     tmpval = ADRESH;
 11376   00510A  CF64 F008          	movff	3940,ADC_getval@tmpval	;volatile
 11377   00510E                     
 11378                           ;ADC.c: 35:     return tmpval;
 11379   00510E  5008               	movf	ADC_getval@tmpval^0,w,c
 11380   005110  0012               	return		;funcret
 11381   005112                     __end_of_ADC_getval:
 11382                           	callstack 0
 11383                           
 11384 ;; *************** function _Timer0_init *****************
 11385 ;; Defined at:
 11386 ;;		line 7 in file "timers.c"
 11387 ;; Parameters:    Size  Location     Type
 11388 ;;		None
 11389 ;; Auto vars:     Size  Location     Type
 11390 ;;		None
 11391 ;; Return value:  Size  Location     Type
 11392 ;;                  1    wreg      void 
 11393 ;; Registers used:
 11394 ;;		wreg, status,2
 11395 ;; Tracked objects:
 11396 ;;		On entry : 0/0
 11397 ;;		On exit  : 0/0
 11398 ;;		Unchanged: 0/0
 11399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11404 ;;Total ram usage:        0 bytes
 11405 ;; Hardware stack levels used: 1
 11406 ;; Hardware stack levels required when called: 5
 11407 ;; This function calls:
 11408 ;;		Nothing
 11409 ;; This function is called by:
 11410 ;;		_main
 11411 ;; This function uses a non-reentrant model
 11412 ;;
 11413                           
 11414                           	psect	text43
 11415   005082                     __ptext43:
 11416                           	callstack 0
 11417   005082                     _Timer0_init:
 11418                           	callstack 25
 11419   005082                     
 11420                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 11421   005082  50D6               	movf	214,w,c	;volatile
 11422   005084  0B1F               	andlw	-225
 11423   005086  0940               	iorlw	64
 11424   005088  6ED6               	movwf	214,c	;volatile
 11425   00508A                     
 11426                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 11427   00508A  88D6               	bsf	214,4,c	;volatile
 11428                           
 11429                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
 11430   00508C  50D6               	movf	214,w,c	;volatile
 11431   00508E  0BF0               	andlw	-16
 11432   005090  090B               	iorlw	11
 11433   005092  6ED6               	movwf	214,c	;volatile
 11434   005094                     
 11435                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 11436   005094  88D5               	bsf	213,4,c	;volatile
 11437                           
 11438                           ;timers.c: 15:     TMR0H=0;
 11439   005096  0E00               	movlw	0
 11440   005098  6ED4               	movwf	212,c	;volatile
 11441                           
 11442                           ;timers.c: 16:     TMR0L=0;
 11443   00509A  0E00               	movlw	0
 11444   00509C  6ED3               	movwf	211,c	;volatile
 11445   00509E                     
 11446                           ;timers.c: 17:     T0CON0bits.T0EN=1;
 11447   00509E  8ED5               	bsf	213,7,c	;volatile
 11448   0050A0  0012               	return		;funcret
 11449   0050A2                     __end_of_Timer0_init:
 11450                           	callstack 0
 11451                           
 11452 ;; *************** function _Interrupts_init *****************
 11453 ;; Defined at:
 11454 ;;		line 11 in file "interrupts.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;		None
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;		None
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  1    wreg      void 
 11461 ;; Registers used:
 11462 ;;		None
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11472 ;;Total ram usage:        0 bytes
 11473 ;; Hardware stack levels used: 1
 11474 ;; Hardware stack levels required when called: 5
 11475 ;; This function calls:
 11476 ;;		Nothing
 11477 ;; This function is called by:
 11478 ;;		_main
 11479 ;; This function uses a non-reentrant model
 11480 ;;
 11481                           
 11482                           	psect	text44
 11483   00512A                     __ptext44:
 11484                           	callstack 0
 11485   00512A                     _Interrupts_init:
 11486                           	callstack 25
 11487   00512A                     
 11488                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
 11489   00512A  8082               	bsf	130,0,c	;volatile
 11490                           
 11491                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
 11492   00512C  010E               	movlb	14	; () banked
 11493   00512E  919A               	bcf	154,0,b	;volatile
 11494                           
 11495                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
 11496   005130  8129               	bsf	41,0,b	;volatile
 11497                           
 11498                           ;interrupts.c: 17:     IPR0bits.INT0IP = 1;
 11499   005132  811F               	bsf	31,0,b	;volatile
 11500                           
 11501                           ;interrupts.c: 18:     INTCONbits.INT0EDG = 0;
 11502   005134  90F2               	bcf	242,0,c	;volatile
 11503                           
 11504                           ;interrupts.c: 22:     TMR0IE=1;
 11505   005136  8B29               	bsf	41,5,b	;volatile
 11506                           
 11507                           ;interrupts.c: 23:     PIE4bits.RC4IE=1;
 11508   005138  872D               	bsf	45,3,b	;volatile
 11509                           
 11510                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
 11511   00513A  8CF2               	bsf	242,6,c	;volatile
 11512                           
 11513                           ;interrupts.c: 25:     INTCONbits.GIE=1;
 11514   00513C  8EF2               	bsf	242,7,c	;volatile
 11515   00513E                     
 11516                           ; BSR set to: 14
 11517   00513E  0012               	return		;funcret
 11518   005140                     __end_of_Interrupts_init:
 11519                           	callstack 0
 11520                           
 11521 ;; *************** function _Buggy_init *****************
 11522 ;; Defined at:
 11523 ;;		line 7 in file "buggysetup.c"
 11524 ;; Parameters:    Size  Location     Type
 11525 ;;		None
 11526 ;; Auto vars:     Size  Location     Type
 11527 ;;		None
 11528 ;; Return value:  Size  Location     Type
 11529 ;;                  1    wreg      void 
 11530 ;; Registers used:
 11531 ;;		None
 11532 ;; Tracked objects:
 11533 ;;		On entry : 0/0
 11534 ;;		On exit  : 0/0
 11535 ;;		Unchanged: 0/0
 11536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11541 ;;Total ram usage:        0 bytes
 11542 ;; Hardware stack levels used: 1
 11543 ;; Hardware stack levels required when called: 5
 11544 ;; This function calls:
 11545 ;;		Nothing
 11546 ;; This function is called by:
 11547 ;;		_main
 11548 ;; This function uses a non-reentrant model
 11549 ;;
 11550                           
 11551                           	psect	text45
 11552   004E9C                     __ptext45:
 11553                           	callstack 0
 11554   004E9C                     _Buggy_init:
 11555                           	callstack 25
 11556   004E9C                     
 11557                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
 11558   004E9C  9E7C               	bcf	124,7,c	;volatile
 11559                           
 11560                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
 11561   004E9E  9E84               	bcf	132,7,c	;volatile
 11562                           
 11563                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
 11564   004EA0  9680               	bcf	128,3,c	;volatile
 11565                           
 11566                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
 11567   004EA2  9688               	bcf	136,3,c	;volatile
 11568                           
 11569                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
 11570   004EA4  8486               	bsf	134,2,c	;volatile
 11571                           
 11572                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
 11573   004EA6  010E               	movlb	14	; () banked
 11574   004EA8  95B4               	bcf	180,2,b	;volatile
 11575                           
 11576                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
 11577   004EAA  8686               	bsf	134,3,c	;volatile
 11578                           
 11579                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
 11580   004EAC  97B4               	bcf	180,3,b	;volatile
 11581                           
 11582                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
 11583   004EAE  9280               	bcf	128,1,c	;volatile
 11584                           
 11585                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
 11586   004EB0  9288               	bcf	136,1,c	;volatile
 11587                           
 11588                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
 11589   004EB2  987C               	bcf	124,4,c	;volatile
 11590                           
 11591                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
 11592   004EB4  9884               	bcf	132,4,c	;volatile
 11593                           
 11594                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
 11595   004EB6  967C               	bcf	124,3,c	;volatile
 11596                           
 11597                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
 11598   004EB8  9684               	bcf	132,3,c	;volatile
 11599                           
 11600                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
 11601   004EBA  97A7               	bcf	167,3,b	;volatile
 11602                           
 11603                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
 11604   004EBC  9080               	bcf	128,0,c	;volatile
 11605                           
 11606                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
 11607   004EBE  9088               	bcf	136,0,c	;volatile
 11608                           
 11609                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
 11610   004EC0  907E               	bcf	126,0,c	;volatile
 11611                           
 11612                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
 11613   004EC2  9086               	bcf	134,0,c	;volatile
 11614                           
 11615                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
 11616   004EC4  907F               	bcf	127,0,c	;volatile
 11617                           
 11618                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
 11619   004EC6  9087               	bcf	135,0,c	;volatile
 11620                           
 11621                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
 11622   004EC8  9E7D               	bcf	125,7,c	;volatile
 11623                           
 11624                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
 11625   004ECA  9E85               	bcf	133,7,c	;volatile
 11626                           
 11627                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
 11628   004ECC  9679               	bcf	121,3,c	;volatile
 11629                           
 11630                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
 11631   004ECE  9681               	bcf	129,3,c	;volatile
 11632   004ED0                     
 11633                           ; BSR set to: 14
 11634   004ED0  0012               	return		;funcret
 11635   004ED2                     __end_of_Buggy_init:
 11636                           	callstack 0
 11637                           
 11638 ;; *************** function _HighISR *****************
 11639 ;; Defined at:
 11640 ;;		line 33 in file "interrupts.c"
 11641 ;; Parameters:    Size  Location     Type
 11642 ;;		None
 11643 ;; Auto vars:     Size  Location     Type
 11644 ;;		None
 11645 ;; Return value:  Size  Location     Type
 11646 ;;                  1    wreg      void 
 11647 ;; Registers used:
 11648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11649 ;; Tracked objects:
 11650 ;;		On entry : 0/0
 11651 ;;		On exit  : 0/0
 11652 ;;		Unchanged: 0/0
 11653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11658 ;;Total ram usage:        2 bytes
 11659 ;; Hardware stack levels used: 1
 11660 ;; Hardware stack levels required when called: 4
 11661 ;; This function calls:
 11662 ;;		_getCharFromTxBuf
 11663 ;;		_isDataInTxBuf
 11664 ;;		_putCharToRxBuf
 11665 ;;		i2_color_clear_init_interrupts
 11666 ;; This function is called by:
 11667 ;;		Interrupt level 2
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671                           	psect	intcode
 11672   000008                     __pintcode:
 11673                           	callstack 0
 11674   000008                     _HighISR:
 11675                           	callstack 21
 11676                           
 11677                           ; BSR set to: 14
 11678                           ;incstack = 0
 11679   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11680   00000A  CFD9 F006          	movff	fsr2l,??_HighISR
 11681   00000E  CFDA F007          	movff	fsr2h,??_HighISR+1
 11682   000012                     
 11683                           ;interrupts.c: 37:     if(PIR0bits.INT0IF){
 11684   000012  010E               	movlb	14	; () banked
 11685   000014  A133               	btfss	51,0,b	;volatile
 11686   000016  EF0F  F000         	goto	i2u359_41
 11687   00001A  EF11  F000         	goto	i2u359_40
 11688   00001E                     i2u359_41:
 11689   00001E  EF17  F000         	goto	i2l4464
 11690   000022                     i2u359_40:
 11691   000022                     
 11692                           ; BSR set to: 14
 11693                           ;interrupts.c: 38:         wall = 1;
 11694   000022  0E01               	movlw	1
 11695   000024  6E44               	movwf	_wall^0,c
 11696   000026                     
 11697                           ; BSR set to: 14
 11698                           ;interrupts.c: 39:         color_clear_init_interrupts();
 11699   000026  EC92  F026         	call	i2_color_clear_init_interrupts	;wreg free
 11700   00002A                     
 11701                           ;interrupts.c: 40:         PIR0bits.INT0IF = 0;
 11702   00002A  010E               	movlb	14	; () banked
 11703   00002C  9133               	bcf	51,0,b	;volatile
 11704   00002E                     i2l4464:
 11705                           
 11706                           ; BSR set to: 14
 11707                           ;interrupts.c: 47:     if(TMR0IF){
 11708   00002E  AB33               	btfss	51,5,b	;volatile
 11709   000030  EF1C  F000         	goto	i2u360_41
 11710   000034  EF1E  F000         	goto	i2u360_40
 11711   000038                     i2u360_41:
 11712   000038  EF21  F000         	goto	i2l4470
 11713   00003C                     i2u360_40:
 11714   00003C                     
 11715                           ; BSR set to: 14
 11716                           ;interrupts.c: 48:         lost = 1;
 11717   00003C  0E01               	movlw	1
 11718   00003E  6E43               	movwf	_lost^0,c
 11719   000040                     
 11720                           ; BSR set to: 14
 11721                           ;interrupts.c: 49:         TMR0IF=0;
 11722   000040  9B33               	bcf	51,5,b	;volatile
 11723   000042                     i2l4470:
 11724                           
 11725                           ; BSR set to: 14
 11726                           ;interrupts.c: 56:     if(PIR4bits.RC4IF){
 11727   000042  A737               	btfss	55,3,b	;volatile
 11728   000044  EF26  F000         	goto	i2u361_41
 11729   000048  EF28  F000         	goto	i2u361_40
 11730   00004C                     i2u361_41:
 11731   00004C  EF2B  F000         	goto	i2l4474
 11732   000050                     i2u361_40:
 11733   000050                     
 11734                           ; BSR set to: 14
 11735                           ;interrupts.c: 58:         putCharToRxBuf(RC4REG);
 11736   000050  51E3               	movf	227,w,b	;volatile
 11737   000052  ECF9  F027         	call	_putCharToRxBuf
 11738   000056                     i2l4474:
 11739                           
 11740                           ;interrupts.c: 62:     if(PIR4bits.TX4IF){
 11741   000056  010E               	movlb	14	; () banked
 11742   000058  A537               	btfss	55,2,b	;volatile
 11743   00005A  EF31  F000         	goto	i2u362_41
 11744   00005E  EF33  F000         	goto	i2u362_40
 11745   000062                     i2u362_41:
 11746   000062  EF43  F000         	goto	i2l362
 11747   000066                     i2u362_40:
 11748   000066                     
 11749                           ; BSR set to: 14
 11750                           ;interrupts.c: 64:         TX4REG = getCharFromTxBuf();
 11751   000066  EC0C  F028         	call	_getCharFromTxBuf	;wreg free
 11752   00006A  010E               	movlb	14	; () banked
 11753   00006C  6FE4               	movwf	228,b	;volatile
 11754   00006E                     
 11755                           ; BSR set to: 14
 11756                           ;interrupts.c: 65:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
 11757   00006E  EC89  F028         	call	_isDataInTxBuf	;wreg free
 11758   000072  0900               	iorlw	0
 11759   000074  A4D8               	btfss	status,2,c
 11760   000076  EF3F  F000         	goto	i2u363_41
 11761   00007A  EF41  F000         	goto	i2u363_40
 11762   00007E                     i2u363_41:
 11763   00007E  EF43  F000         	goto	i2l362
 11764   000082                     i2u363_40:
 11765   000082  010E               	movlb	14	; () banked
 11766   000084  952D               	bcf	45,2,b	;volatile
 11767   000086                     i2l362:
 11768   000086  C007  FFDA         	movff	??_HighISR+1,fsr2h
 11769   00008A  C006  FFD9         	movff	??_HighISR,fsr2l
 11770   00008E  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11771   000090  0011               	retfie		f
 11772   000092                     __end_of_HighISR:
 11773                           	callstack 0
 11774                           
 11775 ;; *************** function i2_color_clear_init_interrupts *****************
 11776 ;; Defined at:
 11777 ;;		line 27 in file "color.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;		None
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;  low_threshol    2    0        unsigned int 
 11782 ;;  high_thresho    2    0        unsigned int 
 11783 ;; Return value:  Size  Location     Type
 11784 ;;                  1    wreg      void 
 11785 ;; Registers used:
 11786 ;;		wreg, status,2, status,0, cstack
 11787 ;; Tracked objects:
 11788 ;;		On entry : 0/0
 11789 ;;		On exit  : 0/0
 11790 ;;		Unchanged: 0/0
 11791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11794 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11795 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11796 ;;Total ram usage:        1 bytes
 11797 ;; Hardware stack levels used: 1
 11798 ;; Hardware stack levels required when called: 3
 11799 ;; This function calls:
 11800 ;;		i2_I2C_2_Master_Start
 11801 ;;		i2_I2C_2_Master_Stop
 11802 ;;		i2_I2C_2_Master_Write
 11803 ;;		i2_color_writetoaddr
 11804 ;; This function is called by:
 11805 ;;		_HighISR
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           	psect	text47
 11810   004D24                     __ptext47:
 11811                           	callstack 0
 11812   004D24                     i2_color_clear_init_interrupts:
 11813                           	callstack 21
 11814   004D24                     
 11815                           ;color.c: 29:     I2C_2_Master_Start();
 11816   004D24  ECC5  F028         	call	i2_I2C_2_Master_Start	;wreg free
 11817                           
 11818                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
 11819   004D28  0E52               	movlw	82
 11820   004D2A  ECA6  F028         	call	i2_I2C_2_Master_Write
 11821                           
 11822                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
 11823   004D2E  0EE6               	movlw	230
 11824   004D30  ECA6  F028         	call	i2_I2C_2_Master_Write
 11825                           
 11826                           ;color.c: 32:     I2C_2_Master_Stop();
 11827   004D34  ECC0  F028         	call	i2_I2C_2_Master_Stop	;wreg free
 11828   004D38                     
 11829                           ;color.c: 45:  color_writetoaddr(0x00, 0x13);
 11830   004D38  0E13               	movlw	19
 11831   004D3A  6E03               	movwf	i2color_writetoaddr@value^0,c
 11832   004D3C  0E00               	movlw	0
 11833   004D3E  EC51  F028         	call	i2_color_writetoaddr
 11834   004D42                     
 11835                           ;color.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
 11836   004D42  0E3F               	movlw	63
 11837   004D44  6E05               	movwf	??i2_color_clear_init_interrupts^0,c
 11838   004D46  0E55               	movlw	85
 11839   004D48                     i2u646_47:
 11840   004D48  2EE8               	decfsz	wreg,f,c
 11841   004D4A  D7FE               	bra	i2u646_47
 11842   004D4C  2E05               	decfsz	??i2_color_clear_init_interrupts^0,f,c
 11843   004D4E  D7FC               	bra	i2u646_47
 11844   004D50  0000               	nop	
 11845   004D52                     
 11846                           ;color.c: 47:     color_writetoaddr(0x07, (high_threshold >> 8));
 11847   004D52  0E01               	movlw	1
 11848   004D54  6E03               	movwf	i2color_writetoaddr@value^0,c
 11849   004D56  0E07               	movlw	7
 11850   004D58  EC51  F028         	call	i2_color_writetoaddr
 11851   004D5C                     
 11852                           ;color.c: 48:     color_writetoaddr(0x06, (high_threshold & 0xFF));
 11853   004D5C  0E90               	movlw	144
 11854   004D5E  6E03               	movwf	i2color_writetoaddr@value^0,c
 11855   004D60  0E06               	movlw	6
 11856   004D62  EC51  F028         	call	i2_color_writetoaddr
 11857   004D66                     
 11858                           ;color.c: 49:     color_writetoaddr(0x05, (low_threshold >> 8));
 11859   004D66  0E00               	movlw	0
 11860   004D68  6E03               	movwf	i2color_writetoaddr@value^0,c
 11861   004D6A  0E05               	movlw	5
 11862   004D6C  EC51  F028         	call	i2_color_writetoaddr
 11863   004D70                     
 11864                           ;color.c: 50:     color_writetoaddr(0x04, (low_threshold & 0xFF));
 11865   004D70  0EC8               	movlw	200
 11866   004D72  6E03               	movwf	i2color_writetoaddr@value^0,c
 11867   004D74  0E04               	movlw	4
 11868   004D76  EC51  F028         	call	i2_color_writetoaddr
 11869   004D7A                     
 11870                           ;color.c: 51:     color_writetoaddr(0x0C, 0b0100);
 11871   004D7A  0E04               	movlw	4
 11872   004D7C  6E03               	movwf	i2color_writetoaddr@value^0,c
 11873   004D7E  0E0C               	movlw	12
 11874   004D80  EC51  F028         	call	i2_color_writetoaddr
 11875   004D84  0012               	return		;funcret
 11876   004D86                     __end_ofi2_color_clear_init_interrupts:
 11877                           	callstack 0
 11878                           
 11879 ;; *************** function i2_color_writetoaddr *****************
 11880 ;; Defined at:
 11881 ;;		line 56 in file "color.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;  address         1    wreg     unsigned char 
 11884 ;;  value           1    2[COMRAM] unsigned char 
 11885 ;; Auto vars:     Size  Location     Type
 11886 ;;  address         1    3[COMRAM] unsigned char 
 11887 ;; Return value:  Size  Location     Type
 11888 ;;                  1    wreg      void 
 11889 ;; Registers used:
 11890 ;;		wreg, status,2, status,0, cstack
 11891 ;; Tracked objects:
 11892 ;;		On entry : 0/0
 11893 ;;		On exit  : 0/0
 11894 ;;		Unchanged: 0/0
 11895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11896 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11900 ;;Total ram usage:        2 bytes
 11901 ;; Hardware stack levels used: 1
 11902 ;; Hardware stack levels required when called: 2
 11903 ;; This function calls:
 11904 ;;		i2_I2C_2_Master_Start
 11905 ;;		i2_I2C_2_Master_Stop
 11906 ;;		i2_I2C_2_Master_Write
 11907 ;; This function is called by:
 11908 ;;		i2_color_clear_init_interrupts
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           	psect	text48
 11913   0050A2                     __ptext48:
 11914                           	callstack 0
 11915   0050A2                     i2_color_writetoaddr:
 11916                           	callstack 21
 11917                           
 11918                           ;incstack = 0
 11919                           ;i2color_writetoaddr@address stored from wreg
 11920   0050A2  6E04               	movwf	i2color_writetoaddr@address^0,c
 11921   0050A4                     
 11922                           ;color.c: 57:     I2C_2_Master_Start();
 11923   0050A4  ECC5  F028         	call	i2_I2C_2_Master_Start	;wreg free
 11924                           
 11925                           ;color.c: 58:     I2C_2_Master_Write(0x52 | 0x00);
 11926   0050A8  0E52               	movlw	82
 11927   0050AA  ECA6  F028         	call	i2_I2C_2_Master_Write
 11928                           
 11929                           ;color.c: 59:     I2C_2_Master_Write(0x80 | address);
 11930   0050AE  5004               	movf	i2color_writetoaddr@address^0,w,c
 11931   0050B0  0980               	iorlw	128
 11932   0050B2  ECA6  F028         	call	i2_I2C_2_Master_Write
 11933                           
 11934                           ;color.c: 60:     I2C_2_Master_Write(value);
 11935   0050B6  5003               	movf	i2color_writetoaddr@value^0,w,c
 11936   0050B8  ECA6  F028         	call	i2_I2C_2_Master_Write
 11937                           
 11938                           ;color.c: 61:     I2C_2_Master_Stop();
 11939   0050BC  ECC0  F028         	call	i2_I2C_2_Master_Stop	;wreg free
 11940   0050C0  0012               	return		;funcret
 11941   0050C2                     __end_ofi2_color_writetoaddr:
 11942                           	callstack 0
 11943                           
 11944 ;; *************** function i2_I2C_2_Master_Write *****************
 11945 ;; Defined at:
 11946 ;;		line 45 in file "i2c.c"
 11947 ;; Parameters:    Size  Location     Type
 11948 ;;  data_byte       1    wreg     unsigned char 
 11949 ;; Auto vars:     Size  Location     Type
 11950 ;;  data_byte       1    1[COMRAM] unsigned char 
 11951 ;; Return value:  Size  Location     Type
 11952 ;;                  1    wreg      void 
 11953 ;; Registers used:
 11954 ;;		wreg, status,2, status,0, cstack
 11955 ;; Tracked objects:
 11956 ;;		On entry : 0/0
 11957 ;;		On exit  : 0/0
 11958 ;;		Unchanged: 0/0
 11959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11964 ;;Total ram usage:        1 bytes
 11965 ;; Hardware stack levels used: 1
 11966 ;; Hardware stack levels required when called: 1
 11967 ;; This function calls:
 11968 ;;		i2_I2C_2_Master_Idle
 11969 ;; This function is called by:
 11970 ;;		i2_color_clear_init_interrupts
 11971 ;;		i2_color_writetoaddr
 11972 ;; This function uses a non-reentrant model
 11973 ;;
 11974                           
 11975                           	psect	text49
 11976   00514C                     __ptext49:
 11977                           	callstack 0
 11978   00514C                     i2_I2C_2_Master_Write:
 11979                           	callstack 21
 11980                           
 11981                           ;incstack = 0
 11982                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 11983   00514C  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 11984   00514E                     
 11985                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 11986   00514E  ECD2  F027         	call	i2_I2C_2_Master_Idle	;wreg free
 11987   005152                     
 11988                           ;i2c.c: 48:   SSP2BUF = data_byte;
 11989   005152  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 11990   005156  0012               	return		;funcret
 11991   005158                     __end_ofi2_I2C_2_Master_Write:
 11992                           	callstack 0
 11993                           
 11994 ;; *************** function i2_I2C_2_Master_Stop *****************
 11995 ;; Defined at:
 11996 ;;		line 39 in file "i2c.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;		None
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;		None
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  1    wreg      void 
 12003 ;; Registers used:
 12004 ;;		wreg, status,2, status,0, cstack
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12014 ;;Total ram usage:        0 bytes
 12015 ;; Hardware stack levels used: 1
 12016 ;; Hardware stack levels required when called: 1
 12017 ;; This function calls:
 12018 ;;		i2_I2C_2_Master_Idle
 12019 ;; This function is called by:
 12020 ;;		i2_color_clear_init_interrupts
 12021 ;;		i2_color_writetoaddr
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025                           	psect	text50
 12026   005180                     __ptext50:
 12027                           	callstack 0
 12028   005180                     i2_I2C_2_Master_Stop:
 12029                           	callstack 21
 12030   005180                     
 12031                           ;i2c.c: 41:   I2C_2_Master_Idle();
 12032   005180  ECD2  F027         	call	i2_I2C_2_Master_Idle	;wreg free
 12033   005184                     
 12034                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 12035   005184  010E               	movlb	14	; () banked
 12036   005186  85DA               	bsf	218,2,b	;volatile
 12037   005188                     
 12038                           ; BSR set to: 14
 12039   005188  0012               	return		;funcret
 12040   00518A                     __end_ofi2_I2C_2_Master_Stop:
 12041                           	callstack 0
 12042                           
 12043 ;; *************** function i2_I2C_2_Master_Start *****************
 12044 ;; Defined at:
 12045 ;;		line 27 in file "i2c.c"
 12046 ;; Parameters:    Size  Location     Type
 12047 ;;		None
 12048 ;; Auto vars:     Size  Location     Type
 12049 ;;		None
 12050 ;; Return value:  Size  Location     Type
 12051 ;;                  1    wreg      void 
 12052 ;; Registers used:
 12053 ;;		wreg, status,2, status,0, cstack
 12054 ;; Tracked objects:
 12055 ;;		On entry : 0/0
 12056 ;;		On exit  : 0/0
 12057 ;;		Unchanged: 0/0
 12058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12063 ;;Total ram usage:        0 bytes
 12064 ;; Hardware stack levels used: 1
 12065 ;; Hardware stack levels required when called: 1
 12066 ;; This function calls:
 12067 ;;		i2_I2C_2_Master_Idle
 12068 ;; This function is called by:
 12069 ;;		i2_color_clear_init_interrupts
 12070 ;;		i2_color_writetoaddr
 12071 ;; This function uses a non-reentrant model
 12072 ;;
 12073                           
 12074                           	psect	text51
 12075   00518A                     __ptext51:
 12076                           	callstack 0
 12077   00518A                     i2_I2C_2_Master_Start:
 12078                           	callstack 21
 12079   00518A                     
 12080                           ;i2c.c: 29:   I2C_2_Master_Idle();
 12081   00518A  ECD2  F027         	call	i2_I2C_2_Master_Idle	;wreg free
 12082   00518E                     
 12083                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 12084   00518E  010E               	movlb	14	; () banked
 12085   005190  81DA               	bsf	218,0,b	;volatile
 12086   005192                     
 12087                           ; BSR set to: 14
 12088   005192  0012               	return		;funcret
 12089   005194                     __end_ofi2_I2C_2_Master_Start:
 12090                           	callstack 0
 12091                           
 12092 ;; *************** function i2_I2C_2_Master_Idle *****************
 12093 ;; Defined at:
 12094 ;;		line 22 in file "i2c.c"
 12095 ;; Parameters:    Size  Location     Type
 12096 ;;		None
 12097 ;; Auto vars:     Size  Location     Type
 12098 ;;		None
 12099 ;; Return value:  Size  Location     Type
 12100 ;;                  1    wreg      void 
 12101 ;; Registers used:
 12102 ;;		wreg, status,2, status,0
 12103 ;; Tracked objects:
 12104 ;;		On entry : 0/0
 12105 ;;		On exit  : 0/0
 12106 ;;		Unchanged: 0/0
 12107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12112 ;;Total ram usage:        1 bytes
 12113 ;; Hardware stack levels used: 1
 12114 ;; This function calls:
 12115 ;;		Nothing
 12116 ;; This function is called by:
 12117 ;;		i2_I2C_2_Master_Start
 12118 ;;		i2_I2C_2_Master_Stop
 12119 ;;		i2_I2C_2_Master_Write
 12120 ;; This function uses a non-reentrant model
 12121 ;;
 12122                           
 12123                           	psect	text52
 12124   004FA4                     __ptext52:
 12125                           	callstack 0
 12126   004FA4                     i2_I2C_2_Master_Idle:
 12127                           	callstack 21
 12128   004FA4                     i2l252:
 12129   004FA4  010E               	movlb	14	; () banked
 12130   004FA6  B5D8               	btfsc	216,2,b	;volatile
 12131   004FA8  EFD8  F027         	goto	i2u192_41
 12132   004FAC  EFDA  F027         	goto	i2u192_40
 12133   004FB0                     i2u192_41:
 12134   004FB0  EFD2  F027         	goto	i2l252
 12135   004FB4                     i2u192_40:
 12136   004FB4                     
 12137                           ; BSR set to: 14
 12138   004FB4  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 12139   004FB8  0E1F               	movlw	31
 12140   004FBA  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 12141   004FBC  A4D8               	btfss	status,2,c
 12142   004FBE  EFE3  F027         	goto	i2u193_41
 12143   004FC2  EFE5  F027         	goto	i2u193_40
 12144   004FC6                     i2u193_41:
 12145   004FC6  EFD2  F027         	goto	i2l252
 12146   004FCA                     i2u193_40:
 12147   004FCA                     
 12148                           ; BSR set to: 14
 12149   004FCA  0012               	return		;funcret
 12150   004FCC                     __end_ofi2_I2C_2_Master_Idle:
 12151                           	callstack 0
 12152                           
 12153 ;; *************** function _putCharToRxBuf *****************
 12154 ;; Defined at:
 12155 ;;		line 33 in file "serial.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;  byte            1    wreg     unsigned char 
 12158 ;; Auto vars:     Size  Location     Type
 12159 ;;  byte            1    0[COMRAM] unsigned char 
 12160 ;; Return value:  Size  Location     Type
 12161 ;;                  1    wreg      void 
 12162 ;; Registers used:
 12163 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12164 ;; Tracked objects:
 12165 ;;		On entry : 0/0
 12166 ;;		On exit  : 0/0
 12167 ;;		Unchanged: 0/0
 12168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12172 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12173 ;;Total ram usage:        1 bytes
 12174 ;; Hardware stack levels used: 1
 12175 ;; This function calls:
 12176 ;;		Nothing
 12177 ;; This function is called by:
 12178 ;;		_HighISR
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           	psect	text53
 12183   004FF2                     __ptext53:
 12184                           	callstack 0
 12185   004FF2                     _putCharToRxBuf:
 12186                           	callstack 24
 12187                           
 12188                           ; BSR set to: 14
 12189                           ;incstack = 0
 12190                           ;putCharToRxBuf@byte stored from wreg
 12191   004FF2  6E01               	movwf	putCharToRxBuf@byte^0,c
 12192   004FF4                     
 12193                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
 12194   004FF4  0E13               	movlw	19
 12195   004FF6  6448               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
 12196   004FF8  EF00  F028         	goto	i2u326_41
 12197   004FFC  EF02  F028         	goto	i2u326_40
 12198   005000                     i2u326_41:
 12199   005000  EF04  F028         	goto	i2l4272
 12200   005004                     i2u326_40:
 12201   005004  0E00               	movlw	0
 12202   005006  6E48               	movwf	_RxBufWriteCnt^0,c	;volatile
 12203   005008                     i2l4272:
 12204                           
 12205                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
 12206   005008  5048               	movf	_RxBufWriteCnt^0,w,c
 12207   00500A  0FC4               	addlw	low _EUSART4RXbuf
 12208   00500C  6ED9               	movwf	fsr2l,c
 12209   00500E  6ADA               	clrf	fsr2h,c
 12210   005010  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
 12211   005014  2A48               	incf	_RxBufWriteCnt^0,f,c	;volatile
 12212   005016  0012               	return		;funcret
 12213   005018                     __end_of_putCharToRxBuf:
 12214                           	callstack 0
 12215                           
 12216 ;; *************** function _isDataInTxBuf *****************
 12217 ;; Defined at:
 12218 ;;		line 61 in file "serial.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;		None
 12221 ;; Auto vars:     Size  Location     Type
 12222 ;;		None
 12223 ;; Return value:  Size  Location     Type
 12224 ;;                  1    wreg      unsigned char 
 12225 ;; Registers used:
 12226 ;;		wreg, status,2, status,0
 12227 ;; Tracked objects:
 12228 ;;		On entry : 0/0
 12229 ;;		On exit  : 0/0
 12230 ;;		Unchanged: 0/0
 12231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12236 ;;Total ram usage:        0 bytes
 12237 ;; Hardware stack levels used: 1
 12238 ;; This function calls:
 12239 ;;		Nothing
 12240 ;; This function is called by:
 12241 ;;		_HighISR
 12242 ;;		_sendTxBuf
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           	psect	text54
 12247   005112                     __ptext54:
 12248                           	callstack 0
 12249   005112                     _isDataInTxBuf:
 12250                           	callstack 24
 12251   005112                     
 12252                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
 12253   005112  5045               	movf	_TxBufReadCnt^0,w,c	;volatile
 12254   005114  1846               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
 12255   005116  A4D8               	btfss	status,2,c
 12256   005118  EF90  F028         	goto	i2u144_41
 12257   00511C  EF93  F028         	goto	i2u144_40
 12258   005120                     i2u144_41:
 12259   005120  0E01               	movlw	1
 12260   005122  EF94  F028         	goto	i2u145_40
 12261   005126                     i2u144_40:
 12262   005126  0E00               	movlw	0
 12263   005128                     i2u145_40:
 12264   005128  0012               	return		;funcret
 12265   00512A                     __end_of_isDataInTxBuf:
 12266                           	callstack 0
 12267                           
 12268 ;; *************** function _getCharFromTxBuf *****************
 12269 ;; Defined at:
 12270 ;;		line 47 in file "serial.c"
 12271 ;; Parameters:    Size  Location     Type
 12272 ;;		None
 12273 ;; Auto vars:     Size  Location     Type
 12274 ;;		None
 12275 ;; Return value:  Size  Location     Type
 12276 ;;                  1    wreg      unsigned char 
 12277 ;; Registers used:
 12278 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12279 ;; Tracked objects:
 12280 ;;		On entry : 0/0
 12281 ;;		On exit  : 0/0
 12282 ;;		Unchanged: 0/0
 12283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12286 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12287 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12288 ;;Total ram usage:        1 bytes
 12289 ;; Hardware stack levels used: 1
 12290 ;; This function calls:
 12291 ;;		Nothing
 12292 ;; This function is called by:
 12293 ;;		_HighISR
 12294 ;; This function uses a non-reentrant model
 12295 ;;
 12296                           
 12297                           	psect	text55
 12298   005018                     __ptext55:
 12299                           	callstack 0
 12300   005018                     _getCharFromTxBuf:
 12301                           	callstack 24
 12302   005018                     
 12303                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
 12304   005018  0E3B               	movlw	59
 12305   00501A  6445               	cpfsgt	_TxBufReadCnt^0,c	;volatile
 12306   00501C  EF12  F028         	goto	i2u327_41
 12307   005020  EF14  F028         	goto	i2u327_40
 12308   005024                     i2u327_41:
 12309   005024  EF16  F028         	goto	i2l4280
 12310   005028                     i2u327_40:
 12311   005028  0E00               	movlw	0
 12312   00502A  6E45               	movwf	_TxBufReadCnt^0,c	;volatile
 12313   00502C                     i2l4280:
 12314                           
 12315                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
 12316   00502C  2A45               	incf	_TxBufReadCnt^0,f,c	;volatile
 12317   00502E  0445               	decf	_TxBufReadCnt^0,w,c	;volatile
 12318   005030  6E01               	movwf	??_getCharFromTxBuf^0,c
 12319   005032  5001               	movf	??_getCharFromTxBuf^0,w,c
 12320   005034  0F60               	addlw	low _EUSART4TXbuf
 12321   005036  6ED9               	movwf	fsr2l,c
 12322   005038  6ADA               	clrf	fsr2h,c
 12323   00503A  50DF               	movf	indf2,w,c
 12324   00503C  0012               	return		;funcret
 12325   00503E                     __end_of_getCharFromTxBuf:
 12326                           	callstack 0
 12327                           
 12328                           	psect	smallconst
 12329   000E00                     __psmallconst:
 12330                           	callstack 0
 12331   000E00  00                 	db	0
 12332   000E01  00                 	db	0	; dummy byte at the end
 12333   000000                     
 12334                           	psect	rparam
 12335   000000                     
 12336                           	psect	temp
 12337   00004F                     btemp:
 12338                           	callstack 0
 12339   00004F                     	ds	1
 12340   000000                     int$flags	set	btemp
 12341   000000                     wtemp8	set	btemp+1
 12342   000000                     ttemp5	set	btemp+1
 12343   000000                     ttemp6	set	btemp+4
 12344   000000                     ttemp7	set	btemp+8
 12345                           
 12346                           	psect	config
 12347                           
 12348                           ;Config register CONFIG1L @ 0x300000
 12349                           ;	External Oscillator mode Selection bits
 12350                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12351                           ;	Power-up default value for COSC bits
 12352                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12353   300000                     	org	3145728
 12354   300000  AA                 	db	170
 12355                           
 12356                           ;Config register CONFIG1H @ 0x300001
 12357                           ;	unspecified, using default values
 12358                           ;	Clock Out Enable bit
 12359                           ;	CLKOUTEN = 0x1, unprogrammed default
 12360                           ;	Clock Switch Enable bit
 12361                           ;	CSWEN = 0x1, unprogrammed default
 12362                           ;	Fail-Safe Clock Monitor Enable bit
 12363                           ;	FCMEN = 0x1, unprogrammed default
 12364   300001                     	org	3145729
 12365   300001  FF                 	db	255
 12366                           
 12367                           ;Config register CONFIG3L @ 0x300004
 12368                           ;	WDT Period Select bits
 12369                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12370                           ;	WDT operating mode
 12371                           ;	WDTE = OFF, WDT Disabled
 12372   300004                     	org	3145732
 12373   300004  9F                 	db	159
 12374                           
 12375                           ;Config register CONFIG3H @ 0x300005
 12376                           ;	unspecified, using default values
 12377                           ;	WDT Window Select bits
 12378                           ;	WDTCWS = 0x7, unprogrammed default
 12379                           ;	WDT input clock selector
 12380                           ;	WDTCCS = 0x7, unprogrammed default
 12381   300005                     	org	3145733
 12382   300005  FF                 	db	255
 12383                           tosu	equ	0xFFF
 12384                           tosh	equ	0xFFE
 12385                           tosl	equ	0xFFD
 12386                           stkptr	equ	0xFFC
 12387                           pclatu	equ	0xFFB
 12388                           pclath	equ	0xFFA
 12389                           pcl	equ	0xFF9
 12390                           tblptru	equ	0xFF8
 12391                           tblptrh	equ	0xFF7
 12392                           tblptrl	equ	0xFF6
 12393                           tablat	equ	0xFF5
 12394                           prodh	equ	0xFF4
 12395                           prodl	equ	0xFF3
 12396                           indf0	equ	0xFEF
 12397                           postinc0	equ	0xFEE
 12398                           postdec0	equ	0xFED
 12399                           preinc0	equ	0xFEC
 12400                           plusw0	equ	0xFEB
 12401                           fsr0h	equ	0xFEA
 12402                           fsr0l	equ	0xFE9
 12403                           wreg	equ	0xFE8
 12404                           indf1	equ	0xFE7
 12405                           postinc1	equ	0xFE6
 12406                           postdec1	equ	0xFE5
 12407                           preinc1	equ	0xFE4
 12408                           plusw1	equ	0xFE3
 12409                           fsr1h	equ	0xFE2
 12410                           fsr1l	equ	0xFE1
 12411                           bsr	equ	0xFE0
 12412                           indf2	equ	0xFDF
 12413                           postinc2	equ	0xFDE
 12414                           postdec2	equ	0xFDD
 12415                           preinc2	equ	0xFDC
 12416                           plusw2	equ	0xFDB
 12417                           fsr2h	equ	0xFDA
 12418                           fsr2l	equ	0xFD9
 12419                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     66      78
    BANK0           160     22     142
    BANK1           256     20      20
    BANK2           256      0     122
    BANK3           256    256     256
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK3[1]), 

    color_calibration@blue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@blue(BANK3[6]), 

    color_calibration@green	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@green(BANK3[6]), 

    color_calibration@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK3[6]), 

    color_calibration@lightblue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@lightblue(BANK3[6]), 

    color_calibration@orange	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@orange(BANK3[6]), 

    color_calibration@pink	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@pink(BANK3[6]), 

    color_calibration@red	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@red(BANK3[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK3[8]), 

    color_calibration@white	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@white(BANK3[6]), 

    color_calibration@yellow	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@yellow(BANK3[6]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK3[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK3[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK3[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK3[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK3[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK3[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK3[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    reverseShort@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    reverseShort@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    rgb_2_hsv@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK3[6]), 

    S33DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S33DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), main@motorR(BANK3[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    wallAdjust@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    wallAdjust@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_detect
    _wallAdjust->_setMotorPWM
    _move->_returnHome
    _reverseShort->_setMotorPWM
    _returnHome->_reverseOneSquare
    _returnHome->_turnLeft
    _returnHome->_turnRight
    _lostReturnHome->_reverseOneSquare
    _lostReturnHome->_turnLeft
    _lostReturnHome->_turnRight
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_rgb_2_hsv
    _rgb_2_hsv->___aldiv
    ___lldiv->___lmul
    ___aldiv->___lmul
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_rgb_2_hsv
    _color_calibration->_rgb_2_hsv

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_color_calibration

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               268   268      0  312897
                                             64 COMRAM     2     2      0
                                              0 BANK3    256   256      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
                   _color_click_init
                       _color_detect
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                          _rgb_2_hsv
                               _stop
                         _wallAdjust
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _wallAdjust                                          15     9      6    6267
                                             26 COMRAM    15     9      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _move                                                18     2     16  143820
                                             60 COMRAM     2     2      0
                                              0 BANK0     16     0     16
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                       _reverseShort
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _reverseShort                                        14     8      6    8215
                                             26 COMRAM    14     8      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          20     5     15   70772
                                             40 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      20     5     15   69720
                                             40 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    6171
                                             26 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    14     7      7    7672
                                             26 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2     102
                                              7 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    8747
                                             26 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        57     3     54    2673
                                              7 COMRAM    57     3     54
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    1967
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0    1064
                                             11 COMRAM     1     1      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     903
                                              9 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20   14164
                                             55 COMRAM     2     2      0
                                              0 BANK1     20     0     20
                         _color_read
                          _rgb_2_hsv
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      31
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rgb_2_hsv                                           44    34     10    9453
                                             33 COMRAM    22    12     10
                                              0 BANK0     22    22      0
                            ___aldiv
                            ___lldiv
                             ___lmul
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (2) _min                                                  4     0      4     484
                                              7 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _max                                                  4     0      4     484
                                              7 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2436
                                              7 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1141
                                             19 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1525
                                             19 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2    1548
                                             11 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      31
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      65
                                              8 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   43134
                                             40 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   16160
                                             26 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   25160
                                             26 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3981
                                             20 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     472
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     481
                                             13 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     758
                                             15 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              7 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      34
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0     356
                                              5 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (7) i2_color_clear_init_interrupts                        5     5      0     334
                                              4 COMRAM     1     1      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _rgb_2_hsv
       ___aldiv
         ___lmul (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _max
       _min
     _white_Light
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_writetoaddr
   _color_detect
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _reverseShort
       _setMotorPWM
     _turnLeft
     _turnRight
   _resetTimer
   _rgb_2_hsv
   _stop
   _wallAdjust
     _setMotorPWM
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100    100     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      7A       9       47.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      14       7        7.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     42      4E       1       83.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26A      66        0.0%
DATA                 0      0     26A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 13:17:05 2024

                          _white_Light 503E                                     l91 2A0E  
                                   l93 2A1C                           ___awdiv@sign 000D  
                  ___wmul@multiplicand 000A          wallAdjust@wallReverseDuration 0025  
                     main@turnDuration 03DD                      ??_Interrupts_init 0008  
                                  l102 2E7E                                    l200 2944  
                                  l203 4F20                                    l204 4F28  
                                  l140 4D22                                    l301 4ED0  
                                  l222 335C                                    l151 3E0E  
                                  l143 5080                                    l208 4EF4  
                                  l209 4EFC                                    l217 32C6  
                                  l137 4E9A                                    l146 505A  
                                  l252 4F7C                                    l148 5060  
                                  l261 517E                                    l181 2458  
                                  l173 3C20                                    l270 4E62  
                                  l190 267A                                    l182 2500  
                                  l158 3C1E                                    l255 4FA2  
                                  l191 2722                                    l352 513E  
                                  l440 50F8                                    l264 516A  
                                  l184 250E                                    l176 2394  
                                  l193 2730                                    l185 25B6  
                                  l249 4F52                                    l258 5174  
                                  l194 27D8                                    l178 23A2  
                                  l443 50FC                                    l267 514A  
                                  l187 25C4                                    l179 244A  
                                  l196 27E6                                    l188 266C  
                                  l604 230E                                    l445 510A  
                                  l461 4E20                                    l197 288E  
                                  l701 35CC                                    l446 5110  
                                  l622 4906                                    l614 2388  
                                  l710 36DC                                    l631 44B2  
                                  l199 289C                                    l457 4E08  
                                  l545 46F2                                    l633 44D6  
                                  l393 50DE                                    l713 371E  
                                  l705 3636                                    l458 4E0A  
                                  l650 4302                                    l538 4BE2  
                                  l730 3FF8                                    l722 3F10  
                                  l459 4E1E                                    l627 4448  
                                  l619 48C4                                    l707 365A  
                                  l636 4558                                    l644 4274  
                                  l724 3F34                                    l564 162A  
                                  l653 4384                                    l661 499E  
                                  l573 1C6C                                    l742 38A8  
                                  l734 3808                                    l670 408C  
                                  l718 3EA6                                    l639 4586  
                                  l743 3998                                    l727 3FB6  
                                  l656 43B2                                    l648 42DE  
                                  l745 39B8                                    l665 49EA  
                                  l738 3824                                    l762 4F7A  
                                  l682 41DE                                    l674 40F6  
                                  l739 385A                                    l579 1C6C  
                                  l691 3466                                    l756 50A0  
                                  l844 47FE                                    l676 411A  
                                  l765 4FF0                                    l589 1CE6  
                                  l693 348A                                    l598 230E  
                                  l759 5160                                    l679 419C  
                                  l687 33FC                                    l792 4B42  
                                  l776 4CB0                                    l696 350C  
                                  l777 4CC0                                    l799 4B52  
                                  l996 4AAE                                    _max 4EFE  
                                  _min 4ED2                        color_detect@HSV 0008  
                        ?_color_detect 0008                                    prod 0FF3  
                  i2_color_writetoaddr 50A2                                    wreg 0FE8  
                      color_detect@red 000E                                   l1263 4C56  
                                 l1256 4C4E                                   l5000 3FA4  
                                 l5010 162C                                   l5002 3FB2  
                                 l5100 1BBA                                   l5020 16F4  
                                 l5012 164C                                   l5004 3FDA  
                                 l5102 1BD8                                   l5030 1776  
                                 l5022 170C                                   l5014 1664  
                                 l5120 49EC                                   l5200 4B54  
                                 l5112 1C88                                   l5104 1BF8  
                                 l5040 17D4                                   l5032 177E  
                                 l5024 1728                                   l5016 169C  
                                 l5008 3FE4                                   l5130 4A18  
                                 l5122 49F0                                   l5210 4BBC  
                                 l5202 4B64                                   l5114 1C8C  
                                 l5106 1C10                                   l5050 18A2  
                                 l5042 1810                                   l5034 1780  
                                 l5026 172C                                   l5018 16BC  
                                 l5140 4A46                                   l5132 4A20  
                                 l5124 49FE                                   l4500 4F7C  
                                 l5300 26C4                                   l5220 4BD6  
                                 l5212 4BBE                                   l5204 4B8A  
                                 l5116 1CBE                                   l5108 1C48  
                                 l5060 1950                                   l5052 18C0  
                                 l5044 182E                                   l5036 179C  
                                 l5028 175E                                   l5150 4A80  
                                 l5142 4A4E                                   l5134 4A24  
                                 l5126 4A06                                   l5230 4E02  
                                 l4510 4BE4                                   l4502 4F8C  
                                 l5310 2740                                   l5302 26E6  
                                 l5222 4BE0                                   l5214 4BC8  
                                 l5206 4B8E                                   l5070 19FA  
                                 l5062 1988                                   l5054 18E0  
                                 l5046 184E                                   l5038 17BC  
                                 l5118 1CD6                                   l5160 4AA6  
                                 l5152 4A82                                   l5144 4A5C  
                                 l5136 4A2C                                   l5128 4A0A  
                                 l5232 4E18                                   l5224 4DD4  
                                 l4520 4C1C                                   l4512 4BEC  
                                 l4504 4FCC                                   l5320 27D4  
                                 l5312 2762                                   l5304 2706  
                                 l5240 23B2                                   l5400 3A06  
                                 l5216 4BCA                                   l5208 4BB2  
                                 l4600 489A                                   l5080 1A94  
                                 l5072 1A32                                   l5056 18F8  
                                 l5064 19A4                                   l5048 1866  
                                 l5154 4A88                                   l5146 4A62  
                                 l5138 4A3E                                   l5226 4DDE  
                                 l4530 4C48                                   l4522 4C22  
                                 l4514 4BFE                                   l4506 4FE8  
                                 l5330 2852                                   l5322 27EA  
                                 l5314 277A                                   l5306 271E  
                                 l5250 2446                                   l5242 23D4  
                                 l5234 238A                                   l5170 4E72  
                                 l5410 3A96                                   l5402 3A28  
                                 l5218 4BD4                                   l4602 48A6  
                                 l5090 1B26                                   l5082 1AAC  
                                 l5066 19C2                                   l5058 1930  
                                 l5164 4E9C                                   l5180 508A  
                                 l5148 4A78                                   l5156 4A8E  
                                 l5228 4DF4                                   l4524 4C38  
                                 l4516 4C06                                   l4700 441E  
                                 l4620 4E24                                   l4532 516C  
                                 l4540 5162                                   l5340 28CE  
                                 l5332 2872                                   l5324 27F6  
                                 l5316 279C                                   l5308 2734  
                                 l5260 24C4                                   l5252 245C  
                                 l5244 23EC                                   l5236 2390  
                                 l5172 4E82                                   l5420 3B0C  
                                 l5412 3A9E                                   l5404 3A4A  
                                 l4604 48B2                                   l4612 48F2  
                                 l5092 1B46                                   l5084 1AE4  
                                 l5068 19E2                                   l5076 1A56  
                                 l5500 3596                                   l5182 5094  
                                 l5158 4A9E                                   l4526 4C40  
                                 l4518 4C0E                                   l4550 460C  
                                 l4702 442A                                   l4710 4470  
                                 l5350 3720                                   l4630 4E60  
                                 l4622 4E28                                   l4534 5170  
                                 l4542 5166                                   l5342 28E6  
                                 l5334 288A                                   l5326 2818  
                                 l5318 27BC                                   l5270 2540  
                                 l5262 24E4                                   l5254 2468  
                                 l5246 240E                                   l5238 23A6  
                                 l4614 5064                                   l5174 4E8C  
                                 l5166 4E64                                   l5430 3B82  
                                 l5422 3B2E                                   l5414 3AC0  
                                 l5406 3A52                                   l5190 50CC  
                                 l4606 48C0                                   l5094 1B5E  
                                 l5078 1A74                                   l5510 35F0  
                                 l5502 35A2                                   l5184 509E  
                                 l4528 4C42                                   l4552 4610  
                                 l4544 4588                                   l4712 4494  
                                 l4704 4436                                   l5360 3816  
                                 l5352 3748                                   l4624 4E30  
                                 l4616 5176                                   l4536 5142  
                                 l4800 4AD6                                   l4640 4ED2  
                                 l5344 2908                                   l5336 28A0  
                                 l5328 2830                                   l5280 25C8  
                                 l5272 2558                                   l5264 24FC  
                                 l5256 248A                                   l5248 242E  
                                 l5176 4E96                                   l5168 4E68  
                                 l5440 3C12                                   l5432 3BA4  
                                 l5424 3B36                                   l5416 3AE2  
                                 l5408 3A74                                   l5192 50CE  
                                 l4560 4908                                   l4608 48E8  
                                 l5096 1B96                                   l5088 1B08  
                                 l5600 1202                                   l5520 3660  
                                 l5504 35AE                                   l5512 35F4  
                                 l5186 512A                                   l5178 5082  
                                 l4554 4652                                   l4546 45A4  
                                 l4730 4546                                   l4722 44EE  
                                 l4714 44A0                                   l4706 4444  
                                 l4650 420A                                   l5370 3872  
                                 l5362 3832                                   l5354 3760  
                                 l4626 4E38                                   l4618 517A  
                                 l4538 5146                                   l4810 4B20  
                                 l4802 4ADE                                   l4634 4EFE  
                                 l4642 4EE8                                   l5346 2928  
                                 l5338 28AC                                   l5290 2650  
                                 l5282 25D4                                   l5274 257A  
                                 l5266 2512                                   l5258 24A2  
                                 l5442 3C1A                                   l5434 3BC6  
                                 l5426 3B58                                   l5418 3AEA  
                                 l5194 50D8                                   l4570 4980  
                                 l4562 4928                                   l5610 12A0  
                                 l5602 1214                                   l5530 36BE  
                                 l5514 3618                                   l5506 35BA  
                                 l5450 3376                                   l4556 466E  
                                 l4548 45F8                                   l4732 4554  
                                 l4724 4522                                   l4716 44AE  
                                 l4708 446C                                   l4660 4270  
                                 l4652 423E                                   l5380 38D4  
                                 l5372 3874                                   l5364 384A  
                                 l5356 37A0                                   l4628 4E5E  
                                 l4820 46F8                                   l4812 4B30  
                                 l4804 4AEA                                   l4636 4F14  
                                 l4900 3208                                   l5348 2940  
                                 l5292 2668                                   l5284 25F6  
                                 l5276 259A                                   l5268 251E  
                                 l5436 3BCE                                   l5428 3B7A  
                                 l5196 50DA                                   l5188 50C2  
                                 l4572 498C                                   l4564 4934  
                                 l4580 5158                                   l4740 4016  
                                 l5700 1ED0                                   l5620 133E  
                                 l5612 12D8                                   l5604 1230  
                                 l5532 36CA                                   l5540 370A  
                                 l5524 3672                                   l5516 3624  
                                 l5508 35C8                                   l5460 33EA  
                                 l5452 3392                                   l4558 46B2  
                                 l4734 457C                                   l4726 452E  
                                 l4718 44DC                                   l4670 42DA  
                                 l4662 4298                                   l4654 424A  
                                 l4646 41E0                                   l5390 39B4  
                                 l5382 38EC                                   l5374 388C  
                                 l5366 3854                                   l5358 37C8  
                                 l4830 4738                                   l4822 4706  
                                 l4814 4B32                                   l4806 4AF8  
                                 l4902 3220                                   l4910 5040  
                                 l5294 267E                                   l5286 260E  
                                 l5278 25B2                                   l5438 3BF0  
                                 l5198 50DC                                   l4574 499A  
                                 l4566 4968                                   l4582 4F54  
                                 l4750 407A                                   l4742 4022  
                                 l4590 4800                                   l5710 1F82  
                                 l5702 1EF0                                   l5630 13FE  
                                 l5622 1356                                   l5614 12F0  
                                 l5606 1248                                   l5550 0E80  
                                 l5542 0E02                                   l5534 36D8  
                                 l5526 36A6                                   l5518 3632  
                                 l5470 3454                                   l5462 33F8  
                                 l5454 33C6                                   l5446 335E  
                                 ?_max 0008                                   l4728 453A  
                                 l4680 435A                                   l4672 4308  
                                 l4656 4256                                   l4664 429C  
                                 l4648 41FE                                   l5384 392C  
                                 l5376 389A                                   l5368 3868  
                                 l4840 4776                                   l4832 473C  
                                 l4824 4716                                   l4816 4B3C  
                                 l4808 4B02                                   l4904 331E  
                                 l4912 5050                                   l5296 268A  
                                 l5288 2630                                   l4920 4F3C  
                                 l5392 39BA                                   l4576 49C2  
                                 l4568 4974                                   l4584 4F60  
                                 l4760 40E4                                   l4752 4088  
                                 l4744 4056                                   l4592 4848  
                                 l5712 1F9A                                   l5720 2046  
                                 l5704 1F08                                   l5640 149C  
                                 l5624 138E                                   l5632 141E  
                                 l5608 1280                                   l5616 1310  
                                 l5560 0F1E                                   l5552 0EA0  
                                 l5544 0E14                                   l5536 3700  
                                 l5528 36B2                                   l5480 34D6  
                                 l5472 3462                                   l5464 3420  
                                 l5456 33D2                                   l5448 3366  
                                 l5800 29A6                                   l4682 4366  
                                 l4666 42C0                                   l4658 4262  
                                 l5386 3954                                   l5378 38AC  
                                 l4850 47BE                                   l4842 4784  
                                 l4834 474C                                   l4826 471A  
                                 l4818 46F4                                   l4906 333C  
                                 l5298 26AC                                   l4922 4F3E  
                                 l4914 4F2A                                   l4930 4CD6  
                                 l5394 39BA                                   l4578 49C6  
                                 l4586 4F72                                   l4770 4166  
                                 l4762 40F2                                   l4754 40B0  
                                 l4746 4062                                   l4738 3FFA  
                                 l5722 2064                                   l5714 1FD2  
                                 l5706 1F44                                   l5650 153E  
                                 l5642 14BC                                   l5634 1430  
                                 l5626 13AE                                   l5618 1322  
                                 l5570 0FDC                                   l5562 0F56  
                                 l5546 0E30                                   l5554 0ED8  
                                 l5490 3530                                   l5482 34E2  
                                 l5474 3490                                   l5458 33DE  
                                 l5466 3424                                   l5810 29C6  
                                 l5802 29AA                            main@curMove 03DA  
                                 l4692 43B4                                   l4684 4372  
                                 l4676 431A                                   l4668 42CC  
                                 l5388 399C                                   l4852 47C8  
                                 l4844 478E                                   l4836 4762  
                                 l4828 4728                                   l4908 3348  
                                 l4924 4F40                                   l4916 4F34  
                                 l4940 4D0E                                   l4932 4CE0  
                                 l5396 39DC                                   l4780 41C0  
                                 l4772 4172                                   l4764 4120  
                                 l4748 406E                                   l4756 40B4  
                                 l4596 485A                                   l5740 2186  
                                 l5724 2084                                   l5732 20F8  
                                 l5716 1FF2                                   l5708 1F62  
                                 l5660 15EA                                   l5652 155A  
                                 l5644 14F4                                   l5636 144C  
                                 l5628 13E6                                   l5580 109C  
                                 l5572 0FF4                                   l5564 0F76  
                                 l5556 0EEA                                   l5548 0E48  
                                 l5484 34EE                                   l5468 3448  
                                 l5900 2DE0                                   l5820 29DE  
                                 l5812 29CA                                   l5804 29AE  
                                 ?_min 0008                                   l4950 50F4  
                                 l4694 43D2                                   l4686 4380  
                                 l4678 434E                                   l4870 3CCC  
                                 l4862 3C22                                   l4846 47AC  
                                 l4838 476A                                   l4854 47CE  
                                 l4790 4C76                                   l4918 4F3A  
                                 l4942 4D18                                   l4934 4CF0  
                                 l4926 4CC2                                   l5398 39FE  
                                 l4774 417E                                   l4758 40D8  
                                 l4598 488E                                   l5750 2200  
                                 l5734 2116                                   l5726 209C  
                                 l5718 202A                                   l5670 1D5C  
                                 l5662 1CE8                                   l5654 1572  
                                 l5646 150C                                   l5638 1464  
                                 l5590 113A                                   l5582 10D4  
                                 l5574 102C                                   l5558 0F06  
                                 l5566 0FAE                                   l5486 34FA  
                                 l5494 353A                                   l5478 34A2  
                                 l5902 2DF0                                   l5910 2E58  
                                 l5830 29FA                                   l5822 29E6  
                                 l5814 29CE                                   l5806 29B6  
                                 l4952 50F6                                   l4944 50E0  
                                 l4696 43DE                                   l4688 43A8  
                                 l4872 3D2C                                   l4864 3C3C  
                                 l4856 47DE                                   l4848 47BC  
                                 l4792 4C86                                   l4880 2E82  
                                 l4936 4CFA                                   l4928 4CD6  
                                 l4776 418A                                   l4784 41CA  
                                 l4768 4132                                   l5760 229A  
                                 l5752 2238                                   l5736 2136  
                                 l5744 21AA                                   l5728 20D4  
                                 l5680 1DEC                                   l5672 1D7C  
                                 l5664 1CEC                                   l4960 3E10  
                                 l5656 15B6                                   l5648 152C  
                                 l5592 1172                                   l5576 104C  
                                 l5568 0FC0                                   l5584 10F4  
                                 l5496 3556                                   l5488 3508  
                                 l5912 2E6C                                   l5904 2DF4  
                                 l5840 2A24                                   l5832 29FE  
                                 l5824 29EE                                   l5816 29D2  
                                 l5808 29BE                                   l4954 50FA  
                                 l4946 50EA                                   l4698 4412  
                                 l4874 3D4A                                   l4866 3C56  
                                 l4858 47EE                                   l4794 4C90  
                                 l4786 4C58                                   l4890 3082  
                                 l4882 2FD6                                   l4938 4D04  
                                 l4778 4198                                   l5770 232E  
                                 l5762 22B2                                   l5746 21C8  
                                 l5738 214E                                   l5690 1E22  
                                 l5682 1DF0                                   l5674 1DB4  
                                 l5666 1D0C                                   l4970 3E7C  
                                 l4962 3E14                                   l5658 15D2  
                                 l5594 1192                                   l5586 1106  
                                 l5578 1084                                   l5498 3562  
                                 l5906 2E4C                                   l5850 2AE0  
                                 l5842 2A3C                                   l5834 2A02  
                                 l5826 29F2                                   l5818 29D6  
                                 l4956 510E                                   l4948 50F2  
                                 l4876 3DAA                                   l4868 3CAE  
                                 l4796 4AB0                                   l4788 4C68  
                                 l4892 3098                                   l4884 2FF0  
                                 l5772 2360                                   l5764 22EA  
                                 l5748 21E8                                   l5756 225C  
                                 l5692 1E3E                                   l5684 1E00  
                                 l5676 1DCC                                   l5668 1D24  
                                 l4972 3E88                                   l4980 3ECE  
                                 l4964 3E22                                   l5596 11CA  
                                 l5588 1122                                   l5908 2E50  
                                 l5860 2BBC                                   l5852 2B8A  
                                 l5844 2A92                                   l5836 2A06  
                                 l5828 29F6                                   l5780 2952  
                                 l4878 3DC8                                   l4798 4AC0  
                                 l4894 30FA                                   l4886 3008  
                                 l5758 227A                                   l5694 1E5E  
                                 l5774 2378                                   l5686 1E18  
                                 l5678 1DE8                                   l4982 3EF2  
                                 l4974 3E94                                   l4966 3E3C  
                                 l5598 11E2                                   l5870 2BFC  
                                 l5862 2BD4                                   l5854 2B90  
                                 l5846 2AB6                                   l5838 2A0A  
                                 l5790 2988                                   l5782 296A  
                                 l4888 301E                                   l4896 3156  
                                 l5768 232A                                   l5696 1E76  
                                 l5688 1E20                                   l4992 3F4C  
                                 l4984 3EFE                                   l4976 3EA2  
                                 l4968 3E70                                   l5880 2C98  
                                 l5872 2C0C                                   l5864 2BF0  
                                 l5856 2BA8                                   l5848 2AC2  
                                 l5792 298C                                   l5784 2970  
                                 l5776 2946                                   l4898 316E  
                                 l5698 1EB2                                   l4994 3F80  
                                 l4986 3F0C                                   l4978 3ECA  
                                 l5890 2DAC                                   l5882 2D42  
                                 l5874 2C1C                                   l5866 2BF4  
                                 l5858 2BB4                                   l5794 2990  
                                 l5786 2980                                   l5778 2952  
                                 l4996 3F8C                                   l4988 3F3A  
                                 l5892 2DC4                                   l5884 2D52  
                                 l5876 2C6E                                   l5868 2BF8  
                                 l5796 2994                                   l5788 2984  
                                 l4998 3F98                                   l5894 2DC8  
                                 l5886 2D98                                   l5878 2C7A  
                                 l5798 29A0                                   l5896 2DCC  
                                 l5888 2DA4                                   l5898 2DDC  
                                 u4000 4B20                color_calibration@orange 010E  
                         _BAUD4CONbits 0EE9                                   u4001 4B1C  
                                 u4010 4706                                   u4011 4702  
                                 u4020 4728                                   u4100 316E  
                                 u4021 4724                                   u4101 316A  
                                 u4030 4762                                   u4110 3220  
                                 u4031 475E                                   u4111 321C  
                                 u4040 4784                                   u5000 2116  
                                 u4200 3FDA                                   u4041 4780  
                                 u5001 2112                                   u4201 3FD6  
                                 u4050 47AC                                   u4130 333C  
                                 u5010 21C8                                   u4210 175E  
                                 _T2PR 0FBC                                   u4051 47A8  
                                 u4131 3338                                   u5011 21C4  
                                 u4211 175A                                   u4060 47DE  
                                 u4140 5050                                   u5020 227A  
                                 u4300 1CE6                                   u4220 179C  
                                 u4061 47DA                                   u4125 323E  
                                 u4141 504C                                   u5021 2276  
                                 u4301 1CE2                                   u4221 1798  
                                 u5101 2AEA                                   u4150 510A  
                                 u4310 49FE                                   u4070 3008  
                                 u5030 2360                                   u4230 182E  
                                 u4151 5106                                   u4311 49FA  
                                 u4071 3004                                   u5031 235C  
                                 u4231 182A                                   u5111 2AFC  
                                 u4320 4A18                                   u4080 301E  
                                 u5040 2388                                   u4240 18C0  
                                 u4160 3ECA                                   u4321 4A14  
                                 u4081 301A                                   u4401 23C0  
                                 u5041 2384                                   u4241 18BC  
                                 u4161 3EC6                                   u5121 2B0E  
                                 u4330 4A3E                                   u4090 3098  
                                 u4410 2458                                   u4250 19C2  
                                 u4170 3EF2                                   u4331 4A3A  
                                 u4091 3094                                   u4411 2454  
                                 u4251 19BE                                   u4171 3EEE  
                                 u5211 2C84                                   u5131 2B20  
                                 u5051 294C                                   u4340 4A5C  
                                 u3700 4C38                                   u4260 1A74  
                                 u4180 3F34                                   u4341 4A58  
                                 u3701 4C34                                   u4501 274E  
                                 u4421 2476                                   u4261 1A70  
                                 u4181 3F30                                   u5301 2D32  
                                 u5221 2CA2                                   u5205 2C18  
                                 u5141 2B32                                   u5061 2958  
                                 u4350 4A78                                   u3710 45A4  
                                 u4510 27E6                                   u4430 250E  
                                 u4270 1B26                                   u4190 3F48  
                                 u4351 4A74                                   u3711 45A0  
                                 u4511 27E2                                   u4431 250A  
                                 u6007 1DBE                                   u4271 1B22  
                                 u4191 3F44                                   u5231 2CB4  
                                 u5207 2C1C                                   u5151 2B44  
                                 u5071 2964                                   u4360 4A9E  
                                 u3720 466E                                   u4600 389A  
                                 u3800 4EE8                                   u4280 1BD8  
                                 u5320 2DF0                                   u5080 2A1C  
                                 u4361 4A9A                                   u3721 466A  
                                 u4601 3896                                   u3801 4EE4  
                                 u4521 2804                                   u4441 252C  
                                 u6017 1E68                                   u4281 1BD4  
                                 u5321 2DEC                                   u5241 2CC6  
                                 u5161 2B56                                   u5081 2A18  
                                 u4370 4E02                                   u3810 4298  
                                 u4530 289C                                   u4450 25C4  
                                 u4610 39DC                                   u3730 49C2  
                                 u4290 1CBE                                   u5330 2E6C  
                                 u4371 4DFE                                   u3811 4294  
                                 u4531 2898                                   u4451 25C0  
                                 u4611 39D8                                   u3731 49BE  
                                 u6107 20C6                                   u6027 1EA0  
                                 u4291 1CBA                                   u5331 2E68  
                                 u5315 2DD8                                   u5251 2CD8  
                                 u5171 2B68                                   u5091 2ACC  
                                 u4380 4E18                                   u3900 457C  
                                 u3820 42C0                                   u3660 4F8C  
                                 u4700 3B2E                                   u4620 39FE  
                                 u3740 49EA                                   u5340 2E7E  
                                 u4381 4E14                                   u3901 4578  
                                 u3821 42BC                                   u3661 4F88  
                                 u4541 28BA                                   u4461 25E2  
                                 u4701 3B2A                                   u4621 39FA  
                                 u3741 49E6                                   u6117 2140  
                                 u6037 1EFA                                   u5341 2E7A  
                                 u5317 2DDC                                   u5261 2CEA  
                                 u5181 2B7A                                   u3830 4302  
                                 u4550 3816                                   u3670 4FA2  
                                 u4470 267A                                   u4390 23A2  
                                 u4710 3B58                                   u4630 3A28  
                                 u3910 40B0                                   u3750 4856  
                                 u5190 2C0C                                   u3831 42FE  
                                 u4551 3812                                   u3671 4F9E  
                                 u4471 2676                                   u4391 239E  
                                 u4711 3B54                                   u4631 3A24  
                                 u6207 4190                                   u3911 40AC  
                                 u3751 4852                                   u6127 2178  
                                 u6047 1F32                                   u5407 345A  
                                 u5271 2CFC                                   u5191 2C08  
                                 u3680 4BFE                                   u3840 4316  
                                 u4560 3824                                   u4720 3B7A  
                                 u4640 3A4A                                   u3920 40D8  
                                 u3760 48E8                                   u4800 349E  
                                 u3681 4BFA                                   u3841 4312  
                                 u4561 3820                                   u4481 2698  
                                 u4721 3B76                                   u4641 3A46  
                                 u6217 4992                                   u3921 40D4  
                                 u3761 48E4                                   u6137 21F2  
                                 u6057 1F8C                                   u5417 3500  
                                 u4801 349A                                   u5281 2D0E  
                                 u3690 4C1C                                   u3850 43A8  
                                 u4570 3832                                   u3770 4E4C  
                                 u4490 2730                                   u4730 3BA4  
                                 u4650 3A74                                   u3930 411A  
                                 u4810 3530                                   u3691 4C18  
                                 u3851 43A4                                   u4571 382E  
                                 u3771 4E44                                   u6307 287C  
                                 u4491 272C                                   u6227 4E78  
                                 u4731 3BA0                                   u4651 3A70  
                                 u3931 4116                                   u6147 222A  
                                 u6067 1FC4                                   u5507 0F80  
                                 u5427 35C0                                   u4811 352C  
                                 u5291 2D20                                   u3860 446C  
                                 u4580 384A                                   u4740 3BC6  
                                 u4660 3A96                                   u3940 412E  
                                 u4900 1106                                   u4820 35F0  
                                 u3861 4468                                   u4581 3846  
                                 u6317 2932                                   u6237 4CE6  
                                 u4741 3BC2                                   u4661 3A92  
                                 u3941 412A                                   u6157 22A4  
                                 u6077 1FFC                                   u4901 1102  
                                 u5517 0FE6                                   u5437 362A  
                                 u4821 35EC                                   u5357 2A2E  
                                 u3870 4494                                   u4590 3868  
                                 u3790 4F14                                   u4750 3BF0  
                                 u4670 3AC0                                   u3950 41C0  
                                 u4910 1214                                   u4830 3618  
                                 u3871 4490                                   u6407 4268  
                                 u4591 3864                                   u6327 3752  
                                 u3791 4F10                                   u6247 2438  
                                 u4751 3BEC                                   u4671 3ABC  
                                 u3951 41BC                                   u6167 22DC  
                                 u6087 2034                                   u5607 123A  
                                 u4911 1210                                   u5527 101E  
                                 u5447 36D0                                   u4831 3614  
                                 u5367 2B9A                                   u3880 44D6  
                                 u3960 4C76                                   u4760 3C12  
                                 u4680 3AE2                                   u4920 1322  
                                 u4840 365A                                   u3881 44D2  
                                 u6417 42D2                                   u6337 3792  
                                 u3961 4C72                                   u6257 24EE  
                                 u4761 3C0E                                   u4681 3ADE  
                                 u6177 48B8                                   u6097 208E  
                                 u4921 131E                                   u5617 1272  
                                 u5537 1056                                   u5457 0E3A  
                                 u4841 3656                                   u5377 2BC6  
                                 u3890 44EA                                   u3970 4CB0  
                                 u4690 3B0C                                   u4930 1430  
                                 u4850 366E                                   u4770 3420  
                                 u3891 44E6                                   u6427 4378  
                                 u6347 37D2                                   u3971 4CAC  
                                 u6267 25A4                                   u4691 3B08  
                                 u6187 4080                                   u5707 14C6  
                                 u4931 142C                                   u5627 12AA  
                                 u5547 108E                                   u5467 0E72  
                                 u4851 366A                                   u4771 341C  
                                 u5387 2DB6                                   u3788 4E4E  
                                 u3980 4AD6                                   u4940 153E  
                                 u4860 3700                                   u4780 3448  
                                 u6437 443C                                   u6357 387E  
                                 u3981 4AD2                                   u6277 265A  
                                 u6197 40EA                                   u4941 153A  
                                 u5717 14FE                                   u5637 12E2  
                                 u5557 10C6                                   u5477 0EAA  
                                 u4861 36FC                                   u4781 3444  
                                 u5397 33F0                                   u3990 4AF8  
                                 u4950 1E00                                   u4870 0E14  
                                 u4790 348A                                   u6447 44A6  
                                 u6367 38DE                                   u3991 4AF4  
                                 u6287 2710                                   u4951 1DFC  
                                 u5807 16FE                                   u5727 1564  
                                 u5647 1348                                   u5567 112C  
                                 u5487 0F10                                   u4871 0E10  
                                 u4791 3486                                   u4960 1E3E  
                                 u4880 0EEA                                   u6457 454C  
                                 u6377 391E                                   u6297 27C6  
                                 u4961 1E3A                                   u5817 17C6  
                                 u5737 15DC                                   u5657 1380  
                                 u5577 1164                                   u5497 0F48  
                                 u4881 0EE6                                   u4970 1ED0  
                                 u4890 0FC0                                   u6387 395E  
                                 u4971 1ECC                                   u5907 1A24  
                                 u5827 17FE                                   u5747 3E9A  
                                 u5667 13B8                                   u5587 119C  
                                 u4891 0FBC                                   u4980 1F62  
                                 u6397 39A6                                   u4981 1F5E  
                                 u5917 1A9E                                   u5837 1858  
                                 u5757 3F04                                   u5677 13F0  
                                 u5597 11D4                                   u4990 2064  
                                 u4991 2060                                   u5927 1AD6  
                                 u5847 1890                                   u5767 3FAA  
                                 u5687 1456                                   u5937 1B50  
                                 u5857 18EA                                   u5777 1656  
                                 u5697 148E                                   u5947 1B88  
                                 u5867 1922                                   u5787 168E  
                                 u5957 1C02                                   u5877 195A  
                                 u5797 16C6                                   u5967 1C3A  
                                 u5887 1992                                   u5977 1D16  
                                 u5897 19EC                                   u5987 1D4E  
                                 u5997 1D86                color_calibration@yellow 010A  
          lostReturnHome@straightSpeed 0032                                   _main 2946  
                                 _move 0E02                                   _lost 0043  
                                 _wall 0044                                   fsr1h 0FE2  
                                 fsr2h 0FDA                                   indf2 0FDF  
                                 fsr1l 0FE1                                   fsr2l 0FD9  
                                 max@a 0008                                   max@b 000A  
                                 btemp 004F                                   _stop 4800  
                                 min@a 0008                                   min@b 000A  
                                 prodh 0FF4                                   prodl 0FF3  
                                 start 0092                       color_detect@blue 001A  
                  main@reverseDuration 03A6                       __end_of_ADC_init 50FA  
                 ?i2_color_writetoaddr 0003                       color_detect@pink 0026  
                      __end_of_HighISR 0092                  lostReturnHome@curMove 0031  
                         ___param_bank 0000                   __end_of_batteryLevel 4E22  
                                ??_max 000C                                  ??_min 000C  
                      __end_of___aldiv 4800                                  ?_main 0001  
                                _ADPCH 0F5F                        __end_of___awdiv 4AB0  
                                ?_move 00D8                        __end_of___lldiv 4B54  
                                ?_stop 001B                        ___awdiv@divisor 000A  
                      __end_of___lwdiv 4C58                                  i2l140 4D84  
                                i2l143 50C0                                  i2l401 5016  
                                i2l252 4FA4                                  i2l415 5128  
                                i2l255 4FCA                                  i2l408 503C  
                                i2l264 5188                                  i2l258 5192  
                                i2l362 0086                                  i2l267 5156  
                      ___awdiv@counter 000C                         ??_color_detect 003E  
                                _TMR0H 0FD4                                  _TMR0L 0FD3  
                  ___lmul@multiplicand 000C             __end_of_I2C_2_Master_Start 5176  
           __end_of_I2C_2_Master_Write 514C                             _Buggy_init 4E9C  
           color_calibration@lightblue 0110                 returnHome@straightRamp 0034  
               returnHome@straightTime 002F                                  tablat 0FF5  
                                plusw0 0FEB                                  plusw2 0FDB  
                                ttemp5 0050                                  ttemp6 0053  
                                ttemp7 0057                                  stop@i 0023  
                                status 0FD8                                  wtemp8 0050  
                    color_detect@color 0040                      color_detect@green 0014  
                    color_detect@white 0038                  ??i2_color_writetoaddr 0004  
                         main@turnRamp 03A8                  _I2C_2_Master_RepStart 5176  
                   putCharToRxBuf@byte 0001                        __initialization 4D86  
            get16bitTMR0val@timer_high 000E                           __end_of_main 2E82  
                         __end_of_move 162C                           __end_of_stop 4908  
                  move@reverseDuration 00E3                        _get16bitTMR0val 4F54  
                               ??_main 0041                                 ??_move 003D  
                               ??_stop 0020                          __activetblptr 0000  
                        calibration@mL 0029                          calibration@mR 002B  
               returnHome@turnDuration 0036                           ?_setMotorPWM 0015  
                               _ADRESH 0F64                                 _CCPR1H 0FAA  
                               _CCPR2H 0FA6                                 _CCPR3H 0F25  
                               _CCPR4H 0F21                       ___awdiv@dividend 0008  
               lostReturnHome@turnRamp 0037                                 _RC0PPS 0E62  
                               _RC4REG 0EE3                 wallAdjust@straightRamp 0020  
                               _RE2PPS 0E74                                 _RC7PPS 0E69  
                               _RD5PPS 0E6F                                 _RE4PPS 0E76  
                               _RD6PPS 0E70                                 i2l3034 4FA4  
                               i2l3036 4FB4                                 i2l3340 518A  
                               i2l4300 4D52                                 i2l3342 518E  
                               i2l3350 5152                                 i2l4302 4D5C  
                               i2l3344 5180                                 i2l4304 4D66  
                               i2l3346 5184                                 i2l4306 4D70  
                               i2l3348 514E                                 i2l4308 4D7A  
                               i2l4270 5004                                 i2l4280 502C  
                               i2l4272 5008                                 i2l4274 5014  
                               i2l4276 5018                                 i2l2748 5112  
                               i2l4268 4FF4                                 i2l4292 4D24  
                               i2l4460 0026                                 i2l4278 5028  
                               i2l3654 50A4                                 i2l4294 4D38  
                               i2l4470 0042                                 i2l4462 002A  
                               i2l4296 4D38                                 i2l4480 0082  
                               i2l4472 0050                                 i2l4464 002E  
                               i2l4456 0012                                 i2l4298 4D42  
                               i2l4474 0056                                 i2l4466 003C  
                               i2l4458 0022                                 _RG6PPS 0E88  
                               i2l4476 0066                                 i2l4468 0040  
                               i2l4478 006E                              ??_HighISR 0006  
             __end_of_color_click_init 4E9C                                 _TMR0IE 714D  
                               _TMR0IF 719D                                 _RX4PPS 0E15  
                               _TX4REG 0EE4                          main@lightblue 03CE  
                         ??_ADC_getval 0008                          ??_Timer0_init 0008  
                  calibration@turnRamp 0030                calibration@turnDuration 002E  
                         _CCPTMRS0bits 0FAD                       _getCharFromTxBuf 5018  
                               ___lmul 4C58                              ??___aldiv 001C  
                               ___wmul 4FCC                              ??___awdiv 000C  
                            ??___lldiv 001C                              ??___lwdiv 0012  
                               clear_0 4DAC                                 clear_1 4DB8  
                     ___awdiv@quotient 000E                                 isa$std 0001  
              returnHome@straightSpeed 0032                           __pdataCOMRAM 0049  
                               move@mL 00D8                                 move@mR 00DA  
                         __mediumconst 0000                                 tblptrh 0FF7  
                               tblptrl 0FF6                                 tblptru 0FF8  
                            ?_ADC_init 0001                                 stop@mL 001B  
                               stop@mR 001D                            ?_Buggy_init 0001  
                    ??_initDCmotorsPWM 000A                     __end_of_ADC_getval 5112  
           i2color_writetoaddr@address 0004                       __end_of_turnLeft 4588  
                   color_detect@orange 002C             lostReturnHome@moveSequence 002D  
                __end_of_isDataInTxBuf 512A                             __accesstop 0060  
              __end_of__initialization 4DCA                     color_detect@yellow 0020  
                      fullSpeedAhead@i 0024                          main@turnSpeed 03A7  
               ?_I2C_2_Master_RepStart 0001                          ___rparam_used 0001  
                 __end_of_color_detect 3C22              reverseShort@straightSpeed 001F  
        lostReturnHome@reverseDuration 0033                        _Interrupts_init 512A  
                       __pcstackCOMRAM 0001                __end_of_get16bitTMR0val 4F7C  
                         ?_white_Light 0001               get16bitTMR0val@timer_low 000C  
             get16bitTMR0val@timer_val 0010           ?_color_clear_init_interrupts 0001  
                     _reverseOneSquare 3FFA                    __end_of_Timer0_init 50A2  
                           ??_ADC_init 0008                           rgb_2_hsv@HSV 002A  
                         _batteryLevel 4DD4                             __pbssBANK0 0060  
                           __pbssBANK2 0200                         _rgb_2_hsv$3591 00DE  
                       _rgb_2_hsv$3592 00E0                         _rgb_2_hsv$3593 00D8  
                    _color_writetoaddr 5062                           _T2CLKCONbits 0FBF  
                       _lostReturnHome 1CE8               reverseShort@straightRamp 0020  
                   ?_color_writetoaddr 000A                                ?___lmul 0008  
                              ?___wmul 0008               wallAdjust@adjustDuration 0024  
                       ___lmul@product 0010          ??_color_clear_init_interrupts 000C  
                          move@curMove 00E1                lostReturnHome@turnSpeed 0035  
                  ??_color_writetoaddr 000B                wallAdjust@straightSpeed 001F  
                              _SP4BRGH 0EE6                                _SP4BRGL 0EE5  
           fullSpeedAhead@straightRamp 0020                  turnRight@turnDuration 0020  
                              _SSP2ADD 0ED6                                _SSP2BUF 0ED5  
                           _color_read 3C22                __end_of_Interrupts_init 5140  
               color_writetoaddr@value 000A                                _HighISR 0008  
            __end_of_color_writetoaddr 5082                 __end_of_lostReturnHome 238A  
                            _ADREFbits 0F58                     _I2C_2_Master_Start 516C  
                           _initUSART4 50C2                    i2_I2C_2_Master_Idle 4FA4  
                   _I2C_2_Master_Write 5140                                __Hparam 0000  
                  i2_I2C_2_Master_Stop 5180                                __Lparam 0000  
                          wallAdjust@i 0026                            _Timer0_init 5082  
                 calibration@turnSpeed 002D                       ?_get16bitTMR0val 0008  
                              ___aldiv 46F4                                ___awdiv 49EC  
                      lostReturnHome@i 003C                                ___lldiv 4AB0  
                        ??_calibration 0031                    ?_I2C_2_Master_Start 0001  
                              ___lwdiv 4BE4                    ?_I2C_2_Master_Write 0001  
                         __psmallconst 0E00                                _ambient 004D  
                              __pcinit 4D86                                __ramtop 0E00  
                            ?_turnLeft 001B                      __end_of_rgb_2_hsv 335E  
                              __ptext0 2946                                __ptext1 335E  
                              __ptext2 0E02                                __ptext3 3E10  
                              __ptext4 162C                                __ptext5 1CE8  
                              __ptext6 4800                                __ptext7 3FFA  
                              __ptext8 5158                                __ptext9 4F54  
                 ?i2_I2C_2_Master_Idle 0001                              _T2CONbits 0FBD  
                        ?_reverseShort 001B                   ?i2_I2C_2_Master_Stop 0001  
                     ___aldiv@dividend 0014                              _T2HLTbits 0FBE  
                        _RxBufWriteCnt 0048                                main@HSV 03DE  
             __end_of_getCharFromTxBuf 503E                                main@buf 0300  
                              main@red 03AA                   ??_I2C_2_Master_Start 0009  
                 ??_I2C_2_Master_Write 0009                   end_of_initialization 4DCA  
      ??i2_color_clear_init_interrupts 0005            __end_ofi2_color_writetoaddr 50C2  
                     ADC_getval@tmpval 0008                      reverseOneSquare@i 0025  
                    ?_color_click_init 0001                        ?_lostReturnHome 0029  
                           _wallAdjust 335E                        ___lldiv@divisor 0018  
                           _resetTimer 5158                     ??_color_click_init 000D  
                      ___lldiv@counter 0020                       ___aldiv@quotient 001E  
           batteryLevel@batteryQuarter 0011                                postdec1 0FE5  
                              postdec2 0FDD                                postinc0 0FEE  
                              postinc1 0FE6                                postinc2 0FDE  
           batteryLevel@batteryVoltage 0010                             main@F14650 009C  
                           main@F14654 0252                             main@F14656 0200  
                           main@F14659 0049                             _returnHome 162C  
                      _initDCmotorsPWM 4B54                             ??_turnLeft 0022  
                            _PORTFbits 0F8E                     setMotorPWM@negDuty 001A  
                       ??_reverseShort 0021                  ??i2_I2C_2_Master_Idle 0001  
                        move@turnSpeed 00E5                      __end_of_turnRight 43B4  
                ??i2_I2C_2_Master_Stop 0002                    __end_of_calibration 39BA  
                         _color_detect 39BA                            returnHome@i 003C  
                            _TRISAbits 0F81                     setMotorPWM@posDuty 0019  
                            _TRISBbits 0F82                              _TRISCbits 0F83  
                            _TRISDbits 0F84                              _TRISEbits 0F85  
                            _TRISFbits 0F86                              _TRISGbits 0F87  
                            _TRISHbits 0F88                       white_Light@state 0008  
                         ??_Buggy_init 0008                       fullSpeedAhead@mL 001B  
                     fullSpeedAhead@mR 001D                            ?_color_read 000C  
             color_writetoaddr@address 000B                ??_I2C_2_Master_RepStart 0009  
             __end_of_reverseOneSquare 41E0                       ?_Interrupts_init 0001  
          reverseShort@reverseDuration 0024                          stop@cur_power 0025  
                          _CCP1CONbits 0FAB                 color_calibration@green 0106  
                         _EUSART4RXbuf 00C4                    returnHome@turnSpeed 0035  
                         _EUSART4TXbuf 0060                            _CCP2CONbits 0FA7  
               color_calibration@white 0112                            _CCP3CONbits 0F26  
           lostReturnHome@straightRamp 0034             lostReturnHome@straightTime 002F  
                          ?_initUSART4 0001                             main@orange 03C8  
                          _CCP4CONbits 0F22                             main@motorL 03F6  
                           main@motorR 03EC                             main@yellow 03BC  
                       color_read@RGBC 000C                         _fullSpeedAhead 4908  
                       __end_of___lmul 4CC2                   turnLeft@turnDuration 0020  
                       __end_of___wmul 4FF2                     __end_of_Buggy_init 4ED2  
                        __pidataCOMRAM 5194                    start_initialization 4D86  
                          __end_of_max 4F2A                            __end_of_min 4EFE  
                        _TxBufWriteCnt 0046             lostReturnHome@turnDuration 0036  
                           rgb_2_hsv@b 00EC                             rgb_2_hsv@g 00EA  
                           rgb_2_hsv@r 00E2                       move@moveSequence 00DD  
                  wallAdjust@cur_power 0028  __end_ofi2_color_clear_init_interrupts 4D86  
        i2_color_clear_init_interrupts 4D24                            ?_wallAdjust 001B  
                          ?_resetTimer 0001                __end_of_initDCmotorsPWM 4BE4  
               __end_of_fullSpeedAhead 49EC                     turnRight@cur_power 0027  
                             ??___lmul 0010                          rgb_2_hsv@RGBC 0022  
                             ??___wmul 000C                         _putCharToRxBuf 4FF2  
                        rgb_2_hsv@diff 00E6          i2I2C_2_Master_Write@data_byte 0002  
                          _calibration 3720                          rgb_2_hsv@cmax 00E4  
                        rgb_2_hsv@cmin 00DC                            ?_returnHome 0029  
         reverseOneSquare@straightRamp 0021           __end_ofi2_I2C_2_Master_Start 5194  
         __end_ofi2_I2C_2_Master_Write 5158                      turnLeft@cur_power 0027  
                          __pbssCOMRAM 0043                          __pcstackBANK0 00D8  
                        __pcstackBANK1 0100                          __pcstackBANK3 0300  
                             ?_HighISR 0001                   __end_of_reverseShort 3FFA  
                     stop@straightRamp 001F                       ___lwdiv@dividend 000E  
                         ?_Timer0_init 0001                 __end_of_putCharToRxBuf 5018  
                      ?_fullSpeedAhead 001B                              __pintcode 0008  
                             ?___aldiv 0014                     turnRight@turnSpeed 001F  
                             ?___awdiv 0008                               ?___lldiv 0014  
                             ?___lwdiv 000E                   I2C_2_Master_Read@ack 000A  
                 I2C_2_Master_Read@tmp 000B                            __smallconst 0E00  
                       reverseShort@mL 001B                         reverseShort@mR 001D  
                     main@moveSequence 037E                      _I2C_2_Master_Idle 4F7C  
                    _I2C_2_Master_Init 4F2A                      _I2C_2_Master_Read 4E22  
                    turnLeft@turnSpeed 001F                      _I2C_2_Master_Stop 5162  
                            _rgb_2_hsv 2E82                           _RxBufReadCnt 0047  
                             _ADC_init 50E0                     ?_I2C_2_Master_Idle 0001  
                   ?_I2C_2_Master_Init 0001                     ?_I2C_2_Master_Read 0001  
                        ??_setMotorPWM 0017                     ?_I2C_2_Master_Stop 0001  
                     ___lwdiv@quotient 0013               initDCmotorsPWM@PWMperiod 0008  
                    ?_getCharFromTxBuf 0001                       ??_lostReturnHome 0038  
                   ??_getCharFromTxBuf 0001                      move@straightSpeed 00E2  
                      ___aldiv@divisor 0018                    ??_I2C_2_Master_Idle 0008  
                      ___aldiv@counter 001C                    ??_I2C_2_Master_Init 0008  
                  ??_I2C_2_Master_Read 0009                         ___wmul@product 000C  
                             _LATAbits 0F79                    ??_I2C_2_Master_Stop 0009  
                             _LATCbits 0F7B                          _isDataInTxBuf 5112  
                             _LATDbits 0F7C                               _LATEbits 0F7D  
                             _LATFbits 0F7E                               _LATGbits 0F7F  
                             _LATHbits 0F80                               _IPR0bits 0E1F  
                             _PIE0bits 0E29                               _PIE4bits 0E2D  
                          turnRight@mL 001B                            turnRight@mR 001D  
                             i2u144_40 5126                               i2u144_41 5120  
                             i2u145_40 5128                               i2u326_40 5004  
                             i2u326_41 5000                               i2u327_40 5028  
                             i2u327_41 5024                               _PIR0bits 0E33  
                             i2u192_40 4FB4                               i2u360_40 003C  
                             i2u192_41 4FB0                               i2u360_41 0038  
                             i2u193_40 4FCA                               i2u361_40 0050  
                             i2u193_41 4FC6                               i2u361_41 004C  
                             i2u362_40 0066                               i2u362_41 0062  
                             i2u363_40 0082                               i2u363_41 007E  
                             i2u359_40 0022                               i2u359_41 001E  
                             _PIR4bits 0E37                               i2u646_47 4D48  
                      ?_putCharToRxBuf 0001                       ?_initDCmotorsPWM 0008  
          fullSpeedAhead@straightSpeed 001F    __end_of_color_clear_init_interrupts 4D24  
       ?i2_color_clear_init_interrupts 0001            _color_clear_init_interrupts 4CC2  
                             _SSP2CON2 0EDA                               _SSP2STAT 0ED8  
                         move@turnRamp 00E7                             _ADCON0bits 0F60  
            __end_of_I2C_2_Master_Idle 4FA4                  color_calibration@RGBC 0100  
            __end_of_I2C_2_Master_Init 4F54              __end_of_I2C_2_Master_Read 4E64  
                    ___wmul@multiplier 0008              __end_of_I2C_2_Master_Stop 516C  
                         setMotorPWM@m 0015            I2C_2_Master_Write@data_byte 0009  
                color_calibration@blue 0108                     returnHome@turnRamp 0037  
                            main@color 03DB                  color_calibration@pink 010C  
                            main@green 03B0                              main@white 03D4  
                           ?_rgb_2_hsv 0022                           _TxBufReadCnt 0045  
             i2color_writetoaddr@value 0003                              _turnRight 41E0  
            returnHome@reverseDuration 0033                           ??_color_read 000E  
                    ___lmul@multiplier 0008                              copy_data0 4D9A  
                       ?_isDataInTxBuf 0001          __end_of_I2C_2_Master_RepStart 5180  
                    ?_reverseOneSquare 001B                    __end_of_setMotorPWM 46F4  
                         ??_initUSART4 0008                   i2_I2C_2_Master_Start 518A  
      reverseOneSquare@reverseDuration 0020                   i2_I2C_2_Master_Write 514C  
                   ??_reverseOneSquare 0022                               __Hrparam 0000  
                           _ADC_getval 50FA                       main@testSequence 037A  
                             __Lrparam 0000                           wallAdjust@mL 001B  
                         wallAdjust@mR 001D                          ??_white_Light 0008  
          __end_ofi2_I2C_2_Master_Idle 4FCC            __end_ofi2_I2C_2_Master_Stop 518A  
                     lostReturnHome@mL 0029                       lostReturnHome@mR 002B  
                   __end_of_color_read 3E10                             _ANSELBbits 0E9A  
                           _ANSELDbits 0EA7                             _ANSELFbits 0EB4  
                           _T0CON0bits 0FD5                             _T0CON1bits 0FD6  
                    _color_calibration 238A          reverseOneSquare@straightSpeed 001F  
                      ___lwdiv@divisor 0010                 returnHome@moveSequence 002D  
                   __end_of_initUSART4 50E0                        ___lwdiv@counter 0012  
                    turnRight@turnRamp 0021                             ?_turnRight 001B  
                             __ptext10 4908                               __ptext11 50C2  
                             __ptext20 2E82                               __ptext12 4B54  
                             __ptext21 4ED2                               __ptext13 39BA  
                             __ptext30 5176                               __ptext22 4EFE  
                             __ptext14 4E64                               __ptext31 4E22  
                             __ptext23 4C58                               __ptext15 4CC2  
                             __ptext40 49EC                               __ptext32 4F7C  
                             __ptext24 4AB0                               __ptext16 5062  
                             __ptext41 50E0                               __ptext33 3720  
                             __ptext25 46F4                               __ptext17 4F2A  
                             __ptext50 5180                               __ptext42 50FA  
                             __ptext34 41E0                               __ptext26 3C22  
                             __ptext18 238A                               __ptext51 518A  
                             __ptext43 5082                               __ptext35 43B4  
                             __ptext27 5140                               __ptext19 503E  
                             __ptext52 4FA4                               __ptext44 512A  
                             __ptext36 4588                               __ptext28 5162  
                             __ptext53 4FF2                               __ptext45 4E9C  
                             __ptext37 4FCC                               __ptext29 516C  
                             __ptext54 5112                               __ptext38 4BE4  
                             __ptext55 5018                               __ptext47 4D24  
                             __ptext39 4DD4                               __ptext48 50A2  
                             __ptext49 514C                              move@color 00DC  
                   ?_color_calibration 0100                          ?_batteryLevel 0001  
                         _SSP2CON1bits 0ED9                           _SSP2CON2bits 0EDA  
                        reverseShort@i 0025                       turnLeft@turnRamp 0021  
                reverseShort@cur_power 0027                             turnLeft@mL 001B  
                           turnLeft@mR 001D                    ??_color_calibration 0038  
                ?i2_I2C_2_Master_Start 0001                           ??_wallAdjust 0021  
                     move@straightRamp 00E4                  ?i2_I2C_2_Master_Write 0001  
                     move@straightTime 00DF                      returnHome@curMove 0031  
                         ??_resetTimer 0008                             turnRight@i 0025  
                             isa$xinst 0000                             _RC4STAbits 0EE7  
                             main@RGBC 03E4                               int$flags 004F  
                 color_calibration@HSV 0102                           ?_calibration 0029  
                             main@blue 03B6                   color_calibration@red 0104  
                         ??_returnHome 0038                               main@pink 03C2  
                             _turnLeft 43B4                fullSpeedAhead@cur_power 0026  
                  __end_of_white_Light 5062              __end_of_color_calibration 2946  
                           _INTCONbits 0FF2                           _reverseShort 3E10  
            reverseOneSquare@cur_power 0027                            ??_rgb_2_hsv 002C  
                   __end_of_wallAdjust 3720                     reverseOneSquare@mL 001B  
                   reverseOneSquare@mR 001D                     __end_of_resetTimer 5162  
                     move@turnDuration 00E6                         ??_batteryLevel 0010  
                          _setMotorPWM 4588                      ??_get16bitTMR0val 000A  
                      ??_isDataInTxBuf 0001                               intlevel2 0000  
                     ___lldiv@dividend 0014                       ??_fullSpeedAhead 0021  
                   __end_of_returnHome 1CE8                              turnLeft@i 0025  
                          ?_ADC_getval 0001                      main@straightSpeed 03A9  
                     _color_click_init 4E64                  color_detect@lightblue 0032  
                           _SSP2DATPPS 0E1D                       ___lldiv@quotient 001C  
                           _SSP2CLKPPS 0E1C                           ___aldiv@sign 001D  
                          ??_turnRight 0022                       main@straightRamp 03DC  
                     main@straightTime 0328                             _TX4STAbits 0EE8  
               ??i2_I2C_2_Master_Start 0002                 ??i2_I2C_2_Master_Write 0002  
                     ??_putCharToRxBuf 0001                           returnHome@mL 0029  
                         returnHome@mR 002B  
