

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Mar 10 20:40:02 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Generated 21/07/2023 GMT
    73                           ; 
    74                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F67K40 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106   000000                     
   107                           	psect	idataCOMRAM
   108   003BB2                     __pidataCOMRAM:
   109                           	callstack 0
   110                           
   111                           ;initializer for _ambient
   112   003BB2  01F4               	dw	500
   113                           
   114                           	psect	idataBANK1
   115   003BAE                     __pidataBANK1:
   116                           	callstack 0
   117                           
   118                           ;initializer for main@F14616
   119   003BAE  04                 	db	4
   120   003BAF  03                 	db	3
   121   003BB0  09                 	db	9
   122   003BB1  08                 	db	8
   123   000000                     _TRISCbits	set	3971
   124   000000                     _RC4STAbits	set	3815
   125   000000                     _SP4BRGH	set	3814
   126   000000                     _SP4BRGL	set	3813
   127   000000                     _TX4STAbits	set	3816
   128   000000                     _BAUD4CONbits	set	3817
   129   000000                     _TX4REG	set	3812
   130   000000                     _TRISBbits	set	3970
   131   000000                     _TRISAbits	set	3969
   132   000000                     _TRISEbits	set	3973
   133   000000                     _TRISGbits	set	3975
   134   000000                     _LATFbits	set	3966
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISHbits	set	3976
   137   000000                     _TRISDbits	set	3972
   138   000000                     _LATEbits	set	3965
   139   000000                     _LATGbits	set	3967
   140   000000                     _LATHbits	set	3968
   141   000000                     _SSP2CON2bits	set	3802
   142   000000                     _TMR0IF	set	29085
   143   000000                     _TMR0IE	set	29005
   144   000000                     _RX4PPS	set	3605
   145   000000                     _SSP2CLKPPS	set	3612
   146   000000                     _SSP2DATPPS	set	3613
   147   000000                     _PIE0bits	set	3625
   148   000000                     _CCPR4H	set	3873
   149   000000                     _CCPR3H	set	3877
   150   000000                     _CCPR2H	set	4006
   151   000000                     _CCPR1H	set	4010
   152   000000                     _CCP1CONbits	set	4011
   153   000000                     _CCPTMRS0bits	set	4013
   154   000000                     _T2PR	set	4028
   155   000000                     _T2CONbits	set	4029
   156   000000                     _INTCONbits	set	4082
   157   000000                     _CCP2CONbits	set	4007
   158   000000                     _CCP3CONbits	set	3878
   159   000000                     _ADREFbits	set	3928
   160   000000                     _LATAbits	set	3961
   161   000000                     _LATDbits	set	3964
   162   000000                     _PORTFbits	set	3982
   163   000000                     _CCP4CONbits	set	3874
   164   000000                     _PIE4bits	set	3629
   165   000000                     _RD5PPS	set	3695
   166   000000                     _ANSELDbits	set	3751
   167   000000                     _SSP2ADD	set	3798
   168   000000                     _SSP2CON1bits	set	3801
   169   000000                     _LATCbits	set	3963
   170   000000                     _RC4REG	set	3811
   171   000000                     _SSP2CON2	set	3802
   172   000000                     _SSP2STAT	set	3800
   173   000000                     _ANSELFbits	set	3764
   174   000000                     _SSP2BUF	set	3797
   175   000000                     _IPR0bits	set	3615
   176   000000                     _RE2PPS	set	3700
   177   000000                     _ANSELBbits	set	3738
   178   000000                     _RD6PPS	set	3696
   179   000000                     _PIR0bits	set	3635
   180   000000                     _PIR4bits	set	3639
   181   000000                     _RC0PPS	set	3682
   182   000000                     _RC7PPS	set	3689
   183   000000                     _ADPCH	set	3935
   184   000000                     _ADRESH	set	3940
   185   000000                     _ADCON0bits	set	3936
   186   000000                     _RE4PPS	set	3702
   187   000000                     _RG6PPS	set	3720
   188   000000                     _TMR0L	set	4051
   189   000000                     _TMR0H	set	4052
   190   000000                     _T0CON0bits	set	4053
   191   000000                     _T0CON1bits	set	4054
   192   000000                     _T2CLKCONbits	set	4031
   193   000000                     _T2HLTbits	set	4030
   194                           
   195                           ; #config settings
   196                           
   197                           	psect	cinit
   198   00376E                     __pcinit:
   199                           	callstack 0
   200   00376E                     start_initialization:
   201                           	callstack 0
   202   00376E                     __initialization:
   203                           	callstack 0
   204                           
   205                           ; Initialize objects allocated to BANK1 (4 bytes)
   206                           ; load TBLPTR registers with __pidataBANK1
   207   00376E  0EAE               	movlw	low __pidataBANK1
   208   003770  6EF6               	movwf	tblptrl,c
   209   003772  0E3B               	movlw	high __pidataBANK1
   210   003774  6EF7               	movwf	tblptrh,c
   211   003776  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   212   003778  6EF8               	movwf	tblptru,c
   213   00377A  EE01  F0FC         	lfsr	0,__pdataBANK1
   214   00377E  EE10 F004          	lfsr	1,4
   215   003782                     copy_data0:
   216   003782  0009               	tblrd		*+
   217   003784  CFF5 FFEE          	movff	tablat,postinc0
   218   003788  50E5               	movf	postdec1,w,c
   219   00378A  50E1               	movf	fsr1l,w,c
   220   00378C  E1FA               	bnz	copy_data0
   221                           
   222                           ; Initialize objects allocated to COMRAM (2 bytes)
   223                           ; load TBLPTR registers with __pidataCOMRAM
   224   00378E  0EB2               	movlw	low __pidataCOMRAM
   225   003790  6EF6               	movwf	tblptrl,c
   226   003792  0E3B               	movlw	high __pidataCOMRAM
   227   003794  6EF7               	movwf	tblptrh,c
   228   003796  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   229   003798  6EF8               	movwf	tblptru,c
   230   00379A  0009               	tblrd		*+	;fetch initializer
   231   00379C  CFF5 F049          	movff	tablat,__pdataCOMRAM
   232   0037A0  0009               	tblrd		*+	;fetch initializer
   233   0037A2  CFF5 F04A          	movff	tablat,__pdataCOMRAM+1
   234                           
   235                           ; Clear objects allocated to BANK2 (82 bytes)
   236   0037A6  EE02  F000         	lfsr	0,__pbssBANK2
   237   0037AA  0E52               	movlw	82
   238   0037AC                     clear_0:
   239   0037AC  6AEE               	clrf	postinc0,c
   240   0037AE  06E8               	decf	wreg,f,c
   241   0037B0  E1FD               	bnz	clear_0
   242                           
   243                           ; Clear objects allocated to BANK1 (42 bytes)
   244   0037B2  EE01  F0D2         	lfsr	0,__pbssBANK1
   245   0037B6  0E2A               	movlw	42
   246   0037B8                     clear_1:
   247   0037B8  6AEE               	clrf	postinc0,c
   248   0037BA  06E8               	decf	wreg,f,c
   249   0037BC  E1FD               	bnz	clear_1
   250                           
   251                           ; Clear objects allocated to BANK0 (120 bytes)
   252   0037BE  EE00  F060         	lfsr	0,__pbssBANK0
   253   0037C2  0E78               	movlw	120
   254   0037C4                     clear_2:
   255   0037C4  6AEE               	clrf	postinc0,c
   256   0037C6  06E8               	decf	wreg,f,c
   257   0037C8  E1FD               	bnz	clear_2
   258                           
   259                           ; Clear objects allocated to COMRAM (4 bytes)
   260   0037CA  6A48               	clrf	(__pbssCOMRAM+3)& (0+255),c
   261   0037CC  6A47               	clrf	(__pbssCOMRAM+2)& (0+255),c
   262   0037CE  6A46               	clrf	(__pbssCOMRAM+1)& (0+255),c
   263   0037D0  6A45               	clrf	__pbssCOMRAM& (0+255),c
   264   0037D2                     end_of_initialization:
   265                           	callstack 0
   266   0037D2                     __end_of__initialization:
   267                           	callstack 0
   268   0037D2  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   269   0037D4  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   270   0037D6  0100               	movlb	0
   271   0037D8  EFDA  F010         	goto	_main	;jump to C main() function
   272                           
   273                           	psect	bssCOMRAM
   274   000045                     __pbssCOMRAM:
   275                           	callstack 0
   276   000045                     _TxBufReadCnt:
   277                           	callstack 0
   278   000045                     	ds	1
   279   000046                     _TxBufWriteCnt:
   280                           	callstack 0
   281   000046                     	ds	1
   282   000047                     _RxBufReadCnt:
   283                           	callstack 0
   284   000047                     	ds	1
   285   000048                     _RxBufWriteCnt:
   286                           	callstack 0
   287   000048                     	ds	1
   288                           
   289                           	psect	dataCOMRAM
   290   000049                     __pdataCOMRAM:
   291                           	callstack 0
   292   000049                     _ambient:
   293                           	callstack 0
   294   000049                     	ds	2
   295                           
   296                           	psect	bssBANK0
   297   000060                     __pbssBANK0:
   298                           	callstack 0
   299   000060                     _EUSART4TXbuf:
   300                           	callstack 0
   301   000060                     	ds	60
   302   00009C                     	ds	40
   303   0000C4                     _EUSART4RXbuf:
   304                           	callstack 0
   305   0000C4                     	ds	20
   306                           
   307                           	psect	bssBANK1
   308   0001D2                     __pbssBANK1:
   309                           	callstack 0
   310   0001D2                     	ds	40
   311   0001FA                     _lost:
   312                           	callstack 0
   313   0001FA                     	ds	1
   314   0001FB                     _wall:
   315                           	callstack 0
   316   0001FB                     	ds	1
   317                           
   318                           	psect	dataBANK1
   319   0001FC                     __pdataBANK1:
   320                           	callstack 0
   321   0001FC                     main@F14616:
   322                           	callstack 0
   323   0001FC                     	ds	4
   324                           
   325                           	psect	bssBANK2
   326   000200                     __pbssBANK2:
   327                           	callstack 0
   328   000200                     	ds	82
   329                           
   330                           	psect	cstackBANK1
   331   000100                     __pcstackBANK1:
   332                           	callstack 0
   333   000100                     main@buf:
   334                           	callstack 0
   335                           
   336                           ; 40 bytes @ 0x0
   337   000100                     	ds	40
   338   000128                     main@straightTime:
   339                           	callstack 0
   340                           
   341                           ; 82 bytes @ 0x28
   342   000128                     	ds	82
   343   00017A                     main@moveSequence:
   344                           	callstack 0
   345                           
   346                           ; 40 bytes @ 0x7A
   347   00017A                     	ds	40
   348   0001A2                     main@testSequence:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0xA2
   352   0001A2                     	ds	4
   353   0001A6                     main@RGBC_n:
   354                           	callstack 0
   355                           
   356                           ; 8 bytes @ 0xA6
   357   0001A6                     	ds	8
   358   0001AE                     main@reverseDuration:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0xAE
   362   0001AE                     	ds	1
   363   0001AF                     main@straightSpeed:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0xAF
   367   0001AF                     	ds	1
   368   0001B0                     main@turnSpeed:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0xB0
   372   0001B0                     	ds	1
   373   0001B1                     main@turnRamp:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0xB1
   377   0001B1                     	ds	1
   378   0001B2                     main@color:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0xB2
   382   0001B2                     	ds	1
   383   0001B3                     main@straightRamp:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0xB3
   387   0001B3                     	ds	1
   388   0001B4                     main@curMove:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0xB4
   392   0001B4                     	ds	1
   393   0001B5                     main@turnDuration:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0xB5
   397   0001B5                     	ds	1
   398   0001B6                     main@RGBC:
   399                           	callstack 0
   400                           
   401                           ; 8 bytes @ 0xB6
   402   0001B6                     	ds	8
   403   0001BE                     main@motorR:
   404                           	callstack 0
   405                           
   406                           ; 10 bytes @ 0xBE
   407   0001BE                     	ds	10
   408   0001C8                     main@motorL:
   409                           	callstack 0
   410                           
   411                           ; 10 bytes @ 0xC8
   412   0001C8                     	ds	10
   413                           
   414                           	psect	cstackBANK0
   415   0000D8                     __pcstackBANK0:
   416                           	callstack 0
   417   0000D8                     move@mL:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x0
   421   0000D8                     	ds	2
   422   0000DA                     move@mR:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x2
   426   0000DA                     	ds	2
   427   0000DC                     move@color:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x4
   431   0000DC                     	ds	1
   432   0000DD                     move@moveSequence:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x5
   436   0000DD                     	ds	2
   437   0000DF                     move@straightTime:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x7
   441   0000DF                     	ds	2
   442   0000E1                     move@curMove:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x9
   446   0000E1                     	ds	1
   447   0000E2                     move@straightSpeed:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0xA
   451   0000E2                     	ds	1
   452   0000E3                     move@reverseDuration:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0xB
   456   0000E3                     	ds	1
   457   0000E4                     move@straightRamp:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0xC
   461   0000E4                     	ds	1
   462   0000E5                     move@turnSpeed:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0xD
   466   0000E5                     	ds	1
   467   0000E6                     move@turnDuration:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0xE
   471   0000E6                     	ds	1
   472   0000E7                     move@turnRamp:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0xF
   476   0000E7                     	ds	1
   477                           
   478                           	psect	cstackCOMRAM
   479   000001                     __pcstackCOMRAM:
   480                           	callstack 0
   481   000001                     ??_getCharFromTxBuf:
   482   000001                     ??i2_I2C_2_Master_Idle:
   483   000001                     putCharToRxBuf@byte:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x0
   487   000001                     	ds	1
   488   000002                     i2I2C_2_Master_Write@data_byte:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x1
   492   000002                     	ds	1
   493   000003                     i2color_writetoaddr@value:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x2
   497   000003                     	ds	1
   498   000004                     i2color_writetoaddr@address:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x3
   502   000004                     	ds	1
   503   000005                     ??i2_color_clear_init_interrupts:
   504                           
   505                           ; 1 bytes @ 0x4
   506   000005                     	ds	1
   507   000006                     i2color_clear_init_interrupts@high_threshold:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x5
   511   000006                     	ds	2
   512   000008                     i2color_clear_init_interrupts@low_threshold:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x7
   516   000008                     	ds	2
   517   00000A                     ??_HighISR:
   518                           
   519                           ; 1 bytes @ 0x9
   520   00000A                     	ds	2
   521   00000C                     ??_I2C_2_Master_Idle:
   522   00000C                     ?_get16bitTMR0val:
   523                           	callstack 0
   524   00000C                     ?___wmul:
   525                           	callstack 0
   526   00000C                     ?___awdiv:
   527                           	callstack 0
   528   00000C                     ?___lmul:
   529                           	callstack 0
   530   00000C                     white_Light@state:
   531                           	callstack 0
   532   00000C                     ADC_getval@tmpval:
   533                           	callstack 0
   534   00000C                     initDCmotorsPWM@PWMperiod:
   535                           	callstack 0
   536   00000C                     ___wmul@multiplier:
   537                           	callstack 0
   538   00000C                     ___awdiv@dividend:
   539                           	callstack 0
   540   00000C                     ___lmul@multiplier:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0xB
   544   00000C                     	ds	1
   545   00000D                     ??_I2C_2_Master_Read:
   546   00000D                     I2C_2_Master_Write@data_byte:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0xC
   550   00000D                     	ds	1
   551   00000E                     ??_get16bitTMR0val:
   552   00000E                     color_writetoaddr@value:
   553                           	callstack 0
   554   00000E                     I2C_2_Master_Read@ack:
   555                           	callstack 0
   556   00000E                     ___wmul@multiplicand:
   557                           	callstack 0
   558   00000E                     ___awdiv@divisor:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0xD
   562   00000E                     	ds	1
   563   00000F                     color_writetoaddr@address:
   564                           	callstack 0
   565   00000F                     I2C_2_Master_Read@tmp:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0xE
   569   00000F                     	ds	1
   570   000010                     ??_color_clear_init_interrupts:
   571   000010                     ___awdiv@counter:
   572                           	callstack 0
   573   000010                     color_read@RGBC:
   574                           	callstack 0
   575   000010                     get16bitTMR0val@timer_low:
   576                           	callstack 0
   577   000010                     ___wmul@product:
   578                           	callstack 0
   579   000010                     ___lmul@multiplicand:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0xF
   583   000010                     	ds	1
   584   000011                     ___awdiv@sign:
   585                           	callstack 0
   586   000011                     color_clear_init_interrupts@high_threshold:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x10
   590   000011                     	ds	1
   591   000012                     ??_color_read:
   592   000012                     ?___lwdiv:
   593                           	callstack 0
   594   000012                     get16bitTMR0val@timer_high:
   595                           	callstack 0
   596   000012                     ___awdiv@quotient:
   597                           	callstack 0
   598   000012                     ___lwdiv@dividend:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x11
   602   000012                     	ds	1
   603   000013                     color_clear_init_interrupts@low_threshold:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x12
   607   000013                     	ds	1
   608   000014                     batteryLevel@batteryVoltage:
   609                           	callstack 0
   610   000014                     get16bitTMR0val@timer_val:
   611                           	callstack 0
   612   000014                     ___lwdiv@divisor:
   613                           	callstack 0
   614   000014                     ___lmul@product:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x13
   618   000014                     	ds	1
   619   000015                     ??_color_click_init:
   620   000015                     batteryLevel@batteryQuarter:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x14
   624   000015                     	ds	1
   625   000016                     ___lwdiv@quotient:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x15
   629   000016                     	ds	2
   630   000018                     ?___aldiv:
   631                           	callstack 0
   632   000018                     ___lwdiv@counter:
   633                           	callstack 0
   634   000018                     ___aldiv@dividend:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x17
   638   000018                     	ds	1
   639   000019                     setMotorPWM@m:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x18
   643   000019                     	ds	2
   644   00001B                     ??_setMotorPWM:
   645                           
   646                           ; 1 bytes @ 0x1A
   647   00001B                     	ds	1
   648   00001C                     ___aldiv@divisor:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x1B
   652   00001C                     	ds	1
   653   00001D                     setMotorPWM@posDuty:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x1C
   657   00001D                     	ds	1
   658   00001E                     setMotorPWM@negDuty:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x1D
   662   00001E                     	ds	1
   663   00001F                     stop@mL:
   664                           	callstack 0
   665   00001F                     turnLeft@mL:
   666                           	callstack 0
   667   00001F                     turnRight@mL:
   668                           	callstack 0
   669   00001F                     fullSpeedAhead@mL:
   670                           	callstack 0
   671   00001F                     reverseOneSquare@mL:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x1E
   675   00001F                     	ds	1
   676   000020                     ___aldiv@counter:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x1F
   680   000020                     	ds	1
   681   000021                     ___aldiv@sign:
   682                           	callstack 0
   683   000021                     stop@mR:
   684                           	callstack 0
   685   000021                     turnLeft@mR:
   686                           	callstack 0
   687   000021                     turnRight@mR:
   688                           	callstack 0
   689   000021                     fullSpeedAhead@mR:
   690                           	callstack 0
   691   000021                     reverseOneSquare@mR:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x20
   695   000021                     	ds	1
   696   000022                     ___aldiv@quotient:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x21
   700   000022                     	ds	1
   701   000023                     stop@straightRamp:
   702                           	callstack 0
   703   000023                     turnLeft@turnSpeed:
   704                           	callstack 0
   705   000023                     turnRight@turnSpeed:
   706                           	callstack 0
   707   000023                     fullSpeedAhead@straightSpeed:
   708                           	callstack 0
   709   000023                     reverseOneSquare@straightSpeed:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x22
   713   000023                     	ds	1
   714   000024                     ??_stop:
   715   000024                     turnLeft@turnDuration:
   716                           	callstack 0
   717   000024                     turnRight@turnDuration:
   718                           	callstack 0
   719   000024                     fullSpeedAhead@straightRamp:
   720                           	callstack 0
   721   000024                     reverseOneSquare@reverseDuration:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x23
   725   000024                     	ds	1
   726   000025                     ??_fullSpeedAhead:
   727   000025                     turnLeft@turnRamp:
   728                           	callstack 0
   729   000025                     turnRight@turnRamp:
   730                           	callstack 0
   731   000025                     reverseOneSquare@straightRamp:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x24
   735   000025                     	ds	1
   736   000026                     ??_turnRight:
   737   000026                     ??_turnLeft:
   738   000026                     ??_reverseOneSquare:
   739   000026                     color_normalise@RGBC:
   740                           	callstack 0
   741                           
   742                           ; 8 bytes @ 0x25
   743   000026                     	ds	1
   744   000027                     stop@i:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x26
   748   000027                     	ds	1
   749   000028                     fullSpeedAhead@i:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x27
   753   000028                     	ds	1
   754   000029                     stop@cur_power:
   755                           	callstack 0
   756   000029                     turnLeft@i:
   757                           	callstack 0
   758   000029                     turnRight@i:
   759                           	callstack 0
   760   000029                     reverseOneSquare@i:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x28
   764   000029                     	ds	1
   765   00002A                     fullSpeedAhead@cur_power:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x29
   769   00002A                     	ds	1
   770   00002B                     turnLeft@cur_power:
   771                           	callstack 0
   772   00002B                     turnRight@cur_power:
   773                           	callstack 0
   774   00002B                     reverseOneSquare@cur_power:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x2A
   778   00002B                     	ds	2
   779   00002D                     returnHome@mL:
   780                           	callstack 0
   781   00002D                     lostReturnHome@mL:
   782                           	callstack 0
   783   00002D                     calibration@mL:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x2C
   787   00002D                     	ds	1
   788   00002E                     color_normalise@RGBC_n:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x2D
   792   00002E                     	ds	1
   793   00002F                     returnHome@mR:
   794                           	callstack 0
   795   00002F                     lostReturnHome@mR:
   796                           	callstack 0
   797   00002F                     calibration@mR:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x2E
   801   00002F                     	ds	1
   802   000030                     ??_color_normalise:
   803                           
   804                           ; 1 bytes @ 0x2F
   805   000030                     	ds	1
   806   000031                     calibration@turnSpeed:
   807                           	callstack 0
   808   000031                     returnHome@moveSequence:
   809                           	callstack 0
   810   000031                     lostReturnHome@moveSequence:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x30
   814   000031                     	ds	1
   815   000032                     calibration@turnDuration:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x31
   819   000032                     	ds	1
   820   000033                     returnHome@straightTime:
   821                           	callstack 0
   822   000033                     lostReturnHome@straightTime:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x32
   826   000033                     	ds	1
   827   000034                     calibration@turnRamp:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x33
   831   000034                     	ds	1
   832   000035                     ??_calibration:
   833   000035                     returnHome@curMove:
   834                           	callstack 0
   835   000035                     lostReturnHome@curMove:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x34
   839   000035                     	ds	1
   840   000036                     returnHome@straightSpeed:
   841                           	callstack 0
   842   000036                     lostReturnHome@straightSpeed:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x35
   846   000036                     	ds	1
   847   000037                     returnHome@reverseDuration:
   848                           	callstack 0
   849   000037                     lostReturnHome@reverseDuration:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x36
   853   000037                     	ds	1
   854   000038                     returnHome@straightRamp:
   855                           	callstack 0
   856   000038                     lostReturnHome@straightRamp:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x37
   860   000038                     	ds	1
   861   000039                     returnHome@turnSpeed:
   862                           	callstack 0
   863   000039                     lostReturnHome@turnSpeed:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x38
   867   000039                     	ds	1
   868   00003A                     returnHome@turnDuration:
   869                           	callstack 0
   870   00003A                     lostReturnHome@turnDuration:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0x39
   874   00003A                     	ds	1
   875   00003B                     returnHome@turnRamp:
   876                           	callstack 0
   877   00003B                     lostReturnHome@turnRamp:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x3A
   881   00003B                     	ds	1
   882   00003C                     ??_lostReturnHome:
   883   00003C                     ??_returnHome:
   884                           
   885                           ; 1 bytes @ 0x3B
   886   00003C                     	ds	4
   887   000040                     returnHome@i:
   888                           	callstack 0
   889   000040                     lostReturnHome@i:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x3F
   893   000040                     	ds	1
   894   000041                     ??_move:
   895                           
   896                           ; 1 bytes @ 0x40
   897   000041                     	ds	2
   898   000043                     ??_main:
   899                           
   900                           ; 1 bytes @ 0x42
   901   000043                     	ds	2
   902                           
   903 ;;
   904 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   905 ;;
   906 ;; *************** function _main *****************
   907 ;; Defined at:
   908 ;;		line 28 in file "main.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  straightTime   82   40[BANK1 ] unsigned int [41]
   913 ;;  moveSequence   40  122[BANK1 ] unsigned char [40]
   914 ;;  buf            40    0[BANK1 ] unsigned char [40]
   915 ;;  motorL         10  200[BANK1 ] struct DC_motor
   916 ;;  motorR         10  190[BANK1 ] struct DC_motor
   917 ;;  RGBC            8  182[BANK1 ] struct RGBC_val
   918 ;;  RGBC_n          8  166[BANK1 ] struct RGBC_val
   919 ;;  testSequence    4  162[BANK1 ] unsigned char [4]
   920 ;;  PWMcycle        2    0        unsigned int 
   921 ;;  turnDuration    1  181[BANK1 ] unsigned char 
   922 ;;  curMove         1  180[BANK1 ] unsigned char 
   923 ;;  straightRamp    1  179[BANK1 ] unsigned char 
   924 ;;  color           1  178[BANK1 ] unsigned char 
   925 ;;  turnRamp        1  177[BANK1 ] unsigned char 
   926 ;;  turnSpeed       1  176[BANK1 ] unsigned char 
   927 ;;  straightSpee    1  175[BANK1 ] unsigned char 
   928 ;;  reverseDurat    1  174[BANK1 ] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   939 ;;      Locals:         0       0     210       0       0       0       0       0       0       0       0       0       
      +0       0       0
   940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   941 ;;      Totals:         2       0     210       0       0       0       0       0       0       0       0       0       
      +0       0       0
   942 ;;Total ram usage:      212 bytes
   943 ;; Hardware stack levels required when called: 10
   944 ;; This function calls:
   945 ;;		_Buggy_init
   946 ;;		_Interrupts_init
   947 ;;		_Timer0_init
   948 ;;		_batteryLevel
   949 ;;		_calibration
   950 ;;		_color_click_init
   951 ;;		_color_normalise
   952 ;;		_color_read
   953 ;;		_fullSpeedAhead
   954 ;;		_get16bitTMR0val
   955 ;;		_initDCmotorsPWM
   956 ;;		_initUSART4
   957 ;;		_lostReturnHome
   958 ;;		_move
   959 ;;		_resetTimer
   960 ;;		_stop
   961 ;;		_white_Light
   962 ;; This function is called by:
   963 ;;		Startup code after reset
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text0
   968   0021B4                     __ptext0:
   969                           	callstack 0
   970   0021B4                     _main:
   971                           	callstack 21
   972   0021B4                     
   973                           ;main.c: 30:     char buf[40] = {0};
   974   0021B4  EE21  F000         	lfsr	2,main@buf
   975   0021B8  0E27               	movlw	39
   976   0021BA                     u2241:
   977   0021BA  6ADE               	clrf	postinc2,c
   978   0021BC  06E8               	decf	wreg,f,c
   979   0021BE  E2FD               	bc	u2241
   980   0021C0                     
   981                           ;main.c: 32:     unsigned char color = 0;
   982   0021C0  0E00               	movlw	0
   983   0021C2  0101               	movlb	1	; () banked
   984   0021C4  6FB2               	movwf	main@color& (0+255),b
   985                           
   986                           ;main.c: 33:     unsigned char moveSequence[40] = {0};
   987   0021C6  EE21  F07A         	lfsr	2,main@moveSequence
   988   0021CA  0E27               	movlw	39
   989   0021CC                     u2251:
   990   0021CC  6ADE               	clrf	postinc2,c
   991   0021CE  06E8               	decf	wreg,f,c
   992   0021D0  E2FD               	bc	u2251
   993                           
   994                           ;main.c: 34:     unsigned int straightTime[41] = {0};
   995   0021D2  EE21  F028         	lfsr	2,main@straightTime
   996   0021D6  0E51               	movlw	81
   997   0021D8                     u2261:
   998   0021D8  6ADE               	clrf	postinc2,c
   999   0021DA  06E8               	decf	wreg,f,c
  1000   0021DC  E2FD               	bc	u2261
  1001   0021DE                     
  1002                           ; BSR set to: 1
  1003                           ;main.c: 35:     char curMove = 0;
  1004   0021DE  0E00               	movlw	0
  1005   0021E0  6FB4               	movwf	main@curMove& (0+255),b
  1006   0021E2                     
  1007                           ; BSR set to: 1
  1008                           ;main.c: 37:     unsigned char testSequence[4] = {4,3,9,8};
  1009   0021E2  C1FC  F1A2         	movff	main@F14616,main@testSequence
  1010   0021E6  C1FD  F1A3         	movff	main@F14616+1,main@testSequence+1
  1011   0021EA  C1FE  F1A4         	movff	main@F14616+2,main@testSequence+2
  1012   0021EE  C1FF  F1A5         	movff	main@F14616+3,main@testSequence+3
  1013   0021F2                     
  1014                           ; BSR set to: 1
  1015                           ;main.c: 40:     struct RGBC_val RGBC, RGBC_n;;main.c: 41:     struct DC_motor motorL, m
      +                          otorR;;main.c: 44:     Buggy_init();
  1016   0021F2  EC87  F01C         	call	_Buggy_init	;wreg free
  1017   0021F6                     
  1018                           ;main.c: 45:     color_click_init();
  1019   0021F6  EC6B  F01C         	call	_color_click_init	;wreg free
  1020   0021FA                     
  1021                           ;main.c: 46:     Timer0_init();
  1022   0021FA  EC4E  F01D         	call	_Timer0_init	;wreg free
  1023   0021FE                     
  1024                           ;main.c: 47:     Interrupts_init();
  1025   0021FE  ECA2  F01D         	call	_Interrupts_init	;wreg free
  1026   002202                     
  1027                           ;main.c: 48:     initUSART4();
  1028   002202  EC6E  F01D         	call	_initUSART4	;wreg free
  1029   002206                     
  1030                           ;main.c: 49:     initDCmotorsPWM(PWMcycle);
  1031   002206  0E00               	movlw	0
  1032   002208  6E0D               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1033   00220A  0EC7               	movlw	199
  1034   00220C  6E0C               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1035   00220E  ECBB  F01A         	call	_initDCmotorsPWM	;wreg free
  1036   002212                     
  1037                           ;main.c: 51:     motorL.power=0;
  1038   002212  0E00               	movlw	0
  1039   002214  0101               	movlb	1	; () banked
  1040   002216  6FC8               	movwf	main@motorL& (0+255),b
  1041   002218                     
  1042                           ; BSR set to: 1
  1043                           ;main.c: 52:     motorL.direction=1;
  1044   002218  0E01               	movlw	1
  1045   00221A  6FC9               	movwf	(main@motorL+1)& (0+255),b
  1046   00221C                     
  1047                           ; BSR set to: 1
  1048                           ;main.c: 53:     motorL.brakemode=1;
  1049   00221C  0E01               	movlw	1
  1050   00221E  6FCA               	movwf	(main@motorL+2)& (0+255),b
  1051   002220                     
  1052                           ; BSR set to: 1
  1053                           ;main.c: 54:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1054   002220  0EAA               	movlw	170
  1055   002222  6FCD               	movwf	(main@motorL+5)& (0+255),b
  1056   002224  0E0F               	movlw	15
  1057   002226  6FCE               	movwf	(main@motorL+6)& (0+255),b
  1058   002228                     
  1059                           ; BSR set to: 1
  1060                           ;main.c: 55:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1061   002228  0EA6               	movlw	166
  1062   00222A  6FCF               	movwf	(main@motorL+7)& (0+255),b
  1063   00222C  0E0F               	movlw	15
  1064   00222E  6FD0               	movwf	(main@motorL+8)& (0+255),b
  1065   002230                     
  1066                           ; BSR set to: 1
  1067                           ;main.c: 56:     motorL.PWMperiod=PWMcycle;
  1068   002230  0E00               	movlw	0
  1069   002232  6FCC               	movwf	(main@motorL+4)& (0+255),b
  1070   002234  0EC7               	movlw	199
  1071   002236  6FCB               	movwf	(main@motorL+3)& (0+255),b
  1072   002238                     
  1073                           ; BSR set to: 1
  1074                           ;main.c: 57:     motorL.compensation=3;
  1075   002238  0E03               	movlw	3
  1076   00223A  6FD1               	movwf	(main@motorL+9)& (0+255),b
  1077   00223C                     
  1078                           ; BSR set to: 1
  1079                           ;main.c: 59:     motorR.power=0;
  1080   00223C  0E00               	movlw	0
  1081   00223E  6FBE               	movwf	main@motorR& (0+255),b
  1082   002240                     
  1083                           ; BSR set to: 1
  1084                           ;main.c: 60:     motorR.direction=1;
  1085   002240  0E01               	movlw	1
  1086   002242  6FBF               	movwf	(main@motorR+1)& (0+255),b
  1087   002244                     
  1088                           ; BSR set to: 1
  1089                           ;main.c: 61:     motorR.brakemode=1;
  1090   002244  0E01               	movlw	1
  1091   002246  6FC0               	movwf	(main@motorR+2)& (0+255),b
  1092   002248                     
  1093                           ; BSR set to: 1
  1094                           ;main.c: 62:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1095   002248  0E25               	movlw	37
  1096   00224A  6FC3               	movwf	(main@motorR+5)& (0+255),b
  1097   00224C  0E0F               	movlw	15
  1098   00224E  6FC4               	movwf	(main@motorR+6)& (0+255),b
  1099   002250                     
  1100                           ; BSR set to: 1
  1101                           ;main.c: 63:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1102   002250  0E21               	movlw	33
  1103   002252  6FC5               	movwf	(main@motorR+7)& (0+255),b
  1104   002254  0E0F               	movlw	15
  1105   002256  6FC6               	movwf	(main@motorR+8)& (0+255),b
  1106   002258                     
  1107                           ; BSR set to: 1
  1108                           ;main.c: 64:     motorR.PWMperiod=PWMcycle;
  1109   002258  0E00               	movlw	0
  1110   00225A  6FC2               	movwf	(main@motorR+4)& (0+255),b
  1111   00225C  0EC7               	movlw	199
  1112   00225E  6FC1               	movwf	(main@motorR+3)& (0+255),b
  1113   002260                     
  1114                           ; BSR set to: 1
  1115                           ;main.c: 65:     motorR.compensation=0;
  1116   002260  0E00               	movlw	0
  1117   002262  6FC7               	movwf	(main@motorR+9)& (0+255),b
  1118   002264                     
  1119                           ; BSR set to: 1
  1120                           ;main.c: 68:     char straightSpeed=25;
  1121   002264  0E19               	movlw	25
  1122   002266  6FAF               	movwf	main@straightSpeed& (0+255),b
  1123   002268                     
  1124                           ; BSR set to: 1
  1125                           ;main.c: 69:     unsigned char straightRamp=1;
  1126   002268  0E01               	movlw	1
  1127   00226A  6FB3               	movwf	main@straightRamp& (0+255),b
  1128   00226C                     
  1129                           ; BSR set to: 1
  1130                           ;main.c: 71:     unsigned char reverseDuration=10;
  1131   00226C  0E0A               	movlw	10
  1132   00226E  6FAE               	movwf	main@reverseDuration& (0+255),b
  1133   002270                     
  1134                           ; BSR set to: 1
  1135                           ;main.c: 73:     char turnSpeed=20;
  1136   002270  0E14               	movlw	20
  1137   002272  6FB0               	movwf	main@turnSpeed& (0+255),b
  1138   002274                     
  1139                           ; BSR set to: 1
  1140                           ;main.c: 74:     unsigned char turnDuration=5;
  1141   002274  0E05               	movlw	5
  1142   002276  6FB5               	movwf	main@turnDuration& (0+255),b
  1143   002278                     
  1144                           ; BSR set to: 1
  1145                           ;main.c: 75:     unsigned char turnRamp=2;
  1146   002278  0E02               	movlw	2
  1147   00227A  6FB1               	movwf	main@turnRamp& (0+255),b
  1148   00227C                     
  1149                           ; BSR set to: 1
  1150                           ;main.c: 78:     batteryLevel();
  1151   00227C  EC23  F01C         	call	_batteryLevel	;wreg free
  1152   002280                     l85:
  1153   002280  B48E               	btfsc	142,2,c	;volatile
  1154   002282  EF45  F011         	goto	u2271
  1155   002286  EF47  F011         	goto	u2270
  1156   00228A                     u2271:
  1157   00228A  EF40  F011         	goto	l85
  1158   00228E                     u2270:
  1159   00228E                     
  1160                           ;main.c: 82:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1161   00228E  9680               	bcf	128,3,c	;volatile
  1162   002290  9E7C               	bcf	124,7,c	;volatile
  1163                           
  1164                           ;main.c: 105:     LATHbits.LATH1=LATDbits.LATD3=1;
  1165   002292  867C               	bsf	124,3,c	;volatile
  1166   002294  8280               	bsf	128,1,c	;volatile
  1167   002296                     
  1168                           ;main.c: 106:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1169   002296  0E29               	movlw	41
  1170   002298  6E44               	movwf	(??_main+1)^0,c
  1171   00229A  0E96               	movlw	150
  1172   00229C  6E43               	movwf	??_main^0,c
  1173   00229E  0E7F               	movlw	127
  1174   0022A0                     u2357:
  1175   0022A0  2EE8               	decfsz	wreg,f,c
  1176   0022A2  D7FE               	bra	u2357
  1177   0022A4  2E43               	decfsz	??_main^0,f,c
  1178   0022A6  D7FC               	bra	u2357
  1179   0022A8  2E44               	decfsz	(??_main+1)^0,f,c
  1180   0022AA  D7FA               	bra	u2357
  1181   0022AC  0000               	nop	
  1182   0022AE                     
  1183                           ;main.c: 109:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1184   0022AE  0EC8               	movlw	low main@motorL
  1185   0022B0  6E2D               	movwf	calibration@mL^0,c
  1186   0022B2  0E01               	movlw	high main@motorL
  1187   0022B4  6E2E               	movwf	(calibration@mL+1)^0,c
  1188   0022B6  0EBE               	movlw	low main@motorR
  1189   0022B8  6E2F               	movwf	calibration@mR^0,c
  1190   0022BA  0E01               	movlw	high main@motorR
  1191   0022BC  6E30               	movwf	(calibration@mR+1)^0,c
  1192   0022BE  0E14               	movlw	20
  1193   0022C0  6E31               	movwf	calibration@turnSpeed^0,c
  1194   0022C2  0EB5               	movlw	low main@turnDuration
  1195   0022C4  6E32               	movwf	calibration@turnDuration^0,c
  1196   0022C6  0E01               	movlw	high main@turnDuration
  1197   0022C8  6E33               	movwf	(calibration@turnDuration+1)^0,c
  1198   0022CA  0E02               	movlw	2
  1199   0022CC  6E34               	movwf	calibration@turnRamp^0,c
  1200   0022CE  EC77  F012         	call	_calibration	;wreg free
  1201   0022D2                     
  1202                           ;main.c: 112:     white_Light(1);
  1203   0022D2  0E01               	movlw	1
  1204   0022D4  EC2C  F01D         	call	_white_Light
  1205   0022D8                     
  1206                           ;main.c: 113:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1207   0022D8  0E52               	movlw	82
  1208   0022DA  6E44               	movwf	(??_main+1)^0,c
  1209   0022DC  0E2B               	movlw	43
  1210   0022DE  6E43               	movwf	??_main^0,c
  1211   0022E0  0E00               	movlw	0
  1212   0022E2                     u2367:
  1213   0022E2  2EE8               	decfsz	wreg,f,c
  1214   0022E4  D7FE               	bra	u2367
  1215   0022E6  2E43               	decfsz	??_main^0,f,c
  1216   0022E8  D7FC               	bra	u2367
  1217   0022EA  2E44               	decfsz	(??_main+1)^0,f,c
  1218   0022EC  D7FA               	bra	u2367
  1219   0022EE  D000               	nop2	
  1220   0022F0                     
  1221                           ;main.c: 116:     color_read(&RGBC);
  1222   0022F0  0EB6               	movlw	low main@RGBC
  1223   0022F2  6E10               	movwf	color_read@RGBC^0,c
  1224   0022F4  0E01               	movlw	high main@RGBC
  1225   0022F6  6E11               	movwf	(color_read@RGBC+1)^0,c
  1226   0022F8  ECC4  F013         	call	_color_read	;wreg free
  1227   0022FC                     
  1228                           ;main.c: 117:     ambient=RGBC.C;
  1229   0022FC  C1BC  F049         	movff	main@RGBC+6,_ambient
  1230   002300  C1BD  F04A         	movff	main@RGBC+7,_ambient+1
  1231   002304                     
  1232                           ;main.c: 118:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1233   002304  0E29               	movlw	41
  1234   002306  6E44               	movwf	(??_main+1)^0,c
  1235   002308  0E96               	movlw	150
  1236   00230A  6E43               	movwf	??_main^0,c
  1237   00230C  0E7F               	movlw	127
  1238   00230E                     u2377:
  1239   00230E  2EE8               	decfsz	wreg,f,c
  1240   002310  D7FE               	bra	u2377
  1241   002312  2E43               	decfsz	??_main^0,f,c
  1242   002314  D7FC               	bra	u2377
  1243   002316  2E44               	decfsz	(??_main+1)^0,f,c
  1244   002318  D7FA               	bra	u2377
  1245   00231A  0000               	nop	
  1246   00231C                     
  1247                           ;main.c: 120:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1248   00231C  0EC8               	movlw	low main@motorL
  1249   00231E  6E1F               	movwf	fullSpeedAhead@mL^0,c
  1250   002320  0E01               	movlw	high main@motorL
  1251   002322  6E20               	movwf	(fullSpeedAhead@mL+1)^0,c
  1252   002324  0EBE               	movlw	low main@motorR
  1253   002326  6E21               	movwf	fullSpeedAhead@mR^0,c
  1254   002328  0E01               	movlw	high main@motorR
  1255   00232A  6E22               	movwf	(fullSpeedAhead@mR+1)^0,c
  1256   00232C  0E19               	movlw	25
  1257   00232E  6E23               	movwf	fullSpeedAhead@straightSpeed^0,c
  1258   002330  0E01               	movlw	1
  1259   002332  6E24               	movwf	fullSpeedAhead@straightRamp^0,c
  1260   002334  ECE7  F019         	call	_fullSpeedAhead	;wreg free
  1261   002338                     
  1262                           ;main.c: 121:     resetTimer();
  1263   002338  ECB9  F01D         	call	_resetTimer	;wreg free
  1264   00233C                     
  1265                           ;main.c: 123:     wall=0;
  1266   00233C  0E00               	movlw	0
  1267   00233E  0101               	movlb	1	; () banked
  1268   002340  6FFB               	movwf	_wall& (0+255),b
  1269   002342                     
  1270                           ; BSR set to: 1
  1271                           ;main.c: 124:     lost=0;
  1272   002342  0E00               	movlw	0
  1273   002344  6FFA               	movwf	_lost& (0+255),b
  1274   002346                     l3729:
  1275                           
  1276                           ; BSR set to: 1
  1277                           ;main.c: 127:         if (wall == 1) {
  1278   002346  05FB               	decf	_wall& (0+255),w,b
  1279   002348  A4D8               	btfss	status,2,c
  1280   00234A  EFA9  F011         	goto	u2281
  1281   00234E  EFAB  F011         	goto	u2280
  1282   002352                     u2281:
  1283   002352  EF26  F012         	goto	l3753
  1284   002356                     u2280:
  1285   002356                     
  1286                           ; BSR set to: 1
  1287                           ;main.c: 128:             PIE0bits.INT0IE=TMR0IE=0;
  1288   002356  010E               	movlb	14	; () banked
  1289   002358  9B29               	bcf	41,5,b	;volatile
  1290   00235A  AB29               	btfss	41,5,b	;volatile
  1291   00235C  D002               	bra	u2295
  1292   00235E  8129               	bsf	41,0,b	;volatile
  1293   002360  D002               	bra	u2297
  1294   002362                     u2295:
  1295   002362  010E               	movlb	14	; () banked
  1296   002364  9129               	bcf	41,0,b	;volatile
  1297   002366                     u2297:
  1298   002366                     
  1299                           ; BSR set to: 14
  1300                           ;main.c: 129:             straightTime[curMove] = get16bitTMR0val();
  1301   002366  ECB7  F01C         	call	_get16bitTMR0val	;wreg free
  1302   00236A  0101               	movlb	1	; () banked
  1303   00236C  51B4               	movf	main@curMove& (0+255),w,b
  1304   00236E  0D02               	mullw	2
  1305   002370  0E28               	movlw	low main@straightTime
  1306   002372  24F3               	addwf	243,w,c
  1307   002374  6ED9               	movwf	fsr2l,c
  1308   002376  0E01               	movlw	high main@straightTime
  1309   002378  20F4               	addwfc	prodh,w,c
  1310   00237A  6EDA               	movwf	fsr2h,c
  1311   00237C  C00C  FFDE         	movff	?_get16bitTMR0val,postinc2
  1312   002380  C00D  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1313                           
  1314                           ;main.c: 132:             stop(&motorL, &motorR, straightRamp);
  1315   002384  0EC8               	movlw	low main@motorL
  1316   002386  6E1F               	movwf	stop@mL^0,c
  1317   002388  0E01               	movlw	high main@motorL
  1318   00238A  6E20               	movwf	(stop@mL+1)^0,c
  1319   00238C  0EBE               	movlw	low main@motorR
  1320   00238E  6E21               	movwf	stop@mR^0,c
  1321   002390  0E01               	movlw	high main@motorR
  1322   002392  6E22               	movwf	(stop@mR+1)^0,c
  1323   002394  C1B3  F023         	movff	main@straightRamp,stop@straightRamp
  1324   002398  EC63  F019         	call	_stop	;wreg free
  1325   00239C                     
  1326                           ;main.c: 133:             color_read(&RGBC);
  1327   00239C  0EB6               	movlw	low main@RGBC
  1328   00239E  6E10               	movwf	color_read@RGBC^0,c
  1329   0023A0  0E01               	movlw	high main@RGBC
  1330   0023A2  6E11               	movwf	(color_read@RGBC+1)^0,c
  1331   0023A4  ECC4  F013         	call	_color_read	;wreg free
  1332   0023A8                     
  1333                           ;main.c: 134:             color_normalise(RGBC, &RGBC_n);
  1334   0023A8  EE21  F0B6         	lfsr	2,main@RGBC
  1335   0023AC  EE00  F026         	lfsr	0,color_normalise@RGBC
  1336   0023B0  0E07               	movlw	7
  1337   0023B2                     u2301:
  1338   0023B2  CFDB FFEB          	movff	plusw2,plusw0
  1339   0023B6  06E8               	decf	wreg,f,c
  1340   0023B8  E2FC               	bc	u2301
  1341   0023BA  0EA6               	movlw	low main@RGBC_n
  1342   0023BC  6E2E               	movwf	color_normalise@RGBC_n^0,c
  1343   0023BE  0E01               	movlw	high main@RGBC_n
  1344   0023C0  6E2F               	movwf	(color_normalise@RGBC_n+1)^0,c
  1345   0023C2  EC38  F018         	call	_color_normalise	;wreg free
  1346   0023C6                     
  1347                           ;main.c: 136:             color = testSequence[curMove];
  1348   0023C6  0EA2               	movlw	low main@testSequence
  1349   0023C8  0101               	movlb	1	; () banked
  1350   0023CA  25B4               	addwf	main@curMove& (0+255),w,b
  1351   0023CC  6ED9               	movwf	fsr2l,c
  1352   0023CE  6ADA               	clrf	fsr2h,c
  1353   0023D0  0E01               	movlw	high main@testSequence
  1354   0023D2  22DA               	addwfc	fsr2h,f,c
  1355   0023D4  50DF               	movf	indf2,w,c
  1356   0023D6  6FB2               	movwf	main@color& (0+255),b
  1357   0023D8                     
  1358                           ; BSR set to: 1
  1359                           ;main.c: 137:             moveSequence[curMove] = color;
  1360   0023D8  0E7A               	movlw	low main@moveSequence
  1361   0023DA  25B4               	addwf	main@curMove& (0+255),w,b
  1362   0023DC  6ED9               	movwf	fsr2l,c
  1363   0023DE  6ADA               	clrf	fsr2h,c
  1364   0023E0  0E01               	movlw	high main@moveSequence
  1365   0023E2  22DA               	addwfc	fsr2h,f,c
  1366   0023E4  C1B2  FFDF         	movff	main@color,indf2
  1367   0023E8                     
  1368                           ; BSR set to: 1
  1369                           ;main.c: 140:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1370   0023E8  0EC8               	movlw	low main@motorL
  1371   0023EA  0100               	movlb	0	; () banked
  1372   0023EC  6FD8               	movwf	move@mL& (0+255),b
  1373   0023EE  0E01               	movlw	high main@motorL
  1374   0023F0  6FD9               	movwf	(move@mL+1)& (0+255),b
  1375   0023F2  0EBE               	movlw	low main@motorR
  1376   0023F4  6FDA               	movwf	move@mR& (0+255),b
  1377   0023F6  0E01               	movlw	high main@motorR
  1378   0023F8  6FDB               	movwf	(move@mR+1)& (0+255),b
  1379   0023FA  C1B2  F0DC         	movff	main@color,move@color
  1380   0023FE  0E7A               	movlw	low main@moveSequence
  1381   002400  6FDD               	movwf	move@moveSequence& (0+255),b
  1382   002402  0E01               	movlw	high main@moveSequence
  1383   002404  6FDE               	movwf	(move@moveSequence+1)& (0+255),b
  1384   002406  0E28               	movlw	low main@straightTime
  1385   002408  6FDF               	movwf	move@straightTime& (0+255),b
  1386   00240A  0E01               	movlw	high main@straightTime
  1387   00240C  6FE0               	movwf	(move@straightTime+1)& (0+255),b
  1388   00240E  C1B4  F0E1         	movff	main@curMove,move@curMove
  1389   002412  C1AF  F0E2         	movff	main@straightSpeed,move@straightSpeed
  1390   002416  C1AE  F0E3         	movff	main@reverseDuration,move@reverseDuration
  1391   00241A  C1B3  F0E4         	movff	main@straightRamp,move@straightRamp
  1392   00241E  C1B0  F0E5         	movff	main@turnSpeed,move@turnSpeed
  1393   002422  C1B5  F0E6         	movff	main@turnDuration,move@turnDuration
  1394   002426  C1B1  F0E7         	movff	main@turnRamp,move@turnRamp
  1395   00242A  ECAF  F00D         	call	_move	;wreg free
  1396   00242E                     
  1397                           ;main.c: 142:             curMove++;
  1398   00242E  0101               	movlb	1	; () banked
  1399   002430  2BB4               	incf	main@curMove& (0+255),f,b
  1400   002432                     
  1401                           ; BSR set to: 1
  1402                           ;main.c: 143:             resetTimer();
  1403   002432  ECB9  F01D         	call	_resetTimer	;wreg free
  1404   002436                     
  1405                           ;main.c: 144:             PIE0bits.INT0IE=TMR0IE=1;
  1406   002436  010E               	movlb	14	; () banked
  1407   002438  8B29               	bsf	41,5,b	;volatile
  1408   00243A  AB29               	btfss	41,5,b	;volatile
  1409   00243C  D002               	bra	u2315
  1410   00243E  8129               	bsf	41,0,b	;volatile
  1411   002440  D002               	bra	u2317
  1412   002442                     u2315:
  1413   002442  010E               	movlb	14	; () banked
  1414   002444  9129               	bcf	41,0,b	;volatile
  1415   002446                     u2317:
  1416   002446                     
  1417                           ; BSR set to: 14
  1418                           ;main.c: 145:             wall = 0;
  1419   002446  0E00               	movlw	0
  1420   002448  0101               	movlb	1	; () banked
  1421   00244A  6FFB               	movwf	_wall& (0+255),b
  1422   00244C                     l3753:
  1423                           
  1424                           ; BSR set to: 1
  1425                           ;main.c: 157:         if (lost == 1) {
  1426   00244C  05FA               	decf	_lost& (0+255),w,b
  1427   00244E  A4D8               	btfss	status,2,c
  1428   002450  EF2C  F012         	goto	u2321
  1429   002454  EF2E  F012         	goto	u2320
  1430   002458                     u2321:
  1431   002458  EF63  F012         	goto	l3763
  1432   00245C                     u2320:
  1433   00245C                     
  1434                           ; BSR set to: 1
  1435                           ;main.c: 158:             PIE0bits.INT0IE=0;
  1436   00245C  010E               	movlb	14	; () banked
  1437   00245E  9129               	bcf	41,0,b	;volatile
  1438   002460                     
  1439                           ; BSR set to: 14
  1440                           ;main.c: 159:             stop(&motorL, &motorR, straightRamp);
  1441   002460  0EC8               	movlw	low main@motorL
  1442   002462  6E1F               	movwf	stop@mL^0,c
  1443   002464  0E01               	movlw	high main@motorL
  1444   002466  6E20               	movwf	(stop@mL+1)^0,c
  1445   002468  0EBE               	movlw	low main@motorR
  1446   00246A  6E21               	movwf	stop@mR^0,c
  1447   00246C  0E01               	movlw	high main@motorR
  1448   00246E  6E22               	movwf	(stop@mR+1)^0,c
  1449   002470  C1B3  F023         	movff	main@straightRamp,stop@straightRamp
  1450   002474  EC63  F019         	call	_stop	;wreg free
  1451                           
  1452                           ;main.c: 160:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1453   002478  0EC8               	movlw	low main@motorL
  1454   00247A  6E2D               	movwf	lostReturnHome@mL^0,c
  1455   00247C  0E01               	movlw	high main@motorL
  1456   00247E  6E2E               	movwf	(lostReturnHome@mL+1)^0,c
  1457   002480  0EBE               	movlw	low main@motorR
  1458   002482  6E2F               	movwf	lostReturnHome@mR^0,c
  1459   002484  0E01               	movlw	high main@motorR
  1460   002486  6E30               	movwf	(lostReturnHome@mR+1)^0,c
  1461   002488  0E7A               	movlw	low main@moveSequence
  1462   00248A  6E31               	movwf	lostReturnHome@moveSequence^0,c
  1463   00248C  0E01               	movlw	high main@moveSequence
  1464   00248E  6E32               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1465   002490  0E28               	movlw	low main@straightTime
  1466   002492  6E33               	movwf	lostReturnHome@straightTime^0,c
  1467   002494  0E01               	movlw	high main@straightTime
  1468   002496  6E34               	movwf	(lostReturnHome@straightTime+1)^0,c
  1469   002498  C1B4  F035         	movff	main@curMove,lostReturnHome@curMove
  1470   00249C  C1AF  F036         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1471   0024A0  C1AE  F037         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1472   0024A4  C1B3  F038         	movff	main@straightRamp,lostReturnHome@straightRamp
  1473   0024A8  C1B0  F039         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1474   0024AC  C1B5  F03A         	movff	main@turnDuration,lostReturnHome@turnDuration
  1475   0024B0  C1B1  F03B         	movff	main@turnRamp,lostReturnHome@turnRamp
  1476   0024B4  EC5F  F00A         	call	_lostReturnHome	;wreg free
  1477   0024B8                     
  1478                           ;main.c: 161:             PIE0bits.INT0IE=1;
  1479   0024B8  010E               	movlb	14	; () banked
  1480   0024BA  8129               	bsf	41,0,b	;volatile
  1481   0024BC                     
  1482                           ; BSR set to: 14
  1483                           ;main.c: 162:             lost = 0;
  1484   0024BC  0E00               	movlw	0
  1485   0024BE  0101               	movlb	1	; () banked
  1486   0024C0  6FFA               	movwf	_lost& (0+255),b
  1487                           
  1488                           ;main.c: 163:             break;
  1489   0024C2  EF75  F012         	goto	l96
  1490   0024C6                     l3763:
  1491                           
  1492                           ; BSR set to: 1
  1493                           ;main.c: 166:         if (color == 8 || color == 9) {break;}
  1494   0024C6  0E08               	movlw	8
  1495   0024C8  19B2               	xorwf	main@color& (0+255),w,b
  1496   0024CA  B4D8               	btfsc	status,2,c
  1497   0024CC  EF6A  F012         	goto	u2331
  1498   0024D0  EF6C  F012         	goto	u2330
  1499   0024D4                     u2331:
  1500   0024D4  EF75  F012         	goto	l96
  1501   0024D8                     u2330:
  1502   0024D8                     
  1503                           ; BSR set to: 1
  1504   0024D8  0E09               	movlw	9
  1505   0024DA  19B2               	xorwf	main@color& (0+255),w,b
  1506   0024DC  A4D8               	btfss	status,2,c
  1507   0024DE  EF73  F012         	goto	u2341
  1508   0024E2  EF75  F012         	goto	u2340
  1509   0024E6                     u2341:
  1510   0024E6  EFA3  F011         	goto	l3729
  1511   0024EA                     u2340:
  1512   0024EA                     l96:
  1513                           
  1514                           ; BSR set to: 1
  1515   0024EA  EF4C  F000         	goto	start
  1516   0024EE                     __end_of_main:
  1517                           	callstack 0
  1518                           
  1519 ;; *************** function _white_Light *****************
  1520 ;; Defined at:
  1521 ;;		line 57 in file "color.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  state           1    wreg     unsigned char 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  state           1   11[COMRAM] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1539 ;;Total ram usage:        1 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; Hardware stack levels required when called: 5
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_main
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text1
  1550   003A58                     __ptext1:
  1551                           	callstack 0
  1552   003A58                     _white_Light:
  1553                           	callstack 25
  1554                           
  1555                           ; BSR set to: 1
  1556                           ;incstack = 0
  1557                           ;white_Light@state stored from wreg
  1558   003A58  6E0C               	movwf	white_Light@state^0,c
  1559   003A5A                     
  1560                           ;color.c: 57: void white_Light(char state);color.c: 58: {;color.c: 59:     if (state){
  1561   003A5A  500C               	movf	white_Light@state^0,w,c
  1562   003A5C  B4D8               	btfsc	status,2,c
  1563   003A5E  EF33  F01D         	goto	u1731
  1564   003A62  EF35  F01D         	goto	u1730
  1565   003A66                     u1731:
  1566   003A66  EF3A  F01D         	goto	l134
  1567   003A6A                     u1730:
  1568   003A6A                     
  1569                           ;color.c: 60:         LATGbits.LATG0 = 1;
  1570   003A6A  807F               	bsf	127,0,c	;volatile
  1571                           
  1572                           ;color.c: 61:         LATEbits.LATE7 = 1;
  1573   003A6C  8E7D               	bsf	125,7,c	;volatile
  1574                           
  1575                           ;color.c: 62:         LATAbits.LATA3 = 1;
  1576   003A6E  8679               	bsf	121,3,c	;volatile
  1577                           
  1578                           ;color.c: 63:     }
  1579   003A70  EF3D  F01D         	goto	l136
  1580   003A74                     l134:
  1581                           
  1582                           ;color.c: 65:         LATGbits.LATG0 = 0;
  1583   003A74  907F               	bcf	127,0,c	;volatile
  1584                           
  1585                           ;color.c: 66:         LATEbits.LATE7 = 0;
  1586   003A76  9E7D               	bcf	125,7,c	;volatile
  1587                           
  1588                           ;color.c: 67:         LATAbits.LATA3 = 0;
  1589   003A78  9679               	bcf	121,3,c	;volatile
  1590   003A7A                     l136:
  1591   003A7A  0012               	return		;funcret
  1592   003A7C                     __end_of_white_Light:
  1593                           	callstack 0
  1594                           
  1595 ;; *************** function _move *****************
  1596 ;; Defined at:
  1597 ;;		line 91 in file "dc_motor.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  1600 ;;		 -> main@motorL(10), 
  1601 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  1602 ;;		 -> main@motorR(10), 
  1603 ;;  color           1    4[BANK0 ] unsigned char 
  1604 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  1605 ;;		 -> main@moveSequence(40), 
  1606 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  1607 ;;		 -> main@straightTime(82), 
  1608 ;;  curMove         1    9[BANK0 ] unsigned char 
  1609 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  1610 ;;  reverseDurat    1   11[BANK0 ] unsigned char 
  1611 ;;  straightRamp    1   12[BANK0 ] unsigned char 
  1612 ;;  turnSpeed       1   13[BANK0 ] unsigned char 
  1613 ;;  turnDuration    1   14[BANK0 ] unsigned char 
  1614 ;;  turnRamp        1   15[BANK0 ] unsigned char 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1626 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;Total ram usage:       18 bytes
  1631 ;; Hardware stack levels used: 1
  1632 ;; Hardware stack levels required when called: 9
  1633 ;; This function calls:
  1634 ;;		_fullSpeedAhead
  1635 ;;		_returnHome
  1636 ;;		_reverseOneSquare
  1637 ;;		_turnLeft
  1638 ;;		_turnRight
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text2
  1645   001B5E                     __ptext2:
  1646                           	callstack 0
  1647   001B5E                     _move:
  1648                           	callstack 21
  1649   001B5E                     
  1650                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reve
      +                          rseDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, uns
      +                          igned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  1651   001B5E  0100               	movlb	0	; () banked
  1652   001B60  05DC               	decf	move@color& (0+255),w,b
  1653   001B62  A4D8               	btfss	status,2,c
  1654   001B64  EFB6  F00D         	goto	u2161
  1655   001B68  EFB8  F00D         	goto	u2160
  1656   001B6C                     u2161:
  1657   001B6C  EF00  F00E         	goto	l3563
  1658   001B70                     u2160:
  1659   001B70                     
  1660                           ; BSR set to: 0
  1661                           ;dc_motor.c: 94:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1662   001B70  C0D8  F01F         	movff	move@mL,turnRight@mL
  1663   001B74  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  1664   001B78  C0DA  F021         	movff	move@mR,turnRight@mR
  1665   001B7C  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  1666   001B80  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1667   001B84  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  1668   001B88  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  1669   001B8C  ECAE  F015         	call	_turnRight	;wreg free
  1670   001B90                     
  1671                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1672   001B90  0E05               	movlw	5
  1673   001B92  6E42               	movwf	(??_move+1)^0,c
  1674   001B94  0E0F               	movlw	15
  1675   001B96  6E41               	movwf	??_move^0,c
  1676   001B98  0EF1               	movlw	241
  1677   001B9A                     u2387:
  1678   001B9A  2EE8               	decfsz	wreg,f,c
  1679   001B9C  D7FE               	bra	u2387
  1680   001B9E  2E41               	decfsz	??_move^0,f,c
  1681   001BA0  D7FC               	bra	u2387
  1682   001BA2  2E42               	decfsz	(??_move+1)^0,f,c
  1683   001BA4  D7FA               	bra	u2387
  1684   001BA6  0000               	nop	
  1685   001BA8                     
  1686                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1687   001BA8  C0D8  F01F         	movff	move@mL,turnRight@mL
  1688   001BAC  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  1689   001BB0  C0DA  F021         	movff	move@mR,turnRight@mR
  1690   001BB4  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  1691   001BB8  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1692   001BBC  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  1693   001BC0  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  1694   001BC4  ECAE  F015         	call	_turnRight	;wreg free
  1695                           
  1696                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1697   001BC8  0E05               	movlw	5
  1698   001BCA  6E42               	movwf	(??_move+1)^0,c
  1699   001BCC  0E0F               	movlw	15
  1700   001BCE  6E41               	movwf	??_move^0,c
  1701   001BD0  0EF1               	movlw	241
  1702   001BD2                     u2397:
  1703   001BD2  2EE8               	decfsz	wreg,f,c
  1704   001BD4  D7FE               	bra	u2397
  1705   001BD6  2E41               	decfsz	??_move^0,f,c
  1706   001BD8  D7FC               	bra	u2397
  1707   001BDA  2E42               	decfsz	(??_move+1)^0,f,c
  1708   001BDC  D7FA               	bra	u2397
  1709   001BDE  0000               	nop	
  1710   001BE0                     
  1711                           ;dc_motor.c: 98:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1712   001BE0  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  1713   001BE4  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1714   001BE8  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  1715   001BEC  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1716   001BF0  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1717   001BF4  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1718   001BF8  ECE7  F019         	call	_fullSpeedAhead	;wreg free
  1719                           
  1720                           ;dc_motor.c: 99:     }
  1721   001BFC  EFD9  F010         	goto	l491
  1722   001C00                     l3563:
  1723                           
  1724                           ; BSR set to: 0
  1725   001C00  0E02               	movlw	2
  1726   001C02  19DC               	xorwf	move@color& (0+255),w,b
  1727   001C04  A4D8               	btfss	status,2,c
  1728   001C06  EF07  F00E         	goto	u2171
  1729   001C0A  EF09  F00E         	goto	u2170
  1730   001C0E                     u2171:
  1731   001C0E  EF51  F00E         	goto	l3573
  1732   001C12                     u2170:
  1733   001C12                     
  1734                           ; BSR set to: 0
  1735                           ;dc_motor.c: 102:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1736   001C12  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1737   001C16  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1738   001C1A  C0DA  F021         	movff	move@mR,turnLeft@mR
  1739   001C1E  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1740   001C22  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1741   001C26  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1742   001C2A  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1743   001C2E  EC98  F016         	call	_turnLeft	;wreg free
  1744   001C32                     
  1745                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1746   001C32  0E05               	movlw	5
  1747   001C34  6E42               	movwf	(??_move+1)^0,c
  1748   001C36  0E0F               	movlw	15
  1749   001C38  6E41               	movwf	??_move^0,c
  1750   001C3A  0EF1               	movlw	241
  1751   001C3C                     u2407:
  1752   001C3C  2EE8               	decfsz	wreg,f,c
  1753   001C3E  D7FE               	bra	u2407
  1754   001C40  2E41               	decfsz	??_move^0,f,c
  1755   001C42  D7FC               	bra	u2407
  1756   001C44  2E42               	decfsz	(??_move+1)^0,f,c
  1757   001C46  D7FA               	bra	u2407
  1758   001C48  0000               	nop	
  1759   001C4A                     
  1760                           ;dc_motor.c: 104:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1761   001C4A  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1762   001C4E  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1763   001C52  C0DA  F021         	movff	move@mR,turnLeft@mR
  1764   001C56  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1765   001C5A  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1766   001C5E  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1767   001C62  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1768   001C66  EC98  F016         	call	_turnLeft	;wreg free
  1769                           
  1770                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1771   001C6A  0E05               	movlw	5
  1772   001C6C  6E42               	movwf	(??_move+1)^0,c
  1773   001C6E  0E0F               	movlw	15
  1774   001C70  6E41               	movwf	??_move^0,c
  1775   001C72  0EF1               	movlw	241
  1776   001C74                     u2417:
  1777   001C74  2EE8               	decfsz	wreg,f,c
  1778   001C76  D7FE               	bra	u2417
  1779   001C78  2E41               	decfsz	??_move^0,f,c
  1780   001C7A  D7FC               	bra	u2417
  1781   001C7C  2E42               	decfsz	(??_move+1)^0,f,c
  1782   001C7E  D7FA               	bra	u2417
  1783   001C80  0000               	nop	
  1784   001C82                     
  1785                           ;dc_motor.c: 106:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1786   001C82  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  1787   001C86  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1788   001C8A  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  1789   001C8E  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1790   001C92  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1791   001C96  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1792   001C9A  ECE7  F019         	call	_fullSpeedAhead	;wreg free
  1793                           
  1794                           ;dc_motor.c: 107:     }
  1795   001C9E  EFD9  F010         	goto	l491
  1796   001CA2                     l3573:
  1797                           
  1798                           ; BSR set to: 0
  1799   001CA2  0E03               	movlw	3
  1800   001CA4  19DC               	xorwf	move@color& (0+255),w,b
  1801   001CA6  A4D8               	btfss	status,2,c
  1802   001CA8  EF58  F00E         	goto	u2181
  1803   001CAC  EF5A  F00E         	goto	u2180
  1804   001CB0                     u2181:
  1805   001CB0  EFDA  F00E         	goto	l3589
  1806   001CB4                     u2180:
  1807   001CB4                     
  1808                           ; BSR set to: 0
  1809                           ;dc_motor.c: 110:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1810   001CB4  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1811   001CB8  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1812   001CBC  C0DA  F021         	movff	move@mR,turnLeft@mR
  1813   001CC0  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1814   001CC4  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1815   001CC8  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1816   001CCC  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1817   001CD0  EC98  F016         	call	_turnLeft	;wreg free
  1818   001CD4                     
  1819                           ;dc_motor.c: 111:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1820   001CD4  0E05               	movlw	5
  1821   001CD6  6E42               	movwf	(??_move+1)^0,c
  1822   001CD8  0E0F               	movlw	15
  1823   001CDA  6E41               	movwf	??_move^0,c
  1824   001CDC  0EF1               	movlw	241
  1825   001CDE                     u2427:
  1826   001CDE  2EE8               	decfsz	wreg,f,c
  1827   001CE0  D7FE               	bra	u2427
  1828   001CE2  2E41               	decfsz	??_move^0,f,c
  1829   001CE4  D7FC               	bra	u2427
  1830   001CE6  2E42               	decfsz	(??_move+1)^0,f,c
  1831   001CE8  D7FA               	bra	u2427
  1832   001CEA  0000               	nop	
  1833   001CEC                     
  1834                           ;dc_motor.c: 112:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1835   001CEC  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1836   001CF0  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1837   001CF4  C0DA  F021         	movff	move@mR,turnLeft@mR
  1838   001CF8  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1839   001CFC  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1840   001D00  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1841   001D04  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1842   001D08  EC98  F016         	call	_turnLeft	;wreg free
  1843                           
  1844                           ;dc_motor.c: 113:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1845   001D0C  0E05               	movlw	5
  1846   001D0E  6E42               	movwf	(??_move+1)^0,c
  1847   001D10  0E0F               	movlw	15
  1848   001D12  6E41               	movwf	??_move^0,c
  1849   001D14  0EF1               	movlw	241
  1850   001D16                     u2437:
  1851   001D16  2EE8               	decfsz	wreg,f,c
  1852   001D18  D7FE               	bra	u2437
  1853   001D1A  2E41               	decfsz	??_move^0,f,c
  1854   001D1C  D7FC               	bra	u2437
  1855   001D1E  2E42               	decfsz	(??_move+1)^0,f,c
  1856   001D20  D7FA               	bra	u2437
  1857   001D22  0000               	nop	
  1858   001D24                     
  1859                           ;dc_motor.c: 114:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1860   001D24  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1861   001D28  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1862   001D2C  C0DA  F021         	movff	move@mR,turnLeft@mR
  1863   001D30  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1864   001D34  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1865   001D38  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1866   001D3C  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1867   001D40  EC98  F016         	call	_turnLeft	;wreg free
  1868   001D44                     
  1869                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1870   001D44  0E05               	movlw	5
  1871   001D46  6E42               	movwf	(??_move+1)^0,c
  1872   001D48  0E0F               	movlw	15
  1873   001D4A  6E41               	movwf	??_move^0,c
  1874   001D4C  0EF1               	movlw	241
  1875   001D4E                     u2447:
  1876   001D4E  2EE8               	decfsz	wreg,f,c
  1877   001D50  D7FE               	bra	u2447
  1878   001D52  2E41               	decfsz	??_move^0,f,c
  1879   001D54  D7FC               	bra	u2447
  1880   001D56  2E42               	decfsz	(??_move+1)^0,f,c
  1881   001D58  D7FA               	bra	u2447
  1882   001D5A  0000               	nop	
  1883                           
  1884                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1885   001D5C  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1886   001D60  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1887   001D64  C0DA  F021         	movff	move@mR,turnLeft@mR
  1888   001D68  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1889   001D6C  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1890   001D70  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1891   001D74  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1892   001D78  EC98  F016         	call	_turnLeft	;wreg free
  1893   001D7C                     
  1894                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1895   001D7C  0E05               	movlw	5
  1896   001D7E  6E42               	movwf	(??_move+1)^0,c
  1897   001D80  0E0F               	movlw	15
  1898   001D82  6E41               	movwf	??_move^0,c
  1899   001D84  0EF1               	movlw	241
  1900   001D86                     u2457:
  1901   001D86  2EE8               	decfsz	wreg,f,c
  1902   001D88  D7FE               	bra	u2457
  1903   001D8A  2E41               	decfsz	??_move^0,f,c
  1904   001D8C  D7FC               	bra	u2457
  1905   001D8E  2E42               	decfsz	(??_move+1)^0,f,c
  1906   001D90  D7FA               	bra	u2457
  1907   001D92  0000               	nop	
  1908   001D94                     
  1909                           ;dc_motor.c: 118:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1910   001D94  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  1911   001D98  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1912   001D9C  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  1913   001DA0  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1914   001DA4  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1915   001DA8  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1916   001DAC  ECE7  F019         	call	_fullSpeedAhead	;wreg free
  1917                           
  1918                           ;dc_motor.c: 119:     }
  1919   001DB0  EFD9  F010         	goto	l491
  1920   001DB4                     l3589:
  1921                           
  1922                           ; BSR set to: 0
  1923   001DB4  0E04               	movlw	4
  1924   001DB6  19DC               	xorwf	move@color& (0+255),w,b
  1925   001DB8  A4D8               	btfss	status,2,c
  1926   001DBA  EFE1  F00E         	goto	u2191
  1927   001DBE  EFE3  F00E         	goto	u2190
  1928   001DC2                     u2191:
  1929   001DC2  EF47  F00F         	goto	l3601
  1930   001DC6                     u2190:
  1931   001DC6                     
  1932                           ; BSR set to: 0
  1933                           ;dc_motor.c: 122:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  1934   001DC6  C0D8  F01F         	movff	move@mL,reverseOneSquare@mL
  1935   001DCA  C0D9  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  1936   001DCE  C0DA  F021         	movff	move@mR,reverseOneSquare@mR
  1937   001DD2  C0DB  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  1938   001DD6  C0E2  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  1939   001DDA  C0E3  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  1940   001DDE  C0E4  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  1941   001DE2  ECBB  F014         	call	_reverseOneSquare	;wreg free
  1942   001DE6                     
  1943                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1944   001DE6  0E05               	movlw	5
  1945   001DE8  6E42               	movwf	(??_move+1)^0,c
  1946   001DEA  0E0F               	movlw	15
  1947   001DEC  6E41               	movwf	??_move^0,c
  1948   001DEE  0EF1               	movlw	241
  1949   001DF0                     u2467:
  1950   001DF0  2EE8               	decfsz	wreg,f,c
  1951   001DF2  D7FE               	bra	u2467
  1952   001DF4  2E41               	decfsz	??_move^0,f,c
  1953   001DF6  D7FC               	bra	u2467
  1954   001DF8  2E42               	decfsz	(??_move+1)^0,f,c
  1955   001DFA  D7FA               	bra	u2467
  1956   001DFC  0000               	nop	
  1957   001DFE                     
  1958                           ;dc_motor.c: 124:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1959   001DFE  C0D8  F01F         	movff	move@mL,turnRight@mL
  1960   001E02  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  1961   001E06  C0DA  F021         	movff	move@mR,turnRight@mR
  1962   001E0A  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  1963   001E0E  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1964   001E12  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  1965   001E16  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  1966   001E1A  ECAE  F015         	call	_turnRight	;wreg free
  1967                           
  1968                           ;dc_motor.c: 125:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1969   001E1E  0E05               	movlw	5
  1970   001E20  6E42               	movwf	(??_move+1)^0,c
  1971   001E22  0E0F               	movlw	15
  1972   001E24  6E41               	movwf	??_move^0,c
  1973   001E26  0EF1               	movlw	241
  1974   001E28                     u2477:
  1975   001E28  2EE8               	decfsz	wreg,f,c
  1976   001E2A  D7FE               	bra	u2477
  1977   001E2C  2E41               	decfsz	??_move^0,f,c
  1978   001E2E  D7FC               	bra	u2477
  1979   001E30  2E42               	decfsz	(??_move+1)^0,f,c
  1980   001E32  D7FA               	bra	u2477
  1981   001E34  0000               	nop	
  1982   001E36                     
  1983                           ;dc_motor.c: 126:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1984   001E36  C0D8  F01F         	movff	move@mL,turnRight@mL
  1985   001E3A  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  1986   001E3E  C0DA  F021         	movff	move@mR,turnRight@mR
  1987   001E42  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  1988   001E46  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1989   001E4A  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  1990   001E4E  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  1991   001E52  ECAE  F015         	call	_turnRight	;wreg free
  1992   001E56                     
  1993                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1994   001E56  0E05               	movlw	5
  1995   001E58  6E42               	movwf	(??_move+1)^0,c
  1996   001E5A  0E0F               	movlw	15
  1997   001E5C  6E41               	movwf	??_move^0,c
  1998   001E5E  0EF1               	movlw	241
  1999   001E60                     u2487:
  2000   001E60  2EE8               	decfsz	wreg,f,c
  2001   001E62  D7FE               	bra	u2487
  2002   001E64  2E41               	decfsz	??_move^0,f,c
  2003   001E66  D7FC               	bra	u2487
  2004   001E68  2E42               	decfsz	(??_move+1)^0,f,c
  2005   001E6A  D7FA               	bra	u2487
  2006   001E6C  0000               	nop	
  2007                           
  2008                           ;dc_motor.c: 128:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2009   001E6E  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2010   001E72  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2011   001E76  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2012   001E7A  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2013   001E7E  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2014   001E82  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2015   001E86  ECE7  F019         	call	_fullSpeedAhead	;wreg free
  2016                           
  2017                           ;dc_motor.c: 129:     }
  2018   001E8A  EFD9  F010         	goto	l491
  2019   001E8E                     l3601:
  2020                           
  2021                           ; BSR set to: 0
  2022   001E8E  0E05               	movlw	5
  2023   001E90  19DC               	xorwf	move@color& (0+255),w,b
  2024   001E92  A4D8               	btfss	status,2,c
  2025   001E94  EF4E  F00F         	goto	u2201
  2026   001E98  EF50  F00F         	goto	u2200
  2027   001E9C                     u2201:
  2028   001E9C  EFB4  F00F         	goto	l3613
  2029   001EA0                     u2200:
  2030   001EA0                     
  2031                           ; BSR set to: 0
  2032                           ;dc_motor.c: 132:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2033   001EA0  C0D8  F01F         	movff	move@mL,reverseOneSquare@mL
  2034   001EA4  C0D9  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2035   001EA8  C0DA  F021         	movff	move@mR,reverseOneSquare@mR
  2036   001EAC  C0DB  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2037   001EB0  C0E2  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2038   001EB4  C0E3  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2039   001EB8  C0E4  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2040   001EBC  ECBB  F014         	call	_reverseOneSquare	;wreg free
  2041   001EC0                     
  2042                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2043   001EC0  0E05               	movlw	5
  2044   001EC2  6E42               	movwf	(??_move+1)^0,c
  2045   001EC4  0E0F               	movlw	15
  2046   001EC6  6E41               	movwf	??_move^0,c
  2047   001EC8  0EF1               	movlw	241
  2048   001ECA                     u2497:
  2049   001ECA  2EE8               	decfsz	wreg,f,c
  2050   001ECC  D7FE               	bra	u2497
  2051   001ECE  2E41               	decfsz	??_move^0,f,c
  2052   001ED0  D7FC               	bra	u2497
  2053   001ED2  2E42               	decfsz	(??_move+1)^0,f,c
  2054   001ED4  D7FA               	bra	u2497
  2055   001ED6  0000               	nop	
  2056   001ED8                     
  2057                           ;dc_motor.c: 134:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2058   001ED8  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2059   001EDC  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2060   001EE0  C0DA  F021         	movff	move@mR,turnLeft@mR
  2061   001EE4  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2062   001EE8  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2063   001EEC  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2064   001EF0  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2065   001EF4  EC98  F016         	call	_turnLeft	;wreg free
  2066                           
  2067                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2068   001EF8  0E05               	movlw	5
  2069   001EFA  6E42               	movwf	(??_move+1)^0,c
  2070   001EFC  0E0F               	movlw	15
  2071   001EFE  6E41               	movwf	??_move^0,c
  2072   001F00  0EF1               	movlw	241
  2073   001F02                     u2507:
  2074   001F02  2EE8               	decfsz	wreg,f,c
  2075   001F04  D7FE               	bra	u2507
  2076   001F06  2E41               	decfsz	??_move^0,f,c
  2077   001F08  D7FC               	bra	u2507
  2078   001F0A  2E42               	decfsz	(??_move+1)^0,f,c
  2079   001F0C  D7FA               	bra	u2507
  2080   001F0E  0000               	nop	
  2081   001F10                     
  2082                           ;dc_motor.c: 136:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2083   001F10  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2084   001F14  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2085   001F18  C0DA  F021         	movff	move@mR,turnLeft@mR
  2086   001F1C  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2087   001F20  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2088   001F24  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2089   001F28  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2090   001F2C  EC98  F016         	call	_turnLeft	;wreg free
  2091   001F30                     
  2092                           ;dc_motor.c: 137:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2093   001F30  0E05               	movlw	5
  2094   001F32  6E42               	movwf	(??_move+1)^0,c
  2095   001F34  0E0F               	movlw	15
  2096   001F36  6E41               	movwf	??_move^0,c
  2097   001F38  0EF1               	movlw	241
  2098   001F3A                     u2517:
  2099   001F3A  2EE8               	decfsz	wreg,f,c
  2100   001F3C  D7FE               	bra	u2517
  2101   001F3E  2E41               	decfsz	??_move^0,f,c
  2102   001F40  D7FC               	bra	u2517
  2103   001F42  2E42               	decfsz	(??_move+1)^0,f,c
  2104   001F44  D7FA               	bra	u2517
  2105   001F46  0000               	nop	
  2106                           
  2107                           ;dc_motor.c: 138:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2108   001F48  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2109   001F4C  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2110   001F50  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2111   001F54  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2112   001F58  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2113   001F5C  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2114   001F60  ECE7  F019         	call	_fullSpeedAhead	;wreg free
  2115                           
  2116                           ;dc_motor.c: 139:     }
  2117   001F64  EFD9  F010         	goto	l491
  2118   001F68                     l3613:
  2119                           
  2120                           ; BSR set to: 0
  2121   001F68  0E06               	movlw	6
  2122   001F6A  19DC               	xorwf	move@color& (0+255),w,b
  2123   001F6C  A4D8               	btfss	status,2,c
  2124   001F6E  EFBB  F00F         	goto	u2211
  2125   001F72  EFBD  F00F         	goto	u2210
  2126   001F76                     u2211:
  2127   001F76  EF21  F010         	goto	l3625
  2128   001F7A                     u2210:
  2129   001F7A                     
  2130                           ; BSR set to: 0
  2131                           ;dc_motor.c: 142:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2132   001F7A  C0D8  F01F         	movff	move@mL,turnRight@mL
  2133   001F7E  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2134   001F82  C0DA  F021         	movff	move@mR,turnRight@mR
  2135   001F86  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2136   001F8A  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2137   001F8E  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2138   001F92  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2139   001F96  ECAE  F015         	call	_turnRight	;wreg free
  2140   001F9A                     
  2141                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2142   001F9A  0E05               	movlw	5
  2143   001F9C  6E42               	movwf	(??_move+1)^0,c
  2144   001F9E  0E0F               	movlw	15
  2145   001FA0  6E41               	movwf	??_move^0,c
  2146   001FA2  0EF1               	movlw	241
  2147   001FA4                     u2527:
  2148   001FA4  2EE8               	decfsz	wreg,f,c
  2149   001FA6  D7FE               	bra	u2527
  2150   001FA8  2E41               	decfsz	??_move^0,f,c
  2151   001FAA  D7FC               	bra	u2527
  2152   001FAC  2E42               	decfsz	(??_move+1)^0,f,c
  2153   001FAE  D7FA               	bra	u2527
  2154   001FB0  0000               	nop	
  2155   001FB2                     
  2156                           ;dc_motor.c: 144:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2157   001FB2  C0D8  F01F         	movff	move@mL,turnRight@mL
  2158   001FB6  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2159   001FBA  C0DA  F021         	movff	move@mR,turnRight@mR
  2160   001FBE  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2161   001FC2  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2162   001FC6  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2163   001FCA  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2164   001FCE  ECAE  F015         	call	_turnRight	;wreg free
  2165                           
  2166                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2167   001FD2  0E05               	movlw	5
  2168   001FD4  6E42               	movwf	(??_move+1)^0,c
  2169   001FD6  0E0F               	movlw	15
  2170   001FD8  6E41               	movwf	??_move^0,c
  2171   001FDA  0EF1               	movlw	241
  2172   001FDC                     u2537:
  2173   001FDC  2EE8               	decfsz	wreg,f,c
  2174   001FDE  D7FE               	bra	u2537
  2175   001FE0  2E41               	decfsz	??_move^0,f,c
  2176   001FE2  D7FC               	bra	u2537
  2177   001FE4  2E42               	decfsz	(??_move+1)^0,f,c
  2178   001FE6  D7FA               	bra	u2537
  2179   001FE8  0000               	nop	
  2180   001FEA                     
  2181                           ;dc_motor.c: 146:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2182   001FEA  C0D8  F01F         	movff	move@mL,turnRight@mL
  2183   001FEE  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2184   001FF2  C0DA  F021         	movff	move@mR,turnRight@mR
  2185   001FF6  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2186   001FFA  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2187   001FFE  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2188   002002  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2189   002006  ECAE  F015         	call	_turnRight	;wreg free
  2190   00200A                     
  2191                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2192   00200A  0E05               	movlw	5
  2193   00200C  6E42               	movwf	(??_move+1)^0,c
  2194   00200E  0E0F               	movlw	15
  2195   002010  6E41               	movwf	??_move^0,c
  2196   002012  0EF1               	movlw	241
  2197   002014                     u2547:
  2198   002014  2EE8               	decfsz	wreg,f,c
  2199   002016  D7FE               	bra	u2547
  2200   002018  2E41               	decfsz	??_move^0,f,c
  2201   00201A  D7FC               	bra	u2547
  2202   00201C  2E42               	decfsz	(??_move+1)^0,f,c
  2203   00201E  D7FA               	bra	u2547
  2204   002020  0000               	nop	
  2205                           
  2206                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2207   002022  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2208   002026  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2209   00202A  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2210   00202E  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2211   002032  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2212   002036  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2213   00203A  ECE7  F019         	call	_fullSpeedAhead	;wreg free
  2214                           
  2215                           ;dc_motor.c: 149:     }
  2216   00203E  EFD9  F010         	goto	l491
  2217   002042                     l3625:
  2218                           
  2219                           ; BSR set to: 0
  2220   002042  0E07               	movlw	7
  2221   002044  19DC               	xorwf	move@color& (0+255),w,b
  2222   002046  A4D8               	btfss	status,2,c
  2223   002048  EF28  F010         	goto	u2221
  2224   00204C  EF2A  F010         	goto	u2220
  2225   002050                     u2221:
  2226   002050  EF8E  F010         	goto	l3637
  2227   002054                     u2220:
  2228   002054                     
  2229                           ; BSR set to: 0
  2230                           ;dc_motor.c: 152:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2231   002054  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2232   002058  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2233   00205C  C0DA  F021         	movff	move@mR,turnLeft@mR
  2234   002060  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2235   002064  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2236   002068  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2237   00206C  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2238   002070  EC98  F016         	call	_turnLeft	;wreg free
  2239   002074                     
  2240                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2241   002074  0E05               	movlw	5
  2242   002076  6E42               	movwf	(??_move+1)^0,c
  2243   002078  0E0F               	movlw	15
  2244   00207A  6E41               	movwf	??_move^0,c
  2245   00207C  0EF1               	movlw	241
  2246   00207E                     u2557:
  2247   00207E  2EE8               	decfsz	wreg,f,c
  2248   002080  D7FE               	bra	u2557
  2249   002082  2E41               	decfsz	??_move^0,f,c
  2250   002084  D7FC               	bra	u2557
  2251   002086  2E42               	decfsz	(??_move+1)^0,f,c
  2252   002088  D7FA               	bra	u2557
  2253   00208A  0000               	nop	
  2254   00208C                     
  2255                           ;dc_motor.c: 154:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2256   00208C  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2257   002090  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2258   002094  C0DA  F021         	movff	move@mR,turnLeft@mR
  2259   002098  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2260   00209C  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2261   0020A0  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2262   0020A4  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2263   0020A8  EC98  F016         	call	_turnLeft	;wreg free
  2264                           
  2265                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2266   0020AC  0E05               	movlw	5
  2267   0020AE  6E42               	movwf	(??_move+1)^0,c
  2268   0020B0  0E0F               	movlw	15
  2269   0020B2  6E41               	movwf	??_move^0,c
  2270   0020B4  0EF1               	movlw	241
  2271   0020B6                     u2567:
  2272   0020B6  2EE8               	decfsz	wreg,f,c
  2273   0020B8  D7FE               	bra	u2567
  2274   0020BA  2E41               	decfsz	??_move^0,f,c
  2275   0020BC  D7FC               	bra	u2567
  2276   0020BE  2E42               	decfsz	(??_move+1)^0,f,c
  2277   0020C0  D7FA               	bra	u2567
  2278   0020C2  0000               	nop	
  2279   0020C4                     
  2280                           ;dc_motor.c: 156:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2281   0020C4  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2282   0020C8  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2283   0020CC  C0DA  F021         	movff	move@mR,turnLeft@mR
  2284   0020D0  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2285   0020D4  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2286   0020D8  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2287   0020DC  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2288   0020E0  EC98  F016         	call	_turnLeft	;wreg free
  2289   0020E4                     
  2290                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2291   0020E4  0E05               	movlw	5
  2292   0020E6  6E42               	movwf	(??_move+1)^0,c
  2293   0020E8  0E0F               	movlw	15
  2294   0020EA  6E41               	movwf	??_move^0,c
  2295   0020EC  0EF1               	movlw	241
  2296   0020EE                     u2577:
  2297   0020EE  2EE8               	decfsz	wreg,f,c
  2298   0020F0  D7FE               	bra	u2577
  2299   0020F2  2E41               	decfsz	??_move^0,f,c
  2300   0020F4  D7FC               	bra	u2577
  2301   0020F6  2E42               	decfsz	(??_move+1)^0,f,c
  2302   0020F8  D7FA               	bra	u2577
  2303   0020FA  0000               	nop	
  2304                           
  2305                           ;dc_motor.c: 158:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2306   0020FC  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2307   002100  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2308   002104  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2309   002108  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2310   00210C  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2311   002110  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2312   002114  ECE7  F019         	call	_fullSpeedAhead	;wreg free
  2313                           
  2314                           ;dc_motor.c: 159:     }
  2315   002118  EFD9  F010         	goto	l491
  2316   00211C                     l3637:
  2317                           
  2318                           ; BSR set to: 0
  2319   00211C  0E08               	movlw	8
  2320   00211E  19DC               	xorwf	move@color& (0+255),w,b
  2321   002120  A4D8               	btfss	status,2,c
  2322   002122  EF95  F010         	goto	u2231
  2323   002126  EF97  F010         	goto	u2230
  2324   00212A                     u2231:
  2325   00212A  EFB9  F010         	goto	l3641
  2326   00212E                     u2230:
  2327   00212E                     
  2328                           ; BSR set to: 0
  2329                           ;dc_motor.c: 162:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2330   00212E  C0D8  F02D         	movff	move@mL,returnHome@mL
  2331   002132  C0D9  F02E         	movff	move@mL+1,returnHome@mL+1
  2332   002136  C0DA  F02F         	movff	move@mR,returnHome@mR
  2333   00213A  C0DB  F030         	movff	move@mR+1,returnHome@mR+1
  2334   00213E  C0DD  F031         	movff	move@moveSequence,returnHome@moveSequence
  2335   002142  C0DE  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2336   002146  C0DF  F033         	movff	move@straightTime,returnHome@straightTime
  2337   00214A  C0E0  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2338   00214E  C0E1  F035         	movff	move@curMove,returnHome@curMove
  2339   002152  C0E2  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2340   002156  C0E3  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2341   00215A  C0E4  F038         	movff	move@straightRamp,returnHome@straightRamp
  2342   00215E  C0E5  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2343   002162  C0E6  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2344   002166  C0E7  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2345   00216A  EC01  F007         	call	_returnHome	;wreg free
  2346                           
  2347                           ;dc_motor.c: 163:     }
  2348   00216E  EFD9  F010         	goto	l491
  2349   002172                     l3641:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;dc_motor.c: 166:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2353   002172  C0D8  F02D         	movff	move@mL,returnHome@mL
  2354   002176  C0D9  F02E         	movff	move@mL+1,returnHome@mL+1
  2355   00217A  C0DA  F02F         	movff	move@mR,returnHome@mR
  2356   00217E  C0DB  F030         	movff	move@mR+1,returnHome@mR+1
  2357   002182  C0DD  F031         	movff	move@moveSequence,returnHome@moveSequence
  2358   002186  C0DE  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2359   00218A  C0DF  F033         	movff	move@straightTime,returnHome@straightTime
  2360   00218E  C0E0  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2361   002192  C0E1  F035         	movff	move@curMove,returnHome@curMove
  2362   002196  C0E2  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2363   00219A  C0E3  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2364   00219E  C0E4  F038         	movff	move@straightRamp,returnHome@straightRamp
  2365   0021A2  C0E5  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2366   0021A6  C0E6  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2367   0021AA  C0E7  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2368   0021AE  EC01  F007         	call	_returnHome	;wreg free
  2369   0021B2                     l491:
  2370   0021B2  0012               	return		;funcret
  2371   0021B4                     __end_of_move:
  2372                           	callstack 0
  2373                           
  2374 ;; *************** function _returnHome *****************
  2375 ;; Defined at:
  2376 ;;		line 171 in file "dc_motor.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2379 ;;		 -> main@motorL(10), 
  2380 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2381 ;;		 -> main@motorR(10), 
  2382 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  2383 ;;		 -> main@moveSequence(40), 
  2384 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  2385 ;;		 -> main@straightTime(82), 
  2386 ;;  curMove         1   52[COMRAM] unsigned char 
  2387 ;;  straightSpee    1   53[COMRAM] unsigned char 
  2388 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  2389 ;;  straightRamp    1   55[COMRAM] unsigned char 
  2390 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  2391 ;;  turnDuration    1   57[COMRAM] unsigned char 
  2392 ;;  turnRamp        1   58[COMRAM] unsigned char 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  i               1   63[COMRAM] unsigned char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2404 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2406 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2407 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2408 ;;Total ram usage:       20 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; Hardware stack levels required when called: 8
  2411 ;; This function calls:
  2412 ;;		_fullSpeedAhead
  2413 ;;		_get16bitTMR0val
  2414 ;;		_resetTimer
  2415 ;;		_reverseOneSquare
  2416 ;;		_stop
  2417 ;;		_turnLeft
  2418 ;;		_turnRight
  2419 ;; This function is called by:
  2420 ;;		_move
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text3
  2425   000E02                     __ptext3:
  2426                           	callstack 0
  2427   000E02                     _returnHome:
  2428                           	callstack 21
  2429   000E02                     
  2430                           ;dc_motor.c: 171: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reverseDu
      +                          ration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned
      +                           char turnRamp);dc_motor.c: 172: {;dc_motor.c: 173:     turnLeft(mL, mR, turnSpeed, turn
      +                          Duration, turnRamp);
  2431   000E02  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2432   000E06  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2433   000E0A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2434   000E0E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2435   000E12  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2436   000E16  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2437   000E1A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2438   000E1E  EC98  F016         	call	_turnLeft	;wreg free
  2439   000E22                     
  2440                           ;dc_motor.c: 174:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2441   000E22  0E05               	movlw	5
  2442   000E24  6E3D               	movwf	(??_returnHome+1)^0,c
  2443   000E26  0E0F               	movlw	15
  2444   000E28  6E3C               	movwf	??_returnHome^0,c
  2445   000E2A  0EF1               	movlw	241
  2446   000E2C                     u2587:
  2447   000E2C  2EE8               	decfsz	wreg,f,c
  2448   000E2E  D7FE               	bra	u2587
  2449   000E30  2E3C               	decfsz	??_returnHome^0,f,c
  2450   000E32  D7FC               	bra	u2587
  2451   000E34  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2452   000E36  D7FA               	bra	u2587
  2453   000E38  0000               	nop	
  2454   000E3A                     
  2455                           ;dc_motor.c: 175:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2456   000E3A  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2457   000E3E  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2458   000E42  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2459   000E46  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2460   000E4A  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2461   000E4E  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2462   000E52  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2463   000E56  EC98  F016         	call	_turnLeft	;wreg free
  2464                           
  2465                           ;dc_motor.c: 176:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2466   000E5A  0E05               	movlw	5
  2467   000E5C  6E3D               	movwf	(??_returnHome+1)^0,c
  2468   000E5E  0E0F               	movlw	15
  2469   000E60  6E3C               	movwf	??_returnHome^0,c
  2470   000E62  0EF1               	movlw	241
  2471   000E64                     u2597:
  2472   000E64  2EE8               	decfsz	wreg,f,c
  2473   000E66  D7FE               	bra	u2597
  2474   000E68  2E3C               	decfsz	??_returnHome^0,f,c
  2475   000E6A  D7FC               	bra	u2597
  2476   000E6C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2477   000E6E  D7FA               	bra	u2597
  2478   000E70  0000               	nop	
  2479   000E72                     
  2480                           ;dc_motor.c: 177:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2481   000E72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2482   000E76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2483   000E7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2484   000E7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2485   000E82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2486   000E86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2487   000E8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2488   000E8E  EC98  F016         	call	_turnLeft	;wreg free
  2489   000E92                     
  2490                           ;dc_motor.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2491   000E92  0E05               	movlw	5
  2492   000E94  6E3D               	movwf	(??_returnHome+1)^0,c
  2493   000E96  0E0F               	movlw	15
  2494   000E98  6E3C               	movwf	??_returnHome^0,c
  2495   000E9A  0EF1               	movlw	241
  2496   000E9C                     u2607:
  2497   000E9C  2EE8               	decfsz	wreg,f,c
  2498   000E9E  D7FE               	bra	u2607
  2499   000EA0  2E3C               	decfsz	??_returnHome^0,f,c
  2500   000EA2  D7FC               	bra	u2607
  2501   000EA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2502   000EA6  D7FA               	bra	u2607
  2503   000EA8  0000               	nop	
  2504                           
  2505                           ;dc_motor.c: 179:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2506   000EAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2507   000EAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2508   000EB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2509   000EB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2510   000EBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2511   000EBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2512   000EC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2513   000EC6  EC98  F016         	call	_turnLeft	;wreg free
  2514   000ECA                     
  2515                           ;dc_motor.c: 180:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2516   000ECA  0E05               	movlw	5
  2517   000ECC  6E3D               	movwf	(??_returnHome+1)^0,c
  2518   000ECE  0E0F               	movlw	15
  2519   000ED0  6E3C               	movwf	??_returnHome^0,c
  2520   000ED2  0EF1               	movlw	241
  2521   000ED4                     u2617:
  2522   000ED4  2EE8               	decfsz	wreg,f,c
  2523   000ED6  D7FE               	bra	u2617
  2524   000ED8  2E3C               	decfsz	??_returnHome^0,f,c
  2525   000EDA  D7FC               	bra	u2617
  2526   000EDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2527   000EDE  D7FA               	bra	u2617
  2528   000EE0  0000               	nop	
  2529   000EE2                     
  2530                           ;dc_motor.c: 181:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2531   000EE2  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  2532   000EE6  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  2533   000EEA  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  2534   000EEE  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  2535   000EF2  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  2536   000EF6  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  2537   000EFA  ECE7  F019         	call	_fullSpeedAhead	;wreg free
  2538   000EFE                     
  2539                           ;dc_motor.c: 182:     resetTimer();
  2540   000EFE  ECB9  F01D         	call	_resetTimer	;wreg free
  2541   000F02                     l2797:
  2542   000F02  5035               	movf	returnHome@curMove^0,w,c
  2543   000F04  0D02               	mullw	2
  2544   000F06  CFF3 F03C          	movff	prodl,??_returnHome
  2545   000F0A  CFF4 F03D          	movff	prodh,??_returnHome+1
  2546   000F0E  503C               	movf	??_returnHome^0,w,c
  2547   000F10  2433               	addwf	returnHome@straightTime^0,w,c
  2548   000F12  6ED9               	movwf	fsr2l,c
  2549   000F14  503D               	movf	(??_returnHome+1)^0,w,c
  2550   000F16  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  2551   000F18  6EDA               	movwf	fsr2h,c
  2552   000F1A  ECB7  F01C         	call	_get16bitTMR0val	;wreg free
  2553   000F1E  50DE               	movf	postinc2,w,c
  2554   000F20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  2555   000F22  50DE               	movf	postinc2,w,c
  2556   000F24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  2557   000F26  A0D8               	btfss	status,0,c
  2558   000F28  EF98  F007         	goto	u1411
  2559   000F2C  EF9A  F007         	goto	u1410
  2560   000F30                     u1411:
  2561   000F30  EF81  F007         	goto	l2797
  2562   000F34                     u1410:
  2563   000F34                     
  2564                           ;dc_motor.c: 184:     stop(mL, mR, straightRamp);
  2565   000F34  C02D  F01F         	movff	returnHome@mL,stop@mL
  2566   000F38  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  2567   000F3C  C02F  F021         	movff	returnHome@mR,stop@mR
  2568   000F40  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  2569   000F44  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  2570   000F48  EC63  F019         	call	_stop	;wreg free
  2571   000F4C                     
  2572                           ;dc_motor.c: 186:     char i=curMove;
  2573   000F4C  C035  F040         	movff	returnHome@curMove,returnHome@i
  2574                           
  2575                           ;dc_motor.c: 187:     while (i>0) {
  2576   000F50  EF56  F00A         	goto	l2889
  2577   000F54                     l2803:
  2578                           
  2579                           ;dc_motor.c: 188:         i--;
  2580   000F54  0640               	decf	returnHome@i^0,f,c
  2581   000F56                     
  2582                           ;dc_motor.c: 190:         if (moveSequence[i] == 1) {
  2583   000F56  5040               	movf	returnHome@i^0,w,c
  2584   000F58  2431               	addwf	returnHome@moveSequence^0,w,c
  2585   000F5A  6ED9               	movwf	fsr2l,c
  2586   000F5C  0E00               	movlw	0
  2587   000F5E  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2588   000F60  6EDA               	movwf	fsr2h,c
  2589   000F62  04DE               	decf	postinc2,w,c
  2590   000F64  A4D8               	btfss	status,2,c
  2591   000F66  EFB7  F007         	goto	u1421
  2592   000F6A  EFB9  F007         	goto	u1420
  2593   000F6E                     u1421:
  2594   000F6E  EFF3  F007         	goto	l2813
  2595   000F72                     u1420:
  2596   000F72                     
  2597                           ;dc_motor.c: 191:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2598   000F72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2599   000F76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2600   000F7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2601   000F7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2602   000F82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2603   000F86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2604   000F8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2605   000F8E  EC98  F016         	call	_turnLeft	;wreg free
  2606   000F92                     
  2607                           ;dc_motor.c: 192:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2608   000F92  0E05               	movlw	5
  2609   000F94  6E3D               	movwf	(??_returnHome+1)^0,c
  2610   000F96  0E0F               	movlw	15
  2611   000F98  6E3C               	movwf	??_returnHome^0,c
  2612   000F9A  0EF1               	movlw	241
  2613   000F9C                     u2627:
  2614   000F9C  2EE8               	decfsz	wreg,f,c
  2615   000F9E  D7FE               	bra	u2627
  2616   000FA0  2E3C               	decfsz	??_returnHome^0,f,c
  2617   000FA2  D7FC               	bra	u2627
  2618   000FA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2619   000FA6  D7FA               	bra	u2627
  2620   000FA8  0000               	nop	
  2621   000FAA                     
  2622                           ;dc_motor.c: 193:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2623   000FAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2624   000FAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2625   000FB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2626   000FB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2627   000FBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2628   000FBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2629   000FC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2630   000FC6  EC98  F016         	call	_turnLeft	;wreg free
  2631                           
  2632                           ;dc_motor.c: 194:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2633   000FCA  0E05               	movlw	5
  2634   000FCC  6E3D               	movwf	(??_returnHome+1)^0,c
  2635   000FCE  0E0F               	movlw	15
  2636   000FD0  6E3C               	movwf	??_returnHome^0,c
  2637   000FD2  0EF1               	movlw	241
  2638   000FD4                     u2637:
  2639   000FD4  2EE8               	decfsz	wreg,f,c
  2640   000FD6  D7FE               	bra	u2637
  2641   000FD8  2E3C               	decfsz	??_returnHome^0,f,c
  2642   000FDA  D7FC               	bra	u2637
  2643   000FDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2644   000FDE  D7FA               	bra	u2637
  2645   000FE0  0000               	nop	
  2646                           
  2647                           ;dc_motor.c: 195:         }
  2648   000FE2  EF21  F00A         	goto	l500
  2649   000FE6                     l2813:
  2650   000FE6  5040               	movf	returnHome@i^0,w,c
  2651   000FE8  2431               	addwf	returnHome@moveSequence^0,w,c
  2652   000FEA  6ED9               	movwf	fsr2l,c
  2653   000FEC  0E00               	movlw	0
  2654   000FEE  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2655   000FF0  6EDA               	movwf	fsr2h,c
  2656   000FF2  0E02               	movlw	2
  2657   000FF4  18DE               	xorwf	postinc2,w,c
  2658   000FF6  A4D8               	btfss	status,2,c
  2659   000FF8  EF00  F008         	goto	u1431
  2660   000FFC  EF02  F008         	goto	u1430
  2661   001000                     u1431:
  2662   001000  EF3C  F008         	goto	l2821
  2663   001004                     u1430:
  2664   001004                     
  2665                           ;dc_motor.c: 198:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2666   001004  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2667   001008  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2668   00100C  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2669   001010  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2670   001014  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2671   001018  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2672   00101C  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2673   001020  ECAE  F015         	call	_turnRight	;wreg free
  2674   001024                     
  2675                           ;dc_motor.c: 199:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2676   001024  0E05               	movlw	5
  2677   001026  6E3D               	movwf	(??_returnHome+1)^0,c
  2678   001028  0E0F               	movlw	15
  2679   00102A  6E3C               	movwf	??_returnHome^0,c
  2680   00102C  0EF1               	movlw	241
  2681   00102E                     u2647:
  2682   00102E  2EE8               	decfsz	wreg,f,c
  2683   001030  D7FE               	bra	u2647
  2684   001032  2E3C               	decfsz	??_returnHome^0,f,c
  2685   001034  D7FC               	bra	u2647
  2686   001036  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2687   001038  D7FA               	bra	u2647
  2688   00103A  0000               	nop	
  2689   00103C                     
  2690                           ;dc_motor.c: 200:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2691   00103C  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2692   001040  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2693   001044  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2694   001048  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2695   00104C  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2696   001050  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2697   001054  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2698   001058  ECAE  F015         	call	_turnRight	;wreg free
  2699                           
  2700                           ;dc_motor.c: 201:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2701   00105C  0E05               	movlw	5
  2702   00105E  6E3D               	movwf	(??_returnHome+1)^0,c
  2703   001060  0E0F               	movlw	15
  2704   001062  6E3C               	movwf	??_returnHome^0,c
  2705   001064  0EF1               	movlw	241
  2706   001066                     u2657:
  2707   001066  2EE8               	decfsz	wreg,f,c
  2708   001068  D7FE               	bra	u2657
  2709   00106A  2E3C               	decfsz	??_returnHome^0,f,c
  2710   00106C  D7FC               	bra	u2657
  2711   00106E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2712   001070  D7FA               	bra	u2657
  2713   001072  0000               	nop	
  2714                           
  2715                           ;dc_motor.c: 202:         }
  2716   001074  EF21  F00A         	goto	l500
  2717   001078                     l2821:
  2718   001078  5040               	movf	returnHome@i^0,w,c
  2719   00107A  2431               	addwf	returnHome@moveSequence^0,w,c
  2720   00107C  6ED9               	movwf	fsr2l,c
  2721   00107E  0E00               	movlw	0
  2722   001080  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2723   001082  6EDA               	movwf	fsr2h,c
  2724   001084  0E03               	movlw	3
  2725   001086  18DE               	xorwf	postinc2,w,c
  2726   001088  A4D8               	btfss	status,2,c
  2727   00108A  EF49  F008         	goto	u1441
  2728   00108E  EF4B  F008         	goto	u1440
  2729   001092                     u1441:
  2730   001092  EFBD  F008         	goto	l2835
  2731   001096                     u1440:
  2732   001096                     
  2733                           ;dc_motor.c: 205:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2734   001096  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2735   00109A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2736   00109E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2737   0010A2  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2738   0010A6  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2739   0010AA  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2740   0010AE  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2741   0010B2  EC98  F016         	call	_turnLeft	;wreg free
  2742   0010B6                     
  2743                           ;dc_motor.c: 206:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2744   0010B6  0E05               	movlw	5
  2745   0010B8  6E3D               	movwf	(??_returnHome+1)^0,c
  2746   0010BA  0E0F               	movlw	15
  2747   0010BC  6E3C               	movwf	??_returnHome^0,c
  2748   0010BE  0EF1               	movlw	241
  2749   0010C0                     u2667:
  2750   0010C0  2EE8               	decfsz	wreg,f,c
  2751   0010C2  D7FE               	bra	u2667
  2752   0010C4  2E3C               	decfsz	??_returnHome^0,f,c
  2753   0010C6  D7FC               	bra	u2667
  2754   0010C8  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2755   0010CA  D7FA               	bra	u2667
  2756   0010CC  0000               	nop	
  2757   0010CE                     
  2758                           ;dc_motor.c: 207:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2759   0010CE  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2760   0010D2  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2761   0010D6  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2762   0010DA  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2763   0010DE  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2764   0010E2  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2765   0010E6  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2766   0010EA  EC98  F016         	call	_turnLeft	;wreg free
  2767                           
  2768                           ;dc_motor.c: 208:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2769   0010EE  0E05               	movlw	5
  2770   0010F0  6E3D               	movwf	(??_returnHome+1)^0,c
  2771   0010F2  0E0F               	movlw	15
  2772   0010F4  6E3C               	movwf	??_returnHome^0,c
  2773   0010F6  0EF1               	movlw	241
  2774   0010F8                     u2677:
  2775   0010F8  2EE8               	decfsz	wreg,f,c
  2776   0010FA  D7FE               	bra	u2677
  2777   0010FC  2E3C               	decfsz	??_returnHome^0,f,c
  2778   0010FE  D7FC               	bra	u2677
  2779   001100  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2780   001102  D7FA               	bra	u2677
  2781   001104  0000               	nop	
  2782   001106                     
  2783                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2784   001106  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2785   00110A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2786   00110E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2787   001112  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2788   001116  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2789   00111A  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2790   00111E  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2791   001122  EC98  F016         	call	_turnLeft	;wreg free
  2792   001126                     
  2793                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2794   001126  0E05               	movlw	5
  2795   001128  6E3D               	movwf	(??_returnHome+1)^0,c
  2796   00112A  0E0F               	movlw	15
  2797   00112C  6E3C               	movwf	??_returnHome^0,c
  2798   00112E  0EF1               	movlw	241
  2799   001130                     u2687:
  2800   001130  2EE8               	decfsz	wreg,f,c
  2801   001132  D7FE               	bra	u2687
  2802   001134  2E3C               	decfsz	??_returnHome^0,f,c
  2803   001136  D7FC               	bra	u2687
  2804   001138  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2805   00113A  D7FA               	bra	u2687
  2806   00113C  0000               	nop	
  2807                           
  2808                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2809   00113E  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2810   001142  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2811   001146  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2812   00114A  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2813   00114E  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2814   001152  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2815   001156  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2816   00115A  EC98  F016         	call	_turnLeft	;wreg free
  2817   00115E                     l2833:
  2818                           
  2819                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2820   00115E  0E05               	movlw	5
  2821   001160  6E3D               	movwf	(??_returnHome+1)^0,c
  2822   001162  0E0F               	movlw	15
  2823   001164  6E3C               	movwf	??_returnHome^0,c
  2824   001166  0EF1               	movlw	241
  2825   001168                     u2697:
  2826   001168  2EE8               	decfsz	wreg,f,c
  2827   00116A  D7FE               	bra	u2697
  2828   00116C  2E3C               	decfsz	??_returnHome^0,f,c
  2829   00116E  D7FC               	bra	u2697
  2830   001170  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2831   001172  D7FA               	bra	u2697
  2832   001174  0000               	nop	
  2833                           
  2834                           ;dc_motor.c: 213:         }
  2835   001176  EF21  F00A         	goto	l500
  2836   00117A                     l2835:
  2837   00117A  5040               	movf	returnHome@i^0,w,c
  2838   00117C  2431               	addwf	returnHome@moveSequence^0,w,c
  2839   00117E  6ED9               	movwf	fsr2l,c
  2840   001180  0E00               	movlw	0
  2841   001182  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2842   001184  6EDA               	movwf	fsr2h,c
  2843   001186  0E04               	movlw	4
  2844   001188  18DE               	xorwf	postinc2,w,c
  2845   00118A  A4D8               	btfss	status,2,c
  2846   00118C  EFCA  F008         	goto	u1451
  2847   001190  EFCC  F008         	goto	u1450
  2848   001194                     u1451:
  2849   001194  EF16  F009         	goto	l2847
  2850   001198                     u1450:
  2851   001198                     
  2852                           ;dc_motor.c: 216:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2853   001198  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2854   00119C  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2855   0011A0  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2856   0011A4  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2857   0011A8  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2858   0011AC  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2859   0011B0  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2860   0011B4  EC98  F016         	call	_turnLeft	;wreg free
  2861   0011B8                     
  2862                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2863   0011B8  0E05               	movlw	5
  2864   0011BA  6E3D               	movwf	(??_returnHome+1)^0,c
  2865   0011BC  0E0F               	movlw	15
  2866   0011BE  6E3C               	movwf	??_returnHome^0,c
  2867   0011C0  0EF1               	movlw	241
  2868   0011C2                     u2707:
  2869   0011C2  2EE8               	decfsz	wreg,f,c
  2870   0011C4  D7FE               	bra	u2707
  2871   0011C6  2E3C               	decfsz	??_returnHome^0,f,c
  2872   0011C8  D7FC               	bra	u2707
  2873   0011CA  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2874   0011CC  D7FA               	bra	u2707
  2875   0011CE  0000               	nop	
  2876   0011D0                     
  2877                           ;dc_motor.c: 218:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2878   0011D0  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2879   0011D4  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2880   0011D8  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2881   0011DC  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2882   0011E0  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2883   0011E4  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2884   0011E8  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2885   0011EC  EC98  F016         	call	_turnLeft	;wreg free
  2886                           
  2887                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2888   0011F0  0E05               	movlw	5
  2889   0011F2  6E3D               	movwf	(??_returnHome+1)^0,c
  2890   0011F4  0E0F               	movlw	15
  2891   0011F6  6E3C               	movwf	??_returnHome^0,c
  2892   0011F8  0EF1               	movlw	241
  2893   0011FA                     u2717:
  2894   0011FA  2EE8               	decfsz	wreg,f,c
  2895   0011FC  D7FE               	bra	u2717
  2896   0011FE  2E3C               	decfsz	??_returnHome^0,f,c
  2897   001200  D7FC               	bra	u2717
  2898   001202  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2899   001204  D7FA               	bra	u2717
  2900   001206  0000               	nop	
  2901   001208                     
  2902                           ;dc_motor.c: 220:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  2903   001208  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  2904   00120C  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  2905   001210  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  2906   001214  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  2907   001218  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  2908   00121C  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  2909   001220  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  2910   001224  ECBB  F014         	call	_reverseOneSquare	;wreg free
  2911   001228  EFAF  F008         	goto	l2833
  2912   00122C                     l2847:
  2913   00122C  5040               	movf	returnHome@i^0,w,c
  2914   00122E  2431               	addwf	returnHome@moveSequence^0,w,c
  2915   001230  6ED9               	movwf	fsr2l,c
  2916   001232  0E00               	movlw	0
  2917   001234  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2918   001236  6EDA               	movwf	fsr2h,c
  2919   001238  0E05               	movlw	5
  2920   00123A  18DE               	xorwf	postinc2,w,c
  2921   00123C  A4D8               	btfss	status,2,c
  2922   00123E  EF23  F009         	goto	u1461
  2923   001242  EF25  F009         	goto	u1460
  2924   001246                     u1461:
  2925   001246  EF6F  F009         	goto	l2859
  2926   00124A                     u1460:
  2927   00124A                     
  2928                           ;dc_motor.c: 225:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2929   00124A  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2930   00124E  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2931   001252  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2932   001256  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2933   00125A  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2934   00125E  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2935   001262  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2936   001266  ECAE  F015         	call	_turnRight	;wreg free
  2937   00126A                     
  2938                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2939   00126A  0E05               	movlw	5
  2940   00126C  6E3D               	movwf	(??_returnHome+1)^0,c
  2941   00126E  0E0F               	movlw	15
  2942   001270  6E3C               	movwf	??_returnHome^0,c
  2943   001272  0EF1               	movlw	241
  2944   001274                     u2727:
  2945   001274  2EE8               	decfsz	wreg,f,c
  2946   001276  D7FE               	bra	u2727
  2947   001278  2E3C               	decfsz	??_returnHome^0,f,c
  2948   00127A  D7FC               	bra	u2727
  2949   00127C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2950   00127E  D7FA               	bra	u2727
  2951   001280  0000               	nop	
  2952   001282                     
  2953                           ;dc_motor.c: 227:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2954   001282  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2955   001286  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2956   00128A  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2957   00128E  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2958   001292  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2959   001296  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2960   00129A  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2961   00129E  ECAE  F015         	call	_turnRight	;wreg free
  2962                           
  2963                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2964   0012A2  0E05               	movlw	5
  2965   0012A4  6E3D               	movwf	(??_returnHome+1)^0,c
  2966   0012A6  0E0F               	movlw	15
  2967   0012A8  6E3C               	movwf	??_returnHome^0,c
  2968   0012AA  0EF1               	movlw	241
  2969   0012AC                     u2737:
  2970   0012AC  2EE8               	decfsz	wreg,f,c
  2971   0012AE  D7FE               	bra	u2737
  2972   0012B0  2E3C               	decfsz	??_returnHome^0,f,c
  2973   0012B2  D7FC               	bra	u2737
  2974   0012B4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2975   0012B6  D7FA               	bra	u2737
  2976   0012B8  0000               	nop	
  2977   0012BA                     
  2978                           ;dc_motor.c: 229:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  2979   0012BA  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  2980   0012BE  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  2981   0012C2  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  2982   0012C6  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  2983   0012CA  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  2984   0012CE  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  2985   0012D2  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  2986   0012D6  ECBB  F014         	call	_reverseOneSquare	;wreg free
  2987   0012DA  EFAF  F008         	goto	l2833
  2988   0012DE                     l2859:
  2989   0012DE  5040               	movf	returnHome@i^0,w,c
  2990   0012E0  2431               	addwf	returnHome@moveSequence^0,w,c
  2991   0012E2  6ED9               	movwf	fsr2l,c
  2992   0012E4  0E00               	movlw	0
  2993   0012E6  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2994   0012E8  6EDA               	movwf	fsr2h,c
  2995   0012EA  0E06               	movlw	6
  2996   0012EC  18DE               	xorwf	postinc2,w,c
  2997   0012EE  A4D8               	btfss	status,2,c
  2998   0012F0  EF7C  F009         	goto	u1471
  2999   0012F4  EF7E  F009         	goto	u1470
  3000   0012F8                     u1471:
  3001   0012F8  EFC8  F009         	goto	l2871
  3002   0012FC                     u1470:
  3003   0012FC                     
  3004                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3005   0012FC  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3006   001300  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3007   001304  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3008   001308  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3009   00130C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3010   001310  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3011   001314  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3012   001318  EC98  F016         	call	_turnLeft	;wreg free
  3013   00131C                     
  3014                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3015   00131C  0E05               	movlw	5
  3016   00131E  6E3D               	movwf	(??_returnHome+1)^0,c
  3017   001320  0E0F               	movlw	15
  3018   001322  6E3C               	movwf	??_returnHome^0,c
  3019   001324  0EF1               	movlw	241
  3020   001326                     u2747:
  3021   001326  2EE8               	decfsz	wreg,f,c
  3022   001328  D7FE               	bra	u2747
  3023   00132A  2E3C               	decfsz	??_returnHome^0,f,c
  3024   00132C  D7FC               	bra	u2747
  3025   00132E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3026   001330  D7FA               	bra	u2747
  3027   001332  0000               	nop	
  3028   001334                     
  3029                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3030   001334  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3031   001338  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3032   00133C  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3033   001340  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3034   001344  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3035   001348  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3036   00134C  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3037   001350  EC98  F016         	call	_turnLeft	;wreg free
  3038                           
  3039                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3040   001354  0E05               	movlw	5
  3041   001356  6E3D               	movwf	(??_returnHome+1)^0,c
  3042   001358  0E0F               	movlw	15
  3043   00135A  6E3C               	movwf	??_returnHome^0,c
  3044   00135C  0EF1               	movlw	241
  3045   00135E                     u2757:
  3046   00135E  2EE8               	decfsz	wreg,f,c
  3047   001360  D7FE               	bra	u2757
  3048   001362  2E3C               	decfsz	??_returnHome^0,f,c
  3049   001364  D7FC               	bra	u2757
  3050   001366  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3051   001368  D7FA               	bra	u2757
  3052   00136A  0000               	nop	
  3053   00136C                     
  3054                           ;dc_motor.c: 238:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3055   00136C  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3056   001370  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3057   001374  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3058   001378  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3059   00137C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3060   001380  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3061   001384  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3062   001388  EC98  F016         	call	_turnLeft	;wreg free
  3063   00138C  EFAF  F008         	goto	l2833
  3064   001390                     l2871:
  3065   001390  5040               	movf	returnHome@i^0,w,c
  3066   001392  2431               	addwf	returnHome@moveSequence^0,w,c
  3067   001394  6ED9               	movwf	fsr2l,c
  3068   001396  0E00               	movlw	0
  3069   001398  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3070   00139A  6EDA               	movwf	fsr2h,c
  3071   00139C  0E07               	movlw	7
  3072   00139E  18DE               	xorwf	postinc2,w,c
  3073   0013A0  A4D8               	btfss	status,2,c
  3074   0013A2  EFD5  F009         	goto	u1481
  3075   0013A6  EFD7  F009         	goto	u1480
  3076   0013AA                     u1481:
  3077   0013AA  EF21  F00A         	goto	l506
  3078   0013AE                     u1480:
  3079   0013AE                     
  3080                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3081   0013AE  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3082   0013B2  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3083   0013B6  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3084   0013BA  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3085   0013BE  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3086   0013C2  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3087   0013C6  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3088   0013CA  ECAE  F015         	call	_turnRight	;wreg free
  3089   0013CE                     
  3090                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3091   0013CE  0E05               	movlw	5
  3092   0013D0  6E3D               	movwf	(??_returnHome+1)^0,c
  3093   0013D2  0E0F               	movlw	15
  3094   0013D4  6E3C               	movwf	??_returnHome^0,c
  3095   0013D6  0EF1               	movlw	241
  3096   0013D8                     u2767:
  3097   0013D8  2EE8               	decfsz	wreg,f,c
  3098   0013DA  D7FE               	bra	u2767
  3099   0013DC  2E3C               	decfsz	??_returnHome^0,f,c
  3100   0013DE  D7FC               	bra	u2767
  3101   0013E0  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3102   0013E2  D7FA               	bra	u2767
  3103   0013E4  0000               	nop	
  3104   0013E6                     
  3105                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3106   0013E6  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3107   0013EA  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3108   0013EE  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3109   0013F2  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3110   0013F6  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3111   0013FA  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3112   0013FE  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3113   001402  ECAE  F015         	call	_turnRight	;wreg free
  3114                           
  3115                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3116   001406  0E05               	movlw	5
  3117   001408  6E3D               	movwf	(??_returnHome+1)^0,c
  3118   00140A  0E0F               	movlw	15
  3119   00140C  6E3C               	movwf	??_returnHome^0,c
  3120   00140E  0EF1               	movlw	241
  3121   001410                     u2777:
  3122   001410  2EE8               	decfsz	wreg,f,c
  3123   001412  D7FE               	bra	u2777
  3124   001414  2E3C               	decfsz	??_returnHome^0,f,c
  3125   001416  D7FC               	bra	u2777
  3126   001418  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3127   00141A  D7FA               	bra	u2777
  3128   00141C  0000               	nop	
  3129   00141E                     
  3130                           ;dc_motor.c: 247:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3131   00141E  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3132   001422  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3133   001426  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3134   00142A  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3135   00142E  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3136   001432  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3137   001436  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3138   00143A  ECAE  F015         	call	_turnRight	;wreg free
  3139   00143E  EFAF  F008         	goto	l2833
  3140   001442                     l506:
  3141   001442                     l500:
  3142                           
  3143                           ;dc_motor.c: 251:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3144   001442  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  3145   001446  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  3146   00144A  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  3147   00144E  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  3148   001452  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3149   001456  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  3150   00145A  ECE7  F019         	call	_fullSpeedAhead	;wreg free
  3151   00145E                     
  3152                           ;dc_motor.c: 252:         resetTimer();
  3153   00145E  ECB9  F01D         	call	_resetTimer	;wreg free
  3154   001462                     l2885:
  3155   001462  5040               	movf	returnHome@i^0,w,c
  3156   001464  0D02               	mullw	2
  3157   001466  CFF3 F03C          	movff	prodl,??_returnHome
  3158   00146A  CFF4 F03D          	movff	prodh,??_returnHome+1
  3159   00146E  503C               	movf	??_returnHome^0,w,c
  3160   001470  2433               	addwf	returnHome@straightTime^0,w,c
  3161   001472  6ED9               	movwf	fsr2l,c
  3162   001474  503D               	movf	(??_returnHome+1)^0,w,c
  3163   001476  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  3164   001478  6EDA               	movwf	fsr2h,c
  3165   00147A  ECB7  F01C         	call	_get16bitTMR0val	;wreg free
  3166   00147E  50DE               	movf	postinc2,w,c
  3167   001480  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  3168   001482  50DE               	movf	postinc2,w,c
  3169   001484  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  3170   001486  A0D8               	btfss	status,0,c
  3171   001488  EF48  F00A         	goto	u1491
  3172   00148C  EF4A  F00A         	goto	u1490
  3173   001490                     u1491:
  3174   001490  EF31  F00A         	goto	l2885
  3175   001494                     u1490:
  3176   001494                     
  3177                           ;dc_motor.c: 254:         stop(mL, mR, straightRamp);
  3178   001494  C02D  F01F         	movff	returnHome@mL,stop@mL
  3179   001498  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  3180   00149C  C02F  F021         	movff	returnHome@mR,stop@mR
  3181   0014A0  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  3182   0014A4  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  3183   0014A8  EC63  F019         	call	_stop	;wreg free
  3184   0014AC                     l2889:
  3185                           
  3186                           ;dc_motor.c: 187:     while (i>0) {
  3187   0014AC  5040               	movf	returnHome@i^0,w,c
  3188   0014AE  A4D8               	btfss	status,2,c
  3189   0014B0  EF5C  F00A         	goto	u1501
  3190   0014B4  EF5E  F00A         	goto	u1500
  3191   0014B8                     u1501:
  3192   0014B8  EFAA  F007         	goto	l2803
  3193   0014BC                     u1500:
  3194   0014BC  0012               	return		;funcret
  3195   0014BE                     __end_of_returnHome:
  3196                           	callstack 0
  3197                           
  3198 ;; *************** function _lostReturnHome *****************
  3199 ;; Defined at:
  3200 ;;		line 259 in file "dc_motor.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  3203 ;;		 -> main@motorL(10), 
  3204 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  3205 ;;		 -> main@motorR(10), 
  3206 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  3207 ;;		 -> main@moveSequence(40), 
  3208 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  3209 ;;		 -> main@straightTime(82), 
  3210 ;;  curMove         1   52[COMRAM] unsigned char 
  3211 ;;  straightSpee    1   53[COMRAM] unsigned char 
  3212 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  3213 ;;  straightRamp    1   55[COMRAM] unsigned char 
  3214 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  3215 ;;  turnDuration    1   57[COMRAM] unsigned char 
  3216 ;;  turnRamp        1   58[COMRAM] unsigned char 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  i               1   63[COMRAM] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3228 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;Total ram usage:       20 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; Hardware stack levels required when called: 8
  3235 ;; This function calls:
  3236 ;;		_fullSpeedAhead
  3237 ;;		_get16bitTMR0val
  3238 ;;		_resetTimer
  3239 ;;		_reverseOneSquare
  3240 ;;		_stop
  3241 ;;		_turnLeft
  3242 ;;		_turnRight
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text4
  3249   0014BE                     __ptext4:
  3250                           	callstack 0
  3251   0014BE                     _lostReturnHome:
  3252                           	callstack 22
  3253   0014BE                     
  3254                           ;dc_motor.c: 259: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 260: {;dc_motor.c: 261:     turnLeft(mL, mR, turnSpeed, 
      +                          turnDuration, turnRamp);
  3255   0014BE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3256   0014C2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3257   0014C6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3258   0014CA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3259   0014CE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3260   0014D2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3261   0014D6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3262   0014DA  EC98  F016         	call	_turnLeft	;wreg free
  3263   0014DE                     
  3264                           ;dc_motor.c: 262:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3265   0014DE  0E05               	movlw	5
  3266   0014E0  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3267   0014E2  0E0F               	movlw	15
  3268   0014E4  6E3C               	movwf	??_lostReturnHome^0,c
  3269   0014E6  0EF1               	movlw	241
  3270   0014E8                     u2787:
  3271   0014E8  2EE8               	decfsz	wreg,f,c
  3272   0014EA  D7FE               	bra	u2787
  3273   0014EC  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3274   0014EE  D7FC               	bra	u2787
  3275   0014F0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3276   0014F2  D7FA               	bra	u2787
  3277   0014F4  0000               	nop	
  3278   0014F6                     
  3279                           ;dc_motor.c: 263:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3280   0014F6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3281   0014FA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3282   0014FE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3283   001502  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3284   001506  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3285   00150A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3286   00150E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3287   001512  EC98  F016         	call	_turnLeft	;wreg free
  3288                           
  3289                           ;dc_motor.c: 264:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3290   001516  0E05               	movlw	5
  3291   001518  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3292   00151A  0E0F               	movlw	15
  3293   00151C  6E3C               	movwf	??_lostReturnHome^0,c
  3294   00151E  0EF1               	movlw	241
  3295   001520                     u2797:
  3296   001520  2EE8               	decfsz	wreg,f,c
  3297   001522  D7FE               	bra	u2797
  3298   001524  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3299   001526  D7FC               	bra	u2797
  3300   001528  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3301   00152A  D7FA               	bra	u2797
  3302   00152C  0000               	nop	
  3303   00152E                     
  3304                           ;dc_motor.c: 265:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3305   00152E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3306   001532  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3307   001536  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3308   00153A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3309   00153E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3310   001542  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3311   001546  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3312   00154A  EC98  F016         	call	_turnLeft	;wreg free
  3313   00154E                     
  3314                           ;dc_motor.c: 266:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3315   00154E  0E05               	movlw	5
  3316   001550  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3317   001552  0E0F               	movlw	15
  3318   001554  6E3C               	movwf	??_lostReturnHome^0,c
  3319   001556  0EF1               	movlw	241
  3320   001558                     u2807:
  3321   001558  2EE8               	decfsz	wreg,f,c
  3322   00155A  D7FE               	bra	u2807
  3323   00155C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3324   00155E  D7FC               	bra	u2807
  3325   001560  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3326   001562  D7FA               	bra	u2807
  3327   001564  0000               	nop	
  3328                           
  3329                           ;dc_motor.c: 267:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3330   001566  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3331   00156A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3332   00156E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3333   001572  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3334   001576  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3335   00157A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3336   00157E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3337   001582  EC98  F016         	call	_turnLeft	;wreg free
  3338   001586                     
  3339                           ;dc_motor.c: 268:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3340   001586  0E05               	movlw	5
  3341   001588  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3342   00158A  0E0F               	movlw	15
  3343   00158C  6E3C               	movwf	??_lostReturnHome^0,c
  3344   00158E  0EF1               	movlw	241
  3345   001590                     u2817:
  3346   001590  2EE8               	decfsz	wreg,f,c
  3347   001592  D7FE               	bra	u2817
  3348   001594  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3349   001596  D7FC               	bra	u2817
  3350   001598  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3351   00159A  D7FA               	bra	u2817
  3352   00159C  0000               	nop	
  3353   00159E                     
  3354                           ;dc_motor.c: 269:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3355   00159E  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  3356   0015A2  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  3357   0015A6  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  3358   0015AA  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  3359   0015AE  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3360   0015B2  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  3361   0015B6  ECE7  F019         	call	_fullSpeedAhead	;wreg free
  3362   0015BA                     
  3363                           ;dc_motor.c: 270:     resetTimer();
  3364   0015BA  ECB9  F01D         	call	_resetTimer	;wreg free
  3365   0015BE                     
  3366                           ;dc_motor.c: 271:     lost = 0;
  3367   0015BE  0E00               	movlw	0
  3368   0015C0  0101               	movlb	1	; () banked
  3369   0015C2  6FFA               	movwf	_lost& (0+255),b
  3370   0015C4                     l3241:
  3371                           
  3372                           ; BSR set to: 1
  3373   0015C4  51FA               	movf	_lost& (0+255),w,b
  3374   0015C6  B4D8               	btfsc	status,2,c
  3375   0015C8  EFE8  F00A         	goto	u1821
  3376   0015CC  EFEA  F00A         	goto	u1820
  3377   0015D0                     u1821:
  3378   0015D0  EFE2  F00A         	goto	l3241
  3379   0015D4                     u1820:
  3380   0015D4                     
  3381                           ; BSR set to: 1
  3382                           ;dc_motor.c: 273:     stop(mL, mR, straightRamp);
  3383   0015D4  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  3384   0015D8  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  3385   0015DC  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  3386   0015E0  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  3387   0015E4  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  3388   0015E8  EC63  F019         	call	_stop	;wreg free
  3389   0015EC                     
  3390                           ;dc_motor.c: 275:     char i=curMove;
  3391   0015EC  C035  F040         	movff	lostReturnHome@curMove,lostReturnHome@i
  3392                           
  3393                           ;dc_motor.c: 276:     while (i>0) {
  3394   0015F0  EFA6  F00D         	goto	l3333
  3395   0015F4                     l3247:
  3396                           
  3397                           ;dc_motor.c: 277:         i--;
  3398   0015F4  0640               	decf	lostReturnHome@i^0,f,c
  3399   0015F6                     
  3400                           ;dc_motor.c: 279:         if (moveSequence[i] == 1) {
  3401   0015F6  5040               	movf	lostReturnHome@i^0,w,c
  3402   0015F8  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3403   0015FA  6ED9               	movwf	fsr2l,c
  3404   0015FC  0E00               	movlw	0
  3405   0015FE  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3406   001600  6EDA               	movwf	fsr2h,c
  3407   001602  04DE               	decf	postinc2,w,c
  3408   001604  A4D8               	btfss	status,2,c
  3409   001606  EF07  F00B         	goto	u1831
  3410   00160A  EF09  F00B         	goto	u1830
  3411   00160E                     u1831:
  3412   00160E  EF43  F00B         	goto	l3257
  3413   001612                     u1830:
  3414   001612                     
  3415                           ;dc_motor.c: 280:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3416   001612  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3417   001616  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3418   00161A  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3419   00161E  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3420   001622  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3421   001626  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3422   00162A  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3423   00162E  EC98  F016         	call	_turnLeft	;wreg free
  3424   001632                     
  3425                           ;dc_motor.c: 281:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3426   001632  0E05               	movlw	5
  3427   001634  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3428   001636  0E0F               	movlw	15
  3429   001638  6E3C               	movwf	??_lostReturnHome^0,c
  3430   00163A  0EF1               	movlw	241
  3431   00163C                     u2827:
  3432   00163C  2EE8               	decfsz	wreg,f,c
  3433   00163E  D7FE               	bra	u2827
  3434   001640  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3435   001642  D7FC               	bra	u2827
  3436   001644  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3437   001646  D7FA               	bra	u2827
  3438   001648  0000               	nop	
  3439   00164A                     
  3440                           ;dc_motor.c: 282:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3441   00164A  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3442   00164E  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3443   001652  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3444   001656  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3445   00165A  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3446   00165E  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3447   001662  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3448   001666  EC98  F016         	call	_turnLeft	;wreg free
  3449                           
  3450                           ;dc_motor.c: 283:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3451   00166A  0E05               	movlw	5
  3452   00166C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3453   00166E  0E0F               	movlw	15
  3454   001670  6E3C               	movwf	??_lostReturnHome^0,c
  3455   001672  0EF1               	movlw	241
  3456   001674                     u2837:
  3457   001674  2EE8               	decfsz	wreg,f,c
  3458   001676  D7FE               	bra	u2837
  3459   001678  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3460   00167A  D7FC               	bra	u2837
  3461   00167C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3462   00167E  D7FA               	bra	u2837
  3463   001680  0000               	nop	
  3464                           
  3465                           ;dc_motor.c: 284:         }
  3466   001682  EF71  F00D         	goto	l525
  3467   001686                     l3257:
  3468   001686  5040               	movf	lostReturnHome@i^0,w,c
  3469   001688  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3470   00168A  6ED9               	movwf	fsr2l,c
  3471   00168C  0E00               	movlw	0
  3472   00168E  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3473   001690  6EDA               	movwf	fsr2h,c
  3474   001692  0E02               	movlw	2
  3475   001694  18DE               	xorwf	postinc2,w,c
  3476   001696  A4D8               	btfss	status,2,c
  3477   001698  EF50  F00B         	goto	u1841
  3478   00169C  EF52  F00B         	goto	u1840
  3479   0016A0                     u1841:
  3480   0016A0  EF8C  F00B         	goto	l3265
  3481   0016A4                     u1840:
  3482   0016A4                     
  3483                           ;dc_motor.c: 287:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3484   0016A4  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3485   0016A8  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3486   0016AC  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3487   0016B0  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3488   0016B4  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3489   0016B8  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3490   0016BC  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3491   0016C0  ECAE  F015         	call	_turnRight	;wreg free
  3492   0016C4                     
  3493                           ;dc_motor.c: 288:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3494   0016C4  0E05               	movlw	5
  3495   0016C6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3496   0016C8  0E0F               	movlw	15
  3497   0016CA  6E3C               	movwf	??_lostReturnHome^0,c
  3498   0016CC  0EF1               	movlw	241
  3499   0016CE                     u2847:
  3500   0016CE  2EE8               	decfsz	wreg,f,c
  3501   0016D0  D7FE               	bra	u2847
  3502   0016D2  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3503   0016D4  D7FC               	bra	u2847
  3504   0016D6  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3505   0016D8  D7FA               	bra	u2847
  3506   0016DA  0000               	nop	
  3507   0016DC                     
  3508                           ;dc_motor.c: 289:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3509   0016DC  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3510   0016E0  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3511   0016E4  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3512   0016E8  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3513   0016EC  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3514   0016F0  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3515   0016F4  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3516   0016F8  ECAE  F015         	call	_turnRight	;wreg free
  3517                           
  3518                           ;dc_motor.c: 290:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3519   0016FC  0E05               	movlw	5
  3520   0016FE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3521   001700  0E0F               	movlw	15
  3522   001702  6E3C               	movwf	??_lostReturnHome^0,c
  3523   001704  0EF1               	movlw	241
  3524   001706                     u2857:
  3525   001706  2EE8               	decfsz	wreg,f,c
  3526   001708  D7FE               	bra	u2857
  3527   00170A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3528   00170C  D7FC               	bra	u2857
  3529   00170E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3530   001710  D7FA               	bra	u2857
  3531   001712  0000               	nop	
  3532                           
  3533                           ;dc_motor.c: 291:         }
  3534   001714  EF71  F00D         	goto	l525
  3535   001718                     l3265:
  3536   001718  5040               	movf	lostReturnHome@i^0,w,c
  3537   00171A  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3538   00171C  6ED9               	movwf	fsr2l,c
  3539   00171E  0E00               	movlw	0
  3540   001720  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3541   001722  6EDA               	movwf	fsr2h,c
  3542   001724  0E03               	movlw	3
  3543   001726  18DE               	xorwf	postinc2,w,c
  3544   001728  A4D8               	btfss	status,2,c
  3545   00172A  EF99  F00B         	goto	u1851
  3546   00172E  EF9B  F00B         	goto	u1850
  3547   001732                     u1851:
  3548   001732  EF0D  F00C         	goto	l3279
  3549   001736                     u1850:
  3550   001736                     
  3551                           ;dc_motor.c: 294:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3552   001736  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3553   00173A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3554   00173E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3555   001742  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3556   001746  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3557   00174A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3558   00174E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3559   001752  EC98  F016         	call	_turnLeft	;wreg free
  3560   001756                     
  3561                           ;dc_motor.c: 295:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3562   001756  0E05               	movlw	5
  3563   001758  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3564   00175A  0E0F               	movlw	15
  3565   00175C  6E3C               	movwf	??_lostReturnHome^0,c
  3566   00175E  0EF1               	movlw	241
  3567   001760                     u2867:
  3568   001760  2EE8               	decfsz	wreg,f,c
  3569   001762  D7FE               	bra	u2867
  3570   001764  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3571   001766  D7FC               	bra	u2867
  3572   001768  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3573   00176A  D7FA               	bra	u2867
  3574   00176C  0000               	nop	
  3575   00176E                     
  3576                           ;dc_motor.c: 296:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3577   00176E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3578   001772  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3579   001776  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3580   00177A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3581   00177E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3582   001782  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3583   001786  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3584   00178A  EC98  F016         	call	_turnLeft	;wreg free
  3585                           
  3586                           ;dc_motor.c: 297:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3587   00178E  0E05               	movlw	5
  3588   001790  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3589   001792  0E0F               	movlw	15
  3590   001794  6E3C               	movwf	??_lostReturnHome^0,c
  3591   001796  0EF1               	movlw	241
  3592   001798                     u2877:
  3593   001798  2EE8               	decfsz	wreg,f,c
  3594   00179A  D7FE               	bra	u2877
  3595   00179C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3596   00179E  D7FC               	bra	u2877
  3597   0017A0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3598   0017A2  D7FA               	bra	u2877
  3599   0017A4  0000               	nop	
  3600   0017A6                     
  3601                           ;dc_motor.c: 298:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3602   0017A6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3603   0017AA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3604   0017AE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3605   0017B2  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3606   0017B6  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3607   0017BA  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3608   0017BE  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3609   0017C2  EC98  F016         	call	_turnLeft	;wreg free
  3610   0017C6                     
  3611                           ;dc_motor.c: 299:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3612   0017C6  0E05               	movlw	5
  3613   0017C8  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3614   0017CA  0E0F               	movlw	15
  3615   0017CC  6E3C               	movwf	??_lostReturnHome^0,c
  3616   0017CE  0EF1               	movlw	241
  3617   0017D0                     u2887:
  3618   0017D0  2EE8               	decfsz	wreg,f,c
  3619   0017D2  D7FE               	bra	u2887
  3620   0017D4  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3621   0017D6  D7FC               	bra	u2887
  3622   0017D8  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3623   0017DA  D7FA               	bra	u2887
  3624   0017DC  0000               	nop	
  3625                           
  3626                           ;dc_motor.c: 300:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3627   0017DE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3628   0017E2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3629   0017E6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3630   0017EA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3631   0017EE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3632   0017F2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3633   0017F6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3634   0017FA  EC98  F016         	call	_turnLeft	;wreg free
  3635   0017FE                     l3277:
  3636                           
  3637                           ;dc_motor.c: 301:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3638   0017FE  0E05               	movlw	5
  3639   001800  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3640   001802  0E0F               	movlw	15
  3641   001804  6E3C               	movwf	??_lostReturnHome^0,c
  3642   001806  0EF1               	movlw	241
  3643   001808                     u2897:
  3644   001808  2EE8               	decfsz	wreg,f,c
  3645   00180A  D7FE               	bra	u2897
  3646   00180C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3647   00180E  D7FC               	bra	u2897
  3648   001810  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3649   001812  D7FA               	bra	u2897
  3650   001814  0000               	nop	
  3651                           
  3652                           ;dc_motor.c: 302:         }
  3653   001816  EF71  F00D         	goto	l525
  3654   00181A                     l3279:
  3655   00181A  5040               	movf	lostReturnHome@i^0,w,c
  3656   00181C  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3657   00181E  6ED9               	movwf	fsr2l,c
  3658   001820  0E00               	movlw	0
  3659   001822  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3660   001824  6EDA               	movwf	fsr2h,c
  3661   001826  0E04               	movlw	4
  3662   001828  18DE               	xorwf	postinc2,w,c
  3663   00182A  A4D8               	btfss	status,2,c
  3664   00182C  EF1A  F00C         	goto	u1861
  3665   001830  EF1C  F00C         	goto	u1860
  3666   001834                     u1861:
  3667   001834  EF66  F00C         	goto	l3291
  3668   001838                     u1860:
  3669   001838                     
  3670                           ;dc_motor.c: 305:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3671   001838  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3672   00183C  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3673   001840  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3674   001844  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3675   001848  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3676   00184C  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3677   001850  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3678   001854  EC98  F016         	call	_turnLeft	;wreg free
  3679   001858                     
  3680                           ;dc_motor.c: 306:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3681   001858  0E05               	movlw	5
  3682   00185A  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3683   00185C  0E0F               	movlw	15
  3684   00185E  6E3C               	movwf	??_lostReturnHome^0,c
  3685   001860  0EF1               	movlw	241
  3686   001862                     u2907:
  3687   001862  2EE8               	decfsz	wreg,f,c
  3688   001864  D7FE               	bra	u2907
  3689   001866  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3690   001868  D7FC               	bra	u2907
  3691   00186A  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3692   00186C  D7FA               	bra	u2907
  3693   00186E  0000               	nop	
  3694   001870                     
  3695                           ;dc_motor.c: 307:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3696   001870  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3697   001874  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3698   001878  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3699   00187C  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3700   001880  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3701   001884  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3702   001888  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3703   00188C  EC98  F016         	call	_turnLeft	;wreg free
  3704                           
  3705                           ;dc_motor.c: 308:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3706   001890  0E05               	movlw	5
  3707   001892  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3708   001894  0E0F               	movlw	15
  3709   001896  6E3C               	movwf	??_lostReturnHome^0,c
  3710   001898  0EF1               	movlw	241
  3711   00189A                     u2917:
  3712   00189A  2EE8               	decfsz	wreg,f,c
  3713   00189C  D7FE               	bra	u2917
  3714   00189E  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3715   0018A0  D7FC               	bra	u2917
  3716   0018A2  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3717   0018A4  D7FA               	bra	u2917
  3718   0018A6  0000               	nop	
  3719   0018A8                     
  3720                           ;dc_motor.c: 309:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3721   0018A8  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3722   0018AC  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3723   0018B0  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3724   0018B4  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3725   0018B8  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3726   0018BC  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3727   0018C0  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3728   0018C4  ECBB  F014         	call	_reverseOneSquare	;wreg free
  3729   0018C8  EFFF  F00B         	goto	l3277
  3730   0018CC                     l3291:
  3731   0018CC  5040               	movf	lostReturnHome@i^0,w,c
  3732   0018CE  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3733   0018D0  6ED9               	movwf	fsr2l,c
  3734   0018D2  0E00               	movlw	0
  3735   0018D4  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3736   0018D6  6EDA               	movwf	fsr2h,c
  3737   0018D8  0E05               	movlw	5
  3738   0018DA  18DE               	xorwf	postinc2,w,c
  3739   0018DC  A4D8               	btfss	status,2,c
  3740   0018DE  EF73  F00C         	goto	u1871
  3741   0018E2  EF75  F00C         	goto	u1870
  3742   0018E6                     u1871:
  3743   0018E6  EFBF  F00C         	goto	l3303
  3744   0018EA                     u1870:
  3745   0018EA                     
  3746                           ;dc_motor.c: 314:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3747   0018EA  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3748   0018EE  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3749   0018F2  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3750   0018F6  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3751   0018FA  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3752   0018FE  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3753   001902  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3754   001906  ECAE  F015         	call	_turnRight	;wreg free
  3755   00190A                     
  3756                           ;dc_motor.c: 315:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3757   00190A  0E05               	movlw	5
  3758   00190C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3759   00190E  0E0F               	movlw	15
  3760   001910  6E3C               	movwf	??_lostReturnHome^0,c
  3761   001912  0EF1               	movlw	241
  3762   001914                     u2927:
  3763   001914  2EE8               	decfsz	wreg,f,c
  3764   001916  D7FE               	bra	u2927
  3765   001918  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3766   00191A  D7FC               	bra	u2927
  3767   00191C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3768   00191E  D7FA               	bra	u2927
  3769   001920  0000               	nop	
  3770   001922                     
  3771                           ;dc_motor.c: 316:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3772   001922  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3773   001926  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3774   00192A  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3775   00192E  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3776   001932  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3777   001936  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3778   00193A  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3779   00193E  ECAE  F015         	call	_turnRight	;wreg free
  3780                           
  3781                           ;dc_motor.c: 317:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3782   001942  0E05               	movlw	5
  3783   001944  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3784   001946  0E0F               	movlw	15
  3785   001948  6E3C               	movwf	??_lostReturnHome^0,c
  3786   00194A  0EF1               	movlw	241
  3787   00194C                     u2937:
  3788   00194C  2EE8               	decfsz	wreg,f,c
  3789   00194E  D7FE               	bra	u2937
  3790   001950  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3791   001952  D7FC               	bra	u2937
  3792   001954  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3793   001956  D7FA               	bra	u2937
  3794   001958  0000               	nop	
  3795   00195A                     
  3796                           ;dc_motor.c: 318:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3797   00195A  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3798   00195E  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3799   001962  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3800   001966  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3801   00196A  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3802   00196E  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3803   001972  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3804   001976  ECBB  F014         	call	_reverseOneSquare	;wreg free
  3805   00197A  EFFF  F00B         	goto	l3277
  3806   00197E                     l3303:
  3807   00197E  5040               	movf	lostReturnHome@i^0,w,c
  3808   001980  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3809   001982  6ED9               	movwf	fsr2l,c
  3810   001984  0E00               	movlw	0
  3811   001986  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3812   001988  6EDA               	movwf	fsr2h,c
  3813   00198A  0E06               	movlw	6
  3814   00198C  18DE               	xorwf	postinc2,w,c
  3815   00198E  A4D8               	btfss	status,2,c
  3816   001990  EFCC  F00C         	goto	u1881
  3817   001994  EFCE  F00C         	goto	u1880
  3818   001998                     u1881:
  3819   001998  EF18  F00D         	goto	l3315
  3820   00199C                     u1880:
  3821   00199C                     
  3822                           ;dc_motor.c: 323:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3823   00199C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3824   0019A0  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3825   0019A4  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3826   0019A8  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3827   0019AC  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3828   0019B0  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3829   0019B4  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3830   0019B8  EC98  F016         	call	_turnLeft	;wreg free
  3831   0019BC                     
  3832                           ;dc_motor.c: 324:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3833   0019BC  0E05               	movlw	5
  3834   0019BE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3835   0019C0  0E0F               	movlw	15
  3836   0019C2  6E3C               	movwf	??_lostReturnHome^0,c
  3837   0019C4  0EF1               	movlw	241
  3838   0019C6                     u2947:
  3839   0019C6  2EE8               	decfsz	wreg,f,c
  3840   0019C8  D7FE               	bra	u2947
  3841   0019CA  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3842   0019CC  D7FC               	bra	u2947
  3843   0019CE  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3844   0019D0  D7FA               	bra	u2947
  3845   0019D2  0000               	nop	
  3846   0019D4                     
  3847                           ;dc_motor.c: 325:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3848   0019D4  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3849   0019D8  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3850   0019DC  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3851   0019E0  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3852   0019E4  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3853   0019E8  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3854   0019EC  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3855   0019F0  EC98  F016         	call	_turnLeft	;wreg free
  3856                           
  3857                           ;dc_motor.c: 326:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3858   0019F4  0E05               	movlw	5
  3859   0019F6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3860   0019F8  0E0F               	movlw	15
  3861   0019FA  6E3C               	movwf	??_lostReturnHome^0,c
  3862   0019FC  0EF1               	movlw	241
  3863   0019FE                     u2957:
  3864   0019FE  2EE8               	decfsz	wreg,f,c
  3865   001A00  D7FE               	bra	u2957
  3866   001A02  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3867   001A04  D7FC               	bra	u2957
  3868   001A06  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3869   001A08  D7FA               	bra	u2957
  3870   001A0A  0000               	nop	
  3871   001A0C                     
  3872                           ;dc_motor.c: 327:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3873   001A0C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3874   001A10  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3875   001A14  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3876   001A18  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3877   001A1C  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3878   001A20  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3879   001A24  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3880   001A28  EC98  F016         	call	_turnLeft	;wreg free
  3881   001A2C  EFFF  F00B         	goto	l3277
  3882   001A30                     l3315:
  3883   001A30  5040               	movf	lostReturnHome@i^0,w,c
  3884   001A32  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3885   001A34  6ED9               	movwf	fsr2l,c
  3886   001A36  0E00               	movlw	0
  3887   001A38  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3888   001A3A  6EDA               	movwf	fsr2h,c
  3889   001A3C  0E07               	movlw	7
  3890   001A3E  18DE               	xorwf	postinc2,w,c
  3891   001A40  A4D8               	btfss	status,2,c
  3892   001A42  EF25  F00D         	goto	u1891
  3893   001A46  EF27  F00D         	goto	u1890
  3894   001A4A                     u1891:
  3895   001A4A  EF71  F00D         	goto	l531
  3896   001A4E                     u1890:
  3897   001A4E                     
  3898                           ;dc_motor.c: 332:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3899   001A4E  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3900   001A52  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3901   001A56  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3902   001A5A  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3903   001A5E  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3904   001A62  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3905   001A66  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3906   001A6A  ECAE  F015         	call	_turnRight	;wreg free
  3907   001A6E                     
  3908                           ;dc_motor.c: 333:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3909   001A6E  0E05               	movlw	5
  3910   001A70  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3911   001A72  0E0F               	movlw	15
  3912   001A74  6E3C               	movwf	??_lostReturnHome^0,c
  3913   001A76  0EF1               	movlw	241
  3914   001A78                     u2967:
  3915   001A78  2EE8               	decfsz	wreg,f,c
  3916   001A7A  D7FE               	bra	u2967
  3917   001A7C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3918   001A7E  D7FC               	bra	u2967
  3919   001A80  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3920   001A82  D7FA               	bra	u2967
  3921   001A84  0000               	nop	
  3922   001A86                     
  3923                           ;dc_motor.c: 334:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3924   001A86  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3925   001A8A  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3926   001A8E  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3927   001A92  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3928   001A96  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3929   001A9A  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3930   001A9E  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3931   001AA2  ECAE  F015         	call	_turnRight	;wreg free
  3932                           
  3933                           ;dc_motor.c: 335:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3934   001AA6  0E05               	movlw	5
  3935   001AA8  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3936   001AAA  0E0F               	movlw	15
  3937   001AAC  6E3C               	movwf	??_lostReturnHome^0,c
  3938   001AAE  0EF1               	movlw	241
  3939   001AB0                     u2977:
  3940   001AB0  2EE8               	decfsz	wreg,f,c
  3941   001AB2  D7FE               	bra	u2977
  3942   001AB4  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3943   001AB6  D7FC               	bra	u2977
  3944   001AB8  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3945   001ABA  D7FA               	bra	u2977
  3946   001ABC  0000               	nop	
  3947   001ABE                     
  3948                           ;dc_motor.c: 336:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3949   001ABE  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3950   001AC2  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3951   001AC6  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3952   001ACA  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3953   001ACE  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3954   001AD2  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3955   001AD6  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3956   001ADA  ECAE  F015         	call	_turnRight	;wreg free
  3957   001ADE  EFFF  F00B         	goto	l3277
  3958   001AE2                     l531:
  3959   001AE2                     l525:
  3960                           
  3961                           ;dc_motor.c: 340:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3962   001AE2  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  3963   001AE6  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  3964   001AEA  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  3965   001AEE  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  3966   001AF2  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3967   001AF6  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  3968   001AFA  ECE7  F019         	call	_fullSpeedAhead	;wreg free
  3969   001AFE                     
  3970                           ;dc_motor.c: 341:         resetTimer();
  3971   001AFE  ECB9  F01D         	call	_resetTimer	;wreg free
  3972   001B02                     l3329:
  3973   001B02  5040               	movf	lostReturnHome@i^0,w,c
  3974   001B04  0D02               	mullw	2
  3975   001B06  CFF3 F03C          	movff	prodl,??_lostReturnHome
  3976   001B0A  CFF4 F03D          	movff	prodh,??_lostReturnHome+1
  3977   001B0E  503C               	movf	??_lostReturnHome^0,w,c
  3978   001B10  2433               	addwf	lostReturnHome@straightTime^0,w,c
  3979   001B12  6ED9               	movwf	fsr2l,c
  3980   001B14  503D               	movf	(??_lostReturnHome+1)^0,w,c
  3981   001B16  2034               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  3982   001B18  6EDA               	movwf	fsr2h,c
  3983   001B1A  ECB7  F01C         	call	_get16bitTMR0val	;wreg free
  3984   001B1E  50DE               	movf	postinc2,w,c
  3985   001B20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  3986   001B22  50DE               	movf	postinc2,w,c
  3987   001B24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  3988   001B26  A0D8               	btfss	status,0,c
  3989   001B28  EF98  F00D         	goto	u1901
  3990   001B2C  EF9A  F00D         	goto	u1900
  3991   001B30                     u1901:
  3992   001B30  EF81  F00D         	goto	l3329
  3993   001B34                     u1900:
  3994   001B34                     
  3995                           ;dc_motor.c: 343:         stop(mL, mR, straightRamp);
  3996   001B34  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  3997   001B38  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  3998   001B3C  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  3999   001B40  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  4000   001B44  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4001   001B48  EC63  F019         	call	_stop	;wreg free
  4002   001B4C                     l3333:
  4003                           
  4004                           ;dc_motor.c: 276:     while (i>0) {
  4005   001B4C  5040               	movf	lostReturnHome@i^0,w,c
  4006   001B4E  A4D8               	btfss	status,2,c
  4007   001B50  EFAC  F00D         	goto	u1911
  4008   001B54  EFAE  F00D         	goto	u1910
  4009   001B58                     u1911:
  4010   001B58  EFFA  F00A         	goto	l3247
  4011   001B5C                     u1910:
  4012   001B5C  0012               	return		;funcret
  4013   001B5E                     __end_of_lostReturnHome:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _stop *****************
  4017 ;; Defined at:
  4018 ;;		line 348 in file "dc_motor.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4021 ;;		 -> main@motorL(10), 
  4022 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4023 ;;		 -> main@motorR(10), 
  4024 ;;  straightRamp    1   34[COMRAM] unsigned char 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  cur_power       2   40[COMRAM] int 
  4027 ;;  i               2   38[COMRAM] int 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4037 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4038 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4039 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4040 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4041 ;;Total ram usage:       12 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; Hardware stack levels required when called: 7
  4044 ;; This function calls:
  4045 ;;		_setMotorPWM
  4046 ;; This function is called by:
  4047 ;;		_main
  4048 ;;		_returnHome
  4049 ;;		_lostReturnHome
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text5
  4054   0032C6                     __ptext5:
  4055                           	callstack 0
  4056   0032C6                     _stop:
  4057                           	callstack 23
  4058   0032C6                     
  4059                           ;dc_motor.c: 348: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 349: {;dc_motor.c: 350:     mL->direction = 1;
  4060   0032C6  EE20 F001          	lfsr	2,1
  4061   0032CA  501F               	movf	stop@mL^0,w,c
  4062   0032CC  26D9               	addwf	fsr2l,f,c
  4063   0032CE  5020               	movf	(stop@mL+1)^0,w,c
  4064   0032D0  22DA               	addwfc	fsr2h,f,c
  4065   0032D2  0E01               	movlw	1
  4066   0032D4  6EDF               	movwf	indf2,c
  4067                           
  4068                           ;dc_motor.c: 351:     mR->direction = 1;
  4069   0032D6  EE20 F001          	lfsr	2,1
  4070   0032DA  5021               	movf	stop@mR^0,w,c
  4071   0032DC  26D9               	addwf	fsr2l,f,c
  4072   0032DE  5022               	movf	(stop@mR+1)^0,w,c
  4073   0032E0  22DA               	addwfc	fsr2h,f,c
  4074   0032E2  0E01               	movlw	1
  4075   0032E4  6EDF               	movwf	indf2,c
  4076                           
  4077                           ;dc_motor.c: 352:     int i;;dc_motor.c: 353:     int cur_power;;dc_motor.c: 354:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  4078   0032E6  C01F  FFD9         	movff	stop@mL,fsr2l
  4079   0032EA  C020  FFDA         	movff	stop@mL+1,fsr2h
  4080   0032EE  50DF               	movf	indf2,w,c
  4081   0032F0  6E24               	movwf	??_stop^0,c
  4082   0032F2  EE20 F009          	lfsr	2,9
  4083   0032F6  501F               	movf	stop@mL^0,w,c
  4084   0032F8  26D9               	addwf	fsr2l,f,c
  4085   0032FA  5020               	movf	(stop@mL+1)^0,w,c
  4086   0032FC  22DA               	addwfc	fsr2h,f,c
  4087   0032FE  50DF               	movf	indf2,w,c
  4088   003300  6E25               	movwf	(??_stop+1)^0,c
  4089   003302  5025               	movf	(??_stop+1)^0,w,c
  4090   003304  5C24               	subwf	??_stop^0,w,c
  4091   003306  6E29               	movwf	stop@cur_power^0,c
  4092   003308  6A2A               	clrf	(stop@cur_power+1)^0,c
  4093   00330A  A0D8               	btfss	status,0,c
  4094   00330C  062A               	decf	(stop@cur_power+1)^0,f,c
  4095   00330E                     l2541:
  4096   00330E  BE2A               	btfsc	(stop@cur_power+1)^0,7,c
  4097   003310  EF8E  F019         	goto	u1210
  4098   003314  EF8C  F019         	goto	u1211
  4099   003318                     u1211:
  4100   003318  EF90  F019         	goto	l2545
  4101   00331C                     u1210:
  4102   00331C  EFDC  F019         	goto	l2561
  4103   003320                     l2545:
  4104                           
  4105                           ;dc_motor.c: 355:         mL->power = cur_power+mL->compensation;
  4106   003320  EE20 F009          	lfsr	2,9
  4107   003324  501F               	movf	stop@mL^0,w,c
  4108   003326  26D9               	addwf	fsr2l,f,c
  4109   003328  5020               	movf	(stop@mL+1)^0,w,c
  4110   00332A  22DA               	addwfc	fsr2h,f,c
  4111   00332C  50DF               	movf	indf2,w,c
  4112   00332E  2429               	addwf	stop@cur_power^0,w,c
  4113   003330  C01F  FFD9         	movff	stop@mL,fsr2l
  4114   003334  C020  FFDA         	movff	stop@mL+1,fsr2h
  4115   003338  6EDF               	movwf	indf2,c
  4116                           
  4117                           ;dc_motor.c: 356:         mR->power = cur_power+mR->compensation;
  4118   00333A  EE20 F009          	lfsr	2,9
  4119   00333E  5021               	movf	stop@mR^0,w,c
  4120   003340  26D9               	addwf	fsr2l,f,c
  4121   003342  5022               	movf	(stop@mR+1)^0,w,c
  4122   003344  22DA               	addwfc	fsr2h,f,c
  4123   003346  50DF               	movf	indf2,w,c
  4124   003348  2429               	addwf	stop@cur_power^0,w,c
  4125   00334A  C021  FFD9         	movff	stop@mR,fsr2l
  4126   00334E  C022  FFDA         	movff	stop@mR+1,fsr2h
  4127   003352  6EDF               	movwf	indf2,c
  4128   003354                     
  4129                           ;dc_motor.c: 357:         setMotorPWM(mL);
  4130   003354  C01F  F019         	movff	stop@mL,setMotorPWM@m
  4131   003358  C020  F01A         	movff	stop@mL+1,setMotorPWM@m+1
  4132   00335C  EC82  F017         	call	_setMotorPWM	;wreg free
  4133   003360                     
  4134                           ;dc_motor.c: 358:         setMotorPWM(mR);
  4135   003360  C021  F019         	movff	stop@mR,setMotorPWM@m
  4136   003364  C022  F01A         	movff	stop@mR+1,setMotorPWM@m+1
  4137   003368  EC82  F017         	call	_setMotorPWM	;wreg free
  4138   00336C                     
  4139                           ;dc_motor.c: 359:         for (i=0;i<straightRamp;i++) {
  4140   00336C  0E00               	movlw	0
  4141   00336E  6E28               	movwf	(stop@i+1)^0,c
  4142   003370  0E00               	movlw	0
  4143   003372  6E27               	movwf	stop@i^0,c
  4144   003374  EFC5  F019         	goto	l546
  4145   003378                     l2553:
  4146                           
  4147                           ;dc_motor.c: 360:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4148   003378  0ED0               	movlw	208
  4149   00337A  6E24               	movwf	??_stop^0,c
  4150   00337C  0ECA               	movlw	202
  4151   00337E                     u2987:
  4152   00337E  2EE8               	decfsz	wreg,f,c
  4153   003380  D7FE               	bra	u2987
  4154   003382  2E24               	decfsz	??_stop^0,f,c
  4155   003384  D7FC               	bra	u2987
  4156   003386                     
  4157                           ;dc_motor.c: 361:         }
  4158   003386  4A27               	infsnz	stop@i^0,f,c
  4159   003388  2A28               	incf	(stop@i+1)^0,f,c
  4160   00338A                     l546:
  4161   00338A  5023               	movf	stop@straightRamp^0,w,c
  4162   00338C  6E24               	movwf	??_stop^0,c
  4163   00338E  6A25               	clrf	(??_stop+1)^0,c
  4164   003390  5024               	movf	??_stop^0,w,c
  4165   003392  5C27               	subwf	stop@i^0,w,c
  4166   003394  5028               	movf	(stop@i+1)^0,w,c
  4167   003396  0A80               	xorlw	128
  4168   003398  6E26               	movwf	(??_stop+2)^0,c
  4169   00339A  5025               	movf	(??_stop+1)^0,w,c
  4170   00339C  0A80               	xorlw	128
  4171   00339E  5826               	subwfb	(??_stop+2)^0,w,c
  4172   0033A0  A0D8               	btfss	status,0,c
  4173   0033A2  EFD5  F019         	goto	u1221
  4174   0033A6  EFD7  F019         	goto	u1220
  4175   0033AA                     u1221:
  4176   0033AA  EFBC  F019         	goto	l2553
  4177   0033AE                     u1220:
  4178   0033AE                     
  4179                           ;dc_motor.c: 362:     }
  4180   0033AE  0629               	decf	stop@cur_power^0,f,c
  4181   0033B0  A0D8               	btfss	status,0,c
  4182   0033B2  062A               	decf	(stop@cur_power+1)^0,f,c
  4183   0033B4  EF87  F019         	goto	l2541
  4184   0033B8                     l2561:
  4185                           
  4186                           ;dc_motor.c: 363:     mL->power = 0;
  4187   0033B8  C01F  FFD9         	movff	stop@mL,fsr2l
  4188   0033BC  C020  FFDA         	movff	stop@mL+1,fsr2h
  4189   0033C0  6ADF               	clrf	indf2,c
  4190                           
  4191                           ;dc_motor.c: 364:     mR->power = 0;
  4192   0033C2  C021  FFD9         	movff	stop@mR,fsr2l
  4193   0033C6  C022  FFDA         	movff	stop@mR+1,fsr2h
  4194   0033CA  6ADF               	clrf	indf2,c
  4195   0033CC  0012               	return		;funcret
  4196   0033CE                     __end_of_stop:
  4197                           	callstack 0
  4198                           
  4199 ;; *************** function _reverseOneSquare *****************
  4200 ;; Defined at:
  4201 ;;		line 449 in file "dc_motor.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4204 ;;		 -> main@motorL(10), 
  4205 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4206 ;;		 -> main@motorR(10), 
  4207 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4208 ;;  reverseDurat    1   35[COMRAM] unsigned char 
  4209 ;;  straightRamp    1   36[COMRAM] unsigned char 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  cur_power       2   42[COMRAM] int 
  4212 ;;  i               2   40[COMRAM] int 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4222 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4223 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4224 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4225 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4226 ;;Total ram usage:       14 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; Hardware stack levels required when called: 7
  4229 ;; This function calls:
  4230 ;;		_setMotorPWM
  4231 ;; This function is called by:
  4232 ;;		_move
  4233 ;;		_returnHome
  4234 ;;		_lostReturnHome
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text6
  4239   002976                     __ptext6:
  4240                           	callstack 0
  4241   002976                     _reverseOneSquare:
  4242                           	callstack 22
  4243   002976                     
  4244                           ;dc_motor.c: 449: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned char reverseDuration, unsigned char straightRamp);dc_motor.c: 450: {;dc_motor.c
      +                          : 451:     mL->direction = 0;
  4245   002976  EE20 F001          	lfsr	2,1
  4246   00297A  501F               	movf	reverseOneSquare@mL^0,w,c
  4247   00297C  26D9               	addwf	fsr2l,f,c
  4248   00297E  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4249   002980  22DA               	addwfc	fsr2h,f,c
  4250   002982  6ADF               	clrf	indf2,c
  4251                           
  4252                           ;dc_motor.c: 452:     mR->direction = 0;
  4253   002984  EE20 F001          	lfsr	2,1
  4254   002988  5021               	movf	reverseOneSquare@mR^0,w,c
  4255   00298A  26D9               	addwf	fsr2l,f,c
  4256   00298C  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4257   00298E  22DA               	addwfc	fsr2h,f,c
  4258   002990  6ADF               	clrf	indf2,c
  4259   002992                     
  4260                           ;dc_motor.c: 453:     int i;;dc_motor.c: 454:     int cur_power;;dc_motor.c: 455:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4261   002992  0E00               	movlw	0
  4262   002994  6E2C               	movwf	(reverseOneSquare@cur_power+1)^0,c
  4263   002996  0E01               	movlw	1
  4264   002998  6E2B               	movwf	reverseOneSquare@cur_power^0,c
  4265   00299A  EF18  F015         	goto	l2675
  4266   00299E                     l2661:
  4267                           
  4268                           ;dc_motor.c: 456:         mL->power = cur_power+mL->compensation;
  4269   00299E  EE20 F009          	lfsr	2,9
  4270   0029A2  501F               	movf	reverseOneSquare@mL^0,w,c
  4271   0029A4  26D9               	addwf	fsr2l,f,c
  4272   0029A6  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4273   0029A8  22DA               	addwfc	fsr2h,f,c
  4274   0029AA  50DF               	movf	indf2,w,c
  4275   0029AC  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4276   0029AE  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4277   0029B2  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4278   0029B6  6EDF               	movwf	indf2,c
  4279                           
  4280                           ;dc_motor.c: 457:         mR->power = cur_power+mR->compensation;
  4281   0029B8  EE20 F009          	lfsr	2,9
  4282   0029BC  5021               	movf	reverseOneSquare@mR^0,w,c
  4283   0029BE  26D9               	addwf	fsr2l,f,c
  4284   0029C0  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4285   0029C2  22DA               	addwfc	fsr2h,f,c
  4286   0029C4  50DF               	movf	indf2,w,c
  4287   0029C6  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4288   0029C8  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4289   0029CC  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4290   0029D0  6EDF               	movwf	indf2,c
  4291   0029D2                     
  4292                           ;dc_motor.c: 458:         setMotorPWM(mL);
  4293   0029D2  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4294   0029D6  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4295   0029DA  EC82  F017         	call	_setMotorPWM	;wreg free
  4296   0029DE                     
  4297                           ;dc_motor.c: 459:         setMotorPWM(mR);
  4298   0029DE  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4299   0029E2  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4300   0029E6  EC82  F017         	call	_setMotorPWM	;wreg free
  4301   0029EA                     
  4302                           ;dc_motor.c: 460:         for (i=0;i<straightRamp;i++) {
  4303   0029EA  0E00               	movlw	0
  4304   0029EC  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4305   0029EE  0E00               	movlw	0
  4306   0029F0  6E29               	movwf	reverseOneSquare@i^0,c
  4307   0029F2  EF04  F015         	goto	l597
  4308   0029F6                     l2669:
  4309                           
  4310                           ;dc_motor.c: 461:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4311   0029F6  0ED0               	movlw	208
  4312   0029F8  6E26               	movwf	??_reverseOneSquare^0,c
  4313   0029FA  0ECA               	movlw	202
  4314   0029FC                     u2997:
  4315   0029FC  2EE8               	decfsz	wreg,f,c
  4316   0029FE  D7FE               	bra	u2997
  4317   002A00  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4318   002A02  D7FC               	bra	u2997
  4319   002A04                     
  4320                           ;dc_motor.c: 462:         }
  4321   002A04  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4322   002A06  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4323   002A08                     l597:
  4324   002A08  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4325   002A0A  6E26               	movwf	??_reverseOneSquare^0,c
  4326   002A0C  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4327   002A0E  5026               	movf	??_reverseOneSquare^0,w,c
  4328   002A10  5C29               	subwf	reverseOneSquare@i^0,w,c
  4329   002A12  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4330   002A14  0A80               	xorlw	128
  4331   002A16  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4332   002A18  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4333   002A1A  0A80               	xorlw	128
  4334   002A1C  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4335   002A1E  A0D8               	btfss	status,0,c
  4336   002A20  EF14  F015         	goto	u1331
  4337   002A24  EF16  F015         	goto	u1330
  4338   002A28                     u1331:
  4339   002A28  EFFB  F014         	goto	l2669
  4340   002A2C                     u1330:
  4341   002A2C                     
  4342                           ;dc_motor.c: 463:     }
  4343   002A2C  4A2B               	infsnz	reverseOneSquare@cur_power^0,f,c
  4344   002A2E  2A2C               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  4345   002A30                     l2675:
  4346   002A30  5023               	movf	reverseOneSquare@straightSpeed^0,w,c
  4347   002A32  6E26               	movwf	??_reverseOneSquare^0,c
  4348   002A34  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4349   002A36  502B               	movf	reverseOneSquare@cur_power^0,w,c
  4350   002A38  5C26               	subwf	??_reverseOneSquare^0,w,c
  4351   002A3A  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4352   002A3C  0A80               	xorlw	128
  4353   002A3E  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4354   002A40  502C               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  4355   002A42  0A80               	xorlw	128
  4356   002A44  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4357   002A46  B0D8               	btfsc	status,0,c
  4358   002A48  EF28  F015         	goto	u1341
  4359   002A4C  EF2A  F015         	goto	u1340
  4360   002A50                     u1341:
  4361   002A50  EFCF  F014         	goto	l2661
  4362   002A54                     u1340:
  4363   002A54                     
  4364                           ;dc_motor.c: 465:     for (i=0;i<reverseDuration;i++) {
  4365   002A54  0E00               	movlw	0
  4366   002A56  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4367   002A58  0E00               	movlw	0
  4368   002A5A  6E29               	movwf	reverseOneSquare@i^0,c
  4369   002A5C  EF39  F015         	goto	l601
  4370   002A60                     l2679:
  4371                           
  4372                           ;dc_motor.c: 466:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4373   002A60  0ED0               	movlw	208
  4374   002A62  6E26               	movwf	??_reverseOneSquare^0,c
  4375   002A64  0ECA               	movlw	202
  4376   002A66                     u3007:
  4377   002A66  2EE8               	decfsz	wreg,f,c
  4378   002A68  D7FE               	bra	u3007
  4379   002A6A  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4380   002A6C  D7FC               	bra	u3007
  4381   002A6E                     
  4382                           ;dc_motor.c: 467:         }
  4383   002A6E  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4384   002A70  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4385   002A72                     l601:
  4386   002A72  5024               	movf	reverseOneSquare@reverseDuration^0,w,c
  4387   002A74  6E26               	movwf	??_reverseOneSquare^0,c
  4388   002A76  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4389   002A78  5026               	movf	??_reverseOneSquare^0,w,c
  4390   002A7A  5C29               	subwf	reverseOneSquare@i^0,w,c
  4391   002A7C  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4392   002A7E  0A80               	xorlw	128
  4393   002A80  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4394   002A82  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4395   002A84  0A80               	xorlw	128
  4396   002A86  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4397   002A88  A0D8               	btfss	status,0,c
  4398   002A8A  EF49  F015         	goto	u1351
  4399   002A8E  EF4B  F015         	goto	u1350
  4400   002A92                     u1351:
  4401   002A92  EF30  F015         	goto	l2679
  4402   002A96                     u1350:
  4403   002A96                     
  4404                           ;dc_motor.c: 469:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  4405   002A96  C023  F02B         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  4406   002A9A  6A2C               	clrf	(reverseOneSquare@cur_power+1)^0,c
  4407   002A9C                     l2683:
  4408   002A9C  BE2C               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  4409   002A9E  EF55  F015         	goto	u1360
  4410   002AA2  EF53  F015         	goto	u1361
  4411   002AA6                     u1361:
  4412   002AA6  EF57  F015         	goto	l2687
  4413   002AAA                     u1360:
  4414   002AAA  EFA3  F015         	goto	l2703
  4415   002AAE                     l2687:
  4416                           
  4417                           ;dc_motor.c: 470:         mL->power = cur_power+mL->compensation;
  4418   002AAE  EE20 F009          	lfsr	2,9
  4419   002AB2  501F               	movf	reverseOneSquare@mL^0,w,c
  4420   002AB4  26D9               	addwf	fsr2l,f,c
  4421   002AB6  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4422   002AB8  22DA               	addwfc	fsr2h,f,c
  4423   002ABA  50DF               	movf	indf2,w,c
  4424   002ABC  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4425   002ABE  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4426   002AC2  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4427   002AC6  6EDF               	movwf	indf2,c
  4428                           
  4429                           ;dc_motor.c: 471:         mR->power = cur_power+mR->compensation;
  4430   002AC8  EE20 F009          	lfsr	2,9
  4431   002ACC  5021               	movf	reverseOneSquare@mR^0,w,c
  4432   002ACE  26D9               	addwf	fsr2l,f,c
  4433   002AD0  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4434   002AD2  22DA               	addwfc	fsr2h,f,c
  4435   002AD4  50DF               	movf	indf2,w,c
  4436   002AD6  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4437   002AD8  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4438   002ADC  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4439   002AE0  6EDF               	movwf	indf2,c
  4440   002AE2                     
  4441                           ;dc_motor.c: 472:         setMotorPWM(mL);
  4442   002AE2  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4443   002AE6  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4444   002AEA  EC82  F017         	call	_setMotorPWM	;wreg free
  4445   002AEE                     
  4446                           ;dc_motor.c: 473:         setMotorPWM(mR);
  4447   002AEE  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4448   002AF2  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4449   002AF6  EC82  F017         	call	_setMotorPWM	;wreg free
  4450   002AFA                     
  4451                           ;dc_motor.c: 474:         for (i=0;i<straightRamp;i++) {
  4452   002AFA  0E00               	movlw	0
  4453   002AFC  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4454   002AFE  0E00               	movlw	0
  4455   002B00  6E29               	movwf	reverseOneSquare@i^0,c
  4456   002B02  EF8C  F015         	goto	l606
  4457   002B06                     l2695:
  4458                           
  4459                           ;dc_motor.c: 475:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4460   002B06  0ED0               	movlw	208
  4461   002B08  6E26               	movwf	??_reverseOneSquare^0,c
  4462   002B0A  0ECA               	movlw	202
  4463   002B0C                     u3017:
  4464   002B0C  2EE8               	decfsz	wreg,f,c
  4465   002B0E  D7FE               	bra	u3017
  4466   002B10  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4467   002B12  D7FC               	bra	u3017
  4468   002B14                     
  4469                           ;dc_motor.c: 476:         }
  4470   002B14  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4471   002B16  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4472   002B18                     l606:
  4473   002B18  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4474   002B1A  6E26               	movwf	??_reverseOneSquare^0,c
  4475   002B1C  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4476   002B1E  5026               	movf	??_reverseOneSquare^0,w,c
  4477   002B20  5C29               	subwf	reverseOneSquare@i^0,w,c
  4478   002B22  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4479   002B24  0A80               	xorlw	128
  4480   002B26  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4481   002B28  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4482   002B2A  0A80               	xorlw	128
  4483   002B2C  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4484   002B2E  A0D8               	btfss	status,0,c
  4485   002B30  EF9C  F015         	goto	u1371
  4486   002B34  EF9E  F015         	goto	u1370
  4487   002B38                     u1371:
  4488   002B38  EF83  F015         	goto	l2695
  4489   002B3C                     u1370:
  4490   002B3C                     
  4491                           ;dc_motor.c: 477:     }
  4492   002B3C  062B               	decf	reverseOneSquare@cur_power^0,f,c
  4493   002B3E  A0D8               	btfss	status,0,c
  4494   002B40  062C               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  4495   002B42  EF4E  F015         	goto	l2683
  4496   002B46                     l2703:
  4497                           
  4498                           ;dc_motor.c: 478:     mL->power = 0;
  4499   002B46  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4500   002B4A  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4501   002B4E  6ADF               	clrf	indf2,c
  4502                           
  4503                           ;dc_motor.c: 479:     mR->power = 0;
  4504   002B50  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4505   002B54  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4506   002B58  6ADF               	clrf	indf2,c
  4507   002B5A  0012               	return		;funcret
  4508   002B5C                     __end_of_reverseOneSquare:
  4509                           	callstack 0
  4510                           
  4511 ;; *************** function _resetTimer *****************
  4512 ;; Defined at:
  4513 ;;		line 23 in file "timers.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;		None
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		wreg, status,2
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4531 ;;Total ram usage:        0 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; Hardware stack levels required when called: 5
  4534 ;; This function calls:
  4535 ;;		Nothing
  4536 ;; This function is called by:
  4537 ;;		_main
  4538 ;;		_returnHome
  4539 ;;		_lostReturnHome
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text7
  4544   003B72                     __ptext7:
  4545                           	callstack 0
  4546   003B72                     _resetTimer:
  4547                           	callstack 25
  4548   003B72                     
  4549                           ;timers.c: 25:     TMR0H=0;
  4550   003B72  0E00               	movlw	0
  4551   003B74  6ED4               	movwf	212,c	;volatile
  4552                           
  4553                           ;timers.c: 26:     TMR0L=0;
  4554   003B76  0E00               	movlw	0
  4555   003B78  6ED3               	movwf	211,c	;volatile
  4556   003B7A  0012               	return		;funcret
  4557   003B7C                     __end_of_resetTimer:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function _get16bitTMR0val *****************
  4561 ;; Defined at:
  4562 ;;		line 33 in file "timers.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  timer_val       2   19[COMRAM] unsigned int 
  4567 ;;  timer_high      2   17[COMRAM] unsigned int 
  4568 ;;  timer_low       2   15[COMRAM] unsigned int 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  2   11[COMRAM] unsigned int 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4579 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4581 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4582 ;;Total ram usage:       10 bytes
  4583 ;; Hardware stack levels used: 1
  4584 ;; Hardware stack levels required when called: 5
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;;		_returnHome
  4590 ;;		_lostReturnHome
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           	psect	text8
  4595   00396E                     __ptext8:
  4596                           	callstack 0
  4597   00396E                     _get16bitTMR0val:
  4598                           	callstack 23
  4599   00396E                     
  4600                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  4601   00396E  CFD3 F010          	movff	4051,get16bitTMR0val@timer_low	;volatile
  4602   003972  6A11               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  4603                           
  4604                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  4605   003974  CFD4 F012          	movff	4052,get16bitTMR0val@timer_high	;volatile
  4606   003978  6A13               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  4607   00397A                     
  4608                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  4609   00397A  5012               	movf	get16bitTMR0val@timer_high^0,w,c
  4610   00397C  6E0F               	movwf	(??_get16bitTMR0val+1)^0,c
  4611   00397E  6A0E               	clrf	??_get16bitTMR0val^0,c
  4612   003980  5010               	movf	get16bitTMR0val@timer_low^0,w,c
  4613   003982  100E               	iorwf	??_get16bitTMR0val^0,w,c
  4614   003984  6E14               	movwf	get16bitTMR0val@timer_val^0,c
  4615   003986  5011               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  4616   003988  100F               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  4617   00398A  6E15               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  4618   00398C                     
  4619                           ;timers.c: 39:     return timer_val;
  4620   00398C  C014  F00C         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  4621   003990  C015  F00D         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  4622   003994  0012               	return		;funcret
  4623   003996                     __end_of_get16bitTMR0val:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function _fullSpeedAhead *****************
  4627 ;; Defined at:
  4628 ;;		line 432 in file "dc_motor.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4631 ;;		 -> main@motorL(10), 
  4632 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4633 ;;		 -> main@motorR(10), 
  4634 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4635 ;;  straightRamp    1   35[COMRAM] unsigned char 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  cur_power       2   41[COMRAM] int 
  4638 ;;  i               2   39[COMRAM] int 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4648 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4651 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4652 ;;Total ram usage:       13 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; Hardware stack levels required when called: 7
  4655 ;; This function calls:
  4656 ;;		_setMotorPWM
  4657 ;; This function is called by:
  4658 ;;		_main
  4659 ;;		_move
  4660 ;;		_returnHome
  4661 ;;		_lostReturnHome
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text9
  4666   0033CE                     __ptext9:
  4667                           	callstack 0
  4668   0033CE                     _fullSpeedAhead:
  4669                           	callstack 21
  4670   0033CE                     
  4671                           ;dc_motor.c: 432: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 433: {;dc_motor.c: 434:     mL->direction = 1;
  4672   0033CE  EE20 F001          	lfsr	2,1
  4673   0033D2  501F               	movf	fullSpeedAhead@mL^0,w,c
  4674   0033D4  26D9               	addwf	fsr2l,f,c
  4675   0033D6  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4676   0033D8  22DA               	addwfc	fsr2h,f,c
  4677   0033DA  0E01               	movlw	1
  4678   0033DC  6EDF               	movwf	indf2,c
  4679                           
  4680                           ;dc_motor.c: 435:     mR->direction = 1;
  4681   0033DE  EE20 F001          	lfsr	2,1
  4682   0033E2  5021               	movf	fullSpeedAhead@mR^0,w,c
  4683   0033E4  26D9               	addwf	fsr2l,f,c
  4684   0033E6  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4685   0033E8  22DA               	addwfc	fsr2h,f,c
  4686   0033EA  0E01               	movlw	1
  4687   0033EC  6EDF               	movwf	indf2,c
  4688   0033EE                     
  4689                           ;dc_motor.c: 436:     int i;;dc_motor.c: 437:     int cur_power;;dc_motor.c: 438:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4690   0033EE  0E00               	movlw	0
  4691   0033F0  6E2B               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  4692   0033F2  0E01               	movlw	1
  4693   0033F4  6E2A               	movwf	fullSpeedAhead@cur_power^0,c
  4694   0033F6  EF46  F01A         	goto	l2527
  4695   0033FA                     l2513:
  4696                           
  4697                           ;dc_motor.c: 439:         mL->power = cur_power+mL->compensation;
  4698   0033FA  EE20 F009          	lfsr	2,9
  4699   0033FE  501F               	movf	fullSpeedAhead@mL^0,w,c
  4700   003400  26D9               	addwf	fsr2l,f,c
  4701   003402  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4702   003404  22DA               	addwfc	fsr2h,f,c
  4703   003406  50DF               	movf	indf2,w,c
  4704   003408  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4705   00340A  C01F  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4706   00340E  C020  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4707   003412  6EDF               	movwf	indf2,c
  4708                           
  4709                           ;dc_motor.c: 440:         mR->power = cur_power+mR->compensation;
  4710   003414  EE20 F009          	lfsr	2,9
  4711   003418  5021               	movf	fullSpeedAhead@mR^0,w,c
  4712   00341A  26D9               	addwf	fsr2l,f,c
  4713   00341C  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4714   00341E  22DA               	addwfc	fsr2h,f,c
  4715   003420  50DF               	movf	indf2,w,c
  4716   003422  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4717   003424  C021  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4718   003428  C022  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4719   00342C  6EDF               	movwf	indf2,c
  4720   00342E                     
  4721                           ;dc_motor.c: 441:         setMotorPWM(mL);
  4722   00342E  C01F  F019         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4723   003432  C020  F01A         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4724   003436  EC82  F017         	call	_setMotorPWM	;wreg free
  4725   00343A                     
  4726                           ;dc_motor.c: 442:         setMotorPWM(mR);
  4727   00343A  C021  F019         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4728   00343E  C022  F01A         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4729   003442  EC82  F017         	call	_setMotorPWM	;wreg free
  4730   003446                     
  4731                           ;dc_motor.c: 443:         for (i=0;i<straightRamp;i++) {
  4732   003446  0E00               	movlw	0
  4733   003448  6E29               	movwf	(fullSpeedAhead@i+1)^0,c
  4734   00344A  0E00               	movlw	0
  4735   00344C  6E28               	movwf	fullSpeedAhead@i^0,c
  4736   00344E  EF32  F01A         	goto	l588
  4737   003452                     l2521:
  4738                           
  4739                           ;dc_motor.c: 444:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4740   003452  0ED0               	movlw	208
  4741   003454  6E25               	movwf	??_fullSpeedAhead^0,c
  4742   003456  0ECA               	movlw	202
  4743   003458                     u3027:
  4744   003458  2EE8               	decfsz	wreg,f,c
  4745   00345A  D7FE               	bra	u3027
  4746   00345C  2E25               	decfsz	??_fullSpeedAhead^0,f,c
  4747   00345E  D7FC               	bra	u3027
  4748   003460                     
  4749                           ;dc_motor.c: 445:         }
  4750   003460  4A28               	infsnz	fullSpeedAhead@i^0,f,c
  4751   003462  2A29               	incf	(fullSpeedAhead@i+1)^0,f,c
  4752   003464                     l588:
  4753   003464  5024               	movf	fullSpeedAhead@straightRamp^0,w,c
  4754   003466  6E25               	movwf	??_fullSpeedAhead^0,c
  4755   003468  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  4756   00346A  5025               	movf	??_fullSpeedAhead^0,w,c
  4757   00346C  5C28               	subwf	fullSpeedAhead@i^0,w,c
  4758   00346E  5029               	movf	(fullSpeedAhead@i+1)^0,w,c
  4759   003470  0A80               	xorlw	128
  4760   003472  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  4761   003474  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  4762   003476  0A80               	xorlw	128
  4763   003478  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  4764   00347A  A0D8               	btfss	status,0,c
  4765   00347C  EF42  F01A         	goto	u1191
  4766   003480  EF44  F01A         	goto	u1190
  4767   003484                     u1191:
  4768   003484  EF29  F01A         	goto	l2521
  4769   003488                     u1190:
  4770   003488                     
  4771                           ;dc_motor.c: 446:     }
  4772   003488  4A2A               	infsnz	fullSpeedAhead@cur_power^0,f,c
  4773   00348A  2A2B               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  4774   00348C                     l2527:
  4775   00348C  5023               	movf	fullSpeedAhead@straightSpeed^0,w,c
  4776   00348E  6E25               	movwf	??_fullSpeedAhead^0,c
  4777   003490  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  4778   003492  502A               	movf	fullSpeedAhead@cur_power^0,w,c
  4779   003494  5C25               	subwf	??_fullSpeedAhead^0,w,c
  4780   003496  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  4781   003498  0A80               	xorlw	128
  4782   00349A  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  4783   00349C  502B               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  4784   00349E  0A80               	xorlw	128
  4785   0034A0  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  4786   0034A2  B0D8               	btfsc	status,0,c
  4787   0034A4  EF56  F01A         	goto	u1201
  4788   0034A8  EF58  F01A         	goto	u1200
  4789   0034AC                     u1201:
  4790   0034AC  EFFD  F019         	goto	l2513
  4791   0034B0                     u1200:
  4792   0034B0  0012               	return		;funcret
  4793   0034B2                     __end_of_fullSpeedAhead:
  4794                           	callstack 0
  4795                           
  4796 ;; *************** function _initUSART4 *****************
  4797 ;; Defined at:
  4798 ;;		line 4 in file "serial.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 5
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text10
  4827   003ADC                     __ptext10:
  4828                           	callstack 0
  4829   003ADC                     _initUSART4:
  4830                           	callstack 25
  4831   003ADC                     
  4832                           ;serial.c: 7:     RC0PPS = 0x12;
  4833   003ADC  0E12               	movlw	18
  4834   003ADE  010E               	movlb	14	; () banked
  4835   003AE0  6F62               	movwf	98,b	;volatile
  4836                           
  4837                           ;serial.c: 8:     RX4PPS = 0x11;
  4838   003AE2  0E11               	movlw	17
  4839   003AE4  6F15               	movwf	21,b	;volatile
  4840   003AE6                     
  4841                           ; BSR set to: 14
  4842                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  4843   003AE6  97E9               	bcf	233,3,b	;volatile
  4844   003AE8                     
  4845                           ; BSR set to: 14
  4846                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  4847   003AE8  95E8               	bcf	232,2,b	;volatile
  4848                           
  4849                           ;serial.c: 13:     SP4BRGL = 51;
  4850   003AEA  0E33               	movlw	51
  4851   003AEC  6FE5               	movwf	229,b	;volatile
  4852                           
  4853                           ;serial.c: 14:     SP4BRGH = 0;
  4854   003AEE  0E00               	movlw	0
  4855   003AF0  6FE6               	movwf	230,b	;volatile
  4856   003AF2                     
  4857                           ; BSR set to: 14
  4858                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  4859   003AF2  89E7               	bsf	231,4,b	;volatile
  4860   003AF4                     
  4861                           ; BSR set to: 14
  4862                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  4863   003AF4  8BE8               	bsf	232,5,b	;volatile
  4864   003AF6                     
  4865                           ; BSR set to: 14
  4866                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  4867   003AF6  8FE7               	bsf	231,7,b	;volatile
  4868   003AF8                     
  4869                           ; BSR set to: 14
  4870   003AF8  0012               	return		;funcret
  4871   003AFA                     __end_of_initUSART4:
  4872                           	callstack 0
  4873                           
  4874 ;; *************** function _initDCmotorsPWM *****************
  4875 ;; Defined at:
  4876 ;;		line 8 in file "dc_motor.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  PWMperiod       2   11[COMRAM] unsigned int 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;		None
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, status,2
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4894 ;;Total ram usage:        2 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; Hardware stack levels required when called: 5
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_main
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text11
  4905   003576                     __ptext11:
  4906                           	callstack 0
  4907   003576                     _initDCmotorsPWM:
  4908                           	callstack 25
  4909   003576                     
  4910                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  4911   003576  947D               	bcf	125,2,c	;volatile
  4912                           
  4913                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  4914   003578  9485               	bcf	133,2,c	;volatile
  4915                           
  4916                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  4917   00357A  987D               	bcf	125,4,c	;volatile
  4918                           
  4919                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  4920   00357C  9885               	bcf	133,4,c	;volatile
  4921                           
  4922                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  4923   00357E  9E7B               	bcf	123,7,c	;volatile
  4924                           
  4925                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  4926   003580  9E83               	bcf	131,7,c	;volatile
  4927                           
  4928                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  4929   003582  9C7F               	bcf	127,6,c	;volatile
  4930                           
  4931                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  4932   003584  9C87               	bcf	135,6,c	;volatile
  4933   003586                     
  4934                           ;dc_motor.c: 21:     RE2PPS=0x05;
  4935   003586  0E05               	movlw	5
  4936   003588  010E               	movlb	14	; () banked
  4937   00358A  6F74               	movwf	116,b	;volatile
  4938                           
  4939                           ;dc_motor.c: 22:     RE4PPS=0x06;
  4940   00358C  0E06               	movlw	6
  4941   00358E  6F76               	movwf	118,b	;volatile
  4942                           
  4943                           ;dc_motor.c: 23:     RC7PPS=0x07;
  4944   003590  0E07               	movlw	7
  4945   003592  6F69               	movwf	105,b	;volatile
  4946                           
  4947                           ;dc_motor.c: 24:     RG6PPS=0x08;
  4948   003594  0E08               	movlw	8
  4949   003596  6F88               	movwf	136,b	;volatile
  4950                           
  4951                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  4952   003598  50BD               	movf	189,w,c	;volatile
  4953   00359A  0B8F               	andlw	-113
  4954   00359C  0930               	iorlw	48
  4955   00359E  6EBD               	movwf	189,c	;volatile
  4956                           
  4957                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  4958   0035A0  0EE0               	movlw	-32
  4959   0035A2  16BE               	andwf	190,f,c	;volatile
  4960                           
  4961                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  4962   0035A4  50BF               	movf	191,w,c	;volatile
  4963   0035A6  0BF0               	andlw	-16
  4964   0035A8  0901               	iorlw	1
  4965   0035AA  6EBF               	movwf	191,c	;volatile
  4966   0035AC                     
  4967                           ; BSR set to: 14
  4968                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  4969   0035AC  C00C  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4970   0035B0                     
  4971                           ; BSR set to: 14
  4972                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  4973   0035B0  8EBD               	bsf	189,7,c	;volatile
  4974                           
  4975                           ;dc_motor.c: 38:     CCPR1H=0;
  4976   0035B2  0E00               	movlw	0
  4977   0035B4  6EAA               	movwf	170,c	;volatile
  4978                           
  4979                           ;dc_motor.c: 39:     CCPR2H=0;
  4980   0035B6  0E00               	movlw	0
  4981   0035B8  6EA6               	movwf	166,c	;volatile
  4982                           
  4983                           ;dc_motor.c: 40:     CCPR3H=0;
  4984   0035BA  0E00               	movlw	0
  4985   0035BC  010F               	movlb	15	; () banked
  4986   0035BE  6F25               	movwf	37,b	;volatile
  4987                           
  4988                           ;dc_motor.c: 41:     CCPR4H=0;
  4989   0035C0  0E00               	movlw	0
  4990   0035C2  6F21               	movwf	33,b	;volatile
  4991                           
  4992                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  4993   0035C4  0EFC               	movlw	-4
  4994   0035C6  16AD               	andwf	173,f,c	;volatile
  4995                           
  4996                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  4997   0035C8  0EF3               	movlw	-13
  4998   0035CA  16AD               	andwf	173,f,c	;volatile
  4999                           
  5000                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  5001   0035CC  0ECF               	movlw	-49
  5002   0035CE  16AD               	andwf	173,f,c	;volatile
  5003                           
  5004                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  5005   0035D0  0E3F               	movlw	-193
  5006   0035D2  16AD               	andwf	173,f,c	;volatile
  5007   0035D4                     
  5008                           ; BSR set to: 15
  5009                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  5010   0035D4  88AB               	bsf	171,4,c	;volatile
  5011                           
  5012                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  5013   0035D6  50AB               	movf	171,w,c	;volatile
  5014   0035D8  0BF0               	andlw	-16
  5015   0035DA  090C               	iorlw	12
  5016   0035DC  6EAB               	movwf	171,c	;volatile
  5017   0035DE                     
  5018                           ; BSR set to: 15
  5019                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  5020   0035DE  8EAB               	bsf	171,7,c	;volatile
  5021   0035E0                     
  5022                           ; BSR set to: 15
  5023                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  5024   0035E0  88A7               	bsf	167,4,c	;volatile
  5025                           
  5026                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  5027   0035E2  50A7               	movf	167,w,c	;volatile
  5028   0035E4  0BF0               	andlw	-16
  5029   0035E6  090C               	iorlw	12
  5030   0035E8  6EA7               	movwf	167,c	;volatile
  5031   0035EA                     
  5032                           ; BSR set to: 15
  5033                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  5034   0035EA  8EA7               	bsf	167,7,c	;volatile
  5035   0035EC                     
  5036                           ; BSR set to: 15
  5037                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  5038   0035EC  8926               	bsf	38,4,b	;volatile
  5039                           
  5040                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  5041   0035EE  5126               	movf	38,w,b	;volatile
  5042   0035F0  0BF0               	andlw	-16
  5043   0035F2  090C               	iorlw	12
  5044   0035F4  6F26               	movwf	38,b	;volatile
  5045   0035F6                     
  5046                           ; BSR set to: 15
  5047                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  5048   0035F6  8F26               	bsf	38,7,b	;volatile
  5049   0035F8                     
  5050                           ; BSR set to: 15
  5051                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  5052   0035F8  8922               	bsf	34,4,b	;volatile
  5053                           
  5054                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  5055   0035FA  5122               	movf	34,w,b	;volatile
  5056   0035FC  0BF0               	andlw	-16
  5057   0035FE  090C               	iorlw	12
  5058   003600  6F22               	movwf	34,b	;volatile
  5059   003602                     
  5060                           ; BSR set to: 15
  5061                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  5062   003602  8F22               	bsf	34,7,b	;volatile
  5063   003604                     
  5064                           ; BSR set to: 15
  5065   003604  0012               	return		;funcret
  5066   003606                     __end_of_initDCmotorsPWM:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function _color_read *****************
  5070 ;; Defined at:
  5071 ;;		line 72 in file "color.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  RGBC            2   15[COMRAM] PTR struct RGBC_val
  5074 ;;		 -> main@RGBC(8), 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;		None
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5088 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5089 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5090 ;;Total ram usage:        9 bytes
  5091 ;; Hardware stack levels used: 1
  5092 ;; Hardware stack levels required when called: 7
  5093 ;; This function calls:
  5094 ;;		_I2C_2_Master_Read
  5095 ;;		_I2C_2_Master_RepStart
  5096 ;;		_I2C_2_Master_Start
  5097 ;;		_I2C_2_Master_Stop
  5098 ;;		_I2C_2_Master_Write
  5099 ;; This function is called by:
  5100 ;;		_main
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text12
  5105   002788                     __ptext12:
  5106                           	callstack 0
  5107   002788                     _color_read:
  5108                           	callstack 23
  5109   002788                     
  5110                           ;color.c: 72: void color_read(RGBC_val *RGBC);color.c: 73: {;color.c: 74:  I2C_2_Master_
      +                          Start();
  5111   002788  ECC8  F01D         	call	_I2C_2_Master_Start	;wreg free
  5112                           
  5113                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  5114   00278C  0E52               	movlw	82
  5115   00278E  ECAD  F01D         	call	_I2C_2_Master_Write
  5116                           
  5117                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x16);
  5118   002792  0EB6               	movlw	182
  5119   002794  ECAD  F01D         	call	_I2C_2_Master_Write
  5120                           
  5121                           ;color.c: 77:  I2C_2_Master_RepStart();
  5122   002798  ECBE  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  5123                           
  5124                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  5125   00279C  0E53               	movlw	83
  5126   00279E  ECAD  F01D         	call	_I2C_2_Master_Write
  5127   0027A2                     
  5128                           ;color.c: 79:  RGBC->R=I2C_2_Master_Read(1);
  5129   0027A2  0E01               	movlw	1
  5130   0027A4  EC4A  F01C         	call	_I2C_2_Master_Read
  5131   0027A8  6E12               	movwf	??_color_read^0,c
  5132   0027AA  6A13               	clrf	(??_color_read+1)^0,c
  5133   0027AC  C010  FFD9         	movff	color_read@RGBC,fsr2l
  5134   0027B0  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  5135   0027B4  C012  FFDE         	movff	??_color_read,postinc2
  5136   0027B8  C013  FFDD         	movff	??_color_read+1,postdec2
  5137   0027BC                     
  5138                           ;color.c: 80:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  5139   0027BC  C010  FFD9         	movff	color_read@RGBC,fsr2l
  5140   0027C0  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  5141   0027C4  CFDE F012          	movff	postinc2,??_color_read
  5142   0027C8  CFDD F013          	movff	postdec2,??_color_read+1
  5143   0027CC  0E00               	movlw	0
  5144   0027CE  EC4A  F01C         	call	_I2C_2_Master_Read
  5145   0027D2  6E14               	movwf	(??_color_read+2)^0,c
  5146   0027D4  5014               	movf	(??_color_read+2)^0,w,c
  5147   0027D6  6E16               	movwf	(??_color_read+4)^0,c
  5148   0027D8  6A15               	clrf	(??_color_read+3)^0,c
  5149   0027DA  5012               	movf	??_color_read^0,w,c
  5150   0027DC  1015               	iorwf	(??_color_read+3)^0,w,c
  5151   0027DE  6E17               	movwf	(??_color_read+5)^0,c
  5152   0027E0  5013               	movf	(??_color_read+1)^0,w,c
  5153   0027E2  1016               	iorwf	(??_color_read+4)^0,w,c
  5154   0027E4  6E18               	movwf	(??_color_read+6)^0,c
  5155   0027E6  C010  FFD9         	movff	color_read@RGBC,fsr2l
  5156   0027EA  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  5157   0027EE  C017  FFDE         	movff	??_color_read+5,postinc2
  5158   0027F2  C018  FFDD         	movff	??_color_read+6,postdec2
  5159                           
  5160                           ;color.c: 81:  I2C_2_Master_Stop();
  5161   0027F6  ECC3  F01D         	call	_I2C_2_Master_Stop	;wreg free
  5162                           
  5163                           ;color.c: 83:     I2C_2_Master_Start();
  5164   0027FA  ECC8  F01D         	call	_I2C_2_Master_Start	;wreg free
  5165                           
  5166                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x00);
  5167   0027FE  0E52               	movlw	82
  5168   002800  ECAD  F01D         	call	_I2C_2_Master_Write
  5169                           
  5170                           ;color.c: 85:  I2C_2_Master_Write(0xA0 | 0x18);
  5171   002804  0EB8               	movlw	184
  5172   002806  ECAD  F01D         	call	_I2C_2_Master_Write
  5173                           
  5174                           ;color.c: 86:  I2C_2_Master_RepStart();
  5175   00280A  ECBE  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  5176                           
  5177                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x01);
  5178   00280E  0E53               	movlw	83
  5179   002810  ECAD  F01D         	call	_I2C_2_Master_Write
  5180   002814                     
  5181                           ;color.c: 88:  RGBC->G=I2C_2_Master_Read(1);
  5182   002814  0E01               	movlw	1
  5183   002816  EC4A  F01C         	call	_I2C_2_Master_Read
  5184   00281A  6E12               	movwf	??_color_read^0,c
  5185   00281C  6A13               	clrf	(??_color_read+1)^0,c
  5186   00281E  EE20 F002          	lfsr	2,2
  5187   002822  5010               	movf	color_read@RGBC^0,w,c
  5188   002824  26D9               	addwf	fsr2l,f,c
  5189   002826  5011               	movf	(color_read@RGBC+1)^0,w,c
  5190   002828  22DA               	addwfc	fsr2h,f,c
  5191   00282A  C012  FFDE         	movff	??_color_read,postinc2
  5192   00282E  C013  FFDD         	movff	??_color_read+1,postdec2
  5193   002832                     
  5194                           ;color.c: 89:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  5195   002832  EE20 F002          	lfsr	2,2
  5196   002836  5010               	movf	color_read@RGBC^0,w,c
  5197   002838  26D9               	addwf	fsr2l,f,c
  5198   00283A  5011               	movf	(color_read@RGBC+1)^0,w,c
  5199   00283C  22DA               	addwfc	fsr2h,f,c
  5200   00283E  CFDE F012          	movff	postinc2,??_color_read
  5201   002842  CFDD F013          	movff	postdec2,??_color_read+1
  5202   002846  0E00               	movlw	0
  5203   002848  EC4A  F01C         	call	_I2C_2_Master_Read
  5204   00284C  6E14               	movwf	(??_color_read+2)^0,c
  5205   00284E  5014               	movf	(??_color_read+2)^0,w,c
  5206   002850  6E16               	movwf	(??_color_read+4)^0,c
  5207   002852  6A15               	clrf	(??_color_read+3)^0,c
  5208   002854  5012               	movf	??_color_read^0,w,c
  5209   002856  1015               	iorwf	(??_color_read+3)^0,w,c
  5210   002858  6E17               	movwf	(??_color_read+5)^0,c
  5211   00285A  5013               	movf	(??_color_read+1)^0,w,c
  5212   00285C  1016               	iorwf	(??_color_read+4)^0,w,c
  5213   00285E  6E18               	movwf	(??_color_read+6)^0,c
  5214   002860  EE20 F002          	lfsr	2,2
  5215   002864  5010               	movf	color_read@RGBC^0,w,c
  5216   002866  26D9               	addwf	fsr2l,f,c
  5217   002868  5011               	movf	(color_read@RGBC+1)^0,w,c
  5218   00286A  22DA               	addwfc	fsr2h,f,c
  5219   00286C  C017  FFDE         	movff	??_color_read+5,postinc2
  5220   002870  C018  FFDD         	movff	??_color_read+6,postdec2
  5221                           
  5222                           ;color.c: 90:  I2C_2_Master_Stop();
  5223   002874  ECC3  F01D         	call	_I2C_2_Master_Stop	;wreg free
  5224                           
  5225                           ;color.c: 92:     I2C_2_Master_Start();
  5226   002878  ECC8  F01D         	call	_I2C_2_Master_Start	;wreg free
  5227                           
  5228                           ;color.c: 93:  I2C_2_Master_Write(0x52 | 0x00);
  5229   00287C  0E52               	movlw	82
  5230   00287E  ECAD  F01D         	call	_I2C_2_Master_Write
  5231                           
  5232                           ;color.c: 94:  I2C_2_Master_Write(0xA0 | 0x1A);
  5233   002882  0EBA               	movlw	186
  5234   002884  ECAD  F01D         	call	_I2C_2_Master_Write
  5235                           
  5236                           ;color.c: 95:  I2C_2_Master_RepStart();
  5237   002888  ECBE  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  5238                           
  5239                           ;color.c: 96:  I2C_2_Master_Write(0x52 | 0x01);
  5240   00288C  0E53               	movlw	83
  5241   00288E  ECAD  F01D         	call	_I2C_2_Master_Write
  5242   002892                     
  5243                           ;color.c: 97:  RGBC->B=I2C_2_Master_Read(1);
  5244   002892  0E01               	movlw	1
  5245   002894  EC4A  F01C         	call	_I2C_2_Master_Read
  5246   002898  6E12               	movwf	??_color_read^0,c
  5247   00289A  6A13               	clrf	(??_color_read+1)^0,c
  5248   00289C  EE20 F004          	lfsr	2,4
  5249   0028A0  5010               	movf	color_read@RGBC^0,w,c
  5250   0028A2  26D9               	addwf	fsr2l,f,c
  5251   0028A4  5011               	movf	(color_read@RGBC+1)^0,w,c
  5252   0028A6  22DA               	addwfc	fsr2h,f,c
  5253   0028A8  C012  FFDE         	movff	??_color_read,postinc2
  5254   0028AC  C013  FFDD         	movff	??_color_read+1,postdec2
  5255   0028B0                     
  5256                           ;color.c: 98:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  5257   0028B0  EE20 F004          	lfsr	2,4
  5258   0028B4  5010               	movf	color_read@RGBC^0,w,c
  5259   0028B6  26D9               	addwf	fsr2l,f,c
  5260   0028B8  5011               	movf	(color_read@RGBC+1)^0,w,c
  5261   0028BA  22DA               	addwfc	fsr2h,f,c
  5262   0028BC  CFDE F012          	movff	postinc2,??_color_read
  5263   0028C0  CFDD F013          	movff	postdec2,??_color_read+1
  5264   0028C4  0E00               	movlw	0
  5265   0028C6  EC4A  F01C         	call	_I2C_2_Master_Read
  5266   0028CA  6E14               	movwf	(??_color_read+2)^0,c
  5267   0028CC  5014               	movf	(??_color_read+2)^0,w,c
  5268   0028CE  6E16               	movwf	(??_color_read+4)^0,c
  5269   0028D0  6A15               	clrf	(??_color_read+3)^0,c
  5270   0028D2  5012               	movf	??_color_read^0,w,c
  5271   0028D4  1015               	iorwf	(??_color_read+3)^0,w,c
  5272   0028D6  6E17               	movwf	(??_color_read+5)^0,c
  5273   0028D8  5013               	movf	(??_color_read+1)^0,w,c
  5274   0028DA  1016               	iorwf	(??_color_read+4)^0,w,c
  5275   0028DC  6E18               	movwf	(??_color_read+6)^0,c
  5276   0028DE  EE20 F004          	lfsr	2,4
  5277   0028E2  5010               	movf	color_read@RGBC^0,w,c
  5278   0028E4  26D9               	addwf	fsr2l,f,c
  5279   0028E6  5011               	movf	(color_read@RGBC+1)^0,w,c
  5280   0028E8  22DA               	addwfc	fsr2h,f,c
  5281   0028EA  C017  FFDE         	movff	??_color_read+5,postinc2
  5282   0028EE  C018  FFDD         	movff	??_color_read+6,postdec2
  5283                           
  5284                           ;color.c: 99:  I2C_2_Master_Stop();
  5285   0028F2  ECC3  F01D         	call	_I2C_2_Master_Stop	;wreg free
  5286                           
  5287                           ;color.c: 101:     I2C_2_Master_Start();
  5288   0028F6  ECC8  F01D         	call	_I2C_2_Master_Start	;wreg free
  5289                           
  5290                           ;color.c: 102:  I2C_2_Master_Write(0x52 | 0x00);
  5291   0028FA  0E52               	movlw	82
  5292   0028FC  ECAD  F01D         	call	_I2C_2_Master_Write
  5293                           
  5294                           ;color.c: 103:  I2C_2_Master_Write(0xA0 | 0x14);
  5295   002900  0EB4               	movlw	180
  5296   002902  ECAD  F01D         	call	_I2C_2_Master_Write
  5297                           
  5298                           ;color.c: 104:  I2C_2_Master_RepStart();
  5299   002906  ECBE  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  5300                           
  5301                           ;color.c: 105:  I2C_2_Master_Write(0x52 | 0x01);
  5302   00290A  0E53               	movlw	83
  5303   00290C  ECAD  F01D         	call	_I2C_2_Master_Write
  5304   002910                     
  5305                           ;color.c: 106:  RGBC->C=I2C_2_Master_Read(1);
  5306   002910  0E01               	movlw	1
  5307   002912  EC4A  F01C         	call	_I2C_2_Master_Read
  5308   002916  6E12               	movwf	??_color_read^0,c
  5309   002918  6A13               	clrf	(??_color_read+1)^0,c
  5310   00291A  EE20 F006          	lfsr	2,6
  5311   00291E  5010               	movf	color_read@RGBC^0,w,c
  5312   002920  26D9               	addwf	fsr2l,f,c
  5313   002922  5011               	movf	(color_read@RGBC+1)^0,w,c
  5314   002924  22DA               	addwfc	fsr2h,f,c
  5315   002926  C012  FFDE         	movff	??_color_read,postinc2
  5316   00292A  C013  FFDD         	movff	??_color_read+1,postdec2
  5317   00292E                     
  5318                           ;color.c: 107:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  5319   00292E  EE20 F006          	lfsr	2,6
  5320   002932  5010               	movf	color_read@RGBC^0,w,c
  5321   002934  26D9               	addwf	fsr2l,f,c
  5322   002936  5011               	movf	(color_read@RGBC+1)^0,w,c
  5323   002938  22DA               	addwfc	fsr2h,f,c
  5324   00293A  CFDE F012          	movff	postinc2,??_color_read
  5325   00293E  CFDD F013          	movff	postdec2,??_color_read+1
  5326   002942  0E00               	movlw	0
  5327   002944  EC4A  F01C         	call	_I2C_2_Master_Read
  5328   002948  6E14               	movwf	(??_color_read+2)^0,c
  5329   00294A  5014               	movf	(??_color_read+2)^0,w,c
  5330   00294C  6E16               	movwf	(??_color_read+4)^0,c
  5331   00294E  6A15               	clrf	(??_color_read+3)^0,c
  5332   002950  5012               	movf	??_color_read^0,w,c
  5333   002952  1015               	iorwf	(??_color_read+3)^0,w,c
  5334   002954  6E17               	movwf	(??_color_read+5)^0,c
  5335   002956  5013               	movf	(??_color_read+1)^0,w,c
  5336   002958  1016               	iorwf	(??_color_read+4)^0,w,c
  5337   00295A  6E18               	movwf	(??_color_read+6)^0,c
  5338   00295C  EE20 F006          	lfsr	2,6
  5339   002960  5010               	movf	color_read@RGBC^0,w,c
  5340   002962  26D9               	addwf	fsr2l,f,c
  5341   002964  5011               	movf	(color_read@RGBC+1)^0,w,c
  5342   002966  22DA               	addwfc	fsr2h,f,c
  5343   002968  C017  FFDE         	movff	??_color_read+5,postinc2
  5344   00296C  C018  FFDD         	movff	??_color_read+6,postdec2
  5345                           
  5346                           ;color.c: 108:  I2C_2_Master_Stop();
  5347   002970  ECC3  F01D         	call	_I2C_2_Master_Stop	;wreg free
  5348   002974  0012               	return		;funcret
  5349   002976                     __end_of_color_read:
  5350                           	callstack 0
  5351                           
  5352 ;; *************** function _I2C_2_Master_RepStart *****************
  5353 ;; Defined at:
  5354 ;;		line 33 in file "i2c.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5372 ;;Total ram usage:        0 bytes
  5373 ;; Hardware stack levels used: 1
  5374 ;; Hardware stack levels required when called: 6
  5375 ;; This function calls:
  5376 ;;		_I2C_2_Master_Idle
  5377 ;; This function is called by:
  5378 ;;		_color_read
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text13
  5383   003B7C                     __ptext13:
  5384                           	callstack 0
  5385   003B7C                     _I2C_2_Master_RepStart:
  5386                           	callstack 23
  5387   003B7C                     
  5388                           ;i2c.c: 35:   I2C_2_Master_Idle();
  5389   003B7C  ECCB  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5390   003B80                     
  5391                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5392   003B80  010E               	movlb	14	; () banked
  5393   003B82  83DA               	bsf	218,1,b	;volatile
  5394   003B84                     
  5395                           ; BSR set to: 14
  5396   003B84  0012               	return		;funcret
  5397   003B86                     __end_of_I2C_2_Master_RepStart:
  5398                           	callstack 0
  5399                           
  5400 ;; *************** function _I2C_2_Master_Read *****************
  5401 ;; Defined at:
  5402 ;;		line 51 in file "i2c.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  ack             1    wreg     unsigned char 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  ack             1   13[COMRAM] unsigned char 
  5407 ;;  tmp             1   14[COMRAM] unsigned char 
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      unsigned char 
  5410 ;; Registers used:
  5411 ;;		wreg, status,2, status,0, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5418 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5420 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5421 ;;Total ram usage:        3 bytes
  5422 ;; Hardware stack levels used: 1
  5423 ;; Hardware stack levels required when called: 6
  5424 ;; This function calls:
  5425 ;;		_I2C_2_Master_Idle
  5426 ;; This function is called by:
  5427 ;;		_color_read
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           	psect	text14
  5432   003894                     __ptext14:
  5433                           	callstack 0
  5434   003894                     _I2C_2_Master_Read:
  5435                           	callstack 23
  5436                           
  5437                           ; BSR set to: 14
  5438                           ;incstack = 0
  5439                           ;I2C_2_Master_Read@ack stored from wreg
  5440   003894  6E0E               	movwf	I2C_2_Master_Read@ack^0,c
  5441   003896                     
  5442                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  5443   003896  ECCB  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5444   00389A                     
  5445                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5446   00389A  010E               	movlb	14	; () banked
  5447   00389C  87DA               	bsf	218,3,b	;volatile
  5448                           
  5449                           ;i2c.c: 56:   I2C_2_Master_Idle();
  5450   00389E  ECCB  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5451   0038A2                     
  5452                           ;i2c.c: 57:   tmp = SSP2BUF;
  5453   0038A2  CED5 F00F          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5454                           
  5455                           ;i2c.c: 58:   I2C_2_Master_Idle();
  5456   0038A6  ECCB  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5457   0038AA                     
  5458                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5459   0038AA  500E               	movf	I2C_2_Master_Read@ack^0,w,c
  5460   0038AC  B4D8               	btfsc	status,2,c
  5461   0038AE  EF5B  F01C         	goto	u1381
  5462   0038B2  EF5F  F01C         	goto	u1380
  5463   0038B6                     u1381:
  5464   0038B6  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  5465   0038B8  2A0D               	incf	??_I2C_2_Master_Read^0,f,c
  5466   0038BA  EF60  F01C         	goto	u1398
  5467   0038BE                     u1380:
  5468   0038BE  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  5469   0038C0                     u1398:
  5470   0038C0  3A0D               	swapf	??_I2C_2_Master_Read^0,f,c
  5471   0038C2  460D               	rlncf	??_I2C_2_Master_Read^0,f,c
  5472   0038C4  010E               	movlb	14	; () banked
  5473   0038C6  51DA               	movf	218,w,b	;volatile
  5474   0038C8  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  5475   0038CA  0BDF               	andlw	-33
  5476   0038CC  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  5477   0038CE  6FDA               	movwf	218,b	;volatile
  5478   0038D0                     
  5479                           ; BSR set to: 14
  5480                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5481   0038D0  89DA               	bsf	218,4,b	;volatile
  5482   0038D2                     
  5483                           ; BSR set to: 14
  5484                           ;i2c.c: 61:   return tmp;
  5485   0038D2  500F               	movf	I2C_2_Master_Read@tmp^0,w,c
  5486   0038D4                     
  5487                           ; BSR set to: 14
  5488   0038D4  0012               	return		;funcret
  5489   0038D6                     __end_of_I2C_2_Master_Read:
  5490                           	callstack 0
  5491                           
  5492 ;; *************** function _color_normalise *****************
  5493 ;; Defined at:
  5494 ;;		line 112 in file "color.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  RGBC            8   37[COMRAM] struct RGBC_val
  5497 ;;  RGBC_n          2   45[COMRAM] PTR struct RGBC_val
  5498 ;;		 -> main@RGBC_n(8), 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;		None
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5510 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5512 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5513 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5514 ;;Total ram usage:       12 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; Hardware stack levels required when called: 6
  5517 ;; This function calls:
  5518 ;;		___aldiv
  5519 ;;		___lmul
  5520 ;; This function is called by:
  5521 ;;		_main
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text15
  5526   003070                     __ptext15:
  5527                           	callstack 0
  5528   003070                     _color_normalise:
  5529                           	callstack 24
  5530   003070                     
  5531                           ;color.c: 130:     RGBC_n->C = RGBC.C;
  5532   003070  EE20 F006          	lfsr	2,6
  5533   003074  502E               	movf	color_normalise@RGBC_n^0,w,c
  5534   003076  26D9               	addwf	fsr2l,f,c
  5535   003078  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  5536   00307A  22DA               	addwfc	fsr2h,f,c
  5537   00307C  C02C  FFDE         	movff	color_normalise@RGBC+6,postinc2
  5538   003080  C02D  FFDD         	movff	color_normalise@RGBC+7,postdec2
  5539   003084                     
  5540                           ;color.c: 131:     RGBC_n->R = 1000L*RGBC.R/(RGBC.R+RGBC.G+RGBC.B);
  5541   003084  C026  F00C         	movff	color_normalise@RGBC,___lmul@multiplier
  5542   003088  C027  F00D         	movff	color_normalise@RGBC+1,___lmul@multiplier+1
  5543   00308C  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  5544   00308E  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  5545   003090  0EE8               	movlw	232
  5546   003092  6E10               	movwf	___lmul@multiplicand^0,c
  5547   003094  0E03               	movlw	3
  5548   003096  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  5549   003098  0E00               	movlw	0
  5550   00309A  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  5551   00309C  0E00               	movlw	0
  5552   00309E  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  5553   0030A0  ECEE  F01B         	call	___lmul	;wreg free
  5554   0030A4  C00C  F018         	movff	?___lmul,___aldiv@dividend
  5555   0030A8  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  5556   0030AC  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  5557   0030B0  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  5558   0030B4  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  5559   0030B6  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  5560   0030B8  6E30               	movwf	??_color_normalise^0,c
  5561   0030BA  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  5562   0030BC  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  5563   0030BE  6E31               	movwf	(??_color_normalise+1)^0,c
  5564   0030C0  5026               	movf	color_normalise@RGBC^0,w,c
  5565   0030C2  2630               	addwf	??_color_normalise^0,f,c
  5566   0030C4  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  5567   0030C6  2231               	addwfc	(??_color_normalise+1)^0,f,c
  5568   0030C8  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  5569   0030CC  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  5570   0030D0  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  5571   0030D2  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  5572   0030D4  ECDD  F018         	call	___aldiv	;wreg free
  5573   0030D8  C02E  FFD9         	movff	color_normalise@RGBC_n,fsr2l
  5574   0030DC  C02F  FFDA         	movff	color_normalise@RGBC_n+1,fsr2h
  5575   0030E0  C018  FFDE         	movff	?___aldiv,postinc2
  5576   0030E4  C019  FFDD         	movff	?___aldiv+1,postdec2
  5577   0030E8                     
  5578                           ;color.c: 132:     RGBC_n->G = 1000L*RGBC.G/(RGBC.R+RGBC.G+RGBC.B);
  5579   0030E8  C028  F00C         	movff	color_normalise@RGBC+2,___lmul@multiplier
  5580   0030EC  C029  F00D         	movff	color_normalise@RGBC+3,___lmul@multiplier+1
  5581   0030F0  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  5582   0030F2  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  5583   0030F4  0EE8               	movlw	232
  5584   0030F6  6E10               	movwf	___lmul@multiplicand^0,c
  5585   0030F8  0E03               	movlw	3
  5586   0030FA  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  5587   0030FC  0E00               	movlw	0
  5588   0030FE  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  5589   003100  0E00               	movlw	0
  5590   003102  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  5591   003104  ECEE  F01B         	call	___lmul	;wreg free
  5592   003108  C00C  F018         	movff	?___lmul,___aldiv@dividend
  5593   00310C  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  5594   003110  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  5595   003114  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  5596   003118  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  5597   00311A  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  5598   00311C  6E30               	movwf	??_color_normalise^0,c
  5599   00311E  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  5600   003120  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  5601   003122  6E31               	movwf	(??_color_normalise+1)^0,c
  5602   003124  5026               	movf	color_normalise@RGBC^0,w,c
  5603   003126  2630               	addwf	??_color_normalise^0,f,c
  5604   003128  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  5605   00312A  2231               	addwfc	(??_color_normalise+1)^0,f,c
  5606   00312C  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  5607   003130  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  5608   003134  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  5609   003136  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  5610   003138  ECDD  F018         	call	___aldiv	;wreg free
  5611   00313C  EE20 F002          	lfsr	2,2
  5612   003140  502E               	movf	color_normalise@RGBC_n^0,w,c
  5613   003142  26D9               	addwf	fsr2l,f,c
  5614   003144  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  5615   003146  22DA               	addwfc	fsr2h,f,c
  5616   003148  C018  FFDE         	movff	?___aldiv,postinc2
  5617   00314C  C019  FFDD         	movff	?___aldiv+1,postdec2
  5618   003150                     
  5619                           ;color.c: 133:     RGBC_n->B = 1000L*RGBC.B/(RGBC.R+RGBC.G+RGBC.B);
  5620   003150  C02A  F00C         	movff	color_normalise@RGBC+4,___lmul@multiplier
  5621   003154  C02B  F00D         	movff	color_normalise@RGBC+5,___lmul@multiplier+1
  5622   003158  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  5623   00315A  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  5624   00315C  0EE8               	movlw	232
  5625   00315E  6E10               	movwf	___lmul@multiplicand^0,c
  5626   003160  0E03               	movlw	3
  5627   003162  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  5628   003164  0E00               	movlw	0
  5629   003166  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  5630   003168  0E00               	movlw	0
  5631   00316A  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  5632   00316C  ECEE  F01B         	call	___lmul	;wreg free
  5633   003170  C00C  F018         	movff	?___lmul,___aldiv@dividend
  5634   003174  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  5635   003178  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  5636   00317C  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  5637   003180  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  5638   003182  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  5639   003184  6E30               	movwf	??_color_normalise^0,c
  5640   003186  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  5641   003188  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  5642   00318A  6E31               	movwf	(??_color_normalise+1)^0,c
  5643   00318C  5026               	movf	color_normalise@RGBC^0,w,c
  5644   00318E  2630               	addwf	??_color_normalise^0,f,c
  5645   003190  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  5646   003192  2231               	addwfc	(??_color_normalise+1)^0,f,c
  5647   003194  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  5648   003198  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  5649   00319C  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  5650   00319E  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  5651   0031A0  ECDD  F018         	call	___aldiv	;wreg free
  5652   0031A4  EE20 F004          	lfsr	2,4
  5653   0031A8  502E               	movf	color_normalise@RGBC_n^0,w,c
  5654   0031AA  26D9               	addwf	fsr2l,f,c
  5655   0031AC  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  5656   0031AE  22DA               	addwfc	fsr2h,f,c
  5657   0031B0  C018  FFDE         	movff	?___aldiv,postinc2
  5658   0031B4  C019  FFDD         	movff	?___aldiv+1,postdec2
  5659   0031B8  0012               	return		;funcret
  5660   0031BA                     __end_of_color_normalise:
  5661                           	callstack 0
  5662                           
  5663 ;; *************** function ___lmul *****************
  5664 ;; Defined at:
  5665 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  multiplier      4   11[COMRAM] unsigned long 
  5668 ;;  multiplicand    4   15[COMRAM] unsigned long 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  product         4   19[COMRAM] unsigned long 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  4   11[COMRAM] unsigned long 
  5673 ;; Registers used:
  5674 ;;		wreg, status,2, status,0
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5680 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5681 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5683 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5684 ;;Total ram usage:       12 bytes
  5685 ;; Hardware stack levels used: 1
  5686 ;; Hardware stack levels required when called: 5
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_color_normalise
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text16
  5695   0037DC                     __ptext16:
  5696                           	callstack 0
  5697   0037DC                     ___lmul:
  5698                           	callstack 24
  5699   0037DC  0E00               	movlw	0
  5700   0037DE  6E14               	movwf	___lmul@product^0,c
  5701   0037E0  0E00               	movlw	0
  5702   0037E2  6E15               	movwf	(___lmul@product+1)^0,c
  5703   0037E4  0E00               	movlw	0
  5704   0037E6  6E16               	movwf	(___lmul@product+2)^0,c
  5705   0037E8  0E00               	movlw	0
  5706   0037EA  6E17               	movwf	(___lmul@product+3)^0,c
  5707   0037EC                     l2893:
  5708   0037EC  A00C               	btfss	___lmul@multiplier^0,0,c
  5709   0037EE  EFFB  F01B         	goto	u1511
  5710   0037F2  EFFD  F01B         	goto	u1510
  5711   0037F6                     u1511:
  5712   0037F6  EF05  F01C         	goto	l2897
  5713   0037FA                     u1510:
  5714   0037FA  5010               	movf	___lmul@multiplicand^0,w,c
  5715   0037FC  2614               	addwf	___lmul@product^0,f,c
  5716   0037FE  5011               	movf	(___lmul@multiplicand+1)^0,w,c
  5717   003800  2215               	addwfc	(___lmul@product+1)^0,f,c
  5718   003802  5012               	movf	(___lmul@multiplicand+2)^0,w,c
  5719   003804  2216               	addwfc	(___lmul@product+2)^0,f,c
  5720   003806  5013               	movf	(___lmul@multiplicand+3)^0,w,c
  5721   003808  2217               	addwfc	(___lmul@product+3)^0,f,c
  5722   00380A                     l2897:
  5723   00380A  90D8               	bcf	status,0,c
  5724   00380C  3610               	rlcf	___lmul@multiplicand^0,f,c
  5725   00380E  3611               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5726   003810  3612               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5727   003812  3613               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5728   003814  90D8               	bcf	status,0,c
  5729   003816  320F               	rrcf	(___lmul@multiplier+3)^0,f,c
  5730   003818  320E               	rrcf	(___lmul@multiplier+2)^0,f,c
  5731   00381A  320D               	rrcf	(___lmul@multiplier+1)^0,f,c
  5732   00381C  320C               	rrcf	___lmul@multiplier^0,f,c
  5733   00381E  500C               	movf	___lmul@multiplier^0,w,c
  5734   003820  100D               	iorwf	(___lmul@multiplier+1)^0,w,c
  5735   003822  100E               	iorwf	(___lmul@multiplier+2)^0,w,c
  5736   003824  100F               	iorwf	(___lmul@multiplier+3)^0,w,c
  5737   003826  A4D8               	btfss	status,2,c
  5738   003828  EF18  F01C         	goto	u1521
  5739   00382C  EF1A  F01C         	goto	u1520
  5740   003830                     u1521:
  5741   003830  EFF6  F01B         	goto	l2893
  5742   003834                     u1520:
  5743   003834  C014  F00C         	movff	___lmul@product,?___lmul
  5744   003838  C015  F00D         	movff	___lmul@product+1,?___lmul+1
  5745   00383C  C016  F00E         	movff	___lmul@product+2,?___lmul+2
  5746   003840  C017  F00F         	movff	___lmul@product+3,?___lmul+3
  5747   003844  0012               	return		;funcret
  5748   003846                     __end_of___lmul:
  5749                           	callstack 0
  5750                           
  5751 ;; *************** function ___aldiv *****************
  5752 ;; Defined at:
  5753 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  dividend        4   23[COMRAM] long 
  5756 ;;  divisor         4   27[COMRAM] long 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  quotient        4   33[COMRAM] long 
  5759 ;;  sign            1   32[COMRAM] unsigned char 
  5760 ;;  counter         1   31[COMRAM] unsigned char 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  4   23[COMRAM] long 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5770 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5771 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5773 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5774 ;;Total ram usage:       14 bytes
  5775 ;; Hardware stack levels used: 1
  5776 ;; Hardware stack levels required when called: 5
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		_color_normalise
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text17
  5785   0031BA                     __ptext17:
  5786                           	callstack 0
  5787   0031BA                     ___aldiv:
  5788                           	callstack 24
  5789   0031BA  0E00               	movlw	0
  5790   0031BC  6E21               	movwf	___aldiv@sign^0,c
  5791   0031BE  BE1F               	btfsc	(___aldiv@divisor+3)^0,7,c
  5792   0031C0  EFE6  F018         	goto	u1530
  5793   0031C4  EFE4  F018         	goto	u1531
  5794   0031C8                     u1531:
  5795   0031C8  EFF0  F018         	goto	l2909
  5796   0031CC                     u1530:
  5797   0031CC  1E1F               	comf	(___aldiv@divisor+3)^0,f,c
  5798   0031CE  1E1E               	comf	(___aldiv@divisor+2)^0,f,c
  5799   0031D0  1E1D               	comf	(___aldiv@divisor+1)^0,f,c
  5800   0031D2  6C1C               	negf	___aldiv@divisor^0,c
  5801   0031D4  0E00               	movlw	0
  5802   0031D6  221D               	addwfc	(___aldiv@divisor+1)^0,f,c
  5803   0031D8  221E               	addwfc	(___aldiv@divisor+2)^0,f,c
  5804   0031DA  221F               	addwfc	(___aldiv@divisor+3)^0,f,c
  5805   0031DC  0E01               	movlw	1
  5806   0031DE  6E21               	movwf	___aldiv@sign^0,c
  5807   0031E0                     l2909:
  5808   0031E0  BE1B               	btfsc	(___aldiv@dividend+3)^0,7,c
  5809   0031E2  EFF7  F018         	goto	u1540
  5810   0031E6  EFF5  F018         	goto	u1541
  5811   0031EA                     u1541:
  5812   0031EA  EF01  F019         	goto	l2915
  5813   0031EE                     u1540:
  5814   0031EE  1E1B               	comf	(___aldiv@dividend+3)^0,f,c
  5815   0031F0  1E1A               	comf	(___aldiv@dividend+2)^0,f,c
  5816   0031F2  1E19               	comf	(___aldiv@dividend+1)^0,f,c
  5817   0031F4  6C18               	negf	___aldiv@dividend^0,c
  5818   0031F6  0E00               	movlw	0
  5819   0031F8  2219               	addwfc	(___aldiv@dividend+1)^0,f,c
  5820   0031FA  221A               	addwfc	(___aldiv@dividend+2)^0,f,c
  5821   0031FC  221B               	addwfc	(___aldiv@dividend+3)^0,f,c
  5822   0031FE  0E01               	movlw	1
  5823   003200  1A21               	xorwf	___aldiv@sign^0,f,c
  5824   003202                     l2915:
  5825   003202  0E00               	movlw	0
  5826   003204  6E22               	movwf	___aldiv@quotient^0,c
  5827   003206  0E00               	movlw	0
  5828   003208  6E23               	movwf	(___aldiv@quotient+1)^0,c
  5829   00320A  0E00               	movlw	0
  5830   00320C  6E24               	movwf	(___aldiv@quotient+2)^0,c
  5831   00320E  0E00               	movlw	0
  5832   003210  6E25               	movwf	(___aldiv@quotient+3)^0,c
  5833   003212  501C               	movf	___aldiv@divisor^0,w,c
  5834   003214  101D               	iorwf	(___aldiv@divisor+1)^0,w,c
  5835   003216  101E               	iorwf	(___aldiv@divisor+2)^0,w,c
  5836   003218  101F               	iorwf	(___aldiv@divisor+3)^0,w,c
  5837   00321A  B4D8               	btfsc	status,2,c
  5838   00321C  EF12  F019         	goto	u1551
  5839   003220  EF14  F019         	goto	u1550
  5840   003224                     u1551:
  5841   003224  EF4A  F019         	goto	l2937
  5842   003228                     u1550:
  5843   003228  0E01               	movlw	1
  5844   00322A  6E20               	movwf	___aldiv@counter^0,c
  5845   00322C  EF1E  F019         	goto	l2923
  5846   003230                     l2921:
  5847   003230  90D8               	bcf	status,0,c
  5848   003232  361C               	rlcf	___aldiv@divisor^0,f,c
  5849   003234  361D               	rlcf	(___aldiv@divisor+1)^0,f,c
  5850   003236  361E               	rlcf	(___aldiv@divisor+2)^0,f,c
  5851   003238  361F               	rlcf	(___aldiv@divisor+3)^0,f,c
  5852   00323A  2A20               	incf	___aldiv@counter^0,f,c
  5853   00323C                     l2923:
  5854   00323C  AE1F               	btfss	(___aldiv@divisor+3)^0,7,c
  5855   00323E  EF23  F019         	goto	u1561
  5856   003242  EF25  F019         	goto	u1560
  5857   003246                     u1561:
  5858   003246  EF18  F019         	goto	l2921
  5859   00324A                     u1560:
  5860   00324A                     l2925:
  5861   00324A  90D8               	bcf	status,0,c
  5862   00324C  3622               	rlcf	___aldiv@quotient^0,f,c
  5863   00324E  3623               	rlcf	(___aldiv@quotient+1)^0,f,c
  5864   003250  3624               	rlcf	(___aldiv@quotient+2)^0,f,c
  5865   003252  3625               	rlcf	(___aldiv@quotient+3)^0,f,c
  5866   003254  501C               	movf	___aldiv@divisor^0,w,c
  5867   003256  5C18               	subwf	___aldiv@dividend^0,w,c
  5868   003258  501D               	movf	(___aldiv@divisor+1)^0,w,c
  5869   00325A  5819               	subwfb	(___aldiv@dividend+1)^0,w,c
  5870   00325C  501E               	movf	(___aldiv@divisor+2)^0,w,c
  5871   00325E  581A               	subwfb	(___aldiv@dividend+2)^0,w,c
  5872   003260  501F               	movf	(___aldiv@divisor+3)^0,w,c
  5873   003262  581B               	subwfb	(___aldiv@dividend+3)^0,w,c
  5874   003264  A0D8               	btfss	status,0,c
  5875   003266  EF37  F019         	goto	u1571
  5876   00326A  EF39  F019         	goto	u1570
  5877   00326E                     u1571:
  5878   00326E  EF42  F019         	goto	l2933
  5879   003272                     u1570:
  5880   003272  501C               	movf	___aldiv@divisor^0,w,c
  5881   003274  5E18               	subwf	___aldiv@dividend^0,f,c
  5882   003276  501D               	movf	(___aldiv@divisor+1)^0,w,c
  5883   003278  5A19               	subwfb	(___aldiv@dividend+1)^0,f,c
  5884   00327A  501E               	movf	(___aldiv@divisor+2)^0,w,c
  5885   00327C  5A1A               	subwfb	(___aldiv@dividend+2)^0,f,c
  5886   00327E  501F               	movf	(___aldiv@divisor+3)^0,w,c
  5887   003280  5A1B               	subwfb	(___aldiv@dividend+3)^0,f,c
  5888   003282  8022               	bsf	___aldiv@quotient^0,0,c
  5889   003284                     l2933:
  5890   003284  90D8               	bcf	status,0,c
  5891   003286  321F               	rrcf	(___aldiv@divisor+3)^0,f,c
  5892   003288  321E               	rrcf	(___aldiv@divisor+2)^0,f,c
  5893   00328A  321D               	rrcf	(___aldiv@divisor+1)^0,f,c
  5894   00328C  321C               	rrcf	___aldiv@divisor^0,f,c
  5895   00328E  2E20               	decfsz	___aldiv@counter^0,f,c
  5896   003290  EF25  F019         	goto	l2925
  5897   003294                     l2937:
  5898   003294  5021               	movf	___aldiv@sign^0,w,c
  5899   003296  B4D8               	btfsc	status,2,c
  5900   003298  EF50  F019         	goto	u1581
  5901   00329C  EF52  F019         	goto	u1580
  5902   0032A0                     u1581:
  5903   0032A0  EF5A  F019         	goto	l2941
  5904   0032A4                     u1580:
  5905   0032A4  1E25               	comf	(___aldiv@quotient+3)^0,f,c
  5906   0032A6  1E24               	comf	(___aldiv@quotient+2)^0,f,c
  5907   0032A8  1E23               	comf	(___aldiv@quotient+1)^0,f,c
  5908   0032AA  6C22               	negf	___aldiv@quotient^0,c
  5909   0032AC  0E00               	movlw	0
  5910   0032AE  2223               	addwfc	(___aldiv@quotient+1)^0,f,c
  5911   0032B0  2224               	addwfc	(___aldiv@quotient+2)^0,f,c
  5912   0032B2  2225               	addwfc	(___aldiv@quotient+3)^0,f,c
  5913   0032B4                     l2941:
  5914   0032B4  C022  F018         	movff	___aldiv@quotient,?___aldiv
  5915   0032B8  C023  F019         	movff	___aldiv@quotient+1,?___aldiv+1
  5916   0032BC  C024  F01A         	movff	___aldiv@quotient+2,?___aldiv+2
  5917   0032C0  C025  F01B         	movff	___aldiv@quotient+3,?___aldiv+3
  5918   0032C4  0012               	return		;funcret
  5919   0032C6                     __end_of___aldiv:
  5920                           	callstack 0
  5921                           
  5922 ;; *************** function _color_click_init *****************
  5923 ;; Defined at:
  5924 ;;		line 5 in file "color.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;		None
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;		None
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  1    wreg      void 
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0, cstack
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5940 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5942 ;;Total ram usage:        1 bytes
  5943 ;; Hardware stack levels used: 1
  5944 ;; Hardware stack levels required when called: 9
  5945 ;; This function calls:
  5946 ;;		_I2C_2_Master_Init
  5947 ;;		_color_clear_init_interrupts
  5948 ;;		_color_writetoaddr
  5949 ;; This function is called by:
  5950 ;;		_main
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           	psect	text18
  5955   0038D6                     __ptext18:
  5956                           	callstack 0
  5957   0038D6                     _color_click_init:
  5958                           	callstack 21
  5959   0038D6                     
  5960                           ;color.c: 8:     I2C_2_Master_Init();
  5961   0038D6  ECA2  F01C         	call	_I2C_2_Master_Init	;wreg free
  5962   0038DA                     
  5963                           ;color.c: 11:  color_writetoaddr(0x00, 0x01);
  5964   0038DA  0E01               	movlw	1
  5965   0038DC  6E0E               	movwf	color_writetoaddr@value^0,c
  5966   0038DE  0E00               	movlw	0
  5967   0038E0  EC3E  F01D         	call	_color_writetoaddr
  5968   0038E4                     
  5969                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5970   0038E4  0E3F               	movlw	63
  5971   0038E6  6E15               	movwf	??_color_click_init^0,c
  5972   0038E8  0E55               	movlw	85
  5973   0038EA                     u3037:
  5974   0038EA  2EE8               	decfsz	wreg,f,c
  5975   0038EC  D7FE               	bra	u3037
  5976   0038EE  2E15               	decfsz	??_color_click_init^0,f,c
  5977   0038F0  D7FC               	bra	u3037
  5978   0038F2  0000               	nop	
  5979   0038F4                     
  5980                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  5981   0038F4  0E03               	movlw	3
  5982   0038F6  6E0E               	movwf	color_writetoaddr@value^0,c
  5983   0038F8  0E00               	movlw	0
  5984   0038FA  EC3E  F01D         	call	_color_writetoaddr
  5985   0038FE                     
  5986                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  5987   0038FE  0ED5               	movlw	213
  5988   003900  6E0E               	movwf	color_writetoaddr@value^0,c
  5989   003902  0E01               	movlw	1
  5990   003904  EC3E  F01D         	call	_color_writetoaddr
  5991   003908                     
  5992                           ;color.c: 21:     color_clear_init_interrupts();
  5993   003908  EC03  F01B         	call	_color_clear_init_interrupts	;wreg free
  5994   00390C  0012               	return		;funcret
  5995   00390E                     __end_of_color_click_init:
  5996                           	callstack 0
  5997                           
  5998 ;; *************** function _color_clear_init_interrupts *****************
  5999 ;; Defined at:
  6000 ;;		line 25 in file "color.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;		None
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  low_threshol    2   18[COMRAM] unsigned int 
  6005 ;;  high_thresho    2   16[COMRAM] unsigned int 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      void 
  6008 ;; Registers used:
  6009 ;;		wreg, status,2, status,0, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6016 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6018 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;Total ram usage:        5 bytes
  6020 ;; Hardware stack levels used: 1
  6021 ;; Hardware stack levels required when called: 8
  6022 ;; This function calls:
  6023 ;;		_I2C_2_Master_Start
  6024 ;;		_I2C_2_Master_Stop
  6025 ;;		_I2C_2_Master_Write
  6026 ;;		_color_writetoaddr
  6027 ;; This function is called by:
  6028 ;;		_color_click_init
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text19
  6033   003606                     __ptext19:
  6034                           	callstack 0
  6035   003606                     _color_clear_init_interrupts:
  6036                           	callstack 21
  6037   003606                     
  6038                           ;color.c: 27:     I2C_2_Master_Start();
  6039   003606  ECC8  F01D         	call	_I2C_2_Master_Start	;wreg free
  6040                           
  6041                           ;color.c: 28:     I2C_2_Master_Write(0x52 | 0x00);
  6042   00360A  0E52               	movlw	82
  6043   00360C  ECAD  F01D         	call	_I2C_2_Master_Write
  6044                           
  6045                           ;color.c: 29:     I2C_2_Master_Write(0b11100110);
  6046   003610  0EE6               	movlw	230
  6047   003612  ECAD  F01D         	call	_I2C_2_Master_Write
  6048                           
  6049                           ;color.c: 30:     I2C_2_Master_Stop();
  6050   003616  ECC3  F01D         	call	_I2C_2_Master_Stop	;wreg free
  6051   00361A                     
  6052                           ;color.c: 33:     unsigned int high_threshold = ambient + 20;
  6053   00361A  0E14               	movlw	20
  6054   00361C  2449               	addwf	_ambient^0,w,c
  6055   00361E  6E11               	movwf	color_clear_init_interrupts@high_threshold^0,c
  6056   003620  0E00               	movlw	0
  6057   003622  204A               	addwfc	(_ambient+1)^0,w,c
  6058   003624  6E12               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  6059   003626                     
  6060                           ;color.c: 34:     unsigned int low_threshold = ambient - 20;
  6061   003626  0EEC               	movlw	236
  6062   003628  2449               	addwf	_ambient^0,w,c
  6063   00362A  6E13               	movwf	color_clear_init_interrupts@low_threshold^0,c
  6064   00362C  0EFF               	movlw	255
  6065   00362E  204A               	addwfc	(_ambient+1)^0,w,c
  6066   003630  6E14               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  6067                           
  6068                           ;color.c: 37:  color_writetoaddr(0x00, 0x13);
  6069   003632  0E13               	movlw	19
  6070   003634  6E0E               	movwf	color_writetoaddr@value^0,c
  6071   003636  0E00               	movlw	0
  6072   003638  EC3E  F01D         	call	_color_writetoaddr
  6073   00363C                     
  6074                           ;color.c: 38:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6075   00363C  0E3F               	movlw	63
  6076   00363E  6E10               	movwf	??_color_clear_init_interrupts^0,c
  6077   003640  0E55               	movlw	85
  6078   003642                     u3047:
  6079   003642  2EE8               	decfsz	wreg,f,c
  6080   003644  D7FE               	bra	u3047
  6081   003646  2E10               	decfsz	??_color_clear_init_interrupts^0,f,c
  6082   003648  D7FC               	bra	u3047
  6083   00364A  0000               	nop	
  6084   00364C                     
  6085                           ;color.c: 39:     color_writetoaddr(0x07, (high_threshold >> 8));
  6086   00364C  5012               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  6087   00364E  6E0E               	movwf	color_writetoaddr@value^0,c
  6088   003650  0E07               	movlw	7
  6089   003652  EC3E  F01D         	call	_color_writetoaddr
  6090   003656                     
  6091                           ;color.c: 40:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  6092   003656  C011  F00E         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  6093   00365A  0E06               	movlw	6
  6094   00365C  EC3E  F01D         	call	_color_writetoaddr
  6095   003660                     
  6096                           ;color.c: 41:     color_writetoaddr(0x05, (low_threshold >> 8));
  6097   003660  5014               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  6098   003662  6E0E               	movwf	color_writetoaddr@value^0,c
  6099   003664  0E05               	movlw	5
  6100   003666  EC3E  F01D         	call	_color_writetoaddr
  6101   00366A                     
  6102                           ;color.c: 42:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  6103   00366A  C013  F00E         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  6104   00366E  0E04               	movlw	4
  6105   003670  EC3E  F01D         	call	_color_writetoaddr
  6106   003674                     
  6107                           ;color.c: 43:     color_writetoaddr(0x0C, 0b0100);
  6108   003674  0E04               	movlw	4
  6109   003676  6E0E               	movwf	color_writetoaddr@value^0,c
  6110   003678  0E0C               	movlw	12
  6111   00367A  EC3E  F01D         	call	_color_writetoaddr
  6112   00367E  0012               	return		;funcret
  6113   003680                     __end_of_color_clear_init_interrupts:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function _color_writetoaddr *****************
  6117 ;; Defined at:
  6118 ;;		line 48 in file "color.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  address         1    wreg     unsigned char 
  6121 ;;  value           1   13[COMRAM] unsigned char 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  address         1   14[COMRAM] unsigned char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      void 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6133 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6137 ;;Total ram usage:        2 bytes
  6138 ;; Hardware stack levels used: 1
  6139 ;; Hardware stack levels required when called: 7
  6140 ;; This function calls:
  6141 ;;		_I2C_2_Master_Start
  6142 ;;		_I2C_2_Master_Stop
  6143 ;;		_I2C_2_Master_Write
  6144 ;; This function is called by:
  6145 ;;		_color_click_init
  6146 ;;		_color_clear_init_interrupts
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           	psect	text20
  6151   003A7C                     __ptext20:
  6152                           	callstack 0
  6153   003A7C                     _color_writetoaddr:
  6154                           	callstack 22
  6155                           
  6156                           ;incstack = 0
  6157                           ;color_writetoaddr@address stored from wreg
  6158   003A7C  6E0F               	movwf	color_writetoaddr@address^0,c
  6159   003A7E                     
  6160                           ;color.c: 49:     I2C_2_Master_Start();
  6161   003A7E  ECC8  F01D         	call	_I2C_2_Master_Start	;wreg free
  6162                           
  6163                           ;color.c: 50:     I2C_2_Master_Write(0x52 | 0x00);
  6164   003A82  0E52               	movlw	82
  6165   003A84  ECAD  F01D         	call	_I2C_2_Master_Write
  6166                           
  6167                           ;color.c: 51:     I2C_2_Master_Write(0x80 | address);
  6168   003A88  500F               	movf	color_writetoaddr@address^0,w,c
  6169   003A8A  0980               	iorlw	128
  6170   003A8C  ECAD  F01D         	call	_I2C_2_Master_Write
  6171                           
  6172                           ;color.c: 52:     I2C_2_Master_Write(value);
  6173   003A90  500E               	movf	color_writetoaddr@value^0,w,c
  6174   003A92  ECAD  F01D         	call	_I2C_2_Master_Write
  6175                           
  6176                           ;color.c: 53:     I2C_2_Master_Stop();
  6177   003A96  ECC3  F01D         	call	_I2C_2_Master_Stop	;wreg free
  6178   003A9A  0012               	return		;funcret
  6179   003A9C                     __end_of_color_writetoaddr:
  6180                           	callstack 0
  6181                           
  6182 ;; *************** function _I2C_2_Master_Write *****************
  6183 ;; Defined at:
  6184 ;;		line 45 in file "i2c.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  data_byte       1    wreg     unsigned char 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  data_byte       1   12[COMRAM] unsigned char 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1    wreg      void 
  6191 ;; Registers used:
  6192 ;;		wreg, status,2, status,0, cstack
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6202 ;;Total ram usage:        1 bytes
  6203 ;; Hardware stack levels used: 1
  6204 ;; Hardware stack levels required when called: 6
  6205 ;; This function calls:
  6206 ;;		_I2C_2_Master_Idle
  6207 ;; This function is called by:
  6208 ;;		_color_clear_init_interrupts
  6209 ;;		_color_writetoaddr
  6210 ;;		_color_read
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text21
  6215   003B5A                     __ptext21:
  6216                           	callstack 0
  6217   003B5A                     _I2C_2_Master_Write:
  6218                           	callstack 23
  6219                           
  6220                           ;incstack = 0
  6221                           ;I2C_2_Master_Write@data_byte stored from wreg
  6222   003B5A  6E0D               	movwf	I2C_2_Master_Write@data_byte^0,c
  6223   003B5C                     
  6224                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6225   003B5C  ECCB  F01C         	call	_I2C_2_Master_Idle	;wreg free
  6226   003B60                     
  6227                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6228   003B60  C00D  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6229   003B64  0012               	return		;funcret
  6230   003B66                     __end_of_I2C_2_Master_Write:
  6231                           	callstack 0
  6232                           
  6233 ;; *************** function _I2C_2_Master_Stop *****************
  6234 ;; Defined at:
  6235 ;;		line 39 in file "i2c.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;		None
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;		None
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		wreg, status,2, status,0, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6253 ;;Total ram usage:        0 bytes
  6254 ;; Hardware stack levels used: 1
  6255 ;; Hardware stack levels required when called: 6
  6256 ;; This function calls:
  6257 ;;		_I2C_2_Master_Idle
  6258 ;; This function is called by:
  6259 ;;		_color_clear_init_interrupts
  6260 ;;		_color_writetoaddr
  6261 ;;		_color_read
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text22
  6266   003B86                     __ptext22:
  6267                           	callstack 0
  6268   003B86                     _I2C_2_Master_Stop:
  6269                           	callstack 23
  6270   003B86                     
  6271                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6272   003B86  ECCB  F01C         	call	_I2C_2_Master_Idle	;wreg free
  6273   003B8A                     
  6274                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6275   003B8A  010E               	movlb	14	; () banked
  6276   003B8C  85DA               	bsf	218,2,b	;volatile
  6277   003B8E                     
  6278                           ; BSR set to: 14
  6279   003B8E  0012               	return		;funcret
  6280   003B90                     __end_of_I2C_2_Master_Stop:
  6281                           	callstack 0
  6282                           
  6283 ;; *************** function _I2C_2_Master_Start *****************
  6284 ;; Defined at:
  6285 ;;		line 27 in file "i2c.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;		None
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;		None
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg, status,2, status,0, cstack
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6303 ;;Total ram usage:        0 bytes
  6304 ;; Hardware stack levels used: 1
  6305 ;; Hardware stack levels required when called: 6
  6306 ;; This function calls:
  6307 ;;		_I2C_2_Master_Idle
  6308 ;; This function is called by:
  6309 ;;		_color_clear_init_interrupts
  6310 ;;		_color_writetoaddr
  6311 ;;		_color_read
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text23
  6316   003B90                     __ptext23:
  6317                           	callstack 0
  6318   003B90                     _I2C_2_Master_Start:
  6319                           	callstack 23
  6320   003B90                     
  6321                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6322   003B90  ECCB  F01C         	call	_I2C_2_Master_Idle	;wreg free
  6323   003B94                     
  6324                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6325   003B94  010E               	movlb	14	; () banked
  6326   003B96  81DA               	bsf	218,0,b	;volatile
  6327   003B98                     
  6328                           ; BSR set to: 14
  6329   003B98  0012               	return		;funcret
  6330   003B9A                     __end_of_I2C_2_Master_Start:
  6331                           	callstack 0
  6332                           
  6333 ;; *************** function _I2C_2_Master_Idle *****************
  6334 ;; Defined at:
  6335 ;;		line 22 in file "i2c.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;		None
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;		None
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1    wreg      void 
  6342 ;; Registers used:
  6343 ;;		wreg, status,2, status,0
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6353 ;;Total ram usage:        1 bytes
  6354 ;; Hardware stack levels used: 1
  6355 ;; Hardware stack levels required when called: 5
  6356 ;; This function calls:
  6357 ;;		Nothing
  6358 ;; This function is called by:
  6359 ;;		_I2C_2_Master_Start
  6360 ;;		_I2C_2_Master_RepStart
  6361 ;;		_I2C_2_Master_Stop
  6362 ;;		_I2C_2_Master_Write
  6363 ;;		_I2C_2_Master_Read
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text24
  6368   003996                     __ptext24:
  6369                           	callstack 0
  6370   003996                     _I2C_2_Master_Idle:
  6371                           	callstack 23
  6372   003996                     l181:
  6373   003996  010E               	movlb	14	; () banked
  6374   003998  B5D8               	btfsc	216,2,b	;volatile
  6375   00399A  EFD1  F01C         	goto	u1101
  6376   00399E  EFD3  F01C         	goto	u1100
  6377   0039A2                     u1101:
  6378   0039A2  EFCB  F01C         	goto	l181
  6379   0039A6                     u1100:
  6380   0039A6                     
  6381                           ; BSR set to: 14
  6382   0039A6  CEDA F00C          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6383   0039AA  0E1F               	movlw	31
  6384   0039AC  160C               	andwf	??_I2C_2_Master_Idle^0,f,c
  6385   0039AE  A4D8               	btfss	status,2,c
  6386   0039B0  EFDC  F01C         	goto	u1111
  6387   0039B4  EFDE  F01C         	goto	u1110
  6388   0039B8                     u1111:
  6389   0039B8  EFCB  F01C         	goto	l181
  6390   0039BC                     u1110:
  6391   0039BC                     
  6392                           ; BSR set to: 14
  6393   0039BC  0012               	return		;funcret
  6394   0039BE                     __end_of_I2C_2_Master_Idle:
  6395                           	callstack 0
  6396                           
  6397 ;; *************** function _I2C_2_Master_Init *****************
  6398 ;; Defined at:
  6399 ;;		line 4 in file "i2c.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;		None
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      void 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6417 ;;Total ram usage:        0 bytes
  6418 ;; Hardware stack levels used: 1
  6419 ;; Hardware stack levels required when called: 5
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_color_click_init
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text25
  6428   003944                     __ptext25:
  6429                           	callstack 0
  6430   003944                     _I2C_2_Master_Init:
  6431                           	callstack 24
  6432   003944                     
  6433                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6434   003944  010E               	movlb	14	; () banked
  6435   003946  51D9               	movf	217,w,b	;volatile
  6436   003948  0BF0               	andlw	-16
  6437   00394A  0908               	iorlw	8
  6438   00394C  6FD9               	movwf	217,b	;volatile
  6439   00394E                     
  6440                           ; BSR set to: 14
  6441                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6442   00394E  8BD9               	bsf	217,5,b	;volatile
  6443                           
  6444                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6445   003950  0E9F               	movlw	159
  6446   003952  6FD6               	movwf	214,b	;volatile
  6447   003954                     
  6448                           ; BSR set to: 14
  6449                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6450   003954  8A84               	bsf	132,5,c	;volatile
  6451   003956                     
  6452                           ; BSR set to: 14
  6453                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6454   003956  8C84               	bsf	132,6,c	;volatile
  6455   003958                     
  6456                           ; BSR set to: 14
  6457                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6458   003958  9BA7               	bcf	167,5,b	;volatile
  6459   00395A                     
  6460                           ; BSR set to: 14
  6461                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6462   00395A  9DA7               	bcf	167,6,b	;volatile
  6463                           
  6464                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6465   00395C  0E1D               	movlw	29
  6466   00395E  6F1D               	movwf	29,b	;volatile
  6467                           
  6468                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6469   003960  0E1E               	movlw	30
  6470   003962  6F1C               	movwf	28,b	;volatile
  6471                           
  6472                           ;i2c.c: 18:   RD5PPS=0x1C;
  6473   003964  0E1C               	movlw	28
  6474   003966  6F6F               	movwf	111,b	;volatile
  6475                           
  6476                           ;i2c.c: 19:   RD6PPS=0x1B;
  6477   003968  0E1B               	movlw	27
  6478   00396A  6F70               	movwf	112,b	;volatile
  6479   00396C                     
  6480                           ; BSR set to: 14
  6481   00396C  0012               	return		;funcret
  6482   00396E                     __end_of_I2C_2_Master_Init:
  6483                           	callstack 0
  6484                           
  6485 ;; *************** function _calibration *****************
  6486 ;; Defined at:
  6487 ;;		line 482 in file "dc_motor.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  6490 ;;		 -> main@motorL(10), 
  6491 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  6492 ;;		 -> main@motorR(10), 
  6493 ;;  turnSpeed       1   48[COMRAM] unsigned char 
  6494 ;;  turnDuration    2   49[COMRAM] PTR unsigned char 
  6495 ;;		 -> main@turnDuration(1), 
  6496 ;;  turnRamp        1   51[COMRAM] unsigned char 
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;		None
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  1    wreg      void 
  6501 ;; Registers used:
  6502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6508 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6511 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6512 ;;Total ram usage:       10 bytes
  6513 ;; Hardware stack levels used: 1
  6514 ;; Hardware stack levels required when called: 8
  6515 ;; This function calls:
  6516 ;;		_turnLeft
  6517 ;;		_turnRight
  6518 ;; This function is called by:
  6519 ;;		_main
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text26
  6524   0024EE                     __ptext26:
  6525                           	callstack 0
  6526   0024EE                     _calibration:
  6527                           	callstack 22
  6528   0024EE                     
  6529                           ;dc_motor.c: 482: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 483: {;dc_motor.c: 485:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
  6530   0024EE  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  6531   0024F2  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  6532   0024F6  C02F  F021         	movff	calibration@mR,turnLeft@mR
  6533   0024FA  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  6534   0024FE  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  6535   002502  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  6536   002506  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  6537   00250A  50DF               	movf	indf2,w,c
  6538   00250C  6E24               	movwf	turnLeft@turnDuration^0,c
  6539   00250E  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  6540   002512  EC98  F016         	call	_turnLeft	;wreg free
  6541   002516                     
  6542                           ;dc_motor.c: 486:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6543   002516  0E05               	movlw	5
  6544   002518  6E36               	movwf	(??_calibration+1)^0,c
  6545   00251A  0E0F               	movlw	15
  6546   00251C  6E35               	movwf	??_calibration^0,c
  6547   00251E  0EF1               	movlw	241
  6548   002520                     u3057:
  6549   002520  2EE8               	decfsz	wreg,f,c
  6550   002522  D7FE               	bra	u3057
  6551   002524  2E35               	decfsz	??_calibration^0,f,c
  6552   002526  D7FC               	bra	u3057
  6553   002528  2E36               	decfsz	(??_calibration+1)^0,f,c
  6554   00252A  D7FA               	bra	u3057
  6555   00252C  0000               	nop	
  6556   00252E                     
  6557                           ;dc_motor.c: 487:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  6558   00252E  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  6559   002532  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  6560   002536  C02F  F021         	movff	calibration@mR,turnLeft@mR
  6561   00253A  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  6562   00253E  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  6563   002542  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  6564   002546  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  6565   00254A  50DF               	movf	indf2,w,c
  6566   00254C  6E24               	movwf	turnLeft@turnDuration^0,c
  6567   00254E  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  6568   002552  EC98  F016         	call	_turnLeft	;wreg free
  6569                           
  6570                           ;dc_motor.c: 488:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6571   002556  0E05               	movlw	5
  6572   002558  6E36               	movwf	(??_calibration+1)^0,c
  6573   00255A  0E0F               	movlw	15
  6574   00255C  6E35               	movwf	??_calibration^0,c
  6575   00255E  0EF1               	movlw	241
  6576   002560                     u3067:
  6577   002560  2EE8               	decfsz	wreg,f,c
  6578   002562  D7FE               	bra	u3067
  6579   002564  2E35               	decfsz	??_calibration^0,f,c
  6580   002566  D7FC               	bra	u3067
  6581   002568  2E36               	decfsz	(??_calibration+1)^0,f,c
  6582   00256A  D7FA               	bra	u3067
  6583   00256C  0000               	nop	
  6584   00256E                     
  6585                           ;dc_motor.c: 489:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  6586   00256E  C02D  F01F         	movff	calibration@mL,turnRight@mL
  6587   002572  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  6588   002576  C02F  F021         	movff	calibration@mR,turnRight@mR
  6589   00257A  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  6590   00257E  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  6591   002582  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  6592   002586  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  6593   00258A  50DF               	movf	indf2,w,c
  6594   00258C  6E24               	movwf	turnRight@turnDuration^0,c
  6595   00258E  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  6596   002592  ECAE  F015         	call	_turnRight	;wreg free
  6597   002596                     
  6598                           ;dc_motor.c: 490:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6599   002596  0E05               	movlw	5
  6600   002598  6E36               	movwf	(??_calibration+1)^0,c
  6601   00259A  0E0F               	movlw	15
  6602   00259C  6E35               	movwf	??_calibration^0,c
  6603   00259E  0EF1               	movlw	241
  6604   0025A0                     u3077:
  6605   0025A0  2EE8               	decfsz	wreg,f,c
  6606   0025A2  D7FE               	bra	u3077
  6607   0025A4  2E35               	decfsz	??_calibration^0,f,c
  6608   0025A6  D7FC               	bra	u3077
  6609   0025A8  2E36               	decfsz	(??_calibration+1)^0,f,c
  6610   0025AA  D7FA               	bra	u3077
  6611   0025AC  0000               	nop	
  6612                           
  6613                           ;dc_motor.c: 491:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  6614   0025AE  C02D  F01F         	movff	calibration@mL,turnRight@mL
  6615   0025B2  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  6616   0025B6  C02F  F021         	movff	calibration@mR,turnRight@mR
  6617   0025BA  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  6618   0025BE  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  6619   0025C2  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  6620   0025C6  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  6621   0025CA  50DF               	movf	indf2,w,c
  6622   0025CC  6E24               	movwf	turnRight@turnDuration^0,c
  6623   0025CE  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  6624   0025D2  ECAE  F015         	call	_turnRight	;wreg free
  6625   0025D6                     l613:
  6626   0025D6  A48E               	btfss	142,2,c	;volatile
  6627   0025D8  EFF0  F012         	goto	u1671
  6628   0025DC  EFF2  F012         	goto	u1670
  6629   0025E0                     u1671:
  6630   0025E0  EFF9  F012         	goto	l617
  6631   0025E4                     u1670:
  6632   0025E4  B68E               	btfsc	142,3,c	;volatile
  6633   0025E6  EFF7  F012         	goto	u1681
  6634   0025EA  EFF9  F012         	goto	u1680
  6635   0025EE                     u1681:
  6636   0025EE  EFEB  F012         	goto	l613
  6637   0025F2                     u1680:
  6638   0025F2                     l617:
  6639                           
  6640                           ;dc_motor.c: 496:         if (!PORTFbits.RF2 && *turnDuration>0) {
  6641   0025F2  B48E               	btfsc	142,2,c	;volatile
  6642   0025F4  EFFE  F012         	goto	u1691
  6643   0025F8  EF00  F013         	goto	u1690
  6644   0025FC                     u1691:
  6645   0025FC  EF14  F013         	goto	l618
  6646   002600                     u1690:
  6647   002600  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  6648   002604  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  6649   002608  50DF               	movf	indf2,w,c
  6650   00260A  B4D8               	btfsc	status,2,c
  6651   00260C  EF0A  F013         	goto	u1701
  6652   002610  EF0C  F013         	goto	u1700
  6653   002614                     u1701:
  6654   002614  EF14  F013         	goto	l618
  6655   002618                     u1700:
  6656   002618                     
  6657                           ;dc_motor.c: 497:             (*turnDuration)--;
  6658   002618  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  6659   00261C  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  6660   002620  06DF               	decf	indf2,f,c
  6661   002622                     
  6662                           ;dc_motor.c: 498:             LATDbits.LATD7 = 1;
  6663   002622  8E7C               	bsf	124,7,c	;volatile
  6664                           
  6665                           ;dc_motor.c: 499:         }
  6666   002624  EF21  F013         	goto	l3083
  6667   002628                     l618:
  6668   002628  B68E               	btfsc	142,3,c	;volatile
  6669   00262A  EF19  F013         	goto	u1711
  6670   00262E  EF1B  F013         	goto	u1710
  6671   002632                     u1711:
  6672   002632  EF21  F013         	goto	l3083
  6673   002636                     u1710:
  6674   002636                     
  6675                           ;dc_motor.c: 502:             (*turnDuration)++;
  6676   002636  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  6677   00263A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  6678   00263E  2ADF               	incf	indf2,f,c
  6679   002640                     
  6680                           ;dc_motor.c: 503:             LATHbits.LATH3 = 1;
  6681   002640  8680               	bsf	128,3,c	;volatile
  6682   002642                     l3083:
  6683                           
  6684                           ;dc_motor.c: 506:         _delay((unsigned long)((500)*(64000000/4000.0)));
  6685   002642  0E29               	movlw	41
  6686   002644  6E36               	movwf	(??_calibration+1)^0,c
  6687   002646  0E96               	movlw	150
  6688   002648  6E35               	movwf	??_calibration^0,c
  6689   00264A  0E7F               	movlw	127
  6690   00264C                     u3087:
  6691   00264C  2EE8               	decfsz	wreg,f,c
  6692   00264E  D7FE               	bra	u3087
  6693   002650  2E35               	decfsz	??_calibration^0,f,c
  6694   002652  D7FC               	bra	u3087
  6695   002654  2E36               	decfsz	(??_calibration+1)^0,f,c
  6696   002656  D7FA               	bra	u3087
  6697   002658  0000               	nop	
  6698   00265A                     
  6699                           ;dc_motor.c: 508:         if (!PORTFbits.RF3) {
  6700   00265A  B68E               	btfsc	142,3,c	;volatile
  6701   00265C  EF32  F013         	goto	u1721
  6702   002660  EF34  F013         	goto	u1720
  6703   002664                     u1721:
  6704   002664  EF3B  F013         	goto	l621
  6705   002668                     u1720:
  6706   002668                     
  6707                           ;dc_motor.c: 509:             (*turnDuration)--;
  6708   002668  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  6709   00266C  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  6710   002670  06DF               	decf	indf2,f,c
  6711                           
  6712                           ;dc_motor.c: 510:             break;
  6713   002672  EFB3  F013         	goto	l622
  6714   002676                     l621:
  6715                           
  6716                           ;dc_motor.c: 513:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6717   002676  9680               	bcf	128,3,c	;volatile
  6718   002678  9E7C               	bcf	124,7,c	;volatile
  6719   00267A                     
  6720                           ;dc_motor.c: 516:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  6721   00267A  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  6722   00267E  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  6723   002682  C02F  F021         	movff	calibration@mR,turnLeft@mR
  6724   002686  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  6725   00268A  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  6726   00268E  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  6727   002692  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  6728   002696  50DF               	movf	indf2,w,c
  6729   002698  6E24               	movwf	turnLeft@turnDuration^0,c
  6730   00269A  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  6731   00269E  EC98  F016         	call	_turnLeft	;wreg free
  6732   0026A2                     
  6733                           ;dc_motor.c: 517:         _delay((unsigned long)((50)*(64000000/4000.0)));
  6734   0026A2  0E05               	movlw	5
  6735   0026A4  6E36               	movwf	(??_calibration+1)^0,c
  6736   0026A6  0E0F               	movlw	15
  6737   0026A8  6E35               	movwf	??_calibration^0,c
  6738   0026AA  0EF1               	movlw	241
  6739   0026AC                     u3097:
  6740   0026AC  2EE8               	decfsz	wreg,f,c
  6741   0026AE  D7FE               	bra	u3097
  6742   0026B0  2E35               	decfsz	??_calibration^0,f,c
  6743   0026B2  D7FC               	bra	u3097
  6744   0026B4  2E36               	decfsz	(??_calibration+1)^0,f,c
  6745   0026B6  D7FA               	bra	u3097
  6746   0026B8  0000               	nop	
  6747   0026BA                     
  6748                           ;dc_motor.c: 518:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  6749   0026BA  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  6750   0026BE  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  6751   0026C2  C02F  F021         	movff	calibration@mR,turnLeft@mR
  6752   0026C6  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  6753   0026CA  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  6754   0026CE  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  6755   0026D2  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  6756   0026D6  50DF               	movf	indf2,w,c
  6757   0026D8  6E24               	movwf	turnLeft@turnDuration^0,c
  6758   0026DA  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  6759   0026DE  EC98  F016         	call	_turnLeft	;wreg free
  6760                           
  6761                           ;dc_motor.c: 519:         _delay((unsigned long)((50)*(64000000/4000.0)));
  6762   0026E2  0E05               	movlw	5
  6763   0026E4  6E36               	movwf	(??_calibration+1)^0,c
  6764   0026E6  0E0F               	movlw	15
  6765   0026E8  6E35               	movwf	??_calibration^0,c
  6766   0026EA  0EF1               	movlw	241
  6767   0026EC                     u3107:
  6768   0026EC  2EE8               	decfsz	wreg,f,c
  6769   0026EE  D7FE               	bra	u3107
  6770   0026F0  2E35               	decfsz	??_calibration^0,f,c
  6771   0026F2  D7FC               	bra	u3107
  6772   0026F4  2E36               	decfsz	(??_calibration+1)^0,f,c
  6773   0026F6  D7FA               	bra	u3107
  6774   0026F8  0000               	nop	
  6775   0026FA                     
  6776                           ;dc_motor.c: 520:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  6777   0026FA  C02D  F01F         	movff	calibration@mL,turnRight@mL
  6778   0026FE  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  6779   002702  C02F  F021         	movff	calibration@mR,turnRight@mR
  6780   002706  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  6781   00270A  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  6782   00270E  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  6783   002712  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  6784   002716  50DF               	movf	indf2,w,c
  6785   002718  6E24               	movwf	turnRight@turnDuration^0,c
  6786   00271A  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  6787   00271E  ECAE  F015         	call	_turnRight	;wreg free
  6788   002722                     
  6789                           ;dc_motor.c: 521:         _delay((unsigned long)((50)*(64000000/4000.0)));
  6790   002722  0E05               	movlw	5
  6791   002724  6E36               	movwf	(??_calibration+1)^0,c
  6792   002726  0E0F               	movlw	15
  6793   002728  6E35               	movwf	??_calibration^0,c
  6794   00272A  0EF1               	movlw	241
  6795   00272C                     u3117:
  6796   00272C  2EE8               	decfsz	wreg,f,c
  6797   00272E  D7FE               	bra	u3117
  6798   002730  2E35               	decfsz	??_calibration^0,f,c
  6799   002732  D7FC               	bra	u3117
  6800   002734  2E36               	decfsz	(??_calibration+1)^0,f,c
  6801   002736  D7FA               	bra	u3117
  6802   002738  0000               	nop	
  6803                           
  6804                           ;dc_motor.c: 522:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  6805   00273A  C02D  F01F         	movff	calibration@mL,turnRight@mL
  6806   00273E  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  6807   002742  C02F  F021         	movff	calibration@mR,turnRight@mR
  6808   002746  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  6809   00274A  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  6810   00274E  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  6811   002752  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  6812   002756  50DF               	movf	indf2,w,c
  6813   002758  6E24               	movwf	turnRight@turnDuration^0,c
  6814   00275A  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  6815   00275E  ECAE  F015         	call	_turnRight	;wreg free
  6816   002762  EFEB  F012         	goto	l613
  6817   002766                     l622:
  6818                           
  6819                           ;dc_motor.c: 527:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6820   002766  8680               	bsf	128,3,c	;volatile
  6821   002768  8E7C               	bsf	124,7,c	;volatile
  6822   00276A                     
  6823                           ;dc_motor.c: 528:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6824   00276A  0E09               	movlw	9
  6825   00276C  6E36               	movwf	(??_calibration+1)^0,c
  6826   00276E  0E1E               	movlw	30
  6827   002770  6E35               	movwf	??_calibration^0,c
  6828   002772  0EE4               	movlw	228
  6829   002774                     u3127:
  6830   002774  2EE8               	decfsz	wreg,f,c
  6831   002776  D7FE               	bra	u3127
  6832   002778  2E35               	decfsz	??_calibration^0,f,c
  6833   00277A  D7FC               	bra	u3127
  6834   00277C  2E36               	decfsz	(??_calibration+1)^0,f,c
  6835   00277E  D7FA               	bra	u3127
  6836   002780  D000               	nop2	
  6837   002782                     
  6838                           ;dc_motor.c: 529:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6839   002782  9680               	bcf	128,3,c	;volatile
  6840   002784  9E7C               	bcf	124,7,c	;volatile
  6841   002786  0012               	return		;funcret
  6842   002788                     __end_of_calibration:
  6843                           	callstack 0
  6844                           
  6845 ;; *************** function _turnRight *****************
  6846 ;; Defined at:
  6847 ;;		line 400 in file "dc_motor.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  6850 ;;		 -> main@motorL(10), 
  6851 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  6852 ;;		 -> main@motorR(10), 
  6853 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  6854 ;;  turnDuration    1   35[COMRAM] unsigned char 
  6855 ;;  turnRamp        1   36[COMRAM] unsigned char 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  cur_power       2   42[COMRAM] int 
  6858 ;;  i               2   40[COMRAM] int 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6868 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6869 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6870 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6871 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6872 ;;Total ram usage:       14 bytes
  6873 ;; Hardware stack levels used: 1
  6874 ;; Hardware stack levels required when called: 7
  6875 ;; This function calls:
  6876 ;;		_setMotorPWM
  6877 ;; This function is called by:
  6878 ;;		_move
  6879 ;;		_returnHome
  6880 ;;		_lostReturnHome
  6881 ;;		_calibration
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           	psect	text27
  6886   002B5C                     __ptext27:
  6887                           	callstack 0
  6888   002B5C                     _turnRight:
  6889                           	callstack 22
  6890   002B5C                     
  6891                           ;dc_motor.c: 400: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 401: {;dc_motor.c: 402:     mL->dir
      +                          ection = 1;
  6892   002B5C  EE20 F001          	lfsr	2,1
  6893   002B60  501F               	movf	turnRight@mL^0,w,c
  6894   002B62  26D9               	addwf	fsr2l,f,c
  6895   002B64  5020               	movf	(turnRight@mL+1)^0,w,c
  6896   002B66  22DA               	addwfc	fsr2h,f,c
  6897   002B68  0E01               	movlw	1
  6898   002B6A  6EDF               	movwf	indf2,c
  6899                           
  6900                           ;dc_motor.c: 403:     mR->direction = 0;
  6901   002B6C  EE20 F001          	lfsr	2,1
  6902   002B70  5021               	movf	turnRight@mR^0,w,c
  6903   002B72  26D9               	addwf	fsr2l,f,c
  6904   002B74  5022               	movf	(turnRight@mR+1)^0,w,c
  6905   002B76  22DA               	addwfc	fsr2h,f,c
  6906   002B78  6ADF               	clrf	indf2,c
  6907   002B7A                     
  6908                           ;dc_motor.c: 404:     int i;;dc_motor.c: 405:     int cur_power;;dc_motor.c: 406:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  6909   002B7A  0E00               	movlw	0
  6910   002B7C  6E2C               	movwf	(turnRight@cur_power+1)^0,c
  6911   002B7E  0E01               	movlw	1
  6912   002B80  6E2B               	movwf	turnRight@cur_power^0,c
  6913   002B82  EF0C  F016         	goto	l2583
  6914   002B86                     l2569:
  6915                           
  6916                           ;dc_motor.c: 407:         mL->power = cur_power+mL->compensation;
  6917   002B86  EE20 F009          	lfsr	2,9
  6918   002B8A  501F               	movf	turnRight@mL^0,w,c
  6919   002B8C  26D9               	addwf	fsr2l,f,c
  6920   002B8E  5020               	movf	(turnRight@mL+1)^0,w,c
  6921   002B90  22DA               	addwfc	fsr2h,f,c
  6922   002B92  50DF               	movf	indf2,w,c
  6923   002B94  242B               	addwf	turnRight@cur_power^0,w,c
  6924   002B96  C01F  FFD9         	movff	turnRight@mL,fsr2l
  6925   002B9A  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  6926   002B9E  6EDF               	movwf	indf2,c
  6927                           
  6928                           ;dc_motor.c: 408:         mR->power = cur_power+mR->compensation;
  6929   002BA0  EE20 F009          	lfsr	2,9
  6930   002BA4  5021               	movf	turnRight@mR^0,w,c
  6931   002BA6  26D9               	addwf	fsr2l,f,c
  6932   002BA8  5022               	movf	(turnRight@mR+1)^0,w,c
  6933   002BAA  22DA               	addwfc	fsr2h,f,c
  6934   002BAC  50DF               	movf	indf2,w,c
  6935   002BAE  242B               	addwf	turnRight@cur_power^0,w,c
  6936   002BB0  C021  FFD9         	movff	turnRight@mR,fsr2l
  6937   002BB4  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  6938   002BB8  6EDF               	movwf	indf2,c
  6939   002BBA                     
  6940                           ;dc_motor.c: 409:         setMotorPWM(mL);
  6941   002BBA  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  6942   002BBE  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  6943   002BC2  EC82  F017         	call	_setMotorPWM	;wreg free
  6944   002BC6                     
  6945                           ;dc_motor.c: 410:         setMotorPWM(mR);
  6946   002BC6  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  6947   002BCA  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  6948   002BCE  EC82  F017         	call	_setMotorPWM	;wreg free
  6949   002BD2                     
  6950                           ;dc_motor.c: 411:         for (i=0;i<turnRamp;i++) {
  6951   002BD2  0E00               	movlw	0
  6952   002BD4  6E2A               	movwf	(turnRight@i+1)^0,c
  6953   002BD6  0E00               	movlw	0
  6954   002BD8  6E29               	movwf	turnRight@i^0,c
  6955   002BDA  EFF8  F015         	goto	l571
  6956   002BDE                     l2577:
  6957                           
  6958                           ;dc_motor.c: 412:             _delay((unsigned long)((10)*(64000000/4000.0)));
  6959   002BDE  0ED0               	movlw	208
  6960   002BE0  6E26               	movwf	??_turnRight^0,c
  6961   002BE2  0ECA               	movlw	202
  6962   002BE4                     u3137:
  6963   002BE4  2EE8               	decfsz	wreg,f,c
  6964   002BE6  D7FE               	bra	u3137
  6965   002BE8  2E26               	decfsz	??_turnRight^0,f,c
  6966   002BEA  D7FC               	bra	u3137
  6967   002BEC                     
  6968                           ;dc_motor.c: 413:         }
  6969   002BEC  4A29               	infsnz	turnRight@i^0,f,c
  6970   002BEE  2A2A               	incf	(turnRight@i+1)^0,f,c
  6971   002BF0                     l571:
  6972   002BF0  5025               	movf	turnRight@turnRamp^0,w,c
  6973   002BF2  6E26               	movwf	??_turnRight^0,c
  6974   002BF4  6A27               	clrf	(??_turnRight+1)^0,c
  6975   002BF6  5026               	movf	??_turnRight^0,w,c
  6976   002BF8  5C29               	subwf	turnRight@i^0,w,c
  6977   002BFA  502A               	movf	(turnRight@i+1)^0,w,c
  6978   002BFC  0A80               	xorlw	128
  6979   002BFE  6E28               	movwf	(??_turnRight+2)^0,c
  6980   002C00  5027               	movf	(??_turnRight+1)^0,w,c
  6981   002C02  0A80               	xorlw	128
  6982   002C04  5828               	subwfb	(??_turnRight+2)^0,w,c
  6983   002C06  A0D8               	btfss	status,0,c
  6984   002C08  EF08  F016         	goto	u1231
  6985   002C0C  EF0A  F016         	goto	u1230
  6986   002C10                     u1231:
  6987   002C10  EFEF  F015         	goto	l2577
  6988   002C14                     u1230:
  6989   002C14                     
  6990                           ;dc_motor.c: 414:     }
  6991   002C14  4A2B               	infsnz	turnRight@cur_power^0,f,c
  6992   002C16  2A2C               	incf	(turnRight@cur_power+1)^0,f,c
  6993   002C18                     l2583:
  6994   002C18  5023               	movf	turnRight@turnSpeed^0,w,c
  6995   002C1A  6E26               	movwf	??_turnRight^0,c
  6996   002C1C  6A27               	clrf	(??_turnRight+1)^0,c
  6997   002C1E  502B               	movf	turnRight@cur_power^0,w,c
  6998   002C20  5C26               	subwf	??_turnRight^0,w,c
  6999   002C22  5027               	movf	(??_turnRight+1)^0,w,c
  7000   002C24  0A80               	xorlw	128
  7001   002C26  6E28               	movwf	(??_turnRight+2)^0,c
  7002   002C28  502C               	movf	(turnRight@cur_power+1)^0,w,c
  7003   002C2A  0A80               	xorlw	128
  7004   002C2C  5828               	subwfb	(??_turnRight+2)^0,w,c
  7005   002C2E  B0D8               	btfsc	status,0,c
  7006   002C30  EF1C  F016         	goto	u1241
  7007   002C34  EF1E  F016         	goto	u1240
  7008   002C38                     u1241:
  7009   002C38  EFC3  F015         	goto	l2569
  7010   002C3C                     u1240:
  7011   002C3C                     
  7012                           ;dc_motor.c: 416:     for (i=0;i<turnDuration;i++) {
  7013   002C3C  0E00               	movlw	0
  7014   002C3E  6E2A               	movwf	(turnRight@i+1)^0,c
  7015   002C40  0E00               	movlw	0
  7016   002C42  6E29               	movwf	turnRight@i^0,c
  7017   002C44  EF2D  F016         	goto	l575
  7018   002C48                     l2587:
  7019                           
  7020                           ;dc_motor.c: 417:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7021   002C48  0ED0               	movlw	208
  7022   002C4A  6E26               	movwf	??_turnRight^0,c
  7023   002C4C  0ECA               	movlw	202
  7024   002C4E                     u3147:
  7025   002C4E  2EE8               	decfsz	wreg,f,c
  7026   002C50  D7FE               	bra	u3147
  7027   002C52  2E26               	decfsz	??_turnRight^0,f,c
  7028   002C54  D7FC               	bra	u3147
  7029   002C56                     
  7030                           ;dc_motor.c: 418:         }
  7031   002C56  4A29               	infsnz	turnRight@i^0,f,c
  7032   002C58  2A2A               	incf	(turnRight@i+1)^0,f,c
  7033   002C5A                     l575:
  7034   002C5A  5024               	movf	turnRight@turnDuration^0,w,c
  7035   002C5C  6E26               	movwf	??_turnRight^0,c
  7036   002C5E  6A27               	clrf	(??_turnRight+1)^0,c
  7037   002C60  5026               	movf	??_turnRight^0,w,c
  7038   002C62  5C29               	subwf	turnRight@i^0,w,c
  7039   002C64  502A               	movf	(turnRight@i+1)^0,w,c
  7040   002C66  0A80               	xorlw	128
  7041   002C68  6E28               	movwf	(??_turnRight+2)^0,c
  7042   002C6A  5027               	movf	(??_turnRight+1)^0,w,c
  7043   002C6C  0A80               	xorlw	128
  7044   002C6E  5828               	subwfb	(??_turnRight+2)^0,w,c
  7045   002C70  A0D8               	btfss	status,0,c
  7046   002C72  EF3D  F016         	goto	u1251
  7047   002C76  EF3F  F016         	goto	u1250
  7048   002C7A                     u1251:
  7049   002C7A  EF24  F016         	goto	l2587
  7050   002C7E                     u1250:
  7051   002C7E                     
  7052                           ;dc_motor.c: 420:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  7053   002C7E  C023  F02B         	movff	turnRight@turnSpeed,turnRight@cur_power
  7054   002C82  6A2C               	clrf	(turnRight@cur_power+1)^0,c
  7055   002C84                     l2591:
  7056   002C84  BE2C               	btfsc	(turnRight@cur_power+1)^0,7,c
  7057   002C86  EF49  F016         	goto	u1260
  7058   002C8A  EF47  F016         	goto	u1261
  7059   002C8E                     u1261:
  7060   002C8E  EF4B  F016         	goto	l2595
  7061   002C92                     u1260:
  7062   002C92  EF97  F016         	goto	l583
  7063   002C96                     l2595:
  7064                           
  7065                           ;dc_motor.c: 421:         mL->power = cur_power+mL->compensation;
  7066   002C96  EE20 F009          	lfsr	2,9
  7067   002C9A  501F               	movf	turnRight@mL^0,w,c
  7068   002C9C  26D9               	addwf	fsr2l,f,c
  7069   002C9E  5020               	movf	(turnRight@mL+1)^0,w,c
  7070   002CA0  22DA               	addwfc	fsr2h,f,c
  7071   002CA2  50DF               	movf	indf2,w,c
  7072   002CA4  242B               	addwf	turnRight@cur_power^0,w,c
  7073   002CA6  C01F  FFD9         	movff	turnRight@mL,fsr2l
  7074   002CAA  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  7075   002CAE  6EDF               	movwf	indf2,c
  7076                           
  7077                           ;dc_motor.c: 422:         mR->power = cur_power+mR->compensation;
  7078   002CB0  EE20 F009          	lfsr	2,9
  7079   002CB4  5021               	movf	turnRight@mR^0,w,c
  7080   002CB6  26D9               	addwf	fsr2l,f,c
  7081   002CB8  5022               	movf	(turnRight@mR+1)^0,w,c
  7082   002CBA  22DA               	addwfc	fsr2h,f,c
  7083   002CBC  50DF               	movf	indf2,w,c
  7084   002CBE  242B               	addwf	turnRight@cur_power^0,w,c
  7085   002CC0  C021  FFD9         	movff	turnRight@mR,fsr2l
  7086   002CC4  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  7087   002CC8  6EDF               	movwf	indf2,c
  7088   002CCA                     
  7089                           ;dc_motor.c: 423:         setMotorPWM(mL);
  7090   002CCA  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  7091   002CCE  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  7092   002CD2  EC82  F017         	call	_setMotorPWM	;wreg free
  7093   002CD6                     
  7094                           ;dc_motor.c: 424:         setMotorPWM(mR);
  7095   002CD6  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  7096   002CDA  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  7097   002CDE  EC82  F017         	call	_setMotorPWM	;wreg free
  7098   002CE2                     
  7099                           ;dc_motor.c: 425:         for (i=0;i<turnRamp;i++) {
  7100   002CE2  0E00               	movlw	0
  7101   002CE4  6E2A               	movwf	(turnRight@i+1)^0,c
  7102   002CE6  0E00               	movlw	0
  7103   002CE8  6E29               	movwf	turnRight@i^0,c
  7104   002CEA  EF80  F016         	goto	l580
  7105   002CEE                     l2603:
  7106                           
  7107                           ;dc_motor.c: 426:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7108   002CEE  0ED0               	movlw	208
  7109   002CF0  6E26               	movwf	??_turnRight^0,c
  7110   002CF2  0ECA               	movlw	202
  7111   002CF4                     u3157:
  7112   002CF4  2EE8               	decfsz	wreg,f,c
  7113   002CF6  D7FE               	bra	u3157
  7114   002CF8  2E26               	decfsz	??_turnRight^0,f,c
  7115   002CFA  D7FC               	bra	u3157
  7116   002CFC                     
  7117                           ;dc_motor.c: 427:         }
  7118   002CFC  4A29               	infsnz	turnRight@i^0,f,c
  7119   002CFE  2A2A               	incf	(turnRight@i+1)^0,f,c
  7120   002D00                     l580:
  7121   002D00  5025               	movf	turnRight@turnRamp^0,w,c
  7122   002D02  6E26               	movwf	??_turnRight^0,c
  7123   002D04  6A27               	clrf	(??_turnRight+1)^0,c
  7124   002D06  5026               	movf	??_turnRight^0,w,c
  7125   002D08  5C29               	subwf	turnRight@i^0,w,c
  7126   002D0A  502A               	movf	(turnRight@i+1)^0,w,c
  7127   002D0C  0A80               	xorlw	128
  7128   002D0E  6E28               	movwf	(??_turnRight+2)^0,c
  7129   002D10  5027               	movf	(??_turnRight+1)^0,w,c
  7130   002D12  0A80               	xorlw	128
  7131   002D14  5828               	subwfb	(??_turnRight+2)^0,w,c
  7132   002D16  A0D8               	btfss	status,0,c
  7133   002D18  EF90  F016         	goto	u1271
  7134   002D1C  EF92  F016         	goto	u1270
  7135   002D20                     u1271:
  7136   002D20  EF77  F016         	goto	l2603
  7137   002D24                     u1270:
  7138   002D24                     
  7139                           ;dc_motor.c: 428:     }
  7140   002D24  062B               	decf	turnRight@cur_power^0,f,c
  7141   002D26  A0D8               	btfss	status,0,c
  7142   002D28  062C               	decf	(turnRight@cur_power+1)^0,f,c
  7143   002D2A  EF42  F016         	goto	l2591
  7144   002D2E                     l583:
  7145   002D2E  0012               	return		;funcret
  7146   002D30                     __end_of_turnRight:
  7147                           	callstack 0
  7148                           
  7149 ;; *************** function _turnLeft *****************
  7150 ;; Defined at:
  7151 ;;		line 368 in file "dc_motor.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7154 ;;		 -> main@motorL(10), 
  7155 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7156 ;;		 -> main@motorR(10), 
  7157 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  7158 ;;  turnDuration    1   35[COMRAM] unsigned char 
  7159 ;;  turnRamp        1   36[COMRAM] unsigned char 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;  cur_power       2   42[COMRAM] int 
  7162 ;;  i               2   40[COMRAM] int 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  1    wreg      void 
  7165 ;; Registers used:
  7166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7172 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7173 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7174 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7175 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7176 ;;Total ram usage:       14 bytes
  7177 ;; Hardware stack levels used: 1
  7178 ;; Hardware stack levels required when called: 7
  7179 ;; This function calls:
  7180 ;;		_setMotorPWM
  7181 ;; This function is called by:
  7182 ;;		_move
  7183 ;;		_returnHome
  7184 ;;		_lostReturnHome
  7185 ;;		_calibration
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text28
  7190   002D30                     __ptext28:
  7191                           	callstack 0
  7192   002D30                     _turnLeft:
  7193                           	callstack 22
  7194   002D30                     
  7195                           ;dc_motor.c: 368: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 369: {;dc_motor.c: 370:     mL->dire
      +                          ction = 0;
  7196   002D30  EE20 F001          	lfsr	2,1
  7197   002D34  501F               	movf	turnLeft@mL^0,w,c
  7198   002D36  26D9               	addwf	fsr2l,f,c
  7199   002D38  5020               	movf	(turnLeft@mL+1)^0,w,c
  7200   002D3A  22DA               	addwfc	fsr2h,f,c
  7201   002D3C  6ADF               	clrf	indf2,c
  7202                           
  7203                           ;dc_motor.c: 371:     mR->direction = 1;
  7204   002D3E  EE20 F001          	lfsr	2,1
  7205   002D42  5021               	movf	turnLeft@mR^0,w,c
  7206   002D44  26D9               	addwf	fsr2l,f,c
  7207   002D46  5022               	movf	(turnLeft@mR+1)^0,w,c
  7208   002D48  22DA               	addwfc	fsr2h,f,c
  7209   002D4A  0E01               	movlw	1
  7210   002D4C  6EDF               	movwf	indf2,c
  7211   002D4E                     
  7212                           ;dc_motor.c: 372:     int i;;dc_motor.c: 373:     int cur_power;;dc_motor.c: 374:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  7213   002D4E  0E00               	movlw	0
  7214   002D50  6E2C               	movwf	(turnLeft@cur_power+1)^0,c
  7215   002D52  0E01               	movlw	1
  7216   002D54  6E2B               	movwf	turnLeft@cur_power^0,c
  7217   002D56  EFF6  F016         	goto	l2629
  7218   002D5A                     l2615:
  7219                           
  7220                           ;dc_motor.c: 375:         mL->power = cur_power+mL->compensation;
  7221   002D5A  EE20 F009          	lfsr	2,9
  7222   002D5E  501F               	movf	turnLeft@mL^0,w,c
  7223   002D60  26D9               	addwf	fsr2l,f,c
  7224   002D62  5020               	movf	(turnLeft@mL+1)^0,w,c
  7225   002D64  22DA               	addwfc	fsr2h,f,c
  7226   002D66  50DF               	movf	indf2,w,c
  7227   002D68  242B               	addwf	turnLeft@cur_power^0,w,c
  7228   002D6A  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  7229   002D6E  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  7230   002D72  6EDF               	movwf	indf2,c
  7231                           
  7232                           ;dc_motor.c: 376:         mR->power = cur_power+mR->compensation;
  7233   002D74  EE20 F009          	lfsr	2,9
  7234   002D78  5021               	movf	turnLeft@mR^0,w,c
  7235   002D7A  26D9               	addwf	fsr2l,f,c
  7236   002D7C  5022               	movf	(turnLeft@mR+1)^0,w,c
  7237   002D7E  22DA               	addwfc	fsr2h,f,c
  7238   002D80  50DF               	movf	indf2,w,c
  7239   002D82  242B               	addwf	turnLeft@cur_power^0,w,c
  7240   002D84  C021  FFD9         	movff	turnLeft@mR,fsr2l
  7241   002D88  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  7242   002D8C  6EDF               	movwf	indf2,c
  7243   002D8E                     
  7244                           ;dc_motor.c: 377:         setMotorPWM(mL);
  7245   002D8E  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  7246   002D92  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7247   002D96  EC82  F017         	call	_setMotorPWM	;wreg free
  7248   002D9A                     
  7249                           ;dc_motor.c: 378:         setMotorPWM(mR);
  7250   002D9A  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  7251   002D9E  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7252   002DA2  EC82  F017         	call	_setMotorPWM	;wreg free
  7253   002DA6                     
  7254                           ;dc_motor.c: 379:         for (i=0;i<turnRamp;i++) {
  7255   002DA6  0E00               	movlw	0
  7256   002DA8  6E2A               	movwf	(turnLeft@i+1)^0,c
  7257   002DAA  0E00               	movlw	0
  7258   002DAC  6E29               	movwf	turnLeft@i^0,c
  7259   002DAE  EFE2  F016         	goto	l554
  7260   002DB2                     l2623:
  7261                           
  7262                           ;dc_motor.c: 380:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7263   002DB2  0ED0               	movlw	208
  7264   002DB4  6E26               	movwf	??_turnLeft^0,c
  7265   002DB6  0ECA               	movlw	202
  7266   002DB8                     u3167:
  7267   002DB8  2EE8               	decfsz	wreg,f,c
  7268   002DBA  D7FE               	bra	u3167
  7269   002DBC  2E26               	decfsz	??_turnLeft^0,f,c
  7270   002DBE  D7FC               	bra	u3167
  7271   002DC0                     
  7272                           ;dc_motor.c: 381:         }
  7273   002DC0  4A29               	infsnz	turnLeft@i^0,f,c
  7274   002DC2  2A2A               	incf	(turnLeft@i+1)^0,f,c
  7275   002DC4                     l554:
  7276   002DC4  5025               	movf	turnLeft@turnRamp^0,w,c
  7277   002DC6  6E26               	movwf	??_turnLeft^0,c
  7278   002DC8  6A27               	clrf	(??_turnLeft+1)^0,c
  7279   002DCA  5026               	movf	??_turnLeft^0,w,c
  7280   002DCC  5C29               	subwf	turnLeft@i^0,w,c
  7281   002DCE  502A               	movf	(turnLeft@i+1)^0,w,c
  7282   002DD0  0A80               	xorlw	128
  7283   002DD2  6E28               	movwf	(??_turnLeft+2)^0,c
  7284   002DD4  5027               	movf	(??_turnLeft+1)^0,w,c
  7285   002DD6  0A80               	xorlw	128
  7286   002DD8  5828               	subwfb	(??_turnLeft+2)^0,w,c
  7287   002DDA  A0D8               	btfss	status,0,c
  7288   002DDC  EFF2  F016         	goto	u1281
  7289   002DE0  EFF4  F016         	goto	u1280
  7290   002DE4                     u1281:
  7291   002DE4  EFD9  F016         	goto	l2623
  7292   002DE8                     u1280:
  7293   002DE8                     
  7294                           ;dc_motor.c: 382:     }
  7295   002DE8  4A2B               	infsnz	turnLeft@cur_power^0,f,c
  7296   002DEA  2A2C               	incf	(turnLeft@cur_power+1)^0,f,c
  7297   002DEC                     l2629:
  7298   002DEC  5023               	movf	turnLeft@turnSpeed^0,w,c
  7299   002DEE  6E26               	movwf	??_turnLeft^0,c
  7300   002DF0  6A27               	clrf	(??_turnLeft+1)^0,c
  7301   002DF2  502B               	movf	turnLeft@cur_power^0,w,c
  7302   002DF4  5C26               	subwf	??_turnLeft^0,w,c
  7303   002DF6  5027               	movf	(??_turnLeft+1)^0,w,c
  7304   002DF8  0A80               	xorlw	128
  7305   002DFA  6E28               	movwf	(??_turnLeft+2)^0,c
  7306   002DFC  502C               	movf	(turnLeft@cur_power+1)^0,w,c
  7307   002DFE  0A80               	xorlw	128
  7308   002E00  5828               	subwfb	(??_turnLeft+2)^0,w,c
  7309   002E02  B0D8               	btfsc	status,0,c
  7310   002E04  EF06  F017         	goto	u1291
  7311   002E08  EF08  F017         	goto	u1290
  7312   002E0C                     u1291:
  7313   002E0C  EFAD  F016         	goto	l2615
  7314   002E10                     u1290:
  7315   002E10                     
  7316                           ;dc_motor.c: 384:     for (i=0;i<turnDuration;i++) {
  7317   002E10  0E00               	movlw	0
  7318   002E12  6E2A               	movwf	(turnLeft@i+1)^0,c
  7319   002E14  0E00               	movlw	0
  7320   002E16  6E29               	movwf	turnLeft@i^0,c
  7321   002E18  EF17  F017         	goto	l558
  7322   002E1C                     l2633:
  7323                           
  7324                           ;dc_motor.c: 385:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7325   002E1C  0ED0               	movlw	208
  7326   002E1E  6E26               	movwf	??_turnLeft^0,c
  7327   002E20  0ECA               	movlw	202
  7328   002E22                     u3177:
  7329   002E22  2EE8               	decfsz	wreg,f,c
  7330   002E24  D7FE               	bra	u3177
  7331   002E26  2E26               	decfsz	??_turnLeft^0,f,c
  7332   002E28  D7FC               	bra	u3177
  7333   002E2A                     
  7334                           ;dc_motor.c: 386:         }
  7335   002E2A  4A29               	infsnz	turnLeft@i^0,f,c
  7336   002E2C  2A2A               	incf	(turnLeft@i+1)^0,f,c
  7337   002E2E                     l558:
  7338   002E2E  5024               	movf	turnLeft@turnDuration^0,w,c
  7339   002E30  6E26               	movwf	??_turnLeft^0,c
  7340   002E32  6A27               	clrf	(??_turnLeft+1)^0,c
  7341   002E34  5026               	movf	??_turnLeft^0,w,c
  7342   002E36  5C29               	subwf	turnLeft@i^0,w,c
  7343   002E38  502A               	movf	(turnLeft@i+1)^0,w,c
  7344   002E3A  0A80               	xorlw	128
  7345   002E3C  6E28               	movwf	(??_turnLeft+2)^0,c
  7346   002E3E  5027               	movf	(??_turnLeft+1)^0,w,c
  7347   002E40  0A80               	xorlw	128
  7348   002E42  5828               	subwfb	(??_turnLeft+2)^0,w,c
  7349   002E44  A0D8               	btfss	status,0,c
  7350   002E46  EF27  F017         	goto	u1301
  7351   002E4A  EF29  F017         	goto	u1300
  7352   002E4E                     u1301:
  7353   002E4E  EF0E  F017         	goto	l2633
  7354   002E52                     u1300:
  7355   002E52                     
  7356                           ;dc_motor.c: 388:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  7357   002E52  C023  F02B         	movff	turnLeft@turnSpeed,turnLeft@cur_power
  7358   002E56  6A2C               	clrf	(turnLeft@cur_power+1)^0,c
  7359   002E58                     l2637:
  7360   002E58  BE2C               	btfsc	(turnLeft@cur_power+1)^0,7,c
  7361   002E5A  EF33  F017         	goto	u1310
  7362   002E5E  EF31  F017         	goto	u1311
  7363   002E62                     u1311:
  7364   002E62  EF35  F017         	goto	l2641
  7365   002E66                     u1310:
  7366   002E66  EF81  F017         	goto	l566
  7367   002E6A                     l2641:
  7368                           
  7369                           ;dc_motor.c: 389:         mL->power = cur_power+mL->compensation;
  7370   002E6A  EE20 F009          	lfsr	2,9
  7371   002E6E  501F               	movf	turnLeft@mL^0,w,c
  7372   002E70  26D9               	addwf	fsr2l,f,c
  7373   002E72  5020               	movf	(turnLeft@mL+1)^0,w,c
  7374   002E74  22DA               	addwfc	fsr2h,f,c
  7375   002E76  50DF               	movf	indf2,w,c
  7376   002E78  242B               	addwf	turnLeft@cur_power^0,w,c
  7377   002E7A  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  7378   002E7E  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  7379   002E82  6EDF               	movwf	indf2,c
  7380                           
  7381                           ;dc_motor.c: 390:         mR->power = cur_power+mR->compensation;
  7382   002E84  EE20 F009          	lfsr	2,9
  7383   002E88  5021               	movf	turnLeft@mR^0,w,c
  7384   002E8A  26D9               	addwf	fsr2l,f,c
  7385   002E8C  5022               	movf	(turnLeft@mR+1)^0,w,c
  7386   002E8E  22DA               	addwfc	fsr2h,f,c
  7387   002E90  50DF               	movf	indf2,w,c
  7388   002E92  242B               	addwf	turnLeft@cur_power^0,w,c
  7389   002E94  C021  FFD9         	movff	turnLeft@mR,fsr2l
  7390   002E98  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  7391   002E9C  6EDF               	movwf	indf2,c
  7392   002E9E                     
  7393                           ;dc_motor.c: 391:         setMotorPWM(mL);
  7394   002E9E  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  7395   002EA2  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7396   002EA6  EC82  F017         	call	_setMotorPWM	;wreg free
  7397   002EAA                     
  7398                           ;dc_motor.c: 392:         setMotorPWM(mR);
  7399   002EAA  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  7400   002EAE  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7401   002EB2  EC82  F017         	call	_setMotorPWM	;wreg free
  7402   002EB6                     
  7403                           ;dc_motor.c: 393:         for (i=0;i<turnRamp;i++) {
  7404   002EB6  0E00               	movlw	0
  7405   002EB8  6E2A               	movwf	(turnLeft@i+1)^0,c
  7406   002EBA  0E00               	movlw	0
  7407   002EBC  6E29               	movwf	turnLeft@i^0,c
  7408   002EBE  EF6A  F017         	goto	l563
  7409   002EC2                     l2649:
  7410                           
  7411                           ;dc_motor.c: 394:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7412   002EC2  0ED0               	movlw	208
  7413   002EC4  6E26               	movwf	??_turnLeft^0,c
  7414   002EC6  0ECA               	movlw	202
  7415   002EC8                     u3187:
  7416   002EC8  2EE8               	decfsz	wreg,f,c
  7417   002ECA  D7FE               	bra	u3187
  7418   002ECC  2E26               	decfsz	??_turnLeft^0,f,c
  7419   002ECE  D7FC               	bra	u3187
  7420   002ED0                     
  7421                           ;dc_motor.c: 395:         }
  7422   002ED0  4A29               	infsnz	turnLeft@i^0,f,c
  7423   002ED2  2A2A               	incf	(turnLeft@i+1)^0,f,c
  7424   002ED4                     l563:
  7425   002ED4  5025               	movf	turnLeft@turnRamp^0,w,c
  7426   002ED6  6E26               	movwf	??_turnLeft^0,c
  7427   002ED8  6A27               	clrf	(??_turnLeft+1)^0,c
  7428   002EDA  5026               	movf	??_turnLeft^0,w,c
  7429   002EDC  5C29               	subwf	turnLeft@i^0,w,c
  7430   002EDE  502A               	movf	(turnLeft@i+1)^0,w,c
  7431   002EE0  0A80               	xorlw	128
  7432   002EE2  6E28               	movwf	(??_turnLeft+2)^0,c
  7433   002EE4  5027               	movf	(??_turnLeft+1)^0,w,c
  7434   002EE6  0A80               	xorlw	128
  7435   002EE8  5828               	subwfb	(??_turnLeft+2)^0,w,c
  7436   002EEA  A0D8               	btfss	status,0,c
  7437   002EEC  EF7A  F017         	goto	u1321
  7438   002EF0  EF7C  F017         	goto	u1320
  7439   002EF4                     u1321:
  7440   002EF4  EF61  F017         	goto	l2649
  7441   002EF8                     u1320:
  7442   002EF8                     
  7443                           ;dc_motor.c: 396:     }
  7444   002EF8  062B               	decf	turnLeft@cur_power^0,f,c
  7445   002EFA  A0D8               	btfss	status,0,c
  7446   002EFC  062C               	decf	(turnLeft@cur_power+1)^0,f,c
  7447   002EFE  EF2C  F017         	goto	l2637
  7448   002F02                     l566:
  7449   002F02  0012               	return		;funcret
  7450   002F04                     __end_of_turnLeft:
  7451                           	callstack 0
  7452                           
  7453 ;; *************** function _setMotorPWM *****************
  7454 ;; Defined at:
  7455 ;;		line 68 in file "dc_motor.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  m               2   24[COMRAM] PTR struct DC_motor
  7458 ;;		 -> main@motorR(10), main@motorL(10), 
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;  negDuty         1   29[COMRAM] unsigned char 
  7461 ;;  posDuty         1   28[COMRAM] unsigned char 
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  1    wreg      void 
  7464 ;; Registers used:
  7465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7475 ;;Total ram usage:        6 bytes
  7476 ;; Hardware stack levels used: 1
  7477 ;; Hardware stack levels required when called: 6
  7478 ;; This function calls:
  7479 ;;		___lwdiv
  7480 ;;		___wmul
  7481 ;; This function is called by:
  7482 ;;		_stop
  7483 ;;		_turnLeft
  7484 ;;		_turnRight
  7485 ;;		_fullSpeedAhead
  7486 ;;		_reverseOneSquare
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           	psect	text29
  7491   002F04                     __ptext29:
  7492                           	callstack 0
  7493   002F04                     _setMotorPWM:
  7494                           	callstack 23
  7495   002F04                     
  7496                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  7497   002F04  EE20 F002          	lfsr	2,2
  7498   002F08  5019               	movf	setMotorPWM@m^0,w,c
  7499   002F0A  26D9               	addwf	fsr2l,f,c
  7500   002F0C  501A               	movf	(setMotorPWM@m+1)^0,w,c
  7501   002F0E  22DA               	addwfc	fsr2h,f,c
  7502   002F10  50DF               	movf	indf2,w,c
  7503   002F12  B4D8               	btfsc	status,2,c
  7504   002F14  EF8E  F017         	goto	u1151
  7505   002F18  EF90  F017         	goto	u1150
  7506   002F1C                     u1151:
  7507   002F1C  EFC4  F017         	goto	l2495
  7508   002F20                     u1150:
  7509   002F20                     
  7510                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7511   002F20  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  7512   002F24  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7513   002F28  50DF               	movf	indf2,w,c
  7514   002F2A  6E1B               	movwf	??_setMotorPWM^0,c
  7515   002F2C  501B               	movf	??_setMotorPWM^0,w,c
  7516   002F2E  6E0C               	movwf	___wmul@multiplier^0,c
  7517   002F30  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  7518   002F32  EE20 F003          	lfsr	2,3
  7519   002F36  5019               	movf	setMotorPWM@m^0,w,c
  7520   002F38  26D9               	addwf	fsr2l,f,c
  7521   002F3A  501A               	movf	(setMotorPWM@m+1)^0,w,c
  7522   002F3C  22DA               	addwfc	fsr2h,f,c
  7523   002F3E  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  7524   002F42  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  7525   002F46  ECF3  F01C         	call	___wmul	;wreg free
  7526   002F4A  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  7527   002F4E  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  7528   002F52  0E00               	movlw	0
  7529   002F54  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  7530   002F56  0E64               	movlw	100
  7531   002F58  6E14               	movwf	___lwdiv@divisor^0,c
  7532   002F5A  EC7D  F01B         	call	___lwdiv	;wreg free
  7533   002F5E  EE20 F003          	lfsr	2,3
  7534   002F62  5019               	movf	setMotorPWM@m^0,w,c
  7535   002F64  26D9               	addwf	fsr2l,f,c
  7536   002F66  501A               	movf	(setMotorPWM@m+1)^0,w,c
  7537   002F68  22DA               	addwfc	fsr2h,f,c
  7538   002F6A  50DF               	movf	indf2,w,c
  7539   002F6C  6E1C               	movwf	(??_setMotorPWM+1)^0,c
  7540   002F6E  5012               	movf	?___lwdiv^0,w,c
  7541   002F70  5C1C               	subwf	(??_setMotorPWM+1)^0,w,c
  7542   002F72  6E1D               	movwf	setMotorPWM@posDuty^0,c
  7543   002F74                     
  7544                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  7545   002F74  EE20 F003          	lfsr	2,3
  7546   002F78  5019               	movf	setMotorPWM@m^0,w,c
  7547   002F7A  26D9               	addwf	fsr2l,f,c
  7548   002F7C  501A               	movf	(setMotorPWM@m+1)^0,w,c
  7549   002F7E  22DA               	addwfc	fsr2h,f,c
  7550   002F80  50DF               	movf	indf2,w,c
  7551   002F82  6E1E               	movwf	setMotorPWM@negDuty^0,c
  7552                           
  7553                           ;dc_motor.c: 75:     }
  7554   002F84  EFE7  F017         	goto	l2499
  7555   002F88                     l2495:
  7556                           
  7557                           ;dc_motor.c: 77:         posDuty=0;
  7558   002F88  0E00               	movlw	0
  7559   002F8A  6E1D               	movwf	setMotorPWM@posDuty^0,c
  7560   002F8C                     
  7561                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7562   002F8C  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  7563   002F90  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7564   002F94  50DF               	movf	indf2,w,c
  7565   002F96  6E1B               	movwf	??_setMotorPWM^0,c
  7566   002F98  501B               	movf	??_setMotorPWM^0,w,c
  7567   002F9A  6E0C               	movwf	___wmul@multiplier^0,c
  7568   002F9C  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  7569   002F9E  EE20 F003          	lfsr	2,3
  7570   002FA2  5019               	movf	setMotorPWM@m^0,w,c
  7571   002FA4  26D9               	addwf	fsr2l,f,c
  7572   002FA6  501A               	movf	(setMotorPWM@m+1)^0,w,c
  7573   002FA8  22DA               	addwfc	fsr2h,f,c
  7574   002FAA  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  7575   002FAE  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  7576   002FB2  ECF3  F01C         	call	___wmul	;wreg free
  7577   002FB6  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  7578   002FBA  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  7579   002FBE  0E00               	movlw	0
  7580   002FC0  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  7581   002FC2  0E64               	movlw	100
  7582   002FC4  6E14               	movwf	___lwdiv@divisor^0,c
  7583   002FC6  EC7D  F01B         	call	___lwdiv	;wreg free
  7584   002FCA  5012               	movf	?___lwdiv^0,w,c
  7585   002FCC  6E1E               	movwf	setMotorPWM@negDuty^0,c
  7586   002FCE                     l2499:
  7587                           
  7588                           ;dc_motor.c: 81:     if (m->direction) {
  7589   002FCE  EE20 F001          	lfsr	2,1
  7590   002FD2  5019               	movf	setMotorPWM@m^0,w,c
  7591   002FD4  26D9               	addwf	fsr2l,f,c
  7592   002FD6  501A               	movf	(setMotorPWM@m+1)^0,w,c
  7593   002FD8  22DA               	addwfc	fsr2h,f,c
  7594   002FDA  50DF               	movf	indf2,w,c
  7595   002FDC  B4D8               	btfsc	status,2,c
  7596   002FDE  EFF3  F017         	goto	u1161
  7597   002FE2  EFF5  F017         	goto	u1160
  7598   002FE6                     u1161:
  7599   002FE6  EF17  F018         	goto	l2503
  7600   002FEA                     u1160:
  7601   002FEA                     
  7602                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  7603   002FEA  EE20 F005          	lfsr	2,5
  7604   002FEE  5019               	movf	setMotorPWM@m^0,w,c
  7605   002FF0  26D9               	addwf	fsr2l,f,c
  7606   002FF2  501A               	movf	(setMotorPWM@m+1)^0,w,c
  7607   002FF4  22DA               	addwfc	fsr2h,f,c
  7608   002FF6  CFDE F01B          	movff	postinc2,??_setMotorPWM
  7609   002FFA  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  7610   002FFE  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  7611   003002  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7612   003006  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  7613                           
  7614                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  7615   00300A  EE20 F007          	lfsr	2,7
  7616   00300E  5019               	movf	setMotorPWM@m^0,w,c
  7617   003010  26D9               	addwf	fsr2l,f,c
  7618   003012  501A               	movf	(setMotorPWM@m+1)^0,w,c
  7619   003014  22DA               	addwfc	fsr2h,f,c
  7620   003016  CFDE F01B          	movff	postinc2,??_setMotorPWM
  7621   00301A  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  7622   00301E  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  7623   003022  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7624   003026  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  7625                           
  7626                           ;dc_motor.c: 84:     } else {
  7627   00302A  EF37  F018         	goto	l472
  7628   00302E                     l2503:
  7629                           
  7630                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  7631   00302E  EE20 F005          	lfsr	2,5
  7632   003032  5019               	movf	setMotorPWM@m^0,w,c
  7633   003034  26D9               	addwf	fsr2l,f,c
  7634   003036  501A               	movf	(setMotorPWM@m+1)^0,w,c
  7635   003038  22DA               	addwfc	fsr2h,f,c
  7636   00303A  CFDE F01B          	movff	postinc2,??_setMotorPWM
  7637   00303E  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  7638   003042  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  7639   003046  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7640   00304A  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  7641                           
  7642                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  7643   00304E  EE20 F007          	lfsr	2,7
  7644   003052  5019               	movf	setMotorPWM@m^0,w,c
  7645   003054  26D9               	addwf	fsr2l,f,c
  7646   003056  501A               	movf	(setMotorPWM@m+1)^0,w,c
  7647   003058  22DA               	addwfc	fsr2h,f,c
  7648   00305A  CFDE F01B          	movff	postinc2,??_setMotorPWM
  7649   00305E  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  7650   003062  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  7651   003066  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7652   00306A  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  7653   00306E                     l472:
  7654   00306E  0012               	return		;funcret
  7655   003070                     __end_of_setMotorPWM:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function ___wmul *****************
  7659 ;; Defined at:
  7660 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  multiplier      2   11[COMRAM] unsigned int 
  7663 ;;  multiplicand    2   13[COMRAM] unsigned int 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  product         2   15[COMRAM] unsigned int 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  2   11[COMRAM] unsigned int 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2, status,0, prodl, prodh
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;Total ram usage:        6 bytes
  7680 ;; Hardware stack levels used: 1
  7681 ;; Hardware stack levels required when called: 5
  7682 ;; This function calls:
  7683 ;;		Nothing
  7684 ;; This function is called by:
  7685 ;;		_setMotorPWM
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           	psect	text30
  7690   0039E6                     __ptext30:
  7691                           	callstack 0
  7692   0039E6                     ___wmul:
  7693                           	callstack 23
  7694   0039E6  500C               	movf	___wmul@multiplier^0,w,c
  7695   0039E8  020E               	mulwf	___wmul@multiplicand^0,c
  7696   0039EA  CFF3 F010          	movff	prodl,___wmul@product
  7697   0039EE  CFF4 F011          	movff	prodh,___wmul@product+1
  7698   0039F2  500C               	movf	___wmul@multiplier^0,w,c
  7699   0039F4  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  7700   0039F6  50F3               	movf	243,w,c
  7701   0039F8  2611               	addwf	(___wmul@product+1)^0,f,c
  7702   0039FA  500D               	movf	(___wmul@multiplier+1)^0,w,c
  7703   0039FC  020E               	mulwf	___wmul@multiplicand^0,c
  7704   0039FE  50F3               	movf	243,w,c
  7705   003A00  2611               	addwf	(___wmul@product+1)^0,f,c
  7706   003A02  C010  F00C         	movff	___wmul@product,?___wmul
  7707   003A06  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  7708   003A0A  0012               	return		;funcret
  7709   003A0C                     __end_of___wmul:
  7710                           	callstack 0
  7711                           
  7712 ;; *************** function ___lwdiv *****************
  7713 ;; Defined at:
  7714 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  dividend        2   17[COMRAM] unsigned int 
  7717 ;;  divisor         2   19[COMRAM] unsigned int 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;  quotient        2   21[COMRAM] unsigned int 
  7720 ;;  counter         1   23[COMRAM] unsigned char 
  7721 ;; Return value:  Size  Location     Type
  7722 ;;                  2   17[COMRAM] unsigned int 
  7723 ;; Registers used:
  7724 ;;		wreg, status,2, status,0
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7731 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7733 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7734 ;;Total ram usage:        7 bytes
  7735 ;; Hardware stack levels used: 1
  7736 ;; Hardware stack levels required when called: 5
  7737 ;; This function calls:
  7738 ;;		Nothing
  7739 ;; This function is called by:
  7740 ;;		_setMotorPWM
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text31
  7745   0036FA                     __ptext31:
  7746                           	callstack 0
  7747   0036FA                     ___lwdiv:
  7748                           	callstack 23
  7749   0036FA  0E00               	movlw	0
  7750   0036FC  6E17               	movwf	(___lwdiv@quotient+1)^0,c
  7751   0036FE  0E00               	movlw	0
  7752   003700  6E16               	movwf	___lwdiv@quotient^0,c
  7753   003702  5014               	movf	___lwdiv@divisor^0,w,c
  7754   003704  1015               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7755   003706  B4D8               	btfsc	status,2,c
  7756   003708  EF88  F01B         	goto	u1121
  7757   00370C  EF8A  F01B         	goto	u1120
  7758   003710                     u1121:
  7759   003710  EFB2  F01B         	goto	l1135
  7760   003714                     u1120:
  7761   003714  0E01               	movlw	1
  7762   003716  6E18               	movwf	___lwdiv@counter^0,c
  7763   003718  EF92  F01B         	goto	l2463
  7764   00371C                     l2461:
  7765   00371C  90D8               	bcf	status,0,c
  7766   00371E  3614               	rlcf	___lwdiv@divisor^0,f,c
  7767   003720  3615               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7768   003722  2A18               	incf	___lwdiv@counter^0,f,c
  7769   003724                     l2463:
  7770   003724  AE15               	btfss	(___lwdiv@divisor+1)^0,7,c
  7771   003726  EF97  F01B         	goto	u1131
  7772   00372A  EF99  F01B         	goto	u1130
  7773   00372E                     u1131:
  7774   00372E  EF8E  F01B         	goto	l2461
  7775   003732                     u1130:
  7776   003732                     l2465:
  7777   003732  90D8               	bcf	status,0,c
  7778   003734  3616               	rlcf	___lwdiv@quotient^0,f,c
  7779   003736  3617               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7780   003738  5014               	movf	___lwdiv@divisor^0,w,c
  7781   00373A  5C12               	subwf	___lwdiv@dividend^0,w,c
  7782   00373C  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  7783   00373E  5813               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7784   003740  A0D8               	btfss	status,0,c
  7785   003742  EFA5  F01B         	goto	u1141
  7786   003746  EFA7  F01B         	goto	u1140
  7787   00374A                     u1141:
  7788   00374A  EFAC  F01B         	goto	l2473
  7789   00374E                     u1140:
  7790   00374E  5014               	movf	___lwdiv@divisor^0,w,c
  7791   003750  5E12               	subwf	___lwdiv@dividend^0,f,c
  7792   003752  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  7793   003754  5A13               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7794   003756  8016               	bsf	___lwdiv@quotient^0,0,c
  7795   003758                     l2473:
  7796   003758  90D8               	bcf	status,0,c
  7797   00375A  3215               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7798   00375C  3214               	rrcf	___lwdiv@divisor^0,f,c
  7799   00375E  2E18               	decfsz	___lwdiv@counter^0,f,c
  7800   003760  EF99  F01B         	goto	l2465
  7801   003764                     l1135:
  7802   003764  C016  F012         	movff	___lwdiv@quotient,?___lwdiv
  7803   003768  C017  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7804   00376C  0012               	return		;funcret
  7805   00376E                     __end_of___lwdiv:
  7806                           	callstack 0
  7807                           
  7808 ;; *************** function _batteryLevel *****************
  7809 ;; Defined at:
  7810 ;;		line 6 in file "battery.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  batteryQuart    1   20[COMRAM] unsigned char 
  7815 ;;  batteryVolta    1   19[COMRAM] unsigned char 
  7816 ;; Return value:  Size  Location     Type
  7817 ;;                  1    wreg      void 
  7818 ;; Registers used:
  7819 ;;		wreg, status,2, status,0, cstack
  7820 ;; Tracked objects:
  7821 ;;		On entry : 0/0
  7822 ;;		On exit  : 0/0
  7823 ;;		Unchanged: 0/0
  7824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7829 ;;Total ram usage:        2 bytes
  7830 ;; Hardware stack levels used: 1
  7831 ;; Hardware stack levels required when called: 6
  7832 ;; This function calls:
  7833 ;;		_ADC_getval
  7834 ;;		_ADC_init
  7835 ;;		___awdiv
  7836 ;; This function is called by:
  7837 ;;		_main
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text32
  7842   003846                     __ptext32:
  7843                           	callstack 0
  7844   003846                     _batteryLevel:
  7845                           	callstack 24
  7846   003846                     
  7847                           ;battery.c: 7:     ADC_init();
  7848   003846  EC7D  F01D         	call	_ADC_init	;wreg free
  7849                           
  7850                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
  7851   00384A  EC8A  F01D         	call	_ADC_getval	;wreg free
  7852   00384E  6E14               	movwf	batteryLevel@batteryVoltage^0,c
  7853   003850                     
  7854                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
  7855   003850  C014  F00C         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
  7856   003854  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  7857   003856  0E00               	movlw	0
  7858   003858  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  7859   00385A  0E18               	movlw	24
  7860   00385C  6E0E               	movwf	___awdiv@divisor^0,c
  7861   00385E  EC59  F01A         	call	___awdiv	;wreg free
  7862   003862  500C               	movf	?___awdiv^0,w,c
  7863   003864  6E15               	movwf	batteryLevel@batteryQuarter^0,c
  7864   003866                     
  7865                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
  7866   003866  A215               	btfss	batteryLevel@batteryQuarter^0,1,c
  7867   003868  EF38  F01C         	goto	u1651
  7868   00386C  EF3A  F01C         	goto	u1650
  7869   003870                     u1651:
  7870   003870  EF3D  F01C         	goto	l386
  7871   003874                     u1650:
  7872   003874  8E7C               	bsf	124,7,c	;volatile
  7873   003876  EF3E  F01C         	goto	l387
  7874   00387A                     l386:
  7875   00387A  9E7C               	bcf	124,7,c	;volatile
  7876   00387C                     l387:
  7877                           
  7878                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
  7879   00387C  A015               	btfss	batteryLevel@batteryQuarter^0,0,c
  7880   00387E  EF43  F01C         	goto	u1661
  7881   003882  EF45  F01C         	goto	u1660
  7882   003886                     u1661:
  7883   003886  EF48  F01C         	goto	l388
  7884   00388A                     u1660:
  7885   00388A  8680               	bsf	128,3,c	;volatile
  7886   00388C  EF49  F01C         	goto	l390
  7887   003890                     l388:
  7888   003890  9680               	bcf	128,3,c	;volatile
  7889   003892                     l390:
  7890   003892  0012               	return		;funcret
  7891   003894                     __end_of_batteryLevel:
  7892                           	callstack 0
  7893                           
  7894 ;; *************** function ___awdiv *****************
  7895 ;; Defined at:
  7896 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;  dividend        2   11[COMRAM] int 
  7899 ;;  divisor         2   13[COMRAM] int 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;  quotient        2   17[COMRAM] int 
  7902 ;;  sign            1   16[COMRAM] unsigned char 
  7903 ;;  counter         1   15[COMRAM] unsigned char 
  7904 ;; Return value:  Size  Location     Type
  7905 ;;                  2   11[COMRAM] int 
  7906 ;; Registers used:
  7907 ;;		wreg, status,2, status,0
  7908 ;; Tracked objects:
  7909 ;;		On entry : 0/0
  7910 ;;		On exit  : 0/0
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7914 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7916 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7917 ;;Total ram usage:        8 bytes
  7918 ;; Hardware stack levels used: 1
  7919 ;; Hardware stack levels required when called: 5
  7920 ;; This function calls:
  7921 ;;		Nothing
  7922 ;; This function is called by:
  7923 ;;		_batteryLevel
  7924 ;; This function uses a non-reentrant model
  7925 ;;
  7926                           
  7927                           	psect	text33
  7928   0034B2                     __ptext33:
  7929                           	callstack 0
  7930   0034B2                     ___awdiv:
  7931                           	callstack 24
  7932   0034B2  0E00               	movlw	0
  7933   0034B4  6E11               	movwf	___awdiv@sign^0,c
  7934   0034B6  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  7935   0034B8  EF62  F01A         	goto	u1590
  7936   0034BC  EF60  F01A         	goto	u1591
  7937   0034C0                     u1591:
  7938   0034C0  EF68  F01A         	goto	l2953
  7939   0034C4                     u1590:
  7940   0034C4  6C0E               	negf	___awdiv@divisor^0,c
  7941   0034C6  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  7942   0034C8  B0D8               	btfsc	status,0,c
  7943   0034CA  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  7944   0034CC  0E01               	movlw	1
  7945   0034CE  6E11               	movwf	___awdiv@sign^0,c
  7946   0034D0                     l2953:
  7947   0034D0  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  7948   0034D2  EF6F  F01A         	goto	u1600
  7949   0034D6  EF6D  F01A         	goto	u1601
  7950   0034DA                     u1601:
  7951   0034DA  EF75  F01A         	goto	l2959
  7952   0034DE                     u1600:
  7953   0034DE  6C0C               	negf	___awdiv@dividend^0,c
  7954   0034E0  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  7955   0034E2  B0D8               	btfsc	status,0,c
  7956   0034E4  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  7957   0034E6  0E01               	movlw	1
  7958   0034E8  1A11               	xorwf	___awdiv@sign^0,f,c
  7959   0034EA                     l2959:
  7960   0034EA  0E00               	movlw	0
  7961   0034EC  6E13               	movwf	(___awdiv@quotient+1)^0,c
  7962   0034EE  0E00               	movlw	0
  7963   0034F0  6E12               	movwf	___awdiv@quotient^0,c
  7964   0034F2  500E               	movf	___awdiv@divisor^0,w,c
  7965   0034F4  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  7966   0034F6  B4D8               	btfsc	status,2,c
  7967   0034F8  EF80  F01A         	goto	u1611
  7968   0034FC  EF82  F01A         	goto	u1610
  7969   003500                     u1611:
  7970   003500  EFAA  F01A         	goto	l2981
  7971   003504                     u1610:
  7972   003504  0E01               	movlw	1
  7973   003506  6E10               	movwf	___awdiv@counter^0,c
  7974   003508  EF8A  F01A         	goto	l2967
  7975   00350C                     l2965:
  7976   00350C  90D8               	bcf	status,0,c
  7977   00350E  360E               	rlcf	___awdiv@divisor^0,f,c
  7978   003510  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  7979   003512  2A10               	incf	___awdiv@counter^0,f,c
  7980   003514                     l2967:
  7981   003514  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  7982   003516  EF8F  F01A         	goto	u1621
  7983   00351A  EF91  F01A         	goto	u1620
  7984   00351E                     u1621:
  7985   00351E  EF86  F01A         	goto	l2965
  7986   003522                     u1620:
  7987   003522                     l2969:
  7988   003522  90D8               	bcf	status,0,c
  7989   003524  3612               	rlcf	___awdiv@quotient^0,f,c
  7990   003526  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  7991   003528  500E               	movf	___awdiv@divisor^0,w,c
  7992   00352A  5C0C               	subwf	___awdiv@dividend^0,w,c
  7993   00352C  500F               	movf	(___awdiv@divisor+1)^0,w,c
  7994   00352E  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  7995   003530  A0D8               	btfss	status,0,c
  7996   003532  EF9D  F01A         	goto	u1631
  7997   003536  EF9F  F01A         	goto	u1630
  7998   00353A                     u1631:
  7999   00353A  EFA4  F01A         	goto	l2977
  8000   00353E                     u1630:
  8001   00353E  500E               	movf	___awdiv@divisor^0,w,c
  8002   003540  5E0C               	subwf	___awdiv@dividend^0,f,c
  8003   003542  500F               	movf	(___awdiv@divisor+1)^0,w,c
  8004   003544  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  8005   003546  8012               	bsf	___awdiv@quotient^0,0,c
  8006   003548                     l2977:
  8007   003548  90D8               	bcf	status,0,c
  8008   00354A  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  8009   00354C  320E               	rrcf	___awdiv@divisor^0,f,c
  8010   00354E  2E10               	decfsz	___awdiv@counter^0,f,c
  8011   003550  EF91  F01A         	goto	l2969
  8012   003554                     l2981:
  8013   003554  5011               	movf	___awdiv@sign^0,w,c
  8014   003556  B4D8               	btfsc	status,2,c
  8015   003558  EFB0  F01A         	goto	u1641
  8016   00355C  EFB2  F01A         	goto	u1640
  8017   003560                     u1641:
  8018   003560  EFB6  F01A         	goto	l2985
  8019   003564                     u1640:
  8020   003564  6C12               	negf	___awdiv@quotient^0,c
  8021   003566  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  8022   003568  B0D8               	btfsc	status,0,c
  8023   00356A  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  8024   00356C                     l2985:
  8025   00356C  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  8026   003570  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  8027   003574  0012               	return		;funcret
  8028   003576                     __end_of___awdiv:
  8029                           	callstack 0
  8030                           
  8031 ;; *************** function _ADC_init *****************
  8032 ;; Defined at:
  8033 ;;		line 9 in file "ADC.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;		None
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8051 ;;Total ram usage:        0 bytes
  8052 ;; Hardware stack levels used: 1
  8053 ;; Hardware stack levels required when called: 5
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_batteryLevel
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text34
  8062   003AFA                     __ptext34:
  8063                           	callstack 0
  8064   003AFA                     _ADC_init:
  8065                           	callstack 24
  8066   003AFA                     
  8067                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  8068   003AFA  8C86               	bsf	134,6,c	;volatile
  8069                           
  8070                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  8071   003AFC  010E               	movlb	14	; () banked
  8072   003AFE  8DB4               	bsf	180,6,b	;volatile
  8073                           
  8074                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  8075   003B00  010F               	movlb	15	; () banked
  8076   003B02  9958               	bcf	88,4,b	;volatile
  8077   003B04                     
  8078                           ; BSR set to: 15
  8079                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  8080   003B04  0EFC               	movlw	-4
  8081   003B06  1758               	andwf	88,f,b	;volatile
  8082                           
  8083                           ;ADC.c: 17:     ADPCH=0b101110;
  8084   003B08  0E2E               	movlw	46
  8085   003B0A  6F5F               	movwf	95,b	;volatile
  8086   003B0C                     
  8087                           ; BSR set to: 15
  8088                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  8089   003B0C  9460               	bcf	96,2,c	;volatile
  8090   003B0E                     
  8091                           ; BSR set to: 15
  8092                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  8093   003B0E  8860               	bsf	96,4,c	;volatile
  8094   003B10                     
  8095                           ; BSR set to: 15
  8096                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  8097   003B10  8E60               	bsf	96,7,c	;volatile
  8098   003B12                     
  8099                           ; BSR set to: 15
  8100   003B12  0012               	return		;funcret
  8101   003B14                     __end_of_ADC_init:
  8102                           	callstack 0
  8103                           
  8104 ;; *************** function _ADC_getval *****************
  8105 ;; Defined at:
  8106 ;;		line 23 in file "ADC.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;		None
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;  tmpval          1   11[COMRAM] unsigned char 
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  1    wreg      unsigned char 
  8113 ;; Registers used:
  8114 ;;		wreg, status,2
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8123 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8124 ;;Total ram usage:        1 bytes
  8125 ;; Hardware stack levels used: 1
  8126 ;; Hardware stack levels required when called: 5
  8127 ;; This function calls:
  8128 ;;		Nothing
  8129 ;; This function is called by:
  8130 ;;		_batteryLevel
  8131 ;; This function uses a non-reentrant model
  8132 ;;
  8133                           
  8134                           	psect	text35
  8135   003B14                     __ptext35:
  8136                           	callstack 0
  8137   003B14                     _ADC_getval:
  8138                           	callstack 24
  8139   003B14                     
  8140                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  8141   003B14  8060               	bsf	96,0,c	;volatile
  8142   003B16                     l372:
  8143   003B16  B060               	btfsc	96,0,c	;volatile
  8144   003B18  EF90  F01D         	goto	u1401
  8145   003B1C  EF92  F01D         	goto	u1400
  8146   003B20                     u1401:
  8147   003B20  EF8B  F01D         	goto	l372
  8148   003B24                     u1400:
  8149   003B24                     
  8150                           ;ADC.c: 31:     tmpval = ADRESH;
  8151   003B24  CF64 F00C          	movff	3940,ADC_getval@tmpval	;volatile
  8152   003B28                     
  8153                           ;ADC.c: 35:     return tmpval;
  8154   003B28  500C               	movf	ADC_getval@tmpval^0,w,c
  8155   003B2A  0012               	return		;funcret
  8156   003B2C                     __end_of_ADC_getval:
  8157                           	callstack 0
  8158                           
  8159 ;; *************** function _Timer0_init *****************
  8160 ;; Defined at:
  8161 ;;		line 7 in file "timers.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;		None
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;		None
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  1    wreg      void 
  8168 ;; Registers used:
  8169 ;;		wreg, status,2
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8179 ;;Total ram usage:        0 bytes
  8180 ;; Hardware stack levels used: 1
  8181 ;; Hardware stack levels required when called: 5
  8182 ;; This function calls:
  8183 ;;		Nothing
  8184 ;; This function is called by:
  8185 ;;		_main
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189                           	psect	text36
  8190   003A9C                     __ptext36:
  8191                           	callstack 0
  8192   003A9C                     _Timer0_init:
  8193                           	callstack 25
  8194   003A9C                     
  8195                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  8196   003A9C  50D6               	movf	214,w,c	;volatile
  8197   003A9E  0B1F               	andlw	-225
  8198   003AA0  0940               	iorlw	64
  8199   003AA2  6ED6               	movwf	214,c	;volatile
  8200   003AA4                     
  8201                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  8202   003AA4  88D6               	bsf	214,4,c	;volatile
  8203                           
  8204                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
  8205   003AA6  50D6               	movf	214,w,c	;volatile
  8206   003AA8  0BF0               	andlw	-16
  8207   003AAA  090B               	iorlw	11
  8208   003AAC  6ED6               	movwf	214,c	;volatile
  8209   003AAE                     
  8210                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  8211   003AAE  88D5               	bsf	213,4,c	;volatile
  8212                           
  8213                           ;timers.c: 15:     TMR0H=0;
  8214   003AB0  0E00               	movlw	0
  8215   003AB2  6ED4               	movwf	212,c	;volatile
  8216                           
  8217                           ;timers.c: 16:     TMR0L=0;
  8218   003AB4  0E00               	movlw	0
  8219   003AB6  6ED3               	movwf	211,c	;volatile
  8220   003AB8                     
  8221                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  8222   003AB8  8ED5               	bsf	213,7,c	;volatile
  8223   003ABA  0012               	return		;funcret
  8224   003ABC                     __end_of_Timer0_init:
  8225                           	callstack 0
  8226                           
  8227 ;; *************** function _Interrupts_init *****************
  8228 ;; Defined at:
  8229 ;;		line 11 in file "interrupts.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;		None
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		None
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8247 ;;Total ram usage:        0 bytes
  8248 ;; Hardware stack levels used: 1
  8249 ;; Hardware stack levels required when called: 5
  8250 ;; This function calls:
  8251 ;;		Nothing
  8252 ;; This function is called by:
  8253 ;;		_main
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text37
  8258   003B44                     __ptext37:
  8259                           	callstack 0
  8260   003B44                     _Interrupts_init:
  8261                           	callstack 25
  8262   003B44                     
  8263                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
  8264   003B44  8082               	bsf	130,0,c	;volatile
  8265                           
  8266                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
  8267   003B46  010E               	movlb	14	; () banked
  8268   003B48  919A               	bcf	154,0,b	;volatile
  8269                           
  8270                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
  8271   003B4A  8129               	bsf	41,0,b	;volatile
  8272                           
  8273                           ;interrupts.c: 17:     IPR0bits.INT0IP = 1;
  8274   003B4C  811F               	bsf	31,0,b	;volatile
  8275                           
  8276                           ;interrupts.c: 18:     INTCONbits.INT0EDG = 0;
  8277   003B4E  90F2               	bcf	242,0,c	;volatile
  8278                           
  8279                           ;interrupts.c: 22:     TMR0IE=1;
  8280   003B50  8B29               	bsf	41,5,b	;volatile
  8281                           
  8282                           ;interrupts.c: 23:     PIE4bits.RC4IE=1;
  8283   003B52  872D               	bsf	45,3,b	;volatile
  8284                           
  8285                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  8286   003B54  8CF2               	bsf	242,6,c	;volatile
  8287                           
  8288                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  8289   003B56  8EF2               	bsf	242,7,c	;volatile
  8290   003B58                     
  8291                           ; BSR set to: 14
  8292   003B58  0012               	return		;funcret
  8293   003B5A                     __end_of_Interrupts_init:
  8294                           	callstack 0
  8295                           
  8296 ;; *************** function _Buggy_init *****************
  8297 ;; Defined at:
  8298 ;;		line 7 in file "buggysetup.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;		None
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		None
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8316 ;;Total ram usage:        0 bytes
  8317 ;; Hardware stack levels used: 1
  8318 ;; Hardware stack levels required when called: 5
  8319 ;; This function calls:
  8320 ;;		Nothing
  8321 ;; This function is called by:
  8322 ;;		_main
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           	psect	text38
  8327   00390E                     __ptext38:
  8328                           	callstack 0
  8329   00390E                     _Buggy_init:
  8330                           	callstack 25
  8331   00390E                     
  8332                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
  8333   00390E  9E7C               	bcf	124,7,c	;volatile
  8334                           
  8335                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
  8336   003910  9E84               	bcf	132,7,c	;volatile
  8337                           
  8338                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
  8339   003912  9680               	bcf	128,3,c	;volatile
  8340                           
  8341                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
  8342   003914  9688               	bcf	136,3,c	;volatile
  8343                           
  8344                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
  8345   003916  8486               	bsf	134,2,c	;volatile
  8346                           
  8347                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
  8348   003918  010E               	movlb	14	; () banked
  8349   00391A  95B4               	bcf	180,2,b	;volatile
  8350                           
  8351                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
  8352   00391C  8686               	bsf	134,3,c	;volatile
  8353                           
  8354                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
  8355   00391E  97B4               	bcf	180,3,b	;volatile
  8356                           
  8357                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
  8358   003920  9280               	bcf	128,1,c	;volatile
  8359                           
  8360                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
  8361   003922  9288               	bcf	136,1,c	;volatile
  8362                           
  8363                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
  8364   003924  987C               	bcf	124,4,c	;volatile
  8365                           
  8366                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
  8367   003926  9884               	bcf	132,4,c	;volatile
  8368                           
  8369                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
  8370   003928  967C               	bcf	124,3,c	;volatile
  8371                           
  8372                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
  8373   00392A  9684               	bcf	132,3,c	;volatile
  8374                           
  8375                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
  8376   00392C  97A7               	bcf	167,3,b	;volatile
  8377                           
  8378                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
  8379   00392E  9080               	bcf	128,0,c	;volatile
  8380                           
  8381                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
  8382   003930  9088               	bcf	136,0,c	;volatile
  8383                           
  8384                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
  8385   003932  907E               	bcf	126,0,c	;volatile
  8386                           
  8387                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
  8388   003934  9086               	bcf	134,0,c	;volatile
  8389                           
  8390                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
  8391   003936  907F               	bcf	127,0,c	;volatile
  8392                           
  8393                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
  8394   003938  9087               	bcf	135,0,c	;volatile
  8395                           
  8396                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
  8397   00393A  9E7D               	bcf	125,7,c	;volatile
  8398                           
  8399                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
  8400   00393C  9E85               	bcf	133,7,c	;volatile
  8401                           
  8402                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
  8403   00393E  9679               	bcf	121,3,c	;volatile
  8404                           
  8405                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
  8406   003940  9681               	bcf	129,3,c	;volatile
  8407   003942                     
  8408                           ; BSR set to: 14
  8409   003942  0012               	return		;funcret
  8410   003944                     __end_of_Buggy_init:
  8411                           	callstack 0
  8412                           
  8413 ;; *************** function _HighISR *****************
  8414 ;; Defined at:
  8415 ;;		line 33 in file "interrupts.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;		None
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;		None
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1    wreg      void 
  8422 ;; Registers used:
  8423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;Total ram usage:        2 bytes
  8434 ;; Hardware stack levels used: 1
  8435 ;; Hardware stack levels required when called: 4
  8436 ;; This function calls:
  8437 ;;		_getCharFromTxBuf
  8438 ;;		_isDataInTxBuf
  8439 ;;		_putCharToRxBuf
  8440 ;;		i2_color_clear_init_interrupts
  8441 ;; This function is called by:
  8442 ;;		Interrupt level 2
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           	psect	intcode
  8447   000008                     __pintcode:
  8448                           	callstack 0
  8449   000008                     _HighISR:
  8450                           	callstack 21
  8451                           
  8452                           ; BSR set to: 14
  8453                           ;incstack = 0
  8454   000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8455   00000A  CFD9 F00A          	movff	fsr2l,??_HighISR
  8456   00000E  CFDA F00B          	movff	fsr2h,??_HighISR+1
  8457   000012                     
  8458                           ;interrupts.c: 37:     if(PIR0bits.INT0IF){
  8459   000012  010E               	movlb	14	; () banked
  8460   000014  A133               	btfss	51,0,b	;volatile
  8461   000016  EF0F  F000         	goto	i2u208_41
  8462   00001A  EF11  F000         	goto	i2u208_40
  8463   00001E                     i2u208_41:
  8464   00001E  EF18  F000         	goto	i2l3513
  8465   000022                     i2u208_40:
  8466   000022                     
  8467                           ; BSR set to: 14
  8468                           ;interrupts.c: 38:         wall = 1;
  8469   000022  0E01               	movlw	1
  8470   000024  0101               	movlb	1	; () banked
  8471   000026  6FFB               	movwf	_wall& (0+255),b
  8472   000028                     
  8473                           ; BSR set to: 1
  8474                           ;interrupts.c: 39:         color_clear_init_interrupts();
  8475   000028  EC40  F01B         	call	i2_color_clear_init_interrupts	;wreg free
  8476   00002C                     
  8477                           ;interrupts.c: 40:         PIR0bits.INT0IF = 0;
  8478   00002C  010E               	movlb	14	; () banked
  8479   00002E  9133               	bcf	51,0,b	;volatile
  8480   000030                     i2l3513:
  8481                           
  8482                           ; BSR set to: 14
  8483                           ;interrupts.c: 47:     if(TMR0IF){
  8484   000030  AB33               	btfss	51,5,b	;volatile
  8485   000032  EF1D  F000         	goto	i2u209_41
  8486   000036  EF1F  F000         	goto	i2u209_40
  8487   00003A                     i2u209_41:
  8488   00003A  EF24  F000         	goto	i2l3519
  8489   00003E                     i2u209_40:
  8490   00003E                     
  8491                           ; BSR set to: 14
  8492                           ;interrupts.c: 48:         lost = 1;
  8493   00003E  0E01               	movlw	1
  8494   000040  0101               	movlb	1	; () banked
  8495   000042  6FFA               	movwf	_lost& (0+255),b
  8496   000044                     
  8497                           ; BSR set to: 1
  8498                           ;interrupts.c: 49:         TMR0IF=0;
  8499   000044  010E               	movlb	14	; () banked
  8500   000046  9B33               	bcf	51,5,b	;volatile
  8501   000048                     i2l3519:
  8502                           
  8503                           ; BSR set to: 14
  8504                           ;interrupts.c: 56:     if(PIR4bits.RC4IF){
  8505   000048  A737               	btfss	55,3,b	;volatile
  8506   00004A  EF29  F000         	goto	i2u210_41
  8507   00004E  EF2B  F000         	goto	i2u210_40
  8508   000052                     i2u210_41:
  8509   000052  EF2E  F000         	goto	i2l3523
  8510   000056                     i2u210_40:
  8511   000056                     
  8512                           ; BSR set to: 14
  8513                           ;interrupts.c: 58:         putCharToRxBuf(RC4REG);
  8514   000056  51E3               	movf	227,w,b	;volatile
  8515   000058  EC06  F01D         	call	_putCharToRxBuf
  8516   00005C                     i2l3523:
  8517                           
  8518                           ;interrupts.c: 62:     if(PIR4bits.TX4IF){
  8519   00005C  010E               	movlb	14	; () banked
  8520   00005E  A537               	btfss	55,2,b	;volatile
  8521   000060  EF34  F000         	goto	i2u211_41
  8522   000064  EF36  F000         	goto	i2u211_40
  8523   000068                     i2u211_41:
  8524   000068  EF46  F000         	goto	i2l291
  8525   00006C                     i2u211_40:
  8526   00006C                     
  8527                           ; BSR set to: 14
  8528                           ;interrupts.c: 64:         TX4REG = getCharFromTxBuf();
  8529   00006C  EC19  F01D         	call	_getCharFromTxBuf	;wreg free
  8530   000070  010E               	movlb	14	; () banked
  8531   000072  6FE4               	movwf	228,b	;volatile
  8532   000074                     
  8533                           ; BSR set to: 14
  8534                           ;interrupts.c: 65:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
  8535   000074  EC96  F01D         	call	_isDataInTxBuf	;wreg free
  8536   000078  0900               	iorlw	0
  8537   00007A  A4D8               	btfss	status,2,c
  8538   00007C  EF42  F000         	goto	i2u212_41
  8539   000080  EF44  F000         	goto	i2u212_40
  8540   000084                     i2u212_41:
  8541   000084  EF46  F000         	goto	i2l291
  8542   000088                     i2u212_40:
  8543   000088  010E               	movlb	14	; () banked
  8544   00008A  952D               	bcf	45,2,b	;volatile
  8545   00008C                     i2l291:
  8546   00008C  C00B  FFDA         	movff	??_HighISR+1,fsr2h
  8547   000090  C00A  FFD9         	movff	??_HighISR,fsr2l
  8548   000094  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8549   000096  0011               	retfie		f
  8550   000098                     __end_of_HighISR:
  8551                           	callstack 0
  8552                           
  8553 ;; *************** function i2_color_clear_init_interrupts *****************
  8554 ;; Defined at:
  8555 ;;		line 25 in file "color.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  low_threshol    2    7[COMRAM] unsigned int 
  8560 ;;  high_thresho    2    5[COMRAM] unsigned int 
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  1    wreg      void 
  8563 ;; Registers used:
  8564 ;;		wreg, status,2, status,0, cstack
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8571 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8573 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8574 ;;Total ram usage:        5 bytes
  8575 ;; Hardware stack levels used: 1
  8576 ;; Hardware stack levels required when called: 3
  8577 ;; This function calls:
  8578 ;;		i2_I2C_2_Master_Start
  8579 ;;		i2_I2C_2_Master_Stop
  8580 ;;		i2_I2C_2_Master_Write
  8581 ;;		i2_color_writetoaddr
  8582 ;; This function is called by:
  8583 ;;		_HighISR
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           	psect	text40
  8588   003680                     __ptext40:
  8589                           	callstack 0
  8590   003680                     i2_color_clear_init_interrupts:
  8591                           	callstack 21
  8592   003680                     
  8593                           ;color.c: 27:     I2C_2_Master_Start();
  8594   003680  ECD2  F01D         	call	i2_I2C_2_Master_Start	;wreg free
  8595                           
  8596                           ;color.c: 28:     I2C_2_Master_Write(0x52 | 0x00);
  8597   003684  0E52               	movlw	82
  8598   003686  ECB3  F01D         	call	i2_I2C_2_Master_Write
  8599                           
  8600                           ;color.c: 29:     I2C_2_Master_Write(0b11100110);
  8601   00368A  0EE6               	movlw	230
  8602   00368C  ECB3  F01D         	call	i2_I2C_2_Master_Write
  8603                           
  8604                           ;color.c: 30:     I2C_2_Master_Stop();
  8605   003690  ECCD  F01D         	call	i2_I2C_2_Master_Stop	;wreg free
  8606   003694                     
  8607                           ;color.c: 33:     unsigned int high_threshold = ambient + 20;
  8608   003694  0E14               	movlw	20
  8609   003696  2449               	addwf	_ambient^0,w,c
  8610   003698  6E06               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
  8611   00369A  0E00               	movlw	0
  8612   00369C  204A               	addwfc	(_ambient+1)^0,w,c
  8613   00369E  6E07               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
  8614   0036A0                     
  8615                           ;color.c: 34:     unsigned int low_threshold = ambient - 20;
  8616   0036A0  0EEC               	movlw	236
  8617   0036A2  2449               	addwf	_ambient^0,w,c
  8618   0036A4  6E08               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
  8619   0036A6  0EFF               	movlw	255
  8620   0036A8  204A               	addwfc	(_ambient+1)^0,w,c
  8621   0036AA  6E09               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
  8622                           
  8623                           ;color.c: 37:  color_writetoaddr(0x00, 0x13);
  8624   0036AC  0E13               	movlw	19
  8625   0036AE  6E03               	movwf	i2color_writetoaddr@value^0,c
  8626   0036B0  0E00               	movlw	0
  8627   0036B2  EC5E  F01D         	call	i2_color_writetoaddr
  8628   0036B6                     
  8629                           ;color.c: 38:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8630   0036B6  0E3F               	movlw	63
  8631   0036B8  6E05               	movwf	??i2_color_clear_init_interrupts^0,c
  8632   0036BA  0E55               	movlw	85
  8633   0036BC                     i2u319_47:
  8634   0036BC  2EE8               	decfsz	wreg,f,c
  8635   0036BE  D7FE               	bra	i2u319_47
  8636   0036C0  2E05               	decfsz	??i2_color_clear_init_interrupts^0,f,c
  8637   0036C2  D7FC               	bra	i2u319_47
  8638   0036C4  0000               	nop	
  8639   0036C6                     
  8640                           ;color.c: 39:     color_writetoaddr(0x07, (high_threshold >> 8));
  8641   0036C6  5007               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
  8642   0036C8  6E03               	movwf	i2color_writetoaddr@value^0,c
  8643   0036CA  0E07               	movlw	7
  8644   0036CC  EC5E  F01D         	call	i2_color_writetoaddr
  8645   0036D0                     
  8646                           ;color.c: 40:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  8647   0036D0  C006  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
  8648   0036D4  0E06               	movlw	6
  8649   0036D6  EC5E  F01D         	call	i2_color_writetoaddr
  8650   0036DA                     
  8651                           ;color.c: 41:     color_writetoaddr(0x05, (low_threshold >> 8));
  8652   0036DA  5009               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
  8653   0036DC  6E03               	movwf	i2color_writetoaddr@value^0,c
  8654   0036DE  0E05               	movlw	5
  8655   0036E0  EC5E  F01D         	call	i2_color_writetoaddr
  8656   0036E4                     
  8657                           ;color.c: 42:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  8658   0036E4  C008  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
  8659   0036E8  0E04               	movlw	4
  8660   0036EA  EC5E  F01D         	call	i2_color_writetoaddr
  8661   0036EE                     
  8662                           ;color.c: 43:     color_writetoaddr(0x0C, 0b0100);
  8663   0036EE  0E04               	movlw	4
  8664   0036F0  6E03               	movwf	i2color_writetoaddr@value^0,c
  8665   0036F2  0E0C               	movlw	12
  8666   0036F4  EC5E  F01D         	call	i2_color_writetoaddr
  8667   0036F8  0012               	return		;funcret
  8668   0036FA                     __end_ofi2_color_clear_init_interrupts:
  8669                           	callstack 0
  8670                           
  8671 ;; *************** function i2_color_writetoaddr *****************
  8672 ;; Defined at:
  8673 ;;		line 48 in file "color.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  address         1    wreg     unsigned char 
  8676 ;;  value           1    2[COMRAM] unsigned char 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  address         1    3[COMRAM] unsigned char 
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  1    wreg      void 
  8681 ;; Registers used:
  8682 ;;		wreg, status,2, status,0, cstack
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8688 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;Total ram usage:        2 bytes
  8693 ;; Hardware stack levels used: 1
  8694 ;; Hardware stack levels required when called: 2
  8695 ;; This function calls:
  8696 ;;		i2_I2C_2_Master_Start
  8697 ;;		i2_I2C_2_Master_Stop
  8698 ;;		i2_I2C_2_Master_Write
  8699 ;; This function is called by:
  8700 ;;		i2_color_clear_init_interrupts
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text41
  8705   003ABC                     __ptext41:
  8706                           	callstack 0
  8707   003ABC                     i2_color_writetoaddr:
  8708                           	callstack 21
  8709                           
  8710                           ;incstack = 0
  8711                           ;i2color_writetoaddr@address stored from wreg
  8712   003ABC  6E04               	movwf	i2color_writetoaddr@address^0,c
  8713   003ABE                     
  8714                           ;color.c: 49:     I2C_2_Master_Start();
  8715   003ABE  ECD2  F01D         	call	i2_I2C_2_Master_Start	;wreg free
  8716                           
  8717                           ;color.c: 50:     I2C_2_Master_Write(0x52 | 0x00);
  8718   003AC2  0E52               	movlw	82
  8719   003AC4  ECB3  F01D         	call	i2_I2C_2_Master_Write
  8720                           
  8721                           ;color.c: 51:     I2C_2_Master_Write(0x80 | address);
  8722   003AC8  5004               	movf	i2color_writetoaddr@address^0,w,c
  8723   003ACA  0980               	iorlw	128
  8724   003ACC  ECB3  F01D         	call	i2_I2C_2_Master_Write
  8725                           
  8726                           ;color.c: 52:     I2C_2_Master_Write(value);
  8727   003AD0  5003               	movf	i2color_writetoaddr@value^0,w,c
  8728   003AD2  ECB3  F01D         	call	i2_I2C_2_Master_Write
  8729                           
  8730                           ;color.c: 53:     I2C_2_Master_Stop();
  8731   003AD6  ECCD  F01D         	call	i2_I2C_2_Master_Stop	;wreg free
  8732   003ADA  0012               	return		;funcret
  8733   003ADC                     __end_ofi2_color_writetoaddr:
  8734                           	callstack 0
  8735                           
  8736 ;; *************** function i2_I2C_2_Master_Write *****************
  8737 ;; Defined at:
  8738 ;;		line 45 in file "i2c.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  data_byte       1    wreg     unsigned char 
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;  data_byte       1    1[COMRAM] unsigned char 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg, status,2, status,0, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8756 ;;Total ram usage:        1 bytes
  8757 ;; Hardware stack levels used: 1
  8758 ;; Hardware stack levels required when called: 1
  8759 ;; This function calls:
  8760 ;;		i2_I2C_2_Master_Idle
  8761 ;; This function is called by:
  8762 ;;		i2_color_clear_init_interrupts
  8763 ;;		i2_color_writetoaddr
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text42
  8768   003B66                     __ptext42:
  8769                           	callstack 0
  8770   003B66                     i2_I2C_2_Master_Write:
  8771                           	callstack 21
  8772                           
  8773                           ;incstack = 0
  8774                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8775   003B66  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8776   003B68                     
  8777                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8778   003B68  ECDF  F01C         	call	i2_I2C_2_Master_Idle	;wreg free
  8779   003B6C                     
  8780                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8781   003B6C  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8782   003B70  0012               	return		;funcret
  8783   003B72                     __end_ofi2_I2C_2_Master_Write:
  8784                           	callstack 0
  8785                           
  8786 ;; *************** function i2_I2C_2_Master_Stop *****************
  8787 ;; Defined at:
  8788 ;;		line 39 in file "i2c.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;		None
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;		None
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  1    wreg      void 
  8795 ;; Registers used:
  8796 ;;		wreg, status,2, status,0, cstack
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8806 ;;Total ram usage:        0 bytes
  8807 ;; Hardware stack levels used: 1
  8808 ;; Hardware stack levels required when called: 1
  8809 ;; This function calls:
  8810 ;;		i2_I2C_2_Master_Idle
  8811 ;; This function is called by:
  8812 ;;		i2_color_clear_init_interrupts
  8813 ;;		i2_color_writetoaddr
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           	psect	text43
  8818   003B9A                     __ptext43:
  8819                           	callstack 0
  8820   003B9A                     i2_I2C_2_Master_Stop:
  8821                           	callstack 21
  8822   003B9A                     
  8823                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8824   003B9A  ECDF  F01C         	call	i2_I2C_2_Master_Idle	;wreg free
  8825   003B9E                     
  8826                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8827   003B9E  010E               	movlb	14	; () banked
  8828   003BA0  85DA               	bsf	218,2,b	;volatile
  8829   003BA2                     
  8830                           ; BSR set to: 14
  8831   003BA2  0012               	return		;funcret
  8832   003BA4                     __end_ofi2_I2C_2_Master_Stop:
  8833                           	callstack 0
  8834                           
  8835 ;; *************** function i2_I2C_2_Master_Start *****************
  8836 ;; Defined at:
  8837 ;;		line 27 in file "i2c.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;		None
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;		None
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      void 
  8844 ;; Registers used:
  8845 ;;		wreg, status,2, status,0, cstack
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;Total ram usage:        0 bytes
  8856 ;; Hardware stack levels used: 1
  8857 ;; Hardware stack levels required when called: 1
  8858 ;; This function calls:
  8859 ;;		i2_I2C_2_Master_Idle
  8860 ;; This function is called by:
  8861 ;;		i2_color_clear_init_interrupts
  8862 ;;		i2_color_writetoaddr
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text44
  8867   003BA4                     __ptext44:
  8868                           	callstack 0
  8869   003BA4                     i2_I2C_2_Master_Start:
  8870                           	callstack 21
  8871   003BA4                     
  8872                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8873   003BA4  ECDF  F01C         	call	i2_I2C_2_Master_Idle	;wreg free
  8874   003BA8                     
  8875                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8876   003BA8  010E               	movlb	14	; () banked
  8877   003BAA  81DA               	bsf	218,0,b	;volatile
  8878   003BAC                     
  8879                           ; BSR set to: 14
  8880   003BAC  0012               	return		;funcret
  8881   003BAE                     __end_ofi2_I2C_2_Master_Start:
  8882                           	callstack 0
  8883                           
  8884 ;; *************** function i2_I2C_2_Master_Idle *****************
  8885 ;; Defined at:
  8886 ;;		line 22 in file "i2c.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;		None
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;		None
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      void 
  8893 ;; Registers used:
  8894 ;;		wreg, status,2, status,0
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8904 ;;Total ram usage:        1 bytes
  8905 ;; Hardware stack levels used: 1
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		i2_I2C_2_Master_Start
  8910 ;;		i2_I2C_2_Master_Stop
  8911 ;;		i2_I2C_2_Master_Write
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text45
  8916   0039BE                     __ptext45:
  8917                           	callstack 0
  8918   0039BE                     i2_I2C_2_Master_Idle:
  8919                           	callstack 21
  8920   0039BE                     i2l181:
  8921   0039BE  010E               	movlb	14	; () banked
  8922   0039C0  B5D8               	btfsc	216,2,b	;volatile
  8923   0039C2  EFE5  F01C         	goto	i2u117_41
  8924   0039C6  EFE7  F01C         	goto	i2u117_40
  8925   0039CA                     i2u117_41:
  8926   0039CA  EFDF  F01C         	goto	i2l181
  8927   0039CE                     i2u117_40:
  8928   0039CE                     
  8929                           ; BSR set to: 14
  8930   0039CE  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8931   0039D2  0E1F               	movlw	31
  8932   0039D4  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8933   0039D6  A4D8               	btfss	status,2,c
  8934   0039D8  EFF0  F01C         	goto	i2u118_41
  8935   0039DC  EFF2  F01C         	goto	i2u118_40
  8936   0039E0                     i2u118_41:
  8937   0039E0  EFDF  F01C         	goto	i2l181
  8938   0039E4                     i2u118_40:
  8939   0039E4                     
  8940                           ; BSR set to: 14
  8941   0039E4  0012               	return		;funcret
  8942   0039E6                     __end_ofi2_I2C_2_Master_Idle:
  8943                           	callstack 0
  8944                           
  8945 ;; *************** function _putCharToRxBuf *****************
  8946 ;; Defined at:
  8947 ;;		line 33 in file "serial.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;  byte            1    wreg     unsigned char 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;  byte            1    0[COMRAM] unsigned char 
  8952 ;; Return value:  Size  Location     Type
  8953 ;;                  1    wreg      void 
  8954 ;; Registers used:
  8955 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8965 ;;Total ram usage:        1 bytes
  8966 ;; Hardware stack levels used: 1
  8967 ;; This function calls:
  8968 ;;		Nothing
  8969 ;; This function is called by:
  8970 ;;		_HighISR
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           	psect	text46
  8975   003A0C                     __ptext46:
  8976                           	callstack 0
  8977   003A0C                     _putCharToRxBuf:
  8978                           	callstack 24
  8979                           
  8980                           ; BSR set to: 14
  8981                           ;incstack = 0
  8982                           ;putCharToRxBuf@byte stored from wreg
  8983   003A0C  6E01               	movwf	putCharToRxBuf@byte^0,c
  8984   003A0E                     
  8985                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  8986   003A0E  0E13               	movlw	19
  8987   003A10  6448               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  8988   003A12  EF0D  F01D         	goto	i2u192_41
  8989   003A16  EF0F  F01D         	goto	i2u192_40
  8990   003A1A                     i2u192_41:
  8991   003A1A  EF11  F01D         	goto	i2l3339
  8992   003A1E                     i2u192_40:
  8993   003A1E  0E00               	movlw	0
  8994   003A20  6E48               	movwf	_RxBufWriteCnt^0,c	;volatile
  8995   003A22                     i2l3339:
  8996                           
  8997                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  8998   003A22  5048               	movf	_RxBufWriteCnt^0,w,c
  8999   003A24  0FC4               	addlw	low _EUSART4RXbuf
  9000   003A26  6ED9               	movwf	fsr2l,c
  9001   003A28  6ADA               	clrf	fsr2h,c
  9002   003A2A  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9003   003A2E  2A48               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9004   003A30  0012               	return		;funcret
  9005   003A32                     __end_of_putCharToRxBuf:
  9006                           	callstack 0
  9007                           
  9008 ;; *************** function _isDataInTxBuf *****************
  9009 ;; Defined at:
  9010 ;;		line 61 in file "serial.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;		None
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;		None
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  1    wreg      unsigned char 
  9017 ;; Registers used:
  9018 ;;		wreg, status,2, status,0
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9028 ;;Total ram usage:        0 bytes
  9029 ;; Hardware stack levels used: 1
  9030 ;; This function calls:
  9031 ;;		Nothing
  9032 ;; This function is called by:
  9033 ;;		_HighISR
  9034 ;;		_sendTxBuf
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           	psect	text47
  9039   003B2C                     __ptext47:
  9040                           	callstack 0
  9041   003B2C                     _isDataInTxBuf:
  9042                           	callstack 24
  9043   003B2C                     
  9044                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  9045   003B2C  5045               	movf	_TxBufReadCnt^0,w,c	;volatile
  9046   003B2E  1846               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  9047   003B30  A4D8               	btfss	status,2,c
  9048   003B32  EF9D  F01D         	goto	i2u194_41
  9049   003B36  EFA0  F01D         	goto	i2u194_40
  9050   003B3A                     i2u194_41:
  9051   003B3A  0E01               	movlw	1
  9052   003B3C  EFA1  F01D         	goto	i2u195_40
  9053   003B40                     i2u194_40:
  9054   003B40  0E00               	movlw	0
  9055   003B42                     i2u195_40:
  9056   003B42  0012               	return		;funcret
  9057   003B44                     __end_of_isDataInTxBuf:
  9058                           	callstack 0
  9059                           
  9060 ;; *************** function _getCharFromTxBuf *****************
  9061 ;; Defined at:
  9062 ;;		line 47 in file "serial.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;		None
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;		None
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      unsigned char 
  9069 ;; Registers used:
  9070 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9080 ;;Total ram usage:        1 bytes
  9081 ;; Hardware stack levels used: 1
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_HighISR
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text48
  9090   003A32                     __ptext48:
  9091                           	callstack 0
  9092   003A32                     _getCharFromTxBuf:
  9093                           	callstack 24
  9094   003A32                     
  9095                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9096   003A32  0E3B               	movlw	59
  9097   003A34  6445               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9098   003A36  EF1F  F01D         	goto	i2u193_41
  9099   003A3A  EF21  F01D         	goto	i2u193_40
  9100   003A3E                     i2u193_41:
  9101   003A3E  EF23  F01D         	goto	i2l3347
  9102   003A42                     i2u193_40:
  9103   003A42  0E00               	movlw	0
  9104   003A44  6E45               	movwf	_TxBufReadCnt^0,c	;volatile
  9105   003A46                     i2l3347:
  9106                           
  9107                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
  9108   003A46  2A45               	incf	_TxBufReadCnt^0,f,c	;volatile
  9109   003A48  0445               	decf	_TxBufReadCnt^0,w,c	;volatile
  9110   003A4A  6E01               	movwf	??_getCharFromTxBuf^0,c
  9111   003A4C  5001               	movf	??_getCharFromTxBuf^0,w,c
  9112   003A4E  0F60               	addlw	low _EUSART4TXbuf
  9113   003A50  6ED9               	movwf	fsr2l,c
  9114   003A52  6ADA               	clrf	fsr2h,c
  9115   003A54  50DF               	movf	indf2,w,c
  9116   003A56  0012               	return		;funcret
  9117   003A58                     __end_of_getCharFromTxBuf:
  9118                           	callstack 0
  9119                           
  9120                           	psect	smallconst
  9121   000E00                     __psmallconst:
  9122                           	callstack 0
  9123   000E00  00                 	db	0
  9124   000E01  00                 	db	0	; dummy byte at the end
  9125   000000                     
  9126                           	psect	rparam
  9127   000000                     
  9128                           	psect	temp
  9129   00004B                     btemp:
  9130                           	callstack 0
  9131   00004B                     	ds	1
  9132   000000                     int$flags	set	btemp
  9133   000000                     wtemp8	set	btemp+1
  9134   000000                     ttemp5	set	btemp+1
  9135   000000                     ttemp6	set	btemp+4
  9136   000000                     ttemp7	set	btemp+8
  9137                           
  9138                           	psect	config
  9139                           
  9140                           ;Config register CONFIG1L @ 0x300000
  9141                           ;	External Oscillator mode Selection bits
  9142                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9143                           ;	Power-up default value for COSC bits
  9144                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9145   300000                     	org	3145728
  9146   300000  AA                 	db	170
  9147                           
  9148                           ;Config register CONFIG1H @ 0x300001
  9149                           ;	unspecified, using default values
  9150                           ;	Clock Out Enable bit
  9151                           ;	CLKOUTEN = 0x1, unprogrammed default
  9152                           ;	Clock Switch Enable bit
  9153                           ;	CSWEN = 0x1, unprogrammed default
  9154                           ;	Fail-Safe Clock Monitor Enable bit
  9155                           ;	FCMEN = 0x1, unprogrammed default
  9156   300001                     	org	3145729
  9157   300001  FF                 	db	255
  9158                           
  9159                           ;Config register CONFIG3L @ 0x300004
  9160                           ;	WDT Period Select bits
  9161                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9162                           ;	WDT operating mode
  9163                           ;	WDTE = OFF, WDT Disabled
  9164   300004                     	org	3145732
  9165   300004  9F                 	db	159
  9166                           
  9167                           ;Config register CONFIG3H @ 0x300005
  9168                           ;	unspecified, using default values
  9169                           ;	WDT Window Select bits
  9170                           ;	WDTCWS = 0x7, unprogrammed default
  9171                           ;	WDT input clock selector
  9172                           ;	WDTCCS = 0x7, unprogrammed default
  9173   300005                     	org	3145733
  9174   300005  FF                 	db	255
  9175                           tosu	equ	0xFFF
  9176                           tosh	equ	0xFFE
  9177                           tosl	equ	0xFFD
  9178                           stkptr	equ	0xFFC
  9179                           pclatu	equ	0xFFB
  9180                           pclath	equ	0xFFA
  9181                           pcl	equ	0xFF9
  9182                           tblptru	equ	0xFF8
  9183                           tblptrh	equ	0xFF7
  9184                           tblptrl	equ	0xFF6
  9185                           tablat	equ	0xFF5
  9186                           prodh	equ	0xFF4
  9187                           prodl	equ	0xFF3
  9188                           indf0	equ	0xFEF
  9189                           postinc0	equ	0xFEE
  9190                           postdec0	equ	0xFED
  9191                           preinc0	equ	0xFEC
  9192                           plusw0	equ	0xFEB
  9193                           fsr0h	equ	0xFEA
  9194                           fsr0l	equ	0xFE9
  9195                           wreg	equ	0xFE8
  9196                           indf1	equ	0xFE7
  9197                           postinc1	equ	0xFE6
  9198                           postdec1	equ	0xFE5
  9199                           preinc1	equ	0xFE4
  9200                           plusw1	equ	0xFE3
  9201                           fsr1h	equ	0xFE2
  9202                           fsr1l	equ	0xFE1
  9203                           bsr	equ	0xFE0
  9204                           indf2	equ	0xFDF
  9205                           postinc2	equ	0xFDE
  9206                           postdec2	equ	0xFDD
  9207                           preinc2	equ	0xFDC
  9208                           plusw2	equ	0xFDB
  9209                           fsr2h	equ	0xFDA
  9210                           fsr2l	equ	0xFD9
  9211                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      74
    BANK0           160     16     136
    BANK1           256    210     256
    BANK2           256      0      82
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK1[1]), 

    color_normalise@RGBC_n	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC_n(BANK1[8]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    S29DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S29DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), main@motorR(BANK1[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_move
    _move->_returnHome
    _returnHome->_reverseOneSquare
    _returnHome->_turnLeft
    _returnHome->_turnRight
    _lostReturnHome->_reverseOneSquare
    _lostReturnHome->_turnLeft
    _lostReturnHome->_turnRight
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___aldiv
    ___aldiv->___lmul
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_move

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               214   214      0  206978
                                             66 COMRAM     2     2      0
                                              0 BANK1    210   210      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                   _color_click_init
                    _color_normalise
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                               _stop
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _move                                                18     2     16  103098
                                             64 COMRAM     2     2      0
                                              0 BANK0     16     0     16
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          20     5     15   53152
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      20     5     15   52272
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    4053
                                             30 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    14     7      7    5257
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2      69
                                             11 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    6245
                                             30 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2     483
                                             15 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                             12 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                     12     2     10    1965
                                             37 COMRAM    12     2     10
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             23 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    1612
                                             20 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0     862
                                             15 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             13 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   33814
                                             44 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   12433
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   20033
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2285
                                             24 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             17 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     543
                                             19 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0     356
                                              9 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (7) i2_color_clear_init_interrupts                        5     5      0     334
                                              4 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_writetoaddr
   _color_normalise
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _color_read
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _turnLeft
     _turnRight
   _resetTimer
   _stop
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      52       9       32.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D2     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      88       5       85.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      4A       1       78.7%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     224      66        0.0%
DATA                 0      0     224       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Mar 10 20:40:02 2024

                                _white_Light 3A58                                           l85 2280  
                                         l87 228E                                           l96 24EA  
                               ___awdiv@sign 0011                          ___wmul@multiplicand 000E  
                           main@turnDuration 01B5                            ??_Interrupts_init 000C  
                                        l131 3A9A                                          l125 390C  
                                        l230 3942                                          l142 31B8  
                                        l134 3A74                                          l128 367E  
                                        l136 3A7A                                          l322 3AF8  
                                        l139 2974                                          l500 1442  
                                        l181 3996                                          l190 3B84  
                                        l184 39BC                                          l281 3B58  
                                        l193 3B8E                                          l601 2A72  
                                        l178 396C                                          l506 1442  
                                        l187 3B98                                          l603 2A96  
                                        l531 1AE2                                          l372 3B16  
                                        l196 3B64                                          l516 14BC  
                                        l621 2676                                          l613 25D6  
                                        l541 1B5C                                          l525 1AE2  
                                        l374 3B24                                          l390 3892  
                                        l622 2766                                          l606 2B18  
                                        l375 3B2A                                          l199 38D4  
                                        l472 306E                                          l560 2E52  
                                        l624 2786                                          l369 3B12  
                                        l617 25F2                                          l465 3604  
                                        l641 3994                                          l609 2B5A  
                                        l386 387A                                          l554 2DC4  
                                        l618 2628                                          l546 338A  
                                        l635 3ABA                                          l387 387C  
                                        l563 2ED4                                          l571 2BF0  
                                        l723 32C4                                          l491 21B2  
                                        l388 3890                                          l644 3A0A  
                                        l580 2D00                                          l549 33CC  
                                        l566 2F02                                          l558 2E2E  
                                        l638 3B7A                                          l583 2D2E  
                                        l575 2C5A                                          l655 3834  
                                        l656 3844                                          l592 34B0  
                                        l577 2C7E                                          l588 3464  
                                        l597 2A08                                          l875 3574  
                                        prod 0FF3                          i2_color_writetoaddr 3ABC  
                                        wreg 0FE8    color_clear_init_interrupts@high_threshold 0011  
i2color_clear_init_interrupts@high_threshold 0006                              _color_normalise 3070  
                                       l1142 376C                                         l1135 3764  
                                       l3001 38FE                                         l3011 3AB8  
                                       l3003 3908                                         l3013 3B44  
                                       l3005 3A9C                                         l3101 2782  
                                       l3021 3AF2                                         l3007 3AA4  
                                       l3111 27BC                                         l3031 35AC  
                                       l3023 3AF4                                         l3015 3ADC  
                                       l3103 3A5A                                         l3009 3AAE  
                                       l3121 2910                                         l3113 2814  
                                       l3041 35EA                                         l3033 35B0  
                                       l3025 3AF6                                         l3017 3AE6  
                                       l3105 3A6A                                         l3051 3846  
                                       l3131 3150                                         l3123 292E  
                                       l3115 2832                                         l3107 2788  
                                       l3043 35EC                                         l3035 35D4  
                                       l3027 3576                                         l3019 3AE8  
                                       l3053 3850                                         l2501 2FEA  
                                       l3061 24EE                                         l3125 3070  
                                       l3117 2892                                         l3109 27A2  
                                       l3045 35F6                                         l3037 35DE  
                                       l3029 3586                                         l3055 3866  
                                       l2503 302E                                         l3071 25E4  
                                       l3063 2516                                         l3127 3084  
                                       l3119 28B0                                         l3047 35F8  
                                       l3039 35E0                                         l2511 33EE  
                                       l3311 1A0C                                         l3303 197E  
                                       l3231 154E                                         l3223 14BE  
                                       l3057 3874                                         l2601 2CE2  
                                       l3081 2640                                         l3073 2600  
                                       l3065 252E                                         l3129 30E8  
                                       l3049 3602                                         l2521 3452  
                                       l2513 33FA                                         l3321 1A86  
                                       l3305 199C                                         l3241 15C4  
                                       l3233 1586                                         l3225 14DE  
                                       l3059 388A                                         l2451 3A02  
                                       l2611 2D30                                         l2603 2CEE  
                                       l3091 26A2                                         l3083 2642  
                                       l3075 2618                                         l3067 256E  
                                       l2523 3460                                         l2515 342E  
                                       l2531 396E                                         l3331 1B34  
                                       l3323 1ABE                                         l3307 19BC  
                                       l3315 1A30                                         l3251 1612  
                                       l3243 15D4                                         l3235 159E  
                                       l3227 14F6                                         l2461 371C  
                                       l2621 2DA6                                         l2613 2D4E  
                                       l2605 2CFC                                         l3093 26BA  
                                       l3085 265A                                         l3077 2622  
                                       l3069 2596                                         l2445 3996  
                                       l2525 3488                                         l2517 343A  
                                       l2509 33CE                                         l2533 397A  
                                       l2541 330E                                         l3317 1A4E  
                                       l3309 19D4                                         l3261 16C4  
                                       l3253 1632                                         l3333 1B4C  
                                       l3245 15EC                                         l3237 15BA  
                                       l3229 152E                                         l2471 3756  
                                       l2463 3724                                         l2455 36FA  
                                       l2631 2E10                                         l2623 2DB2  
                                       l2615 2D5A                                         l2607 2D24  
                                       l3095 26FA                                         l3087 2668  
                                       l3079 2636                                         l2447 39A6  
                                       l2519 3446                                         l2527 348C  
                                       l2535 398C                                         l2703 2B46  
                                       l2551 336C                                         l3327 1AFE  
                                       l3319 1A6E                                         l3271 176E  
                                       l3263 16DC                                         l3255 164A  
                                       l3247 15F4                                         l3239 15BE  
                                       l2473 3758                                         l2465 3732  
                                       l2457 3702                                         l2449 39E6  
                                       l2641 2E6A                                         l2633 2E1C  
                                       l2625 2DC0                                         l2617 2D8E  
                                       l3097 2722                                         l3089 267A  
                                       l2721 3954                                         l2481 3B5C  
                                       l2529 3B72                                         l2553 3378  
                                       l2561 33B8                                         l2545 3320  
                                       l3329 1B02                                         l3281 1838  
                                       l3273 17A6                                         l3265 1718  
                                       l3257 1686                                         l3249 15F6  
                                       l2801 0F4C                                         l3601 1E8E  
                                       l2475 375E                                         l2467 3738  
                                       l2459 3714                                         l2491 2F20  
                                       l2651 2ED0                                         l2643 2E9E  
                                       l2635 2E2A                                         l2627 2DE8  
                                       l2619 2D9A                                         l2571 2BBA  
                                       l3099 276A                                         l2723 3956  
                                       l2483 3B60                                         l2563 3A7E  
                                       l2731 361A                                         l2555 3386  
                                       l2547 3354                                         l2539 32C6  
                                       l3283 1858                                         l3291 18CC  
                                       l3275 17C6                                         l3267 1736  
                                       l3259 16A4                                         l2811 0FAA  
                                       l2803 0F54                                         l3611 1F30  
                                       l3603 1EA0                                         l2469 374E  
                                       l2493 2F74                                         l2653 2EF8  
                                       l2645 2EAA                                         l2637 2E58  
                                       l2629 2DEC                                         l2581 2C14  
                                       l2573 2BC6                                         l2565 2B5C  
                                       l2725 3958                                         l2717 3944  
                                       l2477 3B90                                         l2485 3B86  
                                       l2741 3660                                         l2733 3626  
                                       l2901 31BA                                         l2661 299E  
                                       l2557 33AE                                         l2549 3360  
                                       l3293 18EA                                         l3285 1870  
                                       l3277 17FE                                         l3269 1756  
                                       l2821 1078                                         l2813 0FE6  
                                       l2805 0F56                                         l3621 1FEA  
                                       l3605 1EC0                                         l3613 1F68  
                                       l3701 2274                                         l2495 2F88  
                                       l2647 2EB6                                         l2591 2C84  
                                       l2575 2BD2                                         l2583 2C18  
                                       l2567 2B7A                                         l2727 395A  
                                       l2719 394E                                         l2479 3B94  
                                       l2487 3B8A                                         l2743 366A  
                                       l2735 363C                                         l2911 31EE  
                                       l2903 31BE                                         l2751 3896  
                                       l2671 2A04                                         l2663 29D2  
                                       l3295 190A                                         l3287 18A8  
                                       l3279 181A                                         l2831 1126  
                                       l2823 1096                                         l2815 1004  
                                       l2807 0F72                                         l3631 208C  
                                       l3623 200A                                         l3615 1F7A  
                                       l3607 1ED8                                         l3711 22D2  
                                       l3703 2278                                         l2497 2F8C  
                                       l2489 2F04                                         l2649 2EC2  
                                       l2585 2C3C                                         l2577 2BDE  
                                       l2569 2B86                                         l2745 3674  
                                       l2737 364C                                         l2729 3606  
                                       l2921 3230                                         l2913 31FE  
                                       l2905 31CC                                         l2761 38D2  
                                       l2753 389A                                         l2681 2A6E  
                                       l2673 2A2C                                         l2665 29DE  
                                       l2657 2976                                         l3297 1922  
                                       l2841 11D0                                         l2833 115E  
                                       l2825 10B6                                         l2817 1024  
                                       l2809 0F92                                         l3641 2172  
                                       l3633 20C4                                         l3617 1F9A  
                                       l3625 2042                                         l3609 1F10  
                                       l3561 1BE0                                         l3553 1B5E  
                                       l3721 231C                                         l3713 22D8  
                                       l3705 227C                                         l2771 3B0E  
                                       l2499 2FCE                                         l2595 2C96  
                                       l2587 2C48                                         l2579 2BEC  
                                       l2739 3656                                         l2931 3282  
                                       l2923 323C                                         l2915 3202  
                                       l2907 31DC                                         l2755 38A2  
                                       l2747 3B7C                                         l2691 2AEE  
                                       l2683 2A9C                                         l2667 29EA  
                                       l2675 2A30                                         l2659 2992  
                                       l3299 195A                                         l2851 126A  
                                       l2843 1208                                         l2827 10CE  
                                       l2835 117A                                         l2819 103C  
                                       l3635 20E4                                         l3627 2054  
                                       l3619 1FB2                                         l3571 1C82  
                                       l3555 1B70                                         l3563 1C00  
                                       l3731 2356                                         l3723 2338  
                                       l3715 22F0                                         l3707 2296  
                                       l3651 21E2                                         l3643 21B4  
                                       l2773 3B10                                         l2765 3AFA  
                                       l2597 2CCA                                         l2589 2C56  
                                       l2941 32B4                                         l2933 3284  
                                       l2925 324A                                         l2917 3212  
                                       l2909 31E0                                         l2757 38AA  
                                       l2749 3B80                                         l2693 2AFA  
                                       l2677 2A54                                         l2669 29F6  
                                       l2861 12FC                                         l2853 1282  
                                       l2837 1198                                         l2829 1106  
                                       l2781 0E02                                         l3629 2074  
                                       l3637 211C                                         l3581 1D24  
                                       l3565 1C12                                         l3573 1CA2  
                                       l3557 1B90                                         l3741 23D8  
                                       l3733 2366                                         l3725 233C  
                                       l3717 22FC                                         l3709 22AE  
                                       l3661 2202                                         l3653 21F2  
                                       l3645 21C0                                         l2775 3B14  
                                       l2767 3B04                                         l2951 34CC  
                                       l2599 2CD6                                         l2935 328E  
                                       l2927 3254                                         l2919 3228  
                                       l2759 38D0                                         l2695 2B06  
                                       l2687 2AAE                                         l2679 2A60  
                                       l2863 131C                                         l2871 1390  
                                       l2855 12BA                                         l2839 11B8  
                                       l2847 122C                                         l2791 0ECA  
                                       l2783 0E22                                         l3639 212E  
                                       l3591 1DC6                                         l3583 1D44  
                                       l3575 1CB4                                         l3567 1C32  
                                       l3559 1BA8                                         l3751 2446  
                                       l3743 23E8                                         l3735 239C  
                                       l3727 2342                                         l3719 2304  
                                       l3671 2220                                         l3663 2206  
                                       l3655 21F6                                         l3647 21C0  
                                       l2777 3B28                                         l2769 3B0C  
                                       l2961 34F2                                         l2953 34D0  
                                       l2945 34B2                                         l2929 3272  
                                       l2937 3294                                         l2697 2B14  
                                       l2689 2AE2                                         l2873 13AE  
                                       l2865 1334                                         l2849 124A  
                                       l2793 0EE2                                         l2785 0E3A  
                                       l3593 1DE6                                         l3585 1D7C  
                                       l3577 1CD4                                         l3569 1C4A  
                                       l3761 24BC                                         l3745 242E  
                                       l3737 23A8                                         l3753 244C  
                                       l3729 2346                                         l3681 2240  
                                       l3673 2228                                         l3665 2212  
                                       l3657 21FA                                         l3649 21DE  
                                       l2971 3528                                         l2963 3504  
                                       l2955 34DE                                         l2947 34B6  
                                       l2939 32A4                                         l2891 37DC  
                                       l2699 2B3C                                         l2883 145E  
                                       l2875 13CE                                         l2867 136C  
                                       l2859 12DE                                         l2795 0EFE  
                                       l2787 0E72                                         l3595 1DFE  
                                       l3587 1D94                                         l3579 1CEC  
                                       l3755 245C                                         l3763 24C6  
                                       l3747 2432                                         l3739 23C6  
                                       l3691 2260                                         l3683 2244  
                                       l3675 2230                                         l3667 2218  
                                       l3659 21FE                                         l2973 353E  
                                       l2965 350C                                         l2981 3554  
                                       l2957 34E6                                         l2949 34C4  
                                       l2893 37EC                                         l2885 1462  
                                       l2877 13E6                                         l2797 0F02  
                                       l2789 0E92                                         l3597 1E36  
                                       l3589 1DB4                                         l3765 24D8  
                                       l3757 2460                                         l3749 2436  
                                       l3693 2264                                         l3685 2248  
                                       l3677 2238                                         l3669 221C  
                                       l2991 390E                                         l2983 3564  
                                       l2975 3546                                         l2967 3514  
                                       l2959 34EA                                         l2895 37FA  
                                       l2887 1494                                         l2879 141E  
                                       l2799 0F34                                         l3599 1E56  
                                       l3759 24B8                                         l3695 2268  
                                       l3687 2250                                         l3679 223C  
                                       l2985 356C                                         l2977 3548  
                                       l2969 3522                                         l2993 38D6  
                                       l2897 380A                                         l2889 14AC  
                                       l3697 226C                                         l3689 2258  
                                main@curMove 01B4                                         l2979 354E  
                                       l2995 38DA                                         l2899 3814  
                                       l3699 2270                                         l2997 38E4  
                                       l2999 38F4                                         u1100 39A6  
                                       u1101 39A2                                         u1110 39BC  
                                       u1111 39B8                                         u1120 3714  
                                       u1200 34B0                                         u1121 3710  
                                       u1201 34AC                                         u1130 3732  
                                       u1210 331C                                         u1131 372E  
                                       u1211 3318                                         u1140 374E  
                                       u1300 2E52                                         u1220 33AE  
                                       u1141 374A                                         u1301 2E4E  
                                       u1221 33AA                                         u1150 2F20  
                                       u1310 2E66                                         u1230 2C14  
                                       u1151 2F1C                                         u1311 2E62  
                                       u1231 2C10                                         u1400 3B24  
                                       u1160 2FEA                                         u1320 2EF8  
                                       u1240 2C3C                                         u2200 1EA0  
                                       u1401 3B20                                         u1161 2FE6  
                                       u1321 2EF4                                         u1241 2C38  
                                       u2201 1E9C                                         u1250 2C7E  
                                       u1330 2A2C                                         u1410 0F34  
                                       u2210 1F7A                                         u1251 2C7A  
                                       u1331 2A28                                         u1411 0F30  
                                       u2211 1F76                                         u1260 2C92  
                                       u1340 2A54                                         u1500 14BC  
                                       u1420 0F72                                         u2220 2054  
                                       u1261 2C8E                                         u1341 2A50  
                                       u1501 14B8                                         u1421 0F6E  
                                       u2221 2050                                         u2301 23B2  
                                       u1270 2D24                                         u1510 37FA  
                                       u1190 3488                                         u1350 2A96  
                                       u1430 1004                                         u2230 212E  
                                       u1271 2D20                                         u1511 37F6  
                                       u1191 3484                                         u1351 2A92  
                                       u3007 2A66                                         u1431 1000  
                                       u2231 212A                                         u1600 34DE  
                                       u1280 2DE8                                         u1520 3834  
                                       u1360 2AAA                                         u1440 1096  
                                       u2160 1B70                                         u2320 245C  
                               _BAUD4CONbits 0EE9                                         u1601 34DA  
                                       u1281 2DE4                                         u1521 3830  
                                       u3017 2B0C                                         u1361 2AA6  
                                       u1441 1092                                         u2161 1B6C  
                                       u2321 2458                                         u2241 21BA  
                                       u1610 3504                                         u1290 2E10  
                                       u1530 31CC                                         u1370 2B3C  
                                       u1450 1198                                         u2170 1C12  
                                       u2330 24D8                                         u1611 3500  
                                       u1291 2E0C                                         u3107 26EC  
                                       u1531 31C8                                         u3027 3458  
                                       u1371 2B38                                         u1451 1194  
                                       u2171 1C0E                                         u2331 24D4  
                                       u2315 2442                                         u2251 21CC  
                                       u1620 3522                                         u1700 2618  
                                       u1540 31EE                                         u1380 38BE  
                                       u1460 124A                                         u2180 1CB4  
                                       u2340 24EA                                         u1621 351E  
                                       u3117 272C                                         u1701 2614  
                                       u3037 38EA                                         u1541 31EA  
                                       u1381 38B6                                         u1461 1246  
                                       u2181 1CB0                                         u2341 24E6  
                                       u2317 2446                                         u2261 21D8  
                                       u1630 353E                                         u1710 2636  
                                       u1550 3228                                         u1470 12FC  
                                       u2190 1DC6                                         u2270 228E  
                                       u1631 353A                                         u3127 2774  
                                       u1711 2632                                         u3047 3642  
                                       u1551 3224                                         u1471 12F8  
                                       u2191 1DC2                                         u2407 1C3C  
                                       u2271 228A                                         u1640 3564  
                                       u1720 2668                                         u1560 324A  
                                       u1480 13AE                                         u2280 2356  
                                       u1641 3560                                         u3137 2BE4  
                                       u1721 2664                                         u3057 2520  
                                       u1561 3246                                         u1481 13AA  
                                       u2417 1C74                                         u2281 2352  
                                       u1650 3874                                         u1570 3272  
                                       u1490 1494                                         u1730 3A6A  
                                       _T2PR 0FBC                                         u1651 3870  
                                       u3147 2C4E                                         u3067 2560  
                                       u1571 326E                                         u1491 1490  
                                       u2507 1F02                                         u2427 1CDE  
                                       u1731 3A66                                         u1660 388A  
                                       u1580 32A4                                         u1900 1B34  
                                       u1820 15D4                                         u1661 3886  
                                       u3157 2CF4                                         u3077 25A0  
                                       u1581 32A0                                         u1901 1B30  
                                       u1821 15D0                                         u2517 1F3A  
                                       u2437 1D16                                         u2357 22A0  
                                       u1590 34C4                                         u1670 25E4  
                                       u1398 38C0                                         u1910 1B5C  
                                       u1830 1612                                         u1591 34C0  
                                       u3167 2DB8                                         u3087 264C  
                                       u1671 25E0                                         u1911 1B58  
                                       u1831 160E                                         u2607 0E9C  
                                       u2527 1FA4                                         u2447 1D4E  
                                       u2295 2362                                         u2367 22E2  
                                       u1680 25F2                                         u1840 16A4  
                                       u3177 2E22                                         u3097 26AC  
                                       u1681 25EE                                         u1841 16A0  
                                       u2617 0ED4                                         u2537 1FDC  
                                       u2457 1D86                                         u2297 2366  
                                       u2377 230E                                         u1690 2600  
                                       u1850 1736                                         u3187 2EC8  
                                       u1691 25FC                                         u1851 1732  
                                       u2707 11C2                                         u2627 0F9C  
                                       u2547 2014                                         u2467 1DF0  
                                       u2387 1B9A                                         u1860 1838  
                                       u1861 1834                                         u2717 11FA  
                                       u2637 0FD4                                         u2557 207E  
                                       u2477 1E28                                         u2397 1BD2  
                                       u1870 18EA                                         u1871 18E6  
                                       u2807 1558                                         u2727 1274  
                                       u2647 102E                                         u2567 20B6  
                                       u2487 1E60                                         u1880 199C  
                                       u1881 1998                                         u2817 1590  
                                       u2737 12AC                                         u2657 1066  
                                       u2577 20EE                                         u2497 1ECA  
                                       u1890 1A4E                                         u1891 1A4A  
                                       u2907 1862                                         u2827 163C  
                                       u2747 1326                                         u2667 10C0  
                                       u2587 0E2C                                         u2917 189A  
                                       u2837 1674                                         u2757 135E  
                                       u2677 10F8                                         u2597 0E64  
                                       u2927 1914                                         u2847 16CE  
                                       u2767 13D8                                         u2687 1130  
                                       u2937 194C                                         u2857 1706  
                                       u2777 1410                                         u2697 1168  
                                       u2947 19C6                                         u2867 1760  
                                       u2787 14E8                                         u2957 19FE  
                                       u2877 1798                                         u2797 1520  
                                       u2967 1A78                                         u2887 17D0  
                                       u2977 1AB0                                         u2897 1808  
                                       u2987 337E                                         u2997 29FC  
                lostReturnHome@straightSpeed 0036                                         _main 21B4  
                                       _move 1B5E                                         _lost 01FA  
                                       _wall 01FB                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         btemp 004B  
                                       _stop 32C6                                         prodh 0FF4  
                                       prodl 0FF3                                         start 0098  
                        main@reverseDuration 01AE                             __end_of_ADC_init 3B14  
                       ?i2_color_writetoaddr 0003                              __end_of_HighISR 0098  
                      lostReturnHome@curMove 0035                                 ___param_bank 0000  
                       __end_of_batteryLevel 3894                              __end_of___aldiv 32C6  
                                      ?_main 0001                                        _ADPCH 0F5F  
                            __end_of___awdiv 3576                                        ?_move 00D8  
                                      ?_stop 001F                              ___awdiv@divisor 000E  
                            __end_of___lwdiv 376E                                        i2l131 3ADA  
                                      i2l128 36F8                                        i2l330 3A30  
                                      i2l181 39BE                                        i2l344 3B42  
                                      i2l184 39E4                                        i2l337 3A56  
                                      i2l193 3BA2                                        i2l187 3BAC  
                                      i2l291 008C                                        i2l196 3B70  
                            ___awdiv@counter 0010                                        _TMR0H 0FD4  
                                      _TMR0L 0FD3                          ___lmul@multiplicand 0010  
                 __end_of_I2C_2_Master_Start 3B9A                   __end_of_I2C_2_Master_Write 3B66  
                                 _Buggy_init 390E                       returnHome@straightRamp 0038  
                     returnHome@straightTime 0033                                        tablat 0FF5  
                                      plusw0 0FEB                                        plusw2 0FDB  
                                      ttemp5 004C                                        ttemp6 004F  
                                      ttemp7 0053                                        stop@i 0027  
                                      status 0FD8                                        wtemp8 004C  
                      ??i2_color_writetoaddr 0004                                 main@turnRamp 01B1  
                      _I2C_2_Master_RepStart 3B7C                           putCharToRxBuf@byte 0001  
                            __initialization 376E                    get16bitTMR0val@timer_high 0012  
                               __end_of_main 24EE                                 __end_of_move 21B4  
                               __end_of_stop 33CE                          move@reverseDuration 00E3  
                            _get16bitTMR0val 396E                                       ??_main 0043  
                                     ??_move 0041                                       ??_stop 0024  
                              __activetblptr 0000                                calibration@mL 002D  
                              calibration@mR 002F                      __end_of_color_normalise 31BA  
                     returnHome@turnDuration 003A                                 ?_setMotorPWM 0019  
                                     _ADRESH 0F64                                       _CCPR1H 0FAA  
                                     _CCPR2H 0FA6                                       _CCPR3H 0F25  
                                     _CCPR4H 0F21                             ___awdiv@dividend 000C  
                     lostReturnHome@turnRamp 003B                                       _RC0PPS 0E62  
                                     _RC4REG 0EE3                                       _RE2PPS 0E74  
                                     _RC7PPS 0E69                                       _RD5PPS 0E6F  
                                     _RE4PPS 0E76                                       _RD6PPS 0E70  
                                     i2l2505 39BE                                       i2l2507 39CE  
                                     i2l3341 3A2E                                       i2l3343 3A32  
                                     i2l3351 3B2C                                       i2l3335 3A0E  
                                     i2l2711 3B9E                                       i2l3511 002C  
                                     i2l3345 3A42                                       i2l3337 3A1E  
                                     i2l2705 3BA4                                       i2l2713 3B68  
                                     i2l3521 0056                                       i2l3513 0030  
                                     i2l3505 0012                                       i2l3347 3A46  
                                     i2l3339 3A22                                       i2l2707 3BA8  
                                     i2l2715 3B6C                                       i2l3371 36C6  
                                     i2l3363 3680                                       i2l3523 005C  
                                     i2l3515 003E                                       i2l3507 0022  
                                     i2l2709 3B9A                                       i2l3373 36D0  
                                     i2l3365 3694                                       i2l3525 006C  
                                     i2l3517 0044                                       i2l3509 0028  
                                     i2l3375 36DA                                       i2l3367 36A0  
                                     i2l3527 0074                                       i2l3519 0048  
                                     i2l3377 36E4                                       i2l3369 36B6  
                                     i2l3529 0088                                       i2l3379 36EE  
                                     _RG6PPS 0E88                                       i2l2989 3ABE  
                                  ??_HighISR 000A                     __end_of_color_click_init 390E  
                                     _TMR0IE 714D                                       _TMR0IF 719D  
                                     _RX4PPS 0E15                                       _TX4REG 0EE4  
                               ??_ADC_getval 000C                                ??_Timer0_init 000C  
                        calibration@turnRamp 0034                      calibration@turnDuration 0032  
                               _CCPTMRS0bits 0FAD                             _getCharFromTxBuf 3A32  
                                     ___lmul 37DC                                    ??___aldiv 0020  
                                     ___wmul 39E6                                    ??___awdiv 0010  
                                  ??___lwdiv 0016                                       clear_0 37AC  
                                     clear_1 37B8                                       clear_2 37C4  
                           ___awdiv@quotient 0012                                       isa$std 0001  
                    returnHome@straightSpeed 0036                                 __pdataCOMRAM 0049  
                                     move@mL 00D8                                       move@mR 00DA  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                  ?_ADC_init 0001                                       stop@mL 001F  
                                     stop@mR 0021                                  ?_Buggy_init 0001  
                          ??_initDCmotorsPWM 000E                           __end_of_ADC_getval 3B2C  
                 i2color_writetoaddr@address 0004                             __end_of_turnLeft 2F04  
                 lostReturnHome@moveSequence 0031                        __end_of_isDataInTxBuf 3B44  
                                 __accesstop 0060                      __end_of__initialization 37D2  
                            fullSpeedAhead@i 0028                                main@turnSpeed 01B0  
                     ?_I2C_2_Master_RepStart 0001                                ___rparam_used 0001  
              lostReturnHome@reverseDuration 0037                              _Interrupts_init 3B44  
                             __pcstackCOMRAM 0001                      __end_of_get16bitTMR0val 3996  
                               ?_white_Light 0001                                 __pidataBANK1 3BAE  
                   get16bitTMR0val@timer_low 0010                     get16bitTMR0val@timer_val 0014  
               ?_color_clear_init_interrupts 0001                             _reverseOneSquare 2976  
                        __end_of_Timer0_init 3ABC                             ?_color_normalise 0026  
                                 ??_ADC_init 000C                                 _batteryLevel 3846  
                                 __pbssBANK0 0060                                   __pbssBANK1 01D2  
                                 __pbssBANK2 0200                            _color_writetoaddr 3A7C  
                               _T2CLKCONbits 0FBF                               _lostReturnHome 14BE  
                         ?_color_writetoaddr 000E                                      ?___lmul 000C  
                                    ?___wmul 000C                               ___lmul@product 0014  
              ??_color_clear_init_interrupts 0010                                  move@curMove 00E1  
                    lostReturnHome@turnSpeed 0039                          ??_color_writetoaddr 000F  
                                    _SP4BRGH 0EE6                                      _SP4BRGL 0EE5  
                 fullSpeedAhead@straightRamp 0024                        turnRight@turnDuration 0024  
                                    _SSP2ADD 0ED6                                      _SSP2BUF 0ED5  
                                 _color_read 2788                      __end_of_Interrupts_init 3B5A  
                     color_writetoaddr@value 000E                                      _HighISR 0008  
                  __end_of_color_writetoaddr 3A9C                       __end_of_lostReturnHome 1B5E  
                                  _ADREFbits 0F58                           _I2C_2_Master_Start 3B90  
                                 _initUSART4 3ADC                          i2_I2C_2_Master_Idle 39BE  
                         _I2C_2_Master_Write 3B5A                                      __Hparam 0000  
                        i2_I2C_2_Master_Stop 3B9A                                      __Lparam 0000  
                                _Timer0_init 3A9C                         calibration@turnSpeed 0031  
                           ?_get16bitTMR0val 000C                                      ___aldiv 31BA  
                                    ___awdiv 34B2                              lostReturnHome@i 0040  
                              ??_calibration 0035                          ?_I2C_2_Master_Start 0001  
                                    ___lwdiv 36FA                          ?_I2C_2_Master_Write 0001  
                               __psmallconst 0E00                                      _ambient 0049  
                                    __pcinit 376E                                      __ramtop 0E00  
                                  ?_turnLeft 001F                                      __ptext0 21B4  
                                    __ptext1 3A58                                      __ptext2 1B5E  
                                    __ptext3 0E02                                      __ptext4 14BE  
                                    __ptext5 32C6                                      __ptext6 2976  
                                    __ptext7 3B72                                      __ptext8 396E  
                                    __ptext9 33CE                         ?i2_I2C_2_Master_Idle 0001  
                                  _T2CONbits 0FBD                         ?i2_I2C_2_Master_Stop 0001  
                           ___aldiv@dividend 0018                                    _T2HLTbits 0FBE  
                              _RxBufWriteCnt 0048                     __end_of_getCharFromTxBuf 3A58  
                                    main@buf 0100                         ??_I2C_2_Master_Start 000D  
                       ??_I2C_2_Master_Write 000D                        color_normalise@RGBC_n 002E  
                       end_of_initialization 37D2              ??i2_color_clear_init_interrupts 0005  
                __end_ofi2_color_writetoaddr 3ADC                             ADC_getval@tmpval 000C  
                          reverseOneSquare@i 0029                            ?_color_click_init 0001  
                            ?_lostReturnHome 002D                                   _resetTimer 3B72  
                         ??_color_click_init 0015                             ___aldiv@quotient 0022  
                 batteryLevel@batteryQuarter 0015                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc2 0FDE                   batteryLevel@batteryVoltage 0014  
                                 main@F14611 009C                                   main@F14613 0200  
                                 main@F14607 01D2                                   main@F14616 01FC  
                                 _returnHome 0E02                              _initDCmotorsPWM 3576  
                                 ??_turnLeft 0026                                    _PORTFbits 0F8E  
                         setMotorPWM@negDuty 001E                        ??i2_I2C_2_Master_Idle 0001  
                              move@turnSpeed 00E5                            __end_of_turnRight 2D30  
                      ??i2_I2C_2_Master_Stop 0002                                   main@RGBC_n 01A6  
                        __end_of_calibration 2788                                  returnHome@i 0040  
                                  _TRISAbits 0F81                           setMotorPWM@posDuty 001D  
                                  _TRISBbits 0F82                                    _TRISCbits 0F83  
                                  _TRISDbits 0F84                                    _TRISEbits 0F85  
                                  _TRISFbits 0F86                                    _TRISGbits 0F87  
                                  _TRISHbits 0F88                             white_Light@state 000C  
                               ??_Buggy_init 000C                             fullSpeedAhead@mL 001F  
                           fullSpeedAhead@mR 0021                                  ?_color_read 0010  
                   color_writetoaddr@address 000F                      ??_I2C_2_Master_RepStart 000D  
                   __end_of_reverseOneSquare 2B5C                             ?_Interrupts_init 0001  
                              stop@cur_power 0029                                  _CCP1CONbits 0FAB  
                               _EUSART4RXbuf 00C4                          returnHome@turnSpeed 0039  
                               _EUSART4TXbuf 0060                                  _CCP2CONbits 0FA7  
                                _CCP3CONbits 0F26                   lostReturnHome@straightRamp 0038  
                 lostReturnHome@straightTime 0033                                  ?_initUSART4 0001  
                                _CCP4CONbits 0F22                                   main@motorL 01C8  
                                 main@motorR 01BE                               color_read@RGBC 0010  
                             _fullSpeedAhead 33CE                               __end_of___lmul 3846  
                       turnLeft@turnDuration 0024                               __end_of___wmul 3A0C  
                         __end_of_Buggy_init 3944                                __pidataCOMRAM 3BB2  
                        start_initialization 376E                                _TxBufWriteCnt 0046  
                 lostReturnHome@turnDuration 003A                             move@moveSequence 00DD  
      __end_ofi2_color_clear_init_interrupts 36FA                i2_color_clear_init_interrupts 3680  
                                ?_resetTimer 0001                      __end_of_initDCmotorsPWM 3606  
                     __end_of_fullSpeedAhead 34B2                           turnRight@cur_power 002B  
                                   ??___lmul 0014                                     ??___wmul 0010  
                             _putCharToRxBuf 3A0C                          color_normalise@RGBC 0026  
                                __pdataBANK1 01FC                i2I2C_2_Master_Write@data_byte 0002  
                                _calibration 24EE                                  ?_returnHome 002D  
               reverseOneSquare@straightRamp 0025                 __end_ofi2_I2C_2_Master_Start 3BAE  
               __end_ofi2_I2C_2_Master_Write 3B72                            turnLeft@cur_power 002B  
                                __pbssCOMRAM 0045                                __pcstackBANK0 00D8  
                              __pcstackBANK1 0100                                     ?_HighISR 0001  
                           stop@straightRamp 0023                             ___lwdiv@dividend 0012  
                               ?_Timer0_init 0001                       __end_of_putCharToRxBuf 3A32  
                            ?_fullSpeedAhead 001F                                    __pintcode 0008  
                                   ?___aldiv 0018                           turnRight@turnSpeed 0023  
                                   ?___awdiv 000C                                     ?___lwdiv 0012  
                       I2C_2_Master_Read@ack 000E                         I2C_2_Master_Read@tmp 000F  
                                __smallconst 0E00                             main@moveSequence 017A  
                          _I2C_2_Master_Idle 3996                            _I2C_2_Master_Init 3944  
                          _I2C_2_Master_Read 3894                            turnLeft@turnSpeed 0023  
                          _I2C_2_Master_Stop 3B86                                 _RxBufReadCnt 0047  
                                   _ADC_init 3AFA                           ?_I2C_2_Master_Idle 0001  
                         ?_I2C_2_Master_Init 0001                           ?_I2C_2_Master_Read 0001  
                              ??_setMotorPWM 001B                           ?_I2C_2_Master_Stop 0001  
                           ___lwdiv@quotient 0016                     initDCmotorsPWM@PWMperiod 000C  
                          ?_getCharFromTxBuf 0001                             ??_lostReturnHome 003C  
                         ??_getCharFromTxBuf 0001                            move@straightSpeed 00E2  
                            ___aldiv@divisor 001C                          ??_I2C_2_Master_Idle 000C  
                            ___aldiv@counter 0020                          ??_I2C_2_Master_Init 000C  
                        ??_I2C_2_Master_Read 000D                               ___wmul@product 0010  
                                   _LATAbits 0F79                          ??_I2C_2_Master_Stop 000D  
                                   _LATCbits 0F7B                                _isDataInTxBuf 3B2C  
                                   _LATDbits 0F7C                                     _LATEbits 0F7D  
                                   _LATFbits 0F7E                                     _LATGbits 0F7F  
                                   _LATHbits 0F80                                     _IPR0bits 0E1F  
                                   _PIE0bits 0E29                                     _PIE4bits 0E2D  
                                   i2u210_40 0056                                     i2u210_41 0052  
                                   i2u211_40 006C                                     i2u211_41 0068  
                                   i2u212_40 0088                                     i2u212_41 0084  
                                   i2u117_40 39CE                                     i2u117_41 39CA  
                                   i2u118_40 39E4                                     i2u118_41 39E0  
                                turnRight@mL 001F                                  turnRight@mR 0021  
                                   i2u208_40 0022                                     i2u208_41 001E  
                                   i2u209_40 003E                                     i2u209_41 003A  
                                   _PIR0bits 0E33                                     i2u319_47 36BC  
                                   i2u192_40 3A1E                                     i2u192_41 3A1A  
                                   i2u193_40 3A42                                     i2u193_41 3A3E  
                                   i2u194_40 3B40                                     i2u194_41 3B3A  
                                   i2u195_40 3B42                                     _PIR4bits 0E37  
                            ?_putCharToRxBuf 0001                             ?_initDCmotorsPWM 000C  
                fullSpeedAhead@straightSpeed 0023          __end_of_color_clear_init_interrupts 3680  
             ?i2_color_clear_init_interrupts 0001                  _color_clear_init_interrupts 3606  
                                   _SSP2CON2 0EDA                                     _SSP2STAT 0ED8  
                               move@turnRamp 00E7                                   _ADCON0bits 0F60  
                  __end_of_I2C_2_Master_Idle 39BE                    __end_of_I2C_2_Master_Init 396E  
                  __end_of_I2C_2_Master_Read 38D6                            ___wmul@multiplier 000C  
                  __end_of_I2C_2_Master_Stop 3B90     color_clear_init_interrupts@low_threshold 0013  
 i2color_clear_init_interrupts@low_threshold 0008                                 setMotorPWM@m 0019  
                I2C_2_Master_Write@data_byte 000D                           returnHome@turnRamp 003B  
                                  main@color 01B2                                 _TxBufReadCnt 0045  
                   i2color_writetoaddr@value 0003                                    _turnRight 2B5C  
                  returnHome@reverseDuration 0037                                 ??_color_read 0012  
                          ___lmul@multiplier 000C                                    copy_data0 3782  
                             ?_isDataInTxBuf 0001                __end_of_I2C_2_Master_RepStart 3B86  
                          ?_reverseOneSquare 001F                          __end_of_setMotorPWM 3070  
                               ??_initUSART4 000C                         i2_I2C_2_Master_Start 3BA4  
            reverseOneSquare@reverseDuration 0024                         i2_I2C_2_Master_Write 3B66  
                         ??_reverseOneSquare 0026                                     __Hrparam 0000  
                          ??_color_normalise 0030                                   _ADC_getval 3B14  
                           main@testSequence 01A2                                     __Lrparam 0000  
                              ??_white_Light 000C                  __end_ofi2_I2C_2_Master_Idle 39E6  
                __end_ofi2_I2C_2_Master_Stop 3BA4                             lostReturnHome@mL 002D  
                           lostReturnHome@mR 002F                           __end_of_color_read 2976  
                                 _ANSELBbits 0E9A                                   _ANSELDbits 0EA7  
                                 _ANSELFbits 0EB4                                   _T0CON0bits 0FD5  
                                 _T0CON1bits 0FD6                reverseOneSquare@straightSpeed 0023  
                            ___lwdiv@divisor 0014                       returnHome@moveSequence 0031  
                         __end_of_initUSART4 3AFA                              ___lwdiv@counter 0018  
                          turnRight@turnRamp 0025                                   ?_turnRight 001F  
                                   __ptext10 3ADC                                     __ptext11 3576  
                                   __ptext20 3A7C                                     __ptext12 2788  
                                   __ptext21 3B5A                                     __ptext13 3B7C  
                                   __ptext30 39E6                                     __ptext22 3B86  
                                   __ptext14 3894                                     __ptext31 36FA  
                                   __ptext23 3B90                                     __ptext15 3070  
                                   __ptext40 3680                                     __ptext32 3846  
                                   __ptext24 3996                                     __ptext16 37DC  
                                   __ptext41 3ABC                                     __ptext33 34B2  
                                   __ptext25 3944                                     __ptext17 31BA  
                                   __ptext42 3B66                                     __ptext34 3AFA  
                                   __ptext26 24EE                                     __ptext18 38D6  
                                   __ptext43 3B9A                                     __ptext35 3B14  
                                   __ptext27 2B5C                                     __ptext19 3606  
                                   __ptext44 3BA4                                     __ptext36 3A9C  
                                   __ptext28 2D30                                     __ptext45 39BE  
                                   __ptext37 3B44                                     __ptext29 2F04  
                                   __ptext46 3A0C                                     __ptext38 390E  
                                   __ptext47 3B2C                                     __ptext48 3A32  
                                  move@color 00DC                                ?_batteryLevel 0001  
                               _SSP2CON1bits 0ED9                                 _SSP2CON2bits 0EDA  
                           turnLeft@turnRamp 0025                                   turnLeft@mL 001F  
                                 turnLeft@mR 0021                        ?i2_I2C_2_Master_Start 0001  
                           move@straightRamp 00E4                        ?i2_I2C_2_Master_Write 0001  
                           move@straightTime 00DF                            returnHome@curMove 0035  
                               ??_resetTimer 000C                                   turnRight@i 0029  
                                   isa$xinst 0000                                   _RC4STAbits 0EE7  
                                   main@RGBC 01B6                                     int$flags 004B  
                               ?_calibration 002D                                 ??_returnHome 003C  
                                   _turnLeft 2D30                      fullSpeedAhead@cur_power 002A  
                        __end_of_white_Light 3A7C                                   _INTCONbits 0FF2  
                  reverseOneSquare@cur_power 002B                           reverseOneSquare@mL 001F  
                         reverseOneSquare@mR 0021                           __end_of_resetTimer 3B7C  
                           move@turnDuration 00E6                               ??_batteryLevel 0014  
                                _setMotorPWM 2F04                            ??_get16bitTMR0val 000E  
                            ??_isDataInTxBuf 0001                                     intlevel2 0000  
                           ??_fullSpeedAhead 0025                           __end_of_returnHome 14BE  
                                  turnLeft@i 0029                                  ?_ADC_getval 0001  
                          main@straightSpeed 01AF                             _color_click_init 38D6  
                                 _SSP2DATPPS 0E1D                                   _SSP2CLKPPS 0E1C  
                               ___aldiv@sign 0021                                  ??_turnRight 0026  
                           main@straightRamp 01B3                             main@straightTime 0128  
                                 _TX4STAbits 0EE8                       ??i2_I2C_2_Master_Start 0002  
                     ??i2_I2C_2_Master_Write 0002                             ??_putCharToRxBuf 0001  
                               returnHome@mL 002D                                 returnHome@mR 002F  
