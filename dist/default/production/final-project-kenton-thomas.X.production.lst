

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 12:58:43 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Generated 21/07/2023 GMT
    78                           ; 
    79                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F67K40 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	idataCOMRAM
   113   00528C                     __pidataCOMRAM:
   114                           	callstack 0
   115                           
   116                           ;initializer for main@F14659
   117   00528C  02                 	db	2
   118   00528D  01                 	db	1
   119   00528E  01                 	db	1
   120   00528F  08                 	db	8
   121                           
   122                           ;initializer for _ambient
   123   005290  01F4               	dw	500
   124   000000                     _TRISCbits	set	3971
   125   000000                     _RC4STAbits	set	3815
   126   000000                     _SP4BRGH	set	3814
   127   000000                     _SP4BRGL	set	3813
   128   000000                     _TX4STAbits	set	3816
   129   000000                     _BAUD4CONbits	set	3817
   130   000000                     _TX4REG	set	3812
   131   000000                     _TRISBbits	set	3970
   132   000000                     _TRISAbits	set	3969
   133   000000                     _TRISEbits	set	3973
   134   000000                     _TRISGbits	set	3975
   135   000000                     _LATFbits	set	3966
   136   000000                     _TRISFbits	set	3974
   137   000000                     _TRISHbits	set	3976
   138   000000                     _TRISDbits	set	3972
   139   000000                     _LATEbits	set	3965
   140   000000                     _LATGbits	set	3967
   141   000000                     _LATHbits	set	3968
   142   000000                     _SSP2CON2bits	set	3802
   143   000000                     _TMR0IF	set	29085
   144   000000                     _TMR0IE	set	29005
   145   000000                     _RX4PPS	set	3605
   146   000000                     _SSP2CLKPPS	set	3612
   147   000000                     _SSP2DATPPS	set	3613
   148   000000                     _PIE0bits	set	3625
   149   000000                     _CCPR4H	set	3873
   150   000000                     _CCPR3H	set	3877
   151   000000                     _CCPR2H	set	4006
   152   000000                     _CCPR1H	set	4010
   153   000000                     _CCP1CONbits	set	4011
   154   000000                     _CCPTMRS0bits	set	4013
   155   000000                     _T2PR	set	4028
   156   000000                     _T2CONbits	set	4029
   157   000000                     _INTCONbits	set	4082
   158   000000                     _CCP2CONbits	set	4007
   159   000000                     _CCP3CONbits	set	3878
   160   000000                     _ADREFbits	set	3928
   161   000000                     _LATAbits	set	3961
   162   000000                     _LATDbits	set	3964
   163   000000                     _PORTFbits	set	3982
   164   000000                     _CCP4CONbits	set	3874
   165   000000                     _PIE4bits	set	3629
   166   000000                     _RD5PPS	set	3695
   167   000000                     _ANSELDbits	set	3751
   168   000000                     _SSP2ADD	set	3798
   169   000000                     _SSP2CON1bits	set	3801
   170   000000                     _LATCbits	set	3963
   171   000000                     _RC4REG	set	3811
   172   000000                     _SSP2CON2	set	3802
   173   000000                     _SSP2STAT	set	3800
   174   000000                     _ANSELFbits	set	3764
   175   000000                     _SSP2BUF	set	3797
   176   000000                     _IPR0bits	set	3615
   177   000000                     _RE2PPS	set	3700
   178   000000                     _ANSELBbits	set	3738
   179   000000                     _RD6PPS	set	3696
   180   000000                     _PIR0bits	set	3635
   181   000000                     _PIR4bits	set	3639
   182   000000                     _RC0PPS	set	3682
   183   000000                     _RC7PPS	set	3689
   184   000000                     _ADPCH	set	3935
   185   000000                     _ADRESH	set	3940
   186   000000                     _ADCON0bits	set	3936
   187   000000                     _RE4PPS	set	3702
   188   000000                     _RG6PPS	set	3720
   189   000000                     _TMR0L	set	4051
   190   000000                     _TMR0H	set	4052
   191   000000                     _T0CON0bits	set	4053
   192   000000                     _T0CON1bits	set	4054
   193   000000                     _T2CLKCONbits	set	4031
   194   000000                     _T2HLTbits	set	4030
   195                           
   196                           ; #config settings
   197                           
   198                           	psect	cinit
   199   004E7E                     __pcinit:
   200                           	callstack 0
   201   004E7E                     start_initialization:
   202                           	callstack 0
   203   004E7E                     __initialization:
   204                           	callstack 0
   205                           
   206                           ; Initialize objects allocated to COMRAM (6 bytes)
   207                           ; load TBLPTR registers with __pidataCOMRAM
   208   004E7E  0E8C               	movlw	low __pidataCOMRAM
   209   004E80  6EF6               	movwf	tblptrl,c
   210   004E82  0E52               	movlw	high __pidataCOMRAM
   211   004E84  6EF7               	movwf	tblptrh,c
   212   004E86  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   213   004E88  6EF8               	movwf	tblptru,c
   214   004E8A  EE00  F04B         	lfsr	0,__pdataCOMRAM
   215   004E8E  EE10 F006          	lfsr	1,6
   216   004E92                     copy_data0:
   217   004E92  0009               	tblrd		*+
   218   004E94  CFF5 FFEE          	movff	tablat,postinc0
   219   004E98  50E5               	movf	postdec1,w,c
   220   004E9A  50E1               	movf	fsr1l,w,c
   221   004E9C  E1FA               	bnz	copy_data0
   222                           
   223                           ; Clear objects allocated to BANK2 (162 bytes)
   224   004E9E  EE02  F000         	lfsr	0,__pbssBANK2
   225   004EA2  0EA2               	movlw	162
   226   004EA4                     clear_0:
   227   004EA4  6AEE               	clrf	postinc0,c
   228   004EA6  06E8               	decf	wreg,f,c
   229   004EA8  E1FD               	bnz	clear_0
   230                           
   231                           ; Clear objects allocated to BANK0 (80 bytes)
   232   004EAA  EE00  F060         	lfsr	0,__pbssBANK0
   233   004EAE  0E50               	movlw	80
   234   004EB0                     clear_1:
   235   004EB0  6AEE               	clrf	postinc0,c
   236   004EB2  06E8               	decf	wreg,f,c
   237   004EB4  E1FD               	bnz	clear_1
   238                           
   239                           ; Clear objects allocated to COMRAM (6 bytes)
   240   004EB6  6A4A               	clrf	(__pbssCOMRAM+5)& (0+255),c
   241   004EB8  6A49               	clrf	(__pbssCOMRAM+4)& (0+255),c
   242   004EBA  6A48               	clrf	(__pbssCOMRAM+3)& (0+255),c
   243   004EBC  6A47               	clrf	(__pbssCOMRAM+2)& (0+255),c
   244   004EBE  6A46               	clrf	(__pbssCOMRAM+1)& (0+255),c
   245   004EC0  6A45               	clrf	__pbssCOMRAM& (0+255),c
   246   004EC2                     end_of_initialization:
   247                           	callstack 0
   248   004EC2                     __end_of__initialization:
   249                           	callstack 0
   250   004EC2  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   251   004EC4  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   252   004EC6  0100               	movlb	0
   253   004EC8  EFA3  F014         	goto	_main	;jump to C main() function
   254                           
   255                           	psect	bssCOMRAM
   256   000045                     __pbssCOMRAM:
   257                           	callstack 0
   258   000045                     _lost:
   259                           	callstack 0
   260   000045                     	ds	1
   261   000046                     _wall:
   262                           	callstack 0
   263   000046                     	ds	1
   264   000047                     _TxBufReadCnt:
   265                           	callstack 0
   266   000047                     	ds	1
   267   000048                     _TxBufWriteCnt:
   268                           	callstack 0
   269   000048                     	ds	1
   270   000049                     _RxBufReadCnt:
   271                           	callstack 0
   272   000049                     	ds	1
   273   00004A                     _RxBufWriteCnt:
   274                           	callstack 0
   275   00004A                     	ds	1
   276                           
   277                           	psect	dataCOMRAM
   278   00004B                     __pdataCOMRAM:
   279                           	callstack 0
   280   00004B                     main@F14659:
   281                           	callstack 0
   282   00004B                     	ds	4
   283   00004F                     _ambient:
   284                           	callstack 0
   285   00004F                     	ds	2
   286                           
   287                           	psect	bssBANK0
   288   000060                     __pbssBANK0:
   289                           	callstack 0
   290   000060                     _EUSART4TXbuf:
   291                           	callstack 0
   292   000060                     	ds	60
   293   00009C                     _EUSART4RXbuf:
   294                           	callstack 0
   295   00009C                     	ds	20
   296                           
   297                           	psect	bssBANK2
   298   000200                     __pbssBANK2:
   299                           	callstack 0
   300   000200                     	ds	82
   301   000252                     	ds	40
   302   00027A                     	ds	40
   303                           
   304                           	psect	cstackBANK1
   305   000100                     __pcstackBANK1:
   306                           	callstack 0
   307   000100                     main@buf:
   308                           	callstack 0
   309                           
   310                           ; 40 bytes @ 0x0
   311   000100                     	ds	40
   312   000128                     main@straightTime:
   313                           	callstack 0
   314                           
   315                           ; 82 bytes @ 0x28
   316   000128                     	ds	82
   317   00017A                     main@moveSequence:
   318                           	callstack 0
   319                           
   320                           ; 40 bytes @ 0x7A
   321   00017A                     	ds	40
   322   0001A2                     main@testSequence:
   323                           	callstack 0
   324                           
   325                           ; 4 bytes @ 0xA2
   326   0001A2                     	ds	4
   327   0001A6                     main@reverseDuration:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0xA6
   331   0001A6                     	ds	1
   332   0001A7                     main@turnSpeed:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0xA7
   336   0001A7                     	ds	1
   337   0001A8                     main@turnRamp:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0xA8
   341   0001A8                     	ds	1
   342   0001A9                     main@red:
   343                           	callstack 0
   344                           
   345                           ; 6 bytes @ 0xA9
   346   0001A9                     	ds	6
   347   0001AF                     main@green:
   348                           	callstack 0
   349                           
   350                           ; 6 bytes @ 0xAF
   351   0001AF                     	ds	6
   352   0001B5                     main@blue:
   353                           	callstack 0
   354                           
   355                           ; 6 bytes @ 0xB5
   356   0001B5                     	ds	6
   357   0001BB                     main@yellow:
   358                           	callstack 0
   359                           
   360                           ; 6 bytes @ 0xBB
   361   0001BB                     	ds	6
   362   0001C1                     main@pink:
   363                           	callstack 0
   364                           
   365                           ; 6 bytes @ 0xC1
   366   0001C1                     	ds	6
   367   0001C7                     main@orange:
   368                           	callstack 0
   369                           
   370                           ; 6 bytes @ 0xC7
   371   0001C7                     	ds	6
   372   0001CD                     main@lightblue:
   373                           	callstack 0
   374                           
   375                           ; 6 bytes @ 0xCD
   376   0001CD                     	ds	6
   377   0001D3                     main@white:
   378                           	callstack 0
   379                           
   380                           ; 6 bytes @ 0xD3
   381   0001D3                     	ds	6
   382   0001D9                     main@straightSpeed:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0xD9
   386   0001D9                     	ds	1
   387   0001DA                     main@curMove:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0xDA
   391   0001DA                     	ds	1
   392   0001DB                     main@color:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0xDB
   396   0001DB                     	ds	1
   397   0001DC                     main@straightRamp:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0xDC
   401   0001DC                     	ds	1
   402   0001DD                     main@turnDuration:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0xDD
   406   0001DD                     	ds	1
   407   0001DE                     main@HSV:
   408                           	callstack 0
   409                           
   410                           ; 6 bytes @ 0xDE
   411   0001DE                     	ds	6
   412   0001E4                     main@RGBC:
   413                           	callstack 0
   414                           
   415                           ; 8 bytes @ 0xE4
   416   0001E4                     	ds	8
   417   0001EC                     main@motorR:
   418                           	callstack 0
   419                           
   420                           ; 10 bytes @ 0xEC
   421   0001EC                     	ds	10
   422   0001F6                     main@motorL:
   423                           	callstack 0
   424                           
   425                           ; 10 bytes @ 0xF6
   426   0001F6                     	ds	10
   427                           
   428                           	psect	cstackBANK0
   429   0000B0                     __pcstackBANK0:
   430                           	callstack 0
   431   0000B0                     ??_color_detect:
   432   0000B0                     move@mL:
   433                           	callstack 0
   434   0000B0                     _rgb_2_hsv$3594:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0x0
   438   0000B0                     	ds	2
   439   0000B2                     color_detect@color:
   440                           	callstack 0
   441   0000B2                     move@mR:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x2
   445   0000B2                     	ds	2
   446   0000B4                     move@color:
   447                           	callstack 0
   448   0000B4                     rgb_2_hsv@cmin:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x4
   452   0000B4                     	ds	1
   453   0000B5                     move@moveSequence:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x5
   457   0000B5                     	ds	1
   458   0000B6                     _rgb_2_hsv$3592:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x6
   462   0000B6                     	ds	1
   463   0000B7                     move@straightTime:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x7
   467   0000B7                     	ds	1
   468   0000B8                     _rgb_2_hsv$3593:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x8
   472   0000B8                     	ds	1
   473   0000B9                     move@curMove:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x9
   477   0000B9                     	ds	1
   478   0000BA                     move@straightSpeed:
   479                           	callstack 0
   480   0000BA                     rgb_2_hsv@r:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xA
   484   0000BA                     	ds	1
   485   0000BB                     move@reverseDuration:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0xB
   489   0000BB                     	ds	1
   490   0000BC                     move@straightRamp:
   491                           	callstack 0
   492   0000BC                     rgb_2_hsv@cmax:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0xC
   496   0000BC                     	ds	1
   497   0000BD                     move@turnSpeed:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0xD
   501   0000BD                     	ds	1
   502   0000BE                     move@turnDuration:
   503                           	callstack 0
   504   0000BE                     rgb_2_hsv@diff:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0xE
   508   0000BE                     	ds	1
   509   0000BF                     move@turnRamp:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0xF
   513   0000BF                     	ds	1
   514   0000C0                     ??_move:
   515                           
   516                           ; 1 bytes @ 0x10
   517   0000C0                     	ds	2
   518   0000C2                     rgb_2_hsv@g:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x12
   522   0000C2                     	ds	2
   523   0000C4                     rgb_2_hsv@b:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x14
   527   0000C4                     	ds	2
   528   0000C6                     color_calibration@RGBC:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x16
   532   0000C6                     	ds	2
   533   0000C8                     color_calibration@HSV:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x18
   537   0000C8                     	ds	2
   538   0000CA                     color_calibration@red:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1A
   542   0000CA                     	ds	2
   543   0000CC                     color_calibration@green:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x1C
   547   0000CC                     	ds	2
   548   0000CE                     color_calibration@blue:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x1E
   552   0000CE                     	ds	2
   553   0000D0                     color_calibration@yellow:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x20
   557   0000D0                     	ds	2
   558   0000D2                     color_calibration@pink:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x22
   562   0000D2                     	ds	2
   563   0000D4                     color_calibration@orange:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x24
   567   0000D4                     	ds	2
   568   0000D6                     color_calibration@lightblue:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x26
   572   0000D6                     	ds	2
   573   0000D8                     color_calibration@white:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x28
   577   0000D8                     	ds	2
   578   0000DA                     ??_main:
   579                           
   580                           ; 1 bytes @ 0x2A
   581   0000DA                     	ds	2
   582                           
   583                           	psect	cstackCOMRAM
   584   000001                     __pcstackCOMRAM:
   585                           	callstack 0
   586   000001                     ??_getCharFromTxBuf:
   587   000001                     ??i2_I2C_2_Master_Idle:
   588   000001                     ?i2___lwdiv:
   589                           	callstack 0
   590   000001                     putCharToRxBuf@byte:
   591                           	callstack 0
   592   000001                     i2___lwdiv@dividend:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x0
   596   000001                     	ds	1
   597   000002                     i2I2C_2_Master_Write@data_byte:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x1
   601   000002                     	ds	1
   602   000003                     i2color_writetoaddr@value:
   603                           	callstack 0
   604   000003                     i2___lwdiv@divisor:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x2
   608   000003                     	ds	1
   609   000004                     i2color_writetoaddr@address:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x3
   613   000004                     	ds	1
   614   000005                     i2___lwdiv@quotient:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x4
   618   000005                     	ds	2
   619   000007                     i2___lwdiv@counter:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x6
   623   000007                     	ds	1
   624   000008                     ??i2_color_clear_init_interrupts:
   625                           
   626                           ; 1 bytes @ 0x7
   627   000008                     	ds	1
   628   000009                     i2color_clear_init_interrupts@high_threshold:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x8
   632   000009                     	ds	2
   633   00000B                     i2color_clear_init_interrupts@low_threshold:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0xA
   637   00000B                     	ds	2
   638   00000D                     ??_HighISR:
   639                           
   640                           ; 1 bytes @ 0xC
   641   00000D                     	ds	2
   642   00000F                     ??_I2C_2_Master_Idle:
   643   00000F                     ?_get16bitTMR0val:
   644                           	callstack 0
   645   00000F                     ?_max:
   646                           	callstack 0
   647   00000F                     ?_min:
   648                           	callstack 0
   649   00000F                     ?___wmul:
   650                           	callstack 0
   651   00000F                     ?___awdiv:
   652                           	callstack 0
   653   00000F                     ?___lmul:
   654                           	callstack 0
   655   00000F                     white_Light@state:
   656                           	callstack 0
   657   00000F                     ADC_getval@tmpval:
   658                           	callstack 0
   659   00000F                     max@a:
   660                           	callstack 0
   661   00000F                     min@a:
   662                           	callstack 0
   663   00000F                     initDCmotorsPWM@PWMperiod:
   664                           	callstack 0
   665   00000F                     ___wmul@multiplier:
   666                           	callstack 0
   667   00000F                     ___awdiv@dividend:
   668                           	callstack 0
   669   00000F                     ___lmul@multiplier:
   670                           	callstack 0
   671   00000F                     color_detect@HSV:
   672                           	callstack 0
   673                           
   674                           ; 6 bytes @ 0xE
   675   00000F                     	ds	1
   676   000010                     ??_I2C_2_Master_Read:
   677   000010                     I2C_2_Master_Write@data_byte:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0xF
   681   000010                     	ds	1
   682   000011                     ??_get16bitTMR0val:
   683   000011                     color_writetoaddr@value:
   684                           	callstack 0
   685   000011                     I2C_2_Master_Read@ack:
   686                           	callstack 0
   687   000011                     max@b:
   688                           	callstack 0
   689   000011                     min@b:
   690                           	callstack 0
   691   000011                     ___wmul@multiplicand:
   692                           	callstack 0
   693   000011                     ___awdiv@divisor:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x10
   697   000011                     	ds	1
   698   000012                     color_writetoaddr@address:
   699                           	callstack 0
   700   000012                     I2C_2_Master_Read@tmp:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x11
   704   000012                     	ds	1
   705   000013                     ___awdiv@counter:
   706                           	callstack 0
   707   000013                     color_read@RGBC:
   708                           	callstack 0
   709   000013                     get16bitTMR0val@timer_low:
   710                           	callstack 0
   711   000013                     ___wmul@product:
   712                           	callstack 0
   713   000013                     ___lmul@multiplicand:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0x12
   717   000013                     	ds	1
   718   000014                     ___awdiv@sign:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x13
   722   000014                     	ds	1
   723   000015                     ??_color_read:
   724   000015                     ?___lwdiv:
   725                           	callstack 0
   726   000015                     get16bitTMR0val@timer_high:
   727                           	callstack 0
   728   000015                     ___awdiv@quotient:
   729                           	callstack 0
   730   000015                     ___lwdiv@dividend:
   731                           	callstack 0
   732   000015                     color_detect@red:
   733                           	callstack 0
   734                           
   735                           ; 6 bytes @ 0x14
   736   000015                     	ds	2
   737   000017                     batteryLevel@batteryVoltage:
   738                           	callstack 0
   739   000017                     get16bitTMR0val@timer_val:
   740                           	callstack 0
   741   000017                     ___lwdiv@divisor:
   742                           	callstack 0
   743   000017                     ___lmul@product:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x16
   747   000017                     	ds	1
   748   000018                     batteryLevel@batteryQuarter:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x17
   752   000018                     	ds	1
   753   000019                     ___lwdiv@quotient:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x18
   757   000019                     	ds	2
   758   00001B                     ?___lldiv:
   759                           	callstack 0
   760   00001B                     ?___aldiv:
   761                           	callstack 0
   762   00001B                     ___lwdiv@counter:
   763                           	callstack 0
   764   00001B                     ___lldiv@dividend:
   765                           	callstack 0
   766   00001B                     ___aldiv@dividend:
   767                           	callstack 0
   768   00001B                     color_detect@green:
   769                           	callstack 0
   770                           
   771                           ; 6 bytes @ 0x1A
   772   00001B                     	ds	1
   773   00001C                     ??_color_clear_init_interrupts:
   774   00001C                     setMotorPWM@m:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x1B
   778   00001C                     	ds	1
   779   00001D                     color_clear_init_interrupts@high_threshold:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x1C
   783   00001D                     	ds	1
   784   00001E                     ??_setMotorPWM:
   785                           
   786                           ; 1 bytes @ 0x1D
   787   00001E                     	ds	1
   788   00001F                     color_clear_init_interrupts@low_threshold:
   789                           	callstack 0
   790   00001F                     ___lldiv@divisor:
   791                           	callstack 0
   792   00001F                     ___aldiv@divisor:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x1E
   796   00001F                     	ds	1
   797   000020                     setMotorPWM@posDuty:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x1F
   801   000020                     	ds	1
   802   000021                     ??_color_click_init:
   803   000021                     setMotorPWM@negDuty:
   804                           	callstack 0
   805   000021                     color_detect@blue:
   806                           	callstack 0
   807                           
   808                           ; 6 bytes @ 0x20
   809   000021                     	ds	1
   810   000022                     stop@mL:
   811                           	callstack 0
   812   000022                     turnLeft@mL:
   813                           	callstack 0
   814   000022                     turnRight@mL:
   815                           	callstack 0
   816   000022                     fullSpeedAhead@mL:
   817                           	callstack 0
   818   000022                     reverseOneSquare@mL:
   819                           	callstack 0
   820   000022                     wallAdjust@mL:
   821                           	callstack 0
   822   000022                     reverseShort@mL:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x21
   826   000022                     	ds	1
   827   000023                     ___aldiv@counter:
   828                           	callstack 0
   829   000023                     ___lldiv@quotient:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0x22
   833   000023                     	ds	1
   834   000024                     ___aldiv@sign:
   835                           	callstack 0
   836   000024                     stop@mR:
   837                           	callstack 0
   838   000024                     turnLeft@mR:
   839                           	callstack 0
   840   000024                     turnRight@mR:
   841                           	callstack 0
   842   000024                     fullSpeedAhead@mR:
   843                           	callstack 0
   844   000024                     reverseOneSquare@mR:
   845                           	callstack 0
   846   000024                     wallAdjust@mR:
   847                           	callstack 0
   848   000024                     reverseShort@mR:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x23
   852   000024                     	ds	1
   853   000025                     ___aldiv@quotient:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x24
   857   000025                     	ds	1
   858   000026                     stop@straightRamp:
   859                           	callstack 0
   860   000026                     turnLeft@turnSpeed:
   861                           	callstack 0
   862   000026                     turnRight@turnSpeed:
   863                           	callstack 0
   864   000026                     fullSpeedAhead@straightSpeed:
   865                           	callstack 0
   866   000026                     reverseOneSquare@straightSpeed:
   867                           	callstack 0
   868   000026                     wallAdjust@straightSpeed:
   869                           	callstack 0
   870   000026                     reverseShort@straightSpeed:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0x25
   874   000026                     	ds	1
   875   000027                     ??_stop:
   876   000027                     turnLeft@turnDuration:
   877                           	callstack 0
   878   000027                     turnRight@turnDuration:
   879                           	callstack 0
   880   000027                     fullSpeedAhead@straightRamp:
   881                           	callstack 0
   882   000027                     reverseOneSquare@reverseDuration:
   883                           	callstack 0
   884   000027                     wallAdjust@straightRamp:
   885                           	callstack 0
   886   000027                     reverseShort@straightRamp:
   887                           	callstack 0
   888   000027                     ___lldiv@counter:
   889                           	callstack 0
   890   000027                     color_detect@yellow:
   891                           	callstack 0
   892                           
   893                           ; 6 bytes @ 0x26
   894   000027                     	ds	1
   895   000028                     ??_fullSpeedAhead:
   896   000028                     ??_wallAdjust:
   897   000028                     ??_reverseShort:
   898   000028                     turnLeft@turnRamp:
   899                           	callstack 0
   900   000028                     turnRight@turnRamp:
   901                           	callstack 0
   902   000028                     reverseOneSquare@straightRamp:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x27
   906   000028                     	ds	1
   907   000029                     ??_turnRight:
   908   000029                     ??_turnLeft:
   909   000029                     ??_reverseOneSquare:
   910   000029                     rgb_2_hsv@RGBC:
   911                           	callstack 0
   912                           
   913                           ; 8 bytes @ 0x28
   914   000029                     	ds	1
   915   00002A                     stop@i:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x29
   919   00002A                     	ds	1
   920   00002B                     wallAdjust@adjustDuration:
   921                           	callstack 0
   922   00002B                     reverseShort@reverseDuration:
   923                           	callstack 0
   924   00002B                     fullSpeedAhead@i:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x2A
   928   00002B                     	ds	1
   929   00002C                     wallAdjust@wallReverseDuration:
   930                           	callstack 0
   931   00002C                     stop@cur_power:
   932                           	callstack 0
   933   00002C                     turnLeft@i:
   934                           	callstack 0
   935   00002C                     turnRight@i:
   936                           	callstack 0
   937   00002C                     reverseOneSquare@i:
   938                           	callstack 0
   939   00002C                     reverseShort@i:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x2B
   943   00002C                     	ds	1
   944   00002D                     fullSpeedAhead@cur_power:
   945                           	callstack 0
   946   00002D                     wallAdjust@i:
   947                           	callstack 0
   948   00002D                     color_detect@pink:
   949                           	callstack 0
   950                           
   951                           ; 6 bytes @ 0x2C
   952   00002D                     	ds	1
   953   00002E                     turnLeft@cur_power:
   954                           	callstack 0
   955   00002E                     turnRight@cur_power:
   956                           	callstack 0
   957   00002E                     reverseOneSquare@cur_power:
   958                           	callstack 0
   959   00002E                     reverseShort@cur_power:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x2D
   963   00002E                     	ds	1
   964   00002F                     wallAdjust@cur_power:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x2E
   968   00002F                     	ds	1
   969   000030                     returnHome@mL:
   970                           	callstack 0
   971   000030                     lostReturnHome@mL:
   972                           	callstack 0
   973   000030                     calibration@mL:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x2F
   977   000030                     	ds	1
   978   000031                     rgb_2_hsv@HSV:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x30
   982   000031                     	ds	1
   983   000032                     returnHome@mR:
   984                           	callstack 0
   985   000032                     lostReturnHome@mR:
   986                           	callstack 0
   987   000032                     calibration@mR:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x31
   991   000032                     	ds	1
   992   000033                     ??_rgb_2_hsv:
   993   000033                     color_detect@orange:
   994                           	callstack 0
   995                           
   996                           ; 6 bytes @ 0x32
   997   000033                     	ds	1
   998   000034                     calibration@turnSpeed:
   999                           	callstack 0
  1000   000034                     returnHome@moveSequence:
  1001                           	callstack 0
  1002   000034                     lostReturnHome@moveSequence:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x33
  1006   000034                     	ds	1
  1007   000035                     calibration@turnDuration:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x34
  1011   000035                     	ds	1
  1012   000036                     returnHome@straightTime:
  1013                           	callstack 0
  1014   000036                     lostReturnHome@straightTime:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x35
  1018   000036                     	ds	1
  1019   000037                     calibration@turnRamp:
  1020                           	callstack 0
  1021                           
  1022                           ; 1 bytes @ 0x36
  1023   000037                     	ds	1
  1024   000038                     ??_calibration:
  1025   000038                     returnHome@curMove:
  1026                           	callstack 0
  1027   000038                     lostReturnHome@curMove:
  1028                           	callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x37
  1031   000038                     	ds	1
  1032   000039                     returnHome@straightSpeed:
  1033                           	callstack 0
  1034   000039                     lostReturnHome@straightSpeed:
  1035                           	callstack 0
  1036   000039                     color_detect@lightblue:
  1037                           	callstack 0
  1038                           
  1039                           ; 6 bytes @ 0x38
  1040   000039                     	ds	1
  1041   00003A                     returnHome@reverseDuration:
  1042                           	callstack 0
  1043   00003A                     lostReturnHome@reverseDuration:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x39
  1047   00003A                     	ds	1
  1048   00003B                     returnHome@straightRamp:
  1049                           	callstack 0
  1050   00003B                     lostReturnHome@straightRamp:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x3A
  1054   00003B                     	ds	1
  1055   00003C                     returnHome@turnSpeed:
  1056                           	callstack 0
  1057   00003C                     lostReturnHome@turnSpeed:
  1058                           	callstack 0
  1059                           
  1060                           ; 1 bytes @ 0x3B
  1061   00003C                     	ds	1
  1062   00003D                     returnHome@turnDuration:
  1063                           	callstack 0
  1064   00003D                     lostReturnHome@turnDuration:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x3C
  1068   00003D                     	ds	1
  1069   00003E                     returnHome@turnRamp:
  1070                           	callstack 0
  1071   00003E                     lostReturnHome@turnRamp:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x3D
  1075   00003E                     	ds	1
  1076   00003F                     ??_color_calibration:
  1077   00003F                     ??_lostReturnHome:
  1078   00003F                     ??_returnHome:
  1079   00003F                     color_detect@white:
  1080                           	callstack 0
  1081                           
  1082                           ; 6 bytes @ 0x3E
  1083   00003F                     	ds	4
  1084   000043                     returnHome@i:
  1085                           	callstack 0
  1086   000043                     lostReturnHome@i:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x42
  1090   000043                     	ds	2
  1091                           
  1092 ;;
  1093 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1094 ;;
  1095 ;; *************** function _main *****************
  1096 ;; Defined at:
  1097 ;;		line 28 in file "main.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  straightTime   82   40[BANK1 ] unsigned int [41]
  1102 ;;  moveSequence   40  122[BANK1 ] unsigned char [40]
  1103 ;;  buf            40    0[BANK1 ] unsigned char [40]
  1104 ;;  motorL         10  246[BANK1 ] struct DC_motor
  1105 ;;  motorR         10  236[BANK1 ] struct DC_motor
  1106 ;;  RGBC            8  228[BANK1 ] struct RGBC_val
  1107 ;;  RGBC_n          8    0        struct RGBC_val
  1108 ;;  HSV             6  222[BANK1 ] struct HSV_val
  1109 ;;  white           6  211[BANK1 ] struct HSV_calib
  1110 ;;  lightblue       6  205[BANK1 ] struct HSV_calib
  1111 ;;  orange          6  199[BANK1 ] struct HSV_calib
  1112 ;;  pink            6  193[BANK1 ] struct HSV_calib
  1113 ;;  yellow          6  187[BANK1 ] struct HSV_calib
  1114 ;;  blue            6  181[BANK1 ] struct HSV_calib
  1115 ;;  green           6  175[BANK1 ] struct HSV_calib
  1116 ;;  red             6  169[BANK1 ] struct HSV_calib
  1117 ;;  testSequence    4  162[BANK1 ] unsigned char [4]
  1118 ;;  PWMcycle        2    0        unsigned int 
  1119 ;;  turnDuration    1  221[BANK1 ] unsigned char 
  1120 ;;  straightRamp    1  220[BANK1 ] unsigned char 
  1121 ;;  color           1  219[BANK1 ] unsigned char 
  1122 ;;  curMove         1  218[BANK1 ] unsigned char 
  1123 ;;  straightSpee    1  217[BANK1 ] unsigned char 
  1124 ;;  turnRamp        1  168[BANK1 ] unsigned char 
  1125 ;;  turnSpeed       1  167[BANK1 ] unsigned char 
  1126 ;;  reverseDurat    1  166[BANK1 ] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1137 ;;      Locals:         0       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1138 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1139 ;;      Totals:         0       2     256       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1140 ;;Total ram usage:      258 bytes
  1141 ;; Hardware stack levels required when called: 10
  1142 ;; This function calls:
  1143 ;;		_Buggy_init
  1144 ;;		_Interrupts_init
  1145 ;;		_Timer0_init
  1146 ;;		_batteryLevel
  1147 ;;		_calibration
  1148 ;;		_color_calibration
  1149 ;;		_color_click_init
  1150 ;;		_color_detect
  1151 ;;		_color_read
  1152 ;;		_fullSpeedAhead
  1153 ;;		_get16bitTMR0val
  1154 ;;		_initDCmotorsPWM
  1155 ;;		_initUSART4
  1156 ;;		_lostReturnHome
  1157 ;;		_move
  1158 ;;		_resetTimer
  1159 ;;		_rgb_2_hsv
  1160 ;;		_stop
  1161 ;;		_wallAdjust
  1162 ;;		_white_Light
  1163 ;; This function is called by:
  1164 ;;		Startup code after reset
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text0
  1169   002946                     __ptext0:
  1170                           	callstack 0
  1171   002946                     _main:
  1172                           	callstack 21
  1173   002946                     
  1174                           ;main.c: 30:     char buf[40] = {0};
  1175   002946  EE21  F000         	lfsr	2,main@buf
  1176   00294A  0E27               	movlw	39
  1177   00294C                     u3961:
  1178   00294C  6ADE               	clrf	postinc2,c
  1179   00294E  06E8               	decf	wreg,f,c
  1180   002950  E2FD               	bc	u3961
  1181   002952                     
  1182                           ;main.c: 33:     unsigned char moveSequence[40] = {0};
  1183   002952  EE21  F07A         	lfsr	2,main@moveSequence
  1184   002956  0E27               	movlw	39
  1185   002958                     u3971:
  1186   002958  6ADE               	clrf	postinc2,c
  1187   00295A  06E8               	decf	wreg,f,c
  1188   00295C  E2FD               	bc	u3971
  1189                           
  1190                           ;main.c: 34:     unsigned int straightTime[41] = {0};
  1191   00295E  EE21  F028         	lfsr	2,main@straightTime
  1192   002962  0E51               	movlw	81
  1193   002964                     u3981:
  1194   002964  6ADE               	clrf	postinc2,c
  1195   002966  06E8               	decf	wreg,f,c
  1196   002968  E2FD               	bc	u3981
  1197   00296A                     
  1198                           ;main.c: 35:     char curMove = 0;
  1199   00296A  0E00               	movlw	0
  1200   00296C  0101               	movlb	1	; () banked
  1201   00296E  6FDA               	movwf	main@curMove& (0+255),b
  1202   002970                     
  1203                           ; BSR set to: 1
  1204                           ;main.c: 37:     unsigned char testSequence[4] = {2,1,1,8};
  1205   002970  C04B  F1A2         	movff	main@F14659,main@testSequence
  1206   002974  C04C  F1A3         	movff	main@F14659+1,main@testSequence+1
  1207   002978  C04D  F1A4         	movff	main@F14659+2,main@testSequence+2
  1208   00297C  C04E  F1A5         	movff	main@F14659+3,main@testSequence+3
  1209   002980                     
  1210                           ; BSR set to: 1
  1211                           ;main.c: 40:     struct RGBC_val RGBC, RGBC_n;;main.c: 41:     struct HSV_val HSV;;main.
      +                          c: 42:     struct DC_motor motorL, motorR;;main.c: 45:     Buggy_init();
  1212   002980  ECCA  F027         	call	_Buggy_init	;wreg free
  1213   002984                     
  1214                           ;main.c: 46:     color_click_init();
  1215   002984  ECAE  F027         	call	_color_click_init	;wreg free
  1216   002988                     
  1217                           ;main.c: 47:     Timer0_init();
  1218   002988  ECBD  F028         	call	_Timer0_init	;wreg free
  1219   00298C                     
  1220                           ;main.c: 48:     Interrupts_init();
  1221   00298C  EC11  F029         	call	_Interrupts_init	;wreg free
  1222   002990                     
  1223                           ;main.c: 49:     initUSART4();
  1224   002990  ECDD  F028         	call	_initUSART4	;wreg free
  1225   002994                     
  1226                           ;main.c: 50:     initDCmotorsPWM(PWMcycle);
  1227   002994  0E00               	movlw	0
  1228   002996  6E10               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1229   002998  0EC7               	movlw	199
  1230   00299A  6E0F               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1231   00299C  EC4E  F026         	call	_initDCmotorsPWM	;wreg free
  1232   0029A0                     
  1233                           ;main.c: 52:     motorL.power=0;
  1234   0029A0  0E00               	movlw	0
  1235   0029A2  0101               	movlb	1	; () banked
  1236   0029A4  6FF6               	movwf	main@motorL& (0+255),b
  1237   0029A6                     
  1238                           ; BSR set to: 1
  1239                           ;main.c: 53:     motorL.direction=1;
  1240   0029A6  0E01               	movlw	1
  1241   0029A8  6FF7               	movwf	(main@motorL+1)& (0+255),b
  1242   0029AA                     
  1243                           ; BSR set to: 1
  1244                           ;main.c: 54:     motorL.brakemode=1;
  1245   0029AA  0E01               	movlw	1
  1246   0029AC  6FF8               	movwf	(main@motorL+2)& (0+255),b
  1247   0029AE                     
  1248                           ; BSR set to: 1
  1249                           ;main.c: 55:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1250   0029AE  0EAA               	movlw	170
  1251   0029B0  6FFB               	movwf	(main@motorL+5)& (0+255),b
  1252   0029B2  0E0F               	movlw	15
  1253   0029B4  6FFC               	movwf	(main@motorL+6)& (0+255),b
  1254   0029B6                     
  1255                           ; BSR set to: 1
  1256                           ;main.c: 56:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1257   0029B6  0EA6               	movlw	166
  1258   0029B8  6FFD               	movwf	(main@motorL+7)& (0+255),b
  1259   0029BA  0E0F               	movlw	15
  1260   0029BC  6FFE               	movwf	(main@motorL+8)& (0+255),b
  1261   0029BE                     
  1262                           ; BSR set to: 1
  1263                           ;main.c: 57:     motorL.PWMperiod=PWMcycle;
  1264   0029BE  0E00               	movlw	0
  1265   0029C0  6FFA               	movwf	(main@motorL+4)& (0+255),b
  1266   0029C2  0EC7               	movlw	199
  1267   0029C4  6FF9               	movwf	(main@motorL+3)& (0+255),b
  1268   0029C6                     
  1269                           ; BSR set to: 1
  1270                           ;main.c: 58:     motorL.compensation=0;
  1271   0029C6  0E00               	movlw	0
  1272   0029C8  6FFF               	movwf	(main@motorL+9)& (0+255),b
  1273   0029CA                     
  1274                           ; BSR set to: 1
  1275                           ;main.c: 60:     motorR.power=0;
  1276   0029CA  0E00               	movlw	0
  1277   0029CC  6FEC               	movwf	main@motorR& (0+255),b
  1278   0029CE                     
  1279                           ; BSR set to: 1
  1280                           ;main.c: 61:     motorR.direction=1;
  1281   0029CE  0E01               	movlw	1
  1282   0029D0  6FED               	movwf	(main@motorR+1)& (0+255),b
  1283   0029D2                     
  1284                           ; BSR set to: 1
  1285                           ;main.c: 62:     motorR.brakemode=1;
  1286   0029D2  0E01               	movlw	1
  1287   0029D4  6FEE               	movwf	(main@motorR+2)& (0+255),b
  1288   0029D6                     
  1289                           ; BSR set to: 1
  1290                           ;main.c: 63:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1291   0029D6  0E25               	movlw	37
  1292   0029D8  6FF1               	movwf	(main@motorR+5)& (0+255),b
  1293   0029DA  0E0F               	movlw	15
  1294   0029DC  6FF2               	movwf	(main@motorR+6)& (0+255),b
  1295   0029DE                     
  1296                           ; BSR set to: 1
  1297                           ;main.c: 64:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1298   0029DE  0E21               	movlw	33
  1299   0029E0  6FF3               	movwf	(main@motorR+7)& (0+255),b
  1300   0029E2  0E0F               	movlw	15
  1301   0029E4  6FF4               	movwf	(main@motorR+8)& (0+255),b
  1302   0029E6                     
  1303                           ; BSR set to: 1
  1304                           ;main.c: 65:     motorR.PWMperiod=PWMcycle;
  1305   0029E6  0E00               	movlw	0
  1306   0029E8  6FF0               	movwf	(main@motorR+4)& (0+255),b
  1307   0029EA  0EC7               	movlw	199
  1308   0029EC  6FEF               	movwf	(main@motorR+3)& (0+255),b
  1309   0029EE                     
  1310                           ; BSR set to: 1
  1311                           ;main.c: 66:     motorR.compensation=0;
  1312   0029EE  0E00               	movlw	0
  1313   0029F0  6FF5               	movwf	(main@motorR+9)& (0+255),b
  1314   0029F2                     
  1315                           ; BSR set to: 1
  1316                           ;main.c: 69:     char straightSpeed=20;
  1317   0029F2  0E14               	movlw	20
  1318   0029F4  6FD9               	movwf	main@straightSpeed& (0+255),b
  1319   0029F6                     
  1320                           ; BSR set to: 1
  1321                           ;main.c: 70:     unsigned char straightRamp=1;
  1322   0029F6  0E01               	movlw	1
  1323   0029F8  6FDC               	movwf	main@straightRamp& (0+255),b
  1324   0029FA                     
  1325                           ; BSR set to: 1
  1326                           ;main.c: 72:     unsigned char reverseDuration=200;
  1327   0029FA  0EC8               	movlw	200
  1328   0029FC  6FA6               	movwf	main@reverseDuration& (0+255),b
  1329   0029FE                     
  1330                           ; BSR set to: 1
  1331                           ;main.c: 74:     char turnSpeed=28;
  1332   0029FE  0E1C               	movlw	28
  1333   002A00  6FA7               	movwf	main@turnSpeed& (0+255),b
  1334   002A02                     
  1335                           ; BSR set to: 1
  1336                           ;main.c: 75:     unsigned char turnDuration=13;
  1337   002A02  0E0D               	movlw	13
  1338   002A04  6FDD               	movwf	main@turnDuration& (0+255),b
  1339   002A06                     
  1340                           ; BSR set to: 1
  1341                           ;main.c: 76:     unsigned char turnRamp=1;
  1342   002A06  0E01               	movlw	1
  1343   002A08  6FA8               	movwf	main@turnRamp& (0+255),b
  1344   002A0A                     
  1345                           ; BSR set to: 1
  1346                           ;main.c: 79:     batteryLevel();
  1347   002A0A  EC66  F027         	call	_batteryLevel	;wreg free
  1348   002A0E                     l91:
  1349   002A0E  B48E               	btfsc	142,2,c	;volatile
  1350   002A10  EF0C  F015         	goto	u3991
  1351   002A14  EF0E  F015         	goto	u3990
  1352   002A18                     u3991:
  1353   002A18  EF07  F015         	goto	l91
  1354   002A1C                     u3990:
  1355   002A1C                     
  1356                           ;main.c: 92:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1357   002A1C  9680               	bcf	128,3,c	;volatile
  1358   002A1E  9E7C               	bcf	124,7,c	;volatile
  1359                           
  1360                           ;main.c: 95:     LATHbits.LATH1=LATDbits.LATD3=1;
  1361   002A20  867C               	bsf	124,3,c	;volatile
  1362   002A22  8280               	bsf	128,1,c	;volatile
  1363   002A24                     
  1364                           ;main.c: 96:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1365   002A24  0E29               	movlw	41
  1366   002A26  0100               	movlb	0	; () banked
  1367   002A28  6FDB               	movwf	(??_main+1)& (0+255),b
  1368   002A2A  0E96               	movlw	150
  1369   002A2C  6FDA               	movwf	??_main& (0+255),b
  1370   002A2E  0E7F               	movlw	127
  1371   002A30                     u4267:
  1372   002A30  2EE8               	decfsz	wreg,f,c
  1373   002A32  D7FE               	bra	u4267
  1374   002A34  2FDA               	decfsz	??_main& (0+255),f,b
  1375   002A36  D7FC               	bra	u4267
  1376   002A38  2FDB               	decfsz	(??_main+1)& (0+255),f,b
  1377   002A3A  D7FA               	bra	u4267
  1378   002A3C                     
  1379                           ;main.c: 99:     struct HSV_calib red, green, blue, yellow, pink, orange, lightblue, whi
      +                          te;;main.c: 100:     color_calibration(&RGBC, &HSV, &red, &green, &blue, &yellow, &pink,
      +                           &orange, &lightblue, &white);
  1380   002A3C  0EE4               	movlw	low main@RGBC
  1381   002A3E  0100               	movlb	0	; () banked
  1382   002A40  6FC6               	movwf	color_calibration@RGBC& (0+255),b
  1383   002A42  0E01               	movlw	high main@RGBC
  1384   002A44  6FC7               	movwf	(color_calibration@RGBC+1)& (0+255),b
  1385   002A46  0EDE               	movlw	low main@HSV
  1386   002A48  6FC8               	movwf	color_calibration@HSV& (0+255),b
  1387   002A4A  0E01               	movlw	high main@HSV
  1388   002A4C  6FC9               	movwf	(color_calibration@HSV+1)& (0+255),b
  1389   002A4E  0EA9               	movlw	low main@red
  1390   002A50  6FCA               	movwf	color_calibration@red& (0+255),b
  1391   002A52  0E01               	movlw	high main@red
  1392   002A54  6FCB               	movwf	(color_calibration@red+1)& (0+255),b
  1393   002A56  0EAF               	movlw	low main@green
  1394   002A58  6FCC               	movwf	color_calibration@green& (0+255),b
  1395   002A5A  0E01               	movlw	high main@green
  1396   002A5C  6FCD               	movwf	(color_calibration@green+1)& (0+255),b
  1397   002A5E  0EB5               	movlw	low main@blue
  1398   002A60  6FCE               	movwf	color_calibration@blue& (0+255),b
  1399   002A62  0E01               	movlw	high main@blue
  1400   002A64  6FCF               	movwf	(color_calibration@blue+1)& (0+255),b
  1401   002A66  0EBB               	movlw	low main@yellow
  1402   002A68  6FD0               	movwf	color_calibration@yellow& (0+255),b
  1403   002A6A  0E01               	movlw	high main@yellow
  1404   002A6C  6FD1               	movwf	(color_calibration@yellow+1)& (0+255),b
  1405   002A6E  0EC1               	movlw	low main@pink
  1406   002A70  6FD2               	movwf	color_calibration@pink& (0+255),b
  1407   002A72  0E01               	movlw	high main@pink
  1408   002A74  6FD3               	movwf	(color_calibration@pink+1)& (0+255),b
  1409   002A76  0EC7               	movlw	low main@orange
  1410   002A78  6FD4               	movwf	color_calibration@orange& (0+255),b
  1411   002A7A  0E01               	movlw	high main@orange
  1412   002A7C  6FD5               	movwf	(color_calibration@orange+1)& (0+255),b
  1413   002A7E  0ECD               	movlw	low main@lightblue
  1414   002A80  6FD6               	movwf	color_calibration@lightblue& (0+255),b
  1415   002A82  0E01               	movlw	high main@lightblue
  1416   002A84  6FD7               	movwf	(color_calibration@lightblue+1)& (0+255),b
  1417   002A86  0ED3               	movlw	low main@white
  1418   002A88  6FD8               	movwf	color_calibration@white& (0+255),b
  1419   002A8A  0E01               	movlw	high main@white
  1420   002A8C  6FD9               	movwf	(color_calibration@white+1)& (0+255),b
  1421   002A8E  ECC5  F011         	call	_color_calibration	;wreg free
  1422   002A92                     
  1423                           ;main.c: 103:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1424   002A92  0EF6               	movlw	low main@motorL
  1425   002A94  6E30               	movwf	calibration@mL^0,c
  1426   002A96  0E01               	movlw	high main@motorL
  1427   002A98  6E31               	movwf	(calibration@mL+1)^0,c
  1428   002A9A  0EEC               	movlw	low main@motorR
  1429   002A9C  6E32               	movwf	calibration@mR^0,c
  1430   002A9E  0E01               	movlw	high main@motorR
  1431   002AA0  6E33               	movwf	(calibration@mR+1)^0,c
  1432   002AA2  0E1C               	movlw	28
  1433   002AA4  6E34               	movwf	calibration@turnSpeed^0,c
  1434   002AA6  0EDD               	movlw	low main@turnDuration
  1435   002AA8  6E35               	movwf	calibration@turnDuration^0,c
  1436   002AAA  0E01               	movlw	high main@turnDuration
  1437   002AAC  6E36               	movwf	(calibration@turnDuration+1)^0,c
  1438   002AAE  0E01               	movlw	1
  1439   002AB0  6E37               	movwf	calibration@turnRamp^0,c
  1440   002AB2  EC91  F01B         	call	_calibration	;wreg free
  1441   002AB6                     
  1442                           ;main.c: 106:     color_read(&RGBC);
  1443   002AB6  0EE4               	movlw	low main@RGBC
  1444   002AB8  6E13               	movwf	color_read@RGBC^0,c
  1445   002ABA  0E01               	movlw	high main@RGBC
  1446   002ABC  6E14               	movwf	(color_read@RGBC+1)^0,c
  1447   002ABE  EC13  F01E         	call	_color_read	;wreg free
  1448   002AC2                     
  1449                           ;main.c: 107:     rgb_2_hsv(RGBC, &HSV);
  1450   002AC2  EE21  F0E4         	lfsr	2,main@RGBC
  1451   002AC6  EE00  F029         	lfsr	0,rgb_2_hsv@RGBC
  1452   002ACA  0E07               	movlw	7
  1453   002ACC                     u4001:
  1454   002ACC  CFDB FFEB          	movff	plusw2,plusw0
  1455   002AD0  06E8               	decf	wreg,f,c
  1456   002AD2  E2FC               	bc	u4001
  1457   002AD4  0EDE               	movlw	low main@HSV
  1458   002AD6  6E31               	movwf	rgb_2_hsv@HSV^0,c
  1459   002AD8  0E01               	movlw	high main@HSV
  1460   002ADA  6E32               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1461   002ADC  EC42  F017         	call	_rgb_2_hsv	;wreg free
  1462   002AE0                     
  1463                           ;main.c: 108:     color = color_detect(HSV, red, green, blue, yellow, pink, orange, ligh
      +                          tblue, white);
  1464   002AE0  EE21  F0DE         	lfsr	2,main@HSV
  1465   002AE4  EE00  F00F         	lfsr	0,color_detect@HSV
  1466   002AE8  0E05               	movlw	5
  1467   002AEA                     u4011:
  1468   002AEA  CFDB FFEB          	movff	plusw2,plusw0
  1469   002AEE  06E8               	decf	wreg,f,c
  1470   002AF0  E2FC               	bc	u4011
  1471   002AF2  EE21  F0A9         	lfsr	2,main@red
  1472   002AF6  EE00  F015         	lfsr	0,color_detect@red
  1473   002AFA  0E05               	movlw	5
  1474   002AFC                     u4021:
  1475   002AFC  CFDB FFEB          	movff	plusw2,plusw0
  1476   002B00  06E8               	decf	wreg,f,c
  1477   002B02  E2FC               	bc	u4021
  1478   002B04  EE21  F0AF         	lfsr	2,main@green
  1479   002B08  EE00  F01B         	lfsr	0,color_detect@green
  1480   002B0C  0E05               	movlw	5
  1481   002B0E                     u4031:
  1482   002B0E  CFDB FFEB          	movff	plusw2,plusw0
  1483   002B12  06E8               	decf	wreg,f,c
  1484   002B14  E2FC               	bc	u4031
  1485   002B16  EE21  F0B5         	lfsr	2,main@blue
  1486   002B1A  EE00  F021         	lfsr	0,color_detect@blue
  1487   002B1E  0E05               	movlw	5
  1488   002B20                     u4041:
  1489   002B20  CFDB FFEB          	movff	plusw2,plusw0
  1490   002B24  06E8               	decf	wreg,f,c
  1491   002B26  E2FC               	bc	u4041
  1492   002B28  EE21  F0BB         	lfsr	2,main@yellow
  1493   002B2C  EE00  F027         	lfsr	0,color_detect@yellow
  1494   002B30  0E05               	movlw	5
  1495   002B32                     u4051:
  1496   002B32  CFDB FFEB          	movff	plusw2,plusw0
  1497   002B36  06E8               	decf	wreg,f,c
  1498   002B38  E2FC               	bc	u4051
  1499   002B3A  EE21  F0C1         	lfsr	2,main@pink
  1500   002B3E  EE00  F02D         	lfsr	0,color_detect@pink
  1501   002B42  0E05               	movlw	5
  1502   002B44                     u4061:
  1503   002B44  CFDB FFEB          	movff	plusw2,plusw0
  1504   002B48  06E8               	decf	wreg,f,c
  1505   002B4A  E2FC               	bc	u4061
  1506   002B4C  EE21  F0C7         	lfsr	2,main@orange
  1507   002B50  EE00  F033         	lfsr	0,color_detect@orange
  1508   002B54  0E05               	movlw	5
  1509   002B56                     u4071:
  1510   002B56  CFDB FFEB          	movff	plusw2,plusw0
  1511   002B5A  06E8               	decf	wreg,f,c
  1512   002B5C  E2FC               	bc	u4071
  1513   002B5E  EE21  F0CD         	lfsr	2,main@lightblue
  1514   002B62  EE00  F039         	lfsr	0,color_detect@lightblue
  1515   002B66  0E05               	movlw	5
  1516   002B68                     u4081:
  1517   002B68  CFDB FFEB          	movff	plusw2,plusw0
  1518   002B6C  06E8               	decf	wreg,f,c
  1519   002B6E  E2FC               	bc	u4081
  1520   002B70  EE21  F0D3         	lfsr	2,main@white
  1521   002B74  EE00  F03F         	lfsr	0,color_detect@white
  1522   002B78  0E05               	movlw	5
  1523   002B7A                     u4091:
  1524   002B7A  CFDB FFEB          	movff	plusw2,plusw0
  1525   002B7E  06E8               	decf	wreg,f,c
  1526   002B80  E2FC               	bc	u4091
  1527   002B82  ECDE  F01C         	call	_color_detect	;wreg free
  1528   002B86  0101               	movlb	1	; () banked
  1529   002B88  6FDB               	movwf	main@color& (0+255),b
  1530   002B8A                     
  1531                           ; BSR set to: 1
  1532                           ;main.c: 112:     white_Light(1);
  1533   002B8A  0E01               	movlw	1
  1534   002B8C  EC9B  F028         	call	_white_Light
  1535   002B90                     
  1536                           ;main.c: 113:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1537   002B90  0E52               	movlw	82
  1538   002B92  0100               	movlb	0	; () banked
  1539   002B94  6FDB               	movwf	(??_main+1)& (0+255),b
  1540   002B96  0E2B               	movlw	43
  1541   002B98  6FDA               	movwf	??_main& (0+255),b
  1542   002B9A  0E00               	movlw	0
  1543   002B9C                     u4277:
  1544   002B9C  2EE8               	decfsz	wreg,f,c
  1545   002B9E  D7FE               	bra	u4277
  1546   002BA0  2FDA               	decfsz	??_main& (0+255),f,b
  1547   002BA2  D7FC               	bra	u4277
  1548   002BA4  2FDB               	decfsz	(??_main+1)& (0+255),f,b
  1549   002BA6  D7FA               	bra	u4277
  1550   002BA8  0000               	nop	
  1551   002BAA                     
  1552                           ;main.c: 116:     color_read(&RGBC);
  1553   002BAA  0EE4               	movlw	low main@RGBC
  1554   002BAC  6E13               	movwf	color_read@RGBC^0,c
  1555   002BAE  0E01               	movlw	high main@RGBC
  1556   002BB0  6E14               	movwf	(color_read@RGBC+1)^0,c
  1557   002BB2  EC13  F01E         	call	_color_read	;wreg free
  1558   002BB6                     
  1559                           ;main.c: 117:     ambient=RGBC.C;
  1560   002BB6  C1EA  F04F         	movff	main@RGBC+6,_ambient
  1561   002BBA  C1EB  F050         	movff	main@RGBC+7,_ambient+1
  1562   002BBE                     
  1563                           ;main.c: 118:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1564   002BBE  0E29               	movlw	41
  1565   002BC0  0100               	movlb	0	; () banked
  1566   002BC2  6FDB               	movwf	(??_main+1)& (0+255),b
  1567   002BC4  0E96               	movlw	150
  1568   002BC6  6FDA               	movwf	??_main& (0+255),b
  1569   002BC8  0E7F               	movlw	127
  1570   002BCA                     u4287:
  1571   002BCA  2EE8               	decfsz	wreg,f,c
  1572   002BCC  D7FE               	bra	u4287
  1573   002BCE  2FDA               	decfsz	??_main& (0+255),f,b
  1574   002BD0  D7FC               	bra	u4287
  1575   002BD2  2FDB               	decfsz	(??_main+1)& (0+255),f,b
  1576   002BD4  D7FA               	bra	u4287
  1577   002BD6                     
  1578                           ;main.c: 120:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1579   002BD6  0EF6               	movlw	low main@motorL
  1580   002BD8  6E22               	movwf	fullSpeedAhead@mL^0,c
  1581   002BDA  0E01               	movlw	high main@motorL
  1582   002BDC  6E23               	movwf	(fullSpeedAhead@mL+1)^0,c
  1583   002BDE  0EEC               	movlw	low main@motorR
  1584   002BE0  6E24               	movwf	fullSpeedAhead@mR^0,c
  1585   002BE2  0E01               	movlw	high main@motorR
  1586   002BE4  6E25               	movwf	(fullSpeedAhead@mR+1)^0,c
  1587   002BE6  0E14               	movlw	20
  1588   002BE8  6E26               	movwf	fullSpeedAhead@straightSpeed^0,c
  1589   002BEA  0E01               	movlw	1
  1590   002BEC  6E27               	movwf	fullSpeedAhead@straightRamp^0,c
  1591   002BEE  EC86  F024         	call	_fullSpeedAhead	;wreg free
  1592   002BF2                     
  1593                           ;main.c: 121:     resetTimer();
  1594   002BF2  EC28  F029         	call	_resetTimer	;wreg free
  1595   002BF6                     
  1596                           ;main.c: 123:     wall=0;
  1597   002BF6  0E00               	movlw	0
  1598   002BF8  6E46               	movwf	_wall^0,c
  1599   002BFA                     
  1600                           ;main.c: 124:     lost=0;
  1601   002BFA  0E00               	movlw	0
  1602   002BFC  6E45               	movwf	_lost^0,c
  1603   002BFE                     l4798:
  1604                           
  1605                           ;main.c: 127:         if (wall == 1) {
  1606   002BFE  0446               	decf	_wall^0,w,c
  1607   002C00  A4D8               	btfss	status,2,c
  1608   002C02  EF05  F016         	goto	u4101
  1609   002C06  EF07  F016         	goto	u4100
  1610   002C0A                     u4101:
  1611   002C0A  EFF1  F016         	goto	l4828
  1612   002C0E                     u4100:
  1613   002C0E                     
  1614                           ;main.c: 128:             PIE0bits.INT0IE=TMR0IE=0;
  1615   002C0E  010E               	movlb	14	; () banked
  1616   002C10  9B29               	bcf	41,5,b	;volatile
  1617   002C12  AB29               	btfss	41,5,b	;volatile
  1618   002C14  D002               	bra	u4115
  1619   002C16  8129               	bsf	41,0,b	;volatile
  1620   002C18  D002               	bra	u4117
  1621   002C1A                     u4115:
  1622   002C1A  010E               	movlb	14	; () banked
  1623   002C1C  9129               	bcf	41,0,b	;volatile
  1624   002C1E                     u4117:
  1625   002C1E                     
  1626                           ; BSR set to: 14
  1627                           ;main.c: 129:             straightTime[curMove] = get16bitTMR0val();
  1628   002C1E  EC26  F028         	call	_get16bitTMR0val	;wreg free
  1629   002C22  0101               	movlb	1	; () banked
  1630   002C24  51DA               	movf	main@curMove& (0+255),w,b
  1631   002C26  0D02               	mullw	2
  1632   002C28  0E28               	movlw	low main@straightTime
  1633   002C2A  24F3               	addwf	243,w,c
  1634   002C2C  6ED9               	movwf	fsr2l,c
  1635   002C2E  0E01               	movlw	high main@straightTime
  1636   002C30  20F4               	addwfc	prodh,w,c
  1637   002C32  6EDA               	movwf	fsr2h,c
  1638   002C34  C00F  FFDE         	movff	?_get16bitTMR0val,postinc2
  1639   002C38  C010  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1640                           
  1641                           ;main.c: 132:             stop(&motorL, &motorR, straightRamp);
  1642   002C3C  0EF6               	movlw	low main@motorL
  1643   002C3E  6E22               	movwf	stop@mL^0,c
  1644   002C40  0E01               	movlw	high main@motorL
  1645   002C42  6E23               	movwf	(stop@mL+1)^0,c
  1646   002C44  0EEC               	movlw	low main@motorR
  1647   002C46  6E24               	movwf	stop@mR^0,c
  1648   002C48  0E01               	movlw	high main@motorR
  1649   002C4A  6E25               	movwf	(stop@mR+1)^0,c
  1650   002C4C  C1DC  F026         	movff	main@straightRamp,stop@straightRamp
  1651   002C50  EC02  F024         	call	_stop	;wreg free
  1652                           
  1653                           ;main.c: 133:             wallAdjust(&motorL, &motorR, straightSpeed, straightRamp);
  1654   002C54  0EF6               	movlw	low main@motorL
  1655   002C56  6E22               	movwf	wallAdjust@mL^0,c
  1656   002C58  0E01               	movlw	high main@motorL
  1657   002C5A  6E23               	movwf	(wallAdjust@mL+1)^0,c
  1658   002C5C  0EEC               	movlw	low main@motorR
  1659   002C5E  6E24               	movwf	wallAdjust@mR^0,c
  1660   002C60  0E01               	movlw	high main@motorR
  1661   002C62  6E25               	movwf	(wallAdjust@mR+1)^0,c
  1662   002C64  C1D9  F026         	movff	main@straightSpeed,wallAdjust@straightSpeed
  1663   002C68  C1DC  F027         	movff	main@straightRamp,wallAdjust@straightRamp
  1664   002C6C  ECB0  F019         	call	_wallAdjust	;wreg free
  1665   002C70                     
  1666                           ;main.c: 134:             color_read(&RGBC);
  1667   002C70  0EE4               	movlw	low main@RGBC
  1668   002C72  6E13               	movwf	color_read@RGBC^0,c
  1669   002C74  0E01               	movlw	high main@RGBC
  1670   002C76  6E14               	movwf	(color_read@RGBC+1)^0,c
  1671   002C78  EC13  F01E         	call	_color_read	;wreg free
  1672   002C7C                     
  1673                           ;main.c: 136:             rgb_2_hsv(RGBC, &HSV);
  1674   002C7C  EE21  F0E4         	lfsr	2,main@RGBC
  1675   002C80  EE00  F029         	lfsr	0,rgb_2_hsv@RGBC
  1676   002C84  0E07               	movlw	7
  1677   002C86                     u4121:
  1678   002C86  CFDB FFEB          	movff	plusw2,plusw0
  1679   002C8A  06E8               	decf	wreg,f,c
  1680   002C8C  E2FC               	bc	u4121
  1681   002C8E  0EDE               	movlw	low main@HSV
  1682   002C90  6E31               	movwf	rgb_2_hsv@HSV^0,c
  1683   002C92  0E01               	movlw	high main@HSV
  1684   002C94  6E32               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1685   002C96  EC42  F017         	call	_rgb_2_hsv	;wreg free
  1686   002C9A                     
  1687                           ;main.c: 137:             color = color_detect(HSV, red, green, blue, yellow, pink, oran
      +                          ge, lightblue, white);
  1688   002C9A  EE21  F0DE         	lfsr	2,main@HSV
  1689   002C9E  EE00  F00F         	lfsr	0,color_detect@HSV
  1690   002CA2  0E05               	movlw	5
  1691   002CA4                     u4131:
  1692   002CA4  CFDB FFEB          	movff	plusw2,plusw0
  1693   002CA8  06E8               	decf	wreg,f,c
  1694   002CAA  E2FC               	bc	u4131
  1695   002CAC  EE21  F0A9         	lfsr	2,main@red
  1696   002CB0  EE00  F015         	lfsr	0,color_detect@red
  1697   002CB4  0E05               	movlw	5
  1698   002CB6                     u4141:
  1699   002CB6  CFDB FFEB          	movff	plusw2,plusw0
  1700   002CBA  06E8               	decf	wreg,f,c
  1701   002CBC  E2FC               	bc	u4141
  1702   002CBE  EE21  F0AF         	lfsr	2,main@green
  1703   002CC2  EE00  F01B         	lfsr	0,color_detect@green
  1704   002CC6  0E05               	movlw	5
  1705   002CC8                     u4151:
  1706   002CC8  CFDB FFEB          	movff	plusw2,plusw0
  1707   002CCC  06E8               	decf	wreg,f,c
  1708   002CCE  E2FC               	bc	u4151
  1709   002CD0  EE21  F0B5         	lfsr	2,main@blue
  1710   002CD4  EE00  F021         	lfsr	0,color_detect@blue
  1711   002CD8  0E05               	movlw	5
  1712   002CDA                     u4161:
  1713   002CDA  CFDB FFEB          	movff	plusw2,plusw0
  1714   002CDE  06E8               	decf	wreg,f,c
  1715   002CE0  E2FC               	bc	u4161
  1716   002CE2  EE21  F0BB         	lfsr	2,main@yellow
  1717   002CE6  EE00  F027         	lfsr	0,color_detect@yellow
  1718   002CEA  0E05               	movlw	5
  1719   002CEC                     u4171:
  1720   002CEC  CFDB FFEB          	movff	plusw2,plusw0
  1721   002CF0  06E8               	decf	wreg,f,c
  1722   002CF2  E2FC               	bc	u4171
  1723   002CF4  EE21  F0C1         	lfsr	2,main@pink
  1724   002CF8  EE00  F02D         	lfsr	0,color_detect@pink
  1725   002CFC  0E05               	movlw	5
  1726   002CFE                     u4181:
  1727   002CFE  CFDB FFEB          	movff	plusw2,plusw0
  1728   002D02  06E8               	decf	wreg,f,c
  1729   002D04  E2FC               	bc	u4181
  1730   002D06  EE21  F0C7         	lfsr	2,main@orange
  1731   002D0A  EE00  F033         	lfsr	0,color_detect@orange
  1732   002D0E  0E05               	movlw	5
  1733   002D10                     u4191:
  1734   002D10  CFDB FFEB          	movff	plusw2,plusw0
  1735   002D14  06E8               	decf	wreg,f,c
  1736   002D16  E2FC               	bc	u4191
  1737   002D18  EE21  F0CD         	lfsr	2,main@lightblue
  1738   002D1C  EE00  F039         	lfsr	0,color_detect@lightblue
  1739   002D20  0E05               	movlw	5
  1740   002D22                     u4201:
  1741   002D22  CFDB FFEB          	movff	plusw2,plusw0
  1742   002D26  06E8               	decf	wreg,f,c
  1743   002D28  E2FC               	bc	u4201
  1744   002D2A  EE21  F0D3         	lfsr	2,main@white
  1745   002D2E  EE00  F03F         	lfsr	0,color_detect@white
  1746   002D32  0E05               	movlw	5
  1747   002D34                     u4211:
  1748   002D34  CFDB FFEB          	movff	plusw2,plusw0
  1749   002D38  06E8               	decf	wreg,f,c
  1750   002D3A  E2FC               	bc	u4211
  1751   002D3C  ECDE  F01C         	call	_color_detect	;wreg free
  1752   002D40  0101               	movlb	1	; () banked
  1753   002D42  6FDB               	movwf	main@color& (0+255),b
  1754   002D44                     
  1755                           ; BSR set to: 1
  1756                           ;main.c: 139:             moveSequence[curMove] = color;
  1757   002D44  0E7A               	movlw	low main@moveSequence
  1758   002D46  25DA               	addwf	main@curMove& (0+255),w,b
  1759   002D48  6ED9               	movwf	fsr2l,c
  1760   002D4A  6ADA               	clrf	fsr2h,c
  1761   002D4C  0E01               	movlw	high main@moveSequence
  1762   002D4E  22DA               	addwfc	fsr2h,f,c
  1763   002D50  C1DB  FFDF         	movff	main@color,indf2
  1764   002D54                     
  1765                           ; BSR set to: 1
  1766                           ;main.c: 142:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1767   002D54  0EF6               	movlw	low main@motorL
  1768   002D56  0100               	movlb	0	; () banked
  1769   002D58  6FB0               	movwf	move@mL& (0+255),b
  1770   002D5A  0E01               	movlw	high main@motorL
  1771   002D5C  6FB1               	movwf	(move@mL+1)& (0+255),b
  1772   002D5E  0EEC               	movlw	low main@motorR
  1773   002D60  6FB2               	movwf	move@mR& (0+255),b
  1774   002D62  0E01               	movlw	high main@motorR
  1775   002D64  6FB3               	movwf	(move@mR+1)& (0+255),b
  1776   002D66  C1DB  F0B4         	movff	main@color,move@color
  1777   002D6A  0E7A               	movlw	low main@moveSequence
  1778   002D6C  6FB5               	movwf	move@moveSequence& (0+255),b
  1779   002D6E  0E01               	movlw	high main@moveSequence
  1780   002D70  6FB6               	movwf	(move@moveSequence+1)& (0+255),b
  1781   002D72  0E28               	movlw	low main@straightTime
  1782   002D74  6FB7               	movwf	move@straightTime& (0+255),b
  1783   002D76  0E01               	movlw	high main@straightTime
  1784   002D78  6FB8               	movwf	(move@straightTime+1)& (0+255),b
  1785   002D7A  C1DA  F0B9         	movff	main@curMove,move@curMove
  1786   002D7E  C1D9  F0BA         	movff	main@straightSpeed,move@straightSpeed
  1787   002D82  C1A6  F0BB         	movff	main@reverseDuration,move@reverseDuration
  1788   002D86  C1DC  F0BC         	movff	main@straightRamp,move@straightRamp
  1789   002D8A  C1A7  F0BD         	movff	main@turnSpeed,move@turnSpeed
  1790   002D8E  C1DD  F0BE         	movff	main@turnDuration,move@turnDuration
  1791   002D92  C1A8  F0BF         	movff	main@turnRamp,move@turnRamp
  1792   002D96  EC01  F007         	call	_move	;wreg free
  1793   002D9A                     
  1794                           ;main.c: 145:             color_read(&RGBC);
  1795   002D9A  0EE4               	movlw	low main@RGBC
  1796   002D9C  6E13               	movwf	color_read@RGBC^0,c
  1797   002D9E  0E01               	movlw	high main@RGBC
  1798   002DA0  6E14               	movwf	(color_read@RGBC+1)^0,c
  1799   002DA2  EC13  F01E         	call	_color_read	;wreg free
  1800   002DA6                     
  1801                           ;main.c: 146:             ambient=RGBC.C;
  1802   002DA6  C1EA  F04F         	movff	main@RGBC+6,_ambient
  1803   002DAA  C1EB  F050         	movff	main@RGBC+7,_ambient+1
  1804   002DAE                     
  1805                           ;main.c: 147:             _delay((unsigned long)((50)*(64000000/4000.0)));
  1806   002DAE  0E05               	movlw	5
  1807   002DB0  0100               	movlb	0	; () banked
  1808   002DB2  6FDB               	movwf	(??_main+1)& (0+255),b
  1809   002DB4  0E0F               	movlw	15
  1810   002DB6  6FDA               	movwf	??_main& (0+255),b
  1811   002DB8  0EF1               	movlw	241
  1812   002DBA                     u4297:
  1813   002DBA  2EE8               	decfsz	wreg,f,c
  1814   002DBC  D7FE               	bra	u4297
  1815   002DBE  2FDA               	decfsz	??_main& (0+255),f,b
  1816   002DC0  D7FC               	bra	u4297
  1817   002DC2  2FDB               	decfsz	(??_main+1)& (0+255),f,b
  1818   002DC4  D7FA               	bra	u4297
  1819   002DC6                     
  1820                           ;main.c: 149:             curMove++;
  1821   002DC6  0101               	movlb	1	; () banked
  1822   002DC8  2BDA               	incf	main@curMove& (0+255),f,b
  1823   002DCA                     
  1824                           ; BSR set to: 1
  1825                           ;main.c: 150:             resetTimer();
  1826   002DCA  EC28  F029         	call	_resetTimer	;wreg free
  1827   002DCE                     
  1828                           ;main.c: 151:             PIE0bits.INT0IE=TMR0IE=1;
  1829   002DCE  010E               	movlb	14	; () banked
  1830   002DD0  8B29               	bsf	41,5,b	;volatile
  1831   002DD2  AB29               	btfss	41,5,b	;volatile
  1832   002DD4  D002               	bra	u4225
  1833   002DD6  8129               	bsf	41,0,b	;volatile
  1834   002DD8  D002               	bra	u4227
  1835   002DDA                     u4225:
  1836   002DDA  010E               	movlb	14	; () banked
  1837   002DDC  9129               	bcf	41,0,b	;volatile
  1838   002DDE                     u4227:
  1839   002DDE                     
  1840                           ; BSR set to: 14
  1841                           ;main.c: 152:             wall = 0;
  1842   002DDE  0E00               	movlw	0
  1843   002DE0  6E46               	movwf	_wall^0,c
  1844   002DE2                     l4828:
  1845                           
  1846                           ;main.c: 156:         if (lost == 1) {
  1847   002DE2  0445               	decf	_lost^0,w,c
  1848   002DE4  A4D8               	btfss	status,2,c
  1849   002DE6  EFF7  F016         	goto	u4231
  1850   002DEA  EFF9  F016         	goto	u4230
  1851   002DEE                     u4231:
  1852   002DEE  EF2D  F017         	goto	l4838
  1853   002DF2                     u4230:
  1854   002DF2                     
  1855                           ;main.c: 157:             PIE0bits.INT0IE=0;
  1856   002DF2  010E               	movlb	14	; () banked
  1857   002DF4  9129               	bcf	41,0,b	;volatile
  1858   002DF6                     
  1859                           ; BSR set to: 14
  1860                           ;main.c: 158:             stop(&motorL, &motorR, straightRamp);
  1861   002DF6  0EF6               	movlw	low main@motorL
  1862   002DF8  6E22               	movwf	stop@mL^0,c
  1863   002DFA  0E01               	movlw	high main@motorL
  1864   002DFC  6E23               	movwf	(stop@mL+1)^0,c
  1865   002DFE  0EEC               	movlw	low main@motorR
  1866   002E00  6E24               	movwf	stop@mR^0,c
  1867   002E02  0E01               	movlw	high main@motorR
  1868   002E04  6E25               	movwf	(stop@mR+1)^0,c
  1869   002E06  C1DC  F026         	movff	main@straightRamp,stop@straightRamp
  1870   002E0A  EC02  F024         	call	_stop	;wreg free
  1871                           
  1872                           ;main.c: 159:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1873   002E0E  0EF6               	movlw	low main@motorL
  1874   002E10  6E30               	movwf	lostReturnHome@mL^0,c
  1875   002E12  0E01               	movlw	high main@motorL
  1876   002E14  6E31               	movwf	(lostReturnHome@mL+1)^0,c
  1877   002E16  0EEC               	movlw	low main@motorR
  1878   002E18  6E32               	movwf	lostReturnHome@mR^0,c
  1879   002E1A  0E01               	movlw	high main@motorR
  1880   002E1C  6E33               	movwf	(lostReturnHome@mR+1)^0,c
  1881   002E1E  0E7A               	movlw	low main@moveSequence
  1882   002E20  6E34               	movwf	lostReturnHome@moveSequence^0,c
  1883   002E22  0E01               	movlw	high main@moveSequence
  1884   002E24  6E35               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1885   002E26  0E28               	movlw	low main@straightTime
  1886   002E28  6E36               	movwf	lostReturnHome@straightTime^0,c
  1887   002E2A  0E01               	movlw	high main@straightTime
  1888   002E2C  6E37               	movwf	(lostReturnHome@straightTime+1)^0,c
  1889   002E2E  C1DA  F038         	movff	main@curMove,lostReturnHome@curMove
  1890   002E32  C1D9  F039         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1891   002E36  C1A6  F03A         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1892   002E3A  C1DC  F03B         	movff	main@straightRamp,lostReturnHome@straightRamp
  1893   002E3E  C1A7  F03C         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1894   002E42  C1DD  F03D         	movff	main@turnDuration,lostReturnHome@turnDuration
  1895   002E46  C1A8  F03E         	movff	main@turnRamp,lostReturnHome@turnRamp
  1896   002E4A  EC74  F00E         	call	_lostReturnHome	;wreg free
  1897   002E4E                     
  1898                           ;main.c: 160:             PIE0bits.INT0IE=1;
  1899   002E4E  010E               	movlb	14	; () banked
  1900   002E50  8129               	bsf	41,0,b	;volatile
  1901   002E52                     
  1902                           ; BSR set to: 14
  1903                           ;main.c: 161:             lost = 0;
  1904   002E52  0E00               	movlw	0
  1905   002E54  6E45               	movwf	_lost^0,c
  1906                           
  1907                           ;main.c: 162:             break;
  1908   002E56  EF40  F017         	goto	l102
  1909   002E5A                     l4838:
  1910                           
  1911                           ;main.c: 165:         if (color == 8 || color == 9) {break;}
  1912   002E5A  0E08               	movlw	8
  1913   002E5C  0101               	movlb	1	; () banked
  1914   002E5E  19DB               	xorwf	main@color& (0+255),w,b
  1915   002E60  B4D8               	btfsc	status,2,c
  1916   002E62  EF35  F017         	goto	u4241
  1917   002E66  EF37  F017         	goto	u4240
  1918   002E6A                     u4241:
  1919   002E6A  EF40  F017         	goto	l102
  1920   002E6E                     u4240:
  1921   002E6E                     
  1922                           ; BSR set to: 1
  1923   002E6E  0E09               	movlw	9
  1924   002E70  19DB               	xorwf	main@color& (0+255),w,b
  1925   002E72  A4D8               	btfss	status,2,c
  1926   002E74  EF3E  F017         	goto	u4251
  1927   002E78  EF40  F017         	goto	u4250
  1928   002E7C                     u4251:
  1929   002E7C  EFFF  F015         	goto	l4798
  1930   002E80                     u4250:
  1931   002E80                     l102:
  1932   002E80  EF49  F000         	goto	start
  1933   002E84                     __end_of_main:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function _wallAdjust *****************
  1937 ;; Defined at:
  1938 ;;		line 501 in file "dc_motor.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  1941 ;;		 -> main@motorL(10), 
  1942 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  1943 ;;		 -> main@motorR(10), 
  1944 ;;  straightSpee    1   37[COMRAM] unsigned char 
  1945 ;;  straightRamp    1   38[COMRAM] unsigned char 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  cur_power       2   46[COMRAM] int 
  1948 ;;  i               2   44[COMRAM] int 
  1949 ;;  wallReverseD    1   43[COMRAM] unsigned char 
  1950 ;;  adjustDurati    1   42[COMRAM] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1960 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1963 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1964 ;;Total ram usage:       15 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 7
  1967 ;; This function calls:
  1968 ;;		_setMotorPWM
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text1
  1975   003360                     __ptext1:
  1976                           	callstack 0
  1977   003360                     _wallAdjust:
  1978                           	callstack 23
  1979   003360                     
  1980                           ;dc_motor.c: 501: void wallAdjust(DC_motor *mL, DC_motor *mR, char straightSpeed, unsign
      +                          ed char straightRamp);dc_motor.c: 502: {;dc_motor.c: 503:     unsigned char adjustDurati
      +                          on = 100;
  1981   003360  0E64               	movlw	100
  1982   003362  6E2B               	movwf	wallAdjust@adjustDuration^0,c
  1983                           
  1984                           ;dc_motor.c: 504:     unsigned char wallReverseDuration = 20;
  1985   003364  0E14               	movlw	20
  1986   003366  6E2C               	movwf	wallAdjust@wallReverseDuration^0,c
  1987   003368                     
  1988                           ;dc_motor.c: 506:     mL->direction = 1;
  1989   003368  EE20 F001          	lfsr	2,1
  1990   00336C  5022               	movf	wallAdjust@mL^0,w,c
  1991   00336E  26D9               	addwf	fsr2l,f,c
  1992   003370  5023               	movf	(wallAdjust@mL+1)^0,w,c
  1993   003372  22DA               	addwfc	fsr2h,f,c
  1994   003374  0E01               	movlw	1
  1995   003376  6EDF               	movwf	indf2,c
  1996   003378                     
  1997                           ;dc_motor.c: 507:     mR->direction = 1;
  1998   003378  EE20 F001          	lfsr	2,1
  1999   00337C  5024               	movf	wallAdjust@mR^0,w,c
  2000   00337E  26D9               	addwf	fsr2l,f,c
  2001   003380  5025               	movf	(wallAdjust@mR+1)^0,w,c
  2002   003382  22DA               	addwfc	fsr2h,f,c
  2003   003384  0E01               	movlw	1
  2004   003386  6EDF               	movwf	indf2,c
  2005                           
  2006                           ;dc_motor.c: 508:     int i;;dc_motor.c: 509:     int cur_power;;dc_motor.c: 510:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  2007   003388  0E00               	movlw	0
  2008   00338A  6E30               	movwf	(wallAdjust@cur_power+1)^0,c
  2009   00338C  0E01               	movlw	1
  2010   00338E  6E2F               	movwf	wallAdjust@cur_power^0,c
  2011   003390  EF13  F01A         	goto	l3992
  2012   003394                     l3978:
  2013                           
  2014                           ;dc_motor.c: 511:         mL->power = cur_power+mL->compensation;
  2015   003394  EE20 F009          	lfsr	2,9
  2016   003398  5022               	movf	wallAdjust@mL^0,w,c
  2017   00339A  26D9               	addwf	fsr2l,f,c
  2018   00339C  5023               	movf	(wallAdjust@mL+1)^0,w,c
  2019   00339E  22DA               	addwfc	fsr2h,f,c
  2020   0033A0  50DF               	movf	indf2,w,c
  2021   0033A2  242F               	addwf	wallAdjust@cur_power^0,w,c
  2022   0033A4  C022  FFD9         	movff	wallAdjust@mL,fsr2l
  2023   0033A8  C023  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2024   0033AC  6EDF               	movwf	indf2,c
  2025                           
  2026                           ;dc_motor.c: 512:         mR->power = cur_power+mR->compensation;
  2027   0033AE  EE20 F009          	lfsr	2,9
  2028   0033B2  5024               	movf	wallAdjust@mR^0,w,c
  2029   0033B4  26D9               	addwf	fsr2l,f,c
  2030   0033B6  5025               	movf	(wallAdjust@mR+1)^0,w,c
  2031   0033B8  22DA               	addwfc	fsr2h,f,c
  2032   0033BA  50DF               	movf	indf2,w,c
  2033   0033BC  242F               	addwf	wallAdjust@cur_power^0,w,c
  2034   0033BE  C024  FFD9         	movff	wallAdjust@mR,fsr2l
  2035   0033C2  C025  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2036   0033C6  6EDF               	movwf	indf2,c
  2037   0033C8                     
  2038                           ;dc_motor.c: 513:         setMotorPWM(mL);
  2039   0033C8  C022  F01C         	movff	wallAdjust@mL,setMotorPWM@m
  2040   0033CC  C023  F01D         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2041   0033D0  ECC6  F022         	call	_setMotorPWM	;wreg free
  2042   0033D4                     
  2043                           ;dc_motor.c: 514:         setMotorPWM(mR);
  2044   0033D4  C024  F01C         	movff	wallAdjust@mR,setMotorPWM@m
  2045   0033D8  C025  F01D         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2046   0033DC  ECC6  F022         	call	_setMotorPWM	;wreg free
  2047   0033E0                     
  2048                           ;dc_motor.c: 515:         for (i=0;i<straightRamp;i++) {
  2049   0033E0  0E00               	movlw	0
  2050   0033E2  6E2E               	movwf	(wallAdjust@i+1)^0,c
  2051   0033E4  0E00               	movlw	0
  2052   0033E6  6E2D               	movwf	wallAdjust@i^0,c
  2053   0033E8  EFFF  F019         	goto	l689
  2054   0033EC                     l3986:
  2055                           
  2056                           ;dc_motor.c: 516:             _delay((unsigned long)((10)*(64000000/4000.0)));
  2057   0033EC  0ED0               	movlw	208
  2058   0033EE  6E28               	movwf	??_wallAdjust^0,c
  2059   0033F0  0ECA               	movlw	202
  2060   0033F2                     u4307:
  2061   0033F2  2EE8               	decfsz	wreg,f,c
  2062   0033F4  D7FE               	bra	u4307
  2063   0033F6  2E28               	decfsz	??_wallAdjust^0,f,c
  2064   0033F8  D7FC               	bra	u4307
  2065   0033FA                     
  2066                           ;dc_motor.c: 517:         }
  2067   0033FA  4A2D               	infsnz	wallAdjust@i^0,f,c
  2068   0033FC  2A2E               	incf	(wallAdjust@i+1)^0,f,c
  2069   0033FE                     l689:
  2070   0033FE  5027               	movf	wallAdjust@straightRamp^0,w,c
  2071   003400  6E28               	movwf	??_wallAdjust^0,c
  2072   003402  6A29               	clrf	(??_wallAdjust+1)^0,c
  2073   003404  5028               	movf	??_wallAdjust^0,w,c
  2074   003406  5C2D               	subwf	wallAdjust@i^0,w,c
  2075   003408  502E               	movf	(wallAdjust@i+1)^0,w,c
  2076   00340A  0A80               	xorlw	128
  2077   00340C  6E2A               	movwf	(??_wallAdjust+2)^0,c
  2078   00340E  5029               	movf	(??_wallAdjust+1)^0,w,c
  2079   003410  0A80               	xorlw	128
  2080   003412  582A               	subwfb	(??_wallAdjust+2)^0,w,c
  2081   003414  A0D8               	btfss	status,0,c
  2082   003416  EF0F  F01A         	goto	u3041
  2083   00341A  EF11  F01A         	goto	u3040
  2084   00341E                     u3041:
  2085   00341E  EFF6  F019         	goto	l3986
  2086   003422                     u3040:
  2087   003422                     
  2088                           ;dc_motor.c: 518:     }
  2089   003422  4A2F               	infsnz	wallAdjust@cur_power^0,f,c
  2090   003424  2A30               	incf	(wallAdjust@cur_power+1)^0,f,c
  2091   003426                     l3992:
  2092   003426  5026               	movf	wallAdjust@straightSpeed^0,w,c
  2093   003428  6E28               	movwf	??_wallAdjust^0,c
  2094   00342A  6A29               	clrf	(??_wallAdjust+1)^0,c
  2095   00342C  502F               	movf	wallAdjust@cur_power^0,w,c
  2096   00342E  5C28               	subwf	??_wallAdjust^0,w,c
  2097   003430  5029               	movf	(??_wallAdjust+1)^0,w,c
  2098   003432  0A80               	xorlw	128
  2099   003434  6E2A               	movwf	(??_wallAdjust+2)^0,c
  2100   003436  5030               	movf	(wallAdjust@cur_power+1)^0,w,c
  2101   003438  0A80               	xorlw	128
  2102   00343A  582A               	subwfb	(??_wallAdjust+2)^0,w,c
  2103   00343C  B0D8               	btfsc	status,0,c
  2104   00343E  EF23  F01A         	goto	u3051
  2105   003442  EF25  F01A         	goto	u3050
  2106   003446                     u3051:
  2107   003446  EFCA  F019         	goto	l3978
  2108   00344A                     u3050:
  2109   00344A                     
  2110                           ;dc_motor.c: 520:     for (i=0;i<adjustDuration;i++) {
  2111   00344A  0E00               	movlw	0
  2112   00344C  6E2E               	movwf	(wallAdjust@i+1)^0,c
  2113   00344E  0E00               	movlw	0
  2114   003450  6E2D               	movwf	wallAdjust@i^0,c
  2115   003452  EF34  F01A         	goto	l693
  2116   003456                     l3996:
  2117                           
  2118                           ;dc_motor.c: 521:             _delay((unsigned long)((10)*(64000000/4000.0)));
  2119   003456  0ED0               	movlw	208
  2120   003458  6E28               	movwf	??_wallAdjust^0,c
  2121   00345A  0ECA               	movlw	202
  2122   00345C                     u4317:
  2123   00345C  2EE8               	decfsz	wreg,f,c
  2124   00345E  D7FE               	bra	u4317
  2125   003460  2E28               	decfsz	??_wallAdjust^0,f,c
  2126   003462  D7FC               	bra	u4317
  2127   003464                     
  2128                           ;dc_motor.c: 522:         }
  2129   003464  4A2D               	infsnz	wallAdjust@i^0,f,c
  2130   003466  2A2E               	incf	(wallAdjust@i+1)^0,f,c
  2131   003468                     l693:
  2132   003468  502B               	movf	wallAdjust@adjustDuration^0,w,c
  2133   00346A  6E28               	movwf	??_wallAdjust^0,c
  2134   00346C  6A29               	clrf	(??_wallAdjust+1)^0,c
  2135   00346E  5028               	movf	??_wallAdjust^0,w,c
  2136   003470  5C2D               	subwf	wallAdjust@i^0,w,c
  2137   003472  502E               	movf	(wallAdjust@i+1)^0,w,c
  2138   003474  0A80               	xorlw	128
  2139   003476  6E2A               	movwf	(??_wallAdjust+2)^0,c
  2140   003478  5029               	movf	(??_wallAdjust+1)^0,w,c
  2141   00347A  0A80               	xorlw	128
  2142   00347C  582A               	subwfb	(??_wallAdjust+2)^0,w,c
  2143   00347E  A0D8               	btfss	status,0,c
  2144   003480  EF44  F01A         	goto	u3061
  2145   003484  EF46  F01A         	goto	u3060
  2146   003488                     u3061:
  2147   003488  EF2B  F01A         	goto	l3996
  2148   00348C                     u3060:
  2149   00348C                     
  2150                           ;dc_motor.c: 524:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  2151   00348C  C026  F02F         	movff	wallAdjust@straightSpeed,wallAdjust@cur_power
  2152   003490  6A30               	clrf	(wallAdjust@cur_power+1)^0,c
  2153   003492                     l4000:
  2154   003492  BE30               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2155   003494  EF50  F01A         	goto	u3070
  2156   003498  EF4E  F01A         	goto	u3071
  2157   00349C                     u3071:
  2158   00349C  EF52  F01A         	goto	l4004
  2159   0034A0                     u3070:
  2160   0034A0  EF9E  F01A         	goto	l4020
  2161   0034A4                     l4004:
  2162                           
  2163                           ;dc_motor.c: 525:         mL->power = cur_power+mL->compensation;
  2164   0034A4  EE20 F009          	lfsr	2,9
  2165   0034A8  5022               	movf	wallAdjust@mL^0,w,c
  2166   0034AA  26D9               	addwf	fsr2l,f,c
  2167   0034AC  5023               	movf	(wallAdjust@mL+1)^0,w,c
  2168   0034AE  22DA               	addwfc	fsr2h,f,c
  2169   0034B0  50DF               	movf	indf2,w,c
  2170   0034B2  242F               	addwf	wallAdjust@cur_power^0,w,c
  2171   0034B4  C022  FFD9         	movff	wallAdjust@mL,fsr2l
  2172   0034B8  C023  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2173   0034BC  6EDF               	movwf	indf2,c
  2174                           
  2175                           ;dc_motor.c: 526:         mR->power = cur_power+mR->compensation;
  2176   0034BE  EE20 F009          	lfsr	2,9
  2177   0034C2  5024               	movf	wallAdjust@mR^0,w,c
  2178   0034C4  26D9               	addwf	fsr2l,f,c
  2179   0034C6  5025               	movf	(wallAdjust@mR+1)^0,w,c
  2180   0034C8  22DA               	addwfc	fsr2h,f,c
  2181   0034CA  50DF               	movf	indf2,w,c
  2182   0034CC  242F               	addwf	wallAdjust@cur_power^0,w,c
  2183   0034CE  C024  FFD9         	movff	wallAdjust@mR,fsr2l
  2184   0034D2  C025  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2185   0034D6  6EDF               	movwf	indf2,c
  2186   0034D8                     
  2187                           ;dc_motor.c: 527:         setMotorPWM(mL);
  2188   0034D8  C022  F01C         	movff	wallAdjust@mL,setMotorPWM@m
  2189   0034DC  C023  F01D         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2190   0034E0  ECC6  F022         	call	_setMotorPWM	;wreg free
  2191   0034E4                     
  2192                           ;dc_motor.c: 528:         setMotorPWM(mR);
  2193   0034E4  C024  F01C         	movff	wallAdjust@mR,setMotorPWM@m
  2194   0034E8  C025  F01D         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2195   0034EC  ECC6  F022         	call	_setMotorPWM	;wreg free
  2196   0034F0                     
  2197                           ;dc_motor.c: 529:         for (i=0;i<straightRamp;i++) {
  2198   0034F0  0E00               	movlw	0
  2199   0034F2  6E2E               	movwf	(wallAdjust@i+1)^0,c
  2200   0034F4  0E00               	movlw	0
  2201   0034F6  6E2D               	movwf	wallAdjust@i^0,c
  2202   0034F8  EF87  F01A         	goto	l698
  2203   0034FC                     l4012:
  2204                           
  2205                           ;dc_motor.c: 530:             _delay((unsigned long)((10)*(64000000/4000.0)));
  2206   0034FC  0ED0               	movlw	208
  2207   0034FE  6E28               	movwf	??_wallAdjust^0,c
  2208   003500  0ECA               	movlw	202
  2209   003502                     u4327:
  2210   003502  2EE8               	decfsz	wreg,f,c
  2211   003504  D7FE               	bra	u4327
  2212   003506  2E28               	decfsz	??_wallAdjust^0,f,c
  2213   003508  D7FC               	bra	u4327
  2214   00350A                     
  2215                           ;dc_motor.c: 531:         }
  2216   00350A  4A2D               	infsnz	wallAdjust@i^0,f,c
  2217   00350C  2A2E               	incf	(wallAdjust@i+1)^0,f,c
  2218   00350E                     l698:
  2219   00350E  5027               	movf	wallAdjust@straightRamp^0,w,c
  2220   003510  6E28               	movwf	??_wallAdjust^0,c
  2221   003512  6A29               	clrf	(??_wallAdjust+1)^0,c
  2222   003514  5028               	movf	??_wallAdjust^0,w,c
  2223   003516  5C2D               	subwf	wallAdjust@i^0,w,c
  2224   003518  502E               	movf	(wallAdjust@i+1)^0,w,c
  2225   00351A  0A80               	xorlw	128
  2226   00351C  6E2A               	movwf	(??_wallAdjust+2)^0,c
  2227   00351E  5029               	movf	(??_wallAdjust+1)^0,w,c
  2228   003520  0A80               	xorlw	128
  2229   003522  582A               	subwfb	(??_wallAdjust+2)^0,w,c
  2230   003524  A0D8               	btfss	status,0,c
  2231   003526  EF97  F01A         	goto	u3081
  2232   00352A  EF99  F01A         	goto	u3080
  2233   00352E                     u3081:
  2234   00352E  EF7E  F01A         	goto	l4012
  2235   003532                     u3080:
  2236   003532                     
  2237                           ;dc_motor.c: 532:     }
  2238   003532  062F               	decf	wallAdjust@cur_power^0,f,c
  2239   003534  A0D8               	btfss	status,0,c
  2240   003536  0630               	decf	(wallAdjust@cur_power+1)^0,f,c
  2241   003538  EF49  F01A         	goto	l4000
  2242   00353C                     l4020:
  2243                           
  2244                           ;dc_motor.c: 534:     mL->direction = 0;
  2245   00353C  EE20 F001          	lfsr	2,1
  2246   003540  5022               	movf	wallAdjust@mL^0,w,c
  2247   003542  26D9               	addwf	fsr2l,f,c
  2248   003544  5023               	movf	(wallAdjust@mL+1)^0,w,c
  2249   003546  22DA               	addwfc	fsr2h,f,c
  2250   003548  6ADF               	clrf	indf2,c
  2251                           
  2252                           ;dc_motor.c: 535:     mR->direction = 0;
  2253   00354A  EE20 F001          	lfsr	2,1
  2254   00354E  5024               	movf	wallAdjust@mR^0,w,c
  2255   003550  26D9               	addwf	fsr2l,f,c
  2256   003552  5025               	movf	(wallAdjust@mR+1)^0,w,c
  2257   003554  22DA               	addwfc	fsr2h,f,c
  2258   003556  6ADF               	clrf	indf2,c
  2259   003558                     
  2260                           ;dc_motor.c: 536:     for (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  2261   003558  0E00               	movlw	0
  2262   00355A  6E30               	movwf	(wallAdjust@cur_power+1)^0,c
  2263   00355C  0E01               	movlw	1
  2264   00355E  6E2F               	movwf	wallAdjust@cur_power^0,c
  2265   003560  EFFB  F01A         	goto	l4038
  2266   003564                     l4024:
  2267                           
  2268                           ;dc_motor.c: 537:         mL->power = cur_power+mL->compensation;
  2269   003564  EE20 F009          	lfsr	2,9
  2270   003568  5022               	movf	wallAdjust@mL^0,w,c
  2271   00356A  26D9               	addwf	fsr2l,f,c
  2272   00356C  5023               	movf	(wallAdjust@mL+1)^0,w,c
  2273   00356E  22DA               	addwfc	fsr2h,f,c
  2274   003570  50DF               	movf	indf2,w,c
  2275   003572  242F               	addwf	wallAdjust@cur_power^0,w,c
  2276   003574  C022  FFD9         	movff	wallAdjust@mL,fsr2l
  2277   003578  C023  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2278   00357C  6EDF               	movwf	indf2,c
  2279                           
  2280                           ;dc_motor.c: 538:         mR->power = cur_power+mR->compensation;
  2281   00357E  EE20 F009          	lfsr	2,9
  2282   003582  5024               	movf	wallAdjust@mR^0,w,c
  2283   003584  26D9               	addwf	fsr2l,f,c
  2284   003586  5025               	movf	(wallAdjust@mR+1)^0,w,c
  2285   003588  22DA               	addwfc	fsr2h,f,c
  2286   00358A  50DF               	movf	indf2,w,c
  2287   00358C  242F               	addwf	wallAdjust@cur_power^0,w,c
  2288   00358E  C024  FFD9         	movff	wallAdjust@mR,fsr2l
  2289   003592  C025  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2290   003596  6EDF               	movwf	indf2,c
  2291   003598                     
  2292                           ;dc_motor.c: 539:         setMotorPWM(mL);
  2293   003598  C022  F01C         	movff	wallAdjust@mL,setMotorPWM@m
  2294   00359C  C023  F01D         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2295   0035A0  ECC6  F022         	call	_setMotorPWM	;wreg free
  2296   0035A4                     
  2297                           ;dc_motor.c: 540:         setMotorPWM(mR);
  2298   0035A4  C024  F01C         	movff	wallAdjust@mR,setMotorPWM@m
  2299   0035A8  C025  F01D         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2300   0035AC  ECC6  F022         	call	_setMotorPWM	;wreg free
  2301   0035B0                     
  2302                           ;dc_motor.c: 541:         for (i=0;i<straightRamp;i++) {
  2303   0035B0  0E00               	movlw	0
  2304   0035B2  6E2E               	movwf	(wallAdjust@i+1)^0,c
  2305   0035B4  0E00               	movlw	0
  2306   0035B6  6E2D               	movwf	wallAdjust@i^0,c
  2307   0035B8  EFE7  F01A         	goto	l703
  2308   0035BC                     l4032:
  2309                           
  2310                           ;dc_motor.c: 542:             _delay((unsigned long)((10)*(64000000/4000.0)));
  2311   0035BC  0ED0               	movlw	208
  2312   0035BE  6E28               	movwf	??_wallAdjust^0,c
  2313   0035C0  0ECA               	movlw	202
  2314   0035C2                     u4337:
  2315   0035C2  2EE8               	decfsz	wreg,f,c
  2316   0035C4  D7FE               	bra	u4337
  2317   0035C6  2E28               	decfsz	??_wallAdjust^0,f,c
  2318   0035C8  D7FC               	bra	u4337
  2319   0035CA                     
  2320                           ;dc_motor.c: 543:         }
  2321   0035CA  4A2D               	infsnz	wallAdjust@i^0,f,c
  2322   0035CC  2A2E               	incf	(wallAdjust@i+1)^0,f,c
  2323   0035CE                     l703:
  2324   0035CE  5027               	movf	wallAdjust@straightRamp^0,w,c
  2325   0035D0  6E28               	movwf	??_wallAdjust^0,c
  2326   0035D2  6A29               	clrf	(??_wallAdjust+1)^0,c
  2327   0035D4  5028               	movf	??_wallAdjust^0,w,c
  2328   0035D6  5C2D               	subwf	wallAdjust@i^0,w,c
  2329   0035D8  502E               	movf	(wallAdjust@i+1)^0,w,c
  2330   0035DA  0A80               	xorlw	128
  2331   0035DC  6E2A               	movwf	(??_wallAdjust+2)^0,c
  2332   0035DE  5029               	movf	(??_wallAdjust+1)^0,w,c
  2333   0035E0  0A80               	xorlw	128
  2334   0035E2  582A               	subwfb	(??_wallAdjust+2)^0,w,c
  2335   0035E4  A0D8               	btfss	status,0,c
  2336   0035E6  EFF7  F01A         	goto	u3091
  2337   0035EA  EFF9  F01A         	goto	u3090
  2338   0035EE                     u3091:
  2339   0035EE  EFDE  F01A         	goto	l4032
  2340   0035F2                     u3090:
  2341   0035F2                     
  2342                           ;dc_motor.c: 544:     }
  2343   0035F2  4A2F               	infsnz	wallAdjust@cur_power^0,f,c
  2344   0035F4  2A30               	incf	(wallAdjust@cur_power+1)^0,f,c
  2345   0035F6                     l4038:
  2346   0035F6  5026               	movf	wallAdjust@straightSpeed^0,w,c
  2347   0035F8  6E28               	movwf	??_wallAdjust^0,c
  2348   0035FA  6A29               	clrf	(??_wallAdjust+1)^0,c
  2349   0035FC  502F               	movf	wallAdjust@cur_power^0,w,c
  2350   0035FE  5C28               	subwf	??_wallAdjust^0,w,c
  2351   003600  5029               	movf	(??_wallAdjust+1)^0,w,c
  2352   003602  0A80               	xorlw	128
  2353   003604  6E2A               	movwf	(??_wallAdjust+2)^0,c
  2354   003606  5030               	movf	(wallAdjust@cur_power+1)^0,w,c
  2355   003608  0A80               	xorlw	128
  2356   00360A  582A               	subwfb	(??_wallAdjust+2)^0,w,c
  2357   00360C  B0D8               	btfsc	status,0,c
  2358   00360E  EF0B  F01B         	goto	u3101
  2359   003612  EF0D  F01B         	goto	u3100
  2360   003616                     u3101:
  2361   003616  EFB2  F01A         	goto	l4024
  2362   00361A                     u3100:
  2363   00361A                     
  2364                           ;dc_motor.c: 546:     for (i=0;i<wallReverseDuration;i++) {
  2365   00361A  0E00               	movlw	0
  2366   00361C  6E2E               	movwf	(wallAdjust@i+1)^0,c
  2367   00361E  0E00               	movlw	0
  2368   003620  6E2D               	movwf	wallAdjust@i^0,c
  2369   003622  EF1C  F01B         	goto	l707
  2370   003626                     l4042:
  2371                           
  2372                           ;dc_motor.c: 547:             _delay((unsigned long)((10)*(64000000/4000.0)));
  2373   003626  0ED0               	movlw	208
  2374   003628  6E28               	movwf	??_wallAdjust^0,c
  2375   00362A  0ECA               	movlw	202
  2376   00362C                     u4347:
  2377   00362C  2EE8               	decfsz	wreg,f,c
  2378   00362E  D7FE               	bra	u4347
  2379   003630  2E28               	decfsz	??_wallAdjust^0,f,c
  2380   003632  D7FC               	bra	u4347
  2381   003634                     
  2382                           ;dc_motor.c: 548:         }
  2383   003634  4A2D               	infsnz	wallAdjust@i^0,f,c
  2384   003636  2A2E               	incf	(wallAdjust@i+1)^0,f,c
  2385   003638                     l707:
  2386   003638  502C               	movf	wallAdjust@wallReverseDuration^0,w,c
  2387   00363A  6E28               	movwf	??_wallAdjust^0,c
  2388   00363C  6A29               	clrf	(??_wallAdjust+1)^0,c
  2389   00363E  5028               	movf	??_wallAdjust^0,w,c
  2390   003640  5C2D               	subwf	wallAdjust@i^0,w,c
  2391   003642  502E               	movf	(wallAdjust@i+1)^0,w,c
  2392   003644  0A80               	xorlw	128
  2393   003646  6E2A               	movwf	(??_wallAdjust+2)^0,c
  2394   003648  5029               	movf	(??_wallAdjust+1)^0,w,c
  2395   00364A  0A80               	xorlw	128
  2396   00364C  582A               	subwfb	(??_wallAdjust+2)^0,w,c
  2397   00364E  A0D8               	btfss	status,0,c
  2398   003650  EF2C  F01B         	goto	u3111
  2399   003654  EF2E  F01B         	goto	u3110
  2400   003658                     u3111:
  2401   003658  EF13  F01B         	goto	l4042
  2402   00365C                     u3110:
  2403   00365C                     
  2404                           ;dc_motor.c: 550:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  2405   00365C  C026  F02F         	movff	wallAdjust@straightSpeed,wallAdjust@cur_power
  2406   003660  6A30               	clrf	(wallAdjust@cur_power+1)^0,c
  2407   003662                     l4046:
  2408   003662  BE30               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2409   003664  EF38  F01B         	goto	u3120
  2410   003668  EF36  F01B         	goto	u3121
  2411   00366C                     u3121:
  2412   00366C  EF3A  F01B         	goto	l4050
  2413   003670                     u3120:
  2414   003670  EF86  F01B         	goto	l4066
  2415   003674                     l4050:
  2416                           
  2417                           ;dc_motor.c: 551:         mL->power = cur_power+mL->compensation;
  2418   003674  EE20 F009          	lfsr	2,9
  2419   003678  5022               	movf	wallAdjust@mL^0,w,c
  2420   00367A  26D9               	addwf	fsr2l,f,c
  2421   00367C  5023               	movf	(wallAdjust@mL+1)^0,w,c
  2422   00367E  22DA               	addwfc	fsr2h,f,c
  2423   003680  50DF               	movf	indf2,w,c
  2424   003682  242F               	addwf	wallAdjust@cur_power^0,w,c
  2425   003684  C022  FFD9         	movff	wallAdjust@mL,fsr2l
  2426   003688  C023  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2427   00368C  6EDF               	movwf	indf2,c
  2428                           
  2429                           ;dc_motor.c: 552:         mR->power = cur_power+mR->compensation;
  2430   00368E  EE20 F009          	lfsr	2,9
  2431   003692  5024               	movf	wallAdjust@mR^0,w,c
  2432   003694  26D9               	addwf	fsr2l,f,c
  2433   003696  5025               	movf	(wallAdjust@mR+1)^0,w,c
  2434   003698  22DA               	addwfc	fsr2h,f,c
  2435   00369A  50DF               	movf	indf2,w,c
  2436   00369C  242F               	addwf	wallAdjust@cur_power^0,w,c
  2437   00369E  C024  FFD9         	movff	wallAdjust@mR,fsr2l
  2438   0036A2  C025  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2439   0036A6  6EDF               	movwf	indf2,c
  2440   0036A8                     
  2441                           ;dc_motor.c: 553:         setMotorPWM(mL);
  2442   0036A8  C022  F01C         	movff	wallAdjust@mL,setMotorPWM@m
  2443   0036AC  C023  F01D         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2444   0036B0  ECC6  F022         	call	_setMotorPWM	;wreg free
  2445   0036B4                     
  2446                           ;dc_motor.c: 554:         setMotorPWM(mR);
  2447   0036B4  C024  F01C         	movff	wallAdjust@mR,setMotorPWM@m
  2448   0036B8  C025  F01D         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2449   0036BC  ECC6  F022         	call	_setMotorPWM	;wreg free
  2450   0036C0                     
  2451                           ;dc_motor.c: 555:         for (i=0;i<straightRamp;i++) {
  2452   0036C0  0E00               	movlw	0
  2453   0036C2  6E2E               	movwf	(wallAdjust@i+1)^0,c
  2454   0036C4  0E00               	movlw	0
  2455   0036C6  6E2D               	movwf	wallAdjust@i^0,c
  2456   0036C8  EF6F  F01B         	goto	l712
  2457   0036CC                     l4058:
  2458                           
  2459                           ;dc_motor.c: 556:             _delay((unsigned long)((10)*(64000000/4000.0)));
  2460   0036CC  0ED0               	movlw	208
  2461   0036CE  6E28               	movwf	??_wallAdjust^0,c
  2462   0036D0  0ECA               	movlw	202
  2463   0036D2                     u4357:
  2464   0036D2  2EE8               	decfsz	wreg,f,c
  2465   0036D4  D7FE               	bra	u4357
  2466   0036D6  2E28               	decfsz	??_wallAdjust^0,f,c
  2467   0036D8  D7FC               	bra	u4357
  2468   0036DA                     
  2469                           ;dc_motor.c: 557:         }
  2470   0036DA  4A2D               	infsnz	wallAdjust@i^0,f,c
  2471   0036DC  2A2E               	incf	(wallAdjust@i+1)^0,f,c
  2472   0036DE                     l712:
  2473   0036DE  5027               	movf	wallAdjust@straightRamp^0,w,c
  2474   0036E0  6E28               	movwf	??_wallAdjust^0,c
  2475   0036E2  6A29               	clrf	(??_wallAdjust+1)^0,c
  2476   0036E4  5028               	movf	??_wallAdjust^0,w,c
  2477   0036E6  5C2D               	subwf	wallAdjust@i^0,w,c
  2478   0036E8  502E               	movf	(wallAdjust@i+1)^0,w,c
  2479   0036EA  0A80               	xorlw	128
  2480   0036EC  6E2A               	movwf	(??_wallAdjust+2)^0,c
  2481   0036EE  5029               	movf	(??_wallAdjust+1)^0,w,c
  2482   0036F0  0A80               	xorlw	128
  2483   0036F2  582A               	subwfb	(??_wallAdjust+2)^0,w,c
  2484   0036F4  A0D8               	btfss	status,0,c
  2485   0036F6  EF7F  F01B         	goto	u3131
  2486   0036FA  EF81  F01B         	goto	u3130
  2487   0036FE                     u3131:
  2488   0036FE  EF66  F01B         	goto	l4058
  2489   003702                     u3130:
  2490   003702                     
  2491                           ;dc_motor.c: 558:     }
  2492   003702  062F               	decf	wallAdjust@cur_power^0,f,c
  2493   003704  A0D8               	btfss	status,0,c
  2494   003706  0630               	decf	(wallAdjust@cur_power+1)^0,f,c
  2495   003708  EF31  F01B         	goto	l4046
  2496   00370C                     l4066:
  2497                           
  2498                           ;dc_motor.c: 559:     mL->power = 0;
  2499   00370C  C022  FFD9         	movff	wallAdjust@mL,fsr2l
  2500   003710  C023  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2501   003714  6ADF               	clrf	indf2,c
  2502                           
  2503                           ;dc_motor.c: 560:     mR->power = 0;
  2504   003716  C024  FFD9         	movff	wallAdjust@mR,fsr2l
  2505   00371A  C025  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2506   00371E  6ADF               	clrf	indf2,c
  2507   003720  0012               	return		;funcret
  2508   003722                     __end_of_wallAdjust:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _move *****************
  2512 ;; Defined at:
  2513 ;;		line 91 in file "dc_motor.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  2516 ;;		 -> main@motorL(10), 
  2517 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  2518 ;;		 -> main@motorR(10), 
  2519 ;;  color           1    4[BANK0 ] unsigned char 
  2520 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  2521 ;;		 -> main@moveSequence(40), 
  2522 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  2523 ;;		 -> main@straightTime(82), 
  2524 ;;  curMove         1    9[BANK0 ] unsigned char 
  2525 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  2526 ;;  reverseDurat    1   11[BANK0 ] unsigned char 
  2527 ;;  straightRamp    1   12[BANK0 ] unsigned char 
  2528 ;;  turnSpeed       1   13[BANK0 ] unsigned char 
  2529 ;;  turnDuration    1   14[BANK0 ] unsigned char 
  2530 ;;  turnRamp        1   15[BANK0 ] unsigned char 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2542 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2544 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2545 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2546 ;;Total ram usage:       18 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; Hardware stack levels required when called: 9
  2549 ;; This function calls:
  2550 ;;		_fullSpeedAhead
  2551 ;;		_returnHome
  2552 ;;		_reverseOneSquare
  2553 ;;		_reverseShort
  2554 ;;		_turnLeft
  2555 ;;		_turnRight
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text2
  2562   000E02                     __ptext2:
  2563                           	callstack 0
  2564   000E02                     _move:
  2565                           	callstack 21
  2566   000E02                     
  2567                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reve
      +                          rseDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, uns
      +                          igned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  2568   000E02  0100               	movlb	0	; () banked
  2569   000E04  05B4               	decf	move@color& (0+255),w,b
  2570   000E06  A4D8               	btfss	status,2,c
  2571   000E08  EF08  F007         	goto	u3881
  2572   000E0C  EF0A  F007         	goto	u3880
  2573   000E10                     u3881:
  2574   000E10  EF6C  F007         	goto	l4596
  2575   000E14                     u3880:
  2576   000E14                     
  2577                           ; BSR set to: 0
  2578                           ;dc_motor.c: 94:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2579   000E14  C0B0  F022         	movff	move@mL,reverseShort@mL
  2580   000E18  C0B1  F023         	movff	move@mL+1,reverseShort@mL+1
  2581   000E1C  C0B2  F024         	movff	move@mR,reverseShort@mR
  2582   000E20  C0B3  F025         	movff	move@mR+1,reverseShort@mR+1
  2583   000E24  C0BA  F026         	movff	move@straightSpeed,reverseShort@straightSpeed
  2584   000E28  C0BC  F027         	movff	move@straightRamp,reverseShort@straightRamp
  2585   000E2C  EC0A  F01F         	call	_reverseShort	;wreg free
  2586   000E30                     
  2587                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2588   000E30  0E05               	movlw	5
  2589   000E32  0100               	movlb	0	; () banked
  2590   000E34  6FC1               	movwf	(??_move+1)& (0+255),b
  2591   000E36  0E0F               	movlw	15
  2592   000E38  6FC0               	movwf	??_move& (0+255),b
  2593   000E3A  0EF1               	movlw	241
  2594   000E3C                     u4367:
  2595   000E3C  2EE8               	decfsz	wreg,f,c
  2596   000E3E  D7FE               	bra	u4367
  2597   000E40  2FC0               	decfsz	??_move& (0+255),f,b
  2598   000E42  D7FC               	bra	u4367
  2599   000E44  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2600   000E46  D7FA               	bra	u4367
  2601   000E48                     
  2602                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2603   000E48  C0B0  F022         	movff	move@mL,turnRight@mL
  2604   000E4C  C0B1  F023         	movff	move@mL+1,turnRight@mL+1
  2605   000E50  C0B2  F024         	movff	move@mR,turnRight@mR
  2606   000E54  C0B3  F025         	movff	move@mR+1,turnRight@mR+1
  2607   000E58  C0BD  F026         	movff	move@turnSpeed,turnRight@turnSpeed
  2608   000E5C  C0BE  F027         	movff	move@turnDuration,turnRight@turnDuration
  2609   000E60  C0BF  F028         	movff	move@turnRamp,turnRight@turnRamp
  2610   000E64  ECF2  F020         	call	_turnRight	;wreg free
  2611                           
  2612                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2613   000E68  0E05               	movlw	5
  2614   000E6A  0100               	movlb	0	; () banked
  2615   000E6C  6FC1               	movwf	(??_move+1)& (0+255),b
  2616   000E6E  0E0F               	movlw	15
  2617   000E70  6FC0               	movwf	??_move& (0+255),b
  2618   000E72  0EF1               	movlw	241
  2619   000E74                     u4377:
  2620   000E74  2EE8               	decfsz	wreg,f,c
  2621   000E76  D7FE               	bra	u4377
  2622   000E78  2FC0               	decfsz	??_move& (0+255),f,b
  2623   000E7A  D7FC               	bra	u4377
  2624   000E7C  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2625   000E7E  D7FA               	bra	u4377
  2626   000E80                     
  2627                           ;dc_motor.c: 98:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2628   000E80  C0B0  F022         	movff	move@mL,turnRight@mL
  2629   000E84  C0B1  F023         	movff	move@mL+1,turnRight@mL+1
  2630   000E88  C0B2  F024         	movff	move@mR,turnRight@mR
  2631   000E8C  C0B3  F025         	movff	move@mR+1,turnRight@mR+1
  2632   000E90  C0BD  F026         	movff	move@turnSpeed,turnRight@turnSpeed
  2633   000E94  C0BE  F027         	movff	move@turnDuration,turnRight@turnDuration
  2634   000E98  C0BF  F028         	movff	move@turnRamp,turnRight@turnRamp
  2635   000E9C  ECF2  F020         	call	_turnRight	;wreg free
  2636   000EA0                     
  2637                           ;dc_motor.c: 99:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2638   000EA0  0E05               	movlw	5
  2639   000EA2  0100               	movlb	0	; () banked
  2640   000EA4  6FC1               	movwf	(??_move+1)& (0+255),b
  2641   000EA6  0E0F               	movlw	15
  2642   000EA8  6FC0               	movwf	??_move& (0+255),b
  2643   000EAA  0EF1               	movlw	241
  2644   000EAC                     u4387:
  2645   000EAC  2EE8               	decfsz	wreg,f,c
  2646   000EAE  D7FE               	bra	u4387
  2647   000EB0  2FC0               	decfsz	??_move& (0+255),f,b
  2648   000EB2  D7FC               	bra	u4387
  2649   000EB4  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2650   000EB6  D7FA               	bra	u4387
  2651                           
  2652                           ;dc_motor.c: 100:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2653   000EB8  C0B0  F022         	movff	move@mL,fullSpeedAhead@mL
  2654   000EBC  C0B1  F023         	movff	move@mL+1,fullSpeedAhead@mL+1
  2655   000EC0  C0B2  F024         	movff	move@mR,fullSpeedAhead@mR
  2656   000EC4  C0B3  F025         	movff	move@mR+1,fullSpeedAhead@mR+1
  2657   000EC8  C0BA  F026         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2658   000ECC  C0BC  F027         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2659   000ED0  EC86  F024         	call	_fullSpeedAhead	;wreg free
  2660                           
  2661                           ;dc_motor.c: 101:     }
  2662   000ED4  EF15  F00B         	goto	l566
  2663   000ED8                     l4596:
  2664                           
  2665                           ; BSR set to: 0
  2666   000ED8  0E02               	movlw	2
  2667   000EDA  19B4               	xorwf	move@color& (0+255),w,b
  2668   000EDC  A4D8               	btfss	status,2,c
  2669   000EDE  EF73  F007         	goto	u3891
  2670   000EE2  EF75  F007         	goto	u3890
  2671   000EE6                     u3891:
  2672   000EE6  EFD7  F007         	goto	l4608
  2673   000EEA                     u3890:
  2674   000EEA                     
  2675                           ; BSR set to: 0
  2676                           ;dc_motor.c: 104:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2677   000EEA  C0B0  F022         	movff	move@mL,reverseShort@mL
  2678   000EEE  C0B1  F023         	movff	move@mL+1,reverseShort@mL+1
  2679   000EF2  C0B2  F024         	movff	move@mR,reverseShort@mR
  2680   000EF6  C0B3  F025         	movff	move@mR+1,reverseShort@mR+1
  2681   000EFA  C0BA  F026         	movff	move@straightSpeed,reverseShort@straightSpeed
  2682   000EFE  C0BC  F027         	movff	move@straightRamp,reverseShort@straightRamp
  2683   000F02  EC0A  F01F         	call	_reverseShort	;wreg free
  2684   000F06                     
  2685                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2686   000F06  0E05               	movlw	5
  2687   000F08  0100               	movlb	0	; () banked
  2688   000F0A  6FC1               	movwf	(??_move+1)& (0+255),b
  2689   000F0C  0E0F               	movlw	15
  2690   000F0E  6FC0               	movwf	??_move& (0+255),b
  2691   000F10  0EF1               	movlw	241
  2692   000F12                     u4397:
  2693   000F12  2EE8               	decfsz	wreg,f,c
  2694   000F14  D7FE               	bra	u4397
  2695   000F16  2FC0               	decfsz	??_move& (0+255),f,b
  2696   000F18  D7FC               	bra	u4397
  2697   000F1A  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2698   000F1C  D7FA               	bra	u4397
  2699   000F1E                     
  2700                           ;dc_motor.c: 106:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2701   000F1E  C0B0  F022         	movff	move@mL,turnLeft@mL
  2702   000F22  C0B1  F023         	movff	move@mL+1,turnLeft@mL+1
  2703   000F26  C0B2  F024         	movff	move@mR,turnLeft@mR
  2704   000F2A  C0B3  F025         	movff	move@mR+1,turnLeft@mR+1
  2705   000F2E  C0BD  F026         	movff	move@turnSpeed,turnLeft@turnSpeed
  2706   000F32  C0BE  F027         	movff	move@turnDuration,turnLeft@turnDuration
  2707   000F36  C0BF  F028         	movff	move@turnRamp,turnLeft@turnRamp
  2708   000F3A  ECDC  F021         	call	_turnLeft	;wreg free
  2709                           
  2710                           ;dc_motor.c: 107:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2711   000F3E  0E05               	movlw	5
  2712   000F40  0100               	movlb	0	; () banked
  2713   000F42  6FC1               	movwf	(??_move+1)& (0+255),b
  2714   000F44  0E0F               	movlw	15
  2715   000F46  6FC0               	movwf	??_move& (0+255),b
  2716   000F48  0EF1               	movlw	241
  2717   000F4A                     u4407:
  2718   000F4A  2EE8               	decfsz	wreg,f,c
  2719   000F4C  D7FE               	bra	u4407
  2720   000F4E  2FC0               	decfsz	??_move& (0+255),f,b
  2721   000F50  D7FC               	bra	u4407
  2722   000F52  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2723   000F54  D7FA               	bra	u4407
  2724   000F56                     
  2725                           ;dc_motor.c: 108:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2726   000F56  C0B0  F022         	movff	move@mL,turnLeft@mL
  2727   000F5A  C0B1  F023         	movff	move@mL+1,turnLeft@mL+1
  2728   000F5E  C0B2  F024         	movff	move@mR,turnLeft@mR
  2729   000F62  C0B3  F025         	movff	move@mR+1,turnLeft@mR+1
  2730   000F66  C0BD  F026         	movff	move@turnSpeed,turnLeft@turnSpeed
  2731   000F6A  C0BE  F027         	movff	move@turnDuration,turnLeft@turnDuration
  2732   000F6E  C0BF  F028         	movff	move@turnRamp,turnLeft@turnRamp
  2733   000F72  ECDC  F021         	call	_turnLeft	;wreg free
  2734   000F76                     
  2735                           ;dc_motor.c: 109:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2736   000F76  0E05               	movlw	5
  2737   000F78  0100               	movlb	0	; () banked
  2738   000F7A  6FC1               	movwf	(??_move+1)& (0+255),b
  2739   000F7C  0E0F               	movlw	15
  2740   000F7E  6FC0               	movwf	??_move& (0+255),b
  2741   000F80  0EF1               	movlw	241
  2742   000F82                     u4417:
  2743   000F82  2EE8               	decfsz	wreg,f,c
  2744   000F84  D7FE               	bra	u4417
  2745   000F86  2FC0               	decfsz	??_move& (0+255),f,b
  2746   000F88  D7FC               	bra	u4417
  2747   000F8A  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2748   000F8C  D7FA               	bra	u4417
  2749                           
  2750                           ;dc_motor.c: 110:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2751   000F8E  C0B0  F022         	movff	move@mL,fullSpeedAhead@mL
  2752   000F92  C0B1  F023         	movff	move@mL+1,fullSpeedAhead@mL+1
  2753   000F96  C0B2  F024         	movff	move@mR,fullSpeedAhead@mR
  2754   000F9A  C0B3  F025         	movff	move@mR+1,fullSpeedAhead@mR+1
  2755   000F9E  C0BA  F026         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2756   000FA2  C0BC  F027         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2757   000FA6  EC86  F024         	call	_fullSpeedAhead	;wreg free
  2758                           
  2759                           ;dc_motor.c: 111:     }
  2760   000FAA  EF15  F00B         	goto	l566
  2761   000FAE                     l4608:
  2762                           
  2763                           ; BSR set to: 0
  2764   000FAE  0E03               	movlw	3
  2765   000FB0  19B4               	xorwf	move@color& (0+255),w,b
  2766   000FB2  A4D8               	btfss	status,2,c
  2767   000FB4  EFDE  F007         	goto	u3901
  2768   000FB8  EFE0  F007         	goto	u3900
  2769   000FBC                     u3901:
  2770   000FBC  EF7A  F008         	goto	l4626
  2771   000FC0                     u3900:
  2772   000FC0                     
  2773                           ; BSR set to: 0
  2774                           ;dc_motor.c: 114:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2775   000FC0  C0B0  F022         	movff	move@mL,reverseShort@mL
  2776   000FC4  C0B1  F023         	movff	move@mL+1,reverseShort@mL+1
  2777   000FC8  C0B2  F024         	movff	move@mR,reverseShort@mR
  2778   000FCC  C0B3  F025         	movff	move@mR+1,reverseShort@mR+1
  2779   000FD0  C0BA  F026         	movff	move@straightSpeed,reverseShort@straightSpeed
  2780   000FD4  C0BC  F027         	movff	move@straightRamp,reverseShort@straightRamp
  2781   000FD8  EC0A  F01F         	call	_reverseShort	;wreg free
  2782   000FDC                     
  2783                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2784   000FDC  0E05               	movlw	5
  2785   000FDE  0100               	movlb	0	; () banked
  2786   000FE0  6FC1               	movwf	(??_move+1)& (0+255),b
  2787   000FE2  0E0F               	movlw	15
  2788   000FE4  6FC0               	movwf	??_move& (0+255),b
  2789   000FE6  0EF1               	movlw	241
  2790   000FE8                     u4427:
  2791   000FE8  2EE8               	decfsz	wreg,f,c
  2792   000FEA  D7FE               	bra	u4427
  2793   000FEC  2FC0               	decfsz	??_move& (0+255),f,b
  2794   000FEE  D7FC               	bra	u4427
  2795   000FF0  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2796   000FF2  D7FA               	bra	u4427
  2797   000FF4                     
  2798                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2799   000FF4  C0B0  F022         	movff	move@mL,turnLeft@mL
  2800   000FF8  C0B1  F023         	movff	move@mL+1,turnLeft@mL+1
  2801   000FFC  C0B2  F024         	movff	move@mR,turnLeft@mR
  2802   001000  C0B3  F025         	movff	move@mR+1,turnLeft@mR+1
  2803   001004  C0BD  F026         	movff	move@turnSpeed,turnLeft@turnSpeed
  2804   001008  C0BE  F027         	movff	move@turnDuration,turnLeft@turnDuration
  2805   00100C  C0BF  F028         	movff	move@turnRamp,turnLeft@turnRamp
  2806   001010  ECDC  F021         	call	_turnLeft	;wreg free
  2807                           
  2808                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2809   001014  0E05               	movlw	5
  2810   001016  0100               	movlb	0	; () banked
  2811   001018  6FC1               	movwf	(??_move+1)& (0+255),b
  2812   00101A  0E0F               	movlw	15
  2813   00101C  6FC0               	movwf	??_move& (0+255),b
  2814   00101E  0EF1               	movlw	241
  2815   001020                     u4437:
  2816   001020  2EE8               	decfsz	wreg,f,c
  2817   001022  D7FE               	bra	u4437
  2818   001024  2FC0               	decfsz	??_move& (0+255),f,b
  2819   001026  D7FC               	bra	u4437
  2820   001028  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2821   00102A  D7FA               	bra	u4437
  2822   00102C                     
  2823                           ;dc_motor.c: 118:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2824   00102C  C0B0  F022         	movff	move@mL,turnLeft@mL
  2825   001030  C0B1  F023         	movff	move@mL+1,turnLeft@mL+1
  2826   001034  C0B2  F024         	movff	move@mR,turnLeft@mR
  2827   001038  C0B3  F025         	movff	move@mR+1,turnLeft@mR+1
  2828   00103C  C0BD  F026         	movff	move@turnSpeed,turnLeft@turnSpeed
  2829   001040  C0BE  F027         	movff	move@turnDuration,turnLeft@turnDuration
  2830   001044  C0BF  F028         	movff	move@turnRamp,turnLeft@turnRamp
  2831   001048  ECDC  F021         	call	_turnLeft	;wreg free
  2832   00104C                     
  2833                           ;dc_motor.c: 119:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2834   00104C  0E05               	movlw	5
  2835   00104E  0100               	movlb	0	; () banked
  2836   001050  6FC1               	movwf	(??_move+1)& (0+255),b
  2837   001052  0E0F               	movlw	15
  2838   001054  6FC0               	movwf	??_move& (0+255),b
  2839   001056  0EF1               	movlw	241
  2840   001058                     u4447:
  2841   001058  2EE8               	decfsz	wreg,f,c
  2842   00105A  D7FE               	bra	u4447
  2843   00105C  2FC0               	decfsz	??_move& (0+255),f,b
  2844   00105E  D7FC               	bra	u4447
  2845   001060  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2846   001062  D7FA               	bra	u4447
  2847                           
  2848                           ;dc_motor.c: 120:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2849   001064  C0B0  F022         	movff	move@mL,turnLeft@mL
  2850   001068  C0B1  F023         	movff	move@mL+1,turnLeft@mL+1
  2851   00106C  C0B2  F024         	movff	move@mR,turnLeft@mR
  2852   001070  C0B3  F025         	movff	move@mR+1,turnLeft@mR+1
  2853   001074  C0BD  F026         	movff	move@turnSpeed,turnLeft@turnSpeed
  2854   001078  C0BE  F027         	movff	move@turnDuration,turnLeft@turnDuration
  2855   00107C  C0BF  F028         	movff	move@turnRamp,turnLeft@turnRamp
  2856   001080  ECDC  F021         	call	_turnLeft	;wreg free
  2857   001084                     
  2858                           ;dc_motor.c: 121:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2859   001084  0E05               	movlw	5
  2860   001086  0100               	movlb	0	; () banked
  2861   001088  6FC1               	movwf	(??_move+1)& (0+255),b
  2862   00108A  0E0F               	movlw	15
  2863   00108C  6FC0               	movwf	??_move& (0+255),b
  2864   00108E  0EF1               	movlw	241
  2865   001090                     u4457:
  2866   001090  2EE8               	decfsz	wreg,f,c
  2867   001092  D7FE               	bra	u4457
  2868   001094  2FC0               	decfsz	??_move& (0+255),f,b
  2869   001096  D7FC               	bra	u4457
  2870   001098  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2871   00109A  D7FA               	bra	u4457
  2872   00109C                     
  2873                           ;dc_motor.c: 122:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2874   00109C  C0B0  F022         	movff	move@mL,turnLeft@mL
  2875   0010A0  C0B1  F023         	movff	move@mL+1,turnLeft@mL+1
  2876   0010A4  C0B2  F024         	movff	move@mR,turnLeft@mR
  2877   0010A8  C0B3  F025         	movff	move@mR+1,turnLeft@mR+1
  2878   0010AC  C0BD  F026         	movff	move@turnSpeed,turnLeft@turnSpeed
  2879   0010B0  C0BE  F027         	movff	move@turnDuration,turnLeft@turnDuration
  2880   0010B4  C0BF  F028         	movff	move@turnRamp,turnLeft@turnRamp
  2881   0010B8  ECDC  F021         	call	_turnLeft	;wreg free
  2882                           
  2883                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2884   0010BC  0E05               	movlw	5
  2885   0010BE  0100               	movlb	0	; () banked
  2886   0010C0  6FC1               	movwf	(??_move+1)& (0+255),b
  2887   0010C2  0E0F               	movlw	15
  2888   0010C4  6FC0               	movwf	??_move& (0+255),b
  2889   0010C6  0EF1               	movlw	241
  2890   0010C8                     u4467:
  2891   0010C8  2EE8               	decfsz	wreg,f,c
  2892   0010CA  D7FE               	bra	u4467
  2893   0010CC  2FC0               	decfsz	??_move& (0+255),f,b
  2894   0010CE  D7FC               	bra	u4467
  2895   0010D0  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2896   0010D2  D7FA               	bra	u4467
  2897   0010D4                     
  2898                           ;dc_motor.c: 124:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2899   0010D4  C0B0  F022         	movff	move@mL,fullSpeedAhead@mL
  2900   0010D8  C0B1  F023         	movff	move@mL+1,fullSpeedAhead@mL+1
  2901   0010DC  C0B2  F024         	movff	move@mR,fullSpeedAhead@mR
  2902   0010E0  C0B3  F025         	movff	move@mR+1,fullSpeedAhead@mR+1
  2903   0010E4  C0BA  F026         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2904   0010E8  C0BC  F027         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2905   0010EC  EC86  F024         	call	_fullSpeedAhead	;wreg free
  2906                           
  2907                           ;dc_motor.c: 125:     }
  2908   0010F0  EF15  F00B         	goto	l566
  2909   0010F4                     l4626:
  2910                           
  2911                           ; BSR set to: 0
  2912   0010F4  0E04               	movlw	4
  2913   0010F6  19B4               	xorwf	move@color& (0+255),w,b
  2914   0010F8  A4D8               	btfss	status,2,c
  2915   0010FA  EF81  F008         	goto	u3911
  2916   0010FE  EF83  F008         	goto	u3910
  2917   001102                     u3911:
  2918   001102  EF01  F009         	goto	l4642
  2919   001106                     u3910:
  2920   001106                     
  2921                           ; BSR set to: 0
  2922                           ;dc_motor.c: 128:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2923   001106  C0B0  F022         	movff	move@mL,reverseShort@mL
  2924   00110A  C0B1  F023         	movff	move@mL+1,reverseShort@mL+1
  2925   00110E  C0B2  F024         	movff	move@mR,reverseShort@mR
  2926   001112  C0B3  F025         	movff	move@mR+1,reverseShort@mR+1
  2927   001116  C0BA  F026         	movff	move@straightSpeed,reverseShort@straightSpeed
  2928   00111A  C0BC  F027         	movff	move@straightRamp,reverseShort@straightRamp
  2929   00111E  EC0A  F01F         	call	_reverseShort	;wreg free
  2930   001122                     
  2931                           ;dc_motor.c: 129:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2932   001122  0E05               	movlw	5
  2933   001124  0100               	movlb	0	; () banked
  2934   001126  6FC1               	movwf	(??_move+1)& (0+255),b
  2935   001128  0E0F               	movlw	15
  2936   00112A  6FC0               	movwf	??_move& (0+255),b
  2937   00112C  0EF1               	movlw	241
  2938   00112E                     u4477:
  2939   00112E  2EE8               	decfsz	wreg,f,c
  2940   001130  D7FE               	bra	u4477
  2941   001132  2FC0               	decfsz	??_move& (0+255),f,b
  2942   001134  D7FC               	bra	u4477
  2943   001136  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2944   001138  D7FA               	bra	u4477
  2945   00113A                     
  2946                           ;dc_motor.c: 130:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2947   00113A  C0B0  F022         	movff	move@mL,reverseOneSquare@mL
  2948   00113E  C0B1  F023         	movff	move@mL+1,reverseOneSquare@mL+1
  2949   001142  C0B2  F024         	movff	move@mR,reverseOneSquare@mR
  2950   001146  C0B3  F025         	movff	move@mR+1,reverseOneSquare@mR+1
  2951   00114A  C0BA  F026         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2952   00114E  C0BB  F027         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2953   001152  C0BC  F028         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2954   001156  ECFF  F01F         	call	_reverseOneSquare	;wreg free
  2955                           
  2956                           ;dc_motor.c: 131:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2957   00115A  0E05               	movlw	5
  2958   00115C  0100               	movlb	0	; () banked
  2959   00115E  6FC1               	movwf	(??_move+1)& (0+255),b
  2960   001160  0E0F               	movlw	15
  2961   001162  6FC0               	movwf	??_move& (0+255),b
  2962   001164  0EF1               	movlw	241
  2963   001166                     u4487:
  2964   001166  2EE8               	decfsz	wreg,f,c
  2965   001168  D7FE               	bra	u4487
  2966   00116A  2FC0               	decfsz	??_move& (0+255),f,b
  2967   00116C  D7FC               	bra	u4487
  2968   00116E  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2969   001170  D7FA               	bra	u4487
  2970   001172                     
  2971                           ;dc_motor.c: 132:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2972   001172  C0B0  F022         	movff	move@mL,turnRight@mL
  2973   001176  C0B1  F023         	movff	move@mL+1,turnRight@mL+1
  2974   00117A  C0B2  F024         	movff	move@mR,turnRight@mR
  2975   00117E  C0B3  F025         	movff	move@mR+1,turnRight@mR+1
  2976   001182  C0BD  F026         	movff	move@turnSpeed,turnRight@turnSpeed
  2977   001186  C0BE  F027         	movff	move@turnDuration,turnRight@turnDuration
  2978   00118A  C0BF  F028         	movff	move@turnRamp,turnRight@turnRamp
  2979   00118E  ECF2  F020         	call	_turnRight	;wreg free
  2980   001192                     
  2981                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2982   001192  0E05               	movlw	5
  2983   001194  0100               	movlb	0	; () banked
  2984   001196  6FC1               	movwf	(??_move+1)& (0+255),b
  2985   001198  0E0F               	movlw	15
  2986   00119A  6FC0               	movwf	??_move& (0+255),b
  2987   00119C  0EF1               	movlw	241
  2988   00119E                     u4497:
  2989   00119E  2EE8               	decfsz	wreg,f,c
  2990   0011A0  D7FE               	bra	u4497
  2991   0011A2  2FC0               	decfsz	??_move& (0+255),f,b
  2992   0011A4  D7FC               	bra	u4497
  2993   0011A6  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  2994   0011A8  D7FA               	bra	u4497
  2995                           
  2996                           ;dc_motor.c: 134:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2997   0011AA  C0B0  F022         	movff	move@mL,turnRight@mL
  2998   0011AE  C0B1  F023         	movff	move@mL+1,turnRight@mL+1
  2999   0011B2  C0B2  F024         	movff	move@mR,turnRight@mR
  3000   0011B6  C0B3  F025         	movff	move@mR+1,turnRight@mR+1
  3001   0011BA  C0BD  F026         	movff	move@turnSpeed,turnRight@turnSpeed
  3002   0011BE  C0BE  F027         	movff	move@turnDuration,turnRight@turnDuration
  3003   0011C2  C0BF  F028         	movff	move@turnRamp,turnRight@turnRamp
  3004   0011C6  ECF2  F020         	call	_turnRight	;wreg free
  3005   0011CA                     
  3006                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3007   0011CA  0E05               	movlw	5
  3008   0011CC  0100               	movlb	0	; () banked
  3009   0011CE  6FC1               	movwf	(??_move+1)& (0+255),b
  3010   0011D0  0E0F               	movlw	15
  3011   0011D2  6FC0               	movwf	??_move& (0+255),b
  3012   0011D4  0EF1               	movlw	241
  3013   0011D6                     u4507:
  3014   0011D6  2EE8               	decfsz	wreg,f,c
  3015   0011D8  D7FE               	bra	u4507
  3016   0011DA  2FC0               	decfsz	??_move& (0+255),f,b
  3017   0011DC  D7FC               	bra	u4507
  3018   0011DE  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3019   0011E0  D7FA               	bra	u4507
  3020   0011E2                     
  3021                           ;dc_motor.c: 136:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3022   0011E2  C0B0  F022         	movff	move@mL,fullSpeedAhead@mL
  3023   0011E6  C0B1  F023         	movff	move@mL+1,fullSpeedAhead@mL+1
  3024   0011EA  C0B2  F024         	movff	move@mR,fullSpeedAhead@mR
  3025   0011EE  C0B3  F025         	movff	move@mR+1,fullSpeedAhead@mR+1
  3026   0011F2  C0BA  F026         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3027   0011F6  C0BC  F027         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3028   0011FA  EC86  F024         	call	_fullSpeedAhead	;wreg free
  3029                           
  3030                           ;dc_motor.c: 137:     }
  3031   0011FE  EF15  F00B         	goto	l566
  3032   001202                     l4642:
  3033                           
  3034                           ; BSR set to: 0
  3035   001202  0E05               	movlw	5
  3036   001204  19B4               	xorwf	move@color& (0+255),w,b
  3037   001206  A4D8               	btfss	status,2,c
  3038   001208  EF08  F009         	goto	u3921
  3039   00120C  EF0A  F009         	goto	u3920
  3040   001210                     u3921:
  3041   001210  EF88  F009         	goto	l4658
  3042   001214                     u3920:
  3043   001214                     
  3044                           ; BSR set to: 0
  3045                           ;dc_motor.c: 140:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3046   001214  C0B0  F022         	movff	move@mL,reverseShort@mL
  3047   001218  C0B1  F023         	movff	move@mL+1,reverseShort@mL+1
  3048   00121C  C0B2  F024         	movff	move@mR,reverseShort@mR
  3049   001220  C0B3  F025         	movff	move@mR+1,reverseShort@mR+1
  3050   001224  C0BA  F026         	movff	move@straightSpeed,reverseShort@straightSpeed
  3051   001228  C0BC  F027         	movff	move@straightRamp,reverseShort@straightRamp
  3052   00122C  EC0A  F01F         	call	_reverseShort	;wreg free
  3053   001230                     
  3054                           ;dc_motor.c: 141:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3055   001230  0E05               	movlw	5
  3056   001232  0100               	movlb	0	; () banked
  3057   001234  6FC1               	movwf	(??_move+1)& (0+255),b
  3058   001236  0E0F               	movlw	15
  3059   001238  6FC0               	movwf	??_move& (0+255),b
  3060   00123A  0EF1               	movlw	241
  3061   00123C                     u4517:
  3062   00123C  2EE8               	decfsz	wreg,f,c
  3063   00123E  D7FE               	bra	u4517
  3064   001240  2FC0               	decfsz	??_move& (0+255),f,b
  3065   001242  D7FC               	bra	u4517
  3066   001244  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3067   001246  D7FA               	bra	u4517
  3068   001248                     
  3069                           ;dc_motor.c: 142:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  3070   001248  C0B0  F022         	movff	move@mL,reverseOneSquare@mL
  3071   00124C  C0B1  F023         	movff	move@mL+1,reverseOneSquare@mL+1
  3072   001250  C0B2  F024         	movff	move@mR,reverseOneSquare@mR
  3073   001254  C0B3  F025         	movff	move@mR+1,reverseOneSquare@mR+1
  3074   001258  C0BA  F026         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  3075   00125C  C0BB  F027         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  3076   001260  C0BC  F028         	movff	move@straightRamp,reverseOneSquare@straightRamp
  3077   001264  ECFF  F01F         	call	_reverseOneSquare	;wreg free
  3078                           
  3079                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3080   001268  0E05               	movlw	5
  3081   00126A  0100               	movlb	0	; () banked
  3082   00126C  6FC1               	movwf	(??_move+1)& (0+255),b
  3083   00126E  0E0F               	movlw	15
  3084   001270  6FC0               	movwf	??_move& (0+255),b
  3085   001272  0EF1               	movlw	241
  3086   001274                     u4527:
  3087   001274  2EE8               	decfsz	wreg,f,c
  3088   001276  D7FE               	bra	u4527
  3089   001278  2FC0               	decfsz	??_move& (0+255),f,b
  3090   00127A  D7FC               	bra	u4527
  3091   00127C  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3092   00127E  D7FA               	bra	u4527
  3093   001280                     
  3094                           ;dc_motor.c: 144:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3095   001280  C0B0  F022         	movff	move@mL,turnLeft@mL
  3096   001284  C0B1  F023         	movff	move@mL+1,turnLeft@mL+1
  3097   001288  C0B2  F024         	movff	move@mR,turnLeft@mR
  3098   00128C  C0B3  F025         	movff	move@mR+1,turnLeft@mR+1
  3099   001290  C0BD  F026         	movff	move@turnSpeed,turnLeft@turnSpeed
  3100   001294  C0BE  F027         	movff	move@turnDuration,turnLeft@turnDuration
  3101   001298  C0BF  F028         	movff	move@turnRamp,turnLeft@turnRamp
  3102   00129C  ECDC  F021         	call	_turnLeft	;wreg free
  3103   0012A0                     
  3104                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3105   0012A0  0E05               	movlw	5
  3106   0012A2  0100               	movlb	0	; () banked
  3107   0012A4  6FC1               	movwf	(??_move+1)& (0+255),b
  3108   0012A6  0E0F               	movlw	15
  3109   0012A8  6FC0               	movwf	??_move& (0+255),b
  3110   0012AA  0EF1               	movlw	241
  3111   0012AC                     u4537:
  3112   0012AC  2EE8               	decfsz	wreg,f,c
  3113   0012AE  D7FE               	bra	u4537
  3114   0012B0  2FC0               	decfsz	??_move& (0+255),f,b
  3115   0012B2  D7FC               	bra	u4537
  3116   0012B4  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3117   0012B6  D7FA               	bra	u4537
  3118                           
  3119                           ;dc_motor.c: 146:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3120   0012B8  C0B0  F022         	movff	move@mL,turnLeft@mL
  3121   0012BC  C0B1  F023         	movff	move@mL+1,turnLeft@mL+1
  3122   0012C0  C0B2  F024         	movff	move@mR,turnLeft@mR
  3123   0012C4  C0B3  F025         	movff	move@mR+1,turnLeft@mR+1
  3124   0012C8  C0BD  F026         	movff	move@turnSpeed,turnLeft@turnSpeed
  3125   0012CC  C0BE  F027         	movff	move@turnDuration,turnLeft@turnDuration
  3126   0012D0  C0BF  F028         	movff	move@turnRamp,turnLeft@turnRamp
  3127   0012D4  ECDC  F021         	call	_turnLeft	;wreg free
  3128   0012D8                     
  3129                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3130   0012D8  0E05               	movlw	5
  3131   0012DA  0100               	movlb	0	; () banked
  3132   0012DC  6FC1               	movwf	(??_move+1)& (0+255),b
  3133   0012DE  0E0F               	movlw	15
  3134   0012E0  6FC0               	movwf	??_move& (0+255),b
  3135   0012E2  0EF1               	movlw	241
  3136   0012E4                     u4547:
  3137   0012E4  2EE8               	decfsz	wreg,f,c
  3138   0012E6  D7FE               	bra	u4547
  3139   0012E8  2FC0               	decfsz	??_move& (0+255),f,b
  3140   0012EA  D7FC               	bra	u4547
  3141   0012EC  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3142   0012EE  D7FA               	bra	u4547
  3143   0012F0                     
  3144                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3145   0012F0  C0B0  F022         	movff	move@mL,fullSpeedAhead@mL
  3146   0012F4  C0B1  F023         	movff	move@mL+1,fullSpeedAhead@mL+1
  3147   0012F8  C0B2  F024         	movff	move@mR,fullSpeedAhead@mR
  3148   0012FC  C0B3  F025         	movff	move@mR+1,fullSpeedAhead@mR+1
  3149   001300  C0BA  F026         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3150   001304  C0BC  F027         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3151   001308  EC86  F024         	call	_fullSpeedAhead	;wreg free
  3152                           
  3153                           ;dc_motor.c: 149:     }
  3154   00130C  EF15  F00B         	goto	l566
  3155   001310                     l4658:
  3156                           
  3157                           ; BSR set to: 0
  3158   001310  0E06               	movlw	6
  3159   001312  19B4               	xorwf	move@color& (0+255),w,b
  3160   001314  A4D8               	btfss	status,2,c
  3161   001316  EF8F  F009         	goto	u3931
  3162   00131A  EF91  F009         	goto	u3930
  3163   00131E                     u3931:
  3164   00131E  EF0F  F00A         	goto	l4674
  3165   001322                     u3930:
  3166   001322                     
  3167                           ; BSR set to: 0
  3168                           ;dc_motor.c: 152:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3169   001322  C0B0  F022         	movff	move@mL,reverseShort@mL
  3170   001326  C0B1  F023         	movff	move@mL+1,reverseShort@mL+1
  3171   00132A  C0B2  F024         	movff	move@mR,reverseShort@mR
  3172   00132E  C0B3  F025         	movff	move@mR+1,reverseShort@mR+1
  3173   001332  C0BA  F026         	movff	move@straightSpeed,reverseShort@straightSpeed
  3174   001336  C0BC  F027         	movff	move@straightRamp,reverseShort@straightRamp
  3175   00133A  EC0A  F01F         	call	_reverseShort	;wreg free
  3176   00133E                     
  3177                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3178   00133E  0E05               	movlw	5
  3179   001340  0100               	movlb	0	; () banked
  3180   001342  6FC1               	movwf	(??_move+1)& (0+255),b
  3181   001344  0E0F               	movlw	15
  3182   001346  6FC0               	movwf	??_move& (0+255),b
  3183   001348  0EF1               	movlw	241
  3184   00134A                     u4557:
  3185   00134A  2EE8               	decfsz	wreg,f,c
  3186   00134C  D7FE               	bra	u4557
  3187   00134E  2FC0               	decfsz	??_move& (0+255),f,b
  3188   001350  D7FC               	bra	u4557
  3189   001352  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3190   001354  D7FA               	bra	u4557
  3191   001356                     
  3192                           ;dc_motor.c: 154:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3193   001356  C0B0  F022         	movff	move@mL,turnRight@mL
  3194   00135A  C0B1  F023         	movff	move@mL+1,turnRight@mL+1
  3195   00135E  C0B2  F024         	movff	move@mR,turnRight@mR
  3196   001362  C0B3  F025         	movff	move@mR+1,turnRight@mR+1
  3197   001366  C0BD  F026         	movff	move@turnSpeed,turnRight@turnSpeed
  3198   00136A  C0BE  F027         	movff	move@turnDuration,turnRight@turnDuration
  3199   00136E  C0BF  F028         	movff	move@turnRamp,turnRight@turnRamp
  3200   001372  ECF2  F020         	call	_turnRight	;wreg free
  3201                           
  3202                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3203   001376  0E05               	movlw	5
  3204   001378  0100               	movlb	0	; () banked
  3205   00137A  6FC1               	movwf	(??_move+1)& (0+255),b
  3206   00137C  0E0F               	movlw	15
  3207   00137E  6FC0               	movwf	??_move& (0+255),b
  3208   001380  0EF1               	movlw	241
  3209   001382                     u4567:
  3210   001382  2EE8               	decfsz	wreg,f,c
  3211   001384  D7FE               	bra	u4567
  3212   001386  2FC0               	decfsz	??_move& (0+255),f,b
  3213   001388  D7FC               	bra	u4567
  3214   00138A  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3215   00138C  D7FA               	bra	u4567
  3216   00138E                     
  3217                           ;dc_motor.c: 156:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3218   00138E  C0B0  F022         	movff	move@mL,turnRight@mL
  3219   001392  C0B1  F023         	movff	move@mL+1,turnRight@mL+1
  3220   001396  C0B2  F024         	movff	move@mR,turnRight@mR
  3221   00139A  C0B3  F025         	movff	move@mR+1,turnRight@mR+1
  3222   00139E  C0BD  F026         	movff	move@turnSpeed,turnRight@turnSpeed
  3223   0013A2  C0BE  F027         	movff	move@turnDuration,turnRight@turnDuration
  3224   0013A6  C0BF  F028         	movff	move@turnRamp,turnRight@turnRamp
  3225   0013AA  ECF2  F020         	call	_turnRight	;wreg free
  3226   0013AE                     
  3227                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3228   0013AE  0E05               	movlw	5
  3229   0013B0  0100               	movlb	0	; () banked
  3230   0013B2  6FC1               	movwf	(??_move+1)& (0+255),b
  3231   0013B4  0E0F               	movlw	15
  3232   0013B6  6FC0               	movwf	??_move& (0+255),b
  3233   0013B8  0EF1               	movlw	241
  3234   0013BA                     u4577:
  3235   0013BA  2EE8               	decfsz	wreg,f,c
  3236   0013BC  D7FE               	bra	u4577
  3237   0013BE  2FC0               	decfsz	??_move& (0+255),f,b
  3238   0013C0  D7FC               	bra	u4577
  3239   0013C2  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3240   0013C4  D7FA               	bra	u4577
  3241                           
  3242                           ;dc_motor.c: 158:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3243   0013C6  C0B0  F022         	movff	move@mL,turnRight@mL
  3244   0013CA  C0B1  F023         	movff	move@mL+1,turnRight@mL+1
  3245   0013CE  C0B2  F024         	movff	move@mR,turnRight@mR
  3246   0013D2  C0B3  F025         	movff	move@mR+1,turnRight@mR+1
  3247   0013D6  C0BD  F026         	movff	move@turnSpeed,turnRight@turnSpeed
  3248   0013DA  C0BE  F027         	movff	move@turnDuration,turnRight@turnDuration
  3249   0013DE  C0BF  F028         	movff	move@turnRamp,turnRight@turnRamp
  3250   0013E2  ECF2  F020         	call	_turnRight	;wreg free
  3251   0013E6                     
  3252                           ;dc_motor.c: 159:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3253   0013E6  0E05               	movlw	5
  3254   0013E8  0100               	movlb	0	; () banked
  3255   0013EA  6FC1               	movwf	(??_move+1)& (0+255),b
  3256   0013EC  0E0F               	movlw	15
  3257   0013EE  6FC0               	movwf	??_move& (0+255),b
  3258   0013F0  0EF1               	movlw	241
  3259   0013F2                     u4587:
  3260   0013F2  2EE8               	decfsz	wreg,f,c
  3261   0013F4  D7FE               	bra	u4587
  3262   0013F6  2FC0               	decfsz	??_move& (0+255),f,b
  3263   0013F8  D7FC               	bra	u4587
  3264   0013FA  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3265   0013FC  D7FA               	bra	u4587
  3266   0013FE                     
  3267                           ;dc_motor.c: 160:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3268   0013FE  C0B0  F022         	movff	move@mL,fullSpeedAhead@mL
  3269   001402  C0B1  F023         	movff	move@mL+1,fullSpeedAhead@mL+1
  3270   001406  C0B2  F024         	movff	move@mR,fullSpeedAhead@mR
  3271   00140A  C0B3  F025         	movff	move@mR+1,fullSpeedAhead@mR+1
  3272   00140E  C0BA  F026         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3273   001412  C0BC  F027         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3274   001416  EC86  F024         	call	_fullSpeedAhead	;wreg free
  3275                           
  3276                           ;dc_motor.c: 161:     }
  3277   00141A  EF15  F00B         	goto	l566
  3278   00141E                     l4674:
  3279                           
  3280                           ; BSR set to: 0
  3281   00141E  0E07               	movlw	7
  3282   001420  19B4               	xorwf	move@color& (0+255),w,b
  3283   001422  A4D8               	btfss	status,2,c
  3284   001424  EF16  F00A         	goto	u3941
  3285   001428  EF18  F00A         	goto	u3940
  3286   00142C                     u3941:
  3287   00142C  EF96  F00A         	goto	l4690
  3288   001430                     u3940:
  3289   001430                     
  3290                           ; BSR set to: 0
  3291                           ;dc_motor.c: 164:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3292   001430  C0B0  F022         	movff	move@mL,reverseShort@mL
  3293   001434  C0B1  F023         	movff	move@mL+1,reverseShort@mL+1
  3294   001438  C0B2  F024         	movff	move@mR,reverseShort@mR
  3295   00143C  C0B3  F025         	movff	move@mR+1,reverseShort@mR+1
  3296   001440  C0BA  F026         	movff	move@straightSpeed,reverseShort@straightSpeed
  3297   001444  C0BC  F027         	movff	move@straightRamp,reverseShort@straightRamp
  3298   001448  EC0A  F01F         	call	_reverseShort	;wreg free
  3299   00144C                     
  3300                           ;dc_motor.c: 165:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3301   00144C  0E05               	movlw	5
  3302   00144E  0100               	movlb	0	; () banked
  3303   001450  6FC1               	movwf	(??_move+1)& (0+255),b
  3304   001452  0E0F               	movlw	15
  3305   001454  6FC0               	movwf	??_move& (0+255),b
  3306   001456  0EF1               	movlw	241
  3307   001458                     u4597:
  3308   001458  2EE8               	decfsz	wreg,f,c
  3309   00145A  D7FE               	bra	u4597
  3310   00145C  2FC0               	decfsz	??_move& (0+255),f,b
  3311   00145E  D7FC               	bra	u4597
  3312   001460  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3313   001462  D7FA               	bra	u4597
  3314   001464                     
  3315                           ;dc_motor.c: 166:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3316   001464  C0B0  F022         	movff	move@mL,turnLeft@mL
  3317   001468  C0B1  F023         	movff	move@mL+1,turnLeft@mL+1
  3318   00146C  C0B2  F024         	movff	move@mR,turnLeft@mR
  3319   001470  C0B3  F025         	movff	move@mR+1,turnLeft@mR+1
  3320   001474  C0BD  F026         	movff	move@turnSpeed,turnLeft@turnSpeed
  3321   001478  C0BE  F027         	movff	move@turnDuration,turnLeft@turnDuration
  3322   00147C  C0BF  F028         	movff	move@turnRamp,turnLeft@turnRamp
  3323   001480  ECDC  F021         	call	_turnLeft	;wreg free
  3324                           
  3325                           ;dc_motor.c: 167:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3326   001484  0E05               	movlw	5
  3327   001486  0100               	movlb	0	; () banked
  3328   001488  6FC1               	movwf	(??_move+1)& (0+255),b
  3329   00148A  0E0F               	movlw	15
  3330   00148C  6FC0               	movwf	??_move& (0+255),b
  3331   00148E  0EF1               	movlw	241
  3332   001490                     u4607:
  3333   001490  2EE8               	decfsz	wreg,f,c
  3334   001492  D7FE               	bra	u4607
  3335   001494  2FC0               	decfsz	??_move& (0+255),f,b
  3336   001496  D7FC               	bra	u4607
  3337   001498  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3338   00149A  D7FA               	bra	u4607
  3339   00149C                     
  3340                           ;dc_motor.c: 168:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3341   00149C  C0B0  F022         	movff	move@mL,turnLeft@mL
  3342   0014A0  C0B1  F023         	movff	move@mL+1,turnLeft@mL+1
  3343   0014A4  C0B2  F024         	movff	move@mR,turnLeft@mR
  3344   0014A8  C0B3  F025         	movff	move@mR+1,turnLeft@mR+1
  3345   0014AC  C0BD  F026         	movff	move@turnSpeed,turnLeft@turnSpeed
  3346   0014B0  C0BE  F027         	movff	move@turnDuration,turnLeft@turnDuration
  3347   0014B4  C0BF  F028         	movff	move@turnRamp,turnLeft@turnRamp
  3348   0014B8  ECDC  F021         	call	_turnLeft	;wreg free
  3349   0014BC                     
  3350                           ;dc_motor.c: 169:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3351   0014BC  0E05               	movlw	5
  3352   0014BE  0100               	movlb	0	; () banked
  3353   0014C0  6FC1               	movwf	(??_move+1)& (0+255),b
  3354   0014C2  0E0F               	movlw	15
  3355   0014C4  6FC0               	movwf	??_move& (0+255),b
  3356   0014C6  0EF1               	movlw	241
  3357   0014C8                     u4617:
  3358   0014C8  2EE8               	decfsz	wreg,f,c
  3359   0014CA  D7FE               	bra	u4617
  3360   0014CC  2FC0               	decfsz	??_move& (0+255),f,b
  3361   0014CE  D7FC               	bra	u4617
  3362   0014D0  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3363   0014D2  D7FA               	bra	u4617
  3364                           
  3365                           ;dc_motor.c: 170:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3366   0014D4  C0B0  F022         	movff	move@mL,turnLeft@mL
  3367   0014D8  C0B1  F023         	movff	move@mL+1,turnLeft@mL+1
  3368   0014DC  C0B2  F024         	movff	move@mR,turnLeft@mR
  3369   0014E0  C0B3  F025         	movff	move@mR+1,turnLeft@mR+1
  3370   0014E4  C0BD  F026         	movff	move@turnSpeed,turnLeft@turnSpeed
  3371   0014E8  C0BE  F027         	movff	move@turnDuration,turnLeft@turnDuration
  3372   0014EC  C0BF  F028         	movff	move@turnRamp,turnLeft@turnRamp
  3373   0014F0  ECDC  F021         	call	_turnLeft	;wreg free
  3374   0014F4                     
  3375                           ;dc_motor.c: 171:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3376   0014F4  0E05               	movlw	5
  3377   0014F6  0100               	movlb	0	; () banked
  3378   0014F8  6FC1               	movwf	(??_move+1)& (0+255),b
  3379   0014FA  0E0F               	movlw	15
  3380   0014FC  6FC0               	movwf	??_move& (0+255),b
  3381   0014FE  0EF1               	movlw	241
  3382   001500                     u4627:
  3383   001500  2EE8               	decfsz	wreg,f,c
  3384   001502  D7FE               	bra	u4627
  3385   001504  2FC0               	decfsz	??_move& (0+255),f,b
  3386   001506  D7FC               	bra	u4627
  3387   001508  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3388   00150A  D7FA               	bra	u4627
  3389   00150C                     
  3390                           ;dc_motor.c: 172:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3391   00150C  C0B0  F022         	movff	move@mL,fullSpeedAhead@mL
  3392   001510  C0B1  F023         	movff	move@mL+1,fullSpeedAhead@mL+1
  3393   001514  C0B2  F024         	movff	move@mR,fullSpeedAhead@mR
  3394   001518  C0B3  F025         	movff	move@mR+1,fullSpeedAhead@mR+1
  3395   00151C  C0BA  F026         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3396   001520  C0BC  F027         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3397   001524  EC86  F024         	call	_fullSpeedAhead	;wreg free
  3398                           
  3399                           ;dc_motor.c: 173:     }
  3400   001528  EF15  F00B         	goto	l566
  3401   00152C                     l4690:
  3402                           
  3403                           ; BSR set to: 0
  3404   00152C  0E08               	movlw	8
  3405   00152E  19B4               	xorwf	move@color& (0+255),w,b
  3406   001530  A4D8               	btfss	status,2,c
  3407   001532  EF9D  F00A         	goto	u3951
  3408   001536  EF9F  F00A         	goto	u3950
  3409   00153A                     u3951:
  3410   00153A  EFDB  F00A         	goto	l4698
  3411   00153E                     u3950:
  3412   00153E                     
  3413                           ; BSR set to: 0
  3414                           ;dc_motor.c: 176:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3415   00153E  C0B0  F022         	movff	move@mL,reverseShort@mL
  3416   001542  C0B1  F023         	movff	move@mL+1,reverseShort@mL+1
  3417   001546  C0B2  F024         	movff	move@mR,reverseShort@mR
  3418   00154A  C0B3  F025         	movff	move@mR+1,reverseShort@mR+1
  3419   00154E  C0BA  F026         	movff	move@straightSpeed,reverseShort@straightSpeed
  3420   001552  C0BC  F027         	movff	move@straightRamp,reverseShort@straightRamp
  3421   001556  EC0A  F01F         	call	_reverseShort	;wreg free
  3422   00155A                     
  3423                           ;dc_motor.c: 177:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3424   00155A  0E05               	movlw	5
  3425   00155C  0100               	movlb	0	; () banked
  3426   00155E  6FC1               	movwf	(??_move+1)& (0+255),b
  3427   001560  0E0F               	movlw	15
  3428   001562  6FC0               	movwf	??_move& (0+255),b
  3429   001564  0EF1               	movlw	241
  3430   001566                     u4637:
  3431   001566  2EE8               	decfsz	wreg,f,c
  3432   001568  D7FE               	bra	u4637
  3433   00156A  2FC0               	decfsz	??_move& (0+255),f,b
  3434   00156C  D7FC               	bra	u4637
  3435   00156E  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3436   001570  D7FA               	bra	u4637
  3437   001572                     
  3438                           ;dc_motor.c: 178:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3439   001572  C0B0  F030         	movff	move@mL,returnHome@mL
  3440   001576  C0B1  F031         	movff	move@mL+1,returnHome@mL+1
  3441   00157A  C0B2  F032         	movff	move@mR,returnHome@mR
  3442   00157E  C0B3  F033         	movff	move@mR+1,returnHome@mR+1
  3443   001582  C0B5  F034         	movff	move@moveSequence,returnHome@moveSequence
  3444   001586  C0B6  F035         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3445   00158A  C0B7  F036         	movff	move@straightTime,returnHome@straightTime
  3446   00158E  C0B8  F037         	movff	move@straightTime+1,returnHome@straightTime+1
  3447   001592  C0B9  F038         	movff	move@curMove,returnHome@curMove
  3448   001596  C0BA  F039         	movff	move@straightSpeed,returnHome@straightSpeed
  3449   00159A  C0BB  F03A         	movff	move@reverseDuration,returnHome@reverseDuration
  3450   00159E  C0BC  F03B         	movff	move@straightRamp,returnHome@straightRamp
  3451   0015A2  C0BD  F03C         	movff	move@turnSpeed,returnHome@turnSpeed
  3452   0015A6  C0BE  F03D         	movff	move@turnDuration,returnHome@turnDuration
  3453   0015AA  C0BF  F03E         	movff	move@turnRamp,returnHome@turnRamp
  3454   0015AE  EC16  F00B         	call	_returnHome	;wreg free
  3455                           
  3456                           ;dc_motor.c: 179:     }
  3457   0015B2  EF15  F00B         	goto	l566
  3458   0015B6                     l4698:
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;dc_motor.c: 182:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3462   0015B6  C0B0  F022         	movff	move@mL,reverseShort@mL
  3463   0015BA  C0B1  F023         	movff	move@mL+1,reverseShort@mL+1
  3464   0015BE  C0B2  F024         	movff	move@mR,reverseShort@mR
  3465   0015C2  C0B3  F025         	movff	move@mR+1,reverseShort@mR+1
  3466   0015C6  C0BA  F026         	movff	move@straightSpeed,reverseShort@straightSpeed
  3467   0015CA  C0BC  F027         	movff	move@straightRamp,reverseShort@straightRamp
  3468   0015CE  EC0A  F01F         	call	_reverseShort	;wreg free
  3469   0015D2                     
  3470                           ;dc_motor.c: 183:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3471   0015D2  0E05               	movlw	5
  3472   0015D4  0100               	movlb	0	; () banked
  3473   0015D6  6FC1               	movwf	(??_move+1)& (0+255),b
  3474   0015D8  0E0F               	movlw	15
  3475   0015DA  6FC0               	movwf	??_move& (0+255),b
  3476   0015DC  0EF1               	movlw	241
  3477   0015DE                     u4647:
  3478   0015DE  2EE8               	decfsz	wreg,f,c
  3479   0015E0  D7FE               	bra	u4647
  3480   0015E2  2FC0               	decfsz	??_move& (0+255),f,b
  3481   0015E4  D7FC               	bra	u4647
  3482   0015E6  2FC1               	decfsz	(??_move+1)& (0+255),f,b
  3483   0015E8  D7FA               	bra	u4647
  3484   0015EA                     
  3485                           ;dc_motor.c: 184:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3486   0015EA  C0B0  F030         	movff	move@mL,returnHome@mL
  3487   0015EE  C0B1  F031         	movff	move@mL+1,returnHome@mL+1
  3488   0015F2  C0B2  F032         	movff	move@mR,returnHome@mR
  3489   0015F6  C0B3  F033         	movff	move@mR+1,returnHome@mR+1
  3490   0015FA  C0B5  F034         	movff	move@moveSequence,returnHome@moveSequence
  3491   0015FE  C0B6  F035         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3492   001602  C0B7  F036         	movff	move@straightTime,returnHome@straightTime
  3493   001606  C0B8  F037         	movff	move@straightTime+1,returnHome@straightTime+1
  3494   00160A  C0B9  F038         	movff	move@curMove,returnHome@curMove
  3495   00160E  C0BA  F039         	movff	move@straightSpeed,returnHome@straightSpeed
  3496   001612  C0BB  F03A         	movff	move@reverseDuration,returnHome@reverseDuration
  3497   001616  C0BC  F03B         	movff	move@straightRamp,returnHome@straightRamp
  3498   00161A  C0BD  F03C         	movff	move@turnSpeed,returnHome@turnSpeed
  3499   00161E  C0BE  F03D         	movff	move@turnDuration,returnHome@turnDuration
  3500   001622  C0BF  F03E         	movff	move@turnRamp,returnHome@turnRamp
  3501   001626  EC16  F00B         	call	_returnHome	;wreg free
  3502   00162A                     l566:
  3503   00162A  0012               	return		;funcret
  3504   00162C                     __end_of_move:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function _reverseShort *****************
  3508 ;; Defined at:
  3509 ;;		line 563 in file "dc_motor.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  3512 ;;		 -> main@motorL(10), 
  3513 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  3514 ;;		 -> main@motorR(10), 
  3515 ;;  straightSpee    1   37[COMRAM] unsigned char 
  3516 ;;  straightRamp    1   38[COMRAM] unsigned char 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  cur_power       2   45[COMRAM] int 
  3519 ;;  i               2   43[COMRAM] int 
  3520 ;;  reverseDurat    1   42[COMRAM] unsigned char 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  1    wreg      void 
  3523 ;; Registers used:
  3524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3530 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3531 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3532 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3533 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3534 ;;Total ram usage:       14 bytes
  3535 ;; Hardware stack levels used: 1
  3536 ;; Hardware stack levels required when called: 7
  3537 ;; This function calls:
  3538 ;;		_setMotorPWM
  3539 ;; This function is called by:
  3540 ;;		_move
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text3
  3545   003E14                     __ptext3:
  3546                           	callstack 0
  3547   003E14                     _reverseShort:
  3548                           	callstack 22
  3549   003E14                     
  3550                           ;dc_motor.c: 563: void reverseShort(DC_motor *mL, DC_motor *mR, char straightSpeed, unsi
      +                          gned char straightRamp);dc_motor.c: 564: {;dc_motor.c: 565:     unsigned char reverseDur
      +                          ation = 30;
  3551   003E14  0E1E               	movlw	30
  3552   003E16  6E2B               	movwf	reverseShort@reverseDuration^0,c
  3553   003E18                     
  3554                           ;dc_motor.c: 567:     mL->direction = 0;
  3555   003E18  EE20 F001          	lfsr	2,1
  3556   003E1C  5022               	movf	reverseShort@mL^0,w,c
  3557   003E1E  26D9               	addwf	fsr2l,f,c
  3558   003E20  5023               	movf	(reverseShort@mL+1)^0,w,c
  3559   003E22  22DA               	addwfc	fsr2h,f,c
  3560   003E24  6ADF               	clrf	indf2,c
  3561   003E26                     
  3562                           ;dc_motor.c: 568:     mR->direction = 0;
  3563   003E26  EE20 F001          	lfsr	2,1
  3564   003E2A  5024               	movf	reverseShort@mR^0,w,c
  3565   003E2C  26D9               	addwf	fsr2l,f,c
  3566   003E2E  5025               	movf	(reverseShort@mR+1)^0,w,c
  3567   003E30  22DA               	addwfc	fsr2h,f,c
  3568   003E32  6ADF               	clrf	indf2,c
  3569                           
  3570                           ;dc_motor.c: 569:     int i;;dc_motor.c: 570:     int cur_power;;dc_motor.c: 571:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  3571   003E34  0E00               	movlw	0
  3572   003E36  6E2F               	movwf	(reverseShort@cur_power+1)^0,c
  3573   003E38  0E01               	movlw	1
  3574   003E3A  6E2E               	movwf	reverseShort@cur_power^0,c
  3575   003E3C  EF69  F01F         	goto	l3482
  3576   003E40                     l3468:
  3577                           
  3578                           ;dc_motor.c: 572:         mL->power = cur_power+mL->compensation;
  3579   003E40  EE20 F009          	lfsr	2,9
  3580   003E44  5022               	movf	reverseShort@mL^0,w,c
  3581   003E46  26D9               	addwf	fsr2l,f,c
  3582   003E48  5023               	movf	(reverseShort@mL+1)^0,w,c
  3583   003E4A  22DA               	addwfc	fsr2h,f,c
  3584   003E4C  50DF               	movf	indf2,w,c
  3585   003E4E  242E               	addwf	reverseShort@cur_power^0,w,c
  3586   003E50  C022  FFD9         	movff	reverseShort@mL,fsr2l
  3587   003E54  C023  FFDA         	movff	reverseShort@mL+1,fsr2h
  3588   003E58  6EDF               	movwf	indf2,c
  3589                           
  3590                           ;dc_motor.c: 573:         mR->power = cur_power+mR->compensation;
  3591   003E5A  EE20 F009          	lfsr	2,9
  3592   003E5E  5024               	movf	reverseShort@mR^0,w,c
  3593   003E60  26D9               	addwf	fsr2l,f,c
  3594   003E62  5025               	movf	(reverseShort@mR+1)^0,w,c
  3595   003E64  22DA               	addwfc	fsr2h,f,c
  3596   003E66  50DF               	movf	indf2,w,c
  3597   003E68  242E               	addwf	reverseShort@cur_power^0,w,c
  3598   003E6A  C024  FFD9         	movff	reverseShort@mR,fsr2l
  3599   003E6E  C025  FFDA         	movff	reverseShort@mR+1,fsr2h
  3600   003E72  6EDF               	movwf	indf2,c
  3601   003E74                     
  3602                           ;dc_motor.c: 574:         setMotorPWM(mL);
  3603   003E74  C022  F01C         	movff	reverseShort@mL,setMotorPWM@m
  3604   003E78  C023  F01D         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3605   003E7C  ECC6  F022         	call	_setMotorPWM	;wreg free
  3606   003E80                     
  3607                           ;dc_motor.c: 575:         setMotorPWM(mR);
  3608   003E80  C024  F01C         	movff	reverseShort@mR,setMotorPWM@m
  3609   003E84  C025  F01D         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3610   003E88  ECC6  F022         	call	_setMotorPWM	;wreg free
  3611   003E8C                     
  3612                           ;dc_motor.c: 576:         for (i=0;i<straightRamp;i++) {
  3613   003E8C  0E00               	movlw	0
  3614   003E8E  6E2D               	movwf	(reverseShort@i+1)^0,c
  3615   003E90  0E00               	movlw	0
  3616   003E92  6E2C               	movwf	reverseShort@i^0,c
  3617   003E94  EF55  F01F         	goto	l720
  3618   003E98                     l3476:
  3619                           
  3620                           ;dc_motor.c: 577:             _delay((unsigned long)((10)*(64000000/4000.0)));
  3621   003E98  0ED0               	movlw	208
  3622   003E9A  6E28               	movwf	??_reverseShort^0,c
  3623   003E9C  0ECA               	movlw	202
  3624   003E9E                     u4657:
  3625   003E9E  2EE8               	decfsz	wreg,f,c
  3626   003EA0  D7FE               	bra	u4657
  3627   003EA2  2E28               	decfsz	??_reverseShort^0,f,c
  3628   003EA4  D7FC               	bra	u4657
  3629   003EA6                     
  3630                           ;dc_motor.c: 578:         }
  3631   003EA6  4A2C               	infsnz	reverseShort@i^0,f,c
  3632   003EA8  2A2D               	incf	(reverseShort@i+1)^0,f,c
  3633   003EAA                     l720:
  3634   003EAA  5027               	movf	reverseShort@straightRamp^0,w,c
  3635   003EAC  6E28               	movwf	??_reverseShort^0,c
  3636   003EAE  6A29               	clrf	(??_reverseShort+1)^0,c
  3637   003EB0  5028               	movf	??_reverseShort^0,w,c
  3638   003EB2  5C2C               	subwf	reverseShort@i^0,w,c
  3639   003EB4  502D               	movf	(reverseShort@i+1)^0,w,c
  3640   003EB6  0A80               	xorlw	128
  3641   003EB8  6E2A               	movwf	(??_reverseShort+2)^0,c
  3642   003EBA  5029               	movf	(??_reverseShort+1)^0,w,c
  3643   003EBC  0A80               	xorlw	128
  3644   003EBE  582A               	subwfb	(??_reverseShort+2)^0,w,c
  3645   003EC0  A0D8               	btfss	status,0,c
  3646   003EC2  EF65  F01F         	goto	u2401
  3647   003EC6  EF67  F01F         	goto	u2400
  3648   003ECA                     u2401:
  3649   003ECA  EF4C  F01F         	goto	l3476
  3650   003ECE                     u2400:
  3651   003ECE                     
  3652                           ;dc_motor.c: 579:     }
  3653   003ECE  4A2E               	infsnz	reverseShort@cur_power^0,f,c
  3654   003ED0  2A2F               	incf	(reverseShort@cur_power+1)^0,f,c
  3655   003ED2                     l3482:
  3656   003ED2  5026               	movf	reverseShort@straightSpeed^0,w,c
  3657   003ED4  6E28               	movwf	??_reverseShort^0,c
  3658   003ED6  6A29               	clrf	(??_reverseShort+1)^0,c
  3659   003ED8  502E               	movf	reverseShort@cur_power^0,w,c
  3660   003EDA  5C28               	subwf	??_reverseShort^0,w,c
  3661   003EDC  5029               	movf	(??_reverseShort+1)^0,w,c
  3662   003EDE  0A80               	xorlw	128
  3663   003EE0  6E2A               	movwf	(??_reverseShort+2)^0,c
  3664   003EE2  502F               	movf	(reverseShort@cur_power+1)^0,w,c
  3665   003EE4  0A80               	xorlw	128
  3666   003EE6  582A               	subwfb	(??_reverseShort+2)^0,w,c
  3667   003EE8  B0D8               	btfsc	status,0,c
  3668   003EEA  EF79  F01F         	goto	u2411
  3669   003EEE  EF7B  F01F         	goto	u2410
  3670   003EF2                     u2411:
  3671   003EF2  EF20  F01F         	goto	l3468
  3672   003EF6                     u2410:
  3673   003EF6                     
  3674                           ;dc_motor.c: 581:     for (i=0;i<reverseDuration;i++) {
  3675   003EF6  0E00               	movlw	0
  3676   003EF8  6E2D               	movwf	(reverseShort@i+1)^0,c
  3677   003EFA  0E00               	movlw	0
  3678   003EFC  6E2C               	movwf	reverseShort@i^0,c
  3679   003EFE  EF8A  F01F         	goto	l724
  3680   003F02                     l3486:
  3681                           
  3682                           ;dc_motor.c: 582:             _delay((unsigned long)((10)*(64000000/4000.0)));
  3683   003F02  0ED0               	movlw	208
  3684   003F04  6E28               	movwf	??_reverseShort^0,c
  3685   003F06  0ECA               	movlw	202
  3686   003F08                     u4667:
  3687   003F08  2EE8               	decfsz	wreg,f,c
  3688   003F0A  D7FE               	bra	u4667
  3689   003F0C  2E28               	decfsz	??_reverseShort^0,f,c
  3690   003F0E  D7FC               	bra	u4667
  3691   003F10                     
  3692                           ;dc_motor.c: 583:         }
  3693   003F10  4A2C               	infsnz	reverseShort@i^0,f,c
  3694   003F12  2A2D               	incf	(reverseShort@i+1)^0,f,c
  3695   003F14                     l724:
  3696   003F14  502B               	movf	reverseShort@reverseDuration^0,w,c
  3697   003F16  6E28               	movwf	??_reverseShort^0,c
  3698   003F18  6A29               	clrf	(??_reverseShort+1)^0,c
  3699   003F1A  5028               	movf	??_reverseShort^0,w,c
  3700   003F1C  5C2C               	subwf	reverseShort@i^0,w,c
  3701   003F1E  502D               	movf	(reverseShort@i+1)^0,w,c
  3702   003F20  0A80               	xorlw	128
  3703   003F22  6E2A               	movwf	(??_reverseShort+2)^0,c
  3704   003F24  5029               	movf	(??_reverseShort+1)^0,w,c
  3705   003F26  0A80               	xorlw	128
  3706   003F28  582A               	subwfb	(??_reverseShort+2)^0,w,c
  3707   003F2A  A0D8               	btfss	status,0,c
  3708   003F2C  EF9A  F01F         	goto	u2421
  3709   003F30  EF9C  F01F         	goto	u2420
  3710   003F34                     u2421:
  3711   003F34  EF81  F01F         	goto	l3486
  3712   003F38                     u2420:
  3713   003F38                     
  3714                           ;dc_motor.c: 585:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  3715   003F38  C026  F02E         	movff	reverseShort@straightSpeed,reverseShort@cur_power
  3716   003F3C  6A2F               	clrf	(reverseShort@cur_power+1)^0,c
  3717   003F3E                     l3490:
  3718   003F3E  BE2F               	btfsc	(reverseShort@cur_power+1)^0,7,c
  3719   003F40  EFA6  F01F         	goto	u2430
  3720   003F44  EFA4  F01F         	goto	u2431
  3721   003F48                     u2431:
  3722   003F48  EFA8  F01F         	goto	l3494
  3723   003F4C                     u2430:
  3724   003F4C  EFF4  F01F         	goto	l3510
  3725   003F50                     l3494:
  3726                           
  3727                           ;dc_motor.c: 586:         mL->power = cur_power+mL->compensation;
  3728   003F50  EE20 F009          	lfsr	2,9
  3729   003F54  5022               	movf	reverseShort@mL^0,w,c
  3730   003F56  26D9               	addwf	fsr2l,f,c
  3731   003F58  5023               	movf	(reverseShort@mL+1)^0,w,c
  3732   003F5A  22DA               	addwfc	fsr2h,f,c
  3733   003F5C  50DF               	movf	indf2,w,c
  3734   003F5E  242E               	addwf	reverseShort@cur_power^0,w,c
  3735   003F60  C022  FFD9         	movff	reverseShort@mL,fsr2l
  3736   003F64  C023  FFDA         	movff	reverseShort@mL+1,fsr2h
  3737   003F68  6EDF               	movwf	indf2,c
  3738                           
  3739                           ;dc_motor.c: 587:         mR->power = cur_power+mR->compensation;
  3740   003F6A  EE20 F009          	lfsr	2,9
  3741   003F6E  5024               	movf	reverseShort@mR^0,w,c
  3742   003F70  26D9               	addwf	fsr2l,f,c
  3743   003F72  5025               	movf	(reverseShort@mR+1)^0,w,c
  3744   003F74  22DA               	addwfc	fsr2h,f,c
  3745   003F76  50DF               	movf	indf2,w,c
  3746   003F78  242E               	addwf	reverseShort@cur_power^0,w,c
  3747   003F7A  C024  FFD9         	movff	reverseShort@mR,fsr2l
  3748   003F7E  C025  FFDA         	movff	reverseShort@mR+1,fsr2h
  3749   003F82  6EDF               	movwf	indf2,c
  3750   003F84                     
  3751                           ;dc_motor.c: 588:         setMotorPWM(mL);
  3752   003F84  C022  F01C         	movff	reverseShort@mL,setMotorPWM@m
  3753   003F88  C023  F01D         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3754   003F8C  ECC6  F022         	call	_setMotorPWM	;wreg free
  3755   003F90                     
  3756                           ;dc_motor.c: 589:         setMotorPWM(mR);
  3757   003F90  C024  F01C         	movff	reverseShort@mR,setMotorPWM@m
  3758   003F94  C025  F01D         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3759   003F98  ECC6  F022         	call	_setMotorPWM	;wreg free
  3760   003F9C                     
  3761                           ;dc_motor.c: 590:         for (i=0;i<straightRamp;i++) {
  3762   003F9C  0E00               	movlw	0
  3763   003F9E  6E2D               	movwf	(reverseShort@i+1)^0,c
  3764   003FA0  0E00               	movlw	0
  3765   003FA2  6E2C               	movwf	reverseShort@i^0,c
  3766   003FA4  EFDD  F01F         	goto	l729
  3767   003FA8                     l3502:
  3768                           
  3769                           ;dc_motor.c: 591:             _delay((unsigned long)((10)*(64000000/4000.0)));
  3770   003FA8  0ED0               	movlw	208
  3771   003FAA  6E28               	movwf	??_reverseShort^0,c
  3772   003FAC  0ECA               	movlw	202
  3773   003FAE                     u4677:
  3774   003FAE  2EE8               	decfsz	wreg,f,c
  3775   003FB0  D7FE               	bra	u4677
  3776   003FB2  2E28               	decfsz	??_reverseShort^0,f,c
  3777   003FB4  D7FC               	bra	u4677
  3778   003FB6                     
  3779                           ;dc_motor.c: 592:         }
  3780   003FB6  4A2C               	infsnz	reverseShort@i^0,f,c
  3781   003FB8  2A2D               	incf	(reverseShort@i+1)^0,f,c
  3782   003FBA                     l729:
  3783   003FBA  5027               	movf	reverseShort@straightRamp^0,w,c
  3784   003FBC  6E28               	movwf	??_reverseShort^0,c
  3785   003FBE  6A29               	clrf	(??_reverseShort+1)^0,c
  3786   003FC0  5028               	movf	??_reverseShort^0,w,c
  3787   003FC2  5C2C               	subwf	reverseShort@i^0,w,c
  3788   003FC4  502D               	movf	(reverseShort@i+1)^0,w,c
  3789   003FC6  0A80               	xorlw	128
  3790   003FC8  6E2A               	movwf	(??_reverseShort+2)^0,c
  3791   003FCA  5029               	movf	(??_reverseShort+1)^0,w,c
  3792   003FCC  0A80               	xorlw	128
  3793   003FCE  582A               	subwfb	(??_reverseShort+2)^0,w,c
  3794   003FD0  A0D8               	btfss	status,0,c
  3795   003FD2  EFED  F01F         	goto	u2441
  3796   003FD6  EFEF  F01F         	goto	u2440
  3797   003FDA                     u2441:
  3798   003FDA  EFD4  F01F         	goto	l3502
  3799   003FDE                     u2440:
  3800   003FDE                     
  3801                           ;dc_motor.c: 593:     }
  3802   003FDE  062E               	decf	reverseShort@cur_power^0,f,c
  3803   003FE0  A0D8               	btfss	status,0,c
  3804   003FE2  062F               	decf	(reverseShort@cur_power+1)^0,f,c
  3805   003FE4  EF9F  F01F         	goto	l3490
  3806   003FE8                     l3510:
  3807                           
  3808                           ;dc_motor.c: 594:     mL->power = 0;
  3809   003FE8  C022  FFD9         	movff	reverseShort@mL,fsr2l
  3810   003FEC  C023  FFDA         	movff	reverseShort@mL+1,fsr2h
  3811   003FF0  6ADF               	clrf	indf2,c
  3812                           
  3813                           ;dc_motor.c: 595:     mR->power = 0;
  3814   003FF2  C024  FFD9         	movff	reverseShort@mR,fsr2l
  3815   003FF6  C025  FFDA         	movff	reverseShort@mR+1,fsr2h
  3816   003FFA  6ADF               	clrf	indf2,c
  3817   003FFC  0012               	return		;funcret
  3818   003FFE                     __end_of_reverseShort:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _returnHome *****************
  3822 ;; Defined at:
  3823 ;;		line 189 in file "dc_motor.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  mL              2   47[COMRAM] PTR struct DC_motor
  3826 ;;		 -> main@motorL(10), 
  3827 ;;  mR              2   49[COMRAM] PTR struct DC_motor
  3828 ;;		 -> main@motorR(10), 
  3829 ;;  moveSequence    2   51[COMRAM] PTR unsigned char 
  3830 ;;		 -> main@moveSequence(40), 
  3831 ;;  straightTime    2   53[COMRAM] PTR unsigned int 
  3832 ;;		 -> main@straightTime(82), 
  3833 ;;  curMove         1   55[COMRAM] unsigned char 
  3834 ;;  straightSpee    1   56[COMRAM] unsigned char 
  3835 ;;  reverseDurat    1   57[COMRAM] unsigned char 
  3836 ;;  straightRamp    1   58[COMRAM] unsigned char 
  3837 ;;  turnSpeed       1   59[COMRAM] unsigned char 
  3838 ;;  turnDuration    1   60[COMRAM] unsigned char 
  3839 ;;  turnRamp        1   61[COMRAM] unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  i               1   66[COMRAM] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3851 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3854 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3855 ;;Total ram usage:       20 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; Hardware stack levels required when called: 8
  3858 ;; This function calls:
  3859 ;;		_fullSpeedAhead
  3860 ;;		_get16bitTMR0val
  3861 ;;		_resetTimer
  3862 ;;		_reverseOneSquare
  3863 ;;		_stop
  3864 ;;		_turnLeft
  3865 ;;		_turnRight
  3866 ;; This function is called by:
  3867 ;;		_move
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           	psect	text4
  3872   00162C                     __ptext4:
  3873                           	callstack 0
  3874   00162C                     _returnHome:
  3875                           	callstack 21
  3876   00162C                     
  3877                           ;dc_motor.c: 189: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reverseDu
      +                          ration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned
      +                           char turnRamp);dc_motor.c: 190: {;dc_motor.c: 191:     turnLeft(mL, mR, turnSpeed, turn
      +                          Duration, turnRamp);
  3878   00162C  C030  F022         	movff	returnHome@mL,turnLeft@mL
  3879   001630  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  3880   001634  C032  F024         	movff	returnHome@mR,turnLeft@mR
  3881   001638  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  3882   00163C  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3883   001640  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3884   001644  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3885   001648  ECDC  F021         	call	_turnLeft	;wreg free
  3886   00164C                     
  3887                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3888   00164C  0E05               	movlw	5
  3889   00164E  6E40               	movwf	(??_returnHome+1)^0,c
  3890   001650  0E0F               	movlw	15
  3891   001652  6E3F               	movwf	??_returnHome^0,c
  3892   001654  0EF1               	movlw	241
  3893   001656                     u4687:
  3894   001656  2EE8               	decfsz	wreg,f,c
  3895   001658  D7FE               	bra	u4687
  3896   00165A  2E3F               	decfsz	??_returnHome^0,f,c
  3897   00165C  D7FC               	bra	u4687
  3898   00165E  2E40               	decfsz	(??_returnHome+1)^0,f,c
  3899   001660  D7FA               	bra	u4687
  3900   001662  0000               	nop	
  3901   001664                     
  3902                           ;dc_motor.c: 193:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3903   001664  C030  F022         	movff	returnHome@mL,turnLeft@mL
  3904   001668  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  3905   00166C  C032  F024         	movff	returnHome@mR,turnLeft@mR
  3906   001670  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  3907   001674  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3908   001678  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3909   00167C  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3910   001680  ECDC  F021         	call	_turnLeft	;wreg free
  3911                           
  3912                           ;dc_motor.c: 194:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3913   001684  0E05               	movlw	5
  3914   001686  6E40               	movwf	(??_returnHome+1)^0,c
  3915   001688  0E0F               	movlw	15
  3916   00168A  6E3F               	movwf	??_returnHome^0,c
  3917   00168C  0EF1               	movlw	241
  3918   00168E                     u4697:
  3919   00168E  2EE8               	decfsz	wreg,f,c
  3920   001690  D7FE               	bra	u4697
  3921   001692  2E3F               	decfsz	??_returnHome^0,f,c
  3922   001694  D7FC               	bra	u4697
  3923   001696  2E40               	decfsz	(??_returnHome+1)^0,f,c
  3924   001698  D7FA               	bra	u4697
  3925   00169A  0000               	nop	
  3926   00169C                     
  3927                           ;dc_motor.c: 195:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3928   00169C  C030  F022         	movff	returnHome@mL,turnLeft@mL
  3929   0016A0  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  3930   0016A4  C032  F024         	movff	returnHome@mR,turnLeft@mR
  3931   0016A8  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  3932   0016AC  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3933   0016B0  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3934   0016B4  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3935   0016B8  ECDC  F021         	call	_turnLeft	;wreg free
  3936   0016BC                     
  3937                           ;dc_motor.c: 196:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3938   0016BC  0E05               	movlw	5
  3939   0016BE  6E40               	movwf	(??_returnHome+1)^0,c
  3940   0016C0  0E0F               	movlw	15
  3941   0016C2  6E3F               	movwf	??_returnHome^0,c
  3942   0016C4  0EF1               	movlw	241
  3943   0016C6                     u4707:
  3944   0016C6  2EE8               	decfsz	wreg,f,c
  3945   0016C8  D7FE               	bra	u4707
  3946   0016CA  2E3F               	decfsz	??_returnHome^0,f,c
  3947   0016CC  D7FC               	bra	u4707
  3948   0016CE  2E40               	decfsz	(??_returnHome+1)^0,f,c
  3949   0016D0  D7FA               	bra	u4707
  3950   0016D2  0000               	nop	
  3951                           
  3952                           ;dc_motor.c: 197:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3953   0016D4  C030  F022         	movff	returnHome@mL,turnLeft@mL
  3954   0016D8  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  3955   0016DC  C032  F024         	movff	returnHome@mR,turnLeft@mR
  3956   0016E0  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  3957   0016E4  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3958   0016E8  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3959   0016EC  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3960   0016F0  ECDC  F021         	call	_turnLeft	;wreg free
  3961   0016F4                     
  3962                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3963   0016F4  0E05               	movlw	5
  3964   0016F6  6E40               	movwf	(??_returnHome+1)^0,c
  3965   0016F8  0E0F               	movlw	15
  3966   0016FA  6E3F               	movwf	??_returnHome^0,c
  3967   0016FC  0EF1               	movlw	241
  3968   0016FE                     u4717:
  3969   0016FE  2EE8               	decfsz	wreg,f,c
  3970   001700  D7FE               	bra	u4717
  3971   001702  2E3F               	decfsz	??_returnHome^0,f,c
  3972   001704  D7FC               	bra	u4717
  3973   001706  2E40               	decfsz	(??_returnHome+1)^0,f,c
  3974   001708  D7FA               	bra	u4717
  3975   00170A  0000               	nop	
  3976   00170C                     
  3977                           ;dc_motor.c: 199:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3978   00170C  C030  F022         	movff	returnHome@mL,fullSpeedAhead@mL
  3979   001710  C031  F023         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  3980   001714  C032  F024         	movff	returnHome@mR,fullSpeedAhead@mR
  3981   001718  C033  F025         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  3982   00171C  C039  F026         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3983   001720  C03B  F027         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  3984   001724  EC86  F024         	call	_fullSpeedAhead	;wreg free
  3985   001728                     
  3986                           ;dc_motor.c: 200:     resetTimer();
  3987   001728  EC28  F029         	call	_resetTimer	;wreg free
  3988   00172C                     l3528:
  3989   00172C  5038               	movf	returnHome@curMove^0,w,c
  3990   00172E  0D02               	mullw	2
  3991   001730  CFF3 F03F          	movff	prodl,??_returnHome
  3992   001734  CFF4 F040          	movff	prodh,??_returnHome+1
  3993   001738  503F               	movf	??_returnHome^0,w,c
  3994   00173A  2436               	addwf	returnHome@straightTime^0,w,c
  3995   00173C  6ED9               	movwf	fsr2l,c
  3996   00173E  5040               	movf	(??_returnHome+1)^0,w,c
  3997   001740  2037               	addwfc	(returnHome@straightTime+1)^0,w,c
  3998   001742  6EDA               	movwf	fsr2h,c
  3999   001744  EC26  F028         	call	_get16bitTMR0val	;wreg free
  4000   001748  50DE               	movf	postinc2,w,c
  4001   00174A  5C0F               	subwf	?_get16bitTMR0val^0,w,c
  4002   00174C  50DE               	movf	postinc2,w,c
  4003   00174E  5810               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4004   001750  A0D8               	btfss	status,0,c
  4005   001752  EFAD  F00B         	goto	u2451
  4006   001756  EFAF  F00B         	goto	u2450
  4007   00175A                     u2451:
  4008   00175A  EF96  F00B         	goto	l3528
  4009   00175E                     u2450:
  4010   00175E                     
  4011                           ;dc_motor.c: 202:     stop(mL, mR, straightRamp);
  4012   00175E  C030  F022         	movff	returnHome@mL,stop@mL
  4013   001762  C031  F023         	movff	returnHome@mL+1,stop@mL+1
  4014   001766  C032  F024         	movff	returnHome@mR,stop@mR
  4015   00176A  C033  F025         	movff	returnHome@mR+1,stop@mR+1
  4016   00176E  C03B  F026         	movff	returnHome@straightRamp,stop@straightRamp
  4017   001772  EC02  F024         	call	_stop	;wreg free
  4018   001776                     
  4019                           ;dc_motor.c: 204:     char i=curMove;
  4020   001776  C038  F043         	movff	returnHome@curMove,returnHome@i
  4021                           
  4022                           ;dc_motor.c: 205:     while (i>0) {
  4023   00177A  EF6B  F00E         	goto	l3620
  4024   00177E                     l3534:
  4025                           
  4026                           ;dc_motor.c: 206:         i--;
  4027   00177E  0643               	decf	returnHome@i^0,f,c
  4028   001780                     
  4029                           ;dc_motor.c: 208:         if (moveSequence[i] == 1) {
  4030   001780  5043               	movf	returnHome@i^0,w,c
  4031   001782  2434               	addwf	returnHome@moveSequence^0,w,c
  4032   001784  6ED9               	movwf	fsr2l,c
  4033   001786  0E00               	movlw	0
  4034   001788  2035               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4035   00178A  6EDA               	movwf	fsr2h,c
  4036   00178C  04DE               	decf	postinc2,w,c
  4037   00178E  A4D8               	btfss	status,2,c
  4038   001790  EFCC  F00B         	goto	u2461
  4039   001794  EFCE  F00B         	goto	u2460
  4040   001798                     u2461:
  4041   001798  EF08  F00C         	goto	l3544
  4042   00179C                     u2460:
  4043   00179C                     
  4044                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4045   00179C  C030  F022         	movff	returnHome@mL,turnLeft@mL
  4046   0017A0  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  4047   0017A4  C032  F024         	movff	returnHome@mR,turnLeft@mR
  4048   0017A8  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  4049   0017AC  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4050   0017B0  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4051   0017B4  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4052   0017B8  ECDC  F021         	call	_turnLeft	;wreg free
  4053   0017BC                     
  4054                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4055   0017BC  0E05               	movlw	5
  4056   0017BE  6E40               	movwf	(??_returnHome+1)^0,c
  4057   0017C0  0E0F               	movlw	15
  4058   0017C2  6E3F               	movwf	??_returnHome^0,c
  4059   0017C4  0EF1               	movlw	241
  4060   0017C6                     u4727:
  4061   0017C6  2EE8               	decfsz	wreg,f,c
  4062   0017C8  D7FE               	bra	u4727
  4063   0017CA  2E3F               	decfsz	??_returnHome^0,f,c
  4064   0017CC  D7FC               	bra	u4727
  4065   0017CE  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4066   0017D0  D7FA               	bra	u4727
  4067   0017D2  0000               	nop	
  4068   0017D4                     
  4069                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4070   0017D4  C030  F022         	movff	returnHome@mL,turnLeft@mL
  4071   0017D8  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  4072   0017DC  C032  F024         	movff	returnHome@mR,turnLeft@mR
  4073   0017E0  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  4074   0017E4  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4075   0017E8  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4076   0017EC  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4077   0017F0  ECDC  F021         	call	_turnLeft	;wreg free
  4078                           
  4079                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4080   0017F4  0E05               	movlw	5
  4081   0017F6  6E40               	movwf	(??_returnHome+1)^0,c
  4082   0017F8  0E0F               	movlw	15
  4083   0017FA  6E3F               	movwf	??_returnHome^0,c
  4084   0017FC  0EF1               	movlw	241
  4085   0017FE                     u4737:
  4086   0017FE  2EE8               	decfsz	wreg,f,c
  4087   001800  D7FE               	bra	u4737
  4088   001802  2E3F               	decfsz	??_returnHome^0,f,c
  4089   001804  D7FC               	bra	u4737
  4090   001806  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4091   001808  D7FA               	bra	u4737
  4092   00180A  0000               	nop	
  4093                           
  4094                           ;dc_motor.c: 213:         }
  4095   00180C  EF36  F00E         	goto	l575
  4096   001810                     l3544:
  4097   001810  5043               	movf	returnHome@i^0,w,c
  4098   001812  2434               	addwf	returnHome@moveSequence^0,w,c
  4099   001814  6ED9               	movwf	fsr2l,c
  4100   001816  0E00               	movlw	0
  4101   001818  2035               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4102   00181A  6EDA               	movwf	fsr2h,c
  4103   00181C  0E02               	movlw	2
  4104   00181E  18DE               	xorwf	postinc2,w,c
  4105   001820  A4D8               	btfss	status,2,c
  4106   001822  EF15  F00C         	goto	u2471
  4107   001826  EF17  F00C         	goto	u2470
  4108   00182A                     u2471:
  4109   00182A  EF51  F00C         	goto	l3552
  4110   00182E                     u2470:
  4111   00182E                     
  4112                           ;dc_motor.c: 216:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4113   00182E  C030  F022         	movff	returnHome@mL,turnRight@mL
  4114   001832  C031  F023         	movff	returnHome@mL+1,turnRight@mL+1
  4115   001836  C032  F024         	movff	returnHome@mR,turnRight@mR
  4116   00183A  C033  F025         	movff	returnHome@mR+1,turnRight@mR+1
  4117   00183E  C03C  F026         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4118   001842  C03D  F027         	movff	returnHome@turnDuration,turnRight@turnDuration
  4119   001846  C03E  F028         	movff	returnHome@turnRamp,turnRight@turnRamp
  4120   00184A  ECF2  F020         	call	_turnRight	;wreg free
  4121   00184E                     
  4122                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4123   00184E  0E05               	movlw	5
  4124   001850  6E40               	movwf	(??_returnHome+1)^0,c
  4125   001852  0E0F               	movlw	15
  4126   001854  6E3F               	movwf	??_returnHome^0,c
  4127   001856  0EF1               	movlw	241
  4128   001858                     u4747:
  4129   001858  2EE8               	decfsz	wreg,f,c
  4130   00185A  D7FE               	bra	u4747
  4131   00185C  2E3F               	decfsz	??_returnHome^0,f,c
  4132   00185E  D7FC               	bra	u4747
  4133   001860  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4134   001862  D7FA               	bra	u4747
  4135   001864  0000               	nop	
  4136   001866                     
  4137                           ;dc_motor.c: 218:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4138   001866  C030  F022         	movff	returnHome@mL,turnRight@mL
  4139   00186A  C031  F023         	movff	returnHome@mL+1,turnRight@mL+1
  4140   00186E  C032  F024         	movff	returnHome@mR,turnRight@mR
  4141   001872  C033  F025         	movff	returnHome@mR+1,turnRight@mR+1
  4142   001876  C03C  F026         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4143   00187A  C03D  F027         	movff	returnHome@turnDuration,turnRight@turnDuration
  4144   00187E  C03E  F028         	movff	returnHome@turnRamp,turnRight@turnRamp
  4145   001882  ECF2  F020         	call	_turnRight	;wreg free
  4146                           
  4147                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4148   001886  0E05               	movlw	5
  4149   001888  6E40               	movwf	(??_returnHome+1)^0,c
  4150   00188A  0E0F               	movlw	15
  4151   00188C  6E3F               	movwf	??_returnHome^0,c
  4152   00188E  0EF1               	movlw	241
  4153   001890                     u4757:
  4154   001890  2EE8               	decfsz	wreg,f,c
  4155   001892  D7FE               	bra	u4757
  4156   001894  2E3F               	decfsz	??_returnHome^0,f,c
  4157   001896  D7FC               	bra	u4757
  4158   001898  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4159   00189A  D7FA               	bra	u4757
  4160   00189C  0000               	nop	
  4161                           
  4162                           ;dc_motor.c: 220:         }
  4163   00189E  EF36  F00E         	goto	l575
  4164   0018A2                     l3552:
  4165   0018A2  5043               	movf	returnHome@i^0,w,c
  4166   0018A4  2434               	addwf	returnHome@moveSequence^0,w,c
  4167   0018A6  6ED9               	movwf	fsr2l,c
  4168   0018A8  0E00               	movlw	0
  4169   0018AA  2035               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4170   0018AC  6EDA               	movwf	fsr2h,c
  4171   0018AE  0E03               	movlw	3
  4172   0018B0  18DE               	xorwf	postinc2,w,c
  4173   0018B2  A4D8               	btfss	status,2,c
  4174   0018B4  EF5E  F00C         	goto	u2481
  4175   0018B8  EF60  F00C         	goto	u2480
  4176   0018BC                     u2481:
  4177   0018BC  EFD2  F00C         	goto	l3566
  4178   0018C0                     u2480:
  4179   0018C0                     
  4180                           ;dc_motor.c: 223:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4181   0018C0  C030  F022         	movff	returnHome@mL,turnLeft@mL
  4182   0018C4  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  4183   0018C8  C032  F024         	movff	returnHome@mR,turnLeft@mR
  4184   0018CC  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  4185   0018D0  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4186   0018D4  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4187   0018D8  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4188   0018DC  ECDC  F021         	call	_turnLeft	;wreg free
  4189   0018E0                     
  4190                           ;dc_motor.c: 224:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4191   0018E0  0E05               	movlw	5
  4192   0018E2  6E40               	movwf	(??_returnHome+1)^0,c
  4193   0018E4  0E0F               	movlw	15
  4194   0018E6  6E3F               	movwf	??_returnHome^0,c
  4195   0018E8  0EF1               	movlw	241
  4196   0018EA                     u4767:
  4197   0018EA  2EE8               	decfsz	wreg,f,c
  4198   0018EC  D7FE               	bra	u4767
  4199   0018EE  2E3F               	decfsz	??_returnHome^0,f,c
  4200   0018F0  D7FC               	bra	u4767
  4201   0018F2  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4202   0018F4  D7FA               	bra	u4767
  4203   0018F6  0000               	nop	
  4204   0018F8                     
  4205                           ;dc_motor.c: 225:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4206   0018F8  C030  F022         	movff	returnHome@mL,turnLeft@mL
  4207   0018FC  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  4208   001900  C032  F024         	movff	returnHome@mR,turnLeft@mR
  4209   001904  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  4210   001908  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4211   00190C  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4212   001910  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4213   001914  ECDC  F021         	call	_turnLeft	;wreg free
  4214                           
  4215                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4216   001918  0E05               	movlw	5
  4217   00191A  6E40               	movwf	(??_returnHome+1)^0,c
  4218   00191C  0E0F               	movlw	15
  4219   00191E  6E3F               	movwf	??_returnHome^0,c
  4220   001920  0EF1               	movlw	241
  4221   001922                     u4777:
  4222   001922  2EE8               	decfsz	wreg,f,c
  4223   001924  D7FE               	bra	u4777
  4224   001926  2E3F               	decfsz	??_returnHome^0,f,c
  4225   001928  D7FC               	bra	u4777
  4226   00192A  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4227   00192C  D7FA               	bra	u4777
  4228   00192E  0000               	nop	
  4229   001930                     
  4230                           ;dc_motor.c: 227:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4231   001930  C030  F022         	movff	returnHome@mL,turnLeft@mL
  4232   001934  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  4233   001938  C032  F024         	movff	returnHome@mR,turnLeft@mR
  4234   00193C  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  4235   001940  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4236   001944  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4237   001948  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4238   00194C  ECDC  F021         	call	_turnLeft	;wreg free
  4239   001950                     
  4240                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4241   001950  0E05               	movlw	5
  4242   001952  6E40               	movwf	(??_returnHome+1)^0,c
  4243   001954  0E0F               	movlw	15
  4244   001956  6E3F               	movwf	??_returnHome^0,c
  4245   001958  0EF1               	movlw	241
  4246   00195A                     u4787:
  4247   00195A  2EE8               	decfsz	wreg,f,c
  4248   00195C  D7FE               	bra	u4787
  4249   00195E  2E3F               	decfsz	??_returnHome^0,f,c
  4250   001960  D7FC               	bra	u4787
  4251   001962  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4252   001964  D7FA               	bra	u4787
  4253   001966  0000               	nop	
  4254                           
  4255                           ;dc_motor.c: 229:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4256   001968  C030  F022         	movff	returnHome@mL,turnLeft@mL
  4257   00196C  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  4258   001970  C032  F024         	movff	returnHome@mR,turnLeft@mR
  4259   001974  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  4260   001978  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4261   00197C  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4262   001980  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4263   001984  ECDC  F021         	call	_turnLeft	;wreg free
  4264   001988                     l3564:
  4265                           
  4266                           ;dc_motor.c: 230:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4267   001988  0E05               	movlw	5
  4268   00198A  6E40               	movwf	(??_returnHome+1)^0,c
  4269   00198C  0E0F               	movlw	15
  4270   00198E  6E3F               	movwf	??_returnHome^0,c
  4271   001990  0EF1               	movlw	241
  4272   001992                     u4797:
  4273   001992  2EE8               	decfsz	wreg,f,c
  4274   001994  D7FE               	bra	u4797
  4275   001996  2E3F               	decfsz	??_returnHome^0,f,c
  4276   001998  D7FC               	bra	u4797
  4277   00199A  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4278   00199C  D7FA               	bra	u4797
  4279   00199E  0000               	nop	
  4280                           
  4281                           ;dc_motor.c: 231:         }
  4282   0019A0  EF36  F00E         	goto	l575
  4283   0019A4                     l3566:
  4284   0019A4  5043               	movf	returnHome@i^0,w,c
  4285   0019A6  2434               	addwf	returnHome@moveSequence^0,w,c
  4286   0019A8  6ED9               	movwf	fsr2l,c
  4287   0019AA  0E00               	movlw	0
  4288   0019AC  2035               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4289   0019AE  6EDA               	movwf	fsr2h,c
  4290   0019B0  0E04               	movlw	4
  4291   0019B2  18DE               	xorwf	postinc2,w,c
  4292   0019B4  A4D8               	btfss	status,2,c
  4293   0019B6  EFDF  F00C         	goto	u2491
  4294   0019BA  EFE1  F00C         	goto	u2490
  4295   0019BE                     u2491:
  4296   0019BE  EF2B  F00D         	goto	l3578
  4297   0019C2                     u2490:
  4298   0019C2                     
  4299                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4300   0019C2  C030  F022         	movff	returnHome@mL,turnLeft@mL
  4301   0019C6  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  4302   0019CA  C032  F024         	movff	returnHome@mR,turnLeft@mR
  4303   0019CE  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  4304   0019D2  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4305   0019D6  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4306   0019DA  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4307   0019DE  ECDC  F021         	call	_turnLeft	;wreg free
  4308   0019E2                     
  4309                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4310   0019E2  0E05               	movlw	5
  4311   0019E4  6E40               	movwf	(??_returnHome+1)^0,c
  4312   0019E6  0E0F               	movlw	15
  4313   0019E8  6E3F               	movwf	??_returnHome^0,c
  4314   0019EA  0EF1               	movlw	241
  4315   0019EC                     u4807:
  4316   0019EC  2EE8               	decfsz	wreg,f,c
  4317   0019EE  D7FE               	bra	u4807
  4318   0019F0  2E3F               	decfsz	??_returnHome^0,f,c
  4319   0019F2  D7FC               	bra	u4807
  4320   0019F4  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4321   0019F6  D7FA               	bra	u4807
  4322   0019F8  0000               	nop	
  4323   0019FA                     
  4324                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4325   0019FA  C030  F022         	movff	returnHome@mL,turnLeft@mL
  4326   0019FE  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  4327   001A02  C032  F024         	movff	returnHome@mR,turnLeft@mR
  4328   001A06  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  4329   001A0A  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4330   001A0E  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4331   001A12  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4332   001A16  ECDC  F021         	call	_turnLeft	;wreg free
  4333                           
  4334                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4335   001A1A  0E05               	movlw	5
  4336   001A1C  6E40               	movwf	(??_returnHome+1)^0,c
  4337   001A1E  0E0F               	movlw	15
  4338   001A20  6E3F               	movwf	??_returnHome^0,c
  4339   001A22  0EF1               	movlw	241
  4340   001A24                     u4817:
  4341   001A24  2EE8               	decfsz	wreg,f,c
  4342   001A26  D7FE               	bra	u4817
  4343   001A28  2E3F               	decfsz	??_returnHome^0,f,c
  4344   001A2A  D7FC               	bra	u4817
  4345   001A2C  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4346   001A2E  D7FA               	bra	u4817
  4347   001A30  0000               	nop	
  4348   001A32                     
  4349                           ;dc_motor.c: 238:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4350   001A32  C030  F022         	movff	returnHome@mL,reverseOneSquare@mL
  4351   001A36  C031  F023         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4352   001A3A  C032  F024         	movff	returnHome@mR,reverseOneSquare@mR
  4353   001A3E  C033  F025         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4354   001A42  C039  F026         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4355   001A46  C03A  F027         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4356   001A4A  C03B  F028         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4357   001A4E  ECFF  F01F         	call	_reverseOneSquare	;wreg free
  4358   001A52  EFC4  F00C         	goto	l3564
  4359   001A56                     l3578:
  4360   001A56  5043               	movf	returnHome@i^0,w,c
  4361   001A58  2434               	addwf	returnHome@moveSequence^0,w,c
  4362   001A5A  6ED9               	movwf	fsr2l,c
  4363   001A5C  0E00               	movlw	0
  4364   001A5E  2035               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4365   001A60  6EDA               	movwf	fsr2h,c
  4366   001A62  0E05               	movlw	5
  4367   001A64  18DE               	xorwf	postinc2,w,c
  4368   001A66  A4D8               	btfss	status,2,c
  4369   001A68  EF38  F00D         	goto	u2501
  4370   001A6C  EF3A  F00D         	goto	u2500
  4371   001A70                     u2501:
  4372   001A70  EF84  F00D         	goto	l3590
  4373   001A74                     u2500:
  4374   001A74                     
  4375                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4376   001A74  C030  F022         	movff	returnHome@mL,turnRight@mL
  4377   001A78  C031  F023         	movff	returnHome@mL+1,turnRight@mL+1
  4378   001A7C  C032  F024         	movff	returnHome@mR,turnRight@mR
  4379   001A80  C033  F025         	movff	returnHome@mR+1,turnRight@mR+1
  4380   001A84  C03C  F026         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4381   001A88  C03D  F027         	movff	returnHome@turnDuration,turnRight@turnDuration
  4382   001A8C  C03E  F028         	movff	returnHome@turnRamp,turnRight@turnRamp
  4383   001A90  ECF2  F020         	call	_turnRight	;wreg free
  4384   001A94                     
  4385                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4386   001A94  0E05               	movlw	5
  4387   001A96  6E40               	movwf	(??_returnHome+1)^0,c
  4388   001A98  0E0F               	movlw	15
  4389   001A9A  6E3F               	movwf	??_returnHome^0,c
  4390   001A9C  0EF1               	movlw	241
  4391   001A9E                     u4827:
  4392   001A9E  2EE8               	decfsz	wreg,f,c
  4393   001AA0  D7FE               	bra	u4827
  4394   001AA2  2E3F               	decfsz	??_returnHome^0,f,c
  4395   001AA4  D7FC               	bra	u4827
  4396   001AA6  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4397   001AA8  D7FA               	bra	u4827
  4398   001AAA  0000               	nop	
  4399   001AAC                     
  4400                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4401   001AAC  C030  F022         	movff	returnHome@mL,turnRight@mL
  4402   001AB0  C031  F023         	movff	returnHome@mL+1,turnRight@mL+1
  4403   001AB4  C032  F024         	movff	returnHome@mR,turnRight@mR
  4404   001AB8  C033  F025         	movff	returnHome@mR+1,turnRight@mR+1
  4405   001ABC  C03C  F026         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4406   001AC0  C03D  F027         	movff	returnHome@turnDuration,turnRight@turnDuration
  4407   001AC4  C03E  F028         	movff	returnHome@turnRamp,turnRight@turnRamp
  4408   001AC8  ECF2  F020         	call	_turnRight	;wreg free
  4409                           
  4410                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4411   001ACC  0E05               	movlw	5
  4412   001ACE  6E40               	movwf	(??_returnHome+1)^0,c
  4413   001AD0  0E0F               	movlw	15
  4414   001AD2  6E3F               	movwf	??_returnHome^0,c
  4415   001AD4  0EF1               	movlw	241
  4416   001AD6                     u4837:
  4417   001AD6  2EE8               	decfsz	wreg,f,c
  4418   001AD8  D7FE               	bra	u4837
  4419   001ADA  2E3F               	decfsz	??_returnHome^0,f,c
  4420   001ADC  D7FC               	bra	u4837
  4421   001ADE  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4422   001AE0  D7FA               	bra	u4837
  4423   001AE2  0000               	nop	
  4424   001AE4                     
  4425                           ;dc_motor.c: 247:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4426   001AE4  C030  F022         	movff	returnHome@mL,reverseOneSquare@mL
  4427   001AE8  C031  F023         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4428   001AEC  C032  F024         	movff	returnHome@mR,reverseOneSquare@mR
  4429   001AF0  C033  F025         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4430   001AF4  C039  F026         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4431   001AF8  C03A  F027         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4432   001AFC  C03B  F028         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4433   001B00  ECFF  F01F         	call	_reverseOneSquare	;wreg free
  4434   001B04  EFC4  F00C         	goto	l3564
  4435   001B08                     l3590:
  4436   001B08  5043               	movf	returnHome@i^0,w,c
  4437   001B0A  2434               	addwf	returnHome@moveSequence^0,w,c
  4438   001B0C  6ED9               	movwf	fsr2l,c
  4439   001B0E  0E00               	movlw	0
  4440   001B10  2035               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4441   001B12  6EDA               	movwf	fsr2h,c
  4442   001B14  0E06               	movlw	6
  4443   001B16  18DE               	xorwf	postinc2,w,c
  4444   001B18  A4D8               	btfss	status,2,c
  4445   001B1A  EF91  F00D         	goto	u2511
  4446   001B1E  EF93  F00D         	goto	u2510
  4447   001B22                     u2511:
  4448   001B22  EFDD  F00D         	goto	l3602
  4449   001B26                     u2510:
  4450   001B26                     
  4451                           ;dc_motor.c: 252:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4452   001B26  C030  F022         	movff	returnHome@mL,turnLeft@mL
  4453   001B2A  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  4454   001B2E  C032  F024         	movff	returnHome@mR,turnLeft@mR
  4455   001B32  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  4456   001B36  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4457   001B3A  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4458   001B3E  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4459   001B42  ECDC  F021         	call	_turnLeft	;wreg free
  4460   001B46                     
  4461                           ;dc_motor.c: 253:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4462   001B46  0E05               	movlw	5
  4463   001B48  6E40               	movwf	(??_returnHome+1)^0,c
  4464   001B4A  0E0F               	movlw	15
  4465   001B4C  6E3F               	movwf	??_returnHome^0,c
  4466   001B4E  0EF1               	movlw	241
  4467   001B50                     u4847:
  4468   001B50  2EE8               	decfsz	wreg,f,c
  4469   001B52  D7FE               	bra	u4847
  4470   001B54  2E3F               	decfsz	??_returnHome^0,f,c
  4471   001B56  D7FC               	bra	u4847
  4472   001B58  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4473   001B5A  D7FA               	bra	u4847
  4474   001B5C  0000               	nop	
  4475   001B5E                     
  4476                           ;dc_motor.c: 254:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4477   001B5E  C030  F022         	movff	returnHome@mL,turnLeft@mL
  4478   001B62  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  4479   001B66  C032  F024         	movff	returnHome@mR,turnLeft@mR
  4480   001B6A  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  4481   001B6E  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4482   001B72  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4483   001B76  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4484   001B7A  ECDC  F021         	call	_turnLeft	;wreg free
  4485                           
  4486                           ;dc_motor.c: 255:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4487   001B7E  0E05               	movlw	5
  4488   001B80  6E40               	movwf	(??_returnHome+1)^0,c
  4489   001B82  0E0F               	movlw	15
  4490   001B84  6E3F               	movwf	??_returnHome^0,c
  4491   001B86  0EF1               	movlw	241
  4492   001B88                     u4857:
  4493   001B88  2EE8               	decfsz	wreg,f,c
  4494   001B8A  D7FE               	bra	u4857
  4495   001B8C  2E3F               	decfsz	??_returnHome^0,f,c
  4496   001B8E  D7FC               	bra	u4857
  4497   001B90  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4498   001B92  D7FA               	bra	u4857
  4499   001B94  0000               	nop	
  4500   001B96                     
  4501                           ;dc_motor.c: 256:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4502   001B96  C030  F022         	movff	returnHome@mL,turnLeft@mL
  4503   001B9A  C031  F023         	movff	returnHome@mL+1,turnLeft@mL+1
  4504   001B9E  C032  F024         	movff	returnHome@mR,turnLeft@mR
  4505   001BA2  C033  F025         	movff	returnHome@mR+1,turnLeft@mR+1
  4506   001BA6  C03C  F026         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4507   001BAA  C03D  F027         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4508   001BAE  C03E  F028         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4509   001BB2  ECDC  F021         	call	_turnLeft	;wreg free
  4510   001BB6  EFC4  F00C         	goto	l3564
  4511   001BBA                     l3602:
  4512   001BBA  5043               	movf	returnHome@i^0,w,c
  4513   001BBC  2434               	addwf	returnHome@moveSequence^0,w,c
  4514   001BBE  6ED9               	movwf	fsr2l,c
  4515   001BC0  0E00               	movlw	0
  4516   001BC2  2035               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4517   001BC4  6EDA               	movwf	fsr2h,c
  4518   001BC6  0E07               	movlw	7
  4519   001BC8  18DE               	xorwf	postinc2,w,c
  4520   001BCA  A4D8               	btfss	status,2,c
  4521   001BCC  EFEA  F00D         	goto	u2521
  4522   001BD0  EFEC  F00D         	goto	u2520
  4523   001BD4                     u2521:
  4524   001BD4  EF36  F00E         	goto	l581
  4525   001BD8                     u2520:
  4526   001BD8                     
  4527                           ;dc_motor.c: 261:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4528   001BD8  C030  F022         	movff	returnHome@mL,turnRight@mL
  4529   001BDC  C031  F023         	movff	returnHome@mL+1,turnRight@mL+1
  4530   001BE0  C032  F024         	movff	returnHome@mR,turnRight@mR
  4531   001BE4  C033  F025         	movff	returnHome@mR+1,turnRight@mR+1
  4532   001BE8  C03C  F026         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4533   001BEC  C03D  F027         	movff	returnHome@turnDuration,turnRight@turnDuration
  4534   001BF0  C03E  F028         	movff	returnHome@turnRamp,turnRight@turnRamp
  4535   001BF4  ECF2  F020         	call	_turnRight	;wreg free
  4536   001BF8                     
  4537                           ;dc_motor.c: 262:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4538   001BF8  0E05               	movlw	5
  4539   001BFA  6E40               	movwf	(??_returnHome+1)^0,c
  4540   001BFC  0E0F               	movlw	15
  4541   001BFE  6E3F               	movwf	??_returnHome^0,c
  4542   001C00  0EF1               	movlw	241
  4543   001C02                     u4867:
  4544   001C02  2EE8               	decfsz	wreg,f,c
  4545   001C04  D7FE               	bra	u4867
  4546   001C06  2E3F               	decfsz	??_returnHome^0,f,c
  4547   001C08  D7FC               	bra	u4867
  4548   001C0A  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4549   001C0C  D7FA               	bra	u4867
  4550   001C0E  0000               	nop	
  4551   001C10                     
  4552                           ;dc_motor.c: 263:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4553   001C10  C030  F022         	movff	returnHome@mL,turnRight@mL
  4554   001C14  C031  F023         	movff	returnHome@mL+1,turnRight@mL+1
  4555   001C18  C032  F024         	movff	returnHome@mR,turnRight@mR
  4556   001C1C  C033  F025         	movff	returnHome@mR+1,turnRight@mR+1
  4557   001C20  C03C  F026         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4558   001C24  C03D  F027         	movff	returnHome@turnDuration,turnRight@turnDuration
  4559   001C28  C03E  F028         	movff	returnHome@turnRamp,turnRight@turnRamp
  4560   001C2C  ECF2  F020         	call	_turnRight	;wreg free
  4561                           
  4562                           ;dc_motor.c: 264:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4563   001C30  0E05               	movlw	5
  4564   001C32  6E40               	movwf	(??_returnHome+1)^0,c
  4565   001C34  0E0F               	movlw	15
  4566   001C36  6E3F               	movwf	??_returnHome^0,c
  4567   001C38  0EF1               	movlw	241
  4568   001C3A                     u4877:
  4569   001C3A  2EE8               	decfsz	wreg,f,c
  4570   001C3C  D7FE               	bra	u4877
  4571   001C3E  2E3F               	decfsz	??_returnHome^0,f,c
  4572   001C40  D7FC               	bra	u4877
  4573   001C42  2E40               	decfsz	(??_returnHome+1)^0,f,c
  4574   001C44  D7FA               	bra	u4877
  4575   001C46  0000               	nop	
  4576   001C48                     
  4577                           ;dc_motor.c: 265:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4578   001C48  C030  F022         	movff	returnHome@mL,turnRight@mL
  4579   001C4C  C031  F023         	movff	returnHome@mL+1,turnRight@mL+1
  4580   001C50  C032  F024         	movff	returnHome@mR,turnRight@mR
  4581   001C54  C033  F025         	movff	returnHome@mR+1,turnRight@mR+1
  4582   001C58  C03C  F026         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4583   001C5C  C03D  F027         	movff	returnHome@turnDuration,turnRight@turnDuration
  4584   001C60  C03E  F028         	movff	returnHome@turnRamp,turnRight@turnRamp
  4585   001C64  ECF2  F020         	call	_turnRight	;wreg free
  4586   001C68  EFC4  F00C         	goto	l3564
  4587   001C6C                     l581:
  4588   001C6C                     l575:
  4589                           
  4590                           ;dc_motor.c: 269:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4591   001C6C  C030  F022         	movff	returnHome@mL,fullSpeedAhead@mL
  4592   001C70  C031  F023         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4593   001C74  C032  F024         	movff	returnHome@mR,fullSpeedAhead@mR
  4594   001C78  C033  F025         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4595   001C7C  C039  F026         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4596   001C80  C03B  F027         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4597   001C84  EC86  F024         	call	_fullSpeedAhead	;wreg free
  4598   001C88                     
  4599                           ;dc_motor.c: 270:         resetTimer();
  4600   001C88  EC28  F029         	call	_resetTimer	;wreg free
  4601   001C8C                     l3616:
  4602   001C8C  5043               	movf	returnHome@i^0,w,c
  4603   001C8E  0D02               	mullw	2
  4604   001C90  CFF3 F03F          	movff	prodl,??_returnHome
  4605   001C94  CFF4 F040          	movff	prodh,??_returnHome+1
  4606   001C98  503F               	movf	??_returnHome^0,w,c
  4607   001C9A  2436               	addwf	returnHome@straightTime^0,w,c
  4608   001C9C  6ED9               	movwf	fsr2l,c
  4609   001C9E  5040               	movf	(??_returnHome+1)^0,w,c
  4610   001CA0  2037               	addwfc	(returnHome@straightTime+1)^0,w,c
  4611   001CA2  6EDA               	movwf	fsr2h,c
  4612   001CA4  EC26  F028         	call	_get16bitTMR0val	;wreg free
  4613   001CA8  50DE               	movf	postinc2,w,c
  4614   001CAA  5C0F               	subwf	?_get16bitTMR0val^0,w,c
  4615   001CAC  50DE               	movf	postinc2,w,c
  4616   001CAE  5810               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4617   001CB0  A0D8               	btfss	status,0,c
  4618   001CB2  EF5D  F00E         	goto	u2531
  4619   001CB6  EF5F  F00E         	goto	u2530
  4620   001CBA                     u2531:
  4621   001CBA  EF46  F00E         	goto	l3616
  4622   001CBE                     u2530:
  4623   001CBE                     
  4624                           ;dc_motor.c: 272:         stop(mL, mR, straightRamp);
  4625   001CBE  C030  F022         	movff	returnHome@mL,stop@mL
  4626   001CC2  C031  F023         	movff	returnHome@mL+1,stop@mL+1
  4627   001CC6  C032  F024         	movff	returnHome@mR,stop@mR
  4628   001CCA  C033  F025         	movff	returnHome@mR+1,stop@mR+1
  4629   001CCE  C03B  F026         	movff	returnHome@straightRamp,stop@straightRamp
  4630   001CD2  EC02  F024         	call	_stop	;wreg free
  4631   001CD6                     l3620:
  4632                           
  4633                           ;dc_motor.c: 205:     while (i>0) {
  4634   001CD6  5043               	movf	returnHome@i^0,w,c
  4635   001CD8  A4D8               	btfss	status,2,c
  4636   001CDA  EF71  F00E         	goto	u2541
  4637   001CDE  EF73  F00E         	goto	u2540
  4638   001CE2                     u2541:
  4639   001CE2  EFBF  F00B         	goto	l3534
  4640   001CE6                     u2540:
  4641   001CE6  0012               	return		;funcret
  4642   001CE8                     __end_of_returnHome:
  4643                           	callstack 0
  4644                           
  4645 ;; *************** function _lostReturnHome *****************
  4646 ;; Defined at:
  4647 ;;		line 277 in file "dc_motor.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  mL              2   47[COMRAM] PTR struct DC_motor
  4650 ;;		 -> main@motorL(10), 
  4651 ;;  mR              2   49[COMRAM] PTR struct DC_motor
  4652 ;;		 -> main@motorR(10), 
  4653 ;;  moveSequence    2   51[COMRAM] PTR unsigned char 
  4654 ;;		 -> main@moveSequence(40), 
  4655 ;;  straightTime    2   53[COMRAM] PTR unsigned int 
  4656 ;;		 -> main@straightTime(82), 
  4657 ;;  curMove         1   55[COMRAM] unsigned char 
  4658 ;;  straightSpee    1   56[COMRAM] unsigned char 
  4659 ;;  reverseDurat    1   57[COMRAM] unsigned char 
  4660 ;;  straightRamp    1   58[COMRAM] unsigned char 
  4661 ;;  turnSpeed       1   59[COMRAM] unsigned char 
  4662 ;;  turnDuration    1   60[COMRAM] unsigned char 
  4663 ;;  turnRamp        1   61[COMRAM] unsigned char 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  i               1   66[COMRAM] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4675 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;Total ram usage:       20 bytes
  4680 ;; Hardware stack levels used: 1
  4681 ;; Hardware stack levels required when called: 8
  4682 ;; This function calls:
  4683 ;;		_fullSpeedAhead
  4684 ;;		_get16bitTMR0val
  4685 ;;		_resetTimer
  4686 ;;		_reverseOneSquare
  4687 ;;		_stop
  4688 ;;		_turnLeft
  4689 ;;		_turnRight
  4690 ;; This function is called by:
  4691 ;;		_main
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text5
  4696   001CE8                     __ptext5:
  4697                           	callstack 0
  4698   001CE8                     _lostReturnHome:
  4699                           	callstack 22
  4700   001CE8                     
  4701                           ;dc_motor.c: 277: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 278: {;dc_motor.c: 279:     LATDbits.LATD7 = LATHbits.LA
      +                          TH3 = 1;
  4702   001CE8  8680               	bsf	128,3,c	;volatile
  4703   001CEA  8E7C               	bsf	124,7,c	;volatile
  4704   001CEC                     
  4705                           ;dc_motor.c: 280:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4706   001CEC  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  4707   001CF0  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4708   001CF4  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  4709   001CF8  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4710   001CFC  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4711   001D00  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4712   001D04  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4713   001D08  ECDC  F021         	call	_turnLeft	;wreg free
  4714   001D0C                     
  4715                           ;dc_motor.c: 281:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4716   001D0C  0E05               	movlw	5
  4717   001D0E  6E40               	movwf	(??_lostReturnHome+1)^0,c
  4718   001D10  0E0F               	movlw	15
  4719   001D12  6E3F               	movwf	??_lostReturnHome^0,c
  4720   001D14  0EF1               	movlw	241
  4721   001D16                     u4887:
  4722   001D16  2EE8               	decfsz	wreg,f,c
  4723   001D18  D7FE               	bra	u4887
  4724   001D1A  2E3F               	decfsz	??_lostReturnHome^0,f,c
  4725   001D1C  D7FC               	bra	u4887
  4726   001D1E  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  4727   001D20  D7FA               	bra	u4887
  4728   001D22  0000               	nop	
  4729   001D24                     
  4730                           ;dc_motor.c: 282:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4731   001D24  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  4732   001D28  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4733   001D2C  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  4734   001D30  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4735   001D34  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4736   001D38  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4737   001D3C  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4738   001D40  ECDC  F021         	call	_turnLeft	;wreg free
  4739                           
  4740                           ;dc_motor.c: 283:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4741   001D44  0E05               	movlw	5
  4742   001D46  6E40               	movwf	(??_lostReturnHome+1)^0,c
  4743   001D48  0E0F               	movlw	15
  4744   001D4A  6E3F               	movwf	??_lostReturnHome^0,c
  4745   001D4C  0EF1               	movlw	241
  4746   001D4E                     u4897:
  4747   001D4E  2EE8               	decfsz	wreg,f,c
  4748   001D50  D7FE               	bra	u4897
  4749   001D52  2E3F               	decfsz	??_lostReturnHome^0,f,c
  4750   001D54  D7FC               	bra	u4897
  4751   001D56  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  4752   001D58  D7FA               	bra	u4897
  4753   001D5A  0000               	nop	
  4754   001D5C                     
  4755                           ;dc_motor.c: 284:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4756   001D5C  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  4757   001D60  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4758   001D64  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  4759   001D68  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4760   001D6C  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4761   001D70  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4762   001D74  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4763   001D78  ECDC  F021         	call	_turnLeft	;wreg free
  4764   001D7C                     
  4765                           ;dc_motor.c: 285:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4766   001D7C  0E05               	movlw	5
  4767   001D7E  6E40               	movwf	(??_lostReturnHome+1)^0,c
  4768   001D80  0E0F               	movlw	15
  4769   001D82  6E3F               	movwf	??_lostReturnHome^0,c
  4770   001D84  0EF1               	movlw	241
  4771   001D86                     u4907:
  4772   001D86  2EE8               	decfsz	wreg,f,c
  4773   001D88  D7FE               	bra	u4907
  4774   001D8A  2E3F               	decfsz	??_lostReturnHome^0,f,c
  4775   001D8C  D7FC               	bra	u4907
  4776   001D8E  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  4777   001D90  D7FA               	bra	u4907
  4778   001D92  0000               	nop	
  4779                           
  4780                           ;dc_motor.c: 286:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4781   001D94  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  4782   001D98  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4783   001D9C  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  4784   001DA0  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4785   001DA4  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4786   001DA8  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4787   001DAC  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4788   001DB0  ECDC  F021         	call	_turnLeft	;wreg free
  4789   001DB4                     
  4790                           ;dc_motor.c: 287:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4791   001DB4  0E05               	movlw	5
  4792   001DB6  6E40               	movwf	(??_lostReturnHome+1)^0,c
  4793   001DB8  0E0F               	movlw	15
  4794   001DBA  6E3F               	movwf	??_lostReturnHome^0,c
  4795   001DBC  0EF1               	movlw	241
  4796   001DBE                     u4917:
  4797   001DBE  2EE8               	decfsz	wreg,f,c
  4798   001DC0  D7FE               	bra	u4917
  4799   001DC2  2E3F               	decfsz	??_lostReturnHome^0,f,c
  4800   001DC4  D7FC               	bra	u4917
  4801   001DC6  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  4802   001DC8  D7FA               	bra	u4917
  4803   001DCA  0000               	nop	
  4804   001DCC                     
  4805                           ;dc_motor.c: 288:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4806   001DCC  C030  F022         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4807   001DD0  C031  F023         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4808   001DD4  C032  F024         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4809   001DD8  C033  F025         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4810   001DDC  C039  F026         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4811   001DE0  C03B  F027         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4812   001DE4  EC86  F024         	call	_fullSpeedAhead	;wreg free
  4813   001DE8                     
  4814                           ;dc_motor.c: 289:     resetTimer();
  4815   001DE8  EC28  F029         	call	_resetTimer	;wreg free
  4816   001DEC                     
  4817                           ;dc_motor.c: 290:     lost = 0;
  4818   001DEC  0E00               	movlw	0
  4819   001DEE  6E45               	movwf	_lost^0,c
  4820   001DF0                     l4208:
  4821   001DF0  5045               	movf	_lost^0,w,c
  4822   001DF2  B4D8               	btfsc	status,2,c
  4823   001DF4  EFFE  F00E         	goto	u3221
  4824   001DF8  EF00  F00F         	goto	u3220
  4825   001DFC                     u3221:
  4826   001DFC  EFF8  F00E         	goto	l4208
  4827   001E00                     u3220:
  4828   001E00                     
  4829                           ;dc_motor.c: 292:     stop(mL, mR, straightRamp);
  4830   001E00  C030  F022         	movff	lostReturnHome@mL,stop@mL
  4831   001E04  C031  F023         	movff	lostReturnHome@mL+1,stop@mL+1
  4832   001E08  C032  F024         	movff	lostReturnHome@mR,stop@mR
  4833   001E0C  C033  F025         	movff	lostReturnHome@mR+1,stop@mR+1
  4834   001E10  C03B  F026         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4835   001E14  EC02  F024         	call	_stop	;wreg free
  4836   001E18                     
  4837                           ;dc_motor.c: 294:     char i=curMove;
  4838   001E18  C038  F043         	movff	lostReturnHome@curMove,lostReturnHome@i
  4839                           
  4840                           ;dc_motor.c: 295:     while (i>0) {
  4841   001E1C  EFBC  F011         	goto	l4300
  4842   001E20                     l4214:
  4843                           
  4844                           ;dc_motor.c: 296:         i--;
  4845   001E20  0643               	decf	lostReturnHome@i^0,f,c
  4846   001E22                     
  4847                           ;dc_motor.c: 298:         if (moveSequence[i] == 1) {
  4848   001E22  5043               	movf	lostReturnHome@i^0,w,c
  4849   001E24  2434               	addwf	lostReturnHome@moveSequence^0,w,c
  4850   001E26  6ED9               	movwf	fsr2l,c
  4851   001E28  0E00               	movlw	0
  4852   001E2A  2035               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4853   001E2C  6EDA               	movwf	fsr2h,c
  4854   001E2E  04DE               	decf	postinc2,w,c
  4855   001E30  A4D8               	btfss	status,2,c
  4856   001E32  EF1D  F00F         	goto	u3231
  4857   001E36  EF1F  F00F         	goto	u3230
  4858   001E3A                     u3231:
  4859   001E3A  EF59  F00F         	goto	l4224
  4860   001E3E                     u3230:
  4861   001E3E                     
  4862                           ;dc_motor.c: 299:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4863   001E3E  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  4864   001E42  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4865   001E46  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  4866   001E4A  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4867   001E4E  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4868   001E52  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4869   001E56  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4870   001E5A  ECDC  F021         	call	_turnLeft	;wreg free
  4871   001E5E                     
  4872                           ;dc_motor.c: 300:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4873   001E5E  0E05               	movlw	5
  4874   001E60  6E40               	movwf	(??_lostReturnHome+1)^0,c
  4875   001E62  0E0F               	movlw	15
  4876   001E64  6E3F               	movwf	??_lostReturnHome^0,c
  4877   001E66  0EF1               	movlw	241
  4878   001E68                     u4927:
  4879   001E68  2EE8               	decfsz	wreg,f,c
  4880   001E6A  D7FE               	bra	u4927
  4881   001E6C  2E3F               	decfsz	??_lostReturnHome^0,f,c
  4882   001E6E  D7FC               	bra	u4927
  4883   001E70  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  4884   001E72  D7FA               	bra	u4927
  4885   001E74  0000               	nop	
  4886   001E76                     
  4887                           ;dc_motor.c: 301:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4888   001E76  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  4889   001E7A  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4890   001E7E  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  4891   001E82  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4892   001E86  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4893   001E8A  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4894   001E8E  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4895   001E92  ECDC  F021         	call	_turnLeft	;wreg free
  4896                           
  4897                           ;dc_motor.c: 302:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4898   001E96  0E05               	movlw	5
  4899   001E98  6E40               	movwf	(??_lostReturnHome+1)^0,c
  4900   001E9A  0E0F               	movlw	15
  4901   001E9C  6E3F               	movwf	??_lostReturnHome^0,c
  4902   001E9E  0EF1               	movlw	241
  4903   001EA0                     u4937:
  4904   001EA0  2EE8               	decfsz	wreg,f,c
  4905   001EA2  D7FE               	bra	u4937
  4906   001EA4  2E3F               	decfsz	??_lostReturnHome^0,f,c
  4907   001EA6  D7FC               	bra	u4937
  4908   001EA8  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  4909   001EAA  D7FA               	bra	u4937
  4910   001EAC  0000               	nop	
  4911                           
  4912                           ;dc_motor.c: 303:         }
  4913   001EAE  EF87  F011         	goto	l600
  4914   001EB2                     l4224:
  4915   001EB2  5043               	movf	lostReturnHome@i^0,w,c
  4916   001EB4  2434               	addwf	lostReturnHome@moveSequence^0,w,c
  4917   001EB6  6ED9               	movwf	fsr2l,c
  4918   001EB8  0E00               	movlw	0
  4919   001EBA  2035               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4920   001EBC  6EDA               	movwf	fsr2h,c
  4921   001EBE  0E02               	movlw	2
  4922   001EC0  18DE               	xorwf	postinc2,w,c
  4923   001EC2  A4D8               	btfss	status,2,c
  4924   001EC4  EF66  F00F         	goto	u3241
  4925   001EC8  EF68  F00F         	goto	u3240
  4926   001ECC                     u3241:
  4927   001ECC  EFA2  F00F         	goto	l4232
  4928   001ED0                     u3240:
  4929   001ED0                     
  4930                           ;dc_motor.c: 306:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4931   001ED0  C030  F022         	movff	lostReturnHome@mL,turnRight@mL
  4932   001ED4  C031  F023         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4933   001ED8  C032  F024         	movff	lostReturnHome@mR,turnRight@mR
  4934   001EDC  C033  F025         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4935   001EE0  C03C  F026         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4936   001EE4  C03D  F027         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4937   001EE8  C03E  F028         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4938   001EEC  ECF2  F020         	call	_turnRight	;wreg free
  4939   001EF0                     
  4940                           ;dc_motor.c: 307:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4941   001EF0  0E05               	movlw	5
  4942   001EF2  6E40               	movwf	(??_lostReturnHome+1)^0,c
  4943   001EF4  0E0F               	movlw	15
  4944   001EF6  6E3F               	movwf	??_lostReturnHome^0,c
  4945   001EF8  0EF1               	movlw	241
  4946   001EFA                     u4947:
  4947   001EFA  2EE8               	decfsz	wreg,f,c
  4948   001EFC  D7FE               	bra	u4947
  4949   001EFE  2E3F               	decfsz	??_lostReturnHome^0,f,c
  4950   001F00  D7FC               	bra	u4947
  4951   001F02  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  4952   001F04  D7FA               	bra	u4947
  4953   001F06  0000               	nop	
  4954   001F08                     
  4955                           ;dc_motor.c: 308:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4956   001F08  C030  F022         	movff	lostReturnHome@mL,turnRight@mL
  4957   001F0C  C031  F023         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4958   001F10  C032  F024         	movff	lostReturnHome@mR,turnRight@mR
  4959   001F14  C033  F025         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4960   001F18  C03C  F026         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4961   001F1C  C03D  F027         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4962   001F20  C03E  F028         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4963   001F24  ECF2  F020         	call	_turnRight	;wreg free
  4964                           
  4965                           ;dc_motor.c: 309:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4966   001F28  0E05               	movlw	5
  4967   001F2A  6E40               	movwf	(??_lostReturnHome+1)^0,c
  4968   001F2C  0E0F               	movlw	15
  4969   001F2E  6E3F               	movwf	??_lostReturnHome^0,c
  4970   001F30  0EF1               	movlw	241
  4971   001F32                     u4957:
  4972   001F32  2EE8               	decfsz	wreg,f,c
  4973   001F34  D7FE               	bra	u4957
  4974   001F36  2E3F               	decfsz	??_lostReturnHome^0,f,c
  4975   001F38  D7FC               	bra	u4957
  4976   001F3A  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  4977   001F3C  D7FA               	bra	u4957
  4978   001F3E  0000               	nop	
  4979                           
  4980                           ;dc_motor.c: 310:         }
  4981   001F40  EF87  F011         	goto	l600
  4982   001F44                     l4232:
  4983   001F44  5043               	movf	lostReturnHome@i^0,w,c
  4984   001F46  2434               	addwf	lostReturnHome@moveSequence^0,w,c
  4985   001F48  6ED9               	movwf	fsr2l,c
  4986   001F4A  0E00               	movlw	0
  4987   001F4C  2035               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4988   001F4E  6EDA               	movwf	fsr2h,c
  4989   001F50  0E03               	movlw	3
  4990   001F52  18DE               	xorwf	postinc2,w,c
  4991   001F54  A4D8               	btfss	status,2,c
  4992   001F56  EFAF  F00F         	goto	u3251
  4993   001F5A  EFB1  F00F         	goto	u3250
  4994   001F5E                     u3251:
  4995   001F5E  EF23  F010         	goto	l4246
  4996   001F62                     u3250:
  4997   001F62                     
  4998                           ;dc_motor.c: 313:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4999   001F62  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  5000   001F66  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5001   001F6A  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  5002   001F6E  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5003   001F72  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5004   001F76  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5005   001F7A  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5006   001F7E  ECDC  F021         	call	_turnLeft	;wreg free
  5007   001F82                     
  5008                           ;dc_motor.c: 314:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5009   001F82  0E05               	movlw	5
  5010   001F84  6E40               	movwf	(??_lostReturnHome+1)^0,c
  5011   001F86  0E0F               	movlw	15
  5012   001F88  6E3F               	movwf	??_lostReturnHome^0,c
  5013   001F8A  0EF1               	movlw	241
  5014   001F8C                     u4967:
  5015   001F8C  2EE8               	decfsz	wreg,f,c
  5016   001F8E  D7FE               	bra	u4967
  5017   001F90  2E3F               	decfsz	??_lostReturnHome^0,f,c
  5018   001F92  D7FC               	bra	u4967
  5019   001F94  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  5020   001F96  D7FA               	bra	u4967
  5021   001F98  0000               	nop	
  5022   001F9A                     
  5023                           ;dc_motor.c: 315:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5024   001F9A  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  5025   001F9E  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5026   001FA2  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  5027   001FA6  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5028   001FAA  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5029   001FAE  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5030   001FB2  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5031   001FB6  ECDC  F021         	call	_turnLeft	;wreg free
  5032                           
  5033                           ;dc_motor.c: 316:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5034   001FBA  0E05               	movlw	5
  5035   001FBC  6E40               	movwf	(??_lostReturnHome+1)^0,c
  5036   001FBE  0E0F               	movlw	15
  5037   001FC0  6E3F               	movwf	??_lostReturnHome^0,c
  5038   001FC2  0EF1               	movlw	241
  5039   001FC4                     u4977:
  5040   001FC4  2EE8               	decfsz	wreg,f,c
  5041   001FC6  D7FE               	bra	u4977
  5042   001FC8  2E3F               	decfsz	??_lostReturnHome^0,f,c
  5043   001FCA  D7FC               	bra	u4977
  5044   001FCC  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  5045   001FCE  D7FA               	bra	u4977
  5046   001FD0  0000               	nop	
  5047   001FD2                     
  5048                           ;dc_motor.c: 317:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5049   001FD2  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  5050   001FD6  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5051   001FDA  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  5052   001FDE  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5053   001FE2  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5054   001FE6  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5055   001FEA  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5056   001FEE  ECDC  F021         	call	_turnLeft	;wreg free
  5057   001FF2                     
  5058                           ;dc_motor.c: 318:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5059   001FF2  0E05               	movlw	5
  5060   001FF4  6E40               	movwf	(??_lostReturnHome+1)^0,c
  5061   001FF6  0E0F               	movlw	15
  5062   001FF8  6E3F               	movwf	??_lostReturnHome^0,c
  5063   001FFA  0EF1               	movlw	241
  5064   001FFC                     u4987:
  5065   001FFC  2EE8               	decfsz	wreg,f,c
  5066   001FFE  D7FE               	bra	u4987
  5067   002000  2E3F               	decfsz	??_lostReturnHome^0,f,c
  5068   002002  D7FC               	bra	u4987
  5069   002004  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  5070   002006  D7FA               	bra	u4987
  5071   002008  0000               	nop	
  5072                           
  5073                           ;dc_motor.c: 319:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5074   00200A  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  5075   00200E  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5076   002012  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  5077   002016  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5078   00201A  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5079   00201E  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5080   002022  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5081   002026  ECDC  F021         	call	_turnLeft	;wreg free
  5082   00202A                     l4244:
  5083                           
  5084                           ;dc_motor.c: 320:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5085   00202A  0E05               	movlw	5
  5086   00202C  6E40               	movwf	(??_lostReturnHome+1)^0,c
  5087   00202E  0E0F               	movlw	15
  5088   002030  6E3F               	movwf	??_lostReturnHome^0,c
  5089   002032  0EF1               	movlw	241
  5090   002034                     u4997:
  5091   002034  2EE8               	decfsz	wreg,f,c
  5092   002036  D7FE               	bra	u4997
  5093   002038  2E3F               	decfsz	??_lostReturnHome^0,f,c
  5094   00203A  D7FC               	bra	u4997
  5095   00203C  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  5096   00203E  D7FA               	bra	u4997
  5097   002040  0000               	nop	
  5098                           
  5099                           ;dc_motor.c: 321:         }
  5100   002042  EF87  F011         	goto	l600
  5101   002046                     l4246:
  5102   002046  5043               	movf	lostReturnHome@i^0,w,c
  5103   002048  2434               	addwf	lostReturnHome@moveSequence^0,w,c
  5104   00204A  6ED9               	movwf	fsr2l,c
  5105   00204C  0E00               	movlw	0
  5106   00204E  2035               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5107   002050  6EDA               	movwf	fsr2h,c
  5108   002052  0E04               	movlw	4
  5109   002054  18DE               	xorwf	postinc2,w,c
  5110   002056  A4D8               	btfss	status,2,c
  5111   002058  EF30  F010         	goto	u3261
  5112   00205C  EF32  F010         	goto	u3260
  5113   002060                     u3261:
  5114   002060  EF7C  F010         	goto	l4258
  5115   002064                     u3260:
  5116   002064                     
  5117                           ;dc_motor.c: 324:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5118   002064  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  5119   002068  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5120   00206C  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  5121   002070  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5122   002074  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5123   002078  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5124   00207C  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5125   002080  ECDC  F021         	call	_turnLeft	;wreg free
  5126   002084                     
  5127                           ;dc_motor.c: 325:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5128   002084  0E05               	movlw	5
  5129   002086  6E40               	movwf	(??_lostReturnHome+1)^0,c
  5130   002088  0E0F               	movlw	15
  5131   00208A  6E3F               	movwf	??_lostReturnHome^0,c
  5132   00208C  0EF1               	movlw	241
  5133   00208E                     u5007:
  5134   00208E  2EE8               	decfsz	wreg,f,c
  5135   002090  D7FE               	bra	u5007
  5136   002092  2E3F               	decfsz	??_lostReturnHome^0,f,c
  5137   002094  D7FC               	bra	u5007
  5138   002096  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  5139   002098  D7FA               	bra	u5007
  5140   00209A  0000               	nop	
  5141   00209C                     
  5142                           ;dc_motor.c: 326:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5143   00209C  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  5144   0020A0  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5145   0020A4  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  5146   0020A8  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5147   0020AC  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5148   0020B0  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5149   0020B4  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5150   0020B8  ECDC  F021         	call	_turnLeft	;wreg free
  5151                           
  5152                           ;dc_motor.c: 327:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5153   0020BC  0E05               	movlw	5
  5154   0020BE  6E40               	movwf	(??_lostReturnHome+1)^0,c
  5155   0020C0  0E0F               	movlw	15
  5156   0020C2  6E3F               	movwf	??_lostReturnHome^0,c
  5157   0020C4  0EF1               	movlw	241
  5158   0020C6                     u5017:
  5159   0020C6  2EE8               	decfsz	wreg,f,c
  5160   0020C8  D7FE               	bra	u5017
  5161   0020CA  2E3F               	decfsz	??_lostReturnHome^0,f,c
  5162   0020CC  D7FC               	bra	u5017
  5163   0020CE  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  5164   0020D0  D7FA               	bra	u5017
  5165   0020D2  0000               	nop	
  5166   0020D4                     
  5167                           ;dc_motor.c: 328:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5168   0020D4  C030  F022         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5169   0020D8  C031  F023         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5170   0020DC  C032  F024         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5171   0020E0  C033  F025         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5172   0020E4  C039  F026         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5173   0020E8  C03A  F027         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5174   0020EC  C03B  F028         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5175   0020F0  ECFF  F01F         	call	_reverseOneSquare	;wreg free
  5176   0020F4  EF15  F010         	goto	l4244
  5177   0020F8                     l4258:
  5178   0020F8  5043               	movf	lostReturnHome@i^0,w,c
  5179   0020FA  2434               	addwf	lostReturnHome@moveSequence^0,w,c
  5180   0020FC  6ED9               	movwf	fsr2l,c
  5181   0020FE  0E00               	movlw	0
  5182   002100  2035               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5183   002102  6EDA               	movwf	fsr2h,c
  5184   002104  0E05               	movlw	5
  5185   002106  18DE               	xorwf	postinc2,w,c
  5186   002108  A4D8               	btfss	status,2,c
  5187   00210A  EF89  F010         	goto	u3271
  5188   00210E  EF8B  F010         	goto	u3270
  5189   002112                     u3271:
  5190   002112  EFD5  F010         	goto	l4270
  5191   002116                     u3270:
  5192   002116                     
  5193                           ;dc_motor.c: 333:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5194   002116  C030  F022         	movff	lostReturnHome@mL,turnRight@mL
  5195   00211A  C031  F023         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5196   00211E  C032  F024         	movff	lostReturnHome@mR,turnRight@mR
  5197   002122  C033  F025         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5198   002126  C03C  F026         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5199   00212A  C03D  F027         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5200   00212E  C03E  F028         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5201   002132  ECF2  F020         	call	_turnRight	;wreg free
  5202   002136                     
  5203                           ;dc_motor.c: 334:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5204   002136  0E05               	movlw	5
  5205   002138  6E40               	movwf	(??_lostReturnHome+1)^0,c
  5206   00213A  0E0F               	movlw	15
  5207   00213C  6E3F               	movwf	??_lostReturnHome^0,c
  5208   00213E  0EF1               	movlw	241
  5209   002140                     u5027:
  5210   002140  2EE8               	decfsz	wreg,f,c
  5211   002142  D7FE               	bra	u5027
  5212   002144  2E3F               	decfsz	??_lostReturnHome^0,f,c
  5213   002146  D7FC               	bra	u5027
  5214   002148  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  5215   00214A  D7FA               	bra	u5027
  5216   00214C  0000               	nop	
  5217   00214E                     
  5218                           ;dc_motor.c: 335:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5219   00214E  C030  F022         	movff	lostReturnHome@mL,turnRight@mL
  5220   002152  C031  F023         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5221   002156  C032  F024         	movff	lostReturnHome@mR,turnRight@mR
  5222   00215A  C033  F025         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5223   00215E  C03C  F026         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5224   002162  C03D  F027         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5225   002166  C03E  F028         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5226   00216A  ECF2  F020         	call	_turnRight	;wreg free
  5227                           
  5228                           ;dc_motor.c: 336:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5229   00216E  0E05               	movlw	5
  5230   002170  6E40               	movwf	(??_lostReturnHome+1)^0,c
  5231   002172  0E0F               	movlw	15
  5232   002174  6E3F               	movwf	??_lostReturnHome^0,c
  5233   002176  0EF1               	movlw	241
  5234   002178                     u5037:
  5235   002178  2EE8               	decfsz	wreg,f,c
  5236   00217A  D7FE               	bra	u5037
  5237   00217C  2E3F               	decfsz	??_lostReturnHome^0,f,c
  5238   00217E  D7FC               	bra	u5037
  5239   002180  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  5240   002182  D7FA               	bra	u5037
  5241   002184  0000               	nop	
  5242   002186                     
  5243                           ;dc_motor.c: 337:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5244   002186  C030  F022         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5245   00218A  C031  F023         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5246   00218E  C032  F024         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5247   002192  C033  F025         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5248   002196  C039  F026         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5249   00219A  C03A  F027         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5250   00219E  C03B  F028         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5251   0021A2  ECFF  F01F         	call	_reverseOneSquare	;wreg free
  5252   0021A6  EF15  F010         	goto	l4244
  5253   0021AA                     l4270:
  5254   0021AA  5043               	movf	lostReturnHome@i^0,w,c
  5255   0021AC  2434               	addwf	lostReturnHome@moveSequence^0,w,c
  5256   0021AE  6ED9               	movwf	fsr2l,c
  5257   0021B0  0E00               	movlw	0
  5258   0021B2  2035               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5259   0021B4  6EDA               	movwf	fsr2h,c
  5260   0021B6  0E06               	movlw	6
  5261   0021B8  18DE               	xorwf	postinc2,w,c
  5262   0021BA  A4D8               	btfss	status,2,c
  5263   0021BC  EFE2  F010         	goto	u3281
  5264   0021C0  EFE4  F010         	goto	u3280
  5265   0021C4                     u3281:
  5266   0021C4  EF2E  F011         	goto	l4282
  5267   0021C8                     u3280:
  5268   0021C8                     
  5269                           ;dc_motor.c: 342:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5270   0021C8  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  5271   0021CC  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5272   0021D0  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  5273   0021D4  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5274   0021D8  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5275   0021DC  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5276   0021E0  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5277   0021E4  ECDC  F021         	call	_turnLeft	;wreg free
  5278   0021E8                     
  5279                           ;dc_motor.c: 343:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5280   0021E8  0E05               	movlw	5
  5281   0021EA  6E40               	movwf	(??_lostReturnHome+1)^0,c
  5282   0021EC  0E0F               	movlw	15
  5283   0021EE  6E3F               	movwf	??_lostReturnHome^0,c
  5284   0021F0  0EF1               	movlw	241
  5285   0021F2                     u5047:
  5286   0021F2  2EE8               	decfsz	wreg,f,c
  5287   0021F4  D7FE               	bra	u5047
  5288   0021F6  2E3F               	decfsz	??_lostReturnHome^0,f,c
  5289   0021F8  D7FC               	bra	u5047
  5290   0021FA  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  5291   0021FC  D7FA               	bra	u5047
  5292   0021FE  0000               	nop	
  5293   002200                     
  5294                           ;dc_motor.c: 344:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5295   002200  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  5296   002204  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5297   002208  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  5298   00220C  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5299   002210  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5300   002214  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5301   002218  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5302   00221C  ECDC  F021         	call	_turnLeft	;wreg free
  5303                           
  5304                           ;dc_motor.c: 345:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5305   002220  0E05               	movlw	5
  5306   002222  6E40               	movwf	(??_lostReturnHome+1)^0,c
  5307   002224  0E0F               	movlw	15
  5308   002226  6E3F               	movwf	??_lostReturnHome^0,c
  5309   002228  0EF1               	movlw	241
  5310   00222A                     u5057:
  5311   00222A  2EE8               	decfsz	wreg,f,c
  5312   00222C  D7FE               	bra	u5057
  5313   00222E  2E3F               	decfsz	??_lostReturnHome^0,f,c
  5314   002230  D7FC               	bra	u5057
  5315   002232  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  5316   002234  D7FA               	bra	u5057
  5317   002236  0000               	nop	
  5318   002238                     
  5319                           ;dc_motor.c: 346:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5320   002238  C030  F022         	movff	lostReturnHome@mL,turnLeft@mL
  5321   00223C  C031  F023         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5322   002240  C032  F024         	movff	lostReturnHome@mR,turnLeft@mR
  5323   002244  C033  F025         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5324   002248  C03C  F026         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5325   00224C  C03D  F027         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5326   002250  C03E  F028         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5327   002254  ECDC  F021         	call	_turnLeft	;wreg free
  5328   002258  EF15  F010         	goto	l4244
  5329   00225C                     l4282:
  5330   00225C  5043               	movf	lostReturnHome@i^0,w,c
  5331   00225E  2434               	addwf	lostReturnHome@moveSequence^0,w,c
  5332   002260  6ED9               	movwf	fsr2l,c
  5333   002262  0E00               	movlw	0
  5334   002264  2035               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5335   002266  6EDA               	movwf	fsr2h,c
  5336   002268  0E07               	movlw	7
  5337   00226A  18DE               	xorwf	postinc2,w,c
  5338   00226C  A4D8               	btfss	status,2,c
  5339   00226E  EF3B  F011         	goto	u3291
  5340   002272  EF3D  F011         	goto	u3290
  5341   002276                     u3291:
  5342   002276  EF87  F011         	goto	l606
  5343   00227A                     u3290:
  5344   00227A                     
  5345                           ;dc_motor.c: 351:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5346   00227A  C030  F022         	movff	lostReturnHome@mL,turnRight@mL
  5347   00227E  C031  F023         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5348   002282  C032  F024         	movff	lostReturnHome@mR,turnRight@mR
  5349   002286  C033  F025         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5350   00228A  C03C  F026         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5351   00228E  C03D  F027         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5352   002292  C03E  F028         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5353   002296  ECF2  F020         	call	_turnRight	;wreg free
  5354   00229A                     
  5355                           ;dc_motor.c: 352:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5356   00229A  0E05               	movlw	5
  5357   00229C  6E40               	movwf	(??_lostReturnHome+1)^0,c
  5358   00229E  0E0F               	movlw	15
  5359   0022A0  6E3F               	movwf	??_lostReturnHome^0,c
  5360   0022A2  0EF1               	movlw	241
  5361   0022A4                     u5067:
  5362   0022A4  2EE8               	decfsz	wreg,f,c
  5363   0022A6  D7FE               	bra	u5067
  5364   0022A8  2E3F               	decfsz	??_lostReturnHome^0,f,c
  5365   0022AA  D7FC               	bra	u5067
  5366   0022AC  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  5367   0022AE  D7FA               	bra	u5067
  5368   0022B0  0000               	nop	
  5369   0022B2                     
  5370                           ;dc_motor.c: 353:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5371   0022B2  C030  F022         	movff	lostReturnHome@mL,turnRight@mL
  5372   0022B6  C031  F023         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5373   0022BA  C032  F024         	movff	lostReturnHome@mR,turnRight@mR
  5374   0022BE  C033  F025         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5375   0022C2  C03C  F026         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5376   0022C6  C03D  F027         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5377   0022CA  C03E  F028         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5378   0022CE  ECF2  F020         	call	_turnRight	;wreg free
  5379                           
  5380                           ;dc_motor.c: 354:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5381   0022D2  0E05               	movlw	5
  5382   0022D4  6E40               	movwf	(??_lostReturnHome+1)^0,c
  5383   0022D6  0E0F               	movlw	15
  5384   0022D8  6E3F               	movwf	??_lostReturnHome^0,c
  5385   0022DA  0EF1               	movlw	241
  5386   0022DC                     u5077:
  5387   0022DC  2EE8               	decfsz	wreg,f,c
  5388   0022DE  D7FE               	bra	u5077
  5389   0022E0  2E3F               	decfsz	??_lostReturnHome^0,f,c
  5390   0022E2  D7FC               	bra	u5077
  5391   0022E4  2E40               	decfsz	(??_lostReturnHome+1)^0,f,c
  5392   0022E6  D7FA               	bra	u5077
  5393   0022E8  0000               	nop	
  5394   0022EA                     
  5395                           ;dc_motor.c: 355:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5396   0022EA  C030  F022         	movff	lostReturnHome@mL,turnRight@mL
  5397   0022EE  C031  F023         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5398   0022F2  C032  F024         	movff	lostReturnHome@mR,turnRight@mR
  5399   0022F6  C033  F025         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5400   0022FA  C03C  F026         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5401   0022FE  C03D  F027         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5402   002302  C03E  F028         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5403   002306  ECF2  F020         	call	_turnRight	;wreg free
  5404   00230A  EF15  F010         	goto	l4244
  5405   00230E                     l606:
  5406   00230E                     l600:
  5407                           
  5408                           ;dc_motor.c: 359:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  5409   00230E  C030  F022         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  5410   002312  C031  F023         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  5411   002316  C032  F024         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  5412   00231A  C033  F025         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  5413   00231E  C039  F026         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  5414   002322  C03B  F027         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  5415   002326  EC86  F024         	call	_fullSpeedAhead	;wreg free
  5416   00232A                     
  5417                           ;dc_motor.c: 360:         resetTimer();
  5418   00232A  EC28  F029         	call	_resetTimer	;wreg free
  5419   00232E                     l4296:
  5420   00232E  5043               	movf	lostReturnHome@i^0,w,c
  5421   002330  0D02               	mullw	2
  5422   002332  CFF3 F03F          	movff	prodl,??_lostReturnHome
  5423   002336  CFF4 F040          	movff	prodh,??_lostReturnHome+1
  5424   00233A  503F               	movf	??_lostReturnHome^0,w,c
  5425   00233C  2436               	addwf	lostReturnHome@straightTime^0,w,c
  5426   00233E  6ED9               	movwf	fsr2l,c
  5427   002340  5040               	movf	(??_lostReturnHome+1)^0,w,c
  5428   002342  2037               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  5429   002344  6EDA               	movwf	fsr2h,c
  5430   002346  EC26  F028         	call	_get16bitTMR0val	;wreg free
  5431   00234A  50DE               	movf	postinc2,w,c
  5432   00234C  5C0F               	subwf	?_get16bitTMR0val^0,w,c
  5433   00234E  50DE               	movf	postinc2,w,c
  5434   002350  5810               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  5435   002352  A0D8               	btfss	status,0,c
  5436   002354  EFAE  F011         	goto	u3301
  5437   002358  EFB0  F011         	goto	u3300
  5438   00235C                     u3301:
  5439   00235C  EF97  F011         	goto	l4296
  5440   002360                     u3300:
  5441   002360                     
  5442                           ;dc_motor.c: 362:         stop(mL, mR, straightRamp);
  5443   002360  C030  F022         	movff	lostReturnHome@mL,stop@mL
  5444   002364  C031  F023         	movff	lostReturnHome@mL+1,stop@mL+1
  5445   002368  C032  F024         	movff	lostReturnHome@mR,stop@mR
  5446   00236C  C033  F025         	movff	lostReturnHome@mR+1,stop@mR+1
  5447   002370  C03B  F026         	movff	lostReturnHome@straightRamp,stop@straightRamp
  5448   002374  EC02  F024         	call	_stop	;wreg free
  5449   002378                     l4300:
  5450                           
  5451                           ;dc_motor.c: 295:     while (i>0) {
  5452   002378  5043               	movf	lostReturnHome@i^0,w,c
  5453   00237A  A4D8               	btfss	status,2,c
  5454   00237C  EFC2  F011         	goto	u3311
  5455   002380  EFC4  F011         	goto	u3310
  5456   002384                     u3311:
  5457   002384  EF10  F00F         	goto	l4214
  5458   002388                     u3310:
  5459   002388  0012               	return		;funcret
  5460   00238A                     __end_of_lostReturnHome:
  5461                           	callstack 0
  5462                           
  5463 ;; *************** function _stop *****************
  5464 ;; Defined at:
  5465 ;;		line 367 in file "dc_motor.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5468 ;;		 -> main@motorL(10), 
  5469 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5470 ;;		 -> main@motorR(10), 
  5471 ;;  straightRamp    1   37[COMRAM] unsigned char 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  cur_power       2   43[COMRAM] int 
  5474 ;;  i               2   41[COMRAM] int 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      void 
  5477 ;; Registers used:
  5478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5484 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5485 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5486 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5487 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5488 ;;Total ram usage:       12 bytes
  5489 ;; Hardware stack levels used: 1
  5490 ;; Hardware stack levels required when called: 7
  5491 ;; This function calls:
  5492 ;;		_setMotorPWM
  5493 ;; This function is called by:
  5494 ;;		_main
  5495 ;;		_returnHome
  5496 ;;		_lostReturnHome
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text6
  5501   004804                     __ptext6:
  5502                           	callstack 0
  5503   004804                     _stop:
  5504                           	callstack 23
  5505   004804                     
  5506                           ;dc_motor.c: 367: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 368: {;dc_motor.c: 369:     mL->direction = 1;
  5507   004804  EE20 F001          	lfsr	2,1
  5508   004808  5022               	movf	stop@mL^0,w,c
  5509   00480A  26D9               	addwf	fsr2l,f,c
  5510   00480C  5023               	movf	(stop@mL+1)^0,w,c
  5511   00480E  22DA               	addwfc	fsr2h,f,c
  5512   004810  0E01               	movlw	1
  5513   004812  6EDF               	movwf	indf2,c
  5514                           
  5515                           ;dc_motor.c: 370:     mR->direction = 1;
  5516   004814  EE20 F001          	lfsr	2,1
  5517   004818  5024               	movf	stop@mR^0,w,c
  5518   00481A  26D9               	addwf	fsr2l,f,c
  5519   00481C  5025               	movf	(stop@mR+1)^0,w,c
  5520   00481E  22DA               	addwfc	fsr2h,f,c
  5521   004820  0E01               	movlw	1
  5522   004822  6EDF               	movwf	indf2,c
  5523                           
  5524                           ;dc_motor.c: 371:     int i;;dc_motor.c: 372:     int cur_power;;dc_motor.c: 373:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  5525   004824  C022  FFD9         	movff	stop@mL,fsr2l
  5526   004828  C023  FFDA         	movff	stop@mL+1,fsr2h
  5527   00482C  50DF               	movf	indf2,w,c
  5528   00482E  6E27               	movwf	??_stop^0,c
  5529   004830  EE20 F009          	lfsr	2,9
  5530   004834  5022               	movf	stop@mL^0,w,c
  5531   004836  26D9               	addwf	fsr2l,f,c
  5532   004838  5023               	movf	(stop@mL+1)^0,w,c
  5533   00483A  22DA               	addwfc	fsr2h,f,c
  5534   00483C  50DF               	movf	indf2,w,c
  5535   00483E  6E28               	movwf	(??_stop+1)^0,c
  5536   004840  5028               	movf	(??_stop+1)^0,w,c
  5537   004842  5C27               	subwf	??_stop^0,w,c
  5538   004844  6E2C               	movwf	stop@cur_power^0,c
  5539   004846  6A2D               	clrf	(stop@cur_power+1)^0,c
  5540   004848  A0D8               	btfss	status,0,c
  5541   00484A  062D               	decf	(stop@cur_power+1)^0,f,c
  5542   00484C                     l3086:
  5543   00484C  BE2D               	btfsc	(stop@cur_power+1)^0,7,c
  5544   00484E  EF2D  F024         	goto	u1990
  5545   004852  EF2B  F024         	goto	u1991
  5546   004856                     u1991:
  5547   004856  EF2F  F024         	goto	l3090
  5548   00485A                     u1990:
  5549   00485A  EF7B  F024         	goto	l3106
  5550   00485E                     l3090:
  5551                           
  5552                           ;dc_motor.c: 374:         mL->power = cur_power+mL->compensation;
  5553   00485E  EE20 F009          	lfsr	2,9
  5554   004862  5022               	movf	stop@mL^0,w,c
  5555   004864  26D9               	addwf	fsr2l,f,c
  5556   004866  5023               	movf	(stop@mL+1)^0,w,c
  5557   004868  22DA               	addwfc	fsr2h,f,c
  5558   00486A  50DF               	movf	indf2,w,c
  5559   00486C  242C               	addwf	stop@cur_power^0,w,c
  5560   00486E  C022  FFD9         	movff	stop@mL,fsr2l
  5561   004872  C023  FFDA         	movff	stop@mL+1,fsr2h
  5562   004876  6EDF               	movwf	indf2,c
  5563                           
  5564                           ;dc_motor.c: 375:         mR->power = cur_power+mR->compensation;
  5565   004878  EE20 F009          	lfsr	2,9
  5566   00487C  5024               	movf	stop@mR^0,w,c
  5567   00487E  26D9               	addwf	fsr2l,f,c
  5568   004880  5025               	movf	(stop@mR+1)^0,w,c
  5569   004882  22DA               	addwfc	fsr2h,f,c
  5570   004884  50DF               	movf	indf2,w,c
  5571   004886  242C               	addwf	stop@cur_power^0,w,c
  5572   004888  C024  FFD9         	movff	stop@mR,fsr2l
  5573   00488C  C025  FFDA         	movff	stop@mR+1,fsr2h
  5574   004890  6EDF               	movwf	indf2,c
  5575   004892                     
  5576                           ;dc_motor.c: 376:         setMotorPWM(mL);
  5577   004892  C022  F01C         	movff	stop@mL,setMotorPWM@m
  5578   004896  C023  F01D         	movff	stop@mL+1,setMotorPWM@m+1
  5579   00489A  ECC6  F022         	call	_setMotorPWM	;wreg free
  5580   00489E                     
  5581                           ;dc_motor.c: 377:         setMotorPWM(mR);
  5582   00489E  C024  F01C         	movff	stop@mR,setMotorPWM@m
  5583   0048A2  C025  F01D         	movff	stop@mR+1,setMotorPWM@m+1
  5584   0048A6  ECC6  F022         	call	_setMotorPWM	;wreg free
  5585   0048AA                     
  5586                           ;dc_motor.c: 378:         for (i=0;i<straightRamp;i++) {
  5587   0048AA  0E00               	movlw	0
  5588   0048AC  6E2B               	movwf	(stop@i+1)^0,c
  5589   0048AE  0E00               	movlw	0
  5590   0048B0  6E2A               	movwf	stop@i^0,c
  5591   0048B2  EF64  F024         	goto	l621
  5592   0048B6                     l3098:
  5593                           
  5594                           ;dc_motor.c: 379:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5595   0048B6  0ED0               	movlw	208
  5596   0048B8  6E27               	movwf	??_stop^0,c
  5597   0048BA  0ECA               	movlw	202
  5598   0048BC                     u5087:
  5599   0048BC  2EE8               	decfsz	wreg,f,c
  5600   0048BE  D7FE               	bra	u5087
  5601   0048C0  2E27               	decfsz	??_stop^0,f,c
  5602   0048C2  D7FC               	bra	u5087
  5603   0048C4                     
  5604                           ;dc_motor.c: 380:         }
  5605   0048C4  4A2A               	infsnz	stop@i^0,f,c
  5606   0048C6  2A2B               	incf	(stop@i+1)^0,f,c
  5607   0048C8                     l621:
  5608   0048C8  5026               	movf	stop@straightRamp^0,w,c
  5609   0048CA  6E27               	movwf	??_stop^0,c
  5610   0048CC  6A28               	clrf	(??_stop+1)^0,c
  5611   0048CE  5027               	movf	??_stop^0,w,c
  5612   0048D0  5C2A               	subwf	stop@i^0,w,c
  5613   0048D2  502B               	movf	(stop@i+1)^0,w,c
  5614   0048D4  0A80               	xorlw	128
  5615   0048D6  6E29               	movwf	(??_stop+2)^0,c
  5616   0048D8  5028               	movf	(??_stop+1)^0,w,c
  5617   0048DA  0A80               	xorlw	128
  5618   0048DC  5829               	subwfb	(??_stop+2)^0,w,c
  5619   0048DE  A0D8               	btfss	status,0,c
  5620   0048E0  EF74  F024         	goto	u2001
  5621   0048E4  EF76  F024         	goto	u2000
  5622   0048E8                     u2001:
  5623   0048E8  EF5B  F024         	goto	l3098
  5624   0048EC                     u2000:
  5625   0048EC                     
  5626                           ;dc_motor.c: 381:     }
  5627   0048EC  062C               	decf	stop@cur_power^0,f,c
  5628   0048EE  A0D8               	btfss	status,0,c
  5629   0048F0  062D               	decf	(stop@cur_power+1)^0,f,c
  5630   0048F2  EF26  F024         	goto	l3086
  5631   0048F6                     l3106:
  5632                           
  5633                           ;dc_motor.c: 382:     mL->power = 0;
  5634   0048F6  C022  FFD9         	movff	stop@mL,fsr2l
  5635   0048FA  C023  FFDA         	movff	stop@mL+1,fsr2h
  5636   0048FE  6ADF               	clrf	indf2,c
  5637                           
  5638                           ;dc_motor.c: 383:     mR->power = 0;
  5639   004900  C024  FFD9         	movff	stop@mR,fsr2l
  5640   004904  C025  FFDA         	movff	stop@mR+1,fsr2h
  5641   004908  6ADF               	clrf	indf2,c
  5642   00490A  0012               	return		;funcret
  5643   00490C                     __end_of_stop:
  5644                           	callstack 0
  5645                           
  5646 ;; *************** function _reverseOneSquare *****************
  5647 ;; Defined at:
  5648 ;;		line 468 in file "dc_motor.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5651 ;;		 -> main@motorL(10), 
  5652 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5653 ;;		 -> main@motorR(10), 
  5654 ;;  straightSpee    1   37[COMRAM] unsigned char 
  5655 ;;  reverseDurat    1   38[COMRAM] unsigned char 
  5656 ;;  straightRamp    1   39[COMRAM] unsigned char 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  cur_power       2   45[COMRAM] int 
  5659 ;;  i               2   43[COMRAM] int 
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5669 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5670 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5671 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5672 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5673 ;;Total ram usage:       14 bytes
  5674 ;; Hardware stack levels used: 1
  5675 ;; Hardware stack levels required when called: 7
  5676 ;; This function calls:
  5677 ;;		_setMotorPWM
  5678 ;; This function is called by:
  5679 ;;		_move
  5680 ;;		_returnHome
  5681 ;;		_lostReturnHome
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text7
  5686   003FFE                     __ptext7:
  5687                           	callstack 0
  5688   003FFE                     _reverseOneSquare:
  5689                           	callstack 22
  5690   003FFE                     
  5691                           ;dc_motor.c: 468: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned char reverseDuration, unsigned char straightRamp);dc_motor.c: 469: {;dc_motor.c
      +                          : 470:     mL->direction = 0;
  5692   003FFE  EE20 F001          	lfsr	2,1
  5693   004002  5022               	movf	reverseOneSquare@mL^0,w,c
  5694   004004  26D9               	addwf	fsr2l,f,c
  5695   004006  5023               	movf	(reverseOneSquare@mL+1)^0,w,c
  5696   004008  22DA               	addwfc	fsr2h,f,c
  5697   00400A  6ADF               	clrf	indf2,c
  5698                           
  5699                           ;dc_motor.c: 471:     mR->direction = 0;
  5700   00400C  EE20 F001          	lfsr	2,1
  5701   004010  5024               	movf	reverseOneSquare@mR^0,w,c
  5702   004012  26D9               	addwf	fsr2l,f,c
  5703   004014  5025               	movf	(reverseOneSquare@mR+1)^0,w,c
  5704   004016  22DA               	addwfc	fsr2h,f,c
  5705   004018  6ADF               	clrf	indf2,c
  5706   00401A                     
  5707                           ;dc_motor.c: 472:     int i;;dc_motor.c: 473:     int cur_power;;dc_motor.c: 474:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  5708   00401A  0E00               	movlw	0
  5709   00401C  6E2F               	movwf	(reverseOneSquare@cur_power+1)^0,c
  5710   00401E  0E01               	movlw	1
  5711   004020  6E2E               	movwf	reverseOneSquare@cur_power^0,c
  5712   004022  EF5C  F020         	goto	l3250
  5713   004026                     l3236:
  5714                           
  5715                           ;dc_motor.c: 475:         mL->power = cur_power+mL->compensation;
  5716   004026  EE20 F009          	lfsr	2,9
  5717   00402A  5022               	movf	reverseOneSquare@mL^0,w,c
  5718   00402C  26D9               	addwf	fsr2l,f,c
  5719   00402E  5023               	movf	(reverseOneSquare@mL+1)^0,w,c
  5720   004030  22DA               	addwfc	fsr2h,f,c
  5721   004032  50DF               	movf	indf2,w,c
  5722   004034  242E               	addwf	reverseOneSquare@cur_power^0,w,c
  5723   004036  C022  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5724   00403A  C023  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5725   00403E  6EDF               	movwf	indf2,c
  5726                           
  5727                           ;dc_motor.c: 476:         mR->power = cur_power+mR->compensation;
  5728   004040  EE20 F009          	lfsr	2,9
  5729   004044  5024               	movf	reverseOneSquare@mR^0,w,c
  5730   004046  26D9               	addwf	fsr2l,f,c
  5731   004048  5025               	movf	(reverseOneSquare@mR+1)^0,w,c
  5732   00404A  22DA               	addwfc	fsr2h,f,c
  5733   00404C  50DF               	movf	indf2,w,c
  5734   00404E  242E               	addwf	reverseOneSquare@cur_power^0,w,c
  5735   004050  C024  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5736   004054  C025  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5737   004058  6EDF               	movwf	indf2,c
  5738   00405A                     
  5739                           ;dc_motor.c: 477:         setMotorPWM(mL);
  5740   00405A  C022  F01C         	movff	reverseOneSquare@mL,setMotorPWM@m
  5741   00405E  C023  F01D         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  5742   004062  ECC6  F022         	call	_setMotorPWM	;wreg free
  5743   004066                     
  5744                           ;dc_motor.c: 478:         setMotorPWM(mR);
  5745   004066  C024  F01C         	movff	reverseOneSquare@mR,setMotorPWM@m
  5746   00406A  C025  F01D         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  5747   00406E  ECC6  F022         	call	_setMotorPWM	;wreg free
  5748   004072                     
  5749                           ;dc_motor.c: 479:         for (i=0;i<straightRamp;i++) {
  5750   004072  0E00               	movlw	0
  5751   004074  6E2D               	movwf	(reverseOneSquare@i+1)^0,c
  5752   004076  0E00               	movlw	0
  5753   004078  6E2C               	movwf	reverseOneSquare@i^0,c
  5754   00407A  EF48  F020         	goto	l672
  5755   00407E                     l3244:
  5756                           
  5757                           ;dc_motor.c: 480:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5758   00407E  0ED0               	movlw	208
  5759   004080  6E29               	movwf	??_reverseOneSquare^0,c
  5760   004082  0ECA               	movlw	202
  5761   004084                     u5097:
  5762   004084  2EE8               	decfsz	wreg,f,c
  5763   004086  D7FE               	bra	u5097
  5764   004088  2E29               	decfsz	??_reverseOneSquare^0,f,c
  5765   00408A  D7FC               	bra	u5097
  5766   00408C                     
  5767                           ;dc_motor.c: 481:         }
  5768   00408C  4A2C               	infsnz	reverseOneSquare@i^0,f,c
  5769   00408E  2A2D               	incf	(reverseOneSquare@i+1)^0,f,c
  5770   004090                     l672:
  5771   004090  5028               	movf	reverseOneSquare@straightRamp^0,w,c
  5772   004092  6E29               	movwf	??_reverseOneSquare^0,c
  5773   004094  6A2A               	clrf	(??_reverseOneSquare+1)^0,c
  5774   004096  5029               	movf	??_reverseOneSquare^0,w,c
  5775   004098  5C2C               	subwf	reverseOneSquare@i^0,w,c
  5776   00409A  502D               	movf	(reverseOneSquare@i+1)^0,w,c
  5777   00409C  0A80               	xorlw	128
  5778   00409E  6E2B               	movwf	(??_reverseOneSquare+2)^0,c
  5779   0040A0  502A               	movf	(??_reverseOneSquare+1)^0,w,c
  5780   0040A2  0A80               	xorlw	128
  5781   0040A4  582B               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5782   0040A6  A0D8               	btfss	status,0,c
  5783   0040A8  EF58  F020         	goto	u2151
  5784   0040AC  EF5A  F020         	goto	u2150
  5785   0040B0                     u2151:
  5786   0040B0  EF3F  F020         	goto	l3244
  5787   0040B4                     u2150:
  5788   0040B4                     
  5789                           ;dc_motor.c: 482:     }
  5790   0040B4  4A2E               	infsnz	reverseOneSquare@cur_power^0,f,c
  5791   0040B6  2A2F               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  5792   0040B8                     l3250:
  5793   0040B8  5026               	movf	reverseOneSquare@straightSpeed^0,w,c
  5794   0040BA  6E29               	movwf	??_reverseOneSquare^0,c
  5795   0040BC  6A2A               	clrf	(??_reverseOneSquare+1)^0,c
  5796   0040BE  502E               	movf	reverseOneSquare@cur_power^0,w,c
  5797   0040C0  5C29               	subwf	??_reverseOneSquare^0,w,c
  5798   0040C2  502A               	movf	(??_reverseOneSquare+1)^0,w,c
  5799   0040C4  0A80               	xorlw	128
  5800   0040C6  6E2B               	movwf	(??_reverseOneSquare+2)^0,c
  5801   0040C8  502F               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  5802   0040CA  0A80               	xorlw	128
  5803   0040CC  582B               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5804   0040CE  B0D8               	btfsc	status,0,c
  5805   0040D0  EF6C  F020         	goto	u2161
  5806   0040D4  EF6E  F020         	goto	u2160
  5807   0040D8                     u2161:
  5808   0040D8  EF13  F020         	goto	l3236
  5809   0040DC                     u2160:
  5810   0040DC                     
  5811                           ;dc_motor.c: 484:     for (i=0;i<reverseDuration;i++) {
  5812   0040DC  0E00               	movlw	0
  5813   0040DE  6E2D               	movwf	(reverseOneSquare@i+1)^0,c
  5814   0040E0  0E00               	movlw	0
  5815   0040E2  6E2C               	movwf	reverseOneSquare@i^0,c
  5816   0040E4  EF7D  F020         	goto	l676
  5817   0040E8                     l3254:
  5818                           
  5819                           ;dc_motor.c: 485:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5820   0040E8  0ED0               	movlw	208
  5821   0040EA  6E29               	movwf	??_reverseOneSquare^0,c
  5822   0040EC  0ECA               	movlw	202
  5823   0040EE                     u5107:
  5824   0040EE  2EE8               	decfsz	wreg,f,c
  5825   0040F0  D7FE               	bra	u5107
  5826   0040F2  2E29               	decfsz	??_reverseOneSquare^0,f,c
  5827   0040F4  D7FC               	bra	u5107
  5828   0040F6                     
  5829                           ;dc_motor.c: 486:         }
  5830   0040F6  4A2C               	infsnz	reverseOneSquare@i^0,f,c
  5831   0040F8  2A2D               	incf	(reverseOneSquare@i+1)^0,f,c
  5832   0040FA                     l676:
  5833   0040FA  5027               	movf	reverseOneSquare@reverseDuration^0,w,c
  5834   0040FC  6E29               	movwf	??_reverseOneSquare^0,c
  5835   0040FE  6A2A               	clrf	(??_reverseOneSquare+1)^0,c
  5836   004100  5029               	movf	??_reverseOneSquare^0,w,c
  5837   004102  5C2C               	subwf	reverseOneSquare@i^0,w,c
  5838   004104  502D               	movf	(reverseOneSquare@i+1)^0,w,c
  5839   004106  0A80               	xorlw	128
  5840   004108  6E2B               	movwf	(??_reverseOneSquare+2)^0,c
  5841   00410A  502A               	movf	(??_reverseOneSquare+1)^0,w,c
  5842   00410C  0A80               	xorlw	128
  5843   00410E  582B               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5844   004110  A0D8               	btfss	status,0,c
  5845   004112  EF8D  F020         	goto	u2171
  5846   004116  EF8F  F020         	goto	u2170
  5847   00411A                     u2171:
  5848   00411A  EF74  F020         	goto	l3254
  5849   00411E                     u2170:
  5850   00411E                     
  5851                           ;dc_motor.c: 488:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  5852   00411E  C026  F02E         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  5853   004122  6A2F               	clrf	(reverseOneSquare@cur_power+1)^0,c
  5854   004124                     l3258:
  5855   004124  BE2F               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  5856   004126  EF99  F020         	goto	u2180
  5857   00412A  EF97  F020         	goto	u2181
  5858   00412E                     u2181:
  5859   00412E  EF9B  F020         	goto	l3262
  5860   004132                     u2180:
  5861   004132  EFE7  F020         	goto	l3278
  5862   004136                     l3262:
  5863                           
  5864                           ;dc_motor.c: 489:         mL->power = cur_power+mL->compensation;
  5865   004136  EE20 F009          	lfsr	2,9
  5866   00413A  5022               	movf	reverseOneSquare@mL^0,w,c
  5867   00413C  26D9               	addwf	fsr2l,f,c
  5868   00413E  5023               	movf	(reverseOneSquare@mL+1)^0,w,c
  5869   004140  22DA               	addwfc	fsr2h,f,c
  5870   004142  50DF               	movf	indf2,w,c
  5871   004144  242E               	addwf	reverseOneSquare@cur_power^0,w,c
  5872   004146  C022  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5873   00414A  C023  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5874   00414E  6EDF               	movwf	indf2,c
  5875                           
  5876                           ;dc_motor.c: 490:         mR->power = cur_power+mR->compensation;
  5877   004150  EE20 F009          	lfsr	2,9
  5878   004154  5024               	movf	reverseOneSquare@mR^0,w,c
  5879   004156  26D9               	addwf	fsr2l,f,c
  5880   004158  5025               	movf	(reverseOneSquare@mR+1)^0,w,c
  5881   00415A  22DA               	addwfc	fsr2h,f,c
  5882   00415C  50DF               	movf	indf2,w,c
  5883   00415E  242E               	addwf	reverseOneSquare@cur_power^0,w,c
  5884   004160  C024  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5885   004164  C025  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5886   004168  6EDF               	movwf	indf2,c
  5887   00416A                     
  5888                           ;dc_motor.c: 491:         setMotorPWM(mL);
  5889   00416A  C022  F01C         	movff	reverseOneSquare@mL,setMotorPWM@m
  5890   00416E  C023  F01D         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  5891   004172  ECC6  F022         	call	_setMotorPWM	;wreg free
  5892   004176                     
  5893                           ;dc_motor.c: 492:         setMotorPWM(mR);
  5894   004176  C024  F01C         	movff	reverseOneSquare@mR,setMotorPWM@m
  5895   00417A  C025  F01D         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  5896   00417E  ECC6  F022         	call	_setMotorPWM	;wreg free
  5897   004182                     
  5898                           ;dc_motor.c: 493:         for (i=0;i<straightRamp;i++) {
  5899   004182  0E00               	movlw	0
  5900   004184  6E2D               	movwf	(reverseOneSquare@i+1)^0,c
  5901   004186  0E00               	movlw	0
  5902   004188  6E2C               	movwf	reverseOneSquare@i^0,c
  5903   00418A  EFD0  F020         	goto	l681
  5904   00418E                     l3270:
  5905                           
  5906                           ;dc_motor.c: 494:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5907   00418E  0ED0               	movlw	208
  5908   004190  6E29               	movwf	??_reverseOneSquare^0,c
  5909   004192  0ECA               	movlw	202
  5910   004194                     u5117:
  5911   004194  2EE8               	decfsz	wreg,f,c
  5912   004196  D7FE               	bra	u5117
  5913   004198  2E29               	decfsz	??_reverseOneSquare^0,f,c
  5914   00419A  D7FC               	bra	u5117
  5915   00419C                     
  5916                           ;dc_motor.c: 495:         }
  5917   00419C  4A2C               	infsnz	reverseOneSquare@i^0,f,c
  5918   00419E  2A2D               	incf	(reverseOneSquare@i+1)^0,f,c
  5919   0041A0                     l681:
  5920   0041A0  5028               	movf	reverseOneSquare@straightRamp^0,w,c
  5921   0041A2  6E29               	movwf	??_reverseOneSquare^0,c
  5922   0041A4  6A2A               	clrf	(??_reverseOneSquare+1)^0,c
  5923   0041A6  5029               	movf	??_reverseOneSquare^0,w,c
  5924   0041A8  5C2C               	subwf	reverseOneSquare@i^0,w,c
  5925   0041AA  502D               	movf	(reverseOneSquare@i+1)^0,w,c
  5926   0041AC  0A80               	xorlw	128
  5927   0041AE  6E2B               	movwf	(??_reverseOneSquare+2)^0,c
  5928   0041B0  502A               	movf	(??_reverseOneSquare+1)^0,w,c
  5929   0041B2  0A80               	xorlw	128
  5930   0041B4  582B               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5931   0041B6  A0D8               	btfss	status,0,c
  5932   0041B8  EFE0  F020         	goto	u2191
  5933   0041BC  EFE2  F020         	goto	u2190
  5934   0041C0                     u2191:
  5935   0041C0  EFC7  F020         	goto	l3270
  5936   0041C4                     u2190:
  5937   0041C4                     
  5938                           ;dc_motor.c: 496:     }
  5939   0041C4  062E               	decf	reverseOneSquare@cur_power^0,f,c
  5940   0041C6  A0D8               	btfss	status,0,c
  5941   0041C8  062F               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  5942   0041CA  EF92  F020         	goto	l3258
  5943   0041CE                     l3278:
  5944                           
  5945                           ;dc_motor.c: 497:     mL->power = 0;
  5946   0041CE  C022  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5947   0041D2  C023  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5948   0041D6  6ADF               	clrf	indf2,c
  5949                           
  5950                           ;dc_motor.c: 498:     mR->power = 0;
  5951   0041D8  C024  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5952   0041DC  C025  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5953   0041E0  6ADF               	clrf	indf2,c
  5954   0041E2  0012               	return		;funcret
  5955   0041E4                     __end_of_reverseOneSquare:
  5956                           	callstack 0
  5957                           
  5958 ;; *************** function _resetTimer *****************
  5959 ;; Defined at:
  5960 ;;		line 23 in file "timers.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;		None
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;		None
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  1    wreg      void 
  5967 ;; Registers used:
  5968 ;;		wreg, status,2
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5978 ;;Total ram usage:        0 bytes
  5979 ;; Hardware stack levels used: 1
  5980 ;; Hardware stack levels required when called: 5
  5981 ;; This function calls:
  5982 ;;		Nothing
  5983 ;; This function is called by:
  5984 ;;		_main
  5985 ;;		_returnHome
  5986 ;;		_lostReturnHome
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           	psect	text8
  5991   005250                     __ptext8:
  5992                           	callstack 0
  5993   005250                     _resetTimer:
  5994                           	callstack 25
  5995   005250                     
  5996                           ;timers.c: 25:     TMR0H=0;
  5997   005250  0E00               	movlw	0
  5998   005252  6ED4               	movwf	212,c	;volatile
  5999                           
  6000                           ;timers.c: 26:     TMR0L=0;
  6001   005254  0E00               	movlw	0
  6002   005256  6ED3               	movwf	211,c	;volatile
  6003   005258  0012               	return		;funcret
  6004   00525A                     __end_of_resetTimer:
  6005                           	callstack 0
  6006                           
  6007 ;; *************** function _get16bitTMR0val *****************
  6008 ;; Defined at:
  6009 ;;		line 33 in file "timers.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  timer_val       2   22[COMRAM] unsigned int 
  6014 ;;  timer_high      2   20[COMRAM] unsigned int 
  6015 ;;  timer_low       2   18[COMRAM] unsigned int 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  2   14[COMRAM] unsigned int 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6026 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6027 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6028 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6029 ;;Total ram usage:       10 bytes
  6030 ;; Hardware stack levels used: 1
  6031 ;; Hardware stack levels required when called: 5
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_main
  6036 ;;		_returnHome
  6037 ;;		_lostReturnHome
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text9
  6042   00504C                     __ptext9:
  6043                           	callstack 0
  6044   00504C                     _get16bitTMR0val:
  6045                           	callstack 23
  6046   00504C                     
  6047                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  6048   00504C  CFD3 F013          	movff	4051,get16bitTMR0val@timer_low	;volatile
  6049   005050  6A14               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  6050                           
  6051                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  6052   005052  CFD4 F015          	movff	4052,get16bitTMR0val@timer_high	;volatile
  6053   005056  6A16               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  6054   005058                     
  6055                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  6056   005058  5015               	movf	get16bitTMR0val@timer_high^0,w,c
  6057   00505A  6E12               	movwf	(??_get16bitTMR0val+1)^0,c
  6058   00505C  6A11               	clrf	??_get16bitTMR0val^0,c
  6059   00505E  5013               	movf	get16bitTMR0val@timer_low^0,w,c
  6060   005060  1011               	iorwf	??_get16bitTMR0val^0,w,c
  6061   005062  6E17               	movwf	get16bitTMR0val@timer_val^0,c
  6062   005064  5014               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  6063   005066  1012               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  6064   005068  6E18               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  6065   00506A                     
  6066                           ;timers.c: 39:     return timer_val;
  6067   00506A  C017  F00F         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  6068   00506E  C018  F010         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  6069   005072  0012               	return		;funcret
  6070   005074                     __end_of_get16bitTMR0val:
  6071                           	callstack 0
  6072                           
  6073 ;; *************** function _fullSpeedAhead *****************
  6074 ;; Defined at:
  6075 ;;		line 451 in file "dc_motor.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6078 ;;		 -> main@motorL(10), 
  6079 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6080 ;;		 -> main@motorR(10), 
  6081 ;;  straightSpee    1   37[COMRAM] unsigned char 
  6082 ;;  straightRamp    1   38[COMRAM] unsigned char 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  cur_power       2   44[COMRAM] int 
  6085 ;;  i               2   42[COMRAM] int 
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  1    wreg      void 
  6088 ;; Registers used:
  6089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6095 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6096 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6097 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6098 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6099 ;;Total ram usage:       13 bytes
  6100 ;; Hardware stack levels used: 1
  6101 ;; Hardware stack levels required when called: 7
  6102 ;; This function calls:
  6103 ;;		_setMotorPWM
  6104 ;; This function is called by:
  6105 ;;		_main
  6106 ;;		_move
  6107 ;;		_returnHome
  6108 ;;		_lostReturnHome
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text10
  6113   00490C                     __ptext10:
  6114                           	callstack 0
  6115   00490C                     _fullSpeedAhead:
  6116                           	callstack 21
  6117   00490C                     
  6118                           ;dc_motor.c: 451: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 452: {;dc_motor.c: 453:     mL->direction = 1;
  6119   00490C  EE20 F001          	lfsr	2,1
  6120   004910  5022               	movf	fullSpeedAhead@mL^0,w,c
  6121   004912  26D9               	addwf	fsr2l,f,c
  6122   004914  5023               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6123   004916  22DA               	addwfc	fsr2h,f,c
  6124   004918  0E01               	movlw	1
  6125   00491A  6EDF               	movwf	indf2,c
  6126                           
  6127                           ;dc_motor.c: 454:     mR->direction = 1;
  6128   00491C  EE20 F001          	lfsr	2,1
  6129   004920  5024               	movf	fullSpeedAhead@mR^0,w,c
  6130   004922  26D9               	addwf	fsr2l,f,c
  6131   004924  5025               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6132   004926  22DA               	addwfc	fsr2h,f,c
  6133   004928  0E01               	movlw	1
  6134   00492A  6EDF               	movwf	indf2,c
  6135   00492C                     
  6136                           ;dc_motor.c: 455:     int i;;dc_motor.c: 456:     int cur_power;;dc_motor.c: 457:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  6137   00492C  0E00               	movlw	0
  6138   00492E  6E2E               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  6139   004930  0E01               	movlw	1
  6140   004932  6E2D               	movwf	fullSpeedAhead@cur_power^0,c
  6141   004934  EFE5  F024         	goto	l3072
  6142   004938                     l3058:
  6143                           
  6144                           ;dc_motor.c: 458:         mL->power = cur_power+mL->compensation;
  6145   004938  EE20 F009          	lfsr	2,9
  6146   00493C  5022               	movf	fullSpeedAhead@mL^0,w,c
  6147   00493E  26D9               	addwf	fsr2l,f,c
  6148   004940  5023               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6149   004942  22DA               	addwfc	fsr2h,f,c
  6150   004944  50DF               	movf	indf2,w,c
  6151   004946  242D               	addwf	fullSpeedAhead@cur_power^0,w,c
  6152   004948  C022  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6153   00494C  C023  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6154   004950  6EDF               	movwf	indf2,c
  6155                           
  6156                           ;dc_motor.c: 459:         mR->power = cur_power+mR->compensation;
  6157   004952  EE20 F009          	lfsr	2,9
  6158   004956  5024               	movf	fullSpeedAhead@mR^0,w,c
  6159   004958  26D9               	addwf	fsr2l,f,c
  6160   00495A  5025               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6161   00495C  22DA               	addwfc	fsr2h,f,c
  6162   00495E  50DF               	movf	indf2,w,c
  6163   004960  242D               	addwf	fullSpeedAhead@cur_power^0,w,c
  6164   004962  C024  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6165   004966  C025  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6166   00496A  6EDF               	movwf	indf2,c
  6167   00496C                     
  6168                           ;dc_motor.c: 460:         setMotorPWM(mL);
  6169   00496C  C022  F01C         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6170   004970  C023  F01D         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6171   004974  ECC6  F022         	call	_setMotorPWM	;wreg free
  6172   004978                     
  6173                           ;dc_motor.c: 461:         setMotorPWM(mR);
  6174   004978  C024  F01C         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6175   00497C  C025  F01D         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6176   004980  ECC6  F022         	call	_setMotorPWM	;wreg free
  6177   004984                     
  6178                           ;dc_motor.c: 462:         for (i=0;i<straightRamp;i++) {
  6179   004984  0E00               	movlw	0
  6180   004986  6E2C               	movwf	(fullSpeedAhead@i+1)^0,c
  6181   004988  0E00               	movlw	0
  6182   00498A  6E2B               	movwf	fullSpeedAhead@i^0,c
  6183   00498C  EFD1  F024         	goto	l663
  6184   004990                     l3066:
  6185                           
  6186                           ;dc_motor.c: 463:             _delay((unsigned long)((10)*(64000000/4000.0)));
  6187   004990  0ED0               	movlw	208
  6188   004992  6E28               	movwf	??_fullSpeedAhead^0,c
  6189   004994  0ECA               	movlw	202
  6190   004996                     u5127:
  6191   004996  2EE8               	decfsz	wreg,f,c
  6192   004998  D7FE               	bra	u5127
  6193   00499A  2E28               	decfsz	??_fullSpeedAhead^0,f,c
  6194   00499C  D7FC               	bra	u5127
  6195   00499E                     
  6196                           ;dc_motor.c: 464:         }
  6197   00499E  4A2B               	infsnz	fullSpeedAhead@i^0,f,c
  6198   0049A0  2A2C               	incf	(fullSpeedAhead@i+1)^0,f,c
  6199   0049A2                     l663:
  6200   0049A2  5027               	movf	fullSpeedAhead@straightRamp^0,w,c
  6201   0049A4  6E28               	movwf	??_fullSpeedAhead^0,c
  6202   0049A6  6A29               	clrf	(??_fullSpeedAhead+1)^0,c
  6203   0049A8  5028               	movf	??_fullSpeedAhead^0,w,c
  6204   0049AA  5C2B               	subwf	fullSpeedAhead@i^0,w,c
  6205   0049AC  502C               	movf	(fullSpeedAhead@i+1)^0,w,c
  6206   0049AE  0A80               	xorlw	128
  6207   0049B0  6E2A               	movwf	(??_fullSpeedAhead+2)^0,c
  6208   0049B2  5029               	movf	(??_fullSpeedAhead+1)^0,w,c
  6209   0049B4  0A80               	xorlw	128
  6210   0049B6  582A               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6211   0049B8  A0D8               	btfss	status,0,c
  6212   0049BA  EFE1  F024         	goto	u1971
  6213   0049BE  EFE3  F024         	goto	u1970
  6214   0049C2                     u1971:
  6215   0049C2  EFC8  F024         	goto	l3066
  6216   0049C6                     u1970:
  6217   0049C6                     
  6218                           ;dc_motor.c: 465:     }
  6219   0049C6  4A2D               	infsnz	fullSpeedAhead@cur_power^0,f,c
  6220   0049C8  2A2E               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  6221   0049CA                     l3072:
  6222   0049CA  5026               	movf	fullSpeedAhead@straightSpeed^0,w,c
  6223   0049CC  6E28               	movwf	??_fullSpeedAhead^0,c
  6224   0049CE  6A29               	clrf	(??_fullSpeedAhead+1)^0,c
  6225   0049D0  502D               	movf	fullSpeedAhead@cur_power^0,w,c
  6226   0049D2  5C28               	subwf	??_fullSpeedAhead^0,w,c
  6227   0049D4  5029               	movf	(??_fullSpeedAhead+1)^0,w,c
  6228   0049D6  0A80               	xorlw	128
  6229   0049D8  6E2A               	movwf	(??_fullSpeedAhead+2)^0,c
  6230   0049DA  502E               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  6231   0049DC  0A80               	xorlw	128
  6232   0049DE  582A               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6233   0049E0  B0D8               	btfsc	status,0,c
  6234   0049E2  EFF5  F024         	goto	u1981
  6235   0049E6  EFF7  F024         	goto	u1980
  6236   0049EA                     u1981:
  6237   0049EA  EF9C  F024         	goto	l3058
  6238   0049EE                     u1980:
  6239   0049EE  0012               	return		;funcret
  6240   0049F0                     __end_of_fullSpeedAhead:
  6241                           	callstack 0
  6242                           
  6243 ;; *************** function _initUSART4 *****************
  6244 ;; Defined at:
  6245 ;;		line 4 in file "serial.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;		None
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;		None
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  1    wreg      void 
  6252 ;; Registers used:
  6253 ;;		wreg, status,2
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;Total ram usage:        0 bytes
  6264 ;; Hardware stack levels used: 1
  6265 ;; Hardware stack levels required when called: 5
  6266 ;; This function calls:
  6267 ;;		Nothing
  6268 ;; This function is called by:
  6269 ;;		_main
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           	psect	text11
  6274   0051BA                     __ptext11:
  6275                           	callstack 0
  6276   0051BA                     _initUSART4:
  6277                           	callstack 25
  6278   0051BA                     
  6279                           ;serial.c: 7:     RC0PPS = 0x12;
  6280   0051BA  0E12               	movlw	18
  6281   0051BC  010E               	movlb	14	; () banked
  6282   0051BE  6F62               	movwf	98,b	;volatile
  6283                           
  6284                           ;serial.c: 8:     RX4PPS = 0x11;
  6285   0051C0  0E11               	movlw	17
  6286   0051C2  6F15               	movwf	21,b	;volatile
  6287   0051C4                     
  6288                           ; BSR set to: 14
  6289                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  6290   0051C4  97E9               	bcf	233,3,b	;volatile
  6291   0051C6                     
  6292                           ; BSR set to: 14
  6293                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  6294   0051C6  95E8               	bcf	232,2,b	;volatile
  6295                           
  6296                           ;serial.c: 13:     SP4BRGL = 51;
  6297   0051C8  0E33               	movlw	51
  6298   0051CA  6FE5               	movwf	229,b	;volatile
  6299                           
  6300                           ;serial.c: 14:     SP4BRGH = 0;
  6301   0051CC  0E00               	movlw	0
  6302   0051CE  6FE6               	movwf	230,b	;volatile
  6303   0051D0                     
  6304                           ; BSR set to: 14
  6305                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  6306   0051D0  89E7               	bsf	231,4,b	;volatile
  6307   0051D2                     
  6308                           ; BSR set to: 14
  6309                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  6310   0051D2  8BE8               	bsf	232,5,b	;volatile
  6311   0051D4                     
  6312                           ; BSR set to: 14
  6313                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  6314   0051D4  8FE7               	bsf	231,7,b	;volatile
  6315   0051D6                     
  6316                           ; BSR set to: 14
  6317   0051D6  0012               	return		;funcret
  6318   0051D8                     __end_of_initUSART4:
  6319                           	callstack 0
  6320                           
  6321 ;; *************** function _initDCmotorsPWM *****************
  6322 ;; Defined at:
  6323 ;;		line 8 in file "dc_motor.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  PWMperiod       2   14[COMRAM] unsigned int 
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;		None
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  1    wreg      void 
  6330 ;; Registers used:
  6331 ;;		wreg, status,2
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6341 ;;Total ram usage:        2 bytes
  6342 ;; Hardware stack levels used: 1
  6343 ;; Hardware stack levels required when called: 5
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_main
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text12
  6352   004C9C                     __ptext12:
  6353                           	callstack 0
  6354   004C9C                     _initDCmotorsPWM:
  6355                           	callstack 25
  6356   004C9C                     
  6357                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  6358   004C9C  947D               	bcf	125,2,c	;volatile
  6359                           
  6360                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  6361   004C9E  9485               	bcf	133,2,c	;volatile
  6362                           
  6363                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  6364   004CA0  987D               	bcf	125,4,c	;volatile
  6365                           
  6366                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  6367   004CA2  9885               	bcf	133,4,c	;volatile
  6368                           
  6369                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  6370   004CA4  9E7B               	bcf	123,7,c	;volatile
  6371                           
  6372                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  6373   004CA6  9E83               	bcf	131,7,c	;volatile
  6374                           
  6375                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  6376   004CA8  9C7F               	bcf	127,6,c	;volatile
  6377                           
  6378                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  6379   004CAA  9C87               	bcf	135,6,c	;volatile
  6380   004CAC                     
  6381                           ;dc_motor.c: 21:     RE2PPS=0x05;
  6382   004CAC  0E05               	movlw	5
  6383   004CAE  010E               	movlb	14	; () banked
  6384   004CB0  6F74               	movwf	116,b	;volatile
  6385                           
  6386                           ;dc_motor.c: 22:     RE4PPS=0x06;
  6387   004CB2  0E06               	movlw	6
  6388   004CB4  6F76               	movwf	118,b	;volatile
  6389                           
  6390                           ;dc_motor.c: 23:     RC7PPS=0x07;
  6391   004CB6  0E07               	movlw	7
  6392   004CB8  6F69               	movwf	105,b	;volatile
  6393                           
  6394                           ;dc_motor.c: 24:     RG6PPS=0x08;
  6395   004CBA  0E08               	movlw	8
  6396   004CBC  6F88               	movwf	136,b	;volatile
  6397                           
  6398                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  6399   004CBE  50BD               	movf	189,w,c	;volatile
  6400   004CC0  0B8F               	andlw	-113
  6401   004CC2  0930               	iorlw	48
  6402   004CC4  6EBD               	movwf	189,c	;volatile
  6403                           
  6404                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  6405   004CC6  0EE0               	movlw	-32
  6406   004CC8  16BE               	andwf	190,f,c	;volatile
  6407                           
  6408                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  6409   004CCA  50BF               	movf	191,w,c	;volatile
  6410   004CCC  0BF0               	andlw	-16
  6411   004CCE  0901               	iorlw	1
  6412   004CD0  6EBF               	movwf	191,c	;volatile
  6413   004CD2                     
  6414                           ; BSR set to: 14
  6415                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  6416   004CD2  C00F  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  6417   004CD6                     
  6418                           ; BSR set to: 14
  6419                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  6420   004CD6  8EBD               	bsf	189,7,c	;volatile
  6421                           
  6422                           ;dc_motor.c: 38:     CCPR1H=0;
  6423   004CD8  0E00               	movlw	0
  6424   004CDA  6EAA               	movwf	170,c	;volatile
  6425                           
  6426                           ;dc_motor.c: 39:     CCPR2H=0;
  6427   004CDC  0E00               	movlw	0
  6428   004CDE  6EA6               	movwf	166,c	;volatile
  6429                           
  6430                           ;dc_motor.c: 40:     CCPR3H=0;
  6431   004CE0  0E00               	movlw	0
  6432   004CE2  010F               	movlb	15	; () banked
  6433   004CE4  6F25               	movwf	37,b	;volatile
  6434                           
  6435                           ;dc_motor.c: 41:     CCPR4H=0;
  6436   004CE6  0E00               	movlw	0
  6437   004CE8  6F21               	movwf	33,b	;volatile
  6438                           
  6439                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  6440   004CEA  0EFC               	movlw	-4
  6441   004CEC  16AD               	andwf	173,f,c	;volatile
  6442                           
  6443                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  6444   004CEE  0EF3               	movlw	-13
  6445   004CF0  16AD               	andwf	173,f,c	;volatile
  6446                           
  6447                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  6448   004CF2  0ECF               	movlw	-49
  6449   004CF4  16AD               	andwf	173,f,c	;volatile
  6450                           
  6451                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  6452   004CF6  0E3F               	movlw	-193
  6453   004CF8  16AD               	andwf	173,f,c	;volatile
  6454   004CFA                     
  6455                           ; BSR set to: 15
  6456                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  6457   004CFA  88AB               	bsf	171,4,c	;volatile
  6458                           
  6459                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  6460   004CFC  50AB               	movf	171,w,c	;volatile
  6461   004CFE  0BF0               	andlw	-16
  6462   004D00  090C               	iorlw	12
  6463   004D02  6EAB               	movwf	171,c	;volatile
  6464   004D04                     
  6465                           ; BSR set to: 15
  6466                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  6467   004D04  8EAB               	bsf	171,7,c	;volatile
  6468   004D06                     
  6469                           ; BSR set to: 15
  6470                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  6471   004D06  88A7               	bsf	167,4,c	;volatile
  6472                           
  6473                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  6474   004D08  50A7               	movf	167,w,c	;volatile
  6475   004D0A  0BF0               	andlw	-16
  6476   004D0C  090C               	iorlw	12
  6477   004D0E  6EA7               	movwf	167,c	;volatile
  6478   004D10                     
  6479                           ; BSR set to: 15
  6480                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  6481   004D10  8EA7               	bsf	167,7,c	;volatile
  6482   004D12                     
  6483                           ; BSR set to: 15
  6484                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  6485   004D12  8926               	bsf	38,4,b	;volatile
  6486                           
  6487                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  6488   004D14  5126               	movf	38,w,b	;volatile
  6489   004D16  0BF0               	andlw	-16
  6490   004D18  090C               	iorlw	12
  6491   004D1A  6F26               	movwf	38,b	;volatile
  6492   004D1C                     
  6493                           ; BSR set to: 15
  6494                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  6495   004D1C  8F26               	bsf	38,7,b	;volatile
  6496   004D1E                     
  6497                           ; BSR set to: 15
  6498                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  6499   004D1E  8922               	bsf	34,4,b	;volatile
  6500                           
  6501                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  6502   004D20  5122               	movf	34,w,b	;volatile
  6503   004D22  0BF0               	andlw	-16
  6504   004D24  090C               	iorlw	12
  6505   004D26  6F22               	movwf	34,b	;volatile
  6506   004D28                     
  6507                           ; BSR set to: 15
  6508                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  6509   004D28  8F22               	bsf	34,7,b	;volatile
  6510   004D2A                     
  6511                           ; BSR set to: 15
  6512   004D2A  0012               	return		;funcret
  6513   004D2C                     __end_of_initDCmotorsPWM:
  6514                           	callstack 0
  6515                           
  6516 ;; *************** function _color_detect *****************
  6517 ;; Defined at:
  6518 ;;		line 141 in file "color.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  HSV             6   14[COMRAM] struct HSV_val
  6521 ;;  red             6   20[COMRAM] struct HSV_calib
  6522 ;;  green           6   26[COMRAM] struct HSV_calib
  6523 ;;  blue            6   32[COMRAM] struct HSV_calib
  6524 ;;  yellow          6   38[COMRAM] struct HSV_calib
  6525 ;;  pink            6   44[COMRAM] struct HSV_calib
  6526 ;;  orange          6   50[COMRAM] struct HSV_calib
  6527 ;;  lightblue       6   56[COMRAM] struct HSV_calib
  6528 ;;  white           6   62[COMRAM] struct HSV_calib
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  color           1    2[BANK0 ] unsigned char 
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      unsigned char 
  6533 ;; Registers used:
  6534 ;;		wreg, status,2, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6540 ;;      Params:        54       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6541 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6542 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6543 ;;      Totals:        54       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6544 ;;Total ram usage:       57 bytes
  6545 ;; Hardware stack levels used: 1
  6546 ;; Hardware stack levels required when called: 5
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_main
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text13
  6555   0039BC                     __ptext13:
  6556                           	callstack 0
  6557   0039BC                     _color_detect:
  6558                           	callstack 25
  6559   0039BC                     
  6560                           ;color.c: 146:     if ((red.H)-1000 < HSV.H && HSV.H < (red.H)+1000) {color = 1;}
  6561   0039BC  0E18               	movlw	24
  6562   0039BE  2415               	addwf	color_detect@red^0,w,c
  6563   0039C0  0100               	movlb	0	; () banked
  6564   0039C2  6FB0               	movwf	??_color_detect& (0+255),b
  6565   0039C4  0EFC               	movlw	252
  6566   0039C6  2016               	addwfc	(color_detect@red+1)^0,w,c
  6567   0039C8  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6568   0039CA  500F               	movf	color_detect@HSV^0,w,c
  6569   0039CC  5DB0               	subwf	??_color_detect& (0+255),w,b
  6570   0039CE  5010               	movf	(color_detect@HSV+1)^0,w,c
  6571   0039D0  59B1               	subwfb	(??_color_detect+1)& (0+255),w,b
  6572   0039D2  B0D8               	btfsc	status,0,c
  6573   0039D4  EFEE  F01C         	goto	u3721
  6574   0039D8  EFF0  F01C         	goto	u3720
  6575   0039DC                     u3721:
  6576   0039DC  EF05  F01D         	goto	l4538
  6577   0039E0                     u3720:
  6578   0039E0                     
  6579                           ; BSR set to: 0
  6580   0039E0  0EE8               	movlw	232
  6581   0039E2  2415               	addwf	color_detect@red^0,w,c
  6582   0039E4  6FB0               	movwf	??_color_detect& (0+255),b
  6583   0039E6  0E03               	movlw	3
  6584   0039E8  2016               	addwfc	(color_detect@red+1)^0,w,c
  6585   0039EA  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6586   0039EC  51B0               	movf	??_color_detect& (0+255),w,b
  6587   0039EE  5C0F               	subwf	color_detect@HSV^0,w,c
  6588   0039F0  51B1               	movf	(??_color_detect+1)& (0+255),w,b
  6589   0039F2  5810               	subwfb	(color_detect@HSV+1)^0,w,c
  6590   0039F4  B0D8               	btfsc	status,0,c
  6591   0039F6  EFFF  F01C         	goto	u3731
  6592   0039FA  EF01  F01D         	goto	u3730
  6593   0039FE                     u3731:
  6594   0039FE  EF05  F01D         	goto	l4538
  6595   003A02                     u3730:
  6596   003A02                     
  6597                           ; BSR set to: 0
  6598   003A02  0E01               	movlw	1
  6599   003A04  6FB2               	movwf	color_detect@color& (0+255),b
  6600   003A06  EF11  F01E         	goto	l160
  6601   003A0A                     l4538:
  6602                           
  6603                           ; BSR set to: 0
  6604   003A0A  0E18               	movlw	24
  6605   003A0C  241B               	addwf	color_detect@green^0,w,c
  6606   003A0E  6FB0               	movwf	??_color_detect& (0+255),b
  6607   003A10  0EFC               	movlw	252
  6608   003A12  201C               	addwfc	(color_detect@green+1)^0,w,c
  6609   003A14  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6610   003A16  500F               	movf	color_detect@HSV^0,w,c
  6611   003A18  5DB0               	subwf	??_color_detect& (0+255),w,b
  6612   003A1A  5010               	movf	(color_detect@HSV+1)^0,w,c
  6613   003A1C  59B1               	subwfb	(??_color_detect+1)& (0+255),w,b
  6614   003A1E  B0D8               	btfsc	status,0,c
  6615   003A20  EF14  F01D         	goto	u3741
  6616   003A24  EF16  F01D         	goto	u3740
  6617   003A28                     u3741:
  6618   003A28  EF2B  F01D         	goto	l4544
  6619   003A2C                     u3740:
  6620   003A2C                     
  6621                           ; BSR set to: 0
  6622   003A2C  0EE8               	movlw	232
  6623   003A2E  241B               	addwf	color_detect@green^0,w,c
  6624   003A30  6FB0               	movwf	??_color_detect& (0+255),b
  6625   003A32  0E03               	movlw	3
  6626   003A34  201C               	addwfc	(color_detect@green+1)^0,w,c
  6627   003A36  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6628   003A38  51B0               	movf	??_color_detect& (0+255),w,b
  6629   003A3A  5C0F               	subwf	color_detect@HSV^0,w,c
  6630   003A3C  51B1               	movf	(??_color_detect+1)& (0+255),w,b
  6631   003A3E  5810               	subwfb	(color_detect@HSV+1)^0,w,c
  6632   003A40  B0D8               	btfsc	status,0,c
  6633   003A42  EF25  F01D         	goto	u3751
  6634   003A46  EF27  F01D         	goto	u3750
  6635   003A4A                     u3751:
  6636   003A4A  EF2B  F01D         	goto	l4544
  6637   003A4E                     u3750:
  6638   003A4E                     
  6639                           ; BSR set to: 0
  6640   003A4E  0E02               	movlw	2
  6641   003A50  6FB2               	movwf	color_detect@color& (0+255),b
  6642   003A52  EF11  F01E         	goto	l160
  6643   003A56                     l4544:
  6644                           
  6645                           ; BSR set to: 0
  6646   003A56  0E18               	movlw	24
  6647   003A58  2421               	addwf	color_detect@blue^0,w,c
  6648   003A5A  6FB0               	movwf	??_color_detect& (0+255),b
  6649   003A5C  0EFC               	movlw	252
  6650   003A5E  2022               	addwfc	(color_detect@blue+1)^0,w,c
  6651   003A60  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6652   003A62  500F               	movf	color_detect@HSV^0,w,c
  6653   003A64  5DB0               	subwf	??_color_detect& (0+255),w,b
  6654   003A66  5010               	movf	(color_detect@HSV+1)^0,w,c
  6655   003A68  59B1               	subwfb	(??_color_detect+1)& (0+255),w,b
  6656   003A6A  B0D8               	btfsc	status,0,c
  6657   003A6C  EF3A  F01D         	goto	u3761
  6658   003A70  EF3C  F01D         	goto	u3760
  6659   003A74                     u3761:
  6660   003A74  EF51  F01D         	goto	l4550
  6661   003A78                     u3760:
  6662   003A78                     
  6663                           ; BSR set to: 0
  6664   003A78  0EE8               	movlw	232
  6665   003A7A  2421               	addwf	color_detect@blue^0,w,c
  6666   003A7C  6FB0               	movwf	??_color_detect& (0+255),b
  6667   003A7E  0E03               	movlw	3
  6668   003A80  2022               	addwfc	(color_detect@blue+1)^0,w,c
  6669   003A82  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6670   003A84  51B0               	movf	??_color_detect& (0+255),w,b
  6671   003A86  5C0F               	subwf	color_detect@HSV^0,w,c
  6672   003A88  51B1               	movf	(??_color_detect+1)& (0+255),w,b
  6673   003A8A  5810               	subwfb	(color_detect@HSV+1)^0,w,c
  6674   003A8C  B0D8               	btfsc	status,0,c
  6675   003A8E  EF4B  F01D         	goto	u3771
  6676   003A92  EF4D  F01D         	goto	u3770
  6677   003A96                     u3771:
  6678   003A96  EF51  F01D         	goto	l4550
  6679   003A9A                     u3770:
  6680   003A9A                     
  6681                           ; BSR set to: 0
  6682   003A9A  0E03               	movlw	3
  6683   003A9C  6FB2               	movwf	color_detect@color& (0+255),b
  6684   003A9E  EF11  F01E         	goto	l160
  6685   003AA2                     l4550:
  6686                           
  6687                           ; BSR set to: 0
  6688   003AA2  0E18               	movlw	24
  6689   003AA4  2427               	addwf	color_detect@yellow^0,w,c
  6690   003AA6  6FB0               	movwf	??_color_detect& (0+255),b
  6691   003AA8  0EFC               	movlw	252
  6692   003AAA  2028               	addwfc	(color_detect@yellow+1)^0,w,c
  6693   003AAC  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6694   003AAE  500F               	movf	color_detect@HSV^0,w,c
  6695   003AB0  5DB0               	subwf	??_color_detect& (0+255),w,b
  6696   003AB2  5010               	movf	(color_detect@HSV+1)^0,w,c
  6697   003AB4  59B1               	subwfb	(??_color_detect+1)& (0+255),w,b
  6698   003AB6  B0D8               	btfsc	status,0,c
  6699   003AB8  EF60  F01D         	goto	u3781
  6700   003ABC  EF62  F01D         	goto	u3780
  6701   003AC0                     u3781:
  6702   003AC0  EF77  F01D         	goto	l4556
  6703   003AC4                     u3780:
  6704   003AC4                     
  6705                           ; BSR set to: 0
  6706   003AC4  0EE8               	movlw	232
  6707   003AC6  2427               	addwf	color_detect@yellow^0,w,c
  6708   003AC8  6FB0               	movwf	??_color_detect& (0+255),b
  6709   003ACA  0E03               	movlw	3
  6710   003ACC  2028               	addwfc	(color_detect@yellow+1)^0,w,c
  6711   003ACE  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6712   003AD0  51B0               	movf	??_color_detect& (0+255),w,b
  6713   003AD2  5C0F               	subwf	color_detect@HSV^0,w,c
  6714   003AD4  51B1               	movf	(??_color_detect+1)& (0+255),w,b
  6715   003AD6  5810               	subwfb	(color_detect@HSV+1)^0,w,c
  6716   003AD8  B0D8               	btfsc	status,0,c
  6717   003ADA  EF71  F01D         	goto	u3791
  6718   003ADE  EF73  F01D         	goto	u3790
  6719   003AE2                     u3791:
  6720   003AE2  EF77  F01D         	goto	l4556
  6721   003AE6                     u3790:
  6722   003AE6                     
  6723                           ; BSR set to: 0
  6724   003AE6  0E04               	movlw	4
  6725   003AE8  6FB2               	movwf	color_detect@color& (0+255),b
  6726   003AEA  EF11  F01E         	goto	l160
  6727   003AEE                     l4556:
  6728                           
  6729                           ; BSR set to: 0
  6730   003AEE  0E18               	movlw	24
  6731   003AF0  242D               	addwf	color_detect@pink^0,w,c
  6732   003AF2  6FB0               	movwf	??_color_detect& (0+255),b
  6733   003AF4  0EFC               	movlw	252
  6734   003AF6  202E               	addwfc	(color_detect@pink+1)^0,w,c
  6735   003AF8  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6736   003AFA  500F               	movf	color_detect@HSV^0,w,c
  6737   003AFC  5DB0               	subwf	??_color_detect& (0+255),w,b
  6738   003AFE  5010               	movf	(color_detect@HSV+1)^0,w,c
  6739   003B00  59B1               	subwfb	(??_color_detect+1)& (0+255),w,b
  6740   003B02  B0D8               	btfsc	status,0,c
  6741   003B04  EF86  F01D         	goto	u3801
  6742   003B08  EF88  F01D         	goto	u3800
  6743   003B0C                     u3801:
  6744   003B0C  EF9D  F01D         	goto	l4562
  6745   003B10                     u3800:
  6746   003B10                     
  6747                           ; BSR set to: 0
  6748   003B10  0EE8               	movlw	232
  6749   003B12  242D               	addwf	color_detect@pink^0,w,c
  6750   003B14  6FB0               	movwf	??_color_detect& (0+255),b
  6751   003B16  0E03               	movlw	3
  6752   003B18  202E               	addwfc	(color_detect@pink+1)^0,w,c
  6753   003B1A  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6754   003B1C  51B0               	movf	??_color_detect& (0+255),w,b
  6755   003B1E  5C0F               	subwf	color_detect@HSV^0,w,c
  6756   003B20  51B1               	movf	(??_color_detect+1)& (0+255),w,b
  6757   003B22  5810               	subwfb	(color_detect@HSV+1)^0,w,c
  6758   003B24  B0D8               	btfsc	status,0,c
  6759   003B26  EF97  F01D         	goto	u3811
  6760   003B2A  EF99  F01D         	goto	u3810
  6761   003B2E                     u3811:
  6762   003B2E  EF9D  F01D         	goto	l4562
  6763   003B32                     u3810:
  6764   003B32                     
  6765                           ; BSR set to: 0
  6766   003B32  0E05               	movlw	5
  6767   003B34  6FB2               	movwf	color_detect@color& (0+255),b
  6768   003B36  EF11  F01E         	goto	l160
  6769   003B3A                     l4562:
  6770                           
  6771                           ; BSR set to: 0
  6772   003B3A  0E18               	movlw	24
  6773   003B3C  2433               	addwf	color_detect@orange^0,w,c
  6774   003B3E  6FB0               	movwf	??_color_detect& (0+255),b
  6775   003B40  0EFC               	movlw	252
  6776   003B42  2034               	addwfc	(color_detect@orange+1)^0,w,c
  6777   003B44  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6778   003B46  500F               	movf	color_detect@HSV^0,w,c
  6779   003B48  5DB0               	subwf	??_color_detect& (0+255),w,b
  6780   003B4A  5010               	movf	(color_detect@HSV+1)^0,w,c
  6781   003B4C  59B1               	subwfb	(??_color_detect+1)& (0+255),w,b
  6782   003B4E  B0D8               	btfsc	status,0,c
  6783   003B50  EFAC  F01D         	goto	u3821
  6784   003B54  EFAE  F01D         	goto	u3820
  6785   003B58                     u3821:
  6786   003B58  EFC3  F01D         	goto	l4568
  6787   003B5C                     u3820:
  6788   003B5C                     
  6789                           ; BSR set to: 0
  6790   003B5C  0EE8               	movlw	232
  6791   003B5E  2433               	addwf	color_detect@orange^0,w,c
  6792   003B60  6FB0               	movwf	??_color_detect& (0+255),b
  6793   003B62  0E03               	movlw	3
  6794   003B64  2034               	addwfc	(color_detect@orange+1)^0,w,c
  6795   003B66  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6796   003B68  51B0               	movf	??_color_detect& (0+255),w,b
  6797   003B6A  5C0F               	subwf	color_detect@HSV^0,w,c
  6798   003B6C  51B1               	movf	(??_color_detect+1)& (0+255),w,b
  6799   003B6E  5810               	subwfb	(color_detect@HSV+1)^0,w,c
  6800   003B70  B0D8               	btfsc	status,0,c
  6801   003B72  EFBD  F01D         	goto	u3831
  6802   003B76  EFBF  F01D         	goto	u3830
  6803   003B7A                     u3831:
  6804   003B7A  EFC3  F01D         	goto	l4568
  6805   003B7E                     u3830:
  6806   003B7E                     
  6807                           ; BSR set to: 0
  6808   003B7E  0E06               	movlw	6
  6809   003B80  6FB2               	movwf	color_detect@color& (0+255),b
  6810   003B82  EF11  F01E         	goto	l160
  6811   003B86                     l4568:
  6812                           
  6813                           ; BSR set to: 0
  6814   003B86  0E18               	movlw	24
  6815   003B88  2439               	addwf	color_detect@lightblue^0,w,c
  6816   003B8A  6FB0               	movwf	??_color_detect& (0+255),b
  6817   003B8C  0EFC               	movlw	252
  6818   003B8E  203A               	addwfc	(color_detect@lightblue+1)^0,w,c
  6819   003B90  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6820   003B92  500F               	movf	color_detect@HSV^0,w,c
  6821   003B94  5DB0               	subwf	??_color_detect& (0+255),w,b
  6822   003B96  5010               	movf	(color_detect@HSV+1)^0,w,c
  6823   003B98  59B1               	subwfb	(??_color_detect+1)& (0+255),w,b
  6824   003B9A  B0D8               	btfsc	status,0,c
  6825   003B9C  EFD2  F01D         	goto	u3841
  6826   003BA0  EFD4  F01D         	goto	u3840
  6827   003BA4                     u3841:
  6828   003BA4  EFE9  F01D         	goto	l4574
  6829   003BA8                     u3840:
  6830   003BA8                     
  6831                           ; BSR set to: 0
  6832   003BA8  0EE8               	movlw	232
  6833   003BAA  2439               	addwf	color_detect@lightblue^0,w,c
  6834   003BAC  6FB0               	movwf	??_color_detect& (0+255),b
  6835   003BAE  0E03               	movlw	3
  6836   003BB0  203A               	addwfc	(color_detect@lightblue+1)^0,w,c
  6837   003BB2  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6838   003BB4  51B0               	movf	??_color_detect& (0+255),w,b
  6839   003BB6  5C0F               	subwf	color_detect@HSV^0,w,c
  6840   003BB8  51B1               	movf	(??_color_detect+1)& (0+255),w,b
  6841   003BBA  5810               	subwfb	(color_detect@HSV+1)^0,w,c
  6842   003BBC  B0D8               	btfsc	status,0,c
  6843   003BBE  EFE3  F01D         	goto	u3851
  6844   003BC2  EFE5  F01D         	goto	u3850
  6845   003BC6                     u3851:
  6846   003BC6  EFE9  F01D         	goto	l4574
  6847   003BCA                     u3850:
  6848   003BCA                     
  6849                           ; BSR set to: 0
  6850   003BCA  0E07               	movlw	7
  6851   003BCC  6FB2               	movwf	color_detect@color& (0+255),b
  6852   003BCE  EF11  F01E         	goto	l160
  6853   003BD2                     l4574:
  6854                           
  6855                           ; BSR set to: 0
  6856   003BD2  0E18               	movlw	24
  6857   003BD4  243F               	addwf	color_detect@white^0,w,c
  6858   003BD6  6FB0               	movwf	??_color_detect& (0+255),b
  6859   003BD8  0EFC               	movlw	252
  6860   003BDA  2040               	addwfc	(color_detect@white+1)^0,w,c
  6861   003BDC  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6862   003BDE  500F               	movf	color_detect@HSV^0,w,c
  6863   003BE0  5DB0               	subwf	??_color_detect& (0+255),w,b
  6864   003BE2  5010               	movf	(color_detect@HSV+1)^0,w,c
  6865   003BE4  59B1               	subwfb	(??_color_detect+1)& (0+255),w,b
  6866   003BE6  B0D8               	btfsc	status,0,c
  6867   003BE8  EFF8  F01D         	goto	u3861
  6868   003BEC  EFFA  F01D         	goto	u3860
  6869   003BF0                     u3861:
  6870   003BF0  EF0F  F01E         	goto	l4580
  6871   003BF4                     u3860:
  6872   003BF4                     
  6873                           ; BSR set to: 0
  6874   003BF4  0EE8               	movlw	232
  6875   003BF6  243F               	addwf	color_detect@white^0,w,c
  6876   003BF8  6FB0               	movwf	??_color_detect& (0+255),b
  6877   003BFA  0E03               	movlw	3
  6878   003BFC  2040               	addwfc	(color_detect@white+1)^0,w,c
  6879   003BFE  6FB1               	movwf	(??_color_detect+1)& (0+255),b
  6880   003C00  51B0               	movf	??_color_detect& (0+255),w,b
  6881   003C02  5C0F               	subwf	color_detect@HSV^0,w,c
  6882   003C04  51B1               	movf	(??_color_detect+1)& (0+255),w,b
  6883   003C06  5810               	subwfb	(color_detect@HSV+1)^0,w,c
  6884   003C08  B0D8               	btfsc	status,0,c
  6885   003C0A  EF09  F01E         	goto	u3871
  6886   003C0E  EF0B  F01E         	goto	u3870
  6887   003C12                     u3871:
  6888   003C12  EF0F  F01E         	goto	l4580
  6889   003C16                     u3870:
  6890   003C16                     
  6891                           ; BSR set to: 0
  6892   003C16  0E08               	movlw	8
  6893   003C18  6FB2               	movwf	color_detect@color& (0+255),b
  6894   003C1A  EF11  F01E         	goto	l160
  6895   003C1E                     l4580:
  6896                           
  6897                           ; BSR set to: 0
  6898   003C1E  0E09               	movlw	9
  6899   003C20  6FB2               	movwf	color_detect@color& (0+255),b
  6900   003C22                     l160:
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;color.c: 171:     return color;
  6904   003C22  51B2               	movf	color_detect@color& (0+255),w,b
  6905   003C24                     
  6906                           ; BSR set to: 0
  6907   003C24  0012               	return		;funcret
  6908   003C26                     __end_of_color_detect:
  6909                           	callstack 0
  6910                           
  6911 ;; *************** function _color_click_init *****************
  6912 ;; Defined at:
  6913 ;;		line 7 in file "color.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;		None
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;		None
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, status,2, status,0, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6931 ;;Total ram usage:        1 bytes
  6932 ;; Hardware stack levels used: 1
  6933 ;; Hardware stack levels required when called: 9
  6934 ;; This function calls:
  6935 ;;		_I2C_2_Master_Init
  6936 ;;		_color_clear_init_interrupts
  6937 ;;		_color_writetoaddr
  6938 ;; This function is called by:
  6939 ;;		_main
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           	psect	text14
  6944   004F5C                     __ptext14:
  6945                           	callstack 0
  6946   004F5C                     _color_click_init:
  6947                           	callstack 21
  6948   004F5C                     
  6949                           ;color.c: 10:     I2C_2_Master_Init();
  6950   004F5C  EC11  F028         	call	_I2C_2_Master_Init	;wreg free
  6951   004F60                     
  6952                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  6953   004F60  0E01               	movlw	1
  6954   004F62  6E11               	movwf	color_writetoaddr@value^0,c
  6955   004F64  0E00               	movlw	0
  6956   004F66  ECAD  F028         	call	_color_writetoaddr
  6957   004F6A                     
  6958                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6959   004F6A  0E3F               	movlw	63
  6960   004F6C  6E21               	movwf	??_color_click_init^0,c
  6961   004F6E  0E55               	movlw	85
  6962   004F70                     u5137:
  6963   004F70  2EE8               	decfsz	wreg,f,c
  6964   004F72  D7FE               	bra	u5137
  6965   004F74  2E21               	decfsz	??_color_click_init^0,f,c
  6966   004F76  D7FC               	bra	u5137
  6967   004F78  0000               	nop	
  6968   004F7A                     
  6969                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  6970   004F7A  0E03               	movlw	3
  6971   004F7C  6E11               	movwf	color_writetoaddr@value^0,c
  6972   004F7E  0E00               	movlw	0
  6973   004F80  ECAD  F028         	call	_color_writetoaddr
  6974   004F84                     
  6975                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  6976   004F84  0ED5               	movlw	213
  6977   004F86  6E11               	movwf	color_writetoaddr@value^0,c
  6978   004F88  0E01               	movlw	1
  6979   004F8A  ECAD  F028         	call	_color_writetoaddr
  6980   004F8E                     
  6981                           ;color.c: 23:     color_clear_init_interrupts();
  6982   004F8E  ECAC  F025         	call	_color_clear_init_interrupts	;wreg free
  6983   004F92  0012               	return		;funcret
  6984   004F94                     __end_of_color_click_init:
  6985                           	callstack 0
  6986                           
  6987 ;; *************** function _color_clear_init_interrupts *****************
  6988 ;; Defined at:
  6989 ;;		line 27 in file "color.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;		None
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;  low_threshol    2   30[COMRAM] unsigned int 
  6994 ;;  high_thresho    2   28[COMRAM] unsigned int 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  1    wreg      void 
  6997 ;; Registers used:
  6998 ;;		wreg, status,2, status,0, cstack
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7005 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7007 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7008 ;;Total ram usage:        5 bytes
  7009 ;; Hardware stack levels used: 1
  7010 ;; Hardware stack levels required when called: 8
  7011 ;; This function calls:
  7012 ;;		_I2C_2_Master_Start
  7013 ;;		_I2C_2_Master_Stop
  7014 ;;		_I2C_2_Master_Write
  7015 ;;		___lwdiv
  7016 ;;		_color_writetoaddr
  7017 ;; This function is called by:
  7018 ;;		_color_click_init
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           	psect	text15
  7023   004B58                     __ptext15:
  7024                           	callstack 0
  7025   004B58                     _color_clear_init_interrupts:
  7026                           	callstack 21
  7027   004B58                     
  7028                           ;color.c: 29:     I2C_2_Master_Start();
  7029   004B58  EC32  F029         	call	_I2C_2_Master_Start	;wreg free
  7030                           
  7031                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  7032   004B5C  0E52               	movlw	82
  7033   004B5E  EC1C  F029         	call	_I2C_2_Master_Write
  7034                           
  7035                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  7036   004B62  0EE6               	movlw	230
  7037   004B64  EC1C  F029         	call	_I2C_2_Master_Write
  7038                           
  7039                           ;color.c: 32:     I2C_2_Master_Stop();
  7040   004B68  EC2D  F029         	call	_I2C_2_Master_Stop	;wreg free
  7041                           
  7042                           ;color.c: 38:     unsigned int high_threshold = ambient + (ambient/3);
  7043   004B6C  C04F  F015         	movff	_ambient,___lwdiv@dividend
  7044   004B70  C050  F016         	movff	_ambient+1,___lwdiv@dividend+1
  7045   004B74  0E00               	movlw	0
  7046   004B76  6E18               	movwf	(___lwdiv@divisor+1)^0,c
  7047   004B78  0E03               	movlw	3
  7048   004B7A  6E17               	movwf	___lwdiv@divisor^0,c
  7049   004B7C  EC96  F026         	call	___lwdiv	;wreg free
  7050   004B80  504F               	movf	_ambient^0,w,c
  7051   004B82  2415               	addwf	?___lwdiv^0,w,c
  7052   004B84  6E1D               	movwf	color_clear_init_interrupts@high_threshold^0,c
  7053   004B86  5050               	movf	(_ambient+1)^0,w,c
  7054   004B88  2016               	addwfc	(?___lwdiv+1)^0,w,c
  7055   004B8A  6E1E               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  7056                           
  7057                           ;color.c: 39:     unsigned int low_threshold = ambient - (ambient/3);
  7058   004B8C  C04F  F015         	movff	_ambient,___lwdiv@dividend
  7059   004B90  C050  F016         	movff	_ambient+1,___lwdiv@dividend+1
  7060   004B94  0E00               	movlw	0
  7061   004B96  6E18               	movwf	(___lwdiv@divisor+1)^0,c
  7062   004B98  0E03               	movlw	3
  7063   004B9A  6E17               	movwf	___lwdiv@divisor^0,c
  7064   004B9C  EC96  F026         	call	___lwdiv	;wreg free
  7065   004BA0  5015               	movf	?___lwdiv^0,w,c
  7066   004BA2  5C4F               	subwf	_ambient^0,w,c
  7067   004BA4  6E1F               	movwf	color_clear_init_interrupts@low_threshold^0,c
  7068   004BA6  5016               	movf	(?___lwdiv+1)^0,w,c
  7069   004BA8  5850               	subwfb	(_ambient+1)^0,w,c
  7070   004BAA  6E20               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  7071                           
  7072                           ;color.c: 42:  color_writetoaddr(0x00, 0x13);
  7073   004BAC  0E13               	movlw	19
  7074   004BAE  6E11               	movwf	color_writetoaddr@value^0,c
  7075   004BB0  0E00               	movlw	0
  7076   004BB2  ECAD  F028         	call	_color_writetoaddr
  7077   004BB6                     
  7078                           ;color.c: 43:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7079   004BB6  0E3F               	movlw	63
  7080   004BB8  6E1C               	movwf	??_color_clear_init_interrupts^0,c
  7081   004BBA  0E55               	movlw	85
  7082   004BBC                     u5147:
  7083   004BBC  2EE8               	decfsz	wreg,f,c
  7084   004BBE  D7FE               	bra	u5147
  7085   004BC0  2E1C               	decfsz	??_color_clear_init_interrupts^0,f,c
  7086   004BC2  D7FC               	bra	u5147
  7087   004BC4  0000               	nop	
  7088   004BC6                     
  7089                           ;color.c: 44:     color_writetoaddr(0x07, (high_threshold >> 8));
  7090   004BC6  501E               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  7091   004BC8  6E11               	movwf	color_writetoaddr@value^0,c
  7092   004BCA  0E07               	movlw	7
  7093   004BCC  ECAD  F028         	call	_color_writetoaddr
  7094   004BD0                     
  7095                           ;color.c: 45:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  7096   004BD0  C01D  F011         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  7097   004BD4  0E06               	movlw	6
  7098   004BD6  ECAD  F028         	call	_color_writetoaddr
  7099   004BDA                     
  7100                           ;color.c: 46:     color_writetoaddr(0x05, (low_threshold >> 8));
  7101   004BDA  5020               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  7102   004BDC  6E11               	movwf	color_writetoaddr@value^0,c
  7103   004BDE  0E05               	movlw	5
  7104   004BE0  ECAD  F028         	call	_color_writetoaddr
  7105   004BE4                     
  7106                           ;color.c: 47:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  7107   004BE4  C01F  F011         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  7108   004BE8  0E04               	movlw	4
  7109   004BEA  ECAD  F028         	call	_color_writetoaddr
  7110   004BEE                     
  7111                           ;color.c: 48:     color_writetoaddr(0x0C, 0b0100);
  7112   004BEE  0E04               	movlw	4
  7113   004BF0  6E11               	movwf	color_writetoaddr@value^0,c
  7114   004BF2  0E0C               	movlw	12
  7115   004BF4  ECAD  F028         	call	_color_writetoaddr
  7116   004BF8  0012               	return		;funcret
  7117   004BFA                     __end_of_color_clear_init_interrupts:
  7118                           	callstack 0
  7119                           
  7120 ;; *************** function _color_writetoaddr *****************
  7121 ;; Defined at:
  7122 ;;		line 53 in file "color.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;  address         1    wreg     unsigned char 
  7125 ;;  value           1   16[COMRAM] unsigned char 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  address         1   17[COMRAM] unsigned char 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0, cstack
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7137 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7141 ;;Total ram usage:        2 bytes
  7142 ;; Hardware stack levels used: 1
  7143 ;; Hardware stack levels required when called: 7
  7144 ;; This function calls:
  7145 ;;		_I2C_2_Master_Start
  7146 ;;		_I2C_2_Master_Stop
  7147 ;;		_I2C_2_Master_Write
  7148 ;; This function is called by:
  7149 ;;		_color_click_init
  7150 ;;		_color_clear_init_interrupts
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text16
  7155   00515A                     __ptext16:
  7156                           	callstack 0
  7157   00515A                     _color_writetoaddr:
  7158                           	callstack 22
  7159                           
  7160                           ;incstack = 0
  7161                           ;color_writetoaddr@address stored from wreg
  7162   00515A  6E12               	movwf	color_writetoaddr@address^0,c
  7163   00515C                     
  7164                           ;color.c: 54:     I2C_2_Master_Start();
  7165   00515C  EC32  F029         	call	_I2C_2_Master_Start	;wreg free
  7166                           
  7167                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  7168   005160  0E52               	movlw	82
  7169   005162  EC1C  F029         	call	_I2C_2_Master_Write
  7170                           
  7171                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
  7172   005166  5012               	movf	color_writetoaddr@address^0,w,c
  7173   005168  0980               	iorlw	128
  7174   00516A  EC1C  F029         	call	_I2C_2_Master_Write
  7175                           
  7176                           ;color.c: 57:     I2C_2_Master_Write(value);
  7177   00516E  5011               	movf	color_writetoaddr@value^0,w,c
  7178   005170  EC1C  F029         	call	_I2C_2_Master_Write
  7179                           
  7180                           ;color.c: 58:     I2C_2_Master_Stop();
  7181   005174  EC2D  F029         	call	_I2C_2_Master_Stop	;wreg free
  7182   005178  0012               	return		;funcret
  7183   00517A                     __end_of_color_writetoaddr:
  7184                           	callstack 0
  7185                           
  7186 ;; *************** function _I2C_2_Master_Init *****************
  7187 ;; Defined at:
  7188 ;;		line 4 in file "i2c.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;		None
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;		None
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  1    wreg      void 
  7195 ;; Registers used:
  7196 ;;		wreg, status,2
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7206 ;;Total ram usage:        0 bytes
  7207 ;; Hardware stack levels used: 1
  7208 ;; Hardware stack levels required when called: 5
  7209 ;; This function calls:
  7210 ;;		Nothing
  7211 ;; This function is called by:
  7212 ;;		_color_click_init
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text17
  7217   005022                     __ptext17:
  7218                           	callstack 0
  7219   005022                     _I2C_2_Master_Init:
  7220                           	callstack 24
  7221   005022                     
  7222                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7223   005022  010E               	movlb	14	; () banked
  7224   005024  51D9               	movf	217,w,b	;volatile
  7225   005026  0BF0               	andlw	-16
  7226   005028  0908               	iorlw	8
  7227   00502A  6FD9               	movwf	217,b	;volatile
  7228   00502C                     
  7229                           ; BSR set to: 14
  7230                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7231   00502C  8BD9               	bsf	217,5,b	;volatile
  7232                           
  7233                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7234   00502E  0E9F               	movlw	159
  7235   005030  6FD6               	movwf	214,b	;volatile
  7236   005032                     
  7237                           ; BSR set to: 14
  7238                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7239   005032  8A84               	bsf	132,5,c	;volatile
  7240   005034                     
  7241                           ; BSR set to: 14
  7242                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7243   005034  8C84               	bsf	132,6,c	;volatile
  7244   005036                     
  7245                           ; BSR set to: 14
  7246                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7247   005036  9BA7               	bcf	167,5,b	;volatile
  7248   005038                     
  7249                           ; BSR set to: 14
  7250                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7251   005038  9DA7               	bcf	167,6,b	;volatile
  7252                           
  7253                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7254   00503A  0E1D               	movlw	29
  7255   00503C  6F1D               	movwf	29,b	;volatile
  7256                           
  7257                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7258   00503E  0E1E               	movlw	30
  7259   005040  6F1C               	movwf	28,b	;volatile
  7260                           
  7261                           ;i2c.c: 18:   RD5PPS=0x1C;
  7262   005042  0E1C               	movlw	28
  7263   005044  6F6F               	movwf	111,b	;volatile
  7264                           
  7265                           ;i2c.c: 19:   RD6PPS=0x1B;
  7266   005046  0E1B               	movlw	27
  7267   005048  6F70               	movwf	112,b	;volatile
  7268   00504A                     
  7269                           ; BSR set to: 14
  7270   00504A  0012               	return		;funcret
  7271   00504C                     __end_of_I2C_2_Master_Init:
  7272                           	callstack 0
  7273                           
  7274 ;; *************** function _color_calibration *****************
  7275 ;; Defined at:
  7276 ;;		line 174 in file "color.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  RGBC            2   22[BANK0 ] PTR struct RGBC_val
  7279 ;;		 -> main@RGBC(8), 
  7280 ;;  HSV             2   24[BANK0 ] PTR struct HSV_val
  7281 ;;		 -> main@HSV(6), 
  7282 ;;  red             2   26[BANK0 ] PTR struct HSV_calib
  7283 ;;		 -> main@red(6), 
  7284 ;;  green           2   28[BANK0 ] PTR struct HSV_calib
  7285 ;;		 -> main@green(6), 
  7286 ;;  blue            2   30[BANK0 ] PTR struct HSV_calib
  7287 ;;		 -> main@blue(6), 
  7288 ;;  yellow          2   32[BANK0 ] PTR struct HSV_calib
  7289 ;;		 -> main@yellow(6), 
  7290 ;;  pink            2   34[BANK0 ] PTR struct HSV_calib
  7291 ;;		 -> main@pink(6), 
  7292 ;;  orange          2   36[BANK0 ] PTR struct HSV_calib
  7293 ;;		 -> main@orange(6), 
  7294 ;;  lightblue       2   38[BANK0 ] PTR struct HSV_calib
  7295 ;;		 -> main@lightblue(6), 
  7296 ;;  white           2   40[BANK0 ] PTR struct HSV_calib
  7297 ;;		 -> main@white(6), 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;		None
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  1    wreg      void 
  7302 ;; Registers used:
  7303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7309 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;Total ram usage:       22 bytes
  7314 ;; Hardware stack levels used: 1
  7315 ;; Hardware stack levels required when called: 8
  7316 ;; This function calls:
  7317 ;;		_color_read
  7318 ;;		_rgb_2_hsv
  7319 ;;		_white_Light
  7320 ;; This function is called by:
  7321 ;;		_main
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text18
  7326   00238A                     __ptext18:
  7327                           	callstack 0
  7328   00238A                     _color_calibration:
  7329                           	callstack 22
  7330   00238A                     
  7331                           ;color.c: 174: void color_calibration(RGBC_val *RGBC, HSV_val *HSV, HSV_calib *red, HSV_
      +                          calib *green, HSV_calib *blue, HSV_calib *yellow, HSV_calib *pink, HSV_calib *orange, HS
      +                          V_calib *lightblue, HSV_calib *white);color.c: 175: {;color.c: 176:     white_Light(1);
  7332   00238A  0E01               	movlw	1
  7333   00238C  EC9B  F028         	call	_white_Light
  7334   002390                     
  7335                           ;color.c: 177:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7336   002390  8680               	bsf	128,3,c	;volatile
  7337   002392  8E7C               	bsf	124,7,c	;volatile
  7338   002394                     l178:
  7339   002394  B48E               	btfsc	142,2,c	;volatile
  7340   002396  EFCF  F011         	goto	u2661
  7341   00239A  EFD1  F011         	goto	u2660
  7342   00239E                     u2661:
  7343   00239E  EFCA  F011         	goto	l178
  7344   0023A2                     u2660:
  7345   0023A2                     
  7346                           ;color.c: 180:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7347   0023A2  9680               	bcf	128,3,c	;volatile
  7348   0023A4  9E7C               	bcf	124,7,c	;volatile
  7349   0023A6                     
  7350                           ;color.c: 181:     color_read(RGBC);
  7351   0023A6  C0C6  F013         	movff	color_calibration@RGBC,color_read@RGBC
  7352   0023AA  C0C7  F014         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7353   0023AE  EC13  F01E         	call	_color_read	;wreg free
  7354   0023B2                     
  7355                           ;color.c: 182:     rgb_2_hsv(*RGBC, HSV);
  7356   0023B2  C0C6  FFD9         	movff	color_calibration@RGBC,fsr2l
  7357   0023B6  C0C7  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7358   0023BA  EE00  F029         	lfsr	0,rgb_2_hsv@RGBC
  7359   0023BE  0E07               	movlw	7
  7360   0023C0                     u2671:
  7361   0023C0  CFDB FFEB          	movff	plusw2,plusw0
  7362   0023C4  06E8               	decf	wreg,f,c
  7363   0023C6  E2FC               	bc	u2671
  7364   0023C8  C0C8  F031         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7365   0023CC  C0C9  F032         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7366   0023D0  EC42  F017         	call	_rgb_2_hsv	;wreg free
  7367   0023D4                     
  7368                           ;color.c: 183:     red->H = HSV->H;
  7369   0023D4  C0C8  FFD9         	movff	color_calibration@HSV,fsr2l
  7370   0023D8  C0C9  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7371   0023DC  C0CA  FFE1         	movff	color_calibration@red,fsr1l
  7372   0023E0  C0CB  FFE2         	movff	color_calibration@red+1,fsr1h
  7373   0023E4  CFDE FFE6          	movff	postinc2,postinc1
  7374   0023E8  CFDD FFE5          	movff	postdec2,postdec1
  7375   0023EC                     
  7376                           ;color.c: 184:     red->S = HSV->S;
  7377   0023EC  0100               	movlb	0	; () banked
  7378   0023EE  EE20 F002          	lfsr	2,2
  7379   0023F2  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7380   0023F4  26D9               	addwf	fsr2l,f,c
  7381   0023F6  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7382   0023F8  22DA               	addwfc	fsr2h,f,c
  7383   0023FA  EE10 F002          	lfsr	1,2
  7384   0023FE  51CA               	movf	color_calibration@red& (0+255),w,b
  7385   002400  26E1               	addwf	fsr1l,f,c
  7386   002402  51CB               	movf	(color_calibration@red+1)& (0+255),w,b
  7387   002404  22E2               	addwfc	fsr1h,f,c
  7388   002406  CFDE FFE6          	movff	postinc2,postinc1
  7389   00240A  CFDD FFE5          	movff	postdec2,postdec1
  7390   00240E                     
  7391                           ; BSR set to: 0
  7392                           ;color.c: 185:     red->V = HSV->V;
  7393   00240E  EE20 F004          	lfsr	2,4
  7394   002412  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7395   002414  26D9               	addwf	fsr2l,f,c
  7396   002416  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7397   002418  22DA               	addwfc	fsr2h,f,c
  7398   00241A  EE10 F004          	lfsr	1,4
  7399   00241E  51CA               	movf	color_calibration@red& (0+255),w,b
  7400   002420  26E1               	addwf	fsr1l,f,c
  7401   002422  51CB               	movf	(color_calibration@red+1)& (0+255),w,b
  7402   002424  22E2               	addwfc	fsr1h,f,c
  7403   002426  CFDE FFE6          	movff	postinc2,postinc1
  7404   00242A  CFDD FFE5          	movff	postdec2,postdec1
  7405   00242E                     
  7406                           ; BSR set to: 0
  7407                           ;color.c: 187:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7408   00242E  0E29               	movlw	41
  7409   002430  6E40               	movwf	(??_color_calibration+1)^0,c
  7410   002432  0E96               	movlw	150
  7411   002434  6E3F               	movwf	??_color_calibration^0,c
  7412   002436  0E7F               	movlw	127
  7413   002438                     u5157:
  7414   002438  2EE8               	decfsz	wreg,f,c
  7415   00243A  D7FE               	bra	u5157
  7416   00243C  2E3F               	decfsz	??_color_calibration^0,f,c
  7417   00243E  D7FC               	bra	u5157
  7418   002440  2E40               	decfsz	(??_color_calibration+1)^0,f,c
  7419   002442  D7FA               	bra	u5157
  7420   002444  0000               	nop	
  7421   002446                     
  7422                           ;color.c: 188:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7423   002446  8680               	bsf	128,3,c	;volatile
  7424   002448  8E7C               	bsf	124,7,c	;volatile
  7425   00244A                     l181:
  7426   00244A  B48E               	btfsc	142,2,c	;volatile
  7427   00244C  EF2A  F012         	goto	u2681
  7428   002450  EF2C  F012         	goto	u2680
  7429   002454                     u2681:
  7430   002454  EF25  F012         	goto	l181
  7431   002458                     u2680:
  7432   002458                     
  7433                           ;color.c: 191:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7434   002458  9680               	bcf	128,3,c	;volatile
  7435   00245A  9E7C               	bcf	124,7,c	;volatile
  7436   00245C                     
  7437                           ;color.c: 192:     color_read(RGBC);
  7438   00245C  C0C6  F013         	movff	color_calibration@RGBC,color_read@RGBC
  7439   002460  C0C7  F014         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7440   002464  EC13  F01E         	call	_color_read	;wreg free
  7441   002468                     
  7442                           ;color.c: 193:     rgb_2_hsv(*RGBC, HSV);
  7443   002468  C0C6  FFD9         	movff	color_calibration@RGBC,fsr2l
  7444   00246C  C0C7  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7445   002470  EE00  F029         	lfsr	0,rgb_2_hsv@RGBC
  7446   002474  0E07               	movlw	7
  7447   002476                     u2691:
  7448   002476  CFDB FFEB          	movff	plusw2,plusw0
  7449   00247A  06E8               	decf	wreg,f,c
  7450   00247C  E2FC               	bc	u2691
  7451   00247E  C0C8  F031         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7452   002482  C0C9  F032         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7453   002486  EC42  F017         	call	_rgb_2_hsv	;wreg free
  7454   00248A                     
  7455                           ;color.c: 194:     green->H = HSV->H;
  7456   00248A  C0C8  FFD9         	movff	color_calibration@HSV,fsr2l
  7457   00248E  C0C9  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7458   002492  C0CC  FFE1         	movff	color_calibration@green,fsr1l
  7459   002496  C0CD  FFE2         	movff	color_calibration@green+1,fsr1h
  7460   00249A  CFDE FFE6          	movff	postinc2,postinc1
  7461   00249E  CFDD FFE5          	movff	postdec2,postdec1
  7462   0024A2                     
  7463                           ;color.c: 195:     green->S = HSV->S;
  7464   0024A2  0100               	movlb	0	; () banked
  7465   0024A4  EE20 F002          	lfsr	2,2
  7466   0024A8  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7467   0024AA  26D9               	addwf	fsr2l,f,c
  7468   0024AC  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7469   0024AE  22DA               	addwfc	fsr2h,f,c
  7470   0024B0  EE10 F002          	lfsr	1,2
  7471   0024B4  51CC               	movf	color_calibration@green& (0+255),w,b
  7472   0024B6  26E1               	addwf	fsr1l,f,c
  7473   0024B8  51CD               	movf	(color_calibration@green+1)& (0+255),w,b
  7474   0024BA  22E2               	addwfc	fsr1h,f,c
  7475   0024BC  CFDE FFE6          	movff	postinc2,postinc1
  7476   0024C0  CFDD FFE5          	movff	postdec2,postdec1
  7477   0024C4                     
  7478                           ; BSR set to: 0
  7479                           ;color.c: 196:     green->V = HSV->V;
  7480   0024C4  EE20 F004          	lfsr	2,4
  7481   0024C8  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7482   0024CA  26D9               	addwf	fsr2l,f,c
  7483   0024CC  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7484   0024CE  22DA               	addwfc	fsr2h,f,c
  7485   0024D0  EE10 F004          	lfsr	1,4
  7486   0024D4  51CC               	movf	color_calibration@green& (0+255),w,b
  7487   0024D6  26E1               	addwf	fsr1l,f,c
  7488   0024D8  51CD               	movf	(color_calibration@green+1)& (0+255),w,b
  7489   0024DA  22E2               	addwfc	fsr1h,f,c
  7490   0024DC  CFDE FFE6          	movff	postinc2,postinc1
  7491   0024E0  CFDD FFE5          	movff	postdec2,postdec1
  7492   0024E4                     
  7493                           ; BSR set to: 0
  7494                           ;color.c: 198:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7495   0024E4  0E29               	movlw	41
  7496   0024E6  6E40               	movwf	(??_color_calibration+1)^0,c
  7497   0024E8  0E96               	movlw	150
  7498   0024EA  6E3F               	movwf	??_color_calibration^0,c
  7499   0024EC  0E7F               	movlw	127
  7500   0024EE                     u5167:
  7501   0024EE  2EE8               	decfsz	wreg,f,c
  7502   0024F0  D7FE               	bra	u5167
  7503   0024F2  2E3F               	decfsz	??_color_calibration^0,f,c
  7504   0024F4  D7FC               	bra	u5167
  7505   0024F6  2E40               	decfsz	(??_color_calibration+1)^0,f,c
  7506   0024F8  D7FA               	bra	u5167
  7507   0024FA  0000               	nop	
  7508   0024FC                     
  7509                           ;color.c: 199:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7510   0024FC  8680               	bsf	128,3,c	;volatile
  7511   0024FE  8E7C               	bsf	124,7,c	;volatile
  7512   002500                     l184:
  7513   002500  B48E               	btfsc	142,2,c	;volatile
  7514   002502  EF85  F012         	goto	u2701
  7515   002506  EF87  F012         	goto	u2700
  7516   00250A                     u2701:
  7517   00250A  EF80  F012         	goto	l184
  7518   00250E                     u2700:
  7519   00250E                     
  7520                           ;color.c: 202:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7521   00250E  9680               	bcf	128,3,c	;volatile
  7522   002510  9E7C               	bcf	124,7,c	;volatile
  7523   002512                     
  7524                           ;color.c: 203:     color_read(RGBC);
  7525   002512  C0C6  F013         	movff	color_calibration@RGBC,color_read@RGBC
  7526   002516  C0C7  F014         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7527   00251A  EC13  F01E         	call	_color_read	;wreg free
  7528   00251E                     
  7529                           ;color.c: 204:     rgb_2_hsv(*RGBC, HSV);
  7530   00251E  C0C6  FFD9         	movff	color_calibration@RGBC,fsr2l
  7531   002522  C0C7  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7532   002526  EE00  F029         	lfsr	0,rgb_2_hsv@RGBC
  7533   00252A  0E07               	movlw	7
  7534   00252C                     u2711:
  7535   00252C  CFDB FFEB          	movff	plusw2,plusw0
  7536   002530  06E8               	decf	wreg,f,c
  7537   002532  E2FC               	bc	u2711
  7538   002534  C0C8  F031         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7539   002538  C0C9  F032         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7540   00253C  EC42  F017         	call	_rgb_2_hsv	;wreg free
  7541   002540                     
  7542                           ;color.c: 205:     blue->H = HSV->H;
  7543   002540  C0C8  FFD9         	movff	color_calibration@HSV,fsr2l
  7544   002544  C0C9  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7545   002548  C0CE  FFE1         	movff	color_calibration@blue,fsr1l
  7546   00254C  C0CF  FFE2         	movff	color_calibration@blue+1,fsr1h
  7547   002550  CFDE FFE6          	movff	postinc2,postinc1
  7548   002554  CFDD FFE5          	movff	postdec2,postdec1
  7549   002558                     
  7550                           ;color.c: 206:     blue->S = HSV->S;
  7551   002558  0100               	movlb	0	; () banked
  7552   00255A  EE20 F002          	lfsr	2,2
  7553   00255E  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7554   002560  26D9               	addwf	fsr2l,f,c
  7555   002562  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7556   002564  22DA               	addwfc	fsr2h,f,c
  7557   002566  EE10 F002          	lfsr	1,2
  7558   00256A  51CE               	movf	color_calibration@blue& (0+255),w,b
  7559   00256C  26E1               	addwf	fsr1l,f,c
  7560   00256E  51CF               	movf	(color_calibration@blue+1)& (0+255),w,b
  7561   002570  22E2               	addwfc	fsr1h,f,c
  7562   002572  CFDE FFE6          	movff	postinc2,postinc1
  7563   002576  CFDD FFE5          	movff	postdec2,postdec1
  7564   00257A                     
  7565                           ; BSR set to: 0
  7566                           ;color.c: 207:     blue->V = HSV->V;
  7567   00257A  EE20 F004          	lfsr	2,4
  7568   00257E  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7569   002580  26D9               	addwf	fsr2l,f,c
  7570   002582  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7571   002584  22DA               	addwfc	fsr2h,f,c
  7572   002586  EE10 F004          	lfsr	1,4
  7573   00258A  51CE               	movf	color_calibration@blue& (0+255),w,b
  7574   00258C  26E1               	addwf	fsr1l,f,c
  7575   00258E  51CF               	movf	(color_calibration@blue+1)& (0+255),w,b
  7576   002590  22E2               	addwfc	fsr1h,f,c
  7577   002592  CFDE FFE6          	movff	postinc2,postinc1
  7578   002596  CFDD FFE5          	movff	postdec2,postdec1
  7579   00259A                     
  7580                           ; BSR set to: 0
  7581                           ;color.c: 209:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7582   00259A  0E29               	movlw	41
  7583   00259C  6E40               	movwf	(??_color_calibration+1)^0,c
  7584   00259E  0E96               	movlw	150
  7585   0025A0  6E3F               	movwf	??_color_calibration^0,c
  7586   0025A2  0E7F               	movlw	127
  7587   0025A4                     u5177:
  7588   0025A4  2EE8               	decfsz	wreg,f,c
  7589   0025A6  D7FE               	bra	u5177
  7590   0025A8  2E3F               	decfsz	??_color_calibration^0,f,c
  7591   0025AA  D7FC               	bra	u5177
  7592   0025AC  2E40               	decfsz	(??_color_calibration+1)^0,f,c
  7593   0025AE  D7FA               	bra	u5177
  7594   0025B0  0000               	nop	
  7595   0025B2                     
  7596                           ;color.c: 210:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7597   0025B2  8680               	bsf	128,3,c	;volatile
  7598   0025B4  8E7C               	bsf	124,7,c	;volatile
  7599   0025B6                     l187:
  7600   0025B6  B48E               	btfsc	142,2,c	;volatile
  7601   0025B8  EFE0  F012         	goto	u2721
  7602   0025BC  EFE2  F012         	goto	u2720
  7603   0025C0                     u2721:
  7604   0025C0  EFDB  F012         	goto	l187
  7605   0025C4                     u2720:
  7606   0025C4                     
  7607                           ;color.c: 213:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7608   0025C4  9680               	bcf	128,3,c	;volatile
  7609   0025C6  9E7C               	bcf	124,7,c	;volatile
  7610   0025C8                     
  7611                           ;color.c: 214:     color_read(RGBC);
  7612   0025C8  C0C6  F013         	movff	color_calibration@RGBC,color_read@RGBC
  7613   0025CC  C0C7  F014         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7614   0025D0  EC13  F01E         	call	_color_read	;wreg free
  7615   0025D4                     
  7616                           ;color.c: 215:     rgb_2_hsv(*RGBC, HSV);
  7617   0025D4  C0C6  FFD9         	movff	color_calibration@RGBC,fsr2l
  7618   0025D8  C0C7  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7619   0025DC  EE00  F029         	lfsr	0,rgb_2_hsv@RGBC
  7620   0025E0  0E07               	movlw	7
  7621   0025E2                     u2731:
  7622   0025E2  CFDB FFEB          	movff	plusw2,plusw0
  7623   0025E6  06E8               	decf	wreg,f,c
  7624   0025E8  E2FC               	bc	u2731
  7625   0025EA  C0C8  F031         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7626   0025EE  C0C9  F032         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7627   0025F2  EC42  F017         	call	_rgb_2_hsv	;wreg free
  7628   0025F6                     
  7629                           ;color.c: 216:     yellow->H = HSV->H;
  7630   0025F6  C0C8  FFD9         	movff	color_calibration@HSV,fsr2l
  7631   0025FA  C0C9  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7632   0025FE  C0D0  FFE1         	movff	color_calibration@yellow,fsr1l
  7633   002602  C0D1  FFE2         	movff	color_calibration@yellow+1,fsr1h
  7634   002606  CFDE FFE6          	movff	postinc2,postinc1
  7635   00260A  CFDD FFE5          	movff	postdec2,postdec1
  7636   00260E                     
  7637                           ;color.c: 217:     yellow->S = HSV->S;
  7638   00260E  0100               	movlb	0	; () banked
  7639   002610  EE20 F002          	lfsr	2,2
  7640   002614  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7641   002616  26D9               	addwf	fsr2l,f,c
  7642   002618  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7643   00261A  22DA               	addwfc	fsr2h,f,c
  7644   00261C  EE10 F002          	lfsr	1,2
  7645   002620  51D0               	movf	color_calibration@yellow& (0+255),w,b
  7646   002622  26E1               	addwf	fsr1l,f,c
  7647   002624  51D1               	movf	(color_calibration@yellow+1)& (0+255),w,b
  7648   002626  22E2               	addwfc	fsr1h,f,c
  7649   002628  CFDE FFE6          	movff	postinc2,postinc1
  7650   00262C  CFDD FFE5          	movff	postdec2,postdec1
  7651   002630                     
  7652                           ; BSR set to: 0
  7653                           ;color.c: 218:     yellow->V = HSV->V;
  7654   002630  EE20 F004          	lfsr	2,4
  7655   002634  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7656   002636  26D9               	addwf	fsr2l,f,c
  7657   002638  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7658   00263A  22DA               	addwfc	fsr2h,f,c
  7659   00263C  EE10 F004          	lfsr	1,4
  7660   002640  51D0               	movf	color_calibration@yellow& (0+255),w,b
  7661   002642  26E1               	addwf	fsr1l,f,c
  7662   002644  51D1               	movf	(color_calibration@yellow+1)& (0+255),w,b
  7663   002646  22E2               	addwfc	fsr1h,f,c
  7664   002648  CFDE FFE6          	movff	postinc2,postinc1
  7665   00264C  CFDD FFE5          	movff	postdec2,postdec1
  7666   002650                     
  7667                           ; BSR set to: 0
  7668                           ;color.c: 220:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7669   002650  0E29               	movlw	41
  7670   002652  6E40               	movwf	(??_color_calibration+1)^0,c
  7671   002654  0E96               	movlw	150
  7672   002656  6E3F               	movwf	??_color_calibration^0,c
  7673   002658  0E7F               	movlw	127
  7674   00265A                     u5187:
  7675   00265A  2EE8               	decfsz	wreg,f,c
  7676   00265C  D7FE               	bra	u5187
  7677   00265E  2E3F               	decfsz	??_color_calibration^0,f,c
  7678   002660  D7FC               	bra	u5187
  7679   002662  2E40               	decfsz	(??_color_calibration+1)^0,f,c
  7680   002664  D7FA               	bra	u5187
  7681   002666  0000               	nop	
  7682   002668                     
  7683                           ;color.c: 221:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7684   002668  8680               	bsf	128,3,c	;volatile
  7685   00266A  8E7C               	bsf	124,7,c	;volatile
  7686   00266C                     l190:
  7687   00266C  B48E               	btfsc	142,2,c	;volatile
  7688   00266E  EF3B  F013         	goto	u2741
  7689   002672  EF3D  F013         	goto	u2740
  7690   002676                     u2741:
  7691   002676  EF36  F013         	goto	l190
  7692   00267A                     u2740:
  7693   00267A                     
  7694                           ;color.c: 224:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7695   00267A  9680               	bcf	128,3,c	;volatile
  7696   00267C  9E7C               	bcf	124,7,c	;volatile
  7697   00267E                     
  7698                           ;color.c: 225:     color_read(RGBC);
  7699   00267E  C0C6  F013         	movff	color_calibration@RGBC,color_read@RGBC
  7700   002682  C0C7  F014         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7701   002686  EC13  F01E         	call	_color_read	;wreg free
  7702   00268A                     
  7703                           ;color.c: 226:     rgb_2_hsv(*RGBC, HSV);
  7704   00268A  C0C6  FFD9         	movff	color_calibration@RGBC,fsr2l
  7705   00268E  C0C7  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7706   002692  EE00  F029         	lfsr	0,rgb_2_hsv@RGBC
  7707   002696  0E07               	movlw	7
  7708   002698                     u2751:
  7709   002698  CFDB FFEB          	movff	plusw2,plusw0
  7710   00269C  06E8               	decf	wreg,f,c
  7711   00269E  E2FC               	bc	u2751
  7712   0026A0  C0C8  F031         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7713   0026A4  C0C9  F032         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7714   0026A8  EC42  F017         	call	_rgb_2_hsv	;wreg free
  7715   0026AC                     
  7716                           ;color.c: 227:     pink->H = HSV->H;
  7717   0026AC  C0C8  FFD9         	movff	color_calibration@HSV,fsr2l
  7718   0026B0  C0C9  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7719   0026B4  C0D2  FFE1         	movff	color_calibration@pink,fsr1l
  7720   0026B8  C0D3  FFE2         	movff	color_calibration@pink+1,fsr1h
  7721   0026BC  CFDE FFE6          	movff	postinc2,postinc1
  7722   0026C0  CFDD FFE5          	movff	postdec2,postdec1
  7723   0026C4                     
  7724                           ;color.c: 228:     pink->S = HSV->S;
  7725   0026C4  0100               	movlb	0	; () banked
  7726   0026C6  EE20 F002          	lfsr	2,2
  7727   0026CA  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7728   0026CC  26D9               	addwf	fsr2l,f,c
  7729   0026CE  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7730   0026D0  22DA               	addwfc	fsr2h,f,c
  7731   0026D2  EE10 F002          	lfsr	1,2
  7732   0026D6  51D2               	movf	color_calibration@pink& (0+255),w,b
  7733   0026D8  26E1               	addwf	fsr1l,f,c
  7734   0026DA  51D3               	movf	(color_calibration@pink+1)& (0+255),w,b
  7735   0026DC  22E2               	addwfc	fsr1h,f,c
  7736   0026DE  CFDE FFE6          	movff	postinc2,postinc1
  7737   0026E2  CFDD FFE5          	movff	postdec2,postdec1
  7738   0026E6                     
  7739                           ; BSR set to: 0
  7740                           ;color.c: 229:     pink->V = HSV->V;
  7741   0026E6  EE20 F004          	lfsr	2,4
  7742   0026EA  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7743   0026EC  26D9               	addwf	fsr2l,f,c
  7744   0026EE  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7745   0026F0  22DA               	addwfc	fsr2h,f,c
  7746   0026F2  EE10 F004          	lfsr	1,4
  7747   0026F6  51D2               	movf	color_calibration@pink& (0+255),w,b
  7748   0026F8  26E1               	addwf	fsr1l,f,c
  7749   0026FA  51D3               	movf	(color_calibration@pink+1)& (0+255),w,b
  7750   0026FC  22E2               	addwfc	fsr1h,f,c
  7751   0026FE  CFDE FFE6          	movff	postinc2,postinc1
  7752   002702  CFDD FFE5          	movff	postdec2,postdec1
  7753   002706                     
  7754                           ; BSR set to: 0
  7755                           ;color.c: 231:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7756   002706  0E29               	movlw	41
  7757   002708  6E40               	movwf	(??_color_calibration+1)^0,c
  7758   00270A  0E96               	movlw	150
  7759   00270C  6E3F               	movwf	??_color_calibration^0,c
  7760   00270E  0E7F               	movlw	127
  7761   002710                     u5197:
  7762   002710  2EE8               	decfsz	wreg,f,c
  7763   002712  D7FE               	bra	u5197
  7764   002714  2E3F               	decfsz	??_color_calibration^0,f,c
  7765   002716  D7FC               	bra	u5197
  7766   002718  2E40               	decfsz	(??_color_calibration+1)^0,f,c
  7767   00271A  D7FA               	bra	u5197
  7768   00271C  0000               	nop	
  7769   00271E                     
  7770                           ;color.c: 232:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7771   00271E  8680               	bsf	128,3,c	;volatile
  7772   002720  8E7C               	bsf	124,7,c	;volatile
  7773   002722                     l193:
  7774   002722  B48E               	btfsc	142,2,c	;volatile
  7775   002724  EF96  F013         	goto	u2761
  7776   002728  EF98  F013         	goto	u2760
  7777   00272C                     u2761:
  7778   00272C  EF91  F013         	goto	l193
  7779   002730                     u2760:
  7780   002730                     
  7781                           ;color.c: 235:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7782   002730  9680               	bcf	128,3,c	;volatile
  7783   002732  9E7C               	bcf	124,7,c	;volatile
  7784   002734                     
  7785                           ;color.c: 236:     color_read(RGBC);
  7786   002734  C0C6  F013         	movff	color_calibration@RGBC,color_read@RGBC
  7787   002738  C0C7  F014         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7788   00273C  EC13  F01E         	call	_color_read	;wreg free
  7789   002740                     
  7790                           ;color.c: 237:     rgb_2_hsv(*RGBC, HSV);
  7791   002740  C0C6  FFD9         	movff	color_calibration@RGBC,fsr2l
  7792   002744  C0C7  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7793   002748  EE00  F029         	lfsr	0,rgb_2_hsv@RGBC
  7794   00274C  0E07               	movlw	7
  7795   00274E                     u2771:
  7796   00274E  CFDB FFEB          	movff	plusw2,plusw0
  7797   002752  06E8               	decf	wreg,f,c
  7798   002754  E2FC               	bc	u2771
  7799   002756  C0C8  F031         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7800   00275A  C0C9  F032         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7801   00275E  EC42  F017         	call	_rgb_2_hsv	;wreg free
  7802   002762                     
  7803                           ;color.c: 238:     orange->H = HSV->H;
  7804   002762  C0C8  FFD9         	movff	color_calibration@HSV,fsr2l
  7805   002766  C0C9  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7806   00276A  C0D4  FFE1         	movff	color_calibration@orange,fsr1l
  7807   00276E  C0D5  FFE2         	movff	color_calibration@orange+1,fsr1h
  7808   002772  CFDE FFE6          	movff	postinc2,postinc1
  7809   002776  CFDD FFE5          	movff	postdec2,postdec1
  7810   00277A                     
  7811                           ;color.c: 239:     orange->S = HSV->S;
  7812   00277A  0100               	movlb	0	; () banked
  7813   00277C  EE20 F002          	lfsr	2,2
  7814   002780  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7815   002782  26D9               	addwf	fsr2l,f,c
  7816   002784  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7817   002786  22DA               	addwfc	fsr2h,f,c
  7818   002788  EE10 F002          	lfsr	1,2
  7819   00278C  51D4               	movf	color_calibration@orange& (0+255),w,b
  7820   00278E  26E1               	addwf	fsr1l,f,c
  7821   002790  51D5               	movf	(color_calibration@orange+1)& (0+255),w,b
  7822   002792  22E2               	addwfc	fsr1h,f,c
  7823   002794  CFDE FFE6          	movff	postinc2,postinc1
  7824   002798  CFDD FFE5          	movff	postdec2,postdec1
  7825   00279C                     
  7826                           ; BSR set to: 0
  7827                           ;color.c: 240:     orange->V = HSV->V;
  7828   00279C  EE20 F004          	lfsr	2,4
  7829   0027A0  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7830   0027A2  26D9               	addwf	fsr2l,f,c
  7831   0027A4  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7832   0027A6  22DA               	addwfc	fsr2h,f,c
  7833   0027A8  EE10 F004          	lfsr	1,4
  7834   0027AC  51D4               	movf	color_calibration@orange& (0+255),w,b
  7835   0027AE  26E1               	addwf	fsr1l,f,c
  7836   0027B0  51D5               	movf	(color_calibration@orange+1)& (0+255),w,b
  7837   0027B2  22E2               	addwfc	fsr1h,f,c
  7838   0027B4  CFDE FFE6          	movff	postinc2,postinc1
  7839   0027B8  CFDD FFE5          	movff	postdec2,postdec1
  7840   0027BC                     
  7841                           ; BSR set to: 0
  7842                           ;color.c: 242:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7843   0027BC  0E29               	movlw	41
  7844   0027BE  6E40               	movwf	(??_color_calibration+1)^0,c
  7845   0027C0  0E96               	movlw	150
  7846   0027C2  6E3F               	movwf	??_color_calibration^0,c
  7847   0027C4  0E7F               	movlw	127
  7848   0027C6                     u5207:
  7849   0027C6  2EE8               	decfsz	wreg,f,c
  7850   0027C8  D7FE               	bra	u5207
  7851   0027CA  2E3F               	decfsz	??_color_calibration^0,f,c
  7852   0027CC  D7FC               	bra	u5207
  7853   0027CE  2E40               	decfsz	(??_color_calibration+1)^0,f,c
  7854   0027D0  D7FA               	bra	u5207
  7855   0027D2  0000               	nop	
  7856   0027D4                     
  7857                           ;color.c: 243:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7858   0027D4  8680               	bsf	128,3,c	;volatile
  7859   0027D6  8E7C               	bsf	124,7,c	;volatile
  7860   0027D8                     l196:
  7861   0027D8  B48E               	btfsc	142,2,c	;volatile
  7862   0027DA  EFF1  F013         	goto	u2781
  7863   0027DE  EFF3  F013         	goto	u2780
  7864   0027E2                     u2781:
  7865   0027E2  EFEC  F013         	goto	l196
  7866   0027E6                     u2780:
  7867   0027E6                     
  7868                           ;color.c: 246:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7869   0027E6  9680               	bcf	128,3,c	;volatile
  7870   0027E8  9E7C               	bcf	124,7,c	;volatile
  7871   0027EA                     
  7872                           ;color.c: 247:     color_read(RGBC);
  7873   0027EA  C0C6  F013         	movff	color_calibration@RGBC,color_read@RGBC
  7874   0027EE  C0C7  F014         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7875   0027F2  EC13  F01E         	call	_color_read	;wreg free
  7876   0027F6                     
  7877                           ;color.c: 248:     rgb_2_hsv(*RGBC, HSV);
  7878   0027F6  C0C6  FFD9         	movff	color_calibration@RGBC,fsr2l
  7879   0027FA  C0C7  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7880   0027FE  EE00  F029         	lfsr	0,rgb_2_hsv@RGBC
  7881   002802  0E07               	movlw	7
  7882   002804                     u2791:
  7883   002804  CFDB FFEB          	movff	plusw2,plusw0
  7884   002808  06E8               	decf	wreg,f,c
  7885   00280A  E2FC               	bc	u2791
  7886   00280C  C0C8  F031         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7887   002810  C0C9  F032         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7888   002814  EC42  F017         	call	_rgb_2_hsv	;wreg free
  7889   002818                     
  7890                           ;color.c: 249:     lightblue->H = HSV->H;
  7891   002818  C0C8  FFD9         	movff	color_calibration@HSV,fsr2l
  7892   00281C  C0C9  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7893   002820  C0D6  FFE1         	movff	color_calibration@lightblue,fsr1l
  7894   002824  C0D7  FFE2         	movff	color_calibration@lightblue+1,fsr1h
  7895   002828  CFDE FFE6          	movff	postinc2,postinc1
  7896   00282C  CFDD FFE5          	movff	postdec2,postdec1
  7897   002830                     
  7898                           ;color.c: 250:     lightblue->S = HSV->S;
  7899   002830  0100               	movlb	0	; () banked
  7900   002832  EE20 F002          	lfsr	2,2
  7901   002836  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7902   002838  26D9               	addwf	fsr2l,f,c
  7903   00283A  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7904   00283C  22DA               	addwfc	fsr2h,f,c
  7905   00283E  EE10 F002          	lfsr	1,2
  7906   002842  51D6               	movf	color_calibration@lightblue& (0+255),w,b
  7907   002844  26E1               	addwf	fsr1l,f,c
  7908   002846  51D7               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  7909   002848  22E2               	addwfc	fsr1h,f,c
  7910   00284A  CFDE FFE6          	movff	postinc2,postinc1
  7911   00284E  CFDD FFE5          	movff	postdec2,postdec1
  7912   002852                     
  7913                           ; BSR set to: 0
  7914                           ;color.c: 251:     lightblue->V = HSV->V;
  7915   002852  EE20 F004          	lfsr	2,4
  7916   002856  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7917   002858  26D9               	addwf	fsr2l,f,c
  7918   00285A  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7919   00285C  22DA               	addwfc	fsr2h,f,c
  7920   00285E  EE10 F004          	lfsr	1,4
  7921   002862  51D6               	movf	color_calibration@lightblue& (0+255),w,b
  7922   002864  26E1               	addwf	fsr1l,f,c
  7923   002866  51D7               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  7924   002868  22E2               	addwfc	fsr1h,f,c
  7925   00286A  CFDE FFE6          	movff	postinc2,postinc1
  7926   00286E  CFDD FFE5          	movff	postdec2,postdec1
  7927   002872                     
  7928                           ; BSR set to: 0
  7929                           ;color.c: 253:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7930   002872  0E29               	movlw	41
  7931   002874  6E40               	movwf	(??_color_calibration+1)^0,c
  7932   002876  0E96               	movlw	150
  7933   002878  6E3F               	movwf	??_color_calibration^0,c
  7934   00287A  0E7F               	movlw	127
  7935   00287C                     u5217:
  7936   00287C  2EE8               	decfsz	wreg,f,c
  7937   00287E  D7FE               	bra	u5217
  7938   002880  2E3F               	decfsz	??_color_calibration^0,f,c
  7939   002882  D7FC               	bra	u5217
  7940   002884  2E40               	decfsz	(??_color_calibration+1)^0,f,c
  7941   002886  D7FA               	bra	u5217
  7942   002888  0000               	nop	
  7943   00288A                     
  7944                           ;color.c: 254:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7945   00288A  8680               	bsf	128,3,c	;volatile
  7946   00288C  8E7C               	bsf	124,7,c	;volatile
  7947   00288E                     l199:
  7948   00288E  B48E               	btfsc	142,2,c	;volatile
  7949   002890  EF4C  F014         	goto	u2801
  7950   002894  EF4E  F014         	goto	u2800
  7951   002898                     u2801:
  7952   002898  EF47  F014         	goto	l199
  7953   00289C                     u2800:
  7954   00289C                     
  7955                           ;color.c: 257:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7956   00289C  9680               	bcf	128,3,c	;volatile
  7957   00289E  9E7C               	bcf	124,7,c	;volatile
  7958   0028A0                     
  7959                           ;color.c: 258:     color_read(RGBC);
  7960   0028A0  C0C6  F013         	movff	color_calibration@RGBC,color_read@RGBC
  7961   0028A4  C0C7  F014         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7962   0028A8  EC13  F01E         	call	_color_read	;wreg free
  7963   0028AC                     
  7964                           ;color.c: 259:     rgb_2_hsv(*RGBC, HSV);
  7965   0028AC  C0C6  FFD9         	movff	color_calibration@RGBC,fsr2l
  7966   0028B0  C0C7  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7967   0028B4  EE00  F029         	lfsr	0,rgb_2_hsv@RGBC
  7968   0028B8  0E07               	movlw	7
  7969   0028BA                     u2811:
  7970   0028BA  CFDB FFEB          	movff	plusw2,plusw0
  7971   0028BE  06E8               	decf	wreg,f,c
  7972   0028C0  E2FC               	bc	u2811
  7973   0028C2  C0C8  F031         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7974   0028C6  C0C9  F032         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7975   0028CA  EC42  F017         	call	_rgb_2_hsv	;wreg free
  7976   0028CE                     
  7977                           ;color.c: 260:     white->H = HSV->H;
  7978   0028CE  C0C8  FFD9         	movff	color_calibration@HSV,fsr2l
  7979   0028D2  C0C9  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7980   0028D6  C0D8  FFE1         	movff	color_calibration@white,fsr1l
  7981   0028DA  C0D9  FFE2         	movff	color_calibration@white+1,fsr1h
  7982   0028DE  CFDE FFE6          	movff	postinc2,postinc1
  7983   0028E2  CFDD FFE5          	movff	postdec2,postdec1
  7984   0028E6                     
  7985                           ;color.c: 261:     white->S = HSV->S;
  7986   0028E6  0100               	movlb	0	; () banked
  7987   0028E8  EE20 F002          	lfsr	2,2
  7988   0028EC  51C8               	movf	color_calibration@HSV& (0+255),w,b
  7989   0028EE  26D9               	addwf	fsr2l,f,c
  7990   0028F0  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7991   0028F2  22DA               	addwfc	fsr2h,f,c
  7992   0028F4  EE10 F002          	lfsr	1,2
  7993   0028F8  51D8               	movf	color_calibration@white& (0+255),w,b
  7994   0028FA  26E1               	addwf	fsr1l,f,c
  7995   0028FC  51D9               	movf	(color_calibration@white+1)& (0+255),w,b
  7996   0028FE  22E2               	addwfc	fsr1h,f,c
  7997   002900  CFDE FFE6          	movff	postinc2,postinc1
  7998   002904  CFDD FFE5          	movff	postdec2,postdec1
  7999   002908                     
  8000                           ; BSR set to: 0
  8001                           ;color.c: 262:     white->V = HSV->V;
  8002   002908  EE20 F004          	lfsr	2,4
  8003   00290C  51C8               	movf	color_calibration@HSV& (0+255),w,b
  8004   00290E  26D9               	addwf	fsr2l,f,c
  8005   002910  51C9               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8006   002912  22DA               	addwfc	fsr2h,f,c
  8007   002914  EE10 F004          	lfsr	1,4
  8008   002918  51D8               	movf	color_calibration@white& (0+255),w,b
  8009   00291A  26E1               	addwf	fsr1l,f,c
  8010   00291C  51D9               	movf	(color_calibration@white+1)& (0+255),w,b
  8011   00291E  22E2               	addwfc	fsr1h,f,c
  8012   002920  CFDE FFE6          	movff	postinc2,postinc1
  8013   002924  CFDD FFE5          	movff	postdec2,postdec1
  8014   002928                     
  8015                           ; BSR set to: 0
  8016                           ;color.c: 264:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8017   002928  0E29               	movlw	41
  8018   00292A  6E40               	movwf	(??_color_calibration+1)^0,c
  8019   00292C  0E96               	movlw	150
  8020   00292E  6E3F               	movwf	??_color_calibration^0,c
  8021   002930  0E7F               	movlw	127
  8022   002932                     u5227:
  8023   002932  2EE8               	decfsz	wreg,f,c
  8024   002934  D7FE               	bra	u5227
  8025   002936  2E3F               	decfsz	??_color_calibration^0,f,c
  8026   002938  D7FC               	bra	u5227
  8027   00293A  2E40               	decfsz	(??_color_calibration+1)^0,f,c
  8028   00293C  D7FA               	bra	u5227
  8029   00293E  0000               	nop	
  8030   002940                     
  8031                           ;color.c: 265:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8032   002940  8680               	bsf	128,3,c	;volatile
  8033   002942  8E7C               	bsf	124,7,c	;volatile
  8034   002944  0012               	return		;funcret
  8035   002946                     __end_of_color_calibration:
  8036                           	callstack 0
  8037                           
  8038 ;; *************** function _white_Light *****************
  8039 ;; Defined at:
  8040 ;;		line 62 in file "color.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  state           1    wreg     unsigned char 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;  state           1   14[COMRAM] unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      void 
  8047 ;; Registers used:
  8048 ;;		wreg, status,2
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8058 ;;Total ram usage:        1 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; Hardware stack levels required when called: 5
  8061 ;; This function calls:
  8062 ;;		Nothing
  8063 ;; This function is called by:
  8064 ;;		_main
  8065 ;;		_color_calibration
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           	psect	text19
  8070   005136                     __ptext19:
  8071                           	callstack 0
  8072   005136                     _white_Light:
  8073                           	callstack 25
  8074                           
  8075                           ;incstack = 0
  8076                           ;white_Light@state stored from wreg
  8077   005136  6E0F               	movwf	white_Light@state^0,c
  8078   005138                     
  8079                           ;color.c: 62: void white_Light(char state);color.c: 63: {;color.c: 64:     if (state){
  8080   005138  500F               	movf	white_Light@state^0,w,c
  8081   00513A  B4D8               	btfsc	status,2,c
  8082   00513C  EFA2  F028         	goto	u2381
  8083   005140  EFA4  F028         	goto	u2380
  8084   005144                     u2381:
  8085   005144  EFA9  F028         	goto	l148
  8086   005148                     u2380:
  8087   005148                     
  8088                           ;color.c: 65:         LATGbits.LATG0 = 1;
  8089   005148  807F               	bsf	127,0,c	;volatile
  8090                           
  8091                           ;color.c: 66:         LATEbits.LATE7 = 1;
  8092   00514A  8E7D               	bsf	125,7,c	;volatile
  8093                           
  8094                           ;color.c: 67:         LATAbits.LATA3 = 1;
  8095   00514C  8679               	bsf	121,3,c	;volatile
  8096                           
  8097                           ;color.c: 68:     }
  8098   00514E  EFAC  F028         	goto	l150
  8099   005152                     l148:
  8100                           
  8101                           ;color.c: 70:         LATGbits.LATG0 = 0;
  8102   005152  907F               	bcf	127,0,c	;volatile
  8103                           
  8104                           ;color.c: 71:         LATEbits.LATE7 = 0;
  8105   005154  9E7D               	bcf	125,7,c	;volatile
  8106                           
  8107                           ;color.c: 72:         LATAbits.LATA3 = 0;
  8108   005156  9679               	bcf	121,3,c	;volatile
  8109   005158                     l150:
  8110   005158  0012               	return		;funcret
  8111   00515A                     __end_of_white_Light:
  8112                           	callstack 0
  8113                           
  8114 ;; *************** function _rgb_2_hsv *****************
  8115 ;; Defined at:
  8116 ;;		line 279 in file "color.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;  RGBC            8   40[COMRAM] struct RGBC_val
  8119 ;;  HSV             2   48[COMRAM] PTR struct HSV_val
  8120 ;;		 -> main@HSV(6), 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  diff            4   14[BANK0 ] unsigned long 
  8123 ;;  b               2   20[BANK0 ] unsigned int 
  8124 ;;  g               2   18[BANK0 ] unsigned int 
  8125 ;;  cmax            2   12[BANK0 ] unsigned int 
  8126 ;;  r               2   10[BANK0 ] unsigned int 
  8127 ;;  cmin            2    4[BANK0 ] unsigned int 
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  1    wreg      void 
  8130 ;; Registers used:
  8131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8132 ;; Tracked objects:
  8133 ;;		On entry : 0/0
  8134 ;;		On exit  : 0/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8137 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8138 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8139 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8140 ;;      Totals:        22      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8141 ;;Total ram usage:       44 bytes
  8142 ;; Hardware stack levels used: 1
  8143 ;; Hardware stack levels required when called: 6
  8144 ;; This function calls:
  8145 ;;		___aldiv
  8146 ;;		___lldiv
  8147 ;;		___lmul
  8148 ;;		_max
  8149 ;;		_min
  8150 ;; This function is called by:
  8151 ;;		_main
  8152 ;;		_color_calibration
  8153 ;; This function uses a non-reentrant model
  8154 ;;
  8155                           
  8156                           	psect	text20
  8157   002E84                     __ptext20:
  8158                           	callstack 0
  8159   002E84                     _rgb_2_hsv:
  8160                           	callstack 24
  8161   002E84                     
  8162                           ;color.c: 282:     unsigned int r = (unsigned int)(RGBC.R*10000L/255);
  8163   002E84  C029  F00F         	movff	rgb_2_hsv@RGBC,___lmul@multiplier
  8164   002E88  C02A  F010         	movff	rgb_2_hsv@RGBC+1,___lmul@multiplier+1
  8165   002E8C  6A11               	clrf	(___lmul@multiplier+2)^0,c
  8166   002E8E  6A12               	clrf	(___lmul@multiplier+3)^0,c
  8167   002E90  0E10               	movlw	16
  8168   002E92  6E13               	movwf	___lmul@multiplicand^0,c
  8169   002E94  0E27               	movlw	39
  8170   002E96  6E14               	movwf	(___lmul@multiplicand+1)^0,c
  8171   002E98  0E00               	movlw	0
  8172   002E9A  6E15               	movwf	(___lmul@multiplicand+2)^0,c
  8173   002E9C  0E00               	movlw	0
  8174   002E9E  6E16               	movwf	(___lmul@multiplicand+3)^0,c
  8175   002EA0  EC0A  F027         	call	___lmul	;wreg free
  8176   002EA4  C00F  F01B         	movff	?___lmul,___aldiv@dividend
  8177   002EA8  C010  F01C         	movff	?___lmul+1,___aldiv@dividend+1
  8178   002EAC  C011  F01D         	movff	?___lmul+2,___aldiv@dividend+2
  8179   002EB0  C012  F01E         	movff	?___lmul+3,___aldiv@dividend+3
  8180   002EB4  0EFF               	movlw	255
  8181   002EB6  6E1F               	movwf	___aldiv@divisor^0,c
  8182   002EB8  0E00               	movlw	0
  8183   002EBA  6E20               	movwf	(___aldiv@divisor+1)^0,c
  8184   002EBC  0E00               	movlw	0
  8185   002EBE  6E21               	movwf	(___aldiv@divisor+2)^0,c
  8186   002EC0  0E00               	movlw	0
  8187   002EC2  6E22               	movwf	(___aldiv@divisor+3)^0,c
  8188   002EC4  EC7C  F023         	call	___aldiv	;wreg free
  8189   002EC8  C01B  F0BA         	movff	?___aldiv,rgb_2_hsv@r
  8190   002ECC  C01C  F0BB         	movff	?___aldiv+1,rgb_2_hsv@r+1
  8191                           
  8192                           ;color.c: 283:     unsigned int g = (unsigned int)(RGBC.G*10000L/255);
  8193   002ED0  C02B  F00F         	movff	rgb_2_hsv@RGBC+2,___lmul@multiplier
  8194   002ED4  C02C  F010         	movff	rgb_2_hsv@RGBC+3,___lmul@multiplier+1
  8195   002ED8  6A11               	clrf	(___lmul@multiplier+2)^0,c
  8196   002EDA  6A12               	clrf	(___lmul@multiplier+3)^0,c
  8197   002EDC  0E10               	movlw	16
  8198   002EDE  6E13               	movwf	___lmul@multiplicand^0,c
  8199   002EE0  0E27               	movlw	39
  8200   002EE2  6E14               	movwf	(___lmul@multiplicand+1)^0,c
  8201   002EE4  0E00               	movlw	0
  8202   002EE6  6E15               	movwf	(___lmul@multiplicand+2)^0,c
  8203   002EE8  0E00               	movlw	0
  8204   002EEA  6E16               	movwf	(___lmul@multiplicand+3)^0,c
  8205   002EEC  EC0A  F027         	call	___lmul	;wreg free
  8206   002EF0  C00F  F01B         	movff	?___lmul,___aldiv@dividend
  8207   002EF4  C010  F01C         	movff	?___lmul+1,___aldiv@dividend+1
  8208   002EF8  C011  F01D         	movff	?___lmul+2,___aldiv@dividend+2
  8209   002EFC  C012  F01E         	movff	?___lmul+3,___aldiv@dividend+3
  8210   002F00  0EFF               	movlw	255
  8211   002F02  6E1F               	movwf	___aldiv@divisor^0,c
  8212   002F04  0E00               	movlw	0
  8213   002F06  6E20               	movwf	(___aldiv@divisor+1)^0,c
  8214   002F08  0E00               	movlw	0
  8215   002F0A  6E21               	movwf	(___aldiv@divisor+2)^0,c
  8216   002F0C  0E00               	movlw	0
  8217   002F0E  6E22               	movwf	(___aldiv@divisor+3)^0,c
  8218   002F10  EC7C  F023         	call	___aldiv	;wreg free
  8219   002F14  C01B  F0C2         	movff	?___aldiv,rgb_2_hsv@g
  8220   002F18  C01C  F0C3         	movff	?___aldiv+1,rgb_2_hsv@g+1
  8221                           
  8222                           ;color.c: 284:     unsigned int b = (unsigned int)(RGBC.B*10000L/255);
  8223   002F1C  C02D  F00F         	movff	rgb_2_hsv@RGBC+4,___lmul@multiplier
  8224   002F20  C02E  F010         	movff	rgb_2_hsv@RGBC+5,___lmul@multiplier+1
  8225   002F24  6A11               	clrf	(___lmul@multiplier+2)^0,c
  8226   002F26  6A12               	clrf	(___lmul@multiplier+3)^0,c
  8227   002F28  0E10               	movlw	16
  8228   002F2A  6E13               	movwf	___lmul@multiplicand^0,c
  8229   002F2C  0E27               	movlw	39
  8230   002F2E  6E14               	movwf	(___lmul@multiplicand+1)^0,c
  8231   002F30  0E00               	movlw	0
  8232   002F32  6E15               	movwf	(___lmul@multiplicand+2)^0,c
  8233   002F34  0E00               	movlw	0
  8234   002F36  6E16               	movwf	(___lmul@multiplicand+3)^0,c
  8235   002F38  EC0A  F027         	call	___lmul	;wreg free
  8236   002F3C  C00F  F01B         	movff	?___lmul,___aldiv@dividend
  8237   002F40  C010  F01C         	movff	?___lmul+1,___aldiv@dividend+1
  8238   002F44  C011  F01D         	movff	?___lmul+2,___aldiv@dividend+2
  8239   002F48  C012  F01E         	movff	?___lmul+3,___aldiv@dividend+3
  8240   002F4C  0EFF               	movlw	255
  8241   002F4E  6E1F               	movwf	___aldiv@divisor^0,c
  8242   002F50  0E00               	movlw	0
  8243   002F52  6E20               	movwf	(___aldiv@divisor+1)^0,c
  8244   002F54  0E00               	movlw	0
  8245   002F56  6E21               	movwf	(___aldiv@divisor+2)^0,c
  8246   002F58  0E00               	movlw	0
  8247   002F5A  6E22               	movwf	(___aldiv@divisor+3)^0,c
  8248   002F5C  EC7C  F023         	call	___aldiv	;wreg free
  8249   002F60  C01B  F0C4         	movff	?___aldiv,rgb_2_hsv@b
  8250   002F64  C01C  F0C5         	movff	?___aldiv+1,rgb_2_hsv@b+1
  8251                           
  8252                           ;color.c: 287:     unsigned int cmax = max(r, max(g, b));
  8253   002F68  C0C2  F00F         	movff	rgb_2_hsv@g,max@a
  8254   002F6C  C0C3  F010         	movff	rgb_2_hsv@g+1,max@a+1
  8255   002F70  C0C4  F011         	movff	rgb_2_hsv@b,max@b
  8256   002F74  C0C5  F012         	movff	rgb_2_hsv@b+1,max@b+1
  8257   002F78  ECFB  F027         	call	_max	;wreg free
  8258   002F7C  C00F  F0B6         	movff	?_max,_rgb_2_hsv$3592
  8259   002F80  C010  F0B7         	movff	?_max+1,_rgb_2_hsv$3592+1
  8260                           
  8261                           ;color.c: 287:     unsigned int cmax = max(r, max(g, b));
  8262   002F84  C0BA  F00F         	movff	rgb_2_hsv@r,max@a
  8263   002F88  C0BB  F010         	movff	rgb_2_hsv@r+1,max@a+1
  8264   002F8C  C0B6  F011         	movff	_rgb_2_hsv$3592,max@b
  8265   002F90  C0B7  F012         	movff	_rgb_2_hsv$3592+1,max@b+1
  8266   002F94  ECFB  F027         	call	_max	;wreg free
  8267   002F98  C00F  F0BC         	movff	?_max,rgb_2_hsv@cmax
  8268   002F9C  C010  F0BD         	movff	?_max+1,rgb_2_hsv@cmax+1
  8269                           
  8270                           ;color.c: 288:     unsigned int cmin = min(r, min(g, b));
  8271   002FA0  C0C2  F00F         	movff	rgb_2_hsv@g,min@a
  8272   002FA4  C0C3  F010         	movff	rgb_2_hsv@g+1,min@a+1
  8273   002FA8  C0C4  F011         	movff	rgb_2_hsv@b,min@b
  8274   002FAC  C0C5  F012         	movff	rgb_2_hsv@b+1,min@b+1
  8275   002FB0  ECE5  F027         	call	_min	;wreg free
  8276   002FB4  C00F  F0B8         	movff	?_min,_rgb_2_hsv$3593
  8277   002FB8  C010  F0B9         	movff	?_min+1,_rgb_2_hsv$3593+1
  8278                           
  8279                           ;color.c: 288:     unsigned int cmin = min(r, min(g, b));
  8280   002FBC  C0BA  F00F         	movff	rgb_2_hsv@r,min@a
  8281   002FC0  C0BB  F010         	movff	rgb_2_hsv@r+1,min@a+1
  8282   002FC4  C0B8  F011         	movff	_rgb_2_hsv$3593,min@b
  8283   002FC8  C0B9  F012         	movff	_rgb_2_hsv$3593+1,min@b+1
  8284   002FCC  ECE5  F027         	call	_min	;wreg free
  8285   002FD0  C00F  F0B4         	movff	?_min,rgb_2_hsv@cmin
  8286   002FD4  C010  F0B5         	movff	?_min+1,rgb_2_hsv@cmin+1
  8287   002FD8                     
  8288                           ;color.c: 289:     unsigned long diff = cmax - cmin;
  8289   002FD8  0100               	movlb	0	; () banked
  8290   002FDA  51B4               	movf	rgb_2_hsv@cmin& (0+255),w,b
  8291   002FDC  5DBC               	subwf	rgb_2_hsv@cmax& (0+255),w,b
  8292   002FDE  6E33               	movwf	??_rgb_2_hsv^0,c
  8293   002FE0  51B5               	movf	(rgb_2_hsv@cmin+1)& (0+255),w,b
  8294   002FE2  59BD               	subwfb	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8295   002FE4  6E34               	movwf	(??_rgb_2_hsv+1)^0,c
  8296   002FE6  C033  F0BE         	movff	??_rgb_2_hsv,rgb_2_hsv@diff
  8297   002FEA  C034  F0BF         	movff	??_rgb_2_hsv+1,rgb_2_hsv@diff+1
  8298   002FEE  6BC0               	clrf	(rgb_2_hsv@diff+2)& (0+255),b
  8299   002FF0  6BC1               	clrf	(rgb_2_hsv@diff+3)& (0+255),b
  8300   002FF2                     
  8301                           ; BSR set to: 0
  8302                           ;color.c: 292:     if (cmax == r){
  8303   002FF2  51BA               	movf	rgb_2_hsv@r& (0+255),w,b
  8304   002FF4  19BC               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8305   002FF6  E107               	bnz	u2311
  8306   002FF8  51BB               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8307   002FFA  19BD               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8308   002FFC  A4D8               	btfss	status,2,c
  8309   002FFE  EF03  F018         	goto	u2311
  8310   003002  EF05  F018         	goto	u2310
  8311   003006                     u2311:
  8312   003006  EFAC  F018         	goto	l3402
  8313   00300A                     u2310:
  8314   00300A                     
  8315                           ; BSR set to: 0
  8316                           ;color.c: 293:         if (g > b){HSV->H = (unsigned int)((g-b)*6000L/diff);}
  8317   00300A  51C2               	movf	rgb_2_hsv@g& (0+255),w,b
  8318   00300C  5DC4               	subwf	rgb_2_hsv@b& (0+255),w,b
  8319   00300E  51C3               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8320   003010  59C5               	subwfb	(rgb_2_hsv@b+1)& (0+255),w,b
  8321   003012  B0D8               	btfsc	status,0,c
  8322   003014  EF0E  F018         	goto	u2321
  8323   003018  EF10  F018         	goto	u2320
  8324   00301C                     u2321:
  8325   00301C  EF42  F018         	goto	l3396
  8326   003020                     u2320:
  8327   003020                     
  8328                           ; BSR set to: 0
  8329   003020  51C4               	movf	rgb_2_hsv@b& (0+255),w,b
  8330   003022  5DC2               	subwf	rgb_2_hsv@g& (0+255),w,b
  8331   003024  6E33               	movwf	??_rgb_2_hsv^0,c
  8332   003026  51C5               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8333   003028  59C3               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8334   00302A  6E34               	movwf	(??_rgb_2_hsv+1)^0,c
  8335   00302C  C033  F00F         	movff	??_rgb_2_hsv,___lmul@multiplier
  8336   003030  C034  F010         	movff	??_rgb_2_hsv+1,___lmul@multiplier+1
  8337   003034  6A11               	clrf	(___lmul@multiplier+2)^0,c
  8338   003036  6A12               	clrf	(___lmul@multiplier+3)^0,c
  8339   003038  0E70               	movlw	112
  8340   00303A  6E13               	movwf	___lmul@multiplicand^0,c
  8341   00303C  0E17               	movlw	23
  8342   00303E  6E14               	movwf	(___lmul@multiplicand+1)^0,c
  8343   003040  0E00               	movlw	0
  8344   003042  6E15               	movwf	(___lmul@multiplicand+2)^0,c
  8345   003044  0E00               	movlw	0
  8346   003046  6E16               	movwf	(___lmul@multiplicand+3)^0,c
  8347   003048  EC0A  F027         	call	___lmul	;wreg free
  8348   00304C  C00F  F01B         	movff	?___lmul,___lldiv@dividend
  8349   003050  C010  F01C         	movff	?___lmul+1,___lldiv@dividend+1
  8350   003054  C011  F01D         	movff	?___lmul+2,___lldiv@dividend+2
  8351   003058  C012  F01E         	movff	?___lmul+3,___lldiv@dividend+3
  8352   00305C  C0BE  F01F         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8353   003060  C0BF  F020         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8354   003064  C0C0  F021         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8355   003068  C0C1  F022         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8356   00306C  EC5A  F025         	call	___lldiv	;wreg free
  8357   003070  C031  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8358   003074  C032  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8359   003078  C01B  FFDE         	movff	?___lldiv,postinc2
  8360   00307C  C01C  FFDD         	movff	?___lldiv+1,postdec2
  8361   003080  EF64  F019         	goto	l219
  8362   003084                     l3396:
  8363                           
  8364                           ; BSR set to: 0
  8365   003084  51C4               	movf	rgb_2_hsv@b& (0+255),w,b
  8366   003086  5DC2               	subwf	rgb_2_hsv@g& (0+255),w,b
  8367   003088  51C5               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8368   00308A  59C3               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8369   00308C  B0D8               	btfsc	status,0,c
  8370   00308E  EF4B  F018         	goto	u2331
  8371   003092  EF4D  F018         	goto	u2330
  8372   003096                     u2331:
  8373   003096  EF64  F019         	goto	l219
  8374   00309A                     u2330:
  8375   00309A                     
  8376                           ; BSR set to: 0
  8377   00309A  51C4               	movf	rgb_2_hsv@b& (0+255),w,b
  8378   00309C  6E33               	movwf	??_rgb_2_hsv^0,c
  8379   00309E  51C5               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8380   0030A0  6E34               	movwf	(??_rgb_2_hsv+1)^0,c
  8381   0030A2  6A35               	clrf	(??_rgb_2_hsv+2)^0,c
  8382   0030A4  6A36               	clrf	(??_rgb_2_hsv+3)^0,c
  8383   0030A6  C0BE  F00F         	movff	rgb_2_hsv@diff,___lmul@multiplier
  8384   0030AA  C0BF  F010         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  8385   0030AE  C0C0  F011         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  8386   0030B2  C0C1  F012         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  8387   0030B6  0E06               	movlw	6
  8388   0030B8  6E13               	movwf	___lmul@multiplicand^0,c
  8389   0030BA  0E00               	movlw	0
  8390   0030BC  6E14               	movwf	(___lmul@multiplicand+1)^0,c
  8391   0030BE  0E00               	movlw	0
  8392   0030C0  6E15               	movwf	(___lmul@multiplicand+2)^0,c
  8393   0030C2  0E00               	movlw	0
  8394   0030C4  6E16               	movwf	(___lmul@multiplicand+3)^0,c
  8395   0030C6  EC0A  F027         	call	___lmul	;wreg free
  8396   0030CA  0100               	movlb	0	; () banked
  8397   0030CC  51C2               	movf	rgb_2_hsv@g& (0+255),w,b
  8398   0030CE  240F               	addwf	?___lmul^0,w,c
  8399   0030D0  6E37               	movwf	(??_rgb_2_hsv+4)^0,c
  8400   0030D2  51C3               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8401   0030D4  2010               	addwfc	(?___lmul+1)^0,w,c
  8402   0030D6  6E38               	movwf	(??_rgb_2_hsv+5)^0,c
  8403   0030D8  0E00               	movlw	0
  8404   0030DA  2011               	addwfc	(?___lmul+2)^0,w,c
  8405   0030DC  6E39               	movwf	(??_rgb_2_hsv+6)^0,c
  8406   0030DE  0E00               	movlw	0
  8407   0030E0  2012               	addwfc	(?___lmul+3)^0,w,c
  8408   0030E2  6E3A               	movwf	(??_rgb_2_hsv+7)^0,c
  8409   0030E4  5033               	movf	??_rgb_2_hsv^0,w,c
  8410   0030E6  5C37               	subwf	(??_rgb_2_hsv+4)^0,w,c
  8411   0030E8  6FB0               	movwf	_rgb_2_hsv$3594& (0+255),b
  8412   0030EA  5034               	movf	(??_rgb_2_hsv+1)^0,w,c
  8413   0030EC  5838               	subwfb	(??_rgb_2_hsv+5)^0,w,c
  8414   0030EE  6FB1               	movwf	(_rgb_2_hsv$3594+1)& (0+255),b
  8415   0030F0  5035               	movf	(??_rgb_2_hsv+2)^0,w,c
  8416   0030F2  5839               	subwfb	(??_rgb_2_hsv+6)^0,w,c
  8417   0030F4  6FB2               	movwf	(_rgb_2_hsv$3594+2)& (0+255),b
  8418   0030F6  5036               	movf	(??_rgb_2_hsv+3)^0,w,c
  8419   0030F8  583A               	subwfb	(??_rgb_2_hsv+7)^0,w,c
  8420   0030FA  6FB3               	movwf	(_rgb_2_hsv$3594+3)& (0+255),b
  8421   0030FC                     
  8422                           ; BSR set to: 0
  8423   0030FC  C0B0  F00F         	movff	_rgb_2_hsv$3594,___lmul@multiplier
  8424   003100  C0B1  F010         	movff	_rgb_2_hsv$3594+1,___lmul@multiplier+1
  8425   003104  C0B2  F011         	movff	_rgb_2_hsv$3594+2,___lmul@multiplier+2
  8426   003108  C0B3  F012         	movff	_rgb_2_hsv$3594+3,___lmul@multiplier+3
  8427   00310C  0E70               	movlw	112
  8428   00310E  6E13               	movwf	___lmul@multiplicand^0,c
  8429   003110  0E17               	movlw	23
  8430   003112  6E14               	movwf	(___lmul@multiplicand+1)^0,c
  8431   003114  0E00               	movlw	0
  8432   003116  6E15               	movwf	(___lmul@multiplicand+2)^0,c
  8433   003118  0E00               	movlw	0
  8434   00311A  6E16               	movwf	(___lmul@multiplicand+3)^0,c
  8435   00311C  EC0A  F027         	call	___lmul	;wreg free
  8436   003120  C00F  F01B         	movff	?___lmul,___lldiv@dividend
  8437   003124  C010  F01C         	movff	?___lmul+1,___lldiv@dividend+1
  8438   003128  C011  F01D         	movff	?___lmul+2,___lldiv@dividend+2
  8439   00312C  C012  F01E         	movff	?___lmul+3,___lldiv@dividend+3
  8440   003130  C0BE  F01F         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8441   003134  C0BF  F020         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8442   003138  C0C0  F021         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8443   00313C  C0C1  F022         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8444   003140  EC5A  F025         	call	___lldiv	;wreg free
  8445   003144  C031  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8446   003148  C032  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8447   00314C  C01B  FFDE         	movff	?___lldiv,postinc2
  8448   003150  C01C  FFDD         	movff	?___lldiv+1,postdec2
  8449   003154  EF64  F019         	goto	l219
  8450   003158                     l3402:
  8451                           
  8452                           ; BSR set to: 0
  8453   003158  51C2               	movf	rgb_2_hsv@g& (0+255),w,b
  8454   00315A  19BC               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8455   00315C  E107               	bnz	u2341
  8456   00315E  51C3               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8457   003160  19BD               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8458   003162  A4D8               	btfss	status,2,c
  8459   003164  EFB6  F018         	goto	u2341
  8460   003168  EFB8  F018         	goto	u2340
  8461   00316C                     u2341:
  8462   00316C  EF05  F019         	goto	l3406
  8463   003170                     u2340:
  8464   003170                     
  8465                           ; BSR set to: 0
  8466   003170  51BA               	movf	rgb_2_hsv@r& (0+255),w,b
  8467   003172  6E33               	movwf	??_rgb_2_hsv^0,c
  8468   003174  51BB               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8469   003176  6E34               	movwf	(??_rgb_2_hsv+1)^0,c
  8470   003178  6A35               	clrf	(??_rgb_2_hsv+2)^0,c
  8471   00317A  6A36               	clrf	(??_rgb_2_hsv+3)^0,c
  8472   00317C  90D8               	bcf	status,0,c
  8473   00317E  35BE               	rlcf	rgb_2_hsv@diff& (0+255),w,b
  8474   003180  6E37               	movwf	(??_rgb_2_hsv+4)^0,c
  8475   003182  35BF               	rlcf	(rgb_2_hsv@diff+1)& (0+255),w,b
  8476   003184  6E38               	movwf	(??_rgb_2_hsv+5)^0,c
  8477   003186  35C0               	rlcf	(rgb_2_hsv@diff+2)& (0+255),w,b
  8478   003188  6E39               	movwf	(??_rgb_2_hsv+6)^0,c
  8479   00318A  35C1               	rlcf	(rgb_2_hsv@diff+3)& (0+255),w,b
  8480   00318C  6E3A               	movwf	(??_rgb_2_hsv+7)^0,c
  8481   00318E  51C4               	movf	rgb_2_hsv@b& (0+255),w,b
  8482   003190  2437               	addwf	(??_rgb_2_hsv+4)^0,w,c
  8483   003192  6E3B               	movwf	(??_rgb_2_hsv+8)^0,c
  8484   003194  51C5               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8485   003196  2038               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  8486   003198  6E3C               	movwf	(??_rgb_2_hsv+9)^0,c
  8487   00319A  0E00               	movlw	0
  8488   00319C  2039               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  8489   00319E  6E3D               	movwf	(??_rgb_2_hsv+10)^0,c
  8490   0031A0  0E00               	movlw	0
  8491   0031A2  203A               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  8492   0031A4  6E3E               	movwf	(??_rgb_2_hsv+11)^0,c
  8493   0031A6  5033               	movf	??_rgb_2_hsv^0,w,c
  8494   0031A8  5C3B               	subwf	(??_rgb_2_hsv+8)^0,w,c
  8495   0031AA  6E0F               	movwf	___lmul@multiplier^0,c
  8496   0031AC  5034               	movf	(??_rgb_2_hsv+1)^0,w,c
  8497   0031AE  583C               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  8498   0031B0  6E10               	movwf	(___lmul@multiplier+1)^0,c
  8499   0031B2  5035               	movf	(??_rgb_2_hsv+2)^0,w,c
  8500   0031B4  583D               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  8501   0031B6  6E11               	movwf	(___lmul@multiplier+2)^0,c
  8502   0031B8  5036               	movf	(??_rgb_2_hsv+3)^0,w,c
  8503   0031BA  583E               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  8504   0031BC  6E12               	movwf	(___lmul@multiplier+3)^0,c
  8505   0031BE  0E70               	movlw	112
  8506   0031C0  6E13               	movwf	___lmul@multiplicand^0,c
  8507   0031C2  0E17               	movlw	23
  8508   0031C4  6E14               	movwf	(___lmul@multiplicand+1)^0,c
  8509   0031C6  0E00               	movlw	0
  8510   0031C8  6E15               	movwf	(___lmul@multiplicand+2)^0,c
  8511   0031CA  0E00               	movlw	0
  8512   0031CC  6E16               	movwf	(___lmul@multiplicand+3)^0,c
  8513   0031CE  EC0A  F027         	call	___lmul	;wreg free
  8514   0031D2  C00F  F01B         	movff	?___lmul,___lldiv@dividend
  8515   0031D6  C010  F01C         	movff	?___lmul+1,___lldiv@dividend+1
  8516   0031DA  C011  F01D         	movff	?___lmul+2,___lldiv@dividend+2
  8517   0031DE  C012  F01E         	movff	?___lmul+3,___lldiv@dividend+3
  8518   0031E2  C0BE  F01F         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8519   0031E6  C0BF  F020         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8520   0031EA  C0C0  F021         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8521   0031EE  C0C1  F022         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8522   0031F2  EC5A  F025         	call	___lldiv	;wreg free
  8523   0031F6  C031  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8524   0031FA  C032  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8525   0031FE  C01B  FFDE         	movff	?___lldiv,postinc2
  8526   003202  C01C  FFDD         	movff	?___lldiv+1,postdec2
  8527   003206  EF64  F019         	goto	l219
  8528   00320A                     l3406:
  8529                           
  8530                           ; BSR set to: 0
  8531   00320A  51C4               	movf	rgb_2_hsv@b& (0+255),w,b
  8532   00320C  19BC               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8533   00320E  E107               	bnz	u2351
  8534   003210  51C5               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8535   003212  19BD               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8536   003214  A4D8               	btfss	status,2,c
  8537   003216  EF0F  F019         	goto	u2351
  8538   00321A  EF11  F019         	goto	u2350
  8539   00321E                     u2351:
  8540   00321E  EF64  F019         	goto	l219
  8541   003222                     u2350:
  8542   003222                     
  8543                           ; BSR set to: 0
  8544   003222  51C2               	movf	rgb_2_hsv@g& (0+255),w,b
  8545   003224  6E33               	movwf	??_rgb_2_hsv^0,c
  8546   003226  51C3               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8547   003228  6E34               	movwf	(??_rgb_2_hsv+1)^0,c
  8548   00322A  6A35               	clrf	(??_rgb_2_hsv+2)^0,c
  8549   00322C  6A36               	clrf	(??_rgb_2_hsv+3)^0,c
  8550   00322E  C0BE  F037         	movff	rgb_2_hsv@diff,??_rgb_2_hsv+4
  8551   003232  C0BF  F038         	movff	rgb_2_hsv@diff+1,??_rgb_2_hsv+5
  8552   003236  C0C0  F039         	movff	rgb_2_hsv@diff+2,??_rgb_2_hsv+6
  8553   00323A  C0C1  F03A         	movff	rgb_2_hsv@diff+3,??_rgb_2_hsv+7
  8554   00323E  0E02               	movlw	2
  8555   003240                     u2365:
  8556   003240  90D8               	bcf	status,0,c
  8557   003242  3637               	rlcf	(??_rgb_2_hsv+4)^0,f,c
  8558   003244  3638               	rlcf	(??_rgb_2_hsv+5)^0,f,c
  8559   003246  3639               	rlcf	(??_rgb_2_hsv+6)^0,f,c
  8560   003248  363A               	rlcf	(??_rgb_2_hsv+7)^0,f,c
  8561   00324A  2EE8               	decfsz	wreg,f,c
  8562   00324C  EF20  F019         	goto	u2365
  8563   003250  51BA               	movf	rgb_2_hsv@r& (0+255),w,b
  8564   003252  2437               	addwf	(??_rgb_2_hsv+4)^0,w,c
  8565   003254  6E3B               	movwf	(??_rgb_2_hsv+8)^0,c
  8566   003256  51BB               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8567   003258  2038               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  8568   00325A  6E3C               	movwf	(??_rgb_2_hsv+9)^0,c
  8569   00325C  0E00               	movlw	0
  8570   00325E  2039               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  8571   003260  6E3D               	movwf	(??_rgb_2_hsv+10)^0,c
  8572   003262  0E00               	movlw	0
  8573   003264  203A               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  8574   003266  6E3E               	movwf	(??_rgb_2_hsv+11)^0,c
  8575   003268  5033               	movf	??_rgb_2_hsv^0,w,c
  8576   00326A  5C3B               	subwf	(??_rgb_2_hsv+8)^0,w,c
  8577   00326C  6E0F               	movwf	___lmul@multiplier^0,c
  8578   00326E  5034               	movf	(??_rgb_2_hsv+1)^0,w,c
  8579   003270  583C               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  8580   003272  6E10               	movwf	(___lmul@multiplier+1)^0,c
  8581   003274  5035               	movf	(??_rgb_2_hsv+2)^0,w,c
  8582   003276  583D               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  8583   003278  6E11               	movwf	(___lmul@multiplier+2)^0,c
  8584   00327A  5036               	movf	(??_rgb_2_hsv+3)^0,w,c
  8585   00327C  583E               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  8586   00327E  6E12               	movwf	(___lmul@multiplier+3)^0,c
  8587   003280  0E70               	movlw	112
  8588   003282  6E13               	movwf	___lmul@multiplicand^0,c
  8589   003284  0E17               	movlw	23
  8590   003286  6E14               	movwf	(___lmul@multiplicand+1)^0,c
  8591   003288  0E00               	movlw	0
  8592   00328A  6E15               	movwf	(___lmul@multiplicand+2)^0,c
  8593   00328C  0E00               	movlw	0
  8594   00328E  6E16               	movwf	(___lmul@multiplicand+3)^0,c
  8595   003290  EC0A  F027         	call	___lmul	;wreg free
  8596   003294  C00F  F01B         	movff	?___lmul,___lldiv@dividend
  8597   003298  C010  F01C         	movff	?___lmul+1,___lldiv@dividend+1
  8598   00329C  C011  F01D         	movff	?___lmul+2,___lldiv@dividend+2
  8599   0032A0  C012  F01E         	movff	?___lmul+3,___lldiv@dividend+3
  8600   0032A4  C0BE  F01F         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8601   0032A8  C0BF  F020         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8602   0032AC  C0C0  F021         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8603   0032B0  C0C1  F022         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8604   0032B4  EC5A  F025         	call	___lldiv	;wreg free
  8605   0032B8  C031  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8606   0032BC  C032  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8607   0032C0  C01B  FFDE         	movff	?___lldiv,postinc2
  8608   0032C4  C01C  FFDD         	movff	?___lldiv+1,postdec2
  8609   0032C8                     l219:
  8610                           
  8611                           ;color.c: 301:     HSV->S = (unsigned int)((diff * 10000)/cmax);
  8612   0032C8  C0BE  F00F         	movff	rgb_2_hsv@diff,___lmul@multiplier
  8613   0032CC  C0BF  F010         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  8614   0032D0  C0C0  F011         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  8615   0032D4  C0C1  F012         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  8616   0032D8  0E10               	movlw	16
  8617   0032DA  6E13               	movwf	___lmul@multiplicand^0,c
  8618   0032DC  0E27               	movlw	39
  8619   0032DE  6E14               	movwf	(___lmul@multiplicand+1)^0,c
  8620   0032E0  0E00               	movlw	0
  8621   0032E2  6E15               	movwf	(___lmul@multiplicand+2)^0,c
  8622   0032E4  0E00               	movlw	0
  8623   0032E6  6E16               	movwf	(___lmul@multiplicand+3)^0,c
  8624   0032E8  EC0A  F027         	call	___lmul	;wreg free
  8625   0032EC  C00F  F01B         	movff	?___lmul,___lldiv@dividend
  8626   0032F0  C010  F01C         	movff	?___lmul+1,___lldiv@dividend+1
  8627   0032F4  C011  F01D         	movff	?___lmul+2,___lldiv@dividend+2
  8628   0032F8  C012  F01E         	movff	?___lmul+3,___lldiv@dividend+3
  8629   0032FC  C0BC  F01F         	movff	rgb_2_hsv@cmax,___lldiv@divisor
  8630   003300  C0BD  F020         	movff	rgb_2_hsv@cmax+1,___lldiv@divisor+1
  8631   003304  6A21               	clrf	(___lldiv@divisor+2)^0,c
  8632   003306  6A22               	clrf	(___lldiv@divisor+3)^0,c
  8633   003308  EC5A  F025         	call	___lldiv	;wreg free
  8634   00330C  EE20 F002          	lfsr	2,2
  8635   003310  5031               	movf	rgb_2_hsv@HSV^0,w,c
  8636   003312  26D9               	addwf	fsr2l,f,c
  8637   003314  5032               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8638   003316  22DA               	addwfc	fsr2h,f,c
  8639   003318  C01B  FFDE         	movff	?___lldiv,postinc2
  8640   00331C  C01C  FFDD         	movff	?___lldiv+1,postdec2
  8641   003320                     
  8642                           ;color.c: 303:     if (HSV->S == 0){HSV->H = 0;}
  8643   003320  EE20 F002          	lfsr	2,2
  8644   003324  5031               	movf	rgb_2_hsv@HSV^0,w,c
  8645   003326  26D9               	addwf	fsr2l,f,c
  8646   003328  5032               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8647   00332A  22DA               	addwfc	fsr2h,f,c
  8648   00332C  50DE               	movf	postinc2,w,c
  8649   00332E  10DE               	iorwf	postinc2,w,c
  8650   003330  A4D8               	btfss	status,2,c
  8651   003332  EF9D  F019         	goto	u2371
  8652   003336  EF9F  F019         	goto	u2370
  8653   00333A                     u2371:
  8654   00333A  EFA5  F019         	goto	l3414
  8655   00333E                     u2370:
  8656   00333E  C031  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8657   003342  C032  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8658   003346  6ADE               	clrf	postinc2,c
  8659   003348  6ADD               	clrf	postdec2,c
  8660   00334A                     l3414:
  8661                           
  8662                           ;color.c: 306:     HSV->V = cmax;
  8663   00334A  EE20 F004          	lfsr	2,4
  8664   00334E  5031               	movf	rgb_2_hsv@HSV^0,w,c
  8665   003350  26D9               	addwf	fsr2l,f,c
  8666   003352  5032               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8667   003354  22DA               	addwfc	fsr2h,f,c
  8668   003356  C0BC  FFDE         	movff	rgb_2_hsv@cmax,postinc2
  8669   00335A  C0BD  FFDD         	movff	rgb_2_hsv@cmax+1,postdec2
  8670   00335E  0012               	return		;funcret
  8671   003360                     __end_of_rgb_2_hsv:
  8672                           	callstack 0
  8673                           
  8674 ;; *************** function _min *****************
  8675 ;; Defined at:
  8676 ;;		line 274 in file "color.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;  a               2   14[COMRAM] unsigned int 
  8679 ;;  b               2   16[COMRAM] unsigned int 
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;		None
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  2   14[COMRAM] unsigned int 
  8684 ;; Registers used:
  8685 ;;		wreg, status,2, status,0
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8694 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8695 ;;Total ram usage:        4 bytes
  8696 ;; Hardware stack levels used: 1
  8697 ;; Hardware stack levels required when called: 5
  8698 ;; This function calls:
  8699 ;;		Nothing
  8700 ;; This function is called by:
  8701 ;;		_rgb_2_hsv
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text21
  8706   004FCA                     __ptext21:
  8707                           	callstack 0
  8708   004FCA                     _min:
  8709                           	callstack 24
  8710   004FCA                     
  8711                           ;color.c: 275:     if (a < b){return a;}
  8712   004FCA  5011               	movf	min@b^0,w,c
  8713   004FCC  5C0F               	subwf	min@a^0,w,c
  8714   004FCE  5012               	movf	(min@b+1)^0,w,c
  8715   004FD0  5810               	subwfb	(min@a+1)^0,w,c
  8716   004FD2  B0D8               	btfsc	status,0,c
  8717   004FD4  EFEE  F027         	goto	u2041
  8718   004FD8  EFF0  F027         	goto	u2040
  8719   004FDC                     u2041:
  8720   004FDC  EFF6  F027         	goto	l210
  8721   004FE0                     u2040:
  8722   004FE0  C00F  F00F         	movff	min@a,?_min
  8723   004FE4  C010  F010         	movff	min@a+1,?_min+1
  8724   004FE8  EFFA  F027         	goto	l211
  8725   004FEC                     l210:
  8726   004FEC  C011  F00F         	movff	min@b,?_min
  8727   004FF0  C012  F010         	movff	min@b+1,?_min+1
  8728   004FF4                     l211:
  8729   004FF4  0012               	return		;funcret
  8730   004FF6                     __end_of_min:
  8731                           	callstack 0
  8732                           
  8733 ;; *************** function _max *****************
  8734 ;; Defined at:
  8735 ;;		line 269 in file "color.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;  a               2   14[COMRAM] unsigned int 
  8738 ;;  b               2   16[COMRAM] unsigned int 
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;		None
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  2   14[COMRAM] unsigned int 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2, status,0
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;Total ram usage:        4 bytes
  8755 ;; Hardware stack levels used: 1
  8756 ;; Hardware stack levels required when called: 5
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_rgb_2_hsv
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           	psect	text22
  8765   004FF6                     __ptext22:
  8766                           	callstack 0
  8767   004FF6                     _max:
  8768                           	callstack 24
  8769   004FF6                     
  8770                           ;color.c: 270:     if (a > b){return a;}
  8771   004FF6  500F               	movf	max@a^0,w,c
  8772   004FF8  5C11               	subwf	max@b^0,w,c
  8773   004FFA  5010               	movf	(max@a+1)^0,w,c
  8774   004FFC  5812               	subwfb	(max@b+1)^0,w,c
  8775   004FFE  B0D8               	btfsc	status,0,c
  8776   005000  EF04  F028         	goto	u2031
  8777   005004  EF06  F028         	goto	u2030
  8778   005008                     u2031:
  8779   005008  EF0C  F028         	goto	l205
  8780   00500C                     u2030:
  8781   00500C  C00F  F00F         	movff	max@a,?_max
  8782   005010  C010  F010         	movff	max@a+1,?_max+1
  8783   005014  EF10  F028         	goto	l206
  8784   005018                     l205:
  8785   005018  C011  F00F         	movff	max@b,?_max
  8786   00501C  C012  F010         	movff	max@b+1,?_max+1
  8787   005020                     l206:
  8788   005020  0012               	return		;funcret
  8789   005022                     __end_of_max:
  8790                           	callstack 0
  8791                           
  8792 ;; *************** function ___lmul *****************
  8793 ;; Defined at:
  8794 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  multiplier      4   14[COMRAM] unsigned long 
  8797 ;;  multiplicand    4   18[COMRAM] unsigned long 
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;  product         4   22[COMRAM] unsigned long 
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  4   14[COMRAM] unsigned long 
  8802 ;; Registers used:
  8803 ;;		wreg, status,2, status,0
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8809 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8810 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8812 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8813 ;;Total ram usage:       12 bytes
  8814 ;; Hardware stack levels used: 1
  8815 ;; Hardware stack levels required when called: 5
  8816 ;; This function calls:
  8817 ;;		Nothing
  8818 ;; This function is called by:
  8819 ;;		_rgb_2_hsv
  8820 ;;		_color_normalise
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text23
  8825   004E14                     __ptext23:
  8826                           	callstack 0
  8827   004E14                     ___lmul:
  8828                           	callstack 24
  8829   004E14  0E00               	movlw	0
  8830   004E16  6E17               	movwf	___lmul@product^0,c
  8831   004E18  0E00               	movlw	0
  8832   004E1A  6E18               	movwf	(___lmul@product+1)^0,c
  8833   004E1C  0E00               	movlw	0
  8834   004E1E  6E19               	movwf	(___lmul@product+2)^0,c
  8835   004E20  0E00               	movlw	0
  8836   004E22  6E1A               	movwf	(___lmul@product+3)^0,c
  8837   004E24                     l3282:
  8838   004E24  A00F               	btfss	___lmul@multiplier^0,0,c
  8839   004E26  EF17  F027         	goto	u2201
  8840   004E2A  EF19  F027         	goto	u2200
  8841   004E2E                     u2201:
  8842   004E2E  EF21  F027         	goto	l3286
  8843   004E32                     u2200:
  8844   004E32  5013               	movf	___lmul@multiplicand^0,w,c
  8845   004E34  2617               	addwf	___lmul@product^0,f,c
  8846   004E36  5014               	movf	(___lmul@multiplicand+1)^0,w,c
  8847   004E38  2218               	addwfc	(___lmul@product+1)^0,f,c
  8848   004E3A  5015               	movf	(___lmul@multiplicand+2)^0,w,c
  8849   004E3C  2219               	addwfc	(___lmul@product+2)^0,f,c
  8850   004E3E  5016               	movf	(___lmul@multiplicand+3)^0,w,c
  8851   004E40  221A               	addwfc	(___lmul@product+3)^0,f,c
  8852   004E42                     l3286:
  8853   004E42  90D8               	bcf	status,0,c
  8854   004E44  3613               	rlcf	___lmul@multiplicand^0,f,c
  8855   004E46  3614               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8856   004E48  3615               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8857   004E4A  3616               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8858   004E4C  90D8               	bcf	status,0,c
  8859   004E4E  3212               	rrcf	(___lmul@multiplier+3)^0,f,c
  8860   004E50  3211               	rrcf	(___lmul@multiplier+2)^0,f,c
  8861   004E52  3210               	rrcf	(___lmul@multiplier+1)^0,f,c
  8862   004E54  320F               	rrcf	___lmul@multiplier^0,f,c
  8863   004E56  500F               	movf	___lmul@multiplier^0,w,c
  8864   004E58  1010               	iorwf	(___lmul@multiplier+1)^0,w,c
  8865   004E5A  1011               	iorwf	(___lmul@multiplier+2)^0,w,c
  8866   004E5C  1012               	iorwf	(___lmul@multiplier+3)^0,w,c
  8867   004E5E  A4D8               	btfss	status,2,c
  8868   004E60  EF34  F027         	goto	u2211
  8869   004E64  EF36  F027         	goto	u2210
  8870   004E68                     u2211:
  8871   004E68  EF12  F027         	goto	l3282
  8872   004E6C                     u2210:
  8873   004E6C  C017  F00F         	movff	___lmul@product,?___lmul
  8874   004E70  C018  F010         	movff	___lmul@product+1,?___lmul+1
  8875   004E74  C019  F011         	movff	___lmul@product+2,?___lmul+2
  8876   004E78  C01A  F012         	movff	___lmul@product+3,?___lmul+3
  8877   004E7C  0012               	return		;funcret
  8878   004E7E                     __end_of___lmul:
  8879                           	callstack 0
  8880                           
  8881 ;; *************** function ___lldiv *****************
  8882 ;; Defined at:
  8883 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;  dividend        4   26[COMRAM] unsigned long 
  8886 ;;  divisor         4   30[COMRAM] unsigned long 
  8887 ;; Auto vars:     Size  Location     Type
  8888 ;;  quotient        4   34[COMRAM] unsigned long 
  8889 ;;  counter         1   38[COMRAM] unsigned char 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  4   26[COMRAM] unsigned long 
  8892 ;; Registers used:
  8893 ;;		wreg, status,2, status,0
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8899 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8900 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8902 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8903 ;;Total ram usage:       13 bytes
  8904 ;; Hardware stack levels used: 1
  8905 ;; Hardware stack levels required when called: 5
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		_rgb_2_hsv
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text24
  8914   004AB4                     __ptext24:
  8915                           	callstack 0
  8916   004AB4                     ___lldiv:
  8917                           	callstack 24
  8918   004AB4  0E00               	movlw	0
  8919   004AB6  6E23               	movwf	___lldiv@quotient^0,c
  8920   004AB8  0E00               	movlw	0
  8921   004ABA  6E24               	movwf	(___lldiv@quotient+1)^0,c
  8922   004ABC  0E00               	movlw	0
  8923   004ABE  6E25               	movwf	(___lldiv@quotient+2)^0,c
  8924   004AC0  0E00               	movlw	0
  8925   004AC2  6E26               	movwf	(___lldiv@quotient+3)^0,c
  8926   004AC4  501F               	movf	___lldiv@divisor^0,w,c
  8927   004AC6  1020               	iorwf	(___lldiv@divisor+1)^0,w,c
  8928   004AC8  1021               	iorwf	(___lldiv@divisor+2)^0,w,c
  8929   004ACA  1022               	iorwf	(___lldiv@divisor+3)^0,w,c
  8930   004ACC  B4D8               	btfsc	status,2,c
  8931   004ACE  EF6B  F025         	goto	u2221
  8932   004AD2  EF6D  F025         	goto	u2220
  8933   004AD6                     u2221:
  8934   004AD6  EFA3  F025         	goto	l794
  8935   004ADA                     u2220:
  8936   004ADA  0E01               	movlw	1
  8937   004ADC  6E27               	movwf	___lldiv@counter^0,c
  8938   004ADE  EF77  F025         	goto	l3298
  8939   004AE2                     l3296:
  8940   004AE2  90D8               	bcf	status,0,c
  8941   004AE4  361F               	rlcf	___lldiv@divisor^0,f,c
  8942   004AE6  3620               	rlcf	(___lldiv@divisor+1)^0,f,c
  8943   004AE8  3621               	rlcf	(___lldiv@divisor+2)^0,f,c
  8944   004AEA  3622               	rlcf	(___lldiv@divisor+3)^0,f,c
  8945   004AEC  2A27               	incf	___lldiv@counter^0,f,c
  8946   004AEE                     l3298:
  8947   004AEE  AE22               	btfss	(___lldiv@divisor+3)^0,7,c
  8948   004AF0  EF7C  F025         	goto	u2231
  8949   004AF4  EF7E  F025         	goto	u2230
  8950   004AF8                     u2231:
  8951   004AF8  EF71  F025         	goto	l3296
  8952   004AFC                     u2230:
  8953   004AFC                     l3300:
  8954   004AFC  90D8               	bcf	status,0,c
  8955   004AFE  3623               	rlcf	___lldiv@quotient^0,f,c
  8956   004B00  3624               	rlcf	(___lldiv@quotient+1)^0,f,c
  8957   004B02  3625               	rlcf	(___lldiv@quotient+2)^0,f,c
  8958   004B04  3626               	rlcf	(___lldiv@quotient+3)^0,f,c
  8959   004B06  501F               	movf	___lldiv@divisor^0,w,c
  8960   004B08  5C1B               	subwf	___lldiv@dividend^0,w,c
  8961   004B0A  5020               	movf	(___lldiv@divisor+1)^0,w,c
  8962   004B0C  581C               	subwfb	(___lldiv@dividend+1)^0,w,c
  8963   004B0E  5021               	movf	(___lldiv@divisor+2)^0,w,c
  8964   004B10  581D               	subwfb	(___lldiv@dividend+2)^0,w,c
  8965   004B12  5022               	movf	(___lldiv@divisor+3)^0,w,c
  8966   004B14  581E               	subwfb	(___lldiv@dividend+3)^0,w,c
  8967   004B16  A0D8               	btfss	status,0,c
  8968   004B18  EF90  F025         	goto	u2241
  8969   004B1C  EF92  F025         	goto	u2240
  8970   004B20                     u2241:
  8971   004B20  EF9B  F025         	goto	l3308
  8972   004B24                     u2240:
  8973   004B24  501F               	movf	___lldiv@divisor^0,w,c
  8974   004B26  5E1B               	subwf	___lldiv@dividend^0,f,c
  8975   004B28  5020               	movf	(___lldiv@divisor+1)^0,w,c
  8976   004B2A  5A1C               	subwfb	(___lldiv@dividend+1)^0,f,c
  8977   004B2C  5021               	movf	(___lldiv@divisor+2)^0,w,c
  8978   004B2E  5A1D               	subwfb	(___lldiv@dividend+2)^0,f,c
  8979   004B30  5022               	movf	(___lldiv@divisor+3)^0,w,c
  8980   004B32  5A1E               	subwfb	(___lldiv@dividend+3)^0,f,c
  8981   004B34  8023               	bsf	___lldiv@quotient^0,0,c
  8982   004B36                     l3308:
  8983   004B36  90D8               	bcf	status,0,c
  8984   004B38  3222               	rrcf	(___lldiv@divisor+3)^0,f,c
  8985   004B3A  3221               	rrcf	(___lldiv@divisor+2)^0,f,c
  8986   004B3C  3220               	rrcf	(___lldiv@divisor+1)^0,f,c
  8987   004B3E  321F               	rrcf	___lldiv@divisor^0,f,c
  8988   004B40  2E27               	decfsz	___lldiv@counter^0,f,c
  8989   004B42  EF7E  F025         	goto	l3300
  8990   004B46                     l794:
  8991   004B46  C023  F01B         	movff	___lldiv@quotient,?___lldiv
  8992   004B4A  C024  F01C         	movff	___lldiv@quotient+1,?___lldiv+1
  8993   004B4E  C025  F01D         	movff	___lldiv@quotient+2,?___lldiv+2
  8994   004B52  C026  F01E         	movff	___lldiv@quotient+3,?___lldiv+3
  8995   004B56  0012               	return		;funcret
  8996   004B58                     __end_of___lldiv:
  8997                           	callstack 0
  8998                           
  8999 ;; *************** function ___aldiv *****************
  9000 ;; Defined at:
  9001 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;  dividend        4   26[COMRAM] long 
  9004 ;;  divisor         4   30[COMRAM] long 
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;  quotient        4   36[COMRAM] long 
  9007 ;;  sign            1   35[COMRAM] unsigned char 
  9008 ;;  counter         1   34[COMRAM] unsigned char 
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  4   26[COMRAM] long 
  9011 ;; Registers used:
  9012 ;;		wreg, status,2, status,0
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9018 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9019 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9021 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9022 ;;Total ram usage:       14 bytes
  9023 ;; Hardware stack levels used: 1
  9024 ;; Hardware stack levels required when called: 5
  9025 ;; This function calls:
  9026 ;;		Nothing
  9027 ;; This function is called by:
  9028 ;;		_rgb_2_hsv
  9029 ;;		_color_normalise
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033                           	psect	text25
  9034   0046F8                     __ptext25:
  9035                           	callstack 0
  9036   0046F8                     ___aldiv:
  9037                           	callstack 24
  9038   0046F8  0E00               	movlw	0
  9039   0046FA  6E24               	movwf	___aldiv@sign^0,c
  9040   0046FC  BE22               	btfsc	(___aldiv@divisor+3)^0,7,c
  9041   0046FE  EF85  F023         	goto	u2250
  9042   004702  EF83  F023         	goto	u2251
  9043   004706                     u2251:
  9044   004706  EF8F  F023         	goto	l3320
  9045   00470A                     u2250:
  9046   00470A  1E22               	comf	(___aldiv@divisor+3)^0,f,c
  9047   00470C  1E21               	comf	(___aldiv@divisor+2)^0,f,c
  9048   00470E  1E20               	comf	(___aldiv@divisor+1)^0,f,c
  9049   004710  6C1F               	negf	___aldiv@divisor^0,c
  9050   004712  0E00               	movlw	0
  9051   004714  2220               	addwfc	(___aldiv@divisor+1)^0,f,c
  9052   004716  2221               	addwfc	(___aldiv@divisor+2)^0,f,c
  9053   004718  2222               	addwfc	(___aldiv@divisor+3)^0,f,c
  9054   00471A  0E01               	movlw	1
  9055   00471C  6E24               	movwf	___aldiv@sign^0,c
  9056   00471E                     l3320:
  9057   00471E  BE1E               	btfsc	(___aldiv@dividend+3)^0,7,c
  9058   004720  EF96  F023         	goto	u2260
  9059   004724  EF94  F023         	goto	u2261
  9060   004728                     u2261:
  9061   004728  EFA0  F023         	goto	l3326
  9062   00472C                     u2260:
  9063   00472C  1E1E               	comf	(___aldiv@dividend+3)^0,f,c
  9064   00472E  1E1D               	comf	(___aldiv@dividend+2)^0,f,c
  9065   004730  1E1C               	comf	(___aldiv@dividend+1)^0,f,c
  9066   004732  6C1B               	negf	___aldiv@dividend^0,c
  9067   004734  0E00               	movlw	0
  9068   004736  221C               	addwfc	(___aldiv@dividend+1)^0,f,c
  9069   004738  221D               	addwfc	(___aldiv@dividend+2)^0,f,c
  9070   00473A  221E               	addwfc	(___aldiv@dividend+3)^0,f,c
  9071   00473C  0E01               	movlw	1
  9072   00473E  1A24               	xorwf	___aldiv@sign^0,f,c
  9073   004740                     l3326:
  9074   004740  0E00               	movlw	0
  9075   004742  6E25               	movwf	___aldiv@quotient^0,c
  9076   004744  0E00               	movlw	0
  9077   004746  6E26               	movwf	(___aldiv@quotient+1)^0,c
  9078   004748  0E00               	movlw	0
  9079   00474A  6E27               	movwf	(___aldiv@quotient+2)^0,c
  9080   00474C  0E00               	movlw	0
  9081   00474E  6E28               	movwf	(___aldiv@quotient+3)^0,c
  9082   004750  501F               	movf	___aldiv@divisor^0,w,c
  9083   004752  1020               	iorwf	(___aldiv@divisor+1)^0,w,c
  9084   004754  1021               	iorwf	(___aldiv@divisor+2)^0,w,c
  9085   004756  1022               	iorwf	(___aldiv@divisor+3)^0,w,c
  9086   004758  B4D8               	btfsc	status,2,c
  9087   00475A  EFB1  F023         	goto	u2271
  9088   00475E  EFB3  F023         	goto	u2270
  9089   004762                     u2271:
  9090   004762  EFE9  F023         	goto	l3348
  9091   004766                     u2270:
  9092   004766  0E01               	movlw	1
  9093   004768  6E23               	movwf	___aldiv@counter^0,c
  9094   00476A  EFBD  F023         	goto	l3334
  9095   00476E                     l3332:
  9096   00476E  90D8               	bcf	status,0,c
  9097   004770  361F               	rlcf	___aldiv@divisor^0,f,c
  9098   004772  3620               	rlcf	(___aldiv@divisor+1)^0,f,c
  9099   004774  3621               	rlcf	(___aldiv@divisor+2)^0,f,c
  9100   004776  3622               	rlcf	(___aldiv@divisor+3)^0,f,c
  9101   004778  2A23               	incf	___aldiv@counter^0,f,c
  9102   00477A                     l3334:
  9103   00477A  AE22               	btfss	(___aldiv@divisor+3)^0,7,c
  9104   00477C  EFC2  F023         	goto	u2281
  9105   004780  EFC4  F023         	goto	u2280
  9106   004784                     u2281:
  9107   004784  EFB7  F023         	goto	l3332
  9108   004788                     u2280:
  9109   004788                     l3336:
  9110   004788  90D8               	bcf	status,0,c
  9111   00478A  3625               	rlcf	___aldiv@quotient^0,f,c
  9112   00478C  3626               	rlcf	(___aldiv@quotient+1)^0,f,c
  9113   00478E  3627               	rlcf	(___aldiv@quotient+2)^0,f,c
  9114   004790  3628               	rlcf	(___aldiv@quotient+3)^0,f,c
  9115   004792  501F               	movf	___aldiv@divisor^0,w,c
  9116   004794  5C1B               	subwf	___aldiv@dividend^0,w,c
  9117   004796  5020               	movf	(___aldiv@divisor+1)^0,w,c
  9118   004798  581C               	subwfb	(___aldiv@dividend+1)^0,w,c
  9119   00479A  5021               	movf	(___aldiv@divisor+2)^0,w,c
  9120   00479C  581D               	subwfb	(___aldiv@dividend+2)^0,w,c
  9121   00479E  5022               	movf	(___aldiv@divisor+3)^0,w,c
  9122   0047A0  581E               	subwfb	(___aldiv@dividend+3)^0,w,c
  9123   0047A2  A0D8               	btfss	status,0,c
  9124   0047A4  EFD6  F023         	goto	u2291
  9125   0047A8  EFD8  F023         	goto	u2290
  9126   0047AC                     u2291:
  9127   0047AC  EFE1  F023         	goto	l3344
  9128   0047B0                     u2290:
  9129   0047B0  501F               	movf	___aldiv@divisor^0,w,c
  9130   0047B2  5E1B               	subwf	___aldiv@dividend^0,f,c
  9131   0047B4  5020               	movf	(___aldiv@divisor+1)^0,w,c
  9132   0047B6  5A1C               	subwfb	(___aldiv@dividend+1)^0,f,c
  9133   0047B8  5021               	movf	(___aldiv@divisor+2)^0,w,c
  9134   0047BA  5A1D               	subwfb	(___aldiv@dividend+2)^0,f,c
  9135   0047BC  5022               	movf	(___aldiv@divisor+3)^0,w,c
  9136   0047BE  5A1E               	subwfb	(___aldiv@dividend+3)^0,f,c
  9137   0047C0  8025               	bsf	___aldiv@quotient^0,0,c
  9138   0047C2                     l3344:
  9139   0047C2  90D8               	bcf	status,0,c
  9140   0047C4  3222               	rrcf	(___aldiv@divisor+3)^0,f,c
  9141   0047C6  3221               	rrcf	(___aldiv@divisor+2)^0,f,c
  9142   0047C8  3220               	rrcf	(___aldiv@divisor+1)^0,f,c
  9143   0047CA  321F               	rrcf	___aldiv@divisor^0,f,c
  9144   0047CC  2E23               	decfsz	___aldiv@counter^0,f,c
  9145   0047CE  EFC4  F023         	goto	l3336
  9146   0047D2                     l3348:
  9147   0047D2  5024               	movf	___aldiv@sign^0,w,c
  9148   0047D4  B4D8               	btfsc	status,2,c
  9149   0047D6  EFEF  F023         	goto	u2301
  9150   0047DA  EFF1  F023         	goto	u2300
  9151   0047DE                     u2301:
  9152   0047DE  EFF9  F023         	goto	l3352
  9153   0047E2                     u2300:
  9154   0047E2  1E28               	comf	(___aldiv@quotient+3)^0,f,c
  9155   0047E4  1E27               	comf	(___aldiv@quotient+2)^0,f,c
  9156   0047E6  1E26               	comf	(___aldiv@quotient+1)^0,f,c
  9157   0047E8  6C25               	negf	___aldiv@quotient^0,c
  9158   0047EA  0E00               	movlw	0
  9159   0047EC  2226               	addwfc	(___aldiv@quotient+1)^0,f,c
  9160   0047EE  2227               	addwfc	(___aldiv@quotient+2)^0,f,c
  9161   0047F0  2228               	addwfc	(___aldiv@quotient+3)^0,f,c
  9162   0047F2                     l3352:
  9163   0047F2  C025  F01B         	movff	___aldiv@quotient,?___aldiv
  9164   0047F6  C026  F01C         	movff	___aldiv@quotient+1,?___aldiv+1
  9165   0047FA  C027  F01D         	movff	___aldiv@quotient+2,?___aldiv+2
  9166   0047FE  C028  F01E         	movff	___aldiv@quotient+3,?___aldiv+3
  9167   004802  0012               	return		;funcret
  9168   004804                     __end_of___aldiv:
  9169                           	callstack 0
  9170                           
  9171 ;; *************** function _color_read *****************
  9172 ;; Defined at:
  9173 ;;		line 77 in file "color.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  RGBC            2   18[COMRAM] PTR struct RGBC_val
  9176 ;;		 -> main@RGBC(8), 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9190 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9191 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9192 ;;Total ram usage:        9 bytes
  9193 ;; Hardware stack levels used: 1
  9194 ;; Hardware stack levels required when called: 7
  9195 ;; This function calls:
  9196 ;;		_I2C_2_Master_Read
  9197 ;;		_I2C_2_Master_RepStart
  9198 ;;		_I2C_2_Master_Start
  9199 ;;		_I2C_2_Master_Stop
  9200 ;;		_I2C_2_Master_Write
  9201 ;; This function is called by:
  9202 ;;		_main
  9203 ;;		_color_calibration
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text26
  9208   003C26                     __ptext26:
  9209                           	callstack 0
  9210   003C26                     _color_read:
  9211                           	callstack 23
  9212   003C26                     
  9213                           ;color.c: 77: void color_read(RGBC_val *RGBC);color.c: 78: {;color.c: 79:  I2C_2_Master_
      +                          Start();
  9214   003C26  EC32  F029         	call	_I2C_2_Master_Start	;wreg free
  9215                           
  9216                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  9217   003C2A  0E52               	movlw	82
  9218   003C2C  EC1C  F029         	call	_I2C_2_Master_Write
  9219                           
  9220                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x16);
  9221   003C30  0EB6               	movlw	182
  9222   003C32  EC1C  F029         	call	_I2C_2_Master_Write
  9223                           
  9224                           ;color.c: 82:  I2C_2_Master_RepStart();
  9225   003C36  EC37  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9226                           
  9227                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  9228   003C3A  0E53               	movlw	83
  9229   003C3C  EC1C  F029         	call	_I2C_2_Master_Write
  9230   003C40                     
  9231                           ;color.c: 84:  RGBC->R=I2C_2_Master_Read(1);
  9232   003C40  0E01               	movlw	1
  9233   003C42  EC8D  F027         	call	_I2C_2_Master_Read
  9234   003C46  6E15               	movwf	??_color_read^0,c
  9235   003C48  6A16               	clrf	(??_color_read+1)^0,c
  9236   003C4A  C013  FFD9         	movff	color_read@RGBC,fsr2l
  9237   003C4E  C014  FFDA         	movff	color_read@RGBC+1,fsr2h
  9238   003C52  C015  FFDE         	movff	??_color_read,postinc2
  9239   003C56  C016  FFDD         	movff	??_color_read+1,postdec2
  9240   003C5A                     
  9241                           ;color.c: 85:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  9242   003C5A  C013  FFD9         	movff	color_read@RGBC,fsr2l
  9243   003C5E  C014  FFDA         	movff	color_read@RGBC+1,fsr2h
  9244   003C62  CFDE F015          	movff	postinc2,??_color_read
  9245   003C66  CFDD F016          	movff	postdec2,??_color_read+1
  9246   003C6A  0E00               	movlw	0
  9247   003C6C  EC8D  F027         	call	_I2C_2_Master_Read
  9248   003C70  6E17               	movwf	(??_color_read+2)^0,c
  9249   003C72  5017               	movf	(??_color_read+2)^0,w,c
  9250   003C74  6E19               	movwf	(??_color_read+4)^0,c
  9251   003C76  6A18               	clrf	(??_color_read+3)^0,c
  9252   003C78  5015               	movf	??_color_read^0,w,c
  9253   003C7A  1018               	iorwf	(??_color_read+3)^0,w,c
  9254   003C7C  6E1A               	movwf	(??_color_read+5)^0,c
  9255   003C7E  5016               	movf	(??_color_read+1)^0,w,c
  9256   003C80  1019               	iorwf	(??_color_read+4)^0,w,c
  9257   003C82  6E1B               	movwf	(??_color_read+6)^0,c
  9258   003C84  C013  FFD9         	movff	color_read@RGBC,fsr2l
  9259   003C88  C014  FFDA         	movff	color_read@RGBC+1,fsr2h
  9260   003C8C  C01A  FFDE         	movff	??_color_read+5,postinc2
  9261   003C90  C01B  FFDD         	movff	??_color_read+6,postdec2
  9262                           
  9263                           ;color.c: 86:  I2C_2_Master_Stop();
  9264   003C94  EC2D  F029         	call	_I2C_2_Master_Stop	;wreg free
  9265                           
  9266                           ;color.c: 88:     I2C_2_Master_Start();
  9267   003C98  EC32  F029         	call	_I2C_2_Master_Start	;wreg free
  9268                           
  9269                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x00);
  9270   003C9C  0E52               	movlw	82
  9271   003C9E  EC1C  F029         	call	_I2C_2_Master_Write
  9272                           
  9273                           ;color.c: 90:  I2C_2_Master_Write(0xA0 | 0x18);
  9274   003CA2  0EB8               	movlw	184
  9275   003CA4  EC1C  F029         	call	_I2C_2_Master_Write
  9276                           
  9277                           ;color.c: 91:  I2C_2_Master_RepStart();
  9278   003CA8  EC37  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9279                           
  9280                           ;color.c: 92:  I2C_2_Master_Write(0x52 | 0x01);
  9281   003CAC  0E53               	movlw	83
  9282   003CAE  EC1C  F029         	call	_I2C_2_Master_Write
  9283   003CB2                     
  9284                           ;color.c: 93:  RGBC->G=I2C_2_Master_Read(1);
  9285   003CB2  0E01               	movlw	1
  9286   003CB4  EC8D  F027         	call	_I2C_2_Master_Read
  9287   003CB8  6E15               	movwf	??_color_read^0,c
  9288   003CBA  6A16               	clrf	(??_color_read+1)^0,c
  9289   003CBC  EE20 F002          	lfsr	2,2
  9290   003CC0  5013               	movf	color_read@RGBC^0,w,c
  9291   003CC2  26D9               	addwf	fsr2l,f,c
  9292   003CC4  5014               	movf	(color_read@RGBC+1)^0,w,c
  9293   003CC6  22DA               	addwfc	fsr2h,f,c
  9294   003CC8  C015  FFDE         	movff	??_color_read,postinc2
  9295   003CCC  C016  FFDD         	movff	??_color_read+1,postdec2
  9296   003CD0                     
  9297                           ;color.c: 94:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  9298   003CD0  EE20 F002          	lfsr	2,2
  9299   003CD4  5013               	movf	color_read@RGBC^0,w,c
  9300   003CD6  26D9               	addwf	fsr2l,f,c
  9301   003CD8  5014               	movf	(color_read@RGBC+1)^0,w,c
  9302   003CDA  22DA               	addwfc	fsr2h,f,c
  9303   003CDC  CFDE F015          	movff	postinc2,??_color_read
  9304   003CE0  CFDD F016          	movff	postdec2,??_color_read+1
  9305   003CE4  0E00               	movlw	0
  9306   003CE6  EC8D  F027         	call	_I2C_2_Master_Read
  9307   003CEA  6E17               	movwf	(??_color_read+2)^0,c
  9308   003CEC  5017               	movf	(??_color_read+2)^0,w,c
  9309   003CEE  6E19               	movwf	(??_color_read+4)^0,c
  9310   003CF0  6A18               	clrf	(??_color_read+3)^0,c
  9311   003CF2  5015               	movf	??_color_read^0,w,c
  9312   003CF4  1018               	iorwf	(??_color_read+3)^0,w,c
  9313   003CF6  6E1A               	movwf	(??_color_read+5)^0,c
  9314   003CF8  5016               	movf	(??_color_read+1)^0,w,c
  9315   003CFA  1019               	iorwf	(??_color_read+4)^0,w,c
  9316   003CFC  6E1B               	movwf	(??_color_read+6)^0,c
  9317   003CFE  EE20 F002          	lfsr	2,2
  9318   003D02  5013               	movf	color_read@RGBC^0,w,c
  9319   003D04  26D9               	addwf	fsr2l,f,c
  9320   003D06  5014               	movf	(color_read@RGBC+1)^0,w,c
  9321   003D08  22DA               	addwfc	fsr2h,f,c
  9322   003D0A  C01A  FFDE         	movff	??_color_read+5,postinc2
  9323   003D0E  C01B  FFDD         	movff	??_color_read+6,postdec2
  9324                           
  9325                           ;color.c: 95:  I2C_2_Master_Stop();
  9326   003D12  EC2D  F029         	call	_I2C_2_Master_Stop	;wreg free
  9327                           
  9328                           ;color.c: 97:     I2C_2_Master_Start();
  9329   003D16  EC32  F029         	call	_I2C_2_Master_Start	;wreg free
  9330                           
  9331                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  9332   003D1A  0E52               	movlw	82
  9333   003D1C  EC1C  F029         	call	_I2C_2_Master_Write
  9334                           
  9335                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x1A);
  9336   003D20  0EBA               	movlw	186
  9337   003D22  EC1C  F029         	call	_I2C_2_Master_Write
  9338                           
  9339                           ;color.c: 100:  I2C_2_Master_RepStart();
  9340   003D26  EC37  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9341                           
  9342                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  9343   003D2A  0E53               	movlw	83
  9344   003D2C  EC1C  F029         	call	_I2C_2_Master_Write
  9345   003D30                     
  9346                           ;color.c: 102:  RGBC->B=I2C_2_Master_Read(1);
  9347   003D30  0E01               	movlw	1
  9348   003D32  EC8D  F027         	call	_I2C_2_Master_Read
  9349   003D36  6E15               	movwf	??_color_read^0,c
  9350   003D38  6A16               	clrf	(??_color_read+1)^0,c
  9351   003D3A  EE20 F004          	lfsr	2,4
  9352   003D3E  5013               	movf	color_read@RGBC^0,w,c
  9353   003D40  26D9               	addwf	fsr2l,f,c
  9354   003D42  5014               	movf	(color_read@RGBC+1)^0,w,c
  9355   003D44  22DA               	addwfc	fsr2h,f,c
  9356   003D46  C015  FFDE         	movff	??_color_read,postinc2
  9357   003D4A  C016  FFDD         	movff	??_color_read+1,postdec2
  9358   003D4E                     
  9359                           ;color.c: 103:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  9360   003D4E  EE20 F004          	lfsr	2,4
  9361   003D52  5013               	movf	color_read@RGBC^0,w,c
  9362   003D54  26D9               	addwf	fsr2l,f,c
  9363   003D56  5014               	movf	(color_read@RGBC+1)^0,w,c
  9364   003D58  22DA               	addwfc	fsr2h,f,c
  9365   003D5A  CFDE F015          	movff	postinc2,??_color_read
  9366   003D5E  CFDD F016          	movff	postdec2,??_color_read+1
  9367   003D62  0E00               	movlw	0
  9368   003D64  EC8D  F027         	call	_I2C_2_Master_Read
  9369   003D68  6E17               	movwf	(??_color_read+2)^0,c
  9370   003D6A  5017               	movf	(??_color_read+2)^0,w,c
  9371   003D6C  6E19               	movwf	(??_color_read+4)^0,c
  9372   003D6E  6A18               	clrf	(??_color_read+3)^0,c
  9373   003D70  5015               	movf	??_color_read^0,w,c
  9374   003D72  1018               	iorwf	(??_color_read+3)^0,w,c
  9375   003D74  6E1A               	movwf	(??_color_read+5)^0,c
  9376   003D76  5016               	movf	(??_color_read+1)^0,w,c
  9377   003D78  1019               	iorwf	(??_color_read+4)^0,w,c
  9378   003D7A  6E1B               	movwf	(??_color_read+6)^0,c
  9379   003D7C  EE20 F004          	lfsr	2,4
  9380   003D80  5013               	movf	color_read@RGBC^0,w,c
  9381   003D82  26D9               	addwf	fsr2l,f,c
  9382   003D84  5014               	movf	(color_read@RGBC+1)^0,w,c
  9383   003D86  22DA               	addwfc	fsr2h,f,c
  9384   003D88  C01A  FFDE         	movff	??_color_read+5,postinc2
  9385   003D8C  C01B  FFDD         	movff	??_color_read+6,postdec2
  9386                           
  9387                           ;color.c: 104:  I2C_2_Master_Stop();
  9388   003D90  EC2D  F029         	call	_I2C_2_Master_Stop	;wreg free
  9389                           
  9390                           ;color.c: 106:     I2C_2_Master_Start();
  9391   003D94  EC32  F029         	call	_I2C_2_Master_Start	;wreg free
  9392                           
  9393                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x00);
  9394   003D98  0E52               	movlw	82
  9395   003D9A  EC1C  F029         	call	_I2C_2_Master_Write
  9396                           
  9397                           ;color.c: 108:  I2C_2_Master_Write(0xA0 | 0x14);
  9398   003D9E  0EB4               	movlw	180
  9399   003DA0  EC1C  F029         	call	_I2C_2_Master_Write
  9400                           
  9401                           ;color.c: 109:  I2C_2_Master_RepStart();
  9402   003DA4  EC37  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9403                           
  9404                           ;color.c: 110:  I2C_2_Master_Write(0x52 | 0x01);
  9405   003DA8  0E53               	movlw	83
  9406   003DAA  EC1C  F029         	call	_I2C_2_Master_Write
  9407   003DAE                     
  9408                           ;color.c: 111:  RGBC->C=I2C_2_Master_Read(1);
  9409   003DAE  0E01               	movlw	1
  9410   003DB0  EC8D  F027         	call	_I2C_2_Master_Read
  9411   003DB4  6E15               	movwf	??_color_read^0,c
  9412   003DB6  6A16               	clrf	(??_color_read+1)^0,c
  9413   003DB8  EE20 F006          	lfsr	2,6
  9414   003DBC  5013               	movf	color_read@RGBC^0,w,c
  9415   003DBE  26D9               	addwf	fsr2l,f,c
  9416   003DC0  5014               	movf	(color_read@RGBC+1)^0,w,c
  9417   003DC2  22DA               	addwfc	fsr2h,f,c
  9418   003DC4  C015  FFDE         	movff	??_color_read,postinc2
  9419   003DC8  C016  FFDD         	movff	??_color_read+1,postdec2
  9420   003DCC                     
  9421                           ;color.c: 112:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  9422   003DCC  EE20 F006          	lfsr	2,6
  9423   003DD0  5013               	movf	color_read@RGBC^0,w,c
  9424   003DD2  26D9               	addwf	fsr2l,f,c
  9425   003DD4  5014               	movf	(color_read@RGBC+1)^0,w,c
  9426   003DD6  22DA               	addwfc	fsr2h,f,c
  9427   003DD8  CFDE F015          	movff	postinc2,??_color_read
  9428   003DDC  CFDD F016          	movff	postdec2,??_color_read+1
  9429   003DE0  0E00               	movlw	0
  9430   003DE2  EC8D  F027         	call	_I2C_2_Master_Read
  9431   003DE6  6E17               	movwf	(??_color_read+2)^0,c
  9432   003DE8  5017               	movf	(??_color_read+2)^0,w,c
  9433   003DEA  6E19               	movwf	(??_color_read+4)^0,c
  9434   003DEC  6A18               	clrf	(??_color_read+3)^0,c
  9435   003DEE  5015               	movf	??_color_read^0,w,c
  9436   003DF0  1018               	iorwf	(??_color_read+3)^0,w,c
  9437   003DF2  6E1A               	movwf	(??_color_read+5)^0,c
  9438   003DF4  5016               	movf	(??_color_read+1)^0,w,c
  9439   003DF6  1019               	iorwf	(??_color_read+4)^0,w,c
  9440   003DF8  6E1B               	movwf	(??_color_read+6)^0,c
  9441   003DFA  EE20 F006          	lfsr	2,6
  9442   003DFE  5013               	movf	color_read@RGBC^0,w,c
  9443   003E00  26D9               	addwf	fsr2l,f,c
  9444   003E02  5014               	movf	(color_read@RGBC+1)^0,w,c
  9445   003E04  22DA               	addwfc	fsr2h,f,c
  9446   003E06  C01A  FFDE         	movff	??_color_read+5,postinc2
  9447   003E0A  C01B  FFDD         	movff	??_color_read+6,postdec2
  9448                           
  9449                           ;color.c: 113:  I2C_2_Master_Stop();
  9450   003E0E  EC2D  F029         	call	_I2C_2_Master_Stop	;wreg free
  9451   003E12  0012               	return		;funcret
  9452   003E14                     __end_of_color_read:
  9453                           	callstack 0
  9454                           
  9455 ;; *************** function _I2C_2_Master_Write *****************
  9456 ;; Defined at:
  9457 ;;		line 45 in file "i2c.c"
  9458 ;; Parameters:    Size  Location     Type
  9459 ;;  data_byte       1    wreg     unsigned char 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;  data_byte       1   15[COMRAM] unsigned char 
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  1    wreg      void 
  9464 ;; Registers used:
  9465 ;;		wreg, status,2, status,0, cstack
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9475 ;;Total ram usage:        1 bytes
  9476 ;; Hardware stack levels used: 1
  9477 ;; Hardware stack levels required when called: 6
  9478 ;; This function calls:
  9479 ;;		_I2C_2_Master_Idle
  9480 ;; This function is called by:
  9481 ;;		_color_clear_init_interrupts
  9482 ;;		_color_writetoaddr
  9483 ;;		_color_read
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text27
  9488   005238                     __ptext27:
  9489                           	callstack 0
  9490   005238                     _I2C_2_Master_Write:
  9491                           	callstack 23
  9492                           
  9493                           ;incstack = 0
  9494                           ;I2C_2_Master_Write@data_byte stored from wreg
  9495   005238  6E10               	movwf	I2C_2_Master_Write@data_byte^0,c
  9496   00523A                     
  9497                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9498   00523A  EC3A  F028         	call	_I2C_2_Master_Idle	;wreg free
  9499   00523E                     
  9500                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9501   00523E  C010  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9502   005242  0012               	return		;funcret
  9503   005244                     __end_of_I2C_2_Master_Write:
  9504                           	callstack 0
  9505                           
  9506 ;; *************** function _I2C_2_Master_Stop *****************
  9507 ;; Defined at:
  9508 ;;		line 39 in file "i2c.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;		None
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;		None
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		wreg, status,2, status,0, cstack
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9526 ;;Total ram usage:        0 bytes
  9527 ;; Hardware stack levels used: 1
  9528 ;; Hardware stack levels required when called: 6
  9529 ;; This function calls:
  9530 ;;		_I2C_2_Master_Idle
  9531 ;; This function is called by:
  9532 ;;		_color_clear_init_interrupts
  9533 ;;		_color_writetoaddr
  9534 ;;		_color_read
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           	psect	text28
  9539   00525A                     __ptext28:
  9540                           	callstack 0
  9541   00525A                     _I2C_2_Master_Stop:
  9542                           	callstack 23
  9543   00525A                     
  9544                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9545   00525A  EC3A  F028         	call	_I2C_2_Master_Idle	;wreg free
  9546   00525E                     
  9547                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9548   00525E  010E               	movlb	14	; () banked
  9549   005260  85DA               	bsf	218,2,b	;volatile
  9550   005262                     
  9551                           ; BSR set to: 14
  9552   005262  0012               	return		;funcret
  9553   005264                     __end_of_I2C_2_Master_Stop:
  9554                           	callstack 0
  9555                           
  9556 ;; *************** function _I2C_2_Master_Start *****************
  9557 ;; Defined at:
  9558 ;;		line 27 in file "i2c.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;		None
  9561 ;; Auto vars:     Size  Location     Type
  9562 ;;		None
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  1    wreg      void 
  9565 ;; Registers used:
  9566 ;;		wreg, status,2, status,0, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9576 ;;Total ram usage:        0 bytes
  9577 ;; Hardware stack levels used: 1
  9578 ;; Hardware stack levels required when called: 6
  9579 ;; This function calls:
  9580 ;;		_I2C_2_Master_Idle
  9581 ;; This function is called by:
  9582 ;;		_color_clear_init_interrupts
  9583 ;;		_color_writetoaddr
  9584 ;;		_color_read
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           	psect	text29
  9589   005264                     __ptext29:
  9590                           	callstack 0
  9591   005264                     _I2C_2_Master_Start:
  9592                           	callstack 23
  9593   005264                     
  9594                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9595   005264  EC3A  F028         	call	_I2C_2_Master_Idle	;wreg free
  9596   005268                     
  9597                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9598   005268  010E               	movlb	14	; () banked
  9599   00526A  81DA               	bsf	218,0,b	;volatile
  9600   00526C                     
  9601                           ; BSR set to: 14
  9602   00526C  0012               	return		;funcret
  9603   00526E                     __end_of_I2C_2_Master_Start:
  9604                           	callstack 0
  9605                           
  9606 ;; *************** function _I2C_2_Master_RepStart *****************
  9607 ;; Defined at:
  9608 ;;		line 33 in file "i2c.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;		None
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;		None
  9613 ;; Return value:  Size  Location     Type
  9614 ;;                  1    wreg      void 
  9615 ;; Registers used:
  9616 ;;		wreg, status,2, status,0, cstack
  9617 ;; Tracked objects:
  9618 ;;		On entry : 0/0
  9619 ;;		On exit  : 0/0
  9620 ;;		Unchanged: 0/0
  9621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9626 ;;Total ram usage:        0 bytes
  9627 ;; Hardware stack levels used: 1
  9628 ;; Hardware stack levels required when called: 6
  9629 ;; This function calls:
  9630 ;;		_I2C_2_Master_Idle
  9631 ;; This function is called by:
  9632 ;;		_color_read
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text30
  9637   00526E                     __ptext30:
  9638                           	callstack 0
  9639   00526E                     _I2C_2_Master_RepStart:
  9640                           	callstack 23
  9641   00526E                     
  9642                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9643   00526E  EC3A  F028         	call	_I2C_2_Master_Idle	;wreg free
  9644   005272                     
  9645                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9646   005272  010E               	movlb	14	; () banked
  9647   005274  83DA               	bsf	218,1,b	;volatile
  9648   005276                     
  9649                           ; BSR set to: 14
  9650   005276  0012               	return		;funcret
  9651   005278                     __end_of_I2C_2_Master_RepStart:
  9652                           	callstack 0
  9653                           
  9654 ;; *************** function _I2C_2_Master_Read *****************
  9655 ;; Defined at:
  9656 ;;		line 51 in file "i2c.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;  ack             1    wreg     unsigned char 
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;  ack             1   16[COMRAM] unsigned char 
  9661 ;;  tmp             1   17[COMRAM] unsigned char 
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  1    wreg      unsigned char 
  9664 ;; Registers used:
  9665 ;;		wreg, status,2, status,0, cstack
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9674 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9675 ;;Total ram usage:        3 bytes
  9676 ;; Hardware stack levels used: 1
  9677 ;; Hardware stack levels required when called: 6
  9678 ;; This function calls:
  9679 ;;		_I2C_2_Master_Idle
  9680 ;; This function is called by:
  9681 ;;		_color_read
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           	psect	text31
  9686   004F1A                     __ptext31:
  9687                           	callstack 0
  9688   004F1A                     _I2C_2_Master_Read:
  9689                           	callstack 23
  9690                           
  9691                           ; BSR set to: 14
  9692                           ;incstack = 0
  9693                           ;I2C_2_Master_Read@ack stored from wreg
  9694   004F1A  6E11               	movwf	I2C_2_Master_Read@ack^0,c
  9695   004F1C                     
  9696                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9697   004F1C  EC3A  F028         	call	_I2C_2_Master_Idle	;wreg free
  9698   004F20                     
  9699                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9700   004F20  010E               	movlb	14	; () banked
  9701   004F22  87DA               	bsf	218,3,b	;volatile
  9702                           
  9703                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9704   004F24  EC3A  F028         	call	_I2C_2_Master_Idle	;wreg free
  9705   004F28                     
  9706                           ;i2c.c: 57:   tmp = SSP2BUF;
  9707   004F28  CED5 F012          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9708                           
  9709                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9710   004F2C  EC3A  F028         	call	_I2C_2_Master_Idle	;wreg free
  9711   004F30                     
  9712                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9713   004F30  5011               	movf	I2C_2_Master_Read@ack^0,w,c
  9714   004F32  B4D8               	btfsc	status,2,c
  9715   004F34  EF9E  F027         	goto	u2011
  9716   004F38  EFA2  F027         	goto	u2010
  9717   004F3C                     u2011:
  9718   004F3C  6A10               	clrf	??_I2C_2_Master_Read^0,c
  9719   004F3E  2A10               	incf	??_I2C_2_Master_Read^0,f,c
  9720   004F40  EFA3  F027         	goto	u2028
  9721   004F44                     u2010:
  9722   004F44  6A10               	clrf	??_I2C_2_Master_Read^0,c
  9723   004F46                     u2028:
  9724   004F46  3A10               	swapf	??_I2C_2_Master_Read^0,f,c
  9725   004F48  4610               	rlncf	??_I2C_2_Master_Read^0,f,c
  9726   004F4A  010E               	movlb	14	; () banked
  9727   004F4C  51DA               	movf	218,w,b	;volatile
  9728   004F4E  1810               	xorwf	??_I2C_2_Master_Read^0,w,c
  9729   004F50  0BDF               	andlw	-33
  9730   004F52  1810               	xorwf	??_I2C_2_Master_Read^0,w,c
  9731   004F54  6FDA               	movwf	218,b	;volatile
  9732   004F56                     
  9733                           ; BSR set to: 14
  9734                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9735   004F56  89DA               	bsf	218,4,b	;volatile
  9736   004F58                     
  9737                           ; BSR set to: 14
  9738                           ;i2c.c: 61:   return tmp;
  9739   004F58  5012               	movf	I2C_2_Master_Read@tmp^0,w,c
  9740   004F5A                     
  9741                           ; BSR set to: 14
  9742   004F5A  0012               	return		;funcret
  9743   004F5C                     __end_of_I2C_2_Master_Read:
  9744                           	callstack 0
  9745                           
  9746 ;; *************** function _I2C_2_Master_Idle *****************
  9747 ;; Defined at:
  9748 ;;		line 22 in file "i2c.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;		None
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;		None
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  1    wreg      void 
  9755 ;; Registers used:
  9756 ;;		wreg, status,2, status,0
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9766 ;;Total ram usage:        1 bytes
  9767 ;; Hardware stack levels used: 1
  9768 ;; Hardware stack levels required when called: 5
  9769 ;; This function calls:
  9770 ;;		Nothing
  9771 ;; This function is called by:
  9772 ;;		_I2C_2_Master_Start
  9773 ;;		_I2C_2_Master_RepStart
  9774 ;;		_I2C_2_Master_Stop
  9775 ;;		_I2C_2_Master_Write
  9776 ;;		_I2C_2_Master_Read
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           	psect	text32
  9781   005074                     __ptext32:
  9782                           	callstack 0
  9783   005074                     _I2C_2_Master_Idle:
  9784                           	callstack 23
  9785   005074                     l254:
  9786   005074  010E               	movlb	14	; () banked
  9787   005076  B5D8               	btfsc	216,2,b	;volatile
  9788   005078  EF40  F028         	goto	u1881
  9789   00507C  EF42  F028         	goto	u1880
  9790   005080                     u1881:
  9791   005080  EF3A  F028         	goto	l254
  9792   005084                     u1880:
  9793   005084                     
  9794                           ; BSR set to: 14
  9795   005084  CEDA F00F          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9796   005088  0E1F               	movlw	31
  9797   00508A  160F               	andwf	??_I2C_2_Master_Idle^0,f,c
  9798   00508C  A4D8               	btfss	status,2,c
  9799   00508E  EF4B  F028         	goto	u1891
  9800   005092  EF4D  F028         	goto	u1890
  9801   005096                     u1891:
  9802   005096  EF3A  F028         	goto	l254
  9803   00509A                     u1890:
  9804   00509A                     
  9805                           ; BSR set to: 14
  9806   00509A  0012               	return		;funcret
  9807   00509C                     __end_of_I2C_2_Master_Idle:
  9808                           	callstack 0
  9809                           
  9810 ;; *************** function _calibration *****************
  9811 ;; Defined at:
  9812 ;;		line 598 in file "dc_motor.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;  mL              2   47[COMRAM] PTR struct DC_motor
  9815 ;;		 -> main@motorL(10), 
  9816 ;;  mR              2   49[COMRAM] PTR struct DC_motor
  9817 ;;		 -> main@motorR(10), 
  9818 ;;  turnSpeed       1   51[COMRAM] unsigned char 
  9819 ;;  turnDuration    2   52[COMRAM] PTR unsigned char 
  9820 ;;		 -> main@turnDuration(1), 
  9821 ;;  turnRamp        1   54[COMRAM] unsigned char 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;		None
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      void 
  9826 ;; Registers used:
  9827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9833 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9836 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9837 ;;Total ram usage:       10 bytes
  9838 ;; Hardware stack levels used: 1
  9839 ;; Hardware stack levels required when called: 8
  9840 ;; This function calls:
  9841 ;;		_turnLeft
  9842 ;;		_turnRight
  9843 ;; This function is called by:
  9844 ;;		_main
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           	psect	text33
  9849   003722                     __ptext33:
  9850                           	callstack 0
  9851   003722                     _calibration:
  9852                           	callstack 22
  9853   003722                     
  9854                           ;dc_motor.c: 598: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 599: {;dc_motor.c: 601:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
  9855   003722  C030  F022         	movff	calibration@mL,turnLeft@mL
  9856   003726  C031  F023         	movff	calibration@mL+1,turnLeft@mL+1
  9857   00372A  C032  F024         	movff	calibration@mR,turnLeft@mR
  9858   00372E  C033  F025         	movff	calibration@mR+1,turnLeft@mR+1
  9859   003732  C034  F026         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  9860   003736  C035  FFD9         	movff	calibration@turnDuration,fsr2l
  9861   00373A  C036  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9862   00373E  50DF               	movf	indf2,w,c
  9863   003740  6E27               	movwf	turnLeft@turnDuration^0,c
  9864   003742  C037  F028         	movff	calibration@turnRamp,turnLeft@turnRamp
  9865   003746  ECDC  F021         	call	_turnLeft	;wreg free
  9866   00374A                     
  9867                           ;dc_motor.c: 602:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9868   00374A  0E05               	movlw	5
  9869   00374C  6E39               	movwf	(??_calibration+1)^0,c
  9870   00374E  0E0F               	movlw	15
  9871   003750  6E38               	movwf	??_calibration^0,c
  9872   003752  0EF1               	movlw	241
  9873   003754                     u5237:
  9874   003754  2EE8               	decfsz	wreg,f,c
  9875   003756  D7FE               	bra	u5237
  9876   003758  2E38               	decfsz	??_calibration^0,f,c
  9877   00375A  D7FC               	bra	u5237
  9878   00375C  2E39               	decfsz	(??_calibration+1)^0,f,c
  9879   00375E  D7FA               	bra	u5237
  9880   003760  0000               	nop	
  9881   003762                     
  9882                           ;dc_motor.c: 603:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  9883   003762  C030  F022         	movff	calibration@mL,turnLeft@mL
  9884   003766  C031  F023         	movff	calibration@mL+1,turnLeft@mL+1
  9885   00376A  C032  F024         	movff	calibration@mR,turnLeft@mR
  9886   00376E  C033  F025         	movff	calibration@mR+1,turnLeft@mR+1
  9887   003772  C034  F026         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  9888   003776  C035  FFD9         	movff	calibration@turnDuration,fsr2l
  9889   00377A  C036  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9890   00377E  50DF               	movf	indf2,w,c
  9891   003780  6E27               	movwf	turnLeft@turnDuration^0,c
  9892   003782  C037  F028         	movff	calibration@turnRamp,turnLeft@turnRamp
  9893   003786  ECDC  F021         	call	_turnLeft	;wreg free
  9894                           
  9895                           ;dc_motor.c: 604:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9896   00378A  0E05               	movlw	5
  9897   00378C  6E39               	movwf	(??_calibration+1)^0,c
  9898   00378E  0E0F               	movlw	15
  9899   003790  6E38               	movwf	??_calibration^0,c
  9900   003792  0EF1               	movlw	241
  9901   003794                     u5247:
  9902   003794  2EE8               	decfsz	wreg,f,c
  9903   003796  D7FE               	bra	u5247
  9904   003798  2E38               	decfsz	??_calibration^0,f,c
  9905   00379A  D7FC               	bra	u5247
  9906   00379C  2E39               	decfsz	(??_calibration+1)^0,f,c
  9907   00379E  D7FA               	bra	u5247
  9908   0037A0  0000               	nop	
  9909   0037A2                     
  9910                           ;dc_motor.c: 605:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  9911   0037A2  C030  F022         	movff	calibration@mL,turnRight@mL
  9912   0037A6  C031  F023         	movff	calibration@mL+1,turnRight@mL+1
  9913   0037AA  C032  F024         	movff	calibration@mR,turnRight@mR
  9914   0037AE  C033  F025         	movff	calibration@mR+1,turnRight@mR+1
  9915   0037B2  C034  F026         	movff	calibration@turnSpeed,turnRight@turnSpeed
  9916   0037B6  C035  FFD9         	movff	calibration@turnDuration,fsr2l
  9917   0037BA  C036  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9918   0037BE  50DF               	movf	indf2,w,c
  9919   0037C0  6E27               	movwf	turnRight@turnDuration^0,c
  9920   0037C2  C037  F028         	movff	calibration@turnRamp,turnRight@turnRamp
  9921   0037C6  ECF2  F020         	call	_turnRight	;wreg free
  9922   0037CA                     
  9923                           ;dc_motor.c: 606:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9924   0037CA  0E05               	movlw	5
  9925   0037CC  6E39               	movwf	(??_calibration+1)^0,c
  9926   0037CE  0E0F               	movlw	15
  9927   0037D0  6E38               	movwf	??_calibration^0,c
  9928   0037D2  0EF1               	movlw	241
  9929   0037D4                     u5257:
  9930   0037D4  2EE8               	decfsz	wreg,f,c
  9931   0037D6  D7FE               	bra	u5257
  9932   0037D8  2E38               	decfsz	??_calibration^0,f,c
  9933   0037DA  D7FC               	bra	u5257
  9934   0037DC  2E39               	decfsz	(??_calibration+1)^0,f,c
  9935   0037DE  D7FA               	bra	u5257
  9936   0037E0  0000               	nop	
  9937                           
  9938                           ;dc_motor.c: 607:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  9939   0037E2  C030  F022         	movff	calibration@mL,turnRight@mL
  9940   0037E6  C031  F023         	movff	calibration@mL+1,turnRight@mL+1
  9941   0037EA  C032  F024         	movff	calibration@mR,turnRight@mR
  9942   0037EE  C033  F025         	movff	calibration@mR+1,turnRight@mR+1
  9943   0037F2  C034  F026         	movff	calibration@turnSpeed,turnRight@turnSpeed
  9944   0037F6  C035  FFD9         	movff	calibration@turnDuration,fsr2l
  9945   0037FA  C036  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9946   0037FE  50DF               	movf	indf2,w,c
  9947   003800  6E27               	movwf	turnRight@turnDuration^0,c
  9948   003802  C037  F028         	movff	calibration@turnRamp,turnRight@turnRamp
  9949   003806  ECF2  F020         	call	_turnRight	;wreg free
  9950   00380A                     l736:
  9951   00380A  A48E               	btfss	142,2,c	;volatile
  9952   00380C  EF0A  F01C         	goto	u2821
  9953   003810  EF0C  F01C         	goto	u2820
  9954   003814                     u2821:
  9955   003814  EF13  F01C         	goto	l740
  9956   003818                     u2820:
  9957   003818  B68E               	btfsc	142,3,c	;volatile
  9958   00381A  EF11  F01C         	goto	u2831
  9959   00381E  EF13  F01C         	goto	u2830
  9960   003822                     u2831:
  9961   003822  EF05  F01C         	goto	l736
  9962   003826                     u2830:
  9963   003826                     l740:
  9964                           
  9965                           ;dc_motor.c: 612:         if (!PORTFbits.RF2 && *turnDuration>0) {
  9966   003826  B48E               	btfsc	142,2,c	;volatile
  9967   003828  EF18  F01C         	goto	u2841
  9968   00382C  EF1A  F01C         	goto	u2840
  9969   003830                     u2841:
  9970   003830  EF2E  F01C         	goto	l741
  9971   003834                     u2840:
  9972   003834  C035  FFD9         	movff	calibration@turnDuration,fsr2l
  9973   003838  C036  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9974   00383C  50DF               	movf	indf2,w,c
  9975   00383E  B4D8               	btfsc	status,2,c
  9976   003840  EF24  F01C         	goto	u2851
  9977   003844  EF26  F01C         	goto	u2850
  9978   003848                     u2851:
  9979   003848  EF2E  F01C         	goto	l741
  9980   00384C                     u2850:
  9981   00384C                     
  9982                           ;dc_motor.c: 613:             (*turnDuration)--;
  9983   00384C  C035  FFD9         	movff	calibration@turnDuration,fsr2l
  9984   003850  C036  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9985   003854  06DF               	decf	indf2,f,c
  9986   003856                     
  9987                           ;dc_motor.c: 614:             LATDbits.LATD7 = 1;
  9988   003856  8E7C               	bsf	124,7,c	;volatile
  9989                           
  9990                           ;dc_motor.c: 615:         }
  9991   003858  EF3B  F01C         	goto	l3898
  9992   00385C                     l741:
  9993   00385C  B68E               	btfsc	142,3,c	;volatile
  9994   00385E  EF33  F01C         	goto	u2861
  9995   003862  EF35  F01C         	goto	u2860
  9996   003866                     u2861:
  9997   003866  EF3B  F01C         	goto	l3898
  9998   00386A                     u2860:
  9999   00386A                     
 10000                           ;dc_motor.c: 618:             (*turnDuration)++;
 10001   00386A  C035  FFD9         	movff	calibration@turnDuration,fsr2l
 10002   00386E  C036  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10003   003872  2ADF               	incf	indf2,f,c
 10004   003874                     
 10005                           ;dc_motor.c: 619:             LATHbits.LATH3 = 1;
 10006   003874  8680               	bsf	128,3,c	;volatile
 10007   003876                     l3898:
 10008                           
 10009                           ;dc_motor.c: 622:         _delay((unsigned long)((500)*(64000000/4000.0)));
 10010   003876  0E29               	movlw	41
 10011   003878  6E39               	movwf	(??_calibration+1)^0,c
 10012   00387A  0E96               	movlw	150
 10013   00387C  6E38               	movwf	??_calibration^0,c
 10014   00387E  0E7F               	movlw	127
 10015   003880                     u5267:
 10016   003880  2EE8               	decfsz	wreg,f,c
 10017   003882  D7FE               	bra	u5267
 10018   003884  2E38               	decfsz	??_calibration^0,f,c
 10019   003886  D7FC               	bra	u5267
 10020   003888  2E39               	decfsz	(??_calibration+1)^0,f,c
 10021   00388A  D7FA               	bra	u5267
 10022   00388C  0000               	nop	
 10023   00388E                     
 10024                           ;dc_motor.c: 624:         if (!PORTFbits.RF3) {
 10025   00388E  B68E               	btfsc	142,3,c	;volatile
 10026   003890  EF4C  F01C         	goto	u2871
 10027   003894  EF4E  F01C         	goto	u2870
 10028   003898                     u2871:
 10029   003898  EF55  F01C         	goto	l744
 10030   00389C                     u2870:
 10031   00389C                     
 10032                           ;dc_motor.c: 625:             (*turnDuration)--;
 10033   00389C  C035  FFD9         	movff	calibration@turnDuration,fsr2l
 10034   0038A0  C036  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10035   0038A4  06DF               	decf	indf2,f,c
 10036                           
 10037                           ;dc_motor.c: 626:             break;
 10038   0038A6  EFCD  F01C         	goto	l745
 10039   0038AA                     l744:
 10040                           
 10041                           ;dc_motor.c: 629:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10042   0038AA  9680               	bcf	128,3,c	;volatile
 10043   0038AC  9E7C               	bcf	124,7,c	;volatile
 10044   0038AE                     
 10045                           ;dc_motor.c: 632:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10046   0038AE  C030  F022         	movff	calibration@mL,turnLeft@mL
 10047   0038B2  C031  F023         	movff	calibration@mL+1,turnLeft@mL+1
 10048   0038B6  C032  F024         	movff	calibration@mR,turnLeft@mR
 10049   0038BA  C033  F025         	movff	calibration@mR+1,turnLeft@mR+1
 10050   0038BE  C034  F026         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10051   0038C2  C035  FFD9         	movff	calibration@turnDuration,fsr2l
 10052   0038C6  C036  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10053   0038CA  50DF               	movf	indf2,w,c
 10054   0038CC  6E27               	movwf	turnLeft@turnDuration^0,c
 10055   0038CE  C037  F028         	movff	calibration@turnRamp,turnLeft@turnRamp
 10056   0038D2  ECDC  F021         	call	_turnLeft	;wreg free
 10057   0038D6                     
 10058                           ;dc_motor.c: 633:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10059   0038D6  0E05               	movlw	5
 10060   0038D8  6E39               	movwf	(??_calibration+1)^0,c
 10061   0038DA  0E0F               	movlw	15
 10062   0038DC  6E38               	movwf	??_calibration^0,c
 10063   0038DE  0EF1               	movlw	241
 10064   0038E0                     u5277:
 10065   0038E0  2EE8               	decfsz	wreg,f,c
 10066   0038E2  D7FE               	bra	u5277
 10067   0038E4  2E38               	decfsz	??_calibration^0,f,c
 10068   0038E6  D7FC               	bra	u5277
 10069   0038E8  2E39               	decfsz	(??_calibration+1)^0,f,c
 10070   0038EA  D7FA               	bra	u5277
 10071   0038EC  0000               	nop	
 10072   0038EE                     
 10073                           ;dc_motor.c: 634:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10074   0038EE  C030  F022         	movff	calibration@mL,turnLeft@mL
 10075   0038F2  C031  F023         	movff	calibration@mL+1,turnLeft@mL+1
 10076   0038F6  C032  F024         	movff	calibration@mR,turnLeft@mR
 10077   0038FA  C033  F025         	movff	calibration@mR+1,turnLeft@mR+1
 10078   0038FE  C034  F026         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10079   003902  C035  FFD9         	movff	calibration@turnDuration,fsr2l
 10080   003906  C036  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10081   00390A  50DF               	movf	indf2,w,c
 10082   00390C  6E27               	movwf	turnLeft@turnDuration^0,c
 10083   00390E  C037  F028         	movff	calibration@turnRamp,turnLeft@turnRamp
 10084   003912  ECDC  F021         	call	_turnLeft	;wreg free
 10085                           
 10086                           ;dc_motor.c: 635:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10087   003916  0E05               	movlw	5
 10088   003918  6E39               	movwf	(??_calibration+1)^0,c
 10089   00391A  0E0F               	movlw	15
 10090   00391C  6E38               	movwf	??_calibration^0,c
 10091   00391E  0EF1               	movlw	241
 10092   003920                     u5287:
 10093   003920  2EE8               	decfsz	wreg,f,c
 10094   003922  D7FE               	bra	u5287
 10095   003924  2E38               	decfsz	??_calibration^0,f,c
 10096   003926  D7FC               	bra	u5287
 10097   003928  2E39               	decfsz	(??_calibration+1)^0,f,c
 10098   00392A  D7FA               	bra	u5287
 10099   00392C  0000               	nop	
 10100   00392E                     
 10101                           ;dc_motor.c: 636:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10102   00392E  C030  F022         	movff	calibration@mL,turnRight@mL
 10103   003932  C031  F023         	movff	calibration@mL+1,turnRight@mL+1
 10104   003936  C032  F024         	movff	calibration@mR,turnRight@mR
 10105   00393A  C033  F025         	movff	calibration@mR+1,turnRight@mR+1
 10106   00393E  C034  F026         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10107   003942  C035  FFD9         	movff	calibration@turnDuration,fsr2l
 10108   003946  C036  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10109   00394A  50DF               	movf	indf2,w,c
 10110   00394C  6E27               	movwf	turnRight@turnDuration^0,c
 10111   00394E  C037  F028         	movff	calibration@turnRamp,turnRight@turnRamp
 10112   003952  ECF2  F020         	call	_turnRight	;wreg free
 10113   003956                     
 10114                           ;dc_motor.c: 637:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10115   003956  0E05               	movlw	5
 10116   003958  6E39               	movwf	(??_calibration+1)^0,c
 10117   00395A  0E0F               	movlw	15
 10118   00395C  6E38               	movwf	??_calibration^0,c
 10119   00395E  0EF1               	movlw	241
 10120   003960                     u5297:
 10121   003960  2EE8               	decfsz	wreg,f,c
 10122   003962  D7FE               	bra	u5297
 10123   003964  2E38               	decfsz	??_calibration^0,f,c
 10124   003966  D7FC               	bra	u5297
 10125   003968  2E39               	decfsz	(??_calibration+1)^0,f,c
 10126   00396A  D7FA               	bra	u5297
 10127   00396C  0000               	nop	
 10128                           
 10129                           ;dc_motor.c: 638:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10130   00396E  C030  F022         	movff	calibration@mL,turnRight@mL
 10131   003972  C031  F023         	movff	calibration@mL+1,turnRight@mL+1
 10132   003976  C032  F024         	movff	calibration@mR,turnRight@mR
 10133   00397A  C033  F025         	movff	calibration@mR+1,turnRight@mR+1
 10134   00397E  C034  F026         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10135   003982  C035  FFD9         	movff	calibration@turnDuration,fsr2l
 10136   003986  C036  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10137   00398A  50DF               	movf	indf2,w,c
 10138   00398C  6E27               	movwf	turnRight@turnDuration^0,c
 10139   00398E  C037  F028         	movff	calibration@turnRamp,turnRight@turnRamp
 10140   003992  ECF2  F020         	call	_turnRight	;wreg free
 10141   003996  EF05  F01C         	goto	l736
 10142   00399A                     l745:
 10143                           
 10144                           ;dc_motor.c: 643:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
 10145   00399A  8680               	bsf	128,3,c	;volatile
 10146   00399C  8E7C               	bsf	124,7,c	;volatile
 10147   00399E                     
 10148                           ;dc_motor.c: 644:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10149   00399E  0E09               	movlw	9
 10150   0039A0  6E39               	movwf	(??_calibration+1)^0,c
 10151   0039A2  0E1E               	movlw	30
 10152   0039A4  6E38               	movwf	??_calibration^0,c
 10153   0039A6  0EE4               	movlw	228
 10154   0039A8                     u5307:
 10155   0039A8  2EE8               	decfsz	wreg,f,c
 10156   0039AA  D7FE               	bra	u5307
 10157   0039AC  2E38               	decfsz	??_calibration^0,f,c
 10158   0039AE  D7FC               	bra	u5307
 10159   0039B0  2E39               	decfsz	(??_calibration+1)^0,f,c
 10160   0039B2  D7FA               	bra	u5307
 10161   0039B4  D000               	nop2	
 10162   0039B6                     
 10163                           ;dc_motor.c: 645:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10164   0039B6  9680               	bcf	128,3,c	;volatile
 10165   0039B8  9E7C               	bcf	124,7,c	;volatile
 10166   0039BA  0012               	return		;funcret
 10167   0039BC                     __end_of_calibration:
 10168                           	callstack 0
 10169                           
 10170 ;; *************** function _turnRight *****************
 10171 ;; Defined at:
 10172 ;;		line 419 in file "dc_motor.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 10175 ;;		 -> main@motorL(10), 
 10176 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 10177 ;;		 -> main@motorR(10), 
 10178 ;;  turnSpeed       1   37[COMRAM] unsigned char 
 10179 ;;  turnDuration    1   38[COMRAM] unsigned char 
 10180 ;;  turnRamp        1   39[COMRAM] unsigned char 
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;  cur_power       2   45[COMRAM] int 
 10183 ;;  i               2   43[COMRAM] int 
 10184 ;; Return value:  Size  Location     Type
 10185 ;;                  1    wreg      void 
 10186 ;; Registers used:
 10187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10188 ;; Tracked objects:
 10189 ;;		On entry : 0/0
 10190 ;;		On exit  : 0/0
 10191 ;;		Unchanged: 0/0
 10192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10193 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10194 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10195 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10196 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10197 ;;Total ram usage:       14 bytes
 10198 ;; Hardware stack levels used: 1
 10199 ;; Hardware stack levels required when called: 7
 10200 ;; This function calls:
 10201 ;;		_setMotorPWM
 10202 ;; This function is called by:
 10203 ;;		_move
 10204 ;;		_returnHome
 10205 ;;		_lostReturnHome
 10206 ;;		_calibration
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           	psect	text34
 10211   0041E4                     __ptext34:
 10212                           	callstack 0
 10213   0041E4                     _turnRight:
 10214                           	callstack 22
 10215   0041E4                     
 10216                           ;dc_motor.c: 419: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 420: {;dc_motor.c: 421:     mL->dir
      +                          ection = 1;
 10217   0041E4  EE20 F001          	lfsr	2,1
 10218   0041E8  5022               	movf	turnRight@mL^0,w,c
 10219   0041EA  26D9               	addwf	fsr2l,f,c
 10220   0041EC  5023               	movf	(turnRight@mL+1)^0,w,c
 10221   0041EE  22DA               	addwfc	fsr2h,f,c
 10222   0041F0  0E01               	movlw	1
 10223   0041F2  6EDF               	movwf	indf2,c
 10224                           
 10225                           ;dc_motor.c: 422:     mR->direction = 0;
 10226   0041F4  EE20 F001          	lfsr	2,1
 10227   0041F8  5024               	movf	turnRight@mR^0,w,c
 10228   0041FA  26D9               	addwf	fsr2l,f,c
 10229   0041FC  5025               	movf	(turnRight@mR+1)^0,w,c
 10230   0041FE  22DA               	addwfc	fsr2h,f,c
 10231   004200  6ADF               	clrf	indf2,c
 10232   004202                     
 10233                           ;dc_motor.c: 423:     int i;;dc_motor.c: 424:     int cur_power;;dc_motor.c: 425:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 10234   004202  0E00               	movlw	0
 10235   004204  6E2F               	movwf	(turnRight@cur_power+1)^0,c
 10236   004206  0E01               	movlw	1
 10237   004208  6E2E               	movwf	turnRight@cur_power^0,c
 10238   00420A  EF50  F021         	goto	l3158
 10239   00420E                     l3144:
 10240                           
 10241                           ;dc_motor.c: 426:         mL->power = cur_power+mL->compensation;
 10242   00420E  EE20 F009          	lfsr	2,9
 10243   004212  5022               	movf	turnRight@mL^0,w,c
 10244   004214  26D9               	addwf	fsr2l,f,c
 10245   004216  5023               	movf	(turnRight@mL+1)^0,w,c
 10246   004218  22DA               	addwfc	fsr2h,f,c
 10247   00421A  50DF               	movf	indf2,w,c
 10248   00421C  242E               	addwf	turnRight@cur_power^0,w,c
 10249   00421E  C022  FFD9         	movff	turnRight@mL,fsr2l
 10250   004222  C023  FFDA         	movff	turnRight@mL+1,fsr2h
 10251   004226  6EDF               	movwf	indf2,c
 10252                           
 10253                           ;dc_motor.c: 427:         mR->power = cur_power+mR->compensation;
 10254   004228  EE20 F009          	lfsr	2,9
 10255   00422C  5024               	movf	turnRight@mR^0,w,c
 10256   00422E  26D9               	addwf	fsr2l,f,c
 10257   004230  5025               	movf	(turnRight@mR+1)^0,w,c
 10258   004232  22DA               	addwfc	fsr2h,f,c
 10259   004234  50DF               	movf	indf2,w,c
 10260   004236  242E               	addwf	turnRight@cur_power^0,w,c
 10261   004238  C024  FFD9         	movff	turnRight@mR,fsr2l
 10262   00423C  C025  FFDA         	movff	turnRight@mR+1,fsr2h
 10263   004240  6EDF               	movwf	indf2,c
 10264   004242                     
 10265                           ;dc_motor.c: 428:         setMotorPWM(mL);
 10266   004242  C022  F01C         	movff	turnRight@mL,setMotorPWM@m
 10267   004246  C023  F01D         	movff	turnRight@mL+1,setMotorPWM@m+1
 10268   00424A  ECC6  F022         	call	_setMotorPWM	;wreg free
 10269   00424E                     
 10270                           ;dc_motor.c: 429:         setMotorPWM(mR);
 10271   00424E  C024  F01C         	movff	turnRight@mR,setMotorPWM@m
 10272   004252  C025  F01D         	movff	turnRight@mR+1,setMotorPWM@m+1
 10273   004256  ECC6  F022         	call	_setMotorPWM	;wreg free
 10274   00425A                     
 10275                           ;dc_motor.c: 430:         for (i=0;i<turnRamp;i++) {
 10276   00425A  0E00               	movlw	0
 10277   00425C  6E2D               	movwf	(turnRight@i+1)^0,c
 10278   00425E  0E00               	movlw	0
 10279   004260  6E2C               	movwf	turnRight@i^0,c
 10280   004262  EF3C  F021         	goto	l646
 10281   004266                     l3152:
 10282                           
 10283                           ;dc_motor.c: 431:             _delay((unsigned long)((10)*(64000000/4000.0)));
 10284   004266  0ED0               	movlw	208
 10285   004268  6E29               	movwf	??_turnRight^0,c
 10286   00426A  0ECA               	movlw	202
 10287   00426C                     u5317:
 10288   00426C  2EE8               	decfsz	wreg,f,c
 10289   00426E  D7FE               	bra	u5317
 10290   004270  2E29               	decfsz	??_turnRight^0,f,c
 10291   004272  D7FC               	bra	u5317
 10292   004274                     
 10293                           ;dc_motor.c: 432:         }
 10294   004274  4A2C               	infsnz	turnRight@i^0,f,c
 10295   004276  2A2D               	incf	(turnRight@i+1)^0,f,c
 10296   004278                     l646:
 10297   004278  5028               	movf	turnRight@turnRamp^0,w,c
 10298   00427A  6E29               	movwf	??_turnRight^0,c
 10299   00427C  6A2A               	clrf	(??_turnRight+1)^0,c
 10300   00427E  5029               	movf	??_turnRight^0,w,c
 10301   004280  5C2C               	subwf	turnRight@i^0,w,c
 10302   004282  502D               	movf	(turnRight@i+1)^0,w,c
 10303   004284  0A80               	xorlw	128
 10304   004286  6E2B               	movwf	(??_turnRight+2)^0,c
 10305   004288  502A               	movf	(??_turnRight+1)^0,w,c
 10306   00428A  0A80               	xorlw	128
 10307   00428C  582B               	subwfb	(??_turnRight+2)^0,w,c
 10308   00428E  A0D8               	btfss	status,0,c
 10309   004290  EF4C  F021         	goto	u2051
 10310   004294  EF4E  F021         	goto	u2050
 10311   004298                     u2051:
 10312   004298  EF33  F021         	goto	l3152
 10313   00429C                     u2050:
 10314   00429C                     
 10315                           ;dc_motor.c: 433:     }
 10316   00429C  4A2E               	infsnz	turnRight@cur_power^0,f,c
 10317   00429E  2A2F               	incf	(turnRight@cur_power+1)^0,f,c
 10318   0042A0                     l3158:
 10319   0042A0  5026               	movf	turnRight@turnSpeed^0,w,c
 10320   0042A2  6E29               	movwf	??_turnRight^0,c
 10321   0042A4  6A2A               	clrf	(??_turnRight+1)^0,c
 10322   0042A6  502E               	movf	turnRight@cur_power^0,w,c
 10323   0042A8  5C29               	subwf	??_turnRight^0,w,c
 10324   0042AA  502A               	movf	(??_turnRight+1)^0,w,c
 10325   0042AC  0A80               	xorlw	128
 10326   0042AE  6E2B               	movwf	(??_turnRight+2)^0,c
 10327   0042B0  502F               	movf	(turnRight@cur_power+1)^0,w,c
 10328   0042B2  0A80               	xorlw	128
 10329   0042B4  582B               	subwfb	(??_turnRight+2)^0,w,c
 10330   0042B6  B0D8               	btfsc	status,0,c
 10331   0042B8  EF60  F021         	goto	u2061
 10332   0042BC  EF62  F021         	goto	u2060
 10333   0042C0                     u2061:
 10334   0042C0  EF07  F021         	goto	l3144
 10335   0042C4                     u2060:
 10336   0042C4                     
 10337                           ;dc_motor.c: 435:     for (i=0;i<turnDuration;i++) {
 10338   0042C4  0E00               	movlw	0
 10339   0042C6  6E2D               	movwf	(turnRight@i+1)^0,c
 10340   0042C8  0E00               	movlw	0
 10341   0042CA  6E2C               	movwf	turnRight@i^0,c
 10342   0042CC  EF71  F021         	goto	l650
 10343   0042D0                     l3162:
 10344                           
 10345                           ;dc_motor.c: 436:             _delay((unsigned long)((10)*(64000000/4000.0)));
 10346   0042D0  0ED0               	movlw	208
 10347   0042D2  6E29               	movwf	??_turnRight^0,c
 10348   0042D4  0ECA               	movlw	202
 10349   0042D6                     u5327:
 10350   0042D6  2EE8               	decfsz	wreg,f,c
 10351   0042D8  D7FE               	bra	u5327
 10352   0042DA  2E29               	decfsz	??_turnRight^0,f,c
 10353   0042DC  D7FC               	bra	u5327
 10354   0042DE                     
 10355                           ;dc_motor.c: 437:         }
 10356   0042DE  4A2C               	infsnz	turnRight@i^0,f,c
 10357   0042E0  2A2D               	incf	(turnRight@i+1)^0,f,c
 10358   0042E2                     l650:
 10359   0042E2  5027               	movf	turnRight@turnDuration^0,w,c
 10360   0042E4  6E29               	movwf	??_turnRight^0,c
 10361   0042E6  6A2A               	clrf	(??_turnRight+1)^0,c
 10362   0042E8  5029               	movf	??_turnRight^0,w,c
 10363   0042EA  5C2C               	subwf	turnRight@i^0,w,c
 10364   0042EC  502D               	movf	(turnRight@i+1)^0,w,c
 10365   0042EE  0A80               	xorlw	128
 10366   0042F0  6E2B               	movwf	(??_turnRight+2)^0,c
 10367   0042F2  502A               	movf	(??_turnRight+1)^0,w,c
 10368   0042F4  0A80               	xorlw	128
 10369   0042F6  582B               	subwfb	(??_turnRight+2)^0,w,c
 10370   0042F8  A0D8               	btfss	status,0,c
 10371   0042FA  EF81  F021         	goto	u2071
 10372   0042FE  EF83  F021         	goto	u2070
 10373   004302                     u2071:
 10374   004302  EF68  F021         	goto	l3162
 10375   004306                     u2070:
 10376   004306                     
 10377                           ;dc_motor.c: 439:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 10378   004306  C026  F02E         	movff	turnRight@turnSpeed,turnRight@cur_power
 10379   00430A  6A2F               	clrf	(turnRight@cur_power+1)^0,c
 10380   00430C                     l3166:
 10381   00430C  BE2F               	btfsc	(turnRight@cur_power+1)^0,7,c
 10382   00430E  EF8D  F021         	goto	u2080
 10383   004312  EF8B  F021         	goto	u2081
 10384   004316                     u2081:
 10385   004316  EF8F  F021         	goto	l3170
 10386   00431A                     u2080:
 10387   00431A  EFDB  F021         	goto	l658
 10388   00431E                     l3170:
 10389                           
 10390                           ;dc_motor.c: 440:         mL->power = cur_power+mL->compensation;
 10391   00431E  EE20 F009          	lfsr	2,9
 10392   004322  5022               	movf	turnRight@mL^0,w,c
 10393   004324  26D9               	addwf	fsr2l,f,c
 10394   004326  5023               	movf	(turnRight@mL+1)^0,w,c
 10395   004328  22DA               	addwfc	fsr2h,f,c
 10396   00432A  50DF               	movf	indf2,w,c
 10397   00432C  242E               	addwf	turnRight@cur_power^0,w,c
 10398   00432E  C022  FFD9         	movff	turnRight@mL,fsr2l
 10399   004332  C023  FFDA         	movff	turnRight@mL+1,fsr2h
 10400   004336  6EDF               	movwf	indf2,c
 10401                           
 10402                           ;dc_motor.c: 441:         mR->power = cur_power+mR->compensation;
 10403   004338  EE20 F009          	lfsr	2,9
 10404   00433C  5024               	movf	turnRight@mR^0,w,c
 10405   00433E  26D9               	addwf	fsr2l,f,c
 10406   004340  5025               	movf	(turnRight@mR+1)^0,w,c
 10407   004342  22DA               	addwfc	fsr2h,f,c
 10408   004344  50DF               	movf	indf2,w,c
 10409   004346  242E               	addwf	turnRight@cur_power^0,w,c
 10410   004348  C024  FFD9         	movff	turnRight@mR,fsr2l
 10411   00434C  C025  FFDA         	movff	turnRight@mR+1,fsr2h
 10412   004350  6EDF               	movwf	indf2,c
 10413   004352                     
 10414                           ;dc_motor.c: 442:         setMotorPWM(mL);
 10415   004352  C022  F01C         	movff	turnRight@mL,setMotorPWM@m
 10416   004356  C023  F01D         	movff	turnRight@mL+1,setMotorPWM@m+1
 10417   00435A  ECC6  F022         	call	_setMotorPWM	;wreg free
 10418   00435E                     
 10419                           ;dc_motor.c: 443:         setMotorPWM(mR);
 10420   00435E  C024  F01C         	movff	turnRight@mR,setMotorPWM@m
 10421   004362  C025  F01D         	movff	turnRight@mR+1,setMotorPWM@m+1
 10422   004366  ECC6  F022         	call	_setMotorPWM	;wreg free
 10423   00436A                     
 10424                           ;dc_motor.c: 444:         for (i=0;i<turnRamp;i++) {
 10425   00436A  0E00               	movlw	0
 10426   00436C  6E2D               	movwf	(turnRight@i+1)^0,c
 10427   00436E  0E00               	movlw	0
 10428   004370  6E2C               	movwf	turnRight@i^0,c
 10429   004372  EFC4  F021         	goto	l655
 10430   004376                     l3178:
 10431                           
 10432                           ;dc_motor.c: 445:             _delay((unsigned long)((10)*(64000000/4000.0)));
 10433   004376  0ED0               	movlw	208
 10434   004378  6E29               	movwf	??_turnRight^0,c
 10435   00437A  0ECA               	movlw	202
 10436   00437C                     u5337:
 10437   00437C  2EE8               	decfsz	wreg,f,c
 10438   00437E  D7FE               	bra	u5337
 10439   004380  2E29               	decfsz	??_turnRight^0,f,c
 10440   004382  D7FC               	bra	u5337
 10441   004384                     
 10442                           ;dc_motor.c: 446:         }
 10443   004384  4A2C               	infsnz	turnRight@i^0,f,c
 10444   004386  2A2D               	incf	(turnRight@i+1)^0,f,c
 10445   004388                     l655:
 10446   004388  5028               	movf	turnRight@turnRamp^0,w,c
 10447   00438A  6E29               	movwf	??_turnRight^0,c
 10448   00438C  6A2A               	clrf	(??_turnRight+1)^0,c
 10449   00438E  5029               	movf	??_turnRight^0,w,c
 10450   004390  5C2C               	subwf	turnRight@i^0,w,c
 10451   004392  502D               	movf	(turnRight@i+1)^0,w,c
 10452   004394  0A80               	xorlw	128
 10453   004396  6E2B               	movwf	(??_turnRight+2)^0,c
 10454   004398  502A               	movf	(??_turnRight+1)^0,w,c
 10455   00439A  0A80               	xorlw	128
 10456   00439C  582B               	subwfb	(??_turnRight+2)^0,w,c
 10457   00439E  A0D8               	btfss	status,0,c
 10458   0043A0  EFD4  F021         	goto	u2091
 10459   0043A4  EFD6  F021         	goto	u2090
 10460   0043A8                     u2091:
 10461   0043A8  EFBB  F021         	goto	l3178
 10462   0043AC                     u2090:
 10463   0043AC                     
 10464                           ;dc_motor.c: 447:     }
 10465   0043AC  062E               	decf	turnRight@cur_power^0,f,c
 10466   0043AE  A0D8               	btfss	status,0,c
 10467   0043B0  062F               	decf	(turnRight@cur_power+1)^0,f,c
 10468   0043B2  EF86  F021         	goto	l3166
 10469   0043B6                     l658:
 10470   0043B6  0012               	return		;funcret
 10471   0043B8                     __end_of_turnRight:
 10472                           	callstack 0
 10473                           
 10474 ;; *************** function _turnLeft *****************
 10475 ;; Defined at:
 10476 ;;		line 387 in file "dc_motor.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 10479 ;;		 -> main@motorL(10), 
 10480 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 10481 ;;		 -> main@motorR(10), 
 10482 ;;  turnSpeed       1   37[COMRAM] unsigned char 
 10483 ;;  turnDuration    1   38[COMRAM] unsigned char 
 10484 ;;  turnRamp        1   39[COMRAM] unsigned char 
 10485 ;; Auto vars:     Size  Location     Type
 10486 ;;  cur_power       2   45[COMRAM] int 
 10487 ;;  i               2   43[COMRAM] int 
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  1    wreg      void 
 10490 ;; Registers used:
 10491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10497 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10498 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10499 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10500 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10501 ;;Total ram usage:       14 bytes
 10502 ;; Hardware stack levels used: 1
 10503 ;; Hardware stack levels required when called: 7
 10504 ;; This function calls:
 10505 ;;		_setMotorPWM
 10506 ;; This function is called by:
 10507 ;;		_move
 10508 ;;		_returnHome
 10509 ;;		_lostReturnHome
 10510 ;;		_calibration
 10511 ;; This function uses a non-reentrant model
 10512 ;;
 10513                           
 10514                           	psect	text35
 10515   0043B8                     __ptext35:
 10516                           	callstack 0
 10517   0043B8                     _turnLeft:
 10518                           	callstack 22
 10519   0043B8                     
 10520                           ;dc_motor.c: 387: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 388: {;dc_motor.c: 389:     mL->dire
      +                          ction = 0;
 10521   0043B8  EE20 F001          	lfsr	2,1
 10522   0043BC  5022               	movf	turnLeft@mL^0,w,c
 10523   0043BE  26D9               	addwf	fsr2l,f,c
 10524   0043C0  5023               	movf	(turnLeft@mL+1)^0,w,c
 10525   0043C2  22DA               	addwfc	fsr2h,f,c
 10526   0043C4  6ADF               	clrf	indf2,c
 10527                           
 10528                           ;dc_motor.c: 390:     mR->direction = 1;
 10529   0043C6  EE20 F001          	lfsr	2,1
 10530   0043CA  5024               	movf	turnLeft@mR^0,w,c
 10531   0043CC  26D9               	addwf	fsr2l,f,c
 10532   0043CE  5025               	movf	(turnLeft@mR+1)^0,w,c
 10533   0043D0  22DA               	addwfc	fsr2h,f,c
 10534   0043D2  0E01               	movlw	1
 10535   0043D4  6EDF               	movwf	indf2,c
 10536   0043D6                     
 10537                           ;dc_motor.c: 391:     int i;;dc_motor.c: 392:     int cur_power;;dc_motor.c: 393:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 10538   0043D6  0E00               	movlw	0
 10539   0043D8  6E2F               	movwf	(turnLeft@cur_power+1)^0,c
 10540   0043DA  0E01               	movlw	1
 10541   0043DC  6E2E               	movwf	turnLeft@cur_power^0,c
 10542   0043DE  EF3A  F022         	goto	l3204
 10543   0043E2                     l3190:
 10544                           
 10545                           ;dc_motor.c: 394:         mL->power = cur_power+mL->compensation;
 10546   0043E2  EE20 F009          	lfsr	2,9
 10547   0043E6  5022               	movf	turnLeft@mL^0,w,c
 10548   0043E8  26D9               	addwf	fsr2l,f,c
 10549   0043EA  5023               	movf	(turnLeft@mL+1)^0,w,c
 10550   0043EC  22DA               	addwfc	fsr2h,f,c
 10551   0043EE  50DF               	movf	indf2,w,c
 10552   0043F0  242E               	addwf	turnLeft@cur_power^0,w,c
 10553   0043F2  C022  FFD9         	movff	turnLeft@mL,fsr2l
 10554   0043F6  C023  FFDA         	movff	turnLeft@mL+1,fsr2h
 10555   0043FA  6EDF               	movwf	indf2,c
 10556                           
 10557                           ;dc_motor.c: 395:         mR->power = cur_power+mR->compensation;
 10558   0043FC  EE20 F009          	lfsr	2,9
 10559   004400  5024               	movf	turnLeft@mR^0,w,c
 10560   004402  26D9               	addwf	fsr2l,f,c
 10561   004404  5025               	movf	(turnLeft@mR+1)^0,w,c
 10562   004406  22DA               	addwfc	fsr2h,f,c
 10563   004408  50DF               	movf	indf2,w,c
 10564   00440A  242E               	addwf	turnLeft@cur_power^0,w,c
 10565   00440C  C024  FFD9         	movff	turnLeft@mR,fsr2l
 10566   004410  C025  FFDA         	movff	turnLeft@mR+1,fsr2h
 10567   004414  6EDF               	movwf	indf2,c
 10568   004416                     
 10569                           ;dc_motor.c: 396:         setMotorPWM(mL);
 10570   004416  C022  F01C         	movff	turnLeft@mL,setMotorPWM@m
 10571   00441A  C023  F01D         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10572   00441E  ECC6  F022         	call	_setMotorPWM	;wreg free
 10573   004422                     
 10574                           ;dc_motor.c: 397:         setMotorPWM(mR);
 10575   004422  C024  F01C         	movff	turnLeft@mR,setMotorPWM@m
 10576   004426  C025  F01D         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10577   00442A  ECC6  F022         	call	_setMotorPWM	;wreg free
 10578   00442E                     
 10579                           ;dc_motor.c: 398:         for (i=0;i<turnRamp;i++) {
 10580   00442E  0E00               	movlw	0
 10581   004430  6E2D               	movwf	(turnLeft@i+1)^0,c
 10582   004432  0E00               	movlw	0
 10583   004434  6E2C               	movwf	turnLeft@i^0,c
 10584   004436  EF26  F022         	goto	l629
 10585   00443A                     l3198:
 10586                           
 10587                           ;dc_motor.c: 399:             _delay((unsigned long)((10)*(64000000/4000.0)));
 10588   00443A  0ED0               	movlw	208
 10589   00443C  6E29               	movwf	??_turnLeft^0,c
 10590   00443E  0ECA               	movlw	202
 10591   004440                     u5347:
 10592   004440  2EE8               	decfsz	wreg,f,c
 10593   004442  D7FE               	bra	u5347
 10594   004444  2E29               	decfsz	??_turnLeft^0,f,c
 10595   004446  D7FC               	bra	u5347
 10596   004448                     
 10597                           ;dc_motor.c: 400:         }
 10598   004448  4A2C               	infsnz	turnLeft@i^0,f,c
 10599   00444A  2A2D               	incf	(turnLeft@i+1)^0,f,c
 10600   00444C                     l629:
 10601   00444C  5028               	movf	turnLeft@turnRamp^0,w,c
 10602   00444E  6E29               	movwf	??_turnLeft^0,c
 10603   004450  6A2A               	clrf	(??_turnLeft+1)^0,c
 10604   004452  5029               	movf	??_turnLeft^0,w,c
 10605   004454  5C2C               	subwf	turnLeft@i^0,w,c
 10606   004456  502D               	movf	(turnLeft@i+1)^0,w,c
 10607   004458  0A80               	xorlw	128
 10608   00445A  6E2B               	movwf	(??_turnLeft+2)^0,c
 10609   00445C  502A               	movf	(??_turnLeft+1)^0,w,c
 10610   00445E  0A80               	xorlw	128
 10611   004460  582B               	subwfb	(??_turnLeft+2)^0,w,c
 10612   004462  A0D8               	btfss	status,0,c
 10613   004464  EF36  F022         	goto	u2101
 10614   004468  EF38  F022         	goto	u2100
 10615   00446C                     u2101:
 10616   00446C  EF1D  F022         	goto	l3198
 10617   004470                     u2100:
 10618   004470                     
 10619                           ;dc_motor.c: 401:     }
 10620   004470  4A2E               	infsnz	turnLeft@cur_power^0,f,c
 10621   004472  2A2F               	incf	(turnLeft@cur_power+1)^0,f,c
 10622   004474                     l3204:
 10623   004474  5026               	movf	turnLeft@turnSpeed^0,w,c
 10624   004476  6E29               	movwf	??_turnLeft^0,c
 10625   004478  6A2A               	clrf	(??_turnLeft+1)^0,c
 10626   00447A  502E               	movf	turnLeft@cur_power^0,w,c
 10627   00447C  5C29               	subwf	??_turnLeft^0,w,c
 10628   00447E  502A               	movf	(??_turnLeft+1)^0,w,c
 10629   004480  0A80               	xorlw	128
 10630   004482  6E2B               	movwf	(??_turnLeft+2)^0,c
 10631   004484  502F               	movf	(turnLeft@cur_power+1)^0,w,c
 10632   004486  0A80               	xorlw	128
 10633   004488  582B               	subwfb	(??_turnLeft+2)^0,w,c
 10634   00448A  B0D8               	btfsc	status,0,c
 10635   00448C  EF4A  F022         	goto	u2111
 10636   004490  EF4C  F022         	goto	u2110
 10637   004494                     u2111:
 10638   004494  EFF1  F021         	goto	l3190
 10639   004498                     u2110:
 10640   004498                     
 10641                           ;dc_motor.c: 403:     for (i=0;i<turnDuration;i++) {
 10642   004498  0E00               	movlw	0
 10643   00449A  6E2D               	movwf	(turnLeft@i+1)^0,c
 10644   00449C  0E00               	movlw	0
 10645   00449E  6E2C               	movwf	turnLeft@i^0,c
 10646   0044A0  EF5B  F022         	goto	l633
 10647   0044A4                     l3208:
 10648                           
 10649                           ;dc_motor.c: 404:             _delay((unsigned long)((10)*(64000000/4000.0)));
 10650   0044A4  0ED0               	movlw	208
 10651   0044A6  6E29               	movwf	??_turnLeft^0,c
 10652   0044A8  0ECA               	movlw	202
 10653   0044AA                     u5357:
 10654   0044AA  2EE8               	decfsz	wreg,f,c
 10655   0044AC  D7FE               	bra	u5357
 10656   0044AE  2E29               	decfsz	??_turnLeft^0,f,c
 10657   0044B0  D7FC               	bra	u5357
 10658   0044B2                     
 10659                           ;dc_motor.c: 405:         }
 10660   0044B2  4A2C               	infsnz	turnLeft@i^0,f,c
 10661   0044B4  2A2D               	incf	(turnLeft@i+1)^0,f,c
 10662   0044B6                     l633:
 10663   0044B6  5027               	movf	turnLeft@turnDuration^0,w,c
 10664   0044B8  6E29               	movwf	??_turnLeft^0,c
 10665   0044BA  6A2A               	clrf	(??_turnLeft+1)^0,c
 10666   0044BC  5029               	movf	??_turnLeft^0,w,c
 10667   0044BE  5C2C               	subwf	turnLeft@i^0,w,c
 10668   0044C0  502D               	movf	(turnLeft@i+1)^0,w,c
 10669   0044C2  0A80               	xorlw	128
 10670   0044C4  6E2B               	movwf	(??_turnLeft+2)^0,c
 10671   0044C6  502A               	movf	(??_turnLeft+1)^0,w,c
 10672   0044C8  0A80               	xorlw	128
 10673   0044CA  582B               	subwfb	(??_turnLeft+2)^0,w,c
 10674   0044CC  A0D8               	btfss	status,0,c
 10675   0044CE  EF6B  F022         	goto	u2121
 10676   0044D2  EF6D  F022         	goto	u2120
 10677   0044D6                     u2121:
 10678   0044D6  EF52  F022         	goto	l3208
 10679   0044DA                     u2120:
 10680   0044DA                     
 10681                           ;dc_motor.c: 407:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 10682   0044DA  C026  F02E         	movff	turnLeft@turnSpeed,turnLeft@cur_power
 10683   0044DE  6A2F               	clrf	(turnLeft@cur_power+1)^0,c
 10684   0044E0                     l3212:
 10685   0044E0  BE2F               	btfsc	(turnLeft@cur_power+1)^0,7,c
 10686   0044E2  EF77  F022         	goto	u2130
 10687   0044E6  EF75  F022         	goto	u2131
 10688   0044EA                     u2131:
 10689   0044EA  EF79  F022         	goto	l3216
 10690   0044EE                     u2130:
 10691   0044EE  EFC5  F022         	goto	l641
 10692   0044F2                     l3216:
 10693                           
 10694                           ;dc_motor.c: 408:         mL->power = cur_power+mL->compensation;
 10695   0044F2  EE20 F009          	lfsr	2,9
 10696   0044F6  5022               	movf	turnLeft@mL^0,w,c
 10697   0044F8  26D9               	addwf	fsr2l,f,c
 10698   0044FA  5023               	movf	(turnLeft@mL+1)^0,w,c
 10699   0044FC  22DA               	addwfc	fsr2h,f,c
 10700   0044FE  50DF               	movf	indf2,w,c
 10701   004500  242E               	addwf	turnLeft@cur_power^0,w,c
 10702   004502  C022  FFD9         	movff	turnLeft@mL,fsr2l
 10703   004506  C023  FFDA         	movff	turnLeft@mL+1,fsr2h
 10704   00450A  6EDF               	movwf	indf2,c
 10705                           
 10706                           ;dc_motor.c: 409:         mR->power = cur_power+mR->compensation;
 10707   00450C  EE20 F009          	lfsr	2,9
 10708   004510  5024               	movf	turnLeft@mR^0,w,c
 10709   004512  26D9               	addwf	fsr2l,f,c
 10710   004514  5025               	movf	(turnLeft@mR+1)^0,w,c
 10711   004516  22DA               	addwfc	fsr2h,f,c
 10712   004518  50DF               	movf	indf2,w,c
 10713   00451A  242E               	addwf	turnLeft@cur_power^0,w,c
 10714   00451C  C024  FFD9         	movff	turnLeft@mR,fsr2l
 10715   004520  C025  FFDA         	movff	turnLeft@mR+1,fsr2h
 10716   004524  6EDF               	movwf	indf2,c
 10717   004526                     
 10718                           ;dc_motor.c: 410:         setMotorPWM(mL);
 10719   004526  C022  F01C         	movff	turnLeft@mL,setMotorPWM@m
 10720   00452A  C023  F01D         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10721   00452E  ECC6  F022         	call	_setMotorPWM	;wreg free
 10722   004532                     
 10723                           ;dc_motor.c: 411:         setMotorPWM(mR);
 10724   004532  C024  F01C         	movff	turnLeft@mR,setMotorPWM@m
 10725   004536  C025  F01D         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10726   00453A  ECC6  F022         	call	_setMotorPWM	;wreg free
 10727   00453E                     
 10728                           ;dc_motor.c: 412:         for (i=0;i<turnRamp;i++) {
 10729   00453E  0E00               	movlw	0
 10730   004540  6E2D               	movwf	(turnLeft@i+1)^0,c
 10731   004542  0E00               	movlw	0
 10732   004544  6E2C               	movwf	turnLeft@i^0,c
 10733   004546  EFAE  F022         	goto	l638
 10734   00454A                     l3224:
 10735                           
 10736                           ;dc_motor.c: 413:             _delay((unsigned long)((10)*(64000000/4000.0)));
 10737   00454A  0ED0               	movlw	208
 10738   00454C  6E29               	movwf	??_turnLeft^0,c
 10739   00454E  0ECA               	movlw	202
 10740   004550                     u5367:
 10741   004550  2EE8               	decfsz	wreg,f,c
 10742   004552  D7FE               	bra	u5367
 10743   004554  2E29               	decfsz	??_turnLeft^0,f,c
 10744   004556  D7FC               	bra	u5367
 10745   004558                     
 10746                           ;dc_motor.c: 414:         }
 10747   004558  4A2C               	infsnz	turnLeft@i^0,f,c
 10748   00455A  2A2D               	incf	(turnLeft@i+1)^0,f,c
 10749   00455C                     l638:
 10750   00455C  5028               	movf	turnLeft@turnRamp^0,w,c
 10751   00455E  6E29               	movwf	??_turnLeft^0,c
 10752   004560  6A2A               	clrf	(??_turnLeft+1)^0,c
 10753   004562  5029               	movf	??_turnLeft^0,w,c
 10754   004564  5C2C               	subwf	turnLeft@i^0,w,c
 10755   004566  502D               	movf	(turnLeft@i+1)^0,w,c
 10756   004568  0A80               	xorlw	128
 10757   00456A  6E2B               	movwf	(??_turnLeft+2)^0,c
 10758   00456C  502A               	movf	(??_turnLeft+1)^0,w,c
 10759   00456E  0A80               	xorlw	128
 10760   004570  582B               	subwfb	(??_turnLeft+2)^0,w,c
 10761   004572  A0D8               	btfss	status,0,c
 10762   004574  EFBE  F022         	goto	u2141
 10763   004578  EFC0  F022         	goto	u2140
 10764   00457C                     u2141:
 10765   00457C  EFA5  F022         	goto	l3224
 10766   004580                     u2140:
 10767   004580                     
 10768                           ;dc_motor.c: 415:     }
 10769   004580  062E               	decf	turnLeft@cur_power^0,f,c
 10770   004582  A0D8               	btfss	status,0,c
 10771   004584  062F               	decf	(turnLeft@cur_power+1)^0,f,c
 10772   004586  EF70  F022         	goto	l3212
 10773   00458A                     l641:
 10774   00458A  0012               	return		;funcret
 10775   00458C                     __end_of_turnLeft:
 10776                           	callstack 0
 10777                           
 10778 ;; *************** function _setMotorPWM *****************
 10779 ;; Defined at:
 10780 ;;		line 68 in file "dc_motor.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;  m               2   27[COMRAM] PTR struct DC_motor
 10783 ;;		 -> main@motorR(10), main@motorL(10), 
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;  negDuty         1   32[COMRAM] unsigned char 
 10786 ;;  posDuty         1   31[COMRAM] unsigned char 
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  1    wreg      void 
 10789 ;; Registers used:
 10790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10799 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10800 ;;Total ram usage:        6 bytes
 10801 ;; Hardware stack levels used: 1
 10802 ;; Hardware stack levels required when called: 6
 10803 ;; This function calls:
 10804 ;;		___lwdiv
 10805 ;;		___wmul
 10806 ;; This function is called by:
 10807 ;;		_stop
 10808 ;;		_turnLeft
 10809 ;;		_turnRight
 10810 ;;		_fullSpeedAhead
 10811 ;;		_reverseOneSquare
 10812 ;;		_wallAdjust
 10813 ;;		_reverseShort
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817                           	psect	text36
 10818   00458C                     __ptext36:
 10819                           	callstack 0
 10820   00458C                     _setMotorPWM:
 10821                           	callstack 23
 10822   00458C                     
 10823                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 10824   00458C  EE20 F002          	lfsr	2,2
 10825   004590  501C               	movf	setMotorPWM@m^0,w,c
 10826   004592  26D9               	addwf	fsr2l,f,c
 10827   004594  501D               	movf	(setMotorPWM@m+1)^0,w,c
 10828   004596  22DA               	addwfc	fsr2h,f,c
 10829   004598  50DF               	movf	indf2,w,c
 10830   00459A  B4D8               	btfsc	status,2,c
 10831   00459C  EFD2  F022         	goto	u1931
 10832   0045A0  EFD4  F022         	goto	u1930
 10833   0045A4                     u1931:
 10834   0045A4  EF08  F023         	goto	l3040
 10835   0045A8                     u1930:
 10836   0045A8                     
 10837                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 10838   0045A8  C01C  FFD9         	movff	setMotorPWM@m,fsr2l
 10839   0045AC  C01D  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10840   0045B0  50DF               	movf	indf2,w,c
 10841   0045B2  6E1E               	movwf	??_setMotorPWM^0,c
 10842   0045B4  501E               	movf	??_setMotorPWM^0,w,c
 10843   0045B6  6E0F               	movwf	___wmul@multiplier^0,c
 10844   0045B8  6A10               	clrf	(___wmul@multiplier+1)^0,c
 10845   0045BA  EE20 F003          	lfsr	2,3
 10846   0045BE  501C               	movf	setMotorPWM@m^0,w,c
 10847   0045C0  26D9               	addwf	fsr2l,f,c
 10848   0045C2  501D               	movf	(setMotorPWM@m+1)^0,w,c
 10849   0045C4  22DA               	addwfc	fsr2h,f,c
 10850   0045C6  CFDE F011          	movff	postinc2,___wmul@multiplicand
 10851   0045CA  CFDD F012          	movff	postdec2,___wmul@multiplicand+1
 10852   0045CE  EC62  F028         	call	___wmul	;wreg free
 10853   0045D2  C00F  F015         	movff	?___wmul,___lwdiv@dividend
 10854   0045D6  C010  F016         	movff	?___wmul+1,___lwdiv@dividend+1
 10855   0045DA  0E00               	movlw	0
 10856   0045DC  6E18               	movwf	(___lwdiv@divisor+1)^0,c
 10857   0045DE  0E64               	movlw	100
 10858   0045E0  6E17               	movwf	___lwdiv@divisor^0,c
 10859   0045E2  EC96  F026         	call	___lwdiv	;wreg free
 10860   0045E6  EE20 F003          	lfsr	2,3
 10861   0045EA  501C               	movf	setMotorPWM@m^0,w,c
 10862   0045EC  26D9               	addwf	fsr2l,f,c
 10863   0045EE  501D               	movf	(setMotorPWM@m+1)^0,w,c
 10864   0045F0  22DA               	addwfc	fsr2h,f,c
 10865   0045F2  50DF               	movf	indf2,w,c
 10866   0045F4  6E1F               	movwf	(??_setMotorPWM+1)^0,c
 10867   0045F6  5015               	movf	?___lwdiv^0,w,c
 10868   0045F8  5C1F               	subwf	(??_setMotorPWM+1)^0,w,c
 10869   0045FA  6E20               	movwf	setMotorPWM@posDuty^0,c
 10870   0045FC                     
 10871                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 10872   0045FC  EE20 F003          	lfsr	2,3
 10873   004600  501C               	movf	setMotorPWM@m^0,w,c
 10874   004602  26D9               	addwf	fsr2l,f,c
 10875   004604  501D               	movf	(setMotorPWM@m+1)^0,w,c
 10876   004606  22DA               	addwfc	fsr2h,f,c
 10877   004608  50DF               	movf	indf2,w,c
 10878   00460A  6E21               	movwf	setMotorPWM@negDuty^0,c
 10879                           
 10880                           ;dc_motor.c: 75:     }
 10881   00460C  EF2B  F023         	goto	l3044
 10882   004610                     l3040:
 10883                           
 10884                           ;dc_motor.c: 77:         posDuty=0;
 10885   004610  0E00               	movlw	0
 10886   004612  6E20               	movwf	setMotorPWM@posDuty^0,c
 10887   004614                     
 10888                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 10889   004614  C01C  FFD9         	movff	setMotorPWM@m,fsr2l
 10890   004618  C01D  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10891   00461C  50DF               	movf	indf2,w,c
 10892   00461E  6E1E               	movwf	??_setMotorPWM^0,c
 10893   004620  501E               	movf	??_setMotorPWM^0,w,c
 10894   004622  6E0F               	movwf	___wmul@multiplier^0,c
 10895   004624  6A10               	clrf	(___wmul@multiplier+1)^0,c
 10896   004626  EE20 F003          	lfsr	2,3
 10897   00462A  501C               	movf	setMotorPWM@m^0,w,c
 10898   00462C  26D9               	addwf	fsr2l,f,c
 10899   00462E  501D               	movf	(setMotorPWM@m+1)^0,w,c
 10900   004630  22DA               	addwfc	fsr2h,f,c
 10901   004632  CFDE F011          	movff	postinc2,___wmul@multiplicand
 10902   004636  CFDD F012          	movff	postdec2,___wmul@multiplicand+1
 10903   00463A  EC62  F028         	call	___wmul	;wreg free
 10904   00463E  C00F  F015         	movff	?___wmul,___lwdiv@dividend
 10905   004642  C010  F016         	movff	?___wmul+1,___lwdiv@dividend+1
 10906   004646  0E00               	movlw	0
 10907   004648  6E18               	movwf	(___lwdiv@divisor+1)^0,c
 10908   00464A  0E64               	movlw	100
 10909   00464C  6E17               	movwf	___lwdiv@divisor^0,c
 10910   00464E  EC96  F026         	call	___lwdiv	;wreg free
 10911   004652  5015               	movf	?___lwdiv^0,w,c
 10912   004654  6E21               	movwf	setMotorPWM@negDuty^0,c
 10913   004656                     l3044:
 10914                           
 10915                           ;dc_motor.c: 81:     if (m->direction) {
 10916   004656  EE20 F001          	lfsr	2,1
 10917   00465A  501C               	movf	setMotorPWM@m^0,w,c
 10918   00465C  26D9               	addwf	fsr2l,f,c
 10919   00465E  501D               	movf	(setMotorPWM@m+1)^0,w,c
 10920   004660  22DA               	addwfc	fsr2h,f,c
 10921   004662  50DF               	movf	indf2,w,c
 10922   004664  B4D8               	btfsc	status,2,c
 10923   004666  EF37  F023         	goto	u1941
 10924   00466A  EF39  F023         	goto	u1940
 10925   00466E                     u1941:
 10926   00466E  EF5B  F023         	goto	l3048
 10927   004672                     u1940:
 10928   004672                     
 10929                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 10930   004672  EE20 F005          	lfsr	2,5
 10931   004676  501C               	movf	setMotorPWM@m^0,w,c
 10932   004678  26D9               	addwf	fsr2l,f,c
 10933   00467A  501D               	movf	(setMotorPWM@m+1)^0,w,c
 10934   00467C  22DA               	addwfc	fsr2h,f,c
 10935   00467E  CFDE F01E          	movff	postinc2,??_setMotorPWM
 10936   004682  CFDD F01F          	movff	postdec2,??_setMotorPWM+1
 10937   004686  C01E  FFD9         	movff	??_setMotorPWM,fsr2l
 10938   00468A  C01F  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10939   00468E  C020  FFDF         	movff	setMotorPWM@posDuty,indf2
 10940                           
 10941                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 10942   004692  EE20 F007          	lfsr	2,7
 10943   004696  501C               	movf	setMotorPWM@m^0,w,c
 10944   004698  26D9               	addwf	fsr2l,f,c
 10945   00469A  501D               	movf	(setMotorPWM@m+1)^0,w,c
 10946   00469C  22DA               	addwfc	fsr2h,f,c
 10947   00469E  CFDE F01E          	movff	postinc2,??_setMotorPWM
 10948   0046A2  CFDD F01F          	movff	postdec2,??_setMotorPWM+1
 10949   0046A6  C01E  FFD9         	movff	??_setMotorPWM,fsr2l
 10950   0046AA  C01F  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10951   0046AE  C021  FFDF         	movff	setMotorPWM@negDuty,indf2
 10952                           
 10953                           ;dc_motor.c: 84:     } else {
 10954   0046B2  EF7B  F023         	goto	l547
 10955   0046B6                     l3048:
 10956                           
 10957                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
 10958   0046B6  EE20 F005          	lfsr	2,5
 10959   0046BA  501C               	movf	setMotorPWM@m^0,w,c
 10960   0046BC  26D9               	addwf	fsr2l,f,c
 10961   0046BE  501D               	movf	(setMotorPWM@m+1)^0,w,c
 10962   0046C0  22DA               	addwfc	fsr2h,f,c
 10963   0046C2  CFDE F01E          	movff	postinc2,??_setMotorPWM
 10964   0046C6  CFDD F01F          	movff	postdec2,??_setMotorPWM+1
 10965   0046CA  C01E  FFD9         	movff	??_setMotorPWM,fsr2l
 10966   0046CE  C01F  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10967   0046D2  C021  FFDF         	movff	setMotorPWM@negDuty,indf2
 10968                           
 10969                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
 10970   0046D6  EE20 F007          	lfsr	2,7
 10971   0046DA  501C               	movf	setMotorPWM@m^0,w,c
 10972   0046DC  26D9               	addwf	fsr2l,f,c
 10973   0046DE  501D               	movf	(setMotorPWM@m+1)^0,w,c
 10974   0046E0  22DA               	addwfc	fsr2h,f,c
 10975   0046E2  CFDE F01E          	movff	postinc2,??_setMotorPWM
 10976   0046E6  CFDD F01F          	movff	postdec2,??_setMotorPWM+1
 10977   0046EA  C01E  FFD9         	movff	??_setMotorPWM,fsr2l
 10978   0046EE  C01F  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10979   0046F2  C020  FFDF         	movff	setMotorPWM@posDuty,indf2
 10980   0046F6                     l547:
 10981   0046F6  0012               	return		;funcret
 10982   0046F8                     __end_of_setMotorPWM:
 10983                           	callstack 0
 10984                           
 10985 ;; *************** function ___wmul *****************
 10986 ;; Defined at:
 10987 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;  multiplier      2   14[COMRAM] unsigned int 
 10990 ;;  multiplicand    2   16[COMRAM] unsigned int 
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;  product         2   18[COMRAM] unsigned int 
 10993 ;; Return value:  Size  Location     Type
 10994 ;;                  2   14[COMRAM] unsigned int 
 10995 ;; Registers used:
 10996 ;;		wreg, status,2, status,0, prodl, prodh
 10997 ;; Tracked objects:
 10998 ;;		On entry : 0/0
 10999 ;;		On exit  : 0/0
 11000 ;;		Unchanged: 0/0
 11001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11002 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11003 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11005 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11006 ;;Total ram usage:        6 bytes
 11007 ;; Hardware stack levels used: 1
 11008 ;; Hardware stack levels required when called: 5
 11009 ;; This function calls:
 11010 ;;		Nothing
 11011 ;; This function is called by:
 11012 ;;		_setMotorPWM
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text37
 11017   0050C4                     __ptext37:
 11018                           	callstack 0
 11019   0050C4                     ___wmul:
 11020                           	callstack 23
 11021   0050C4  500F               	movf	___wmul@multiplier^0,w,c
 11022   0050C6  0211               	mulwf	___wmul@multiplicand^0,c
 11023   0050C8  CFF3 F013          	movff	prodl,___wmul@product
 11024   0050CC  CFF4 F014          	movff	prodh,___wmul@product+1
 11025   0050D0  500F               	movf	___wmul@multiplier^0,w,c
 11026   0050D2  0212               	mulwf	(___wmul@multiplicand+1)^0,c
 11027   0050D4  50F3               	movf	243,w,c
 11028   0050D6  2614               	addwf	(___wmul@product+1)^0,f,c
 11029   0050D8  5010               	movf	(___wmul@multiplier+1)^0,w,c
 11030   0050DA  0211               	mulwf	___wmul@multiplicand^0,c
 11031   0050DC  50F3               	movf	243,w,c
 11032   0050DE  2614               	addwf	(___wmul@product+1)^0,f,c
 11033   0050E0  C013  F00F         	movff	___wmul@product,?___wmul
 11034   0050E4  C014  F010         	movff	___wmul@product+1,?___wmul+1
 11035   0050E8  0012               	return		;funcret
 11036   0050EA                     __end_of___wmul:
 11037                           	callstack 0
 11038                           
 11039 ;; *************** function ___lwdiv *****************
 11040 ;; Defined at:
 11041 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;  dividend        2   20[COMRAM] unsigned int 
 11044 ;;  divisor         2   22[COMRAM] unsigned int 
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;  quotient        2   24[COMRAM] unsigned int 
 11047 ;;  counter         1   26[COMRAM] unsigned char 
 11048 ;; Return value:  Size  Location     Type
 11049 ;;                  2   20[COMRAM] unsigned int 
 11050 ;; Registers used:
 11051 ;;		wreg, status,2, status,0
 11052 ;; Tracked objects:
 11053 ;;		On entry : 0/0
 11054 ;;		On exit  : 0/0
 11055 ;;		Unchanged: 0/0
 11056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11058 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11060 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11061 ;;Total ram usage:        7 bytes
 11062 ;; Hardware stack levels used: 1
 11063 ;; Hardware stack levels required when called: 5
 11064 ;; This function calls:
 11065 ;;		Nothing
 11066 ;; This function is called by:
 11067 ;;		_color_clear_init_interrupts
 11068 ;;		_setMotorPWM
 11069 ;; This function uses a non-reentrant model
 11070 ;;
 11071                           
 11072                           	psect	text38
 11073   004D2C                     __ptext38:
 11074                           	callstack 0
 11075   004D2C                     ___lwdiv:
 11076                           	callstack 23
 11077   004D2C  0E00               	movlw	0
 11078   004D2E  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
 11079   004D30  0E00               	movlw	0
 11080   004D32  6E19               	movwf	___lwdiv@quotient^0,c
 11081   004D34  5017               	movf	___lwdiv@divisor^0,w,c
 11082   004D36  1018               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11083   004D38  B4D8               	btfsc	status,2,c
 11084   004D3A  EFA1  F026         	goto	u1901
 11085   004D3E  EFA3  F026         	goto	u1900
 11086   004D42                     u1901:
 11087   004D42  EFCB  F026         	goto	l1258
 11088   004D46                     u1900:
 11089   004D46  0E01               	movlw	1
 11090   004D48  6E1B               	movwf	___lwdiv@counter^0,c
 11091   004D4A  EFAB  F026         	goto	l3008
 11092   004D4E                     l3006:
 11093   004D4E  90D8               	bcf	status,0,c
 11094   004D50  3617               	rlcf	___lwdiv@divisor^0,f,c
 11095   004D52  3618               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11096   004D54  2A1B               	incf	___lwdiv@counter^0,f,c
 11097   004D56                     l3008:
 11098   004D56  AE18               	btfss	(___lwdiv@divisor+1)^0,7,c
 11099   004D58  EFB0  F026         	goto	u1911
 11100   004D5C  EFB2  F026         	goto	u1910
 11101   004D60                     u1911:
 11102   004D60  EFA7  F026         	goto	l3006
 11103   004D64                     u1910:
 11104   004D64                     l3010:
 11105   004D64  90D8               	bcf	status,0,c
 11106   004D66  3619               	rlcf	___lwdiv@quotient^0,f,c
 11107   004D68  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11108   004D6A  5017               	movf	___lwdiv@divisor^0,w,c
 11109   004D6C  5C15               	subwf	___lwdiv@dividend^0,w,c
 11110   004D6E  5018               	movf	(___lwdiv@divisor+1)^0,w,c
 11111   004D70  5816               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11112   004D72  A0D8               	btfss	status,0,c
 11113   004D74  EFBE  F026         	goto	u1921
 11114   004D78  EFC0  F026         	goto	u1920
 11115   004D7C                     u1921:
 11116   004D7C  EFC5  F026         	goto	l3018
 11117   004D80                     u1920:
 11118   004D80  5017               	movf	___lwdiv@divisor^0,w,c
 11119   004D82  5E15               	subwf	___lwdiv@dividend^0,f,c
 11120   004D84  5018               	movf	(___lwdiv@divisor+1)^0,w,c
 11121   004D86  5A16               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11122   004D88  8019               	bsf	___lwdiv@quotient^0,0,c
 11123   004D8A                     l3018:
 11124   004D8A  90D8               	bcf	status,0,c
 11125   004D8C  3218               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11126   004D8E  3217               	rrcf	___lwdiv@divisor^0,f,c
 11127   004D90  2E1B               	decfsz	___lwdiv@counter^0,f,c
 11128   004D92  EFB2  F026         	goto	l3010
 11129   004D96                     l1258:
 11130   004D96  C019  F015         	movff	___lwdiv@quotient,?___lwdiv
 11131   004D9A  C01A  F016         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11132   004D9E  0012               	return		;funcret
 11133   004DA0                     __end_of___lwdiv:
 11134                           	callstack 0
 11135                           
 11136 ;; *************** function _batteryLevel *****************
 11137 ;; Defined at:
 11138 ;;		line 6 in file "battery.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;		None
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;  batteryQuart    1   23[COMRAM] unsigned char 
 11143 ;;  batteryVolta    1   22[COMRAM] unsigned char 
 11144 ;; Return value:  Size  Location     Type
 11145 ;;                  1    wreg      void 
 11146 ;; Registers used:
 11147 ;;		wreg, status,2, status,0, cstack
 11148 ;; Tracked objects:
 11149 ;;		On entry : 0/0
 11150 ;;		On exit  : 0/0
 11151 ;;		Unchanged: 0/0
 11152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11157 ;;Total ram usage:        2 bytes
 11158 ;; Hardware stack levels used: 1
 11159 ;; Hardware stack levels required when called: 6
 11160 ;; This function calls:
 11161 ;;		_ADC_getval
 11162 ;;		_ADC_init
 11163 ;;		___awdiv
 11164 ;; This function is called by:
 11165 ;;		_main
 11166 ;; This function uses a non-reentrant model
 11167 ;;
 11168                           
 11169                           	psect	text39
 11170   004ECC                     __ptext39:
 11171                           	callstack 0
 11172   004ECC                     _batteryLevel:
 11173                           	callstack 24
 11174   004ECC                     
 11175                           ;battery.c: 7:     ADC_init();
 11176   004ECC  ECEC  F028         	call	_ADC_init	;wreg free
 11177                           
 11178                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
 11179   004ED0  ECF9  F028         	call	_ADC_getval	;wreg free
 11180   004ED4  6E17               	movwf	batteryLevel@batteryVoltage^0,c
 11181   004ED6                     
 11182                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
 11183   004ED6  C017  F00F         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
 11184   004EDA  6A10               	clrf	(___awdiv@dividend+1)^0,c
 11185   004EDC  0E00               	movlw	0
 11186   004EDE  6E12               	movwf	(___awdiv@divisor+1)^0,c
 11187   004EE0  0E18               	movlw	24
 11188   004EE2  6E11               	movwf	___awdiv@divisor^0,c
 11189   004EE4  ECF8  F024         	call	___awdiv	;wreg free
 11190   004EE8  500F               	movf	?___awdiv^0,w,c
 11191   004EEA  6E18               	movwf	batteryLevel@batteryQuarter^0,c
 11192   004EEC                     
 11193                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
 11194   004EEC  A218               	btfss	batteryLevel@batteryQuarter^0,1,c
 11195   004EEE  EF7B  F027         	goto	u2641
 11196   004EF2  EF7D  F027         	goto	u2640
 11197   004EF6                     u2641:
 11198   004EF6  EF80  F027         	goto	l459
 11199   004EFA                     u2640:
 11200   004EFA  8E7C               	bsf	124,7,c	;volatile
 11201   004EFC  EF81  F027         	goto	l460
 11202   004F00                     l459:
 11203   004F00  9E7C               	bcf	124,7,c	;volatile
 11204   004F02                     l460:
 11205                           
 11206                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
 11207   004F02  A018               	btfss	batteryLevel@batteryQuarter^0,0,c
 11208   004F04  EF86  F027         	goto	u2651
 11209   004F08  EF88  F027         	goto	u2650
 11210   004F0C                     u2651:
 11211   004F0C  EF8B  F027         	goto	l461
 11212   004F10                     u2650:
 11213   004F10  8680               	bsf	128,3,c	;volatile
 11214   004F12  EF8C  F027         	goto	l463
 11215   004F16                     l461:
 11216   004F16  9680               	bcf	128,3,c	;volatile
 11217   004F18                     l463:
 11218   004F18  0012               	return		;funcret
 11219   004F1A                     __end_of_batteryLevel:
 11220                           	callstack 0
 11221                           
 11222 ;; *************** function ___awdiv *****************
 11223 ;; Defined at:
 11224 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 11225 ;; Parameters:    Size  Location     Type
 11226 ;;  dividend        2   14[COMRAM] int 
 11227 ;;  divisor         2   16[COMRAM] int 
 11228 ;; Auto vars:     Size  Location     Type
 11229 ;;  quotient        2   20[COMRAM] int 
 11230 ;;  sign            1   19[COMRAM] unsigned char 
 11231 ;;  counter         1   18[COMRAM] unsigned char 
 11232 ;; Return value:  Size  Location     Type
 11233 ;;                  2   14[COMRAM] int 
 11234 ;; Registers used:
 11235 ;;		wreg, status,2, status,0
 11236 ;; Tracked objects:
 11237 ;;		On entry : 0/0
 11238 ;;		On exit  : 0/0
 11239 ;;		Unchanged: 0/0
 11240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11242 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11244 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11245 ;;Total ram usage:        8 bytes
 11246 ;; Hardware stack levels used: 1
 11247 ;; Hardware stack levels required when called: 5
 11248 ;; This function calls:
 11249 ;;		Nothing
 11250 ;; This function is called by:
 11251 ;;		_batteryLevel
 11252 ;; This function uses a non-reentrant model
 11253 ;;
 11254                           
 11255                           	psect	text40
 11256   0049F0                     __ptext40:
 11257                           	callstack 0
 11258   0049F0                     ___awdiv:
 11259                           	callstack 24
 11260   0049F0  0E00               	movlw	0
 11261   0049F2  6E14               	movwf	___awdiv@sign^0,c
 11262   0049F4  BE12               	btfsc	(___awdiv@divisor+1)^0,7,c
 11263   0049F6  EF01  F025         	goto	u2550
 11264   0049FA  EFFF  F024         	goto	u2551
 11265   0049FE                     u2551:
 11266   0049FE  EF07  F025         	goto	l3630
 11267   004A02                     u2550:
 11268   004A02  6C11               	negf	___awdiv@divisor^0,c
 11269   004A04  1E12               	comf	(___awdiv@divisor+1)^0,f,c
 11270   004A06  B0D8               	btfsc	status,0,c
 11271   004A08  2A12               	incf	(___awdiv@divisor+1)^0,f,c
 11272   004A0A  0E01               	movlw	1
 11273   004A0C  6E14               	movwf	___awdiv@sign^0,c
 11274   004A0E                     l3630:
 11275   004A0E  BE10               	btfsc	(___awdiv@dividend+1)^0,7,c
 11276   004A10  EF0E  F025         	goto	u2560
 11277   004A14  EF0C  F025         	goto	u2561
 11278   004A18                     u2561:
 11279   004A18  EF14  F025         	goto	l3636
 11280   004A1C                     u2560:
 11281   004A1C  6C0F               	negf	___awdiv@dividend^0,c
 11282   004A1E  1E10               	comf	(___awdiv@dividend+1)^0,f,c
 11283   004A20  B0D8               	btfsc	status,0,c
 11284   004A22  2A10               	incf	(___awdiv@dividend+1)^0,f,c
 11285   004A24  0E01               	movlw	1
 11286   004A26  1A14               	xorwf	___awdiv@sign^0,f,c
 11287   004A28                     l3636:
 11288   004A28  0E00               	movlw	0
 11289   004A2A  6E16               	movwf	(___awdiv@quotient+1)^0,c
 11290   004A2C  0E00               	movlw	0
 11291   004A2E  6E15               	movwf	___awdiv@quotient^0,c
 11292   004A30  5011               	movf	___awdiv@divisor^0,w,c
 11293   004A32  1012               	iorwf	(___awdiv@divisor+1)^0,w,c
 11294   004A34  B4D8               	btfsc	status,2,c
 11295   004A36  EF1F  F025         	goto	u2571
 11296   004A3A  EF21  F025         	goto	u2570
 11297   004A3E                     u2571:
 11298   004A3E  EF49  F025         	goto	l3658
 11299   004A42                     u2570:
 11300   004A42  0E01               	movlw	1
 11301   004A44  6E13               	movwf	___awdiv@counter^0,c
 11302   004A46  EF29  F025         	goto	l3644
 11303   004A4A                     l3642:
 11304   004A4A  90D8               	bcf	status,0,c
 11305   004A4C  3611               	rlcf	___awdiv@divisor^0,f,c
 11306   004A4E  3612               	rlcf	(___awdiv@divisor+1)^0,f,c
 11307   004A50  2A13               	incf	___awdiv@counter^0,f,c
 11308   004A52                     l3644:
 11309   004A52  AE12               	btfss	(___awdiv@divisor+1)^0,7,c
 11310   004A54  EF2E  F025         	goto	u2581
 11311   004A58  EF30  F025         	goto	u2580
 11312   004A5C                     u2581:
 11313   004A5C  EF25  F025         	goto	l3642
 11314   004A60                     u2580:
 11315   004A60                     l3646:
 11316   004A60  90D8               	bcf	status,0,c
 11317   004A62  3615               	rlcf	___awdiv@quotient^0,f,c
 11318   004A64  3616               	rlcf	(___awdiv@quotient+1)^0,f,c
 11319   004A66  5011               	movf	___awdiv@divisor^0,w,c
 11320   004A68  5C0F               	subwf	___awdiv@dividend^0,w,c
 11321   004A6A  5012               	movf	(___awdiv@divisor+1)^0,w,c
 11322   004A6C  5810               	subwfb	(___awdiv@dividend+1)^0,w,c
 11323   004A6E  A0D8               	btfss	status,0,c
 11324   004A70  EF3C  F025         	goto	u2591
 11325   004A74  EF3E  F025         	goto	u2590
 11326   004A78                     u2591:
 11327   004A78  EF43  F025         	goto	l3654
 11328   004A7C                     u2590:
 11329   004A7C  5011               	movf	___awdiv@divisor^0,w,c
 11330   004A7E  5E0F               	subwf	___awdiv@dividend^0,f,c
 11331   004A80  5012               	movf	(___awdiv@divisor+1)^0,w,c
 11332   004A82  5A10               	subwfb	(___awdiv@dividend+1)^0,f,c
 11333   004A84  8015               	bsf	___awdiv@quotient^0,0,c
 11334   004A86                     l3654:
 11335   004A86  90D8               	bcf	status,0,c
 11336   004A88  3212               	rrcf	(___awdiv@divisor+1)^0,f,c
 11337   004A8A  3211               	rrcf	___awdiv@divisor^0,f,c
 11338   004A8C  2E13               	decfsz	___awdiv@counter^0,f,c
 11339   004A8E  EF30  F025         	goto	l3646
 11340   004A92                     l3658:
 11341   004A92  5014               	movf	___awdiv@sign^0,w,c
 11342   004A94  B4D8               	btfsc	status,2,c
 11343   004A96  EF4F  F025         	goto	u2601
 11344   004A9A  EF51  F025         	goto	u2600
 11345   004A9E                     u2601:
 11346   004A9E  EF55  F025         	goto	l3662
 11347   004AA2                     u2600:
 11348   004AA2  6C15               	negf	___awdiv@quotient^0,c
 11349   004AA4  1E16               	comf	(___awdiv@quotient+1)^0,f,c
 11350   004AA6  B0D8               	btfsc	status,0,c
 11351   004AA8  2A16               	incf	(___awdiv@quotient+1)^0,f,c
 11352   004AAA                     l3662:
 11353   004AAA  C015  F00F         	movff	___awdiv@quotient,?___awdiv
 11354   004AAE  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
 11355   004AB2  0012               	return		;funcret
 11356   004AB4                     __end_of___awdiv:
 11357                           	callstack 0
 11358                           
 11359 ;; *************** function _ADC_init *****************
 11360 ;; Defined at:
 11361 ;;		line 9 in file "ADC.c"
 11362 ;; Parameters:    Size  Location     Type
 11363 ;;		None
 11364 ;; Auto vars:     Size  Location     Type
 11365 ;;		None
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  1    wreg      void 
 11368 ;; Registers used:
 11369 ;;		wreg, status,2
 11370 ;; Tracked objects:
 11371 ;;		On entry : 0/0
 11372 ;;		On exit  : 0/0
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11379 ;;Total ram usage:        0 bytes
 11380 ;; Hardware stack levels used: 1
 11381 ;; Hardware stack levels required when called: 5
 11382 ;; This function calls:
 11383 ;;		Nothing
 11384 ;; This function is called by:
 11385 ;;		_batteryLevel
 11386 ;; This function uses a non-reentrant model
 11387 ;;
 11388                           
 11389                           	psect	text41
 11390   0051D8                     __ptext41:
 11391                           	callstack 0
 11392   0051D8                     _ADC_init:
 11393                           	callstack 24
 11394   0051D8                     
 11395                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 11396   0051D8  8C86               	bsf	134,6,c	;volatile
 11397                           
 11398                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 11399   0051DA  010E               	movlb	14	; () banked
 11400   0051DC  8DB4               	bsf	180,6,b	;volatile
 11401                           
 11402                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 11403   0051DE  010F               	movlb	15	; () banked
 11404   0051E0  9958               	bcf	88,4,b	;volatile
 11405   0051E2                     
 11406                           ; BSR set to: 15
 11407                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 11408   0051E2  0EFC               	movlw	-4
 11409   0051E4  1758               	andwf	88,f,b	;volatile
 11410                           
 11411                           ;ADC.c: 17:     ADPCH=0b101110;
 11412   0051E6  0E2E               	movlw	46
 11413   0051E8  6F5F               	movwf	95,b	;volatile
 11414   0051EA                     
 11415                           ; BSR set to: 15
 11416                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 11417   0051EA  9460               	bcf	96,2,c	;volatile
 11418   0051EC                     
 11419                           ; BSR set to: 15
 11420                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 11421   0051EC  8860               	bsf	96,4,c	;volatile
 11422   0051EE                     
 11423                           ; BSR set to: 15
 11424                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 11425   0051EE  8E60               	bsf	96,7,c	;volatile
 11426   0051F0                     
 11427                           ; BSR set to: 15
 11428   0051F0  0012               	return		;funcret
 11429   0051F2                     __end_of_ADC_init:
 11430                           	callstack 0
 11431                           
 11432 ;; *************** function _ADC_getval *****************
 11433 ;; Defined at:
 11434 ;;		line 23 in file "ADC.c"
 11435 ;; Parameters:    Size  Location     Type
 11436 ;;		None
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;  tmpval          1   14[COMRAM] unsigned char 
 11439 ;; Return value:  Size  Location     Type
 11440 ;;                  1    wreg      unsigned char 
 11441 ;; Registers used:
 11442 ;;		wreg, status,2
 11443 ;; Tracked objects:
 11444 ;;		On entry : 0/0
 11445 ;;		On exit  : 0/0
 11446 ;;		Unchanged: 0/0
 11447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11451 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11452 ;;Total ram usage:        1 bytes
 11453 ;; Hardware stack levels used: 1
 11454 ;; Hardware stack levels required when called: 5
 11455 ;; This function calls:
 11456 ;;		Nothing
 11457 ;; This function is called by:
 11458 ;;		_batteryLevel
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           	psect	text42
 11463   0051F2                     __ptext42:
 11464                           	callstack 0
 11465   0051F2                     _ADC_getval:
 11466                           	callstack 24
 11467   0051F2                     
 11468                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
 11469   0051F2  8060               	bsf	96,0,c	;volatile
 11470   0051F4                     l445:
 11471   0051F4  B060               	btfsc	96,0,c	;volatile
 11472   0051F6  EFFF  F028         	goto	u2391
 11473   0051FA  EF01  F029         	goto	u2390
 11474   0051FE                     u2391:
 11475   0051FE  EFFA  F028         	goto	l445
 11476   005202                     u2390:
 11477   005202                     
 11478                           ;ADC.c: 31:     tmpval = ADRESH;
 11479   005202  CF64 F00F          	movff	3940,ADC_getval@tmpval	;volatile
 11480   005206                     
 11481                           ;ADC.c: 35:     return tmpval;
 11482   005206  500F               	movf	ADC_getval@tmpval^0,w,c
 11483   005208  0012               	return		;funcret
 11484   00520A                     __end_of_ADC_getval:
 11485                           	callstack 0
 11486                           
 11487 ;; *************** function _Timer0_init *****************
 11488 ;; Defined at:
 11489 ;;		line 7 in file "timers.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;		None
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;		None
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  1    wreg      void 
 11496 ;; Registers used:
 11497 ;;		wreg, status,2
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11507 ;;Total ram usage:        0 bytes
 11508 ;; Hardware stack levels used: 1
 11509 ;; Hardware stack levels required when called: 5
 11510 ;; This function calls:
 11511 ;;		Nothing
 11512 ;; This function is called by:
 11513 ;;		_main
 11514 ;; This function uses a non-reentrant model
 11515 ;;
 11516                           
 11517                           	psect	text43
 11518   00517A                     __ptext43:
 11519                           	callstack 0
 11520   00517A                     _Timer0_init:
 11521                           	callstack 25
 11522   00517A                     
 11523                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 11524   00517A  50D6               	movf	214,w,c	;volatile
 11525   00517C  0B1F               	andlw	-225
 11526   00517E  0940               	iorlw	64
 11527   005180  6ED6               	movwf	214,c	;volatile
 11528   005182                     
 11529                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 11530   005182  88D6               	bsf	214,4,c	;volatile
 11531                           
 11532                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
 11533   005184  50D6               	movf	214,w,c	;volatile
 11534   005186  0BF0               	andlw	-16
 11535   005188  090B               	iorlw	11
 11536   00518A  6ED6               	movwf	214,c	;volatile
 11537   00518C                     
 11538                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 11539   00518C  88D5               	bsf	213,4,c	;volatile
 11540                           
 11541                           ;timers.c: 15:     TMR0H=0;
 11542   00518E  0E00               	movlw	0
 11543   005190  6ED4               	movwf	212,c	;volatile
 11544                           
 11545                           ;timers.c: 16:     TMR0L=0;
 11546   005192  0E00               	movlw	0
 11547   005194  6ED3               	movwf	211,c	;volatile
 11548   005196                     
 11549                           ;timers.c: 17:     T0CON0bits.T0EN=1;
 11550   005196  8ED5               	bsf	213,7,c	;volatile
 11551   005198  0012               	return		;funcret
 11552   00519A                     __end_of_Timer0_init:
 11553                           	callstack 0
 11554                           
 11555 ;; *************** function _Interrupts_init *****************
 11556 ;; Defined at:
 11557 ;;		line 11 in file "interrupts.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;		None
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;		None
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  1    wreg      void 
 11564 ;; Registers used:
 11565 ;;		None
 11566 ;; Tracked objects:
 11567 ;;		On entry : 0/0
 11568 ;;		On exit  : 0/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11575 ;;Total ram usage:        0 bytes
 11576 ;; Hardware stack levels used: 1
 11577 ;; Hardware stack levels required when called: 5
 11578 ;; This function calls:
 11579 ;;		Nothing
 11580 ;; This function is called by:
 11581 ;;		_main
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           	psect	text44
 11586   005222                     __ptext44:
 11587                           	callstack 0
 11588   005222                     _Interrupts_init:
 11589                           	callstack 25
 11590   005222                     
 11591                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
 11592   005222  8082               	bsf	130,0,c	;volatile
 11593                           
 11594                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
 11595   005224  010E               	movlb	14	; () banked
 11596   005226  919A               	bcf	154,0,b	;volatile
 11597                           
 11598                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
 11599   005228  8129               	bsf	41,0,b	;volatile
 11600                           
 11601                           ;interrupts.c: 17:     IPR0bits.INT0IP = 1;
 11602   00522A  811F               	bsf	31,0,b	;volatile
 11603                           
 11604                           ;interrupts.c: 18:     INTCONbits.INT0EDG = 0;
 11605   00522C  90F2               	bcf	242,0,c	;volatile
 11606                           
 11607                           ;interrupts.c: 22:     TMR0IE=1;
 11608   00522E  8B29               	bsf	41,5,b	;volatile
 11609                           
 11610                           ;interrupts.c: 23:     PIE4bits.RC4IE=1;
 11611   005230  872D               	bsf	45,3,b	;volatile
 11612                           
 11613                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
 11614   005232  8CF2               	bsf	242,6,c	;volatile
 11615                           
 11616                           ;interrupts.c: 25:     INTCONbits.GIE=1;
 11617   005234  8EF2               	bsf	242,7,c	;volatile
 11618   005236                     
 11619                           ; BSR set to: 14
 11620   005236  0012               	return		;funcret
 11621   005238                     __end_of_Interrupts_init:
 11622                           	callstack 0
 11623                           
 11624 ;; *************** function _Buggy_init *****************
 11625 ;; Defined at:
 11626 ;;		line 7 in file "buggysetup.c"
 11627 ;; Parameters:    Size  Location     Type
 11628 ;;		None
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;		None
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  1    wreg      void 
 11633 ;; Registers used:
 11634 ;;		None
 11635 ;; Tracked objects:
 11636 ;;		On entry : 0/0
 11637 ;;		On exit  : 0/0
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11644 ;;Total ram usage:        0 bytes
 11645 ;; Hardware stack levels used: 1
 11646 ;; Hardware stack levels required when called: 5
 11647 ;; This function calls:
 11648 ;;		Nothing
 11649 ;; This function is called by:
 11650 ;;		_main
 11651 ;; This function uses a non-reentrant model
 11652 ;;
 11653                           
 11654                           	psect	text45
 11655   004F94                     __ptext45:
 11656                           	callstack 0
 11657   004F94                     _Buggy_init:
 11658                           	callstack 25
 11659   004F94                     
 11660                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
 11661   004F94  9E7C               	bcf	124,7,c	;volatile
 11662                           
 11663                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
 11664   004F96  9E84               	bcf	132,7,c	;volatile
 11665                           
 11666                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
 11667   004F98  9680               	bcf	128,3,c	;volatile
 11668                           
 11669                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
 11670   004F9A  9688               	bcf	136,3,c	;volatile
 11671                           
 11672                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
 11673   004F9C  8486               	bsf	134,2,c	;volatile
 11674                           
 11675                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
 11676   004F9E  010E               	movlb	14	; () banked
 11677   004FA0  95B4               	bcf	180,2,b	;volatile
 11678                           
 11679                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
 11680   004FA2  8686               	bsf	134,3,c	;volatile
 11681                           
 11682                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
 11683   004FA4  97B4               	bcf	180,3,b	;volatile
 11684                           
 11685                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
 11686   004FA6  9280               	bcf	128,1,c	;volatile
 11687                           
 11688                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
 11689   004FA8  9288               	bcf	136,1,c	;volatile
 11690                           
 11691                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
 11692   004FAA  987C               	bcf	124,4,c	;volatile
 11693                           
 11694                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
 11695   004FAC  9884               	bcf	132,4,c	;volatile
 11696                           
 11697                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
 11698   004FAE  967C               	bcf	124,3,c	;volatile
 11699                           
 11700                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
 11701   004FB0  9684               	bcf	132,3,c	;volatile
 11702                           
 11703                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
 11704   004FB2  97A7               	bcf	167,3,b	;volatile
 11705                           
 11706                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
 11707   004FB4  9080               	bcf	128,0,c	;volatile
 11708                           
 11709                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
 11710   004FB6  9088               	bcf	136,0,c	;volatile
 11711                           
 11712                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
 11713   004FB8  907E               	bcf	126,0,c	;volatile
 11714                           
 11715                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
 11716   004FBA  9086               	bcf	134,0,c	;volatile
 11717                           
 11718                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
 11719   004FBC  907F               	bcf	127,0,c	;volatile
 11720                           
 11721                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
 11722   004FBE  9087               	bcf	135,0,c	;volatile
 11723                           
 11724                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
 11725   004FC0  9E7D               	bcf	125,7,c	;volatile
 11726                           
 11727                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
 11728   004FC2  9E85               	bcf	133,7,c	;volatile
 11729                           
 11730                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
 11731   004FC4  9679               	bcf	121,3,c	;volatile
 11732                           
 11733                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
 11734   004FC6  9681               	bcf	129,3,c	;volatile
 11735   004FC8                     
 11736                           ; BSR set to: 14
 11737   004FC8  0012               	return		;funcret
 11738   004FCA                     __end_of_Buggy_init:
 11739                           	callstack 0
 11740                           
 11741 ;; *************** function _HighISR *****************
 11742 ;; Defined at:
 11743 ;;		line 33 in file "interrupts.c"
 11744 ;; Parameters:    Size  Location     Type
 11745 ;;		None
 11746 ;; Auto vars:     Size  Location     Type
 11747 ;;		None
 11748 ;; Return value:  Size  Location     Type
 11749 ;;                  1    wreg      void 
 11750 ;; Registers used:
 11751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11752 ;; Tracked objects:
 11753 ;;		On entry : 0/0
 11754 ;;		On exit  : 0/0
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11761 ;;Total ram usage:        2 bytes
 11762 ;; Hardware stack levels used: 1
 11763 ;; Hardware stack levels required when called: 4
 11764 ;; This function calls:
 11765 ;;		_getCharFromTxBuf
 11766 ;;		_isDataInTxBuf
 11767 ;;		_putCharToRxBuf
 11768 ;;		i2_color_clear_init_interrupts
 11769 ;; This function is called by:
 11770 ;;		Interrupt level 2
 11771 ;; This function uses a non-reentrant model
 11772 ;;
 11773                           
 11774                           	psect	intcode
 11775   000008                     __pintcode:
 11776                           	callstack 0
 11777   000008                     _HighISR:
 11778                           	callstack 21
 11779                           
 11780                           ; BSR set to: 14
 11781                           ;incstack = 0
 11782   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11783   00000A  CFD9 F00D          	movff	fsr2l,??_HighISR
 11784   00000E  CFDA F00E          	movff	fsr2h,??_HighISR+1
 11785   000012                     
 11786                           ;interrupts.c: 37:     if(PIR0bits.INT0IF){
 11787   000012  010E               	movlb	14	; () banked
 11788   000014  A133               	btfss	51,0,b	;volatile
 11789   000016  EF0F  F000         	goto	i2u365_41
 11790   00001A  EF11  F000         	goto	i2u365_40
 11791   00001E                     i2u365_41:
 11792   00001E  EF17  F000         	goto	i2l4494
 11793   000022                     i2u365_40:
 11794   000022                     
 11795                           ; BSR set to: 14
 11796                           ;interrupts.c: 38:         wall = 1;
 11797   000022  0E01               	movlw	1
 11798   000024  6E46               	movwf	_wall^0,c
 11799   000026                     
 11800                           ; BSR set to: 14
 11801                           ;interrupts.c: 39:         color_clear_init_interrupts();
 11802   000026  ECFD  F025         	call	i2_color_clear_init_interrupts	;wreg free
 11803   00002A                     
 11804                           ;interrupts.c: 40:         PIR0bits.INT0IF = 0;
 11805   00002A  010E               	movlb	14	; () banked
 11806   00002C  9133               	bcf	51,0,b	;volatile
 11807   00002E                     i2l4494:
 11808                           
 11809                           ; BSR set to: 14
 11810                           ;interrupts.c: 47:     if(TMR0IF){
 11811   00002E  AB33               	btfss	51,5,b	;volatile
 11812   000030  EF1C  F000         	goto	i2u366_41
 11813   000034  EF1E  F000         	goto	i2u366_40
 11814   000038                     i2u366_41:
 11815   000038  EF21  F000         	goto	i2l4500
 11816   00003C                     i2u366_40:
 11817   00003C                     
 11818                           ; BSR set to: 14
 11819                           ;interrupts.c: 48:         lost = 1;
 11820   00003C  0E01               	movlw	1
 11821   00003E  6E45               	movwf	_lost^0,c
 11822   000040                     
 11823                           ; BSR set to: 14
 11824                           ;interrupts.c: 49:         TMR0IF=0;
 11825   000040  9B33               	bcf	51,5,b	;volatile
 11826   000042                     i2l4500:
 11827                           
 11828                           ; BSR set to: 14
 11829                           ;interrupts.c: 56:     if(PIR4bits.RC4IF){
 11830   000042  A737               	btfss	55,3,b	;volatile
 11831   000044  EF26  F000         	goto	i2u367_41
 11832   000048  EF28  F000         	goto	i2u367_40
 11833   00004C                     i2u367_41:
 11834   00004C  EF2B  F000         	goto	i2l4504
 11835   000050                     i2u367_40:
 11836   000050                     
 11837                           ; BSR set to: 14
 11838                           ;interrupts.c: 58:         putCharToRxBuf(RC4REG);
 11839   000050  51E3               	movf	227,w,b	;volatile
 11840   000052  EC75  F028         	call	_putCharToRxBuf
 11841   000056                     i2l4504:
 11842                           
 11843                           ;interrupts.c: 62:     if(PIR4bits.TX4IF){
 11844   000056  010E               	movlb	14	; () banked
 11845   000058  A537               	btfss	55,2,b	;volatile
 11846   00005A  EF31  F000         	goto	i2u368_41
 11847   00005E  EF33  F000         	goto	i2u368_40
 11848   000062                     i2u368_41:
 11849   000062  EF43  F000         	goto	i2l364
 11850   000066                     i2u368_40:
 11851   000066                     
 11852                           ; BSR set to: 14
 11853                           ;interrupts.c: 64:         TX4REG = getCharFromTxBuf();
 11854   000066  EC88  F028         	call	_getCharFromTxBuf	;wreg free
 11855   00006A  010E               	movlb	14	; () banked
 11856   00006C  6FE4               	movwf	228,b	;volatile
 11857   00006E                     
 11858                           ; BSR set to: 14
 11859                           ;interrupts.c: 65:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
 11860   00006E  EC05  F029         	call	_isDataInTxBuf	;wreg free
 11861   000072  0900               	iorlw	0
 11862   000074  A4D8               	btfss	status,2,c
 11863   000076  EF3F  F000         	goto	i2u369_41
 11864   00007A  EF41  F000         	goto	i2u369_40
 11865   00007E                     i2u369_41:
 11866   00007E  EF43  F000         	goto	i2l364
 11867   000082                     i2u369_40:
 11868   000082  010E               	movlb	14	; () banked
 11869   000084  952D               	bcf	45,2,b	;volatile
 11870   000086                     i2l364:
 11871   000086  C00E  FFDA         	movff	??_HighISR+1,fsr2h
 11872   00008A  C00D  FFD9         	movff	??_HighISR,fsr2l
 11873   00008E  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11874   000090  0011               	retfie		f
 11875   000092                     __end_of_HighISR:
 11876                           	callstack 0
 11877                           
 11878 ;; *************** function i2_color_clear_init_interrupts *****************
 11879 ;; Defined at:
 11880 ;;		line 27 in file "color.c"
 11881 ;; Parameters:    Size  Location     Type
 11882 ;;		None
 11883 ;; Auto vars:     Size  Location     Type
 11884 ;;  low_threshol    2   10[COMRAM] unsigned int 
 11885 ;;  high_thresho    2    8[COMRAM] unsigned int 
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  1    wreg      void 
 11888 ;; Registers used:
 11889 ;;		wreg, status,2, status,0, cstack
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11896 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11898 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11899 ;;Total ram usage:        5 bytes
 11900 ;; Hardware stack levels used: 1
 11901 ;; Hardware stack levels required when called: 3
 11902 ;; This function calls:
 11903 ;;		i2_I2C_2_Master_Start
 11904 ;;		i2_I2C_2_Master_Stop
 11905 ;;		i2_I2C_2_Master_Write
 11906 ;;		i2___lwdiv
 11907 ;;		i2_color_writetoaddr
 11908 ;; This function is called by:
 11909 ;;		_HighISR
 11910 ;; This function uses a non-reentrant model
 11911 ;;
 11912                           
 11913                           	psect	text47
 11914   004BFA                     __ptext47:
 11915                           	callstack 0
 11916   004BFA                     i2_color_clear_init_interrupts:
 11917                           	callstack 21
 11918   004BFA                     
 11919                           ;color.c: 29:     I2C_2_Master_Start();
 11920   004BFA  EC41  F029         	call	i2_I2C_2_Master_Start	;wreg free
 11921                           
 11922                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
 11923   004BFE  0E52               	movlw	82
 11924   004C00  EC22  F029         	call	i2_I2C_2_Master_Write
 11925                           
 11926                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
 11927   004C04  0EE6               	movlw	230
 11928   004C06  EC22  F029         	call	i2_I2C_2_Master_Write
 11929                           
 11930                           ;color.c: 32:     I2C_2_Master_Stop();
 11931   004C0A  EC3C  F029         	call	i2_I2C_2_Master_Stop	;wreg free
 11932                           
 11933                           ;color.c: 38:     unsigned int high_threshold = ambient + (ambient/3);
 11934   004C0E  C04F  F001         	movff	_ambient,i2___lwdiv@dividend
 11935   004C12  C050  F002         	movff	_ambient+1,i2___lwdiv@dividend+1
 11936   004C16  0E00               	movlw	0
 11937   004C18  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 11938   004C1A  0E03               	movlw	3
 11939   004C1C  6E03               	movwf	i2___lwdiv@divisor^0,c
 11940   004C1E  ECD0  F026         	call	i2___lwdiv	;wreg free
 11941   004C22  504F               	movf	_ambient^0,w,c
 11942   004C24  2401               	addwf	?i2___lwdiv^0,w,c
 11943   004C26  6E09               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
 11944   004C28  5050               	movf	(_ambient+1)^0,w,c
 11945   004C2A  2002               	addwfc	(?i2___lwdiv+1)^0,w,c
 11946   004C2C  6E0A               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
 11947                           
 11948                           ;color.c: 39:     unsigned int low_threshold = ambient - (ambient/3);
 11949   004C2E  C04F  F001         	movff	_ambient,i2___lwdiv@dividend
 11950   004C32  C050  F002         	movff	_ambient+1,i2___lwdiv@dividend+1
 11951   004C36  0E00               	movlw	0
 11952   004C38  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 11953   004C3A  0E03               	movlw	3
 11954   004C3C  6E03               	movwf	i2___lwdiv@divisor^0,c
 11955   004C3E  ECD0  F026         	call	i2___lwdiv	;wreg free
 11956   004C42  5001               	movf	?i2___lwdiv^0,w,c
 11957   004C44  5C4F               	subwf	_ambient^0,w,c
 11958   004C46  6E0B               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
 11959   004C48  5002               	movf	(?i2___lwdiv+1)^0,w,c
 11960   004C4A  5850               	subwfb	(_ambient+1)^0,w,c
 11961   004C4C  6E0C               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
 11962                           
 11963                           ;color.c: 42:  color_writetoaddr(0x00, 0x13);
 11964   004C4E  0E13               	movlw	19
 11965   004C50  6E03               	movwf	i2color_writetoaddr@value^0,c
 11966   004C52  0E00               	movlw	0
 11967   004C54  ECCD  F028         	call	i2_color_writetoaddr
 11968   004C58                     
 11969                           ;color.c: 43:     _delay((unsigned long)((3)*(64000000/4000.0)));
 11970   004C58  0E3F               	movlw	63
 11971   004C5A  6E08               	movwf	??i2_color_clear_init_interrupts^0,c
 11972   004C5C  0E55               	movlw	85
 11973   004C5E                     i2u537_47:
 11974   004C5E  2EE8               	decfsz	wreg,f,c
 11975   004C60  D7FE               	bra	i2u537_47
 11976   004C62  2E08               	decfsz	??i2_color_clear_init_interrupts^0,f,c
 11977   004C64  D7FC               	bra	i2u537_47
 11978   004C66  0000               	nop	
 11979   004C68                     
 11980                           ;color.c: 44:     color_writetoaddr(0x07, (high_threshold >> 8));
 11981   004C68  500A               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
 11982   004C6A  6E03               	movwf	i2color_writetoaddr@value^0,c
 11983   004C6C  0E07               	movlw	7
 11984   004C6E  ECCD  F028         	call	i2_color_writetoaddr
 11985   004C72                     
 11986                           ;color.c: 45:     color_writetoaddr(0x06, (high_threshold & 0xFF));
 11987   004C72  C009  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
 11988   004C76  0E06               	movlw	6
 11989   004C78  ECCD  F028         	call	i2_color_writetoaddr
 11990   004C7C                     
 11991                           ;color.c: 46:     color_writetoaddr(0x05, (low_threshold >> 8));
 11992   004C7C  500C               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
 11993   004C7E  6E03               	movwf	i2color_writetoaddr@value^0,c
 11994   004C80  0E05               	movlw	5
 11995   004C82  ECCD  F028         	call	i2_color_writetoaddr
 11996   004C86                     
 11997                           ;color.c: 47:     color_writetoaddr(0x04, (low_threshold & 0xFF));
 11998   004C86  C00B  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
 11999   004C8A  0E04               	movlw	4
 12000   004C8C  ECCD  F028         	call	i2_color_writetoaddr
 12001   004C90                     
 12002                           ;color.c: 48:     color_writetoaddr(0x0C, 0b0100);
 12003   004C90  0E04               	movlw	4
 12004   004C92  6E03               	movwf	i2color_writetoaddr@value^0,c
 12005   004C94  0E0C               	movlw	12
 12006   004C96  ECCD  F028         	call	i2_color_writetoaddr
 12007   004C9A  0012               	return		;funcret
 12008   004C9C                     __end_ofi2_color_clear_init_interrupts:
 12009                           	callstack 0
 12010                           
 12011 ;; *************** function i2_color_writetoaddr *****************
 12012 ;; Defined at:
 12013 ;;		line 53 in file "color.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;  address         1    wreg     unsigned char 
 12016 ;;  value           1    2[COMRAM] unsigned char 
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;  address         1    3[COMRAM] unsigned char 
 12019 ;; Return value:  Size  Location     Type
 12020 ;;                  1    wreg      void 
 12021 ;; Registers used:
 12022 ;;		wreg, status,2, status,0, cstack
 12023 ;; Tracked objects:
 12024 ;;		On entry : 0/0
 12025 ;;		On exit  : 0/0
 12026 ;;		Unchanged: 0/0
 12027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12028 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12031 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12032 ;;Total ram usage:        2 bytes
 12033 ;; Hardware stack levels used: 1
 12034 ;; Hardware stack levels required when called: 2
 12035 ;; This function calls:
 12036 ;;		i2_I2C_2_Master_Start
 12037 ;;		i2_I2C_2_Master_Stop
 12038 ;;		i2_I2C_2_Master_Write
 12039 ;; This function is called by:
 12040 ;;		i2_color_clear_init_interrupts
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044                           	psect	text48
 12045   00519A                     __ptext48:
 12046                           	callstack 0
 12047   00519A                     i2_color_writetoaddr:
 12048                           	callstack 21
 12049                           
 12050                           ;incstack = 0
 12051                           ;i2color_writetoaddr@address stored from wreg
 12052   00519A  6E04               	movwf	i2color_writetoaddr@address^0,c
 12053   00519C                     
 12054                           ;color.c: 54:     I2C_2_Master_Start();
 12055   00519C  EC41  F029         	call	i2_I2C_2_Master_Start	;wreg free
 12056                           
 12057                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
 12058   0051A0  0E52               	movlw	82
 12059   0051A2  EC22  F029         	call	i2_I2C_2_Master_Write
 12060                           
 12061                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
 12062   0051A6  5004               	movf	i2color_writetoaddr@address^0,w,c
 12063   0051A8  0980               	iorlw	128
 12064   0051AA  EC22  F029         	call	i2_I2C_2_Master_Write
 12065                           
 12066                           ;color.c: 57:     I2C_2_Master_Write(value);
 12067   0051AE  5003               	movf	i2color_writetoaddr@value^0,w,c
 12068   0051B0  EC22  F029         	call	i2_I2C_2_Master_Write
 12069                           
 12070                           ;color.c: 58:     I2C_2_Master_Stop();
 12071   0051B4  EC3C  F029         	call	i2_I2C_2_Master_Stop	;wreg free
 12072   0051B8  0012               	return		;funcret
 12073   0051BA                     __end_ofi2_color_writetoaddr:
 12074                           	callstack 0
 12075                           
 12076 ;; *************** function i2_I2C_2_Master_Write *****************
 12077 ;; Defined at:
 12078 ;;		line 45 in file "i2c.c"
 12079 ;; Parameters:    Size  Location     Type
 12080 ;;  data_byte       1    wreg     unsigned char 
 12081 ;; Auto vars:     Size  Location     Type
 12082 ;;  data_byte       1    1[COMRAM] unsigned char 
 12083 ;; Return value:  Size  Location     Type
 12084 ;;                  1    wreg      void 
 12085 ;; Registers used:
 12086 ;;		wreg, status,2, status,0, cstack
 12087 ;; Tracked objects:
 12088 ;;		On entry : 0/0
 12089 ;;		On exit  : 0/0
 12090 ;;		Unchanged: 0/0
 12091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12095 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12096 ;;Total ram usage:        1 bytes
 12097 ;; Hardware stack levels used: 1
 12098 ;; Hardware stack levels required when called: 1
 12099 ;; This function calls:
 12100 ;;		i2_I2C_2_Master_Idle
 12101 ;; This function is called by:
 12102 ;;		i2_color_clear_init_interrupts
 12103 ;;		i2_color_writetoaddr
 12104 ;; This function uses a non-reentrant model
 12105 ;;
 12106                           
 12107                           	psect	text49
 12108   005244                     __ptext49:
 12109                           	callstack 0
 12110   005244                     i2_I2C_2_Master_Write:
 12111                           	callstack 21
 12112                           
 12113                           ;incstack = 0
 12114                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 12115   005244  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 12116   005246                     
 12117                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 12118   005246  EC4E  F028         	call	i2_I2C_2_Master_Idle	;wreg free
 12119   00524A                     
 12120                           ;i2c.c: 48:   SSP2BUF = data_byte;
 12121   00524A  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 12122   00524E  0012               	return		;funcret
 12123   005250                     __end_ofi2_I2C_2_Master_Write:
 12124                           	callstack 0
 12125                           
 12126 ;; *************** function i2_I2C_2_Master_Stop *****************
 12127 ;; Defined at:
 12128 ;;		line 39 in file "i2c.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;		None
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;		None
 12133 ;; Return value:  Size  Location     Type
 12134 ;;                  1    wreg      void 
 12135 ;; Registers used:
 12136 ;;		wreg, status,2, status,0, cstack
 12137 ;; Tracked objects:
 12138 ;;		On entry : 0/0
 12139 ;;		On exit  : 0/0
 12140 ;;		Unchanged: 0/0
 12141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12146 ;;Total ram usage:        0 bytes
 12147 ;; Hardware stack levels used: 1
 12148 ;; Hardware stack levels required when called: 1
 12149 ;; This function calls:
 12150 ;;		i2_I2C_2_Master_Idle
 12151 ;; This function is called by:
 12152 ;;		i2_color_clear_init_interrupts
 12153 ;;		i2_color_writetoaddr
 12154 ;; This function uses a non-reentrant model
 12155 ;;
 12156                           
 12157                           	psect	text50
 12158   005278                     __ptext50:
 12159                           	callstack 0
 12160   005278                     i2_I2C_2_Master_Stop:
 12161                           	callstack 21
 12162   005278                     
 12163                           ;i2c.c: 41:   I2C_2_Master_Idle();
 12164   005278  EC4E  F028         	call	i2_I2C_2_Master_Idle	;wreg free
 12165   00527C                     
 12166                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 12167   00527C  010E               	movlb	14	; () banked
 12168   00527E  85DA               	bsf	218,2,b	;volatile
 12169   005280                     
 12170                           ; BSR set to: 14
 12171   005280  0012               	return		;funcret
 12172   005282                     __end_ofi2_I2C_2_Master_Stop:
 12173                           	callstack 0
 12174                           
 12175 ;; *************** function i2_I2C_2_Master_Start *****************
 12176 ;; Defined at:
 12177 ;;		line 27 in file "i2c.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;		None
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;		None
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  1    wreg      void 
 12184 ;; Registers used:
 12185 ;;		wreg, status,2, status,0, cstack
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12195 ;;Total ram usage:        0 bytes
 12196 ;; Hardware stack levels used: 1
 12197 ;; Hardware stack levels required when called: 1
 12198 ;; This function calls:
 12199 ;;		i2_I2C_2_Master_Idle
 12200 ;; This function is called by:
 12201 ;;		i2_color_clear_init_interrupts
 12202 ;;		i2_color_writetoaddr
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           	psect	text51
 12207   005282                     __ptext51:
 12208                           	callstack 0
 12209   005282                     i2_I2C_2_Master_Start:
 12210                           	callstack 21
 12211   005282                     
 12212                           ;i2c.c: 29:   I2C_2_Master_Idle();
 12213   005282  EC4E  F028         	call	i2_I2C_2_Master_Idle	;wreg free
 12214   005286                     
 12215                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 12216   005286  010E               	movlb	14	; () banked
 12217   005288  81DA               	bsf	218,0,b	;volatile
 12218   00528A                     
 12219                           ; BSR set to: 14
 12220   00528A  0012               	return		;funcret
 12221   00528C                     __end_ofi2_I2C_2_Master_Start:
 12222                           	callstack 0
 12223                           
 12224 ;; *************** function i2_I2C_2_Master_Idle *****************
 12225 ;; Defined at:
 12226 ;;		line 22 in file "i2c.c"
 12227 ;; Parameters:    Size  Location     Type
 12228 ;;		None
 12229 ;; Auto vars:     Size  Location     Type
 12230 ;;		None
 12231 ;; Return value:  Size  Location     Type
 12232 ;;                  1    wreg      void 
 12233 ;; Registers used:
 12234 ;;		wreg, status,2, status,0
 12235 ;; Tracked objects:
 12236 ;;		On entry : 0/0
 12237 ;;		On exit  : 0/0
 12238 ;;		Unchanged: 0/0
 12239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12244 ;;Total ram usage:        1 bytes
 12245 ;; Hardware stack levels used: 1
 12246 ;; This function calls:
 12247 ;;		Nothing
 12248 ;; This function is called by:
 12249 ;;		i2_I2C_2_Master_Start
 12250 ;;		i2_I2C_2_Master_Stop
 12251 ;;		i2_I2C_2_Master_Write
 12252 ;; This function uses a non-reentrant model
 12253 ;;
 12254                           
 12255                           	psect	text52
 12256   00509C                     __ptext52:
 12257                           	callstack 0
 12258   00509C                     i2_I2C_2_Master_Idle:
 12259                           	callstack 21
 12260   00509C                     i2l254:
 12261   00509C  010E               	movlb	14	; () banked
 12262   00509E  B5D8               	btfsc	216,2,b	;volatile
 12263   0050A0  EF54  F028         	goto	i2u195_41
 12264   0050A4  EF56  F028         	goto	i2u195_40
 12265   0050A8                     i2u195_41:
 12266   0050A8  EF4E  F028         	goto	i2l254
 12267   0050AC                     i2u195_40:
 12268   0050AC                     
 12269                           ; BSR set to: 14
 12270   0050AC  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 12271   0050B0  0E1F               	movlw	31
 12272   0050B2  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 12273   0050B4  A4D8               	btfss	status,2,c
 12274   0050B6  EF5F  F028         	goto	i2u196_41
 12275   0050BA  EF61  F028         	goto	i2u196_40
 12276   0050BE                     i2u196_41:
 12277   0050BE  EF4E  F028         	goto	i2l254
 12278   0050C2                     i2u196_40:
 12279   0050C2                     
 12280                           ; BSR set to: 14
 12281   0050C2  0012               	return		;funcret
 12282   0050C4                     __end_ofi2_I2C_2_Master_Idle:
 12283                           	callstack 0
 12284                           
 12285 ;; *************** function i2___lwdiv *****************
 12286 ;; Defined at:
 12287 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 12288 ;; Parameters:    Size  Location     Type
 12289 ;;  dividend        2    0[COMRAM] unsigned int 
 12290 ;;  divisor         2    2[COMRAM] unsigned int 
 12291 ;; Auto vars:     Size  Location     Type
 12292 ;;  quotient        2    4[COMRAM] unsigned int 
 12293 ;;  counter         1    6[COMRAM] unsigned char 
 12294 ;; Return value:  Size  Location     Type
 12295 ;;                  2    0[COMRAM] unsigned int 
 12296 ;; Registers used:
 12297 ;;		wreg, status,2, status,0
 12298 ;; Tracked objects:
 12299 ;;		On entry : 0/0
 12300 ;;		On exit  : 0/0
 12301 ;;		Unchanged: 0/0
 12302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12304 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12306 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12307 ;;Total ram usage:        7 bytes
 12308 ;; Hardware stack levels used: 1
 12309 ;; This function calls:
 12310 ;;		Nothing
 12311 ;; This function is called by:
 12312 ;;		i2_color_clear_init_interrupts
 12313 ;; This function uses a non-reentrant model
 12314 ;;
 12315                           
 12316                           	psect	text53
 12317   004DA0                     __ptext53:
 12318                           	callstack 0
 12319   004DA0                     i2___lwdiv:
 12320                           	callstack 23
 12321   004DA0  0E00               	movlw	0
 12322   004DA2  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
 12323   004DA4  0E00               	movlw	0
 12324   004DA6  6E05               	movwf	i2___lwdiv@quotient^0,c
 12325   004DA8  5003               	movf	i2___lwdiv@divisor^0,w,c
 12326   004DAA  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 12327   004DAC  B4D8               	btfsc	status,2,c
 12328   004DAE  EFDB  F026         	goto	i2u261_41
 12329   004DB2  EFDD  F026         	goto	i2u261_40
 12330   004DB6                     i2u261_41:
 12331   004DB6  EF05  F027         	goto	i2l1258
 12332   004DBA                     i2u261_40:
 12333   004DBA  0E01               	movlw	1
 12334   004DBC  6E07               	movwf	i2___lwdiv@counter^0,c
 12335   004DBE  EFE5  F026         	goto	i2l3676
 12336   004DC2                     i2l3674:
 12337   004DC2  90D8               	bcf	status,0,c
 12338   004DC4  3603               	rlcf	i2___lwdiv@divisor^0,f,c
 12339   004DC6  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 12340   004DC8  2A07               	incf	i2___lwdiv@counter^0,f,c
 12341   004DCA                     i2l3676:
 12342   004DCA  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 12343   004DCC  EFEA  F026         	goto	i2u262_41
 12344   004DD0  EFEC  F026         	goto	i2u262_40
 12345   004DD4                     i2u262_41:
 12346   004DD4  EFE1  F026         	goto	i2l3674
 12347   004DD8                     i2u262_40:
 12348   004DD8                     i2l3678:
 12349   004DD8  90D8               	bcf	status,0,c
 12350   004DDA  3605               	rlcf	i2___lwdiv@quotient^0,f,c
 12351   004DDC  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 12352   004DDE  5003               	movf	i2___lwdiv@divisor^0,w,c
 12353   004DE0  5C01               	subwf	i2___lwdiv@dividend^0,w,c
 12354   004DE2  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 12355   004DE4  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 12356   004DE6  A0D8               	btfss	status,0,c
 12357   004DE8  EFF8  F026         	goto	i2u263_41
 12358   004DEC  EFFA  F026         	goto	i2u263_40
 12359   004DF0                     i2u263_41:
 12360   004DF0  EFFF  F026         	goto	i2l3686
 12361   004DF4                     i2u263_40:
 12362   004DF4  5003               	movf	i2___lwdiv@divisor^0,w,c
 12363   004DF6  5E01               	subwf	i2___lwdiv@dividend^0,f,c
 12364   004DF8  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 12365   004DFA  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 12366   004DFC  8005               	bsf	i2___lwdiv@quotient^0,0,c
 12367   004DFE                     i2l3686:
 12368   004DFE  90D8               	bcf	status,0,c
 12369   004E00  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 12370   004E02  3203               	rrcf	i2___lwdiv@divisor^0,f,c
 12371   004E04  2E07               	decfsz	i2___lwdiv@counter^0,f,c
 12372   004E06  EFEC  F026         	goto	i2l3678
 12373   004E0A                     i2l1258:
 12374   004E0A  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 12375   004E0E  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 12376   004E12  0012               	return		;funcret
 12377   004E14                     __end_ofi2___lwdiv:
 12378                           	callstack 0
 12379                           
 12380 ;; *************** function _putCharToRxBuf *****************
 12381 ;; Defined at:
 12382 ;;		line 33 in file "serial.c"
 12383 ;; Parameters:    Size  Location     Type
 12384 ;;  byte            1    wreg     unsigned char 
 12385 ;; Auto vars:     Size  Location     Type
 12386 ;;  byte            1    0[COMRAM] unsigned char 
 12387 ;; Return value:  Size  Location     Type
 12388 ;;                  1    wreg      void 
 12389 ;; Registers used:
 12390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12391 ;; Tracked objects:
 12392 ;;		On entry : 0/0
 12393 ;;		On exit  : 0/0
 12394 ;;		Unchanged: 0/0
 12395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12400 ;;Total ram usage:        1 bytes
 12401 ;; Hardware stack levels used: 1
 12402 ;; This function calls:
 12403 ;;		Nothing
 12404 ;; This function is called by:
 12405 ;;		_HighISR
 12406 ;; This function uses a non-reentrant model
 12407 ;;
 12408                           
 12409                           	psect	text54
 12410   0050EA                     __ptext54:
 12411                           	callstack 0
 12412   0050EA                     _putCharToRxBuf:
 12413                           	callstack 24
 12414                           
 12415                           ;incstack = 0
 12416                           ;putCharToRxBuf@byte stored from wreg
 12417   0050EA  6E01               	movwf	putCharToRxBuf@byte^0,c
 12418   0050EC                     
 12419                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
 12420   0050EC  0E13               	movlw	19
 12421   0050EE  644A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
 12422   0050F0  EF7C  F028         	goto	i2u332_41
 12423   0050F4  EF7E  F028         	goto	i2u332_40
 12424   0050F8                     i2u332_41:
 12425   0050F8  EF80  F028         	goto	i2l4306
 12426   0050FC                     i2u332_40:
 12427   0050FC  0E00               	movlw	0
 12428   0050FE  6E4A               	movwf	_RxBufWriteCnt^0,c	;volatile
 12429   005100                     i2l4306:
 12430                           
 12431                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
 12432   005100  504A               	movf	_RxBufWriteCnt^0,w,c
 12433   005102  0F9C               	addlw	low _EUSART4RXbuf
 12434   005104  6ED9               	movwf	fsr2l,c
 12435   005106  6ADA               	clrf	fsr2h,c
 12436   005108  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
 12437   00510C  2A4A               	incf	_RxBufWriteCnt^0,f,c	;volatile
 12438   00510E  0012               	return		;funcret
 12439   005110                     __end_of_putCharToRxBuf:
 12440                           	callstack 0
 12441                           
 12442 ;; *************** function _isDataInTxBuf *****************
 12443 ;; Defined at:
 12444 ;;		line 61 in file "serial.c"
 12445 ;; Parameters:    Size  Location     Type
 12446 ;;		None
 12447 ;; Auto vars:     Size  Location     Type
 12448 ;;		None
 12449 ;; Return value:  Size  Location     Type
 12450 ;;                  1    wreg      unsigned char 
 12451 ;; Registers used:
 12452 ;;		wreg, status,2, status,0
 12453 ;; Tracked objects:
 12454 ;;		On entry : 0/0
 12455 ;;		On exit  : 0/0
 12456 ;;		Unchanged: 0/0
 12457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12462 ;;Total ram usage:        0 bytes
 12463 ;; Hardware stack levels used: 1
 12464 ;; This function calls:
 12465 ;;		Nothing
 12466 ;; This function is called by:
 12467 ;;		_HighISR
 12468 ;;		_sendTxBuf
 12469 ;; This function uses a non-reentrant model
 12470 ;;
 12471                           
 12472                           	psect	text55
 12473   00520A                     __ptext55:
 12474                           	callstack 0
 12475   00520A                     _isDataInTxBuf:
 12476                           	callstack 24
 12477   00520A                     
 12478                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
 12479   00520A  5047               	movf	_TxBufReadCnt^0,w,c	;volatile
 12480   00520C  1848               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
 12481   00520E  A4D8               	btfss	status,2,c
 12482   005210  EF0C  F029         	goto	i2u147_41
 12483   005214  EF0F  F029         	goto	i2u147_40
 12484   005218                     i2u147_41:
 12485   005218  0E01               	movlw	1
 12486   00521A  EF10  F029         	goto	i2u148_40
 12487   00521E                     i2u147_40:
 12488   00521E  0E00               	movlw	0
 12489   005220                     i2u148_40:
 12490   005220  0012               	return		;funcret
 12491   005222                     __end_of_isDataInTxBuf:
 12492                           	callstack 0
 12493                           
 12494 ;; *************** function _getCharFromTxBuf *****************
 12495 ;; Defined at:
 12496 ;;		line 47 in file "serial.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;		None
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;		None
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  1    wreg      unsigned char 
 12503 ;; Registers used:
 12504 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12512 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12514 ;;Total ram usage:        1 bytes
 12515 ;; Hardware stack levels used: 1
 12516 ;; This function calls:
 12517 ;;		Nothing
 12518 ;; This function is called by:
 12519 ;;		_HighISR
 12520 ;; This function uses a non-reentrant model
 12521 ;;
 12522                           
 12523                           	psect	text56
 12524   005110                     __ptext56:
 12525                           	callstack 0
 12526   005110                     _getCharFromTxBuf:
 12527                           	callstack 24
 12528   005110                     
 12529                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
 12530   005110  0E3B               	movlw	59
 12531   005112  6447               	cpfsgt	_TxBufReadCnt^0,c	;volatile
 12532   005114  EF8E  F028         	goto	i2u333_41
 12533   005118  EF90  F028         	goto	i2u333_40
 12534   00511C                     i2u333_41:
 12535   00511C  EF92  F028         	goto	i2l4314
 12536   005120                     i2u333_40:
 12537   005120  0E00               	movlw	0
 12538   005122  6E47               	movwf	_TxBufReadCnt^0,c	;volatile
 12539   005124                     i2l4314:
 12540                           
 12541                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
 12542   005124  2A47               	incf	_TxBufReadCnt^0,f,c	;volatile
 12543   005126  0447               	decf	_TxBufReadCnt^0,w,c	;volatile
 12544   005128  6E01               	movwf	??_getCharFromTxBuf^0,c
 12545   00512A  5001               	movf	??_getCharFromTxBuf^0,w,c
 12546   00512C  0F60               	addlw	low _EUSART4TXbuf
 12547   00512E  6ED9               	movwf	fsr2l,c
 12548   005130  6ADA               	clrf	fsr2h,c
 12549   005132  50DF               	movf	indf2,w,c
 12550   005134  0012               	return		;funcret
 12551   005136                     __end_of_getCharFromTxBuf:
 12552                           	callstack 0
 12553                           
 12554                           	psect	smallconst
 12555   000E00                     __psmallconst:
 12556                           	callstack 0
 12557   000E00  00                 	db	0
 12558   000E01  00                 	db	0	; dummy byte at the end
 12559   000000                     
 12560                           	psect	rparam
 12561   000000                     
 12562                           	psect	temp
 12563   000051                     btemp:
 12564                           	callstack 0
 12565   000051                     	ds	1
 12566   000000                     int$flags	set	btemp
 12567   000000                     wtemp8	set	btemp+1
 12568   000000                     ttemp5	set	btemp+1
 12569   000000                     ttemp6	set	btemp+4
 12570   000000                     ttemp7	set	btemp+8
 12571                           
 12572                           	psect	config
 12573                           
 12574                           ;Config register CONFIG1L @ 0x300000
 12575                           ;	External Oscillator mode Selection bits
 12576                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12577                           ;	Power-up default value for COSC bits
 12578                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12579   300000                     	org	3145728
 12580   300000  AA                 	db	170
 12581                           
 12582                           ;Config register CONFIG1H @ 0x300001
 12583                           ;	unspecified, using default values
 12584                           ;	Clock Out Enable bit
 12585                           ;	CLKOUTEN = 0x1, unprogrammed default
 12586                           ;	Clock Switch Enable bit
 12587                           ;	CSWEN = 0x1, unprogrammed default
 12588                           ;	Fail-Safe Clock Monitor Enable bit
 12589                           ;	FCMEN = 0x1, unprogrammed default
 12590   300001                     	org	3145729
 12591   300001  FF                 	db	255
 12592                           
 12593                           ;Config register CONFIG3L @ 0x300004
 12594                           ;	WDT Period Select bits
 12595                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12596                           ;	WDT operating mode
 12597                           ;	WDTE = OFF, WDT Disabled
 12598   300004                     	org	3145732
 12599   300004  9F                 	db	159
 12600                           
 12601                           ;Config register CONFIG3H @ 0x300005
 12602                           ;	unspecified, using default values
 12603                           ;	WDT Window Select bits
 12604                           ;	WDTCWS = 0x7, unprogrammed default
 12605                           ;	WDT input clock selector
 12606                           ;	WDTCCS = 0x7, unprogrammed default
 12607   300005                     	org	3145733
 12608   300005  FF                 	db	255
 12609                           tosu	equ	0xFFF
 12610                           tosh	equ	0xFFE
 12611                           tosl	equ	0xFFD
 12612                           stkptr	equ	0xFFC
 12613                           pclatu	equ	0xFFB
 12614                           pclath	equ	0xFFA
 12615                           pcl	equ	0xFF9
 12616                           tblptru	equ	0xFF8
 12617                           tblptrh	equ	0xFF7
 12618                           tblptrl	equ	0xFF6
 12619                           tablat	equ	0xFF5
 12620                           prodh	equ	0xFF4
 12621                           prodl	equ	0xFF3
 12622                           indf0	equ	0xFEF
 12623                           postinc0	equ	0xFEE
 12624                           postdec0	equ	0xFED
 12625                           preinc0	equ	0xFEC
 12626                           plusw0	equ	0xFEB
 12627                           fsr0h	equ	0xFEA
 12628                           fsr0l	equ	0xFE9
 12629                           wreg	equ	0xFE8
 12630                           indf1	equ	0xFE7
 12631                           postinc1	equ	0xFE6
 12632                           postdec1	equ	0xFE5
 12633                           preinc1	equ	0xFE4
 12634                           plusw1	equ	0xFE3
 12635                           fsr1h	equ	0xFE2
 12636                           fsr1l	equ	0xFE1
 12637                           bsr	equ	0xFE0
 12638                           indf2	equ	0xFDF
 12639                           postinc2	equ	0xFDE
 12640                           postdec2	equ	0xFDD
 12641                           preinc2	equ	0xFDC
 12642                           plusw2	equ	0xFDB
 12643                           fsr2h	equ	0xFDA
 12644                           fsr2l	equ	0xFD9
 12645                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      80
    BANK0           160     44     124
    BANK1           256    256     256
    BANK2           256      0     162
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK1[1]), 

    color_calibration@blue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@blue(BANK1[6]), 

    color_calibration@green	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@green(BANK1[6]), 

    color_calibration@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK1[6]), 

    color_calibration@lightblue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@lightblue(BANK1[6]), 

    color_calibration@orange	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@orange(BANK1[6]), 

    color_calibration@pink	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@pink(BANK1[6]), 

    color_calibration@red	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@red(BANK1[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    color_calibration@white	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@white(BANK1[6]), 

    color_calibration@yellow	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@yellow(BANK1[6]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseShort@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseShort@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    rgb_2_hsv@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK1[6]), 

    S33DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S33DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), main@motorR(BANK1[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    wallAdjust@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    wallAdjust@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_detect
    _wallAdjust->_setMotorPWM
    _move->_returnHome
    _reverseShort->_setMotorPWM
    _returnHome->_reverseOneSquare
    _returnHome->_turnLeft
    _returnHome->_turnRight
    _lostReturnHome->_reverseOneSquare
    _lostReturnHome->_turnLeft
    _lostReturnHome->_turnRight
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->___lwdiv
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_rgb_2_hsv
    _rgb_2_hsv->___aldiv
    ___lldiv->___lmul
    ___aldiv->___lmul
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2___lwdiv
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_calibration
    _color_calibration->_rgb_2_hsv

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               268   268      0  264497
                                             42 BANK0      2     2      0
                                              0 BANK1    256   256      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
                   _color_click_init
                       _color_detect
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                          _rgb_2_hsv
                               _stop
                         _wallAdjust
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _wallAdjust                                          15     9      6    5147
                                             33 COMRAM    15     9      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _move                                                18     2     16  122088
                                              0 BANK0     18     2     16
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                       _reverseShort
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _reverseShort                                        14     8      6    6930
                                             33 COMRAM    14     8      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          20     5     15   59232
                                             47 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      20     5     15   58352
                                             47 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    5269
                                             33 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    14     7      7    6473
                                             33 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2      69
                                             14 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    7461
                                             33 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        57     3     54    2673
                                             14 COMRAM    54     0     54
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    2274
                                             32 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0    1524
                                             27 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                            ___lwdiv
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             16 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20   11200
                                             62 COMRAM     2     2      0
                                             22 BANK0     20     0     20
                         _color_read
                          _rgb_2_hsv
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rgb_2_hsv                                           44    34     10    7591
                                             40 COMRAM    22    12     10
                                              0 BANK0     22    22      0
                            ___aldiv
                            ___lldiv
                             ___lmul
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (2) _min                                                  4     0      4     392
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _max                                                  4     0      4     392
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2042
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     922
                                             26 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1212
                                             26 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2    1243
                                             18 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                             15 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                             15 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   36246
                                             47 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   13649
                                             33 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   21249
                                             33 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3501
                                             27 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     662
                                             20 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     543
                                             22 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0     622
                                             12 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (7) i2_color_clear_init_interrupts                        5     5      0     600
                                              7 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                          i2___lwdiv
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _rgb_2_hsv
       ___aldiv
         ___lmul (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _max
       _min
     _white_Light
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       ___lwdiv
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_writetoaddr
   _color_detect
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _reverseShort
       _setMotorPWM
     _turnLeft
     _turnRight
   _resetTimer
   _rgb_2_hsv
   _stop
   _wallAdjust
     _setMotorPWM
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2___lwdiv
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A2       9       63.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      7C       5       77.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      50       1       85.1%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26E      66        0.0%
DATA                 0      0     26E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 12:58:43 2024

                                _white_Light 5136                                           l91 2A0E  
                                         l93 2A1C                                 ___awdiv@sign 0014  
                        ___wmul@multiplicand 0011                           i2___lwdiv@dividend 0001  
              wallAdjust@wallReverseDuration 002C                             main@turnDuration 01DD  
                          ??_Interrupts_init 000F                                          l102 2E80  
                                        l201 289C                                          l210 4FEC  
                                        l202 2944                                          l211 4FF4  
                                        l205 5018                                          l206 5020  
                                        l150 5158                                          l142 4BF8  
                                        l303 4FC8                                          l224 335E  
                                        l160 3C22                                          l153 3E12  
                                        l145 5178                                          l219 32C8  
                                        l251 504A                                          l139 4F92  
                                        l260 526C                                          l148 5152  
                                        l180 23A2                                          l181 244A  
                                        l254 5074                                          l190 266C  
                                        l263 5276                                          l183 2458  
                                        l175 3C24                                          l272 4F5A  
                                        l192 267A                                          l184 2500  
                                        l600 230E                                          l257 509A  
                                        l193 2722                                          l354 5236  
                                        l442 51F0                                          l266 5262  
                                        l186 250E                                          l178 2394  
                                        l195 2730                                          l187 25B6  
                                        l460 4F02                                          l196 27D8  
                                        l540 4D2A                                          l445 51F4  
                                        l461 4F16                                          l269 5242  
                                        l189 25C4                                          l621 48C8  
                                        l198 27E6                                          l606 230E  
                                        l447 5202                                          l463 4F18  
                                        l199 288E                                          l703 35CE  
                                        l448 5208                                          l624 490A  
                                        l616 2388                                          l720 3EAA  
                                        l712 36DE                                          l641 458A  
                                        l633 44B6                                          l801 4B56  
                                        l650 42E2                                          l459 4F00  
                                        l547 46F6                                          l635 44DA  
                                        l395 51D6                                          l715 3720  
                                        l707 3638                                          l652 4306  
                                        l740 3826                                          l732 3FFC  
                                        l724 3F14                                          l629 444C  
                                        l741 385C                                          l581 1C6C  
                                        l709 365C                                          l638 455C  
                                        l646 4278                                          l726 3F38  
                                        l566 162A                                          l655 4388  
                                        l663 49A2                                          l591 1CE6  
                                        l575 1C6C                                          l744 38AA  
                                        l736 380A                                          l672 4090  
                                        l745 399A                                          l761 5258  
                                        l681 41A0                                          l729 3FBA  
                                        l658 43B6                                          l747 39BA  
                                        l667 49EE                                          l764 5072  
                                        l684 41E2                                          l676 40FA  
                                        l693 3468                                          l758 5198  
                                        l846 4802                                          l678 411E  
                                        l767 50E8                                          l695 348C  
                                        l689 33FE                                          l794 4B46  
                                        l778 4E6C                                          l698 350E  
                                        l779 4E7C                                          l998 4AB2  
                                        _max 4FF6                                          _min 4FCA  
                            color_detect@HSV 000F                                ?_color_detect 000F  
                                        prod 0FF3                          i2_color_writetoaddr 519A  
                                        wreg 0FE8                              color_detect@red 0015  
  color_clear_init_interrupts@high_threshold 001D  i2color_clear_init_interrupts@high_threshold 0009  
                                       l3000 4D2C                                         l3010 4D64  
                                       l3002 4D34                                         l3020 4D90  
                                       l3012 4D6A                                         l3004 4D46  
                                       l3100 48C4                                         l3014 4D80  
                                       l3006 4D4E                                         l3110 526E  
                                       l3022 5264                                         l3030 525A  
                                       l3102 48EC                                         l3016 4D88  
                                       l3008 4D56                                         l3040 4610  
                                       l3200 4448                                         l3120 4F30  
                                       l3112 5272                                         l3024 5268  
                                       l3032 525E                                         l4000 3492  
                                       l1265 4D9E                                         l3018 4D8A  
                                       l1258 4D96                                         l3042 4614  
                                       l3034 458C                                         l3210 44B2  
                                       l3202 4470                                         l3122 4F56  
                                       l3114 4F1C                                         l3026 523A  
                                       l3130 500C                                         l3106 48F6  
                                       l4010 34F0                                         l3044 4656  
                                       l3036 45A8                                         l3220 4532  
                                       l3212 44E0                                         l3204 4474  
                                       l3140 41E4                                         l3124 4F58  
                                       l3116 4F20                                         l3028 523E  
                                       l3300 4AFC                                         l3108 515C  
                                       l3060 496C                                         l4012 34FC  
                                       l4020 353C                                         l4004 34A4  
                                       l3046 4672                                         l3038 45FC  
                                       l3222 453E                                         l3206 4498  
                                       l3150 425A                                         l3142 4202  
                                       l3118 4F28                                         l3310 4B40  
                                       l3302 4B06                                         l3134 4FCA  
                                       l3070 49C6                                         l3062 4978  
                                       l3054 490C                                         l4030 35B0  
                                       l4022 3558                                         l4014 350A  
                                       l4006 34D8                                         l3048 46B6  
                                       l3224 454A                                         l3216 44F2  
                                       l3208 44A4                                         l3160 42C4  
                                       l3152 4266                                         l3144 420E  
                                       l3320 471E                                         l3312 46F8  
                                       l3304 4B24                                         l3128 4FF6  
                                       l3136 4FE0                                         l3400 30FC  
                                       l3064 4984                                         l3072 49CA  
                                       l3056 492C                                         l3080 506A  
                                       l3240 4066                                         l3232 3FFE  
                                       l4200 1DB4                                         l4040 361A  
                                       l4032 35BC                                         l4024 3564  
                                       l4016 3532                                         l4008 34E4  
                                       l3226 4558                                         l3218 4526  
                                       l3170 431E                                         l3162 42D0  
                                       l3154 4274                                         l3146 4242  
                                       l3330 4766                                         l3322 472C  
                                       l3314 46FC                                         l3306 4B34  
                                       l3410 3320                                         l3402 3158  
                                       l3066 4990                                         l3058 4938  
                                       l3074 5250                                         l3242 4072  
                                       l3250 40B8                                         l3234 401A  
                                       l3090 485E                                         l4210 1E00  
                                       l4202 1DCC                                         l4050 3674  
                                       l4042 3626                                         l4034 35CA  
                                       l4026 3598                                         l3228 4580  
                                       l3180 4384                                         l3172 4352  
                                       l3164 42DE                                         l3156 429C  
                                       l3148 424E                                         l3340 47B0  
                                       l3332 476E                                         l3324 473C  
                                       l3316 470A                                         l3308 4B36  
                                       l3412 333E                                         l3404 3170  
                                       l3420 5022                                         l3068 499E  
                                       l3076 504C                                         l3252 40DC  
                                       l3244 407E                                         l3236 4026  
                                       l3092 4892                                         l3084 4804  
                                       l4220 1E5E                                         l4300 2378  
                                       l4212 1E18                                         l4204 1DE8  
                                       l3500 3F9C                                         l4060 36DA  
                                       l4052 36A8                                         l4044 3634  
                                       l4036 35F2                                         l4028 35A4  
                                       l3190 43E2                                         l3182 43AC  
                                       l3174 435E                                         l3166 430C  
                                       l3158 42A0                                         l3350 47E2  
                                       l3342 47C0                                         l3334 477A  
                                       l3326 4740                                         l3318 471A  
                                       l3414 334A                                         l3406 320A  
                                       l3430 5038                                         l3422 502C  
                                       l3078 5058                                         l3270 418E  
                                       l3262 4136                                         l3254 40E8  
                                       l3246 408C                                         l3238 405A  
                                       l3094 489E                                         l3086 484C  
                                       l4230 1F08                                         l4222 1E76  
                                       l4214 1E20                                         l4206 1DEC  
                                       l3502 3FA8                                         l3510 3FE8  
                                       l4062 3702                                         l4054 36B4  
                                       l4046 3662                                         l4038 35F6  
                                       l3192 4416                                         l3176 436A  
                                       l3352 47F2                                         l3344 47C2  
                                       l3336 4788                                         l3328 4750  
                                       l3280 4E14                                         l3408 3222  
                                       l3416 5138                                         l3424 5032  
                                       l3440 4BDA                                         l3432 4B58  
                                       l3272 419C                                         l3264 416A  
                                       l3256 40F6                                         l3248 40B4  
                                       l3096 48AA                                         l4240 1FD2  
                                       l4232 1F44                                         l4224 1EB2  
                                       l4216 1E22                                         l4208 1DF0  
                                       l3520 16BC                                         l3512 162C  
                                       l3504 3FB6                                         l4056 36C0  
                                       l3450 51EA                                         l3194 4422  
                                       l3186 43B8                                         l3178 4376  
                                       l3370 3C40                                         l3346 47CC  
                                       l3338 4792                                         l3290 4AB4  
                                       l3282 4E24                                         l3418 5148  
                                       l3426 5034                                         l3442 4BE4  
                                       l3434 4BB6                                         l3274 41C4  
                                       l3266 4176                                         l3258 4124  
                                       l3098 48B6                                         l4250 2084  
                                       l4242 1FF2                                         l4234 1F62  
                                       l4226 1ED0                                         l4218 1E3E  
                                       l3610 1C48                                         l3602 1BBA  
                                       l3530 175E                                         l3522 16F4  
                                       l3514 164C                                         l3506 3FDE  
                                       l4058 36CC                                         l4066 370C  
                                       l3452 51EC                                         l3196 442E  
                                       l3188 43D6                                         l3380 3D4E  
                                       l3372 3C5A                                         l3348 47D2  
                                       l3292 4AC4                                         l3284 4E32  
                                       l3428 5036                                         l3444 4BEE  
                                       l3436 4BC6                                         l3700 4F84  
                                       l3268 4182                                         l4260 2116  
                                       l4252 209C                                         l4244 202A  
                                       l4236 1F82                                         l4228 1EF0  
                                       l3604 1BD8                                         l3540 17BC  
                                       l3620 1CD6                                         l3532 1776  
                                       l3524 170C                                         l3516 1664  
                                       l3710 5196                                         l3454 51EE  
                                       l3446 51D8                                         l3630 4A0E  
                                       l3622 49F0                                         l3198 443A  
                                       l3382 3DAE                                         l3374 3CB2  
                                       l3294 4ADA                                         l3286 4E42  
                                       l3390 2FF2                                         l3438 4BD0  
                                       l3702 4F8E                                         l3278 41CE  
                                       l4262 2136                                         l4270 21AA  
                                       l4254 20D4                                         l4238 1F9A  
                                       l4246 2046                                         l4190 1CEC  
                                       l3614 1C88                                         l3606 1BF8  
                                       l3550 1866                                         l3542 17D4  
                                       l3534 177E                                         l3526 1728  
                                       l3518 169C                                         l3470 3E74  
                                       l3462 3E14                                         l3712 5222  
                                       l3704 517A                                         l3456 51F2  
                                       l3448 51E2                                         l3640 4A42  
                                       l3632 4A1C                                         l3624 49F4  
                                       l3384 3DCC                                         l3376 3CD0  
                                       l3368 3C26                                         l3296 4AE2  
                                       l3288 4E4C                                         l3392 300A  
                                       l3800 257A                                         l3720 51D0  
                                       l4272 21C8                                         l4264 214E  
                                       l4248 2064                                         l4192 1D0C  
                                       l3616 1C8C                                         l3608 1C10  
                                       l3560 1930                                         l3552 18A2  
                                       l3544 1810                                         l3536 1780  
                                       l3528 172C                                         l3480 3ECE  
                                       l3472 3E80                                         l3464 3E18  
                                       l4600 0F06                                         l3706 5182  
                                       l3458 5206                                         l3650 4A7C  
                                       l3642 4A4A                                         l3634 4A24  
                                       l3626 4A02                                         l3378 3D30  
                                       l3298 4AEE                                         l3394 3020  
                                       l3386 2E84                                         l3810 25F6  
                                       l3802 259A                                         l4530 39BC  
                                       l3730 4CD2                                         l3722 51D2  
                                       l3714 51BA                                         l4290 22EA  
                                       l4274 21E8                                         l4282 225C  
                                       l4266 2186                                         l4258 20F8  
                                       l4194 1D24                                         l3618 1CBE  
                                       l3570 19E2                                         l3562 1950  
                                       l3554 18C0                                         l3546 182E  
                                       l3538 179C                                         l3490 3F3E  
                                       l3474 3E8C                                         l3482 3ED2  
                                       l3466 3E26                                         l4610 0FC0  
                                       l4602 0F1E                                         l3708 518C  
                                       l3660 4AA2                                         l3652 4A84  
                                       l3644 4A52                                         l3636 4A28  
                                       l3628 4A0A                                         l3900 388E  
                                       l3396 3084                                         l3388 2FD8  
                                       l3820 267E                                         l3812 260E  
                                       l3804 25B2                                         l4540 3A2C  
                                       l4532 39BC                                         l3740 4D10  
                                       l3732 4CD6                                         l3724 51D4  
                                       l3716 51C4                                         l4284 227A  
                                       l4276 2200                                         l4196 1D5C  
                                       l4188 1CE8                                         l3580 1A74  
                                       l3572 19FA                                         l3564 1988  
                                       l3556 18E0                                         l3548 184E  
                                       l3484 3EF6                                         l3476 3E98  
                                       l3468 3E40                                         l4700 15D2  
                                       l4620 1084                                         l4612 0FDC  
                                       l4604 0F56                                         l3662 4AAA  
                                       l3654 4A86                                         l3646 4A60  
                                       l3638 4A30                                         l3750 4ECC  
                                       l3910 392E                                         l3902 389C  
                                       l3398 309A                                         l3830 2706  
                                       l3822 268A                                         l3814 2630  
                                       l3806 25C8                                         l4550 3AA2  
                                       l4542 3A4E                                         l4534 39E0  
                                       l3742 4D12                                         l3734 4CFA  
                                       l3726 4C9C                                         l3718 51C6  
                                       l4294 232A                                         l4286 229A  
                                       l4278 2238                                         l4198 1D7C  
                                       l3582 1A94                                         l3590 1B08  
                                       l3574 1A32                                         l3558 18F8  
                                       l3566 19A4                                         l3494 3F50  
                                       l3486 3F02                                         l3478 3EA6  
                                       l4702 15EA                                         l4630 1122  
                                       l4622 109C                                         l4614 0FF4  
                                       l4606 0F76                                         l4710 296A  
                                       l3656 4A8C                                         l3648 4A66  
                                       l3752 4ED6                                         l3912 3956  
                                       l3904 38AE                                         l3840 277A  
                                       l3832 271E                                         l3824 26AC  
                                       l3816 2650                                         l3808 25D4  
                                       l3760 238A                                         l4560 3B32  
                                       l4552 3AC4                                         l4544 3A56  
                                       l4536 3A02                                         l3744 4D1C  
                                       l3736 4D04                                         l3728 4CAC  
                                       l4296 232E                                         l4288 22B2  
                                       l3592 1B26                                         l3584 1AAC  
                                       l3568 19C2                                         l3496 3F84  
                                       l3488 3F10                                         l4640 11E2  
                                       l4632 113A                                         l4624 10D4  
                                       l4616 102C                                         l4608 0FAE  
                                       l4800 2C0E                                         l4720 298C  
                                       l4712 2970                                         l4704 2946  
                                       l3690 4F94                                         l3658 4A92  
                                       l3754 4EEC                                         l3914 399E  
                                       l3906 38D6                                         l3850 27F6  
                                       l3842 279C                                         l3834 2734  
                                       l3826 26C4                                         l3818 2668  
                                       l3770 23EC                                         l3762 2390  
                                       l4570 3BA8                                         l4562 3B3A  
                                       l4554 3AE6                                         l4546 3A78  
                                       l4538 3A0A                                         l3746 4D1E  
                                       l3738 4D06                                         l4298 2360  
                                       l3594 1B46                                         l3586 1AE4  
                                       l3578 1A56                                         l3498 3F90  
                                       l4650 1280                                         l4634 1172  
                                       l4642 1202                                         l4618 104C  
                                       l4626 10F4                                         l4810 2D44  
                                       l4802 2C1E                                         l4730 29AA  
                                       l4722 2990                                         l4714 2980  
                                       l4706 2952                                         l3756 4EFA  
                                       l3916 39B6                                         l3908 38EE  
                                       l3860 288A                                         l3852 2818  
                                       l3844 27BC                                         l3836 2740  
                                       l3828 26E6                                         l3780 2468  
                                       l3772 240E                                         l3764 23A6  
                                       l3692 4F5C                                         l4580 3C1E  
                                       l4572 3BCA                                         l4564 3B5C  
                                       l4556 3AEE                                         l4548 3A9A  
                                       l3748 4D28                                         l3596 1B5E  
                                       l4660 1322                                         l4652 12A0  
                                       l4644 1214                                         l4636 1192  
                                       l4628 1106                                         l4820 2DC6  
                                       l4812 2D54                                         l4804 2C70  
                                       l4740 29CA                                         l4732 29AE  
                                       l4724 2994                                         l4716 2984  
                                       l4708 2952                                         l3758 4F10  
                                       l2990 5074                                         l3870 2908  
                                       l3862 28A0                                         l3854 2830  
                                       l3846 27D4                                         l3838 2762  
                                       l3790 24FC                                         l3782 248A  
                                       l3774 242E                                         l3766 23B2  
                                       l3694 4F60                                         l4574 3BD2  
                                       l4566 3B7E                                         l4558 3B10  
                                       l3598 1B96                                         l4670 13E6  
                                       l4662 133E                                         l4654 12D8  
                                       l4646 1230                                         l4638 11CA  
                                       l4590 0E48                                         l4830 2DF2  
                                       l4822 2DCA                                         l4814 2D9A  
                                       l4806 2C7C                                         l4750 29E6  
                                       l4742 29CE                                         l4734 29B6  
                                       l4726 29A0                                         l4718 2988  
                                       ?_max 000F                                         l3880 3762  
                                       l2992 5084                                         l3872 2928  
                                       l3864 28AC                                         l3856 2852  
                                       l3848 27EA                                         l3792 2512  
                                       l3784 24A2                                         l3776 2446  
                                       l3768 23D4                                         l3696 4F6A  
                                       l4576 3BF4                                         l4568 3B86  
                                       l4680 1464                                         l4672 13FE  
                                       l4664 1356                                         l4656 12F0  
                                       l4648 1248                                         l4592 0E80  
                                       l4584 0E02                                         l4840 2E6E  
                                       l4832 2DF6                                         l4824 2DCE  
                                       l4816 2DA6                                         l4808 2C9A  
                                       l4760 29FE                                         l4752 29EE  
                                       l4744 29D2                                         l4736 29BE  
                                       l4728 29A6                                         l2994 50C4  
                                       l3890 384C                                         l3882 37A2  
                                       l3874 2940                                         l3866 28CE  
                                       l3858 2872                                         l3794 251E  
                                       l3786 24C4                                         l3778 245C  
                                       l3698 4F7A                                         l4578 3C16  
                                       l4682 149C                                         l4690 152C  
                                       l4666 138E                                         l4674 141E  
                                       l4658 1310                                         l4594 0EA0  
                                       l4586 0E14                                         l4834 2E4E  
                                       l4826 2DDE                                         l4818 2DAE  
                                       l4770 2A3C                                         l4762 2A02  
                                       l4754 29F2                                         l4746 29D6  
                                       l4738 29C6                                  main@curMove 01DA  
                                       l2996 50E0                                         l3892 3856  
                                       l3884 37CA                                         l3876 3722  
                                       l3868 28E6                                         l3796 2540  
                                       l3788 24E4                                         l4692 153E  
                                       l4684 14BC                                         l4676 1430  
                                       l4668 13AE                                         l4588 0E30  
                                       l4596 0ED8                                         l3980 33C8  
                                       l3972 3360                                         l4836 2E52  
                                       l4828 2DE2                                         l4780 2B8A  
                                       l4772 2A92                                         l4764 2A06  
                                       l4756 29F6                                         l4748 29DE  
                                       ?_min 000F                                         l3894 386A  
                                       l3886 3818                                         l3878 374A  
                                       l3798 2558                                         l4694 155A  
                                       l4686 14F4                                         l4678 144C  
                                       l4598 0EEA                                         l3990 3422  
                                       l3982 33D4                                         l3974 3368  
                                       l4838 2E5A                                         l4790 2BD6  
                                       l4782 2B90                                         l4774 2AB6  
                                       l4766 2A0A                                         l4758 29FA  
                                       l3896 3874                                         l3888 3834  
                                       l4696 1572                                         l4688 150C  
                                       l3984 33E0                                         l3992 3426  
                                       l3976 3378                                         l4792 2BF2  
                                       l4784 2BAA                                         l4776 2AC2  
                                       l4768 2A24                                         l3898 3876  
                                       l4698 15B6                                         l3994 344A  
                                       l3986 33EC                                         l3978 3394  
                                       l4794 2BF6                                         l4786 2BB6  
                                       l4778 2AE0                                         l3996 3456  
                                       l3988 33FA                                         l4796 2BFA  
                                       l4788 2BBE                                         l3998 3464  
                                       l4798 2BFE                                         u2000 48EC  
                                       u2001 48E8                                         u2010 4F44  
                                       u2011 4F3C                                         u2100 4470  
                                       u2101 446C                                         u2110 4498  
                                       u2030 500C                                         u2111 4494  
                                       u2031 5008                                         u2120 44DA  
                                       u2200 4E32                                         u2040 4FE0  
                                       u2121 44D6                                         u2201 4E2E  
                                       u2041 4FDC                                         u2130 44EE  
                                       u2050 429C                                         u2210 4E6C  
                                       u2131 44EA                                         u2051 4298  
                                       u2211 4E68                                         u2140 4580  
                                       u2060 42C4                                         u2028 4F46  
                                       u2300 47E2                                         u2220 4ADA  
                                       u3100 361A                                         u2141 457C  
                                       u2061 42C0                                         u2301 47DE  
                                       u2221 4AD6                                         u3101 3616  
                                       u2070 4306                                         u2230 4AFC  
                                       u2310 300A                                         u2150 40B4  
                                       u3110 365C                                         u2071 4302  
                                       u2231 4AF8                                         u2311 3006  
                                       u2151 40B0                                         u3111 3658  
                                       u2080 431A                                         u2240 4B24  
                                       u2320 3020                                         u2160 40DC  
                                       u2400 3ECE                                         u3120 3670  
                                       u3040 3422                      color_calibration@orange 00D4  
                               _BAUD4CONbits 0EE9                                         u2081 4316  
                                       u2241 4B20                                         u2321 301C  
                                       u2161 40D8                                         u2401 3ECA  
                                       u3121 366C                                         u3041 341E  
                                       u4001 2ACC                                         u2090 43AC  
                                       u2250 470A                                         u2330 309A  
                                       u2170 411E                                         u2410 3EF6  
                                       u3130 3702                                         u3050 344A  
                                       u2091 43A8                                         u2251 4706  
                                       u2331 3096                                         u2171 411A  
                                       u2411 3EF2                                         u3131 36FE  
                                       u3051 3446                                         u4011 2AEA  
                                       u2260 472C                                         u2340 3170  
                                       u2180 4132                                         u3300 2360  
                                       u3220 1E00                                         u2500 1A74  
                                       u2420 3F38                                         u3060 348C  
                                       u4100 2C0E                                         u2261 4728  
                                       u2341 316C                                         u2181 412E  
                                       u3301 235C                                         u3221 1DFC  
                                       u2501 1A70                                         u2421 3F34  
                                       u3061 3488                                         u4101 2C0A  
                                       u4021 2AFC                                         u2270 4766  
                                       u2350 3222                                         u2190 41C4  
                                       u3310 2388                                         u3230 1E3E  
                                       u2510 1B26                                         u2430 3F4C  
                                       u3070 34A0                                         u2271 4762  
                                       u2351 321E                                         u2191 41C0  
                                       u3311 2384                                         u3231 1E3A  
                                       u2511 1B22                                         u2431 3F48  
                                       u3071 349C                                         u4031 2B0E  
                                       u2600 4AA2                                         u2280 4788  
                                       u3240 1ED0                                         u2520 1BD8  
                                       u2440 3FDE                                         u3080 3532  
                                       u2601 4A9E                                         u2281 4784  
                                       u3241 1ECC                                         u2521 1BD4  
                                       u2441 3FDA                                         u3081 352E  
                                       u4201 2D22                                         u4121 2C86  
                                       u4041 2B20                                         u2290 47B0  
                                       u2370 333E                                         u3250 1F62  
                                       u2530 1CBE                                         u2450 175E  
                                       u3090 35F2                                         _T2PR 0FBC  
                                       u2291 47AC                                         u2371 333A  
                                       u3251 1F5E                                         u2531 1CBA  
                                       u2451 175A                                         u3091 35EE  
                                       u4211 2D34                                         u4131 2CA4  
                                       u4115 2C1A                                         u4051 2B32  
                                       u1900 4D46                                         u2380 5148  
                                       u2700 250E                                         u3260 2064  
                                       u2540 1CE6                                         u2460 179C  
                                       u1901 4D42                                         u2365 3240  
                                       u2381 5144                                         u2701 250A  
                                       u3261 2060                                         u2541 1CE2  
                                       u2461 1798                                         u4141 2CB6  
                                       u4117 2C1E                                         u4061 2B44  
                                       u2390 5202                                         u2550 4A02  
                                       u1910 4D64                                         u3270 2116  
                                       u2470 182E                                         u4230 2DF2  
                                       u2391 51FE                                         u2551 49FE  
                                       u1911 4D60                                         u2711 252C  
                                       u3271 2112                                         u5007 208E  
                                       u2471 182A                                         u4231 2DEE  
                                       u4151 2CC8                                         u4071 2B56  
                                       u2560 4A1C                                         u2640 4EFA  
                                       u1920 4D80                                         u2800 289C  
                                       u2720 25C4                                         u3280 21C8  
                                       u2480 18C0                                         u4240 2E6E  
                                       u2561 4A18                                         u2641 4EF6  
                                       u1921 4D7C                                         u2801 2898  
                                       u2721 25C0                                         u3281 21C4  
                                       u5017 20C6                                         u2481 18BC  
                                       u4241 2E6A                                         u4225 2DDA  
                                       u4161 2CDA                                         u4081 2B68  
                                       u2570 4A42                                         u2650 4F10  
                                       u1930 45A8                                         u3290 227A  
                                       u2490 19C2                                         u4250 2E80  
                                       u2571 4A3E                                         u2651 4F0C  
                                       u1931 45A4                                         u2811 28BA  
                                       u2731 25E2                                         u5107 40EE  
                                       u3291 2276                                         u5027 2140  
                                       u2491 19BE                                         u4307 33F2  
                                       u4251 2E7C                                         u4227 2DDE  
                                       u4171 2CEC                                         u4091 2B7A  
                                       u2580 4A60                                         u1940 4672  
                                       u2820 3818                                         u2740 267A  
                                       u2660 23A2                                         u2581 4A5C  
                                       u1941 466E                                         u2821 3814  
                                       u2741 2676                                         u2661 239E  
                                       u5117 4194                                         u5037 2178  
                                       u4317 345C                                         u4181 2CFE  
                                       u2590 4A7C                                         u2830 3826  
                                       u2591 4A78                                         u2831 3822  
                                       u5207 27C6                                         u2751 2698  
                                       u2671 23C0                                         u5127 4996  
                                       u5047 21F2                                         u4407 0F4A  
                                       u4327 3502                                         u4191 2D10  
                                       u2840 3834                                         u1880 5084  
                                       u2760 2730                                         u2680 2458  
                                       u3800 3B10                                         u3720 39E0  
                                       u2841 3830                                         u1881 5080  
                                       u5217 287C                                         u2761 272C  
                                       u2681 2454                                         u5137 4F70  
                                       u3801 3B0C                                         u3721 39DC  
                                       u5057 222A                                         u4417 0F82  
                                       u4337 35C2                                         u2850 384C  
                                       u1890 509A                                         u3810 3B32  
                                       u3730 3A02                                         u1970 49C6  
                                       u5307 39A8                                         u2851 3848  
                                       u1891 5096                                         u5227 2932  
                                       u2771 274E                                         u2691 2476  
                                       u5147 4BBC                                         u3811 3B2E  
                                       u3731 39FE                                         u1971 49C2  
                                       u5067 22A4                                         u4507 11D6  
                                       u4427 0FE8                                         u4347 362C  
                                       u4267 2A30                                         u2860 386A  
                                       u2780 27E6                                         u3820 3B5C  
                                       u3740 3A2C                                         u1980 49EE  
                                       u3900 0FC0                                         u5317 426C  
                                       u2861 3866                                         u5237 3754  
                                       u2781 27E2                                         u5157 2438  
                                       u3821 3B58                                         u3741 3A28  
                                       u1981 49EA                                         u5077 22DC  
                                       u4517 123C                                         u4437 1020  
                                       u3901 0FBC                                         u4357 36D2  
                                       u4277 2B9C                                         u2870 389C  
                                       u3830 3B7E                                         u3750 3A4E  
                                       u1990 485A                                         u3910 1106  
                                       u5327 42D6                                         u2871 3898  
                                       u5247 3794                                         u2791 2804  
                                       u5167 24EE                                         u3831 3B7A  
                                       u3751 3A4A                                         u5087 48BC  
                                       u1991 4856                                         u4607 1490  
                                       u4527 1274                                         u3911 1102  
                                       u4447 1058                                         u4367 0E3C  
                                       u4287 2BCA                                         u3840 3BA8  
                                       u3760 3A78                                         u3920 1214  
                                       u5337 437C                                         u5257 37D4  
                                       u5177 25A4                                         u3841 3BA4  
                                       u3761 3A74                                         u5097 4084  
                                       u4617 14C8                                         u4537 12AC  
                                       u3921 1210                                         u4457 1090  
                                       u4377 0E74                                         u4297 2DBA  
                                       u3850 3BCA                                         u3770 3A9A  
                                       u3930 1322                                         u5347 4440  
                                       u5267 3880                                         u5187 265A  
                                       u3851 3BC6                                         u3771 3A96  
                                       u4707 16C6                                         u4627 1500  
                                       u3931 131E                                         u4547 12E4  
                                       u4467 10C8                                         u4387 0EAC  
                                       u3860 3BF4                                         u3780 3AC4  
                                       u3940 1430                                         u5357 44AA  
                                       u5277 38E0                                         u5197 2710  
                                       u3861 3BF0                                         u3781 3AC0  
                                       u4717 16FE                                         u4637 1566  
                                       u3941 142C                                         u4557 134A  
                                       u4477 112E                                         u4397 0F12  
                                       u3870 3C16                                         u3790 3AE6  
                                       u3950 153E                                         u5367 4550  
                                       u5287 3920                                         u3871 3C12  
                                       u3791 3AE2                                         u4807 19EC  
                                       u4727 17C6                                         u4647 15DE  
                                       u3951 153A                                         u4567 1382  
                                       u4487 1166                                         u3880 0E14  
                                       u5297 3960                                         u4817 1A24  
                                       u4737 17FE                                         u4657 3E9E  
                                       u4577 13BA                                         u4497 119E  
                                       u3881 0E10                                         u3961 294C  
                                       u3890 0EEA                                         u4907 1D86  
                                       u4827 1A9E                                         u4747 1858  
                                       u4667 3F08                                         u4587 13F2  
                                       u3891 0EE6                                         u3971 2958  
                                       u4917 1DBE                                         u4837 1AD6  
                                       u4757 1890                                         u4677 3FAE  
                                       u4597 1458                                         u3981 2964  
                                       u3990 2A1C                                         u4927 1E68  
                                       u4847 1B50                                         u4767 18EA  
                                       u4687 1656                                         u3991 2A18  
                                       u4937 1EA0                                         u4857 1B88  
                                       u4777 1922                                         u4697 168E  
                                       u4947 1EFA                                         u4867 1C02  
                                       u4787 195A                                         u4957 1F32  
                                       u4877 1C3A                                         u4797 1992  
                                       u4967 1F8C                                         u4887 1D16  
                                       u4977 1FC4                                         u4897 1D4E  
                                       u4987 1FFC                                         u4997 2034  
                    color_calibration@yellow 00D0                  lostReturnHome@straightSpeed 0039  
                                       _main 2946                                         _move 0E02  
                                       _lost 0045                                         _wall 0046  
                                       fsr1h 0FE2                           i2___lwdiv@quotient 0005  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                                       max@a 000F                                         max@b 0011  
                                       btemp 0051                                         _stop 4804  
                                       min@a 000F                                         min@b 0011  
                                       prodh 0FF4                                         prodl 0FF3  
                                       start 0092                             color_detect@blue 0021  
                        main@reverseDuration 01A6                             __end_of_ADC_init 51F2  
                       ?i2_color_writetoaddr 0003                             color_detect@pink 002D  
                            __end_of_HighISR 0092                        lostReturnHome@curMove 0038  
                               ___param_bank 0000                         __end_of_batteryLevel 4F1A  
                                      ??_max 0013                                        ??_min 0013  
                            __end_of___aldiv 4804                                        ?_main 0001  
                                      _ADPCH 0F5F                              __end_of___awdiv 4AB4  
                                      ?_move 00B0                              __end_of___lldiv 4B58  
                                      ?_stop 0022                              ___awdiv@divisor 0011  
                            __end_of___lwdiv 4DA0                                        i2l142 4C9A  
                                      i2l145 51B8                                        i2l410 5134  
                                      i2l403 510E                                        i2l260 528A  
                                      i2l254 509C                                        i2l417 5220  
                                      i2l257 50C2                                        i2l266 5280  
                                      i2l364 0086                                        i2l269 524E  
                            ___awdiv@counter 0013                               ??_color_detect 00B0  
                                      _TMR0H 0FD4                                        _TMR0L 0FD3  
                        ___lmul@multiplicand 0013                   __end_of_I2C_2_Master_Start 526E  
                 __end_of_I2C_2_Master_Write 5244                                   _Buggy_init 4F94  
                 color_calibration@lightblue 00D6                       returnHome@straightRamp 003B  
                     returnHome@straightTime 0036                                        tablat 0FF5  
                                      plusw0 0FEB                                        plusw2 0FDB  
                                      ttemp5 0052                                        ttemp6 0055  
                                      ttemp7 0059                                        stop@i 002A  
                                      status 0FD8                                        wtemp8 0052  
                          color_detect@color 00B2                            color_detect@green 001B  
                          color_detect@white 003F                        ??i2_color_writetoaddr 0004  
                               main@turnRamp 01A8                        _I2C_2_Master_RepStart 526E  
                         putCharToRxBuf@byte 0001                              __initialization 4E7E  
                  get16bitTMR0val@timer_high 0015                                 __end_of_main 2E84  
                               __end_of_move 162C                                 __end_of_stop 490C  
                        move@reverseDuration 00BB                              _get16bitTMR0val 504C  
                                     ??_main 00DA                                       ??_move 00C0  
                                     ??_stop 0027                                __activetblptr 0000  
                              calibration@mL 0030                                calibration@mR 0032  
                     returnHome@turnDuration 003D                                 ?_setMotorPWM 001C  
                                     _ADRESH 0F64                                       _CCPR1H 0FAA  
                                     _CCPR2H 0FA6                                       _CCPR3H 0F25  
                                     _CCPR4H 0F21                             ___awdiv@dividend 000F  
                     lostReturnHome@turnRamp 003E                                       _RC0PPS 0E62  
                                     _RC4REG 0EE3                       wallAdjust@straightRamp 0027  
                                     _RE2PPS 0E74                                       _RC7PPS 0E69  
                                     _RD5PPS 0E6F                                       _RE4PPS 0E76  
                                     _RD6PPS 0E70                                       i2l1265 4E12  
                                     i2l1258 4E0A                                       i2l3050 509C  
                                     i2l3052 50AC                                       i2l4310 5110  
                                     i2l4302 50EC                                       i2l4312 5120  
                                     i2l4304 50FC                                       i2l3360 5278  
                                     i2l4314 5124                                       i2l4306 5100  
                                     i2l3362 527C                                       i2l4330 4C68  
                                     i2l4308 510C                                       i2l3356 5282  
                                     i2l3364 5246                                       i2l4332 4C72  
                                     i2l4500 0042                                       i2l3358 5286  
                                     i2l3366 524A                                       i2l4334 4C7C  
                                     i2l4326 4BFA                                       i2l4510 0082  
                                     i2l4502 0050                                       i2l4336 4C86  
                                     i2l4328 4C58                                       i2l4504 0056  
                                     i2l4338 4C90                                       i2l4506 0066  
                                     i2l4508 006E                                       i2l3670 4DA8  
                                     i2l2768 520A                                       i2l3680 4DDE  
                                     i2l3672 4DBA                                       i2l3682 4DF4  
                                     i2l3674 4DC2                                       i2l3666 519C  
                                     i2l4490 0026                                       _RG6PPS 0E88  
                                     i2l3684 4DFC                                       i2l3676 4DCA  
                                     i2l3668 4DA0                                       i2l4492 002A  
                                     i2l3686 4DFE                                       i2l3678 4DD8  
                                     i2l4494 002E                                       i2l4486 0012  
                                     i2l3688 4E04                                       i2l4496 003C  
                                     i2l4488 0022                                       i2l4498 0040  
                                  ??_HighISR 000D                     __end_of_color_click_init 4F94  
                                     _TMR0IE 714D                                       _TMR0IF 719D  
                                     _RX4PPS 0E15                                       _TX4REG 0EE4  
                              main@lightblue 01CD                                 ??_ADC_getval 000F  
                              ??_Timer0_init 000F                          calibration@turnRamp 0037  
                    calibration@turnDuration 0035                                 _CCPTMRS0bits 0FAD  
                           _getCharFromTxBuf 5110                                       ___lmul 4E14  
                                  ??___aldiv 0023                                       ___wmul 50C4  
                                  ??___awdiv 0013                                    ??___lldiv 0023  
                                  ??___lwdiv 0019                                       clear_0 4EA4  
                                     clear_1 4EB0                             ___awdiv@quotient 0015  
                                     isa$std 0001                      returnHome@straightSpeed 0039  
                               __pdataCOMRAM 004B                                       move@mL 00B0  
                                     move@mR 00B2                            __end_ofi2___lwdiv 4E14  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                  ?_ADC_init 0001                                       stop@mL 0022  
                                     stop@mR 0024                                  ?_Buggy_init 0001  
                          ??_initDCmotorsPWM 0011                           __end_of_ADC_getval 520A  
                 i2color_writetoaddr@address 0004                             __end_of_turnLeft 458C  
                         color_detect@orange 0033                   lostReturnHome@moveSequence 0034  
                      __end_of_isDataInTxBuf 5222                                   __accesstop 0060  
                    __end_of__initialization 4EC2                           color_detect@yellow 0027  
                            fullSpeedAhead@i 002B                                main@turnSpeed 01A7  
                     ?_I2C_2_Master_RepStart 0001                                ___rparam_used 0001  
                       __end_of_color_detect 3C26                    reverseShort@straightSpeed 0026  
              lostReturnHome@reverseDuration 003A                              _Interrupts_init 5222  
                             __pcstackCOMRAM 0001                      __end_of_get16bitTMR0val 5074  
                               ?_white_Light 0001                     get16bitTMR0val@timer_low 0013  
                   get16bitTMR0val@timer_val 0017                 ?_color_clear_init_interrupts 0001  
                           _reverseOneSquare 3FFE                          __end_of_Timer0_init 519A  
                                 ??_ADC_init 000F                                 rgb_2_hsv@HSV 0031  
                               _batteryLevel 4ECC                                   __pbssBANK0 0060  
                                 __pbssBANK2 0200                               _rgb_2_hsv$3592 00B6  
                             _rgb_2_hsv$3593 00B8                               _rgb_2_hsv$3594 00B0  
                          _color_writetoaddr 515A                                 _T2CLKCONbits 0FBF  
                             _lostReturnHome 1CE8                     reverseShort@straightRamp 0027  
                         ?_color_writetoaddr 0011                                      ?___lmul 000F  
                                    ?___wmul 000F                     wallAdjust@adjustDuration 002B  
                             ___lmul@product 0017                ??_color_clear_init_interrupts 001C  
                                move@curMove 00B9                      lostReturnHome@turnSpeed 003C  
                        ??_color_writetoaddr 0012                      wallAdjust@straightSpeed 0026  
                                    _SP4BRGH 0EE6                                      _SP4BRGL 0EE5  
                 fullSpeedAhead@straightRamp 0027                        turnRight@turnDuration 0027  
                                    _SSP2ADD 0ED6                                      _SSP2BUF 0ED5  
                                 _color_read 3C26                      __end_of_Interrupts_init 5238  
                     color_writetoaddr@value 0011                                      _HighISR 0008  
                  __end_of_color_writetoaddr 517A                       __end_of_lostReturnHome 238A  
                                  _ADREFbits 0F58                           _I2C_2_Master_Start 5264  
                                 _initUSART4 51BA                          i2_I2C_2_Master_Idle 509C  
                         _I2C_2_Master_Write 5238                                      __Hparam 0000  
                        i2_I2C_2_Master_Stop 5278                                      __Lparam 0000  
                                wallAdjust@i 002D                                  _Timer0_init 517A  
                       calibration@turnSpeed 0034                             ?_get16bitTMR0val 000F  
                                    ___aldiv 46F8                                      ___awdiv 49F0  
                            lostReturnHome@i 0043                                      ___lldiv 4AB4  
                              ??_calibration 0038                          ?_I2C_2_Master_Start 0001  
                                    ___lwdiv 4D2C                          ?_I2C_2_Master_Write 0001  
                               __psmallconst 0E00                                      _ambient 004F  
                                    __pcinit 4E7E                                      __ramtop 0E00  
                                  ?_turnLeft 0022                            __end_of_rgb_2_hsv 3360  
                                    __ptext0 2946                                      __ptext1 3360  
                                    __ptext2 0E02                                      __ptext3 3E14  
                                    __ptext4 162C                                      __ptext5 1CE8  
                                    __ptext6 4804                                      __ptext7 3FFE  
                                    __ptext8 5250                                      __ptext9 504C  
                       ?i2_I2C_2_Master_Idle 0001                                    _T2CONbits 0FBD  
                              ?_reverseShort 0022                         ?i2_I2C_2_Master_Stop 0001  
                           ___aldiv@dividend 001B                                    _T2HLTbits 0FBE  
                              _RxBufWriteCnt 004A                                      main@HSV 01DE  
                   __end_of_getCharFromTxBuf 5136                                      main@buf 0100  
                                    main@red 01A9                         ??_I2C_2_Master_Start 0010  
                       ??_I2C_2_Master_Write 0010                         end_of_initialization 4EC2  
            ??i2_color_clear_init_interrupts 0008                  __end_ofi2_color_writetoaddr 51BA  
                           ADC_getval@tmpval 000F                            reverseOneSquare@i 002C  
                          ?_color_click_init 0001                              ?_lostReturnHome 0030  
                                 _wallAdjust 3360                              ___lldiv@divisor 001F  
                                 _resetTimer 5250                           ??_color_click_init 0021  
                            ___lldiv@counter 0027                             ___aldiv@quotient 0025  
                 batteryLevel@batteryQuarter 0018                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc1 0FE6                                      postinc2 0FDE  
                 batteryLevel@batteryVoltage 0017                                   main@F14650 027A  
                                 main@F14654 0252                                   main@F14656 0200  
                                 main@F14659 004B                                   _returnHome 162C  
                            _initDCmotorsPWM 4C9C                                   ??_turnLeft 0029  
                                  _PORTFbits 0F8E                           setMotorPWM@negDuty 0021  
                             ??_reverseShort 0028                        ??i2_I2C_2_Master_Idle 0001  
                              move@turnSpeed 00BD                            __end_of_turnRight 43B8  
                      ??i2_I2C_2_Master_Stop 0002                          __end_of_calibration 39BC  
                               _color_detect 39BC                                  returnHome@i 0043  
                                  _TRISAbits 0F81                           setMotorPWM@posDuty 0020  
                                  _TRISBbits 0F82                                    _TRISCbits 0F83  
                                  _TRISDbits 0F84                                    _TRISEbits 0F85  
                                  _TRISFbits 0F86                                    _TRISGbits 0F87  
                                  _TRISHbits 0F88                             white_Light@state 000F  
                               ??_Buggy_init 000F                             fullSpeedAhead@mL 0022  
                           fullSpeedAhead@mR 0024                                  ?_color_read 0013  
                          i2___lwdiv@divisor 0003                     color_writetoaddr@address 0012  
                                  i2___lwdiv 4DA0                      ??_I2C_2_Master_RepStart 0010  
                          i2___lwdiv@counter 0007                     __end_of_reverseOneSquare 41E4  
                           ?_Interrupts_init 0001                  reverseShort@reverseDuration 002B  
                              stop@cur_power 002C                                  _CCP1CONbits 0FAB  
                     color_calibration@green 00CC                                 _EUSART4RXbuf 009C  
                        returnHome@turnSpeed 003C                                 _EUSART4TXbuf 0060  
                                _CCP2CONbits 0FA7                       color_calibration@white 00D8  
                                _CCP3CONbits 0F26                   lostReturnHome@straightRamp 003B  
                 lostReturnHome@straightTime 0036                                  ?_initUSART4 0001  
                                 main@orange 01C7                                  _CCP4CONbits 0F22  
                                 main@motorL 01F6                                   main@motorR 01EC  
                                 main@yellow 01BB                               color_read@RGBC 0013  
                             _fullSpeedAhead 490C                               __end_of___lmul 4E7E  
                       turnLeft@turnDuration 0027                               __end_of___wmul 50EA  
                         __end_of_Buggy_init 4FCA                                __pidataCOMRAM 528C  
                        start_initialization 4E7E                                  __end_of_max 5022  
                                __end_of_min 4FF6                                _TxBufWriteCnt 0048  
                 lostReturnHome@turnDuration 003D                                   rgb_2_hsv@b 00C4  
                                 rgb_2_hsv@g 00C2                                   ?i2___lwdiv 0001  
                                 rgb_2_hsv@r 00BA                             move@moveSequence 00B5  
                        wallAdjust@cur_power 002F        __end_ofi2_color_clear_init_interrupts 4C9C  
              i2_color_clear_init_interrupts 4BFA                                  ?_wallAdjust 0022  
                                ?_resetTimer 0001                      __end_of_initDCmotorsPWM 4D2C  
                     __end_of_fullSpeedAhead 49F0                           turnRight@cur_power 002E  
                                   ??___lmul 0017                                rgb_2_hsv@RGBC 0029  
                                   ??___wmul 0013                               _putCharToRxBuf 50EA  
                              rgb_2_hsv@diff 00BE                i2I2C_2_Master_Write@data_byte 0002  
                                _calibration 3722                                rgb_2_hsv@cmax 00BC  
                              rgb_2_hsv@cmin 00B4                                  ?_returnHome 0030  
               reverseOneSquare@straightRamp 0028                 __end_ofi2_I2C_2_Master_Start 528C  
               __end_ofi2_I2C_2_Master_Write 5250                            turnLeft@cur_power 002E  
                                __pbssCOMRAM 0045                                __pcstackBANK0 00B0  
                              __pcstackBANK1 0100                                     ?_HighISR 0001  
                       __end_of_reverseShort 3FFE                             stop@straightRamp 0026  
                           ___lwdiv@dividend 0015                                 ?_Timer0_init 0001  
                     __end_of_putCharToRxBuf 5110                              ?_fullSpeedAhead 0022  
                                  __pintcode 0008                                     ?___aldiv 001B  
                         turnRight@turnSpeed 0026                                     ?___awdiv 000F  
                                   ?___lldiv 001B                                     ?___lwdiv 0015  
                       I2C_2_Master_Read@ack 0011                         I2C_2_Master_Read@tmp 0012  
                                __smallconst 0E00                               reverseShort@mL 0022  
                             reverseShort@mR 0024                             main@moveSequence 017A  
                          _I2C_2_Master_Idle 5074                            _I2C_2_Master_Init 5022  
                          _I2C_2_Master_Read 4F1A                            turnLeft@turnSpeed 0026  
                          _I2C_2_Master_Stop 525A                                    _rgb_2_hsv 2E84  
                               _RxBufReadCnt 0049                                     _ADC_init 51D8  
                         ?_I2C_2_Master_Idle 0001                           ?_I2C_2_Master_Init 0001  
                         ?_I2C_2_Master_Read 0001                                ??_setMotorPWM 001E  
                         ?_I2C_2_Master_Stop 0001                             ___lwdiv@quotient 0019  
                   initDCmotorsPWM@PWMperiod 000F                            ?_getCharFromTxBuf 0001  
                                ??i2___lwdiv 0005                             ??_lostReturnHome 003F  
                         ??_getCharFromTxBuf 0001                            move@straightSpeed 00BA  
                            ___aldiv@divisor 001F                          ??_I2C_2_Master_Idle 000F  
                            ___aldiv@counter 0023                          ??_I2C_2_Master_Init 000F  
                        ??_I2C_2_Master_Read 0010                               ___wmul@product 0013  
                                   _LATAbits 0F79                          ??_I2C_2_Master_Stop 0010  
                                   _LATCbits 0F7B                                _isDataInTxBuf 520A  
                                   _LATDbits 0F7C                                     _LATEbits 0F7D  
                                   _LATFbits 0F7E                                     _LATGbits 0F7F  
                                   _LATHbits 0F80                                     _IPR0bits 0E1F  
                                   _PIE0bits 0E29                                     _PIE4bits 0E2D  
                                turnRight@mL 0022                                  turnRight@mR 0024  
                                   i2u147_40 521E                                     i2u147_41 5218  
                                   i2u148_40 5220                                     i2u332_40 50FC  
                                   i2u332_41 50F8                                     i2u333_40 5120  
                                   i2u261_40 4DBA                                     i2u333_41 511C  
                                   i2u261_41 4DB6                                     i2u262_40 4DD8  
                                   i2u262_41 4DD4                                     i2u263_40 4DF4  
                                   i2u263_41 4DF0                                     _PIR0bits 0E33  
                                   i2u195_40 50AC                                     i2u195_41 50A8  
                                   i2u196_40 50C2                                     i2u196_41 50BE  
                                   i2u365_40 0022                                     i2u365_41 001E  
                                   i2u366_40 003C                                     i2u366_41 0038  
                                   i2u367_40 0050                                     i2u367_41 004C  
                                   _PIR4bits 0E37                                     i2u368_40 0066  
                                   i2u368_41 0062                                     i2u369_40 0082  
                                   i2u369_41 007E                                     i2u537_47 4C5E  
                            ?_putCharToRxBuf 0001                             ?_initDCmotorsPWM 000F  
                fullSpeedAhead@straightSpeed 0026          __end_of_color_clear_init_interrupts 4BFA  
             ?i2_color_clear_init_interrupts 0001                  _color_clear_init_interrupts 4B58  
                                   _SSP2CON2 0EDA                                     _SSP2STAT 0ED8  
                               move@turnRamp 00BF                                   _ADCON0bits 0F60  
                  __end_of_I2C_2_Master_Idle 509C                        color_calibration@RGBC 00C6  
                  __end_of_I2C_2_Master_Init 504C                    __end_of_I2C_2_Master_Read 4F5C  
                          ___wmul@multiplier 000F                    __end_of_I2C_2_Master_Stop 5264  
   color_clear_init_interrupts@low_threshold 001F   i2color_clear_init_interrupts@low_threshold 000B  
                               setMotorPWM@m 001C                  I2C_2_Master_Write@data_byte 0010  
                      color_calibration@blue 00CE                           returnHome@turnRamp 003E  
                                  main@color 01DB                        color_calibration@pink 00D2  
                                  main@green 01AF                                    main@white 01D3  
                                 ?_rgb_2_hsv 0029                                 _TxBufReadCnt 0047  
                   i2color_writetoaddr@value 0003                                    _turnRight 41E4  
                  returnHome@reverseDuration 003A                                 ??_color_read 0015  
                          ___lmul@multiplier 000F                                    copy_data0 4E92  
                             ?_isDataInTxBuf 0001                __end_of_I2C_2_Master_RepStart 5278  
                          ?_reverseOneSquare 0022                          __end_of_setMotorPWM 46F8  
                               ??_initUSART4 000F                         i2_I2C_2_Master_Start 5282  
            reverseOneSquare@reverseDuration 0027                         i2_I2C_2_Master_Write 5244  
                         ??_reverseOneSquare 0029                                     __Hrparam 0000  
                                 _ADC_getval 51F2                             main@testSequence 01A2  
                                   __Lrparam 0000                                 wallAdjust@mL 0022  
                               wallAdjust@mR 0024                                ??_white_Light 000F  
                __end_ofi2_I2C_2_Master_Idle 50C4                  __end_ofi2_I2C_2_Master_Stop 5282  
                           lostReturnHome@mL 0030                             lostReturnHome@mR 0032  
                         __end_of_color_read 3E14                                   _ANSELBbits 0E9A  
                                 _ANSELDbits 0EA7                                   _ANSELFbits 0EB4  
                                 _T0CON0bits 0FD5                                   _T0CON1bits 0FD6  
                          _color_calibration 238A                reverseOneSquare@straightSpeed 0026  
                            ___lwdiv@divisor 0017                       returnHome@moveSequence 0034  
                         __end_of_initUSART4 51D8                              ___lwdiv@counter 001B  
                          turnRight@turnRamp 0028                                   ?_turnRight 0022  
                                   __ptext10 490C                                     __ptext11 51BA  
                                   __ptext20 2E84                                     __ptext12 4C9C  
                                   __ptext21 4FCA                                     __ptext13 39BC  
                                   __ptext30 526E                                     __ptext22 4FF6  
                                   __ptext14 4F5C                                     __ptext31 4F1A  
                                   __ptext23 4E14                                     __ptext15 4B58  
                                   __ptext40 49F0                                     __ptext32 5074  
                                   __ptext24 4AB4                                     __ptext16 515A  
                                   __ptext41 51D8                                     __ptext33 3722  
                                   __ptext25 46F8                                     __ptext17 5022  
                                   __ptext50 5278                                     __ptext42 51F2  
                                   __ptext34 41E4                                     __ptext26 3C26  
                                   __ptext18 238A                                     __ptext51 5282  
                                   __ptext43 517A                                     __ptext35 43B8  
                                   __ptext27 5238                                     __ptext19 5136  
                                   __ptext52 509C                                     __ptext44 5222  
                                   __ptext36 458C                                     __ptext28 525A  
                                   __ptext53 4DA0                                     __ptext45 4F94  
                                   __ptext37 50C4                                     __ptext29 5264  
                                   __ptext54 50EA                                     __ptext38 4D2C  
                                   __ptext55 520A                                     __ptext47 4BFA  
                                   __ptext39 4ECC                                     __ptext56 5110  
                                   __ptext48 519A                                     __ptext49 5244  
                                  move@color 00B4                           ?_color_calibration 00C6  
                              ?_batteryLevel 0001                                 _SSP2CON1bits 0ED9  
                               _SSP2CON2bits 0EDA                                reverseShort@i 002C  
                           turnLeft@turnRamp 0028                        reverseShort@cur_power 002E  
                                 turnLeft@mL 0022                                   turnLeft@mR 0024  
                        ??_color_calibration 003F                        ?i2_I2C_2_Master_Start 0001  
                               ??_wallAdjust 0028                             move@straightRamp 00BC  
                      ?i2_I2C_2_Master_Write 0001                             move@straightTime 00B7  
                          returnHome@curMove 0038                                 ??_resetTimer 000F  
                                 turnRight@i 002C                                     isa$xinst 0000  
                                 _RC4STAbits 0EE7                                     main@RGBC 01E4  
                                   int$flags 0051                         color_calibration@HSV 00C8  
                               ?_calibration 0030                                     main@blue 01B5  
                       color_calibration@red 00CA                                 ??_returnHome 003F  
                                   main@pink 01C1                                     _turnLeft 43B8  
                    fullSpeedAhead@cur_power 002D                          __end_of_white_Light 515A  
                  __end_of_color_calibration 2946                                   _INTCONbits 0FF2  
                               _reverseShort 3E14                    reverseOneSquare@cur_power 002E  
                                ??_rgb_2_hsv 0033                           __end_of_wallAdjust 3722  
                         reverseOneSquare@mL 0022                           reverseOneSquare@mR 0024  
                         __end_of_resetTimer 525A                             move@turnDuration 00BE  
                             ??_batteryLevel 0017                                  _setMotorPWM 458C  
                          ??_get16bitTMR0val 0011                              ??_isDataInTxBuf 0001  
                                   intlevel2 0000                             ___lldiv@dividend 001B  
                           ??_fullSpeedAhead 0028                           __end_of_returnHome 1CE8  
                                  turnLeft@i 002C                                  ?_ADC_getval 0001  
                          main@straightSpeed 01D9                             _color_click_init 4F5C  
                      color_detect@lightblue 0039                                   _SSP2DATPPS 0E1D  
                           ___lldiv@quotient 0023                                   _SSP2CLKPPS 0E1C  
                               ___aldiv@sign 0024                                  ??_turnRight 0029  
                           main@straightRamp 01DC                             main@straightTime 0128  
                                 _TX4STAbits 0EE8                       ??i2_I2C_2_Master_Start 0002  
                     ??i2_I2C_2_Master_Write 0002                             ??_putCharToRxBuf 0001  
                               returnHome@mL 0030                                 returnHome@mR 0032  
