

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Mar 11 18:24:20 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Generated 21/07/2023 GMT
    75                           ; 
    76                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F67K40 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000000                     
   109                           	psect	idataCOMRAM
   110   00410E                     __pidataCOMRAM:
   111                           	callstack 0
   112                           
   113                           ;initializer for _ambient
   114   00410E  01F4               	dw	500
   115                           
   116                           	psect	idataBANK0
   117   00410A                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for main@F14635
   121   00410A  04                 	db	4
   122   00410B  03                 	db	3
   123   00410C  09                 	db	9
   124   00410D  08                 	db	8
   125   000000                     _TRISCbits	set	3971
   126   000000                     _RC4STAbits	set	3815
   127   000000                     _SP4BRGH	set	3814
   128   000000                     _SP4BRGL	set	3813
   129   000000                     _TX4STAbits	set	3816
   130   000000                     _BAUD4CONbits	set	3817
   131   000000                     _TX4REG	set	3812
   132   000000                     _TRISBbits	set	3970
   133   000000                     _TRISAbits	set	3969
   134   000000                     _TRISEbits	set	3973
   135   000000                     _TRISGbits	set	3975
   136   000000                     _LATFbits	set	3966
   137   000000                     _TRISFbits	set	3974
   138   000000                     _TRISHbits	set	3976
   139   000000                     _TRISDbits	set	3972
   140   000000                     _LATEbits	set	3965
   141   000000                     _LATGbits	set	3967
   142   000000                     _LATHbits	set	3968
   143   000000                     _SSP2CON2bits	set	3802
   144   000000                     _TMR0IF	set	29085
   145   000000                     _TMR0IE	set	29005
   146   000000                     _RX4PPS	set	3605
   147   000000                     _SSP2CLKPPS	set	3612
   148   000000                     _SSP2DATPPS	set	3613
   149   000000                     _PIE0bits	set	3625
   150   000000                     _CCPR4H	set	3873
   151   000000                     _CCPR3H	set	3877
   152   000000                     _CCPR2H	set	4006
   153   000000                     _CCPR1H	set	4010
   154   000000                     _CCP1CONbits	set	4011
   155   000000                     _CCPTMRS0bits	set	4013
   156   000000                     _T2PR	set	4028
   157   000000                     _T2CONbits	set	4029
   158   000000                     _INTCONbits	set	4082
   159   000000                     _CCP2CONbits	set	4007
   160   000000                     _CCP3CONbits	set	3878
   161   000000                     _ADREFbits	set	3928
   162   000000                     _LATAbits	set	3961
   163   000000                     _LATDbits	set	3964
   164   000000                     _PORTFbits	set	3982
   165   000000                     _CCP4CONbits	set	3874
   166   000000                     _PIE4bits	set	3629
   167   000000                     _RD5PPS	set	3695
   168   000000                     _ANSELDbits	set	3751
   169   000000                     _SSP2ADD	set	3798
   170   000000                     _SSP2CON1bits	set	3801
   171   000000                     _LATCbits	set	3963
   172   000000                     _RC4REG	set	3811
   173   000000                     _SSP2CON2	set	3802
   174   000000                     _SSP2STAT	set	3800
   175   000000                     _ANSELFbits	set	3764
   176   000000                     _SSP2BUF	set	3797
   177   000000                     _IPR0bits	set	3615
   178   000000                     _RE2PPS	set	3700
   179   000000                     _ANSELBbits	set	3738
   180   000000                     _RD6PPS	set	3696
   181   000000                     _PIR0bits	set	3635
   182   000000                     _PIR4bits	set	3639
   183   000000                     _RC0PPS	set	3682
   184   000000                     _RC7PPS	set	3689
   185   000000                     _ADPCH	set	3935
   186   000000                     _ADRESH	set	3940
   187   000000                     _ADCON0bits	set	3936
   188   000000                     _RE4PPS	set	3702
   189   000000                     _RG6PPS	set	3720
   190   000000                     _TMR0L	set	4051
   191   000000                     _TMR0H	set	4052
   192   000000                     _T0CON0bits	set	4053
   193   000000                     _T0CON1bits	set	4054
   194   000000                     _T2CLKCONbits	set	4031
   195   000000                     _T2HLTbits	set	4030
   196                           
   197                           ; #config settings
   198                           
   199                           	psect	cinit
   200   003CCA                     __pcinit:
   201                           	callstack 0
   202   003CCA                     start_initialization:
   203                           	callstack 0
   204   003CCA                     __initialization:
   205                           	callstack 0
   206                           
   207                           ; Initialize objects allocated to BANK0 (4 bytes)
   208                           ; load TBLPTR registers with __pidataBANK0
   209   003CCA  0E0A               	movlw	low __pidataBANK0
   210   003CCC  6EF6               	movwf	tblptrl,c
   211   003CCE  0E41               	movlw	high __pidataBANK0
   212   003CD0  6EF7               	movwf	tblptrh,c
   213   003CD2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   214   003CD4  6EF8               	movwf	tblptru,c
   215   003CD6  EE00  F0EE         	lfsr	0,__pdataBANK0
   216   003CDA  EE10 F004          	lfsr	1,4
   217   003CDE                     copy_data0:
   218   003CDE  0009               	tblrd		*+
   219   003CE0  CFF5 FFEE          	movff	tablat,postinc0
   220   003CE4  50E5               	movf	postdec1,w,c
   221   003CE6  50E1               	movf	fsr1l,w,c
   222   003CE8  E1FA               	bnz	copy_data0
   223                           
   224                           ; Initialize objects allocated to COMRAM (2 bytes)
   225                           ; load TBLPTR registers with __pidataCOMRAM
   226   003CEA  0E0E               	movlw	low __pidataCOMRAM
   227   003CEC  6EF6               	movwf	tblptrl,c
   228   003CEE  0E41               	movlw	high __pidataCOMRAM
   229   003CF0  6EF7               	movwf	tblptrh,c
   230   003CF2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   231   003CF4  6EF8               	movwf	tblptru,c
   232   003CF6  0009               	tblrd		*+	;fetch initializer
   233   003CF8  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   234   003CFC  0009               	tblrd		*+	;fetch initializer
   235   003CFE  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   236                           
   237                           ; Clear objects allocated to BANK2 (122 bytes)
   238   003D02  EE02  F000         	lfsr	0,__pbssBANK2
   239   003D06  0E7A               	movlw	122
   240   003D08                     clear_0:
   241   003D08  6AEE               	clrf	postinc0,c
   242   003D0A  06E8               	decf	wreg,f,c
   243   003D0C  E1FD               	bnz	clear_0
   244                           
   245                           ; Clear objects allocated to BANK1 (40 bytes)
   246   003D0E  EE01  F0D6         	lfsr	0,__pbssBANK1
   247   003D12  0E28               	movlw	40
   248   003D14                     clear_1:
   249   003D14  6AEE               	clrf	postinc0,c
   250   003D16  06E8               	decf	wreg,f,c
   251   003D18  E1FD               	bnz	clear_1
   252                           
   253                           ; Clear objects allocated to BANK0 (82 bytes)
   254   003D1A  EE00  F060         	lfsr	0,__pbssBANK0
   255   003D1E  0E52               	movlw	82
   256   003D20                     clear_2:
   257   003D20  6AEE               	clrf	postinc0,c
   258   003D22  06E8               	decf	wreg,f,c
   259   003D24  E1FD               	bnz	clear_2
   260                           
   261                           ; Clear objects allocated to COMRAM (4 bytes)
   262   003D26  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   263   003D28  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   264   003D2A  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   265   003D2C  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   266   003D2E                     end_of_initialization:
   267                           	callstack 0
   268   003D2E                     __end_of__initialization:
   269                           	callstack 0
   270   003D2E  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   271   003D30  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   272   003D32  0100               	movlb	0
   273   003D34  EFDA  F010         	goto	_main	;jump to C main() function
   274                           
   275                           	psect	bssCOMRAM
   276   00004A                     __pbssCOMRAM:
   277                           	callstack 0
   278   00004A                     _TxBufReadCnt:
   279                           	callstack 0
   280   00004A                     	ds	1
   281   00004B                     _TxBufWriteCnt:
   282                           	callstack 0
   283   00004B                     	ds	1
   284   00004C                     _RxBufReadCnt:
   285                           	callstack 0
   286   00004C                     	ds	1
   287   00004D                     _RxBufWriteCnt:
   288                           	callstack 0
   289   00004D                     	ds	1
   290                           
   291                           	psect	dataCOMRAM
   292   00004E                     __pdataCOMRAM:
   293                           	callstack 0
   294   00004E                     _ambient:
   295                           	callstack 0
   296   00004E                     	ds	2
   297                           
   298                           	psect	bssBANK0
   299   000060                     __pbssBANK0:
   300                           	callstack 0
   301   000060                     _EUSART4TXbuf:
   302                           	callstack 0
   303   000060                     	ds	60
   304   00009C                     _EUSART4RXbuf:
   305                           	callstack 0
   306   00009C                     	ds	20
   307   0000B0                     _lost:
   308                           	callstack 0
   309   0000B0                     	ds	1
   310   0000B1                     _wall:
   311                           	callstack 0
   312   0000B1                     	ds	1
   313                           
   314                           	psect	dataBANK0
   315   0000EE                     __pdataBANK0:
   316                           	callstack 0
   317   0000EE                     main@F14635:
   318                           	callstack 0
   319   0000EE                     	ds	4
   320                           
   321                           	psect	bssBANK1
   322   0001D6                     __pbssBANK1:
   323                           	callstack 0
   324   0001D6                     	ds	40
   325                           
   326                           	psect	bssBANK2
   327   000200                     __pbssBANK2:
   328                           	callstack 0
   329   000200                     	ds	82
   330   000252                     	ds	40
   331                           
   332                           	psect	cstackBANK1
   333   000100                     __pcstackBANK1:
   334                           	callstack 0
   335   000100                     main@straightTime:
   336                           	callstack 0
   337                           
   338                           ; 82 bytes @ 0x0
   339   000100                     	ds	82
   340   000152                     main@moveSequence:
   341                           	callstack 0
   342                           
   343                           ; 40 bytes @ 0x52
   344   000152                     	ds	40
   345   00017A                     main@yellow:
   346                           	callstack 0
   347                           
   348                           ; 6 bytes @ 0x7A
   349   00017A                     	ds	6
   350   000180                     main@pink:
   351                           	callstack 0
   352                           
   353                           ; 6 bytes @ 0x80
   354   000180                     	ds	6
   355   000186                     main@orange:
   356                           	callstack 0
   357                           
   358                           ; 6 bytes @ 0x86
   359   000186                     	ds	6
   360   00018C                     main@lightblue:
   361                           	callstack 0
   362                           
   363                           ; 6 bytes @ 0x8C
   364   00018C                     	ds	6
   365   000192                     main@white:
   366                           	callstack 0
   367                           
   368                           ; 6 bytes @ 0x92
   369   000192                     	ds	6
   370   000198                     main@reverseDuration:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x98
   374   000198                     	ds	1
   375   000199                     main@straightSpeed:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x99
   379   000199                     	ds	1
   380   00019A                     main@turnSpeed:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x9A
   384   00019A                     	ds	1
   385   00019B                     main@turnRamp:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x9B
   389   00019B                     	ds	1
   390   00019C                     main@red:
   391                           	callstack 0
   392                           
   393                           ; 6 bytes @ 0x9C
   394   00019C                     	ds	6
   395   0001A2                     main@blue:
   396                           	callstack 0
   397                           
   398                           ; 6 bytes @ 0xA2
   399   0001A2                     	ds	6
   400   0001A8                     main@green:
   401                           	callstack 0
   402                           
   403                           ; 6 bytes @ 0xA8
   404   0001A8                     	ds	6
   405   0001AE                     main@color:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0xAE
   409   0001AE                     	ds	1
   410   0001AF                     main@curMove:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0xAF
   414   0001AF                     	ds	1
   415   0001B0                     main@straightRamp:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0xB0
   419   0001B0                     	ds	1
   420   0001B1                     main@RGBC_n:
   421                           	callstack 0
   422                           
   423                           ; 8 bytes @ 0xB1
   424   0001B1                     	ds	8
   425   0001B9                     main@turnDuration:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0xB9
   429   0001B9                     	ds	1
   430   0001BA                     main@RGBC:
   431                           	callstack 0
   432                           
   433                           ; 8 bytes @ 0xBA
   434   0001BA                     	ds	8
   435   0001C2                     main@motorR:
   436                           	callstack 0
   437                           
   438                           ; 10 bytes @ 0xC2
   439   0001C2                     	ds	10
   440   0001CC                     main@motorL:
   441                           	callstack 0
   442                           
   443                           ; 10 bytes @ 0xCC
   444   0001CC                     	ds	10
   445                           
   446                           	psect	cstackBANK0
   447   0000B2                     __pcstackBANK0:
   448                           	callstack 0
   449   0000B2                     move@mL:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x0
   453   0000B2                     	ds	2
   454   0000B4                     move@mR:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x2
   458   0000B4                     	ds	2
   459   0000B6                     move@color:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x4
   463   0000B6                     	ds	1
   464   0000B7                     move@moveSequence:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x5
   468   0000B7                     	ds	2
   469   0000B9                     move@straightTime:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x7
   473   0000B9                     	ds	2
   474   0000BB                     move@curMove:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x9
   478   0000BB                     	ds	1
   479   0000BC                     move@straightSpeed:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0xA
   483   0000BC                     	ds	1
   484   0000BD                     move@reverseDuration:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0xB
   488   0000BD                     	ds	1
   489   0000BE                     move@straightRamp:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0xC
   493   0000BE                     	ds	1
   494   0000BF                     move@turnSpeed:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xD
   498   0000BF                     	ds	1
   499   0000C0                     move@turnDuration:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0xE
   503   0000C0                     	ds	1
   504   0000C1                     move@turnRamp:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0xF
   508   0000C1                     	ds	1
   509   0000C2                     main@buf:
   510                           	callstack 0
   511                           
   512                           ; 40 bytes @ 0x10
   513   0000C2                     	ds	40
   514   0000EA                     main@testSequence:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x38
   518   0000EA                     	ds	4
   519                           
   520                           	psect	cstackCOMRAM
   521   000001                     __pcstackCOMRAM:
   522                           	callstack 0
   523   000001                     ??_getCharFromTxBuf:
   524   000001                     ??i2_I2C_2_Master_Idle:
   525   000001                     putCharToRxBuf@byte:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x0
   529   000001                     	ds	1
   530   000002                     i2I2C_2_Master_Write@data_byte:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x1
   534   000002                     	ds	1
   535   000003                     i2color_writetoaddr@value:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x2
   539   000003                     	ds	1
   540   000004                     i2color_writetoaddr@address:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x3
   544   000004                     	ds	1
   545   000005                     ??i2_color_clear_init_interrupts:
   546                           
   547                           ; 1 bytes @ 0x4
   548   000005                     	ds	1
   549   000006                     i2color_clear_init_interrupts@high_threshold:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x5
   553   000006                     	ds	2
   554   000008                     i2color_clear_init_interrupts@low_threshold:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x7
   558   000008                     	ds	2
   559   00000A                     ??_HighISR:
   560                           
   561                           ; 1 bytes @ 0x9
   562   00000A                     	ds	2
   563   00000C                     ??_I2C_2_Master_Idle:
   564   00000C                     ?_get16bitTMR0val:
   565                           	callstack 0
   566   00000C                     ?___wmul:
   567                           	callstack 0
   568   00000C                     ?___awdiv:
   569                           	callstack 0
   570   00000C                     ?___lmul:
   571                           	callstack 0
   572   00000C                     white_Light@state:
   573                           	callstack 0
   574   00000C                     ADC_getval@tmpval:
   575                           	callstack 0
   576   00000C                     initDCmotorsPWM@PWMperiod:
   577                           	callstack 0
   578   00000C                     ___wmul@multiplier:
   579                           	callstack 0
   580   00000C                     ___awdiv@dividend:
   581                           	callstack 0
   582   00000C                     ___lmul@multiplier:
   583                           	callstack 0
   584   00000C                     color_detect@RGBC_n:
   585                           	callstack 0
   586                           
   587                           ; 8 bytes @ 0xB
   588   00000C                     	ds	1
   589   00000D                     ??_I2C_2_Master_Read:
   590   00000D                     I2C_2_Master_Write@data_byte:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0xC
   594   00000D                     	ds	1
   595   00000E                     ??_get16bitTMR0val:
   596   00000E                     color_writetoaddr@value:
   597                           	callstack 0
   598   00000E                     I2C_2_Master_Read@ack:
   599                           	callstack 0
   600   00000E                     ___wmul@multiplicand:
   601                           	callstack 0
   602   00000E                     ___awdiv@divisor:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0xD
   606   00000E                     	ds	1
   607   00000F                     color_writetoaddr@address:
   608                           	callstack 0
   609   00000F                     I2C_2_Master_Read@tmp:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0xE
   613   00000F                     	ds	1
   614   000010                     ??_color_clear_init_interrupts:
   615   000010                     ___awdiv@counter:
   616                           	callstack 0
   617   000010                     color_read@RGBC:
   618                           	callstack 0
   619   000010                     get16bitTMR0val@timer_low:
   620                           	callstack 0
   621   000010                     ___wmul@product:
   622                           	callstack 0
   623   000010                     ___lmul@multiplicand:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0xF
   627   000010                     	ds	1
   628   000011                     ___awdiv@sign:
   629                           	callstack 0
   630   000011                     color_clear_init_interrupts@high_threshold:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x10
   634   000011                     	ds	1
   635   000012                     ??_color_read:
   636   000012                     ?___lwdiv:
   637                           	callstack 0
   638   000012                     get16bitTMR0val@timer_high:
   639                           	callstack 0
   640   000012                     ___awdiv@quotient:
   641                           	callstack 0
   642   000012                     ___lwdiv@dividend:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x11
   646   000012                     	ds	1
   647   000013                     color_clear_init_interrupts@low_threshold:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x12
   651   000013                     	ds	1
   652   000014                     batteryLevel@batteryVoltage:
   653                           	callstack 0
   654   000014                     color_detect@red:
   655                           	callstack 0
   656   000014                     get16bitTMR0val@timer_val:
   657                           	callstack 0
   658   000014                     ___lwdiv@divisor:
   659                           	callstack 0
   660   000014                     ___lmul@product:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x13
   664   000014                     	ds	1
   665   000015                     ??_color_click_init:
   666   000015                     batteryLevel@batteryQuarter:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x14
   670   000015                     	ds	1
   671   000016                     color_detect@green:
   672                           	callstack 0
   673   000016                     ___lwdiv@quotient:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x15
   677   000016                     	ds	2
   678   000018                     ?___aldiv:
   679                           	callstack 0
   680   000018                     ___lwdiv@counter:
   681                           	callstack 0
   682   000018                     color_detect@blue:
   683                           	callstack 0
   684   000018                     ___aldiv@dividend:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x17
   688   000018                     	ds	1
   689   000019                     setMotorPWM@m:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x18
   693   000019                     	ds	1
   694   00001A                     color_detect@yellow:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x19
   698   00001A                     	ds	1
   699   00001B                     ??_setMotorPWM:
   700                           
   701                           ; 1 bytes @ 0x1A
   702   00001B                     	ds	1
   703   00001C                     color_detect@pink:
   704                           	callstack 0
   705   00001C                     ___aldiv@divisor:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x1B
   709   00001C                     	ds	1
   710   00001D                     setMotorPWM@posDuty:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x1C
   714   00001D                     	ds	1
   715   00001E                     setMotorPWM@negDuty:
   716                           	callstack 0
   717   00001E                     color_detect@orange:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x1D
   721   00001E                     	ds	1
   722   00001F                     stop@mL:
   723                           	callstack 0
   724   00001F                     turnLeft@mL:
   725                           	callstack 0
   726   00001F                     turnRight@mL:
   727                           	callstack 0
   728   00001F                     fullSpeedAhead@mL:
   729                           	callstack 0
   730   00001F                     reverseOneSquare@mL:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x1E
   734   00001F                     	ds	1
   735   000020                     ___aldiv@counter:
   736                           	callstack 0
   737   000020                     color_detect@lightBlue:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x1F
   741   000020                     	ds	1
   742   000021                     ___aldiv@sign:
   743                           	callstack 0
   744   000021                     stop@mR:
   745                           	callstack 0
   746   000021                     turnLeft@mR:
   747                           	callstack 0
   748   000021                     turnRight@mR:
   749                           	callstack 0
   750   000021                     fullSpeedAhead@mR:
   751                           	callstack 0
   752   000021                     reverseOneSquare@mR:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x20
   756   000021                     	ds	1
   757   000022                     color_detect@white:
   758                           	callstack 0
   759   000022                     ___aldiv@quotient:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x21
   763   000022                     	ds	1
   764   000023                     stop@straightRamp:
   765                           	callstack 0
   766   000023                     turnLeft@turnSpeed:
   767                           	callstack 0
   768   000023                     turnRight@turnSpeed:
   769                           	callstack 0
   770   000023                     fullSpeedAhead@straightSpeed:
   771                           	callstack 0
   772   000023                     reverseOneSquare@straightSpeed:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x22
   776   000023                     	ds	1
   777   000024                     ??_stop:
   778   000024                     ??_color_detect:
   779   000024                     turnLeft@turnDuration:
   780                           	callstack 0
   781   000024                     turnRight@turnDuration:
   782                           	callstack 0
   783   000024                     fullSpeedAhead@straightRamp:
   784                           	callstack 0
   785   000024                     reverseOneSquare@reverseDuration:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x23
   789   000024                     	ds	1
   790   000025                     ??_fullSpeedAhead:
   791   000025                     turnLeft@turnRamp:
   792                           	callstack 0
   793   000025                     turnRight@turnRamp:
   794                           	callstack 0
   795   000025                     reverseOneSquare@straightRamp:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x24
   799   000025                     	ds	1
   800   000026                     ??_turnRight:
   801   000026                     ??_turnLeft:
   802   000026                     ??_reverseOneSquare:
   803   000026                     color_normalise@RGBC:
   804                           	callstack 0
   805                           
   806                           ; 8 bytes @ 0x25
   807   000026                     	ds	1
   808   000027                     stop@i:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x26
   812   000027                     	ds	1
   813   000028                     color_detect@color:
   814                           	callstack 0
   815   000028                     fullSpeedAhead@i:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x27
   819   000028                     	ds	1
   820   000029                     stop@cur_power:
   821                           	callstack 0
   822   000029                     turnLeft@i:
   823                           	callstack 0
   824   000029                     turnRight@i:
   825                           	callstack 0
   826   000029                     reverseOneSquare@i:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x28
   830   000029                     	ds	1
   831   00002A                     fullSpeedAhead@cur_power:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x29
   835   00002A                     	ds	1
   836   00002B                     turnLeft@cur_power:
   837                           	callstack 0
   838   00002B                     turnRight@cur_power:
   839                           	callstack 0
   840   00002B                     reverseOneSquare@cur_power:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x2A
   844   00002B                     	ds	2
   845   00002D                     returnHome@mL:
   846                           	callstack 0
   847   00002D                     lostReturnHome@mL:
   848                           	callstack 0
   849   00002D                     calibration@mL:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x2C
   853   00002D                     	ds	1
   854   00002E                     color_normalise@RGBC_n:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x2D
   858   00002E                     	ds	1
   859   00002F                     returnHome@mR:
   860                           	callstack 0
   861   00002F                     lostReturnHome@mR:
   862                           	callstack 0
   863   00002F                     calibration@mR:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x2E
   867   00002F                     	ds	1
   868   000030                     ??_color_normalise:
   869                           
   870                           ; 1 bytes @ 0x2F
   871   000030                     	ds	1
   872   000031                     calibration@turnSpeed:
   873                           	callstack 0
   874   000031                     returnHome@moveSequence:
   875                           	callstack 0
   876   000031                     lostReturnHome@moveSequence:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x30
   880   000031                     	ds	1
   881   000032                     color_calibration@RGBC:
   882                           	callstack 0
   883   000032                     calibration@turnDuration:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x31
   887   000032                     	ds	1
   888   000033                     returnHome@straightTime:
   889                           	callstack 0
   890   000033                     lostReturnHome@straightTime:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x32
   894   000033                     	ds	1
   895   000034                     calibration@turnRamp:
   896                           	callstack 0
   897   000034                     color_calibration@RGBC_n:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x33
   901   000034                     	ds	1
   902   000035                     ??_calibration:
   903   000035                     returnHome@curMove:
   904                           	callstack 0
   905   000035                     lostReturnHome@curMove:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0x34
   909   000035                     	ds	1
   910   000036                     returnHome@straightSpeed:
   911                           	callstack 0
   912   000036                     lostReturnHome@straightSpeed:
   913                           	callstack 0
   914   000036                     color_calibration@red:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x35
   918   000036                     	ds	1
   919   000037                     returnHome@reverseDuration:
   920                           	callstack 0
   921   000037                     lostReturnHome@reverseDuration:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x36
   925   000037                     	ds	1
   926   000038                     returnHome@straightRamp:
   927                           	callstack 0
   928   000038                     lostReturnHome@straightRamp:
   929                           	callstack 0
   930   000038                     color_calibration@green:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x37
   934   000038                     	ds	1
   935   000039                     returnHome@turnSpeed:
   936                           	callstack 0
   937   000039                     lostReturnHome@turnSpeed:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0x38
   941   000039                     	ds	1
   942   00003A                     returnHome@turnDuration:
   943                           	callstack 0
   944   00003A                     lostReturnHome@turnDuration:
   945                           	callstack 0
   946   00003A                     color_calibration@blue:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x39
   950   00003A                     	ds	1
   951   00003B                     returnHome@turnRamp:
   952                           	callstack 0
   953   00003B                     lostReturnHome@turnRamp:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x3A
   957   00003B                     	ds	1
   958   00003C                     ??_lostReturnHome:
   959   00003C                     ??_returnHome:
   960   00003C                     color_calibration@yellow:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x3B
   964   00003C                     	ds	2
   965   00003E                     color_calibration@pink:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x3D
   969   00003E                     	ds	2
   970   000040                     returnHome@i:
   971                           	callstack 0
   972   000040                     lostReturnHome@i:
   973                           	callstack 0
   974   000040                     color_calibration@orange:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x3F
   978   000040                     	ds	1
   979   000041                     ??_move:
   980                           
   981                           ; 1 bytes @ 0x40
   982   000041                     	ds	1
   983   000042                     color_calibration@lightblue:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x41
   987   000042                     	ds	2
   988   000044                     color_calibration@white:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x43
   992   000044                     	ds	2
   993   000046                     ??_color_calibration:
   994                           
   995                           ; 1 bytes @ 0x45
   996   000046                     	ds	2
   997   000048                     ??_main:
   998                           
   999                           ; 1 bytes @ 0x47
  1000   000048                     	ds	2
  1001                           
  1002 ;;
  1003 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1004 ;;
  1005 ;; *************** function _main *****************
  1006 ;; Defined at:
  1007 ;;		line 28 in file "main.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  straightTime   82    0[BANK1 ] unsigned int [41]
  1012 ;;  moveSequence   40   82[BANK1 ] unsigned char [40]
  1013 ;;  buf            40   16[BANK0 ] unsigned char [40]
  1014 ;;  motorL         10  204[BANK1 ] struct DC_motor
  1015 ;;  motorR         10  194[BANK1 ] struct DC_motor
  1016 ;;  RGBC            8  186[BANK1 ] struct RGBC_val
  1017 ;;  RGBC_n          8  177[BANK1 ] struct RGBC_val
  1018 ;;  green           6  168[BANK1 ] struct RGB_calib
  1019 ;;  blue            6  162[BANK1 ] struct RGB_calib
  1020 ;;  red             6  156[BANK1 ] struct RGB_calib
  1021 ;;  white           6  146[BANK1 ] struct RGB_calib
  1022 ;;  lightblue       6  140[BANK1 ] struct RGB_calib
  1023 ;;  orange          6  134[BANK1 ] struct RGB_calib
  1024 ;;  pink            6  128[BANK1 ] struct RGB_calib
  1025 ;;  yellow          6  122[BANK1 ] struct RGB_calib
  1026 ;;  testSequence    4   56[BANK0 ] unsigned char [4]
  1027 ;;  PWMcycle        2    0        unsigned int 
  1028 ;;  turnDuration    1  185[BANK1 ] unsigned char 
  1029 ;;  straightRamp    1  176[BANK1 ] unsigned char 
  1030 ;;  curMove         1  175[BANK1 ] unsigned char 
  1031 ;;  color           1  174[BANK1 ] unsigned char 
  1032 ;;  turnRamp        1  155[BANK1 ] unsigned char 
  1033 ;;  turnSpeed       1  154[BANK1 ] unsigned char 
  1034 ;;  straightSpee    1  153[BANK1 ] unsigned char 
  1035 ;;  reverseDurat    1  152[BANK1 ] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1046 ;;      Locals:         0      44     214       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1047 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1048 ;;      Totals:         2      44     214       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1049 ;;Total ram usage:      260 bytes
  1050 ;; Hardware stack levels required when called: 10
  1051 ;; This function calls:
  1052 ;;		_Buggy_init
  1053 ;;		_Interrupts_init
  1054 ;;		_Timer0_init
  1055 ;;		_batteryLevel
  1056 ;;		_calibration
  1057 ;;		_color_calibration
  1058 ;;		_color_click_init
  1059 ;;		_color_detect
  1060 ;;		_color_normalise
  1061 ;;		_color_read
  1062 ;;		_fullSpeedAhead
  1063 ;;		_get16bitTMR0val
  1064 ;;		_initDCmotorsPWM
  1065 ;;		_initUSART4
  1066 ;;		_lostReturnHome
  1067 ;;		_move
  1068 ;;		_resetTimer
  1069 ;;		_stop
  1070 ;;		_white_Light
  1071 ;; This function is called by:
  1072 ;;		Startup code after reset
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text0
  1077   0021B4                     __ptext0:
  1078                           	callstack 0
  1079   0021B4                     _main:
  1080                           	callstack 21
  1081   0021B4                     
  1082                           ;main.c: 30:     char buf[40] = {0};
  1083   0021B4  EE20  F0C2         	lfsr	2,main@buf
  1084   0021B8  0E27               	movlw	39
  1085   0021BA                     u2591:
  1086   0021BA  6ADE               	clrf	postinc2,c
  1087   0021BC  06E8               	decf	wreg,f,c
  1088   0021BE  E2FD               	bc	u2591
  1089   0021C0                     
  1090                           ;main.c: 32:     unsigned char color = 0;
  1091   0021C0  0E00               	movlw	0
  1092   0021C2  0101               	movlb	1	; () banked
  1093   0021C4  6FAE               	movwf	main@color& (0+255),b
  1094                           
  1095                           ;main.c: 33:     unsigned char moveSequence[40] = {0};
  1096   0021C6  EE21  F052         	lfsr	2,main@moveSequence
  1097   0021CA  0E27               	movlw	39
  1098   0021CC                     u2601:
  1099   0021CC  6ADE               	clrf	postinc2,c
  1100   0021CE  06E8               	decf	wreg,f,c
  1101   0021D0  E2FD               	bc	u2601
  1102                           
  1103                           ;main.c: 34:     unsigned int straightTime[41] = {0};
  1104   0021D2  EE21  F000         	lfsr	2,main@straightTime
  1105   0021D6  0E51               	movlw	81
  1106   0021D8                     u2611:
  1107   0021D8  6ADE               	clrf	postinc2,c
  1108   0021DA  06E8               	decf	wreg,f,c
  1109   0021DC  E2FD               	bc	u2611
  1110   0021DE                     
  1111                           ; BSR set to: 1
  1112                           ;main.c: 35:     char curMove = 0;
  1113   0021DE  0E00               	movlw	0
  1114   0021E0  6FAF               	movwf	main@curMove& (0+255),b
  1115   0021E2                     
  1116                           ; BSR set to: 1
  1117                           ;main.c: 37:     unsigned char testSequence[4] = {4,3,9,8};
  1118   0021E2  C0EE  F0EA         	movff	main@F14635,main@testSequence
  1119   0021E6  C0EF  F0EB         	movff	main@F14635+1,main@testSequence+1
  1120   0021EA  C0F0  F0EC         	movff	main@F14635+2,main@testSequence+2
  1121   0021EE  C0F1  F0ED         	movff	main@F14635+3,main@testSequence+3
  1122   0021F2                     
  1123                           ; BSR set to: 1
  1124                           ;main.c: 40:     struct RGBC_val RGBC, RGBC_n;;main.c: 41:     struct DC_motor motorL, m
      +                          otorR;;main.c: 44:     Buggy_init();
  1125   0021F2  EC35  F01F         	call	_Buggy_init	;wreg free
  1126   0021F6                     
  1127                           ;main.c: 45:     color_click_init();
  1128   0021F6  EC19  F01F         	call	_color_click_init	;wreg free
  1129   0021FA                     
  1130                           ;main.c: 46:     Timer0_init();
  1131   0021FA  ECFC  F01F         	call	_Timer0_init	;wreg free
  1132   0021FE                     
  1133                           ;main.c: 47:     Interrupts_init();
  1134   0021FE  EC50  F020         	call	_Interrupts_init	;wreg free
  1135   002202                     
  1136                           ;main.c: 48:     initUSART4();
  1137   002202  EC1C  F020         	call	_initUSART4	;wreg free
  1138   002206                     
  1139                           ;main.c: 49:     initDCmotorsPWM(PWMcycle);
  1140   002206  0E00               	movlw	0
  1141   002208  6E0D               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1142   00220A  0EC7               	movlw	199
  1143   00220C  6E0C               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1144   00220E  EC69  F01D         	call	_initDCmotorsPWM	;wreg free
  1145   002212                     
  1146                           ;main.c: 51:     motorL.power=0;
  1147   002212  0E00               	movlw	0
  1148   002214  0101               	movlb	1	; () banked
  1149   002216  6FCC               	movwf	main@motorL& (0+255),b
  1150   002218                     
  1151                           ; BSR set to: 1
  1152                           ;main.c: 52:     motorL.direction=1;
  1153   002218  0E01               	movlw	1
  1154   00221A  6FCD               	movwf	(main@motorL+1)& (0+255),b
  1155   00221C                     
  1156                           ; BSR set to: 1
  1157                           ;main.c: 53:     motorL.brakemode=1;
  1158   00221C  0E01               	movlw	1
  1159   00221E  6FCE               	movwf	(main@motorL+2)& (0+255),b
  1160   002220                     
  1161                           ; BSR set to: 1
  1162                           ;main.c: 54:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1163   002220  0EAA               	movlw	170
  1164   002222  6FD1               	movwf	(main@motorL+5)& (0+255),b
  1165   002224  0E0F               	movlw	15
  1166   002226  6FD2               	movwf	(main@motorL+6)& (0+255),b
  1167   002228                     
  1168                           ; BSR set to: 1
  1169                           ;main.c: 55:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1170   002228  0EA6               	movlw	166
  1171   00222A  6FD3               	movwf	(main@motorL+7)& (0+255),b
  1172   00222C  0E0F               	movlw	15
  1173   00222E  6FD4               	movwf	(main@motorL+8)& (0+255),b
  1174   002230                     
  1175                           ; BSR set to: 1
  1176                           ;main.c: 56:     motorL.PWMperiod=PWMcycle;
  1177   002230  0E00               	movlw	0
  1178   002232  6FD0               	movwf	(main@motorL+4)& (0+255),b
  1179   002234  0EC7               	movlw	199
  1180   002236  6FCF               	movwf	(main@motorL+3)& (0+255),b
  1181   002238                     
  1182                           ; BSR set to: 1
  1183                           ;main.c: 57:     motorL.compensation=3;
  1184   002238  0E03               	movlw	3
  1185   00223A  6FD5               	movwf	(main@motorL+9)& (0+255),b
  1186   00223C                     
  1187                           ; BSR set to: 1
  1188                           ;main.c: 59:     motorR.power=0;
  1189   00223C  0E00               	movlw	0
  1190   00223E  6FC2               	movwf	main@motorR& (0+255),b
  1191   002240                     
  1192                           ; BSR set to: 1
  1193                           ;main.c: 60:     motorR.direction=1;
  1194   002240  0E01               	movlw	1
  1195   002242  6FC3               	movwf	(main@motorR+1)& (0+255),b
  1196   002244                     
  1197                           ; BSR set to: 1
  1198                           ;main.c: 61:     motorR.brakemode=1;
  1199   002244  0E01               	movlw	1
  1200   002246  6FC4               	movwf	(main@motorR+2)& (0+255),b
  1201   002248                     
  1202                           ; BSR set to: 1
  1203                           ;main.c: 62:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1204   002248  0E25               	movlw	37
  1205   00224A  6FC7               	movwf	(main@motorR+5)& (0+255),b
  1206   00224C  0E0F               	movlw	15
  1207   00224E  6FC8               	movwf	(main@motorR+6)& (0+255),b
  1208   002250                     
  1209                           ; BSR set to: 1
  1210                           ;main.c: 63:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1211   002250  0E21               	movlw	33
  1212   002252  6FC9               	movwf	(main@motorR+7)& (0+255),b
  1213   002254  0E0F               	movlw	15
  1214   002256  6FCA               	movwf	(main@motorR+8)& (0+255),b
  1215   002258                     
  1216                           ; BSR set to: 1
  1217                           ;main.c: 64:     motorR.PWMperiod=PWMcycle;
  1218   002258  0E00               	movlw	0
  1219   00225A  6FC6               	movwf	(main@motorR+4)& (0+255),b
  1220   00225C  0EC7               	movlw	199
  1221   00225E  6FC5               	movwf	(main@motorR+3)& (0+255),b
  1222   002260                     
  1223                           ; BSR set to: 1
  1224                           ;main.c: 65:     motorR.compensation=0;
  1225   002260  0E00               	movlw	0
  1226   002262  6FCB               	movwf	(main@motorR+9)& (0+255),b
  1227   002264                     
  1228                           ; BSR set to: 1
  1229                           ;main.c: 68:     char straightSpeed=25;
  1230   002264  0E19               	movlw	25
  1231   002266  6F99               	movwf	main@straightSpeed& (0+255),b
  1232   002268                     
  1233                           ; BSR set to: 1
  1234                           ;main.c: 69:     unsigned char straightRamp=1;
  1235   002268  0E01               	movlw	1
  1236   00226A  6FB0               	movwf	main@straightRamp& (0+255),b
  1237   00226C                     
  1238                           ; BSR set to: 1
  1239                           ;main.c: 71:     unsigned char reverseDuration=10;
  1240   00226C  0E0A               	movlw	10
  1241   00226E  6F98               	movwf	main@reverseDuration& (0+255),b
  1242   002270                     
  1243                           ; BSR set to: 1
  1244                           ;main.c: 73:     char turnSpeed=20;
  1245   002270  0E14               	movlw	20
  1246   002272  6F9A               	movwf	main@turnSpeed& (0+255),b
  1247   002274                     
  1248                           ; BSR set to: 1
  1249                           ;main.c: 74:     unsigned char turnDuration=5;
  1250   002274  0E05               	movlw	5
  1251   002276  6FB9               	movwf	main@turnDuration& (0+255),b
  1252   002278                     
  1253                           ; BSR set to: 1
  1254                           ;main.c: 75:     unsigned char turnRamp=2;
  1255   002278  0E02               	movlw	2
  1256   00227A  6F9B               	movwf	main@turnRamp& (0+255),b
  1257   00227C                     
  1258                           ; BSR set to: 1
  1259                           ;main.c: 78:     batteryLevel();
  1260   00227C  ECD1  F01E         	call	_batteryLevel	;wreg free
  1261   002280                     l89:
  1262   002280  B48E               	btfsc	142,2,c	;volatile
  1263   002282  EF45  F011         	goto	u2621
  1264   002286  EF47  F011         	goto	u2620
  1265   00228A                     u2621:
  1266   00228A  EF40  F011         	goto	l89
  1267   00228E                     u2620:
  1268   00228E                     
  1269                           ;main.c: 82:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1270   00228E  9680               	bcf	128,3,c	;volatile
  1271   002290  9E7C               	bcf	124,7,c	;volatile
  1272                           
  1273                           ;main.c: 105:     LATHbits.LATH1=LATDbits.LATD3=1;
  1274   002292  867C               	bsf	124,3,c	;volatile
  1275   002294  8280               	bsf	128,1,c	;volatile
  1276   002296                     
  1277                           ;main.c: 106:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1278   002296  0E29               	movlw	41
  1279   002298  6E49               	movwf	(??_main+1)^0,c
  1280   00229A  0E96               	movlw	150
  1281   00229C  6E48               	movwf	??_main^0,c
  1282   00229E  0E7F               	movlw	127
  1283   0022A0                     u2717:
  1284   0022A0  2EE8               	decfsz	wreg,f,c
  1285   0022A2  D7FE               	bra	u2717
  1286   0022A4  2E48               	decfsz	??_main^0,f,c
  1287   0022A6  D7FC               	bra	u2717
  1288   0022A8  2E49               	decfsz	(??_main+1)^0,f,c
  1289   0022AA  D7FA               	bra	u2717
  1290   0022AC  0000               	nop	
  1291   0022AE                     
  1292                           ;main.c: 109:     struct RGB_calib red, green, blue, yellow, pink, orange, lightblue, wh
      +                          ite;;main.c: 110:     color_calibration(&RGBC, &RGBC_n, &red, &green, &blue, &yellow, &p
      +                          ink, &orange, &lightblue, &white);
  1293   0022AE  0EBA               	movlw	low main@RGBC
  1294   0022B0  6E32               	movwf	color_calibration@RGBC^0,c
  1295   0022B2  0E01               	movlw	high main@RGBC
  1296   0022B4  6E33               	movwf	(color_calibration@RGBC+1)^0,c
  1297   0022B6  0EB1               	movlw	low main@RGBC_n
  1298   0022B8  6E34               	movwf	color_calibration@RGBC_n^0,c
  1299   0022BA  0E01               	movlw	high main@RGBC_n
  1300   0022BC  6E35               	movwf	(color_calibration@RGBC_n+1)^0,c
  1301   0022BE  0E9C               	movlw	low main@red
  1302   0022C0  6E36               	movwf	color_calibration@red^0,c
  1303   0022C2  0E01               	movlw	high main@red
  1304   0022C4  6E37               	movwf	(color_calibration@red+1)^0,c
  1305   0022C6  0EA8               	movlw	low main@green
  1306   0022C8  6E38               	movwf	color_calibration@green^0,c
  1307   0022CA  0E01               	movlw	high main@green
  1308   0022CC  6E39               	movwf	(color_calibration@green+1)^0,c
  1309   0022CE  0EA2               	movlw	low main@blue
  1310   0022D0  6E3A               	movwf	color_calibration@blue^0,c
  1311   0022D2  0E01               	movlw	high main@blue
  1312   0022D4  6E3B               	movwf	(color_calibration@blue+1)^0,c
  1313   0022D6  0E7A               	movlw	low main@yellow
  1314   0022D8  6E3C               	movwf	color_calibration@yellow^0,c
  1315   0022DA  0E01               	movlw	high main@yellow
  1316   0022DC  6E3D               	movwf	(color_calibration@yellow+1)^0,c
  1317   0022DE  0E80               	movlw	low main@pink
  1318   0022E0  6E3E               	movwf	color_calibration@pink^0,c
  1319   0022E2  0E01               	movlw	high main@pink
  1320   0022E4  6E3F               	movwf	(color_calibration@pink+1)^0,c
  1321   0022E6  0E86               	movlw	low main@orange
  1322   0022E8  6E40               	movwf	color_calibration@orange^0,c
  1323   0022EA  0E01               	movlw	high main@orange
  1324   0022EC  6E41               	movwf	(color_calibration@orange+1)^0,c
  1325   0022EE  0E8C               	movlw	low main@lightblue
  1326   0022F0  6E42               	movwf	color_calibration@lightblue^0,c
  1327   0022F2  0E01               	movlw	high main@lightblue
  1328   0022F4  6E43               	movwf	(color_calibration@lightblue+1)^0,c
  1329   0022F6  0E92               	movlw	low main@white
  1330   0022F8  6E44               	movwf	color_calibration@white^0,c
  1331   0022FA  0E01               	movlw	high main@white
  1332   0022FC  6E45               	movwf	(color_calibration@white+1)^0,c
  1333   0022FE  EC5E  F015         	call	_color_calibration	;wreg free
  1334   002302                     
  1335                           ;main.c: 113:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1336   002302  0ECC               	movlw	low main@motorL
  1337   002304  6E2D               	movwf	calibration@mL^0,c
  1338   002306  0E01               	movlw	high main@motorL
  1339   002308  6E2E               	movwf	(calibration@mL+1)^0,c
  1340   00230A  0EC2               	movlw	low main@motorR
  1341   00230C  6E2F               	movwf	calibration@mR^0,c
  1342   00230E  0E01               	movlw	high main@motorR
  1343   002310  6E30               	movwf	(calibration@mR+1)^0,c
  1344   002312  0E14               	movlw	20
  1345   002314  6E31               	movwf	calibration@turnSpeed^0,c
  1346   002316  0EB9               	movlw	low main@turnDuration
  1347   002318  6E32               	movwf	calibration@turnDuration^0,c
  1348   00231A  0E01               	movlw	high main@turnDuration
  1349   00231C  6E33               	movwf	(calibration@turnDuration+1)^0,c
  1350   00231E  0E02               	movlw	2
  1351   002320  6E34               	movwf	calibration@turnRamp^0,c
  1352   002322  ECD1  F012         	call	_calibration	;wreg free
  1353   002326                     
  1354                           ;main.c: 116:     white_Light(1);
  1355   002326  0E01               	movlw	1
  1356   002328  ECDA  F01F         	call	_white_Light
  1357   00232C                     
  1358                           ;main.c: 117:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1359   00232C  0E52               	movlw	82
  1360   00232E  6E49               	movwf	(??_main+1)^0,c
  1361   002330  0E2B               	movlw	43
  1362   002332  6E48               	movwf	??_main^0,c
  1363   002334  0E00               	movlw	0
  1364   002336                     u2727:
  1365   002336  2EE8               	decfsz	wreg,f,c
  1366   002338  D7FE               	bra	u2727
  1367   00233A  2E48               	decfsz	??_main^0,f,c
  1368   00233C  D7FC               	bra	u2727
  1369   00233E  2E49               	decfsz	(??_main+1)^0,f,c
  1370   002340  D7FA               	bra	u2727
  1371   002342  D000               	nop2	
  1372   002344                     
  1373                           ;main.c: 120:     color_read(&RGBC);
  1374   002344  0EBA               	movlw	low main@RGBC
  1375   002346  6E10               	movwf	color_read@RGBC^0,c
  1376   002348  0E01               	movlw	high main@RGBC
  1377   00234A  6E11               	movwf	(color_read@RGBC+1)^0,c
  1378   00234C  EC72  F016         	call	_color_read	;wreg free
  1379   002350                     
  1380                           ;main.c: 121:     ambient=RGBC.C;
  1381   002350  C1C0  F04E         	movff	main@RGBC+6,_ambient
  1382   002354  C1C1  F04F         	movff	main@RGBC+7,_ambient+1
  1383   002358                     
  1384                           ;main.c: 122:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1385   002358  0E29               	movlw	41
  1386   00235A  6E49               	movwf	(??_main+1)^0,c
  1387   00235C  0E96               	movlw	150
  1388   00235E  6E48               	movwf	??_main^0,c
  1389   002360  0E7F               	movlw	127
  1390   002362                     u2737:
  1391   002362  2EE8               	decfsz	wreg,f,c
  1392   002364  D7FE               	bra	u2737
  1393   002366  2E48               	decfsz	??_main^0,f,c
  1394   002368  D7FC               	bra	u2737
  1395   00236A  2E49               	decfsz	(??_main+1)^0,f,c
  1396   00236C  D7FA               	bra	u2737
  1397   00236E  0000               	nop	
  1398   002370                     
  1399                           ;main.c: 124:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1400   002370  0ECC               	movlw	low main@motorL
  1401   002372  6E1F               	movwf	fullSpeedAhead@mL^0,c
  1402   002374  0E01               	movlw	high main@motorL
  1403   002376  6E20               	movwf	(fullSpeedAhead@mL+1)^0,c
  1404   002378  0EC2               	movlw	low main@motorR
  1405   00237A  6E21               	movwf	fullSpeedAhead@mR^0,c
  1406   00237C  0E01               	movlw	high main@motorR
  1407   00237E  6E22               	movwf	(fullSpeedAhead@mR+1)^0,c
  1408   002380  0E19               	movlw	25
  1409   002382  6E23               	movwf	fullSpeedAhead@straightSpeed^0,c
  1410   002384  0E01               	movlw	1
  1411   002386  6E24               	movwf	fullSpeedAhead@straightRamp^0,c
  1412   002388  EC95  F01C         	call	_fullSpeedAhead	;wreg free
  1413   00238C                     
  1414                           ;main.c: 125:     resetTimer();
  1415   00238C  EC67  F020         	call	_resetTimer	;wreg free
  1416   002390                     
  1417                           ;main.c: 127:     wall=0;
  1418   002390  0E00               	movlw	0
  1419   002392  0100               	movlb	0	; () banked
  1420   002394  6FB1               	movwf	_wall& (0+255),b
  1421   002396                     
  1422                           ; BSR set to: 0
  1423                           ;main.c: 128:     lost=0;
  1424   002396  0E00               	movlw	0
  1425   002398  6FB0               	movwf	_lost& (0+255),b
  1426   00239A                     l3911:
  1427                           
  1428                           ;main.c: 131:         if (wall == 1) {
  1429   00239A  0100               	movlb	0	; () banked
  1430   00239C  05B1               	decf	_wall& (0+255),w,b
  1431   00239E  A4D8               	btfss	status,2,c
  1432   0023A0  EFD4  F011         	goto	u2631
  1433   0023A4  EFD6  F011         	goto	u2630
  1434   0023A8                     u2631:
  1435   0023A8  EF7F  F012         	goto	l3939
  1436   0023AC                     u2630:
  1437   0023AC                     
  1438                           ; BSR set to: 0
  1439                           ;main.c: 132:             PIE0bits.INT0IE=TMR0IE=0;
  1440   0023AC  010E               	movlb	14	; () banked
  1441   0023AE  9B29               	bcf	41,5,b	;volatile
  1442   0023B0  AB29               	btfss	41,5,b	;volatile
  1443   0023B2  D002               	bra	u2645
  1444   0023B4  8129               	bsf	41,0,b	;volatile
  1445   0023B6  D002               	bra	u2647
  1446   0023B8                     u2645:
  1447   0023B8  010E               	movlb	14	; () banked
  1448   0023BA  9129               	bcf	41,0,b	;volatile
  1449   0023BC                     u2647:
  1450   0023BC                     
  1451                           ; BSR set to: 14
  1452                           ;main.c: 133:             straightTime[curMove] = get16bitTMR0val();
  1453   0023BC  EC65  F01F         	call	_get16bitTMR0val	;wreg free
  1454   0023C0  0101               	movlb	1	; () banked
  1455   0023C2  51AF               	movf	main@curMove& (0+255),w,b
  1456   0023C4  0D02               	mullw	2
  1457   0023C6  0E00               	movlw	low main@straightTime
  1458   0023C8  24F3               	addwf	243,w,c
  1459   0023CA  6ED9               	movwf	fsr2l,c
  1460   0023CC  0E01               	movlw	high main@straightTime
  1461   0023CE  20F4               	addwfc	prodh,w,c
  1462   0023D0  6EDA               	movwf	fsr2h,c
  1463   0023D2  C00C  FFDE         	movff	?_get16bitTMR0val,postinc2
  1464   0023D6  C00D  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1465                           
  1466                           ;main.c: 136:             stop(&motorL, &motorR, straightRamp);
  1467   0023DA  0ECC               	movlw	low main@motorL
  1468   0023DC  6E1F               	movwf	stop@mL^0,c
  1469   0023DE  0E01               	movlw	high main@motorL
  1470   0023E0  6E20               	movwf	(stop@mL+1)^0,c
  1471   0023E2  0EC2               	movlw	low main@motorR
  1472   0023E4  6E21               	movwf	stop@mR^0,c
  1473   0023E6  0E01               	movlw	high main@motorR
  1474   0023E8  6E22               	movwf	(stop@mR+1)^0,c
  1475   0023EA  C1B0  F023         	movff	main@straightRamp,stop@straightRamp
  1476   0023EE  EC11  F01C         	call	_stop	;wreg free
  1477   0023F2                     
  1478                           ;main.c: 137:             color_read(&RGBC);
  1479   0023F2  0EBA               	movlw	low main@RGBC
  1480   0023F4  6E10               	movwf	color_read@RGBC^0,c
  1481   0023F6  0E01               	movlw	high main@RGBC
  1482   0023F8  6E11               	movwf	(color_read@RGBC+1)^0,c
  1483   0023FA  EC72  F016         	call	_color_read	;wreg free
  1484   0023FE                     
  1485                           ;main.c: 138:             color_normalise(RGBC, &RGBC_n);
  1486   0023FE  EE21  F0BA         	lfsr	2,main@RGBC
  1487   002402  EE00  F026         	lfsr	0,color_normalise@RGBC
  1488   002406  0E07               	movlw	7
  1489   002408                     u2651:
  1490   002408  CFDB FFEB          	movff	plusw2,plusw0
  1491   00240C  06E8               	decf	wreg,f,c
  1492   00240E  E2FC               	bc	u2651
  1493   002410  0EB1               	movlw	low main@RGBC_n
  1494   002412  6E2E               	movwf	color_normalise@RGBC_n^0,c
  1495   002414  0E01               	movlw	high main@RGBC_n
  1496   002416  6E2F               	movwf	(color_normalise@RGBC_n+1)^0,c
  1497   002418  ECE6  F01A         	call	_color_normalise	;wreg free
  1498   00241C                     
  1499                           ;main.c: 139:             color = color_detect(RGBC_n, &red, &green, &blue, &yellow, &pi
      +                          nk, &orange, &lightblue, &white);
  1500   00241C  EE21  F0B1         	lfsr	2,main@RGBC_n
  1501   002420  EE00  F00C         	lfsr	0,color_detect@RGBC_n
  1502   002424  0E07               	movlw	7
  1503   002426                     u2661:
  1504   002426  CFDB FFEB          	movff	plusw2,plusw0
  1505   00242A  06E8               	decf	wreg,f,c
  1506   00242C  E2FC               	bc	u2661
  1507   00242E  0E9C               	movlw	low main@red
  1508   002430  6E14               	movwf	color_detect@red^0,c
  1509   002432  0E01               	movlw	high main@red
  1510   002434  6E15               	movwf	(color_detect@red+1)^0,c
  1511   002436  0EA8               	movlw	low main@green
  1512   002438  6E16               	movwf	color_detect@green^0,c
  1513   00243A  0E01               	movlw	high main@green
  1514   00243C  6E17               	movwf	(color_detect@green+1)^0,c
  1515   00243E  0EA2               	movlw	low main@blue
  1516   002440  6E18               	movwf	color_detect@blue^0,c
  1517   002442  0E01               	movlw	high main@blue
  1518   002444  6E19               	movwf	(color_detect@blue+1)^0,c
  1519   002446  0E7A               	movlw	low main@yellow
  1520   002448  6E1A               	movwf	color_detect@yellow^0,c
  1521   00244A  0E01               	movlw	high main@yellow
  1522   00244C  6E1B               	movwf	(color_detect@yellow+1)^0,c
  1523   00244E  0E80               	movlw	low main@pink
  1524   002450  6E1C               	movwf	color_detect@pink^0,c
  1525   002452  0E01               	movlw	high main@pink
  1526   002454  6E1D               	movwf	(color_detect@pink+1)^0,c
  1527   002456  0E86               	movlw	low main@orange
  1528   002458  6E1E               	movwf	color_detect@orange^0,c
  1529   00245A  0E01               	movlw	high main@orange
  1530   00245C  6E1F               	movwf	(color_detect@orange+1)^0,c
  1531   00245E  0E8C               	movlw	low main@lightblue
  1532   002460  6E20               	movwf	color_detect@lightBlue^0,c
  1533   002462  0E01               	movlw	high main@lightblue
  1534   002464  6E21               	movwf	(color_detect@lightBlue+1)^0,c
  1535   002466  0E92               	movlw	low main@white
  1536   002468  6E22               	movwf	color_detect@white^0,c
  1537   00246A  0E01               	movlw	high main@white
  1538   00246C  6E23               	movwf	(color_detect@white+1)^0,c
  1539   00246E  EC1E  F014         	call	_color_detect	;wreg free
  1540   002472  0101               	movlb	1	; () banked
  1541   002474  6FAE               	movwf	main@color& (0+255),b
  1542   002476                     
  1543                           ; BSR set to: 1
  1544                           ;main.c: 141:             moveSequence[curMove] = color;
  1545   002476  0E52               	movlw	low main@moveSequence
  1546   002478  25AF               	addwf	main@curMove& (0+255),w,b
  1547   00247A  6ED9               	movwf	fsr2l,c
  1548   00247C  6ADA               	clrf	fsr2h,c
  1549   00247E  0E01               	movlw	high main@moveSequence
  1550   002480  22DA               	addwfc	fsr2h,f,c
  1551   002482  C1AE  FFDF         	movff	main@color,indf2
  1552   002486                     
  1553                           ; BSR set to: 1
  1554                           ;main.c: 144:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1555   002486  0ECC               	movlw	low main@motorL
  1556   002488  0100               	movlb	0	; () banked
  1557   00248A  6FB2               	movwf	move@mL& (0+255),b
  1558   00248C  0E01               	movlw	high main@motorL
  1559   00248E  6FB3               	movwf	(move@mL+1)& (0+255),b
  1560   002490  0EC2               	movlw	low main@motorR
  1561   002492  6FB4               	movwf	move@mR& (0+255),b
  1562   002494  0E01               	movlw	high main@motorR
  1563   002496  6FB5               	movwf	(move@mR+1)& (0+255),b
  1564   002498  C1AE  F0B6         	movff	main@color,move@color
  1565   00249C  0E52               	movlw	low main@moveSequence
  1566   00249E  6FB7               	movwf	move@moveSequence& (0+255),b
  1567   0024A0  0E01               	movlw	high main@moveSequence
  1568   0024A2  6FB8               	movwf	(move@moveSequence+1)& (0+255),b
  1569   0024A4  0E00               	movlw	low main@straightTime
  1570   0024A6  6FB9               	movwf	move@straightTime& (0+255),b
  1571   0024A8  0E01               	movlw	high main@straightTime
  1572   0024AA  6FBA               	movwf	(move@straightTime+1)& (0+255),b
  1573   0024AC  C1AF  F0BB         	movff	main@curMove,move@curMove
  1574   0024B0  C199  F0BC         	movff	main@straightSpeed,move@straightSpeed
  1575   0024B4  C198  F0BD         	movff	main@reverseDuration,move@reverseDuration
  1576   0024B8  C1B0  F0BE         	movff	main@straightRamp,move@straightRamp
  1577   0024BC  C19A  F0BF         	movff	main@turnSpeed,move@turnSpeed
  1578   0024C0  C1B9  F0C0         	movff	main@turnDuration,move@turnDuration
  1579   0024C4  C19B  F0C1         	movff	main@turnRamp,move@turnRamp
  1580   0024C8  ECAF  F00D         	call	_move	;wreg free
  1581   0024CC                     
  1582                           ;main.c: 147:             color_read(&RGBC);
  1583   0024CC  0EBA               	movlw	low main@RGBC
  1584   0024CE  6E10               	movwf	color_read@RGBC^0,c
  1585   0024D0  0E01               	movlw	high main@RGBC
  1586   0024D2  6E11               	movwf	(color_read@RGBC+1)^0,c
  1587   0024D4  EC72  F016         	call	_color_read	;wreg free
  1588   0024D8                     
  1589                           ;main.c: 148:             ambient=RGBC.C;
  1590   0024D8  C1C0  F04E         	movff	main@RGBC+6,_ambient
  1591   0024DC  C1C1  F04F         	movff	main@RGBC+7,_ambient+1
  1592   0024E0                     
  1593                           ;main.c: 150:             curMove++;
  1594   0024E0  0101               	movlb	1	; () banked
  1595   0024E2  2BAF               	incf	main@curMove& (0+255),f,b
  1596   0024E4                     
  1597                           ; BSR set to: 1
  1598                           ;main.c: 151:             resetTimer();
  1599   0024E4  EC67  F020         	call	_resetTimer	;wreg free
  1600   0024E8                     
  1601                           ;main.c: 152:             PIE0bits.INT0IE=TMR0IE=1;
  1602   0024E8  010E               	movlb	14	; () banked
  1603   0024EA  8B29               	bsf	41,5,b	;volatile
  1604   0024EC  AB29               	btfss	41,5,b	;volatile
  1605   0024EE  D002               	bra	u2675
  1606   0024F0  8129               	bsf	41,0,b	;volatile
  1607   0024F2  D002               	bra	u2677
  1608   0024F4                     u2675:
  1609   0024F4  010E               	movlb	14	; () banked
  1610   0024F6  9129               	bcf	41,0,b	;volatile
  1611   0024F8                     u2677:
  1612   0024F8                     
  1613                           ; BSR set to: 14
  1614                           ;main.c: 153:             wall = 0;
  1615   0024F8  0E00               	movlw	0
  1616   0024FA  0100               	movlb	0	; () banked
  1617   0024FC  6FB1               	movwf	_wall& (0+255),b
  1618   0024FE                     l3939:
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;main.c: 157:         if (lost == 1) {
  1622   0024FE  05B0               	decf	_lost& (0+255),w,b
  1623   002500  A4D8               	btfss	status,2,c
  1624   002502  EF85  F012         	goto	u2681
  1625   002506  EF87  F012         	goto	u2680
  1626   00250A                     u2681:
  1627   00250A  EFBC  F012         	goto	l3949
  1628   00250E                     u2680:
  1629   00250E                     
  1630                           ; BSR set to: 0
  1631                           ;main.c: 158:             PIE0bits.INT0IE=0;
  1632   00250E  010E               	movlb	14	; () banked
  1633   002510  9129               	bcf	41,0,b	;volatile
  1634   002512                     
  1635                           ; BSR set to: 14
  1636                           ;main.c: 159:             stop(&motorL, &motorR, straightRamp);
  1637   002512  0ECC               	movlw	low main@motorL
  1638   002514  6E1F               	movwf	stop@mL^0,c
  1639   002516  0E01               	movlw	high main@motorL
  1640   002518  6E20               	movwf	(stop@mL+1)^0,c
  1641   00251A  0EC2               	movlw	low main@motorR
  1642   00251C  6E21               	movwf	stop@mR^0,c
  1643   00251E  0E01               	movlw	high main@motorR
  1644   002520  6E22               	movwf	(stop@mR+1)^0,c
  1645   002522  C1B0  F023         	movff	main@straightRamp,stop@straightRamp
  1646   002526  EC11  F01C         	call	_stop	;wreg free
  1647                           
  1648                           ;main.c: 160:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1649   00252A  0ECC               	movlw	low main@motorL
  1650   00252C  6E2D               	movwf	lostReturnHome@mL^0,c
  1651   00252E  0E01               	movlw	high main@motorL
  1652   002530  6E2E               	movwf	(lostReturnHome@mL+1)^0,c
  1653   002532  0EC2               	movlw	low main@motorR
  1654   002534  6E2F               	movwf	lostReturnHome@mR^0,c
  1655   002536  0E01               	movlw	high main@motorR
  1656   002538  6E30               	movwf	(lostReturnHome@mR+1)^0,c
  1657   00253A  0E52               	movlw	low main@moveSequence
  1658   00253C  6E31               	movwf	lostReturnHome@moveSequence^0,c
  1659   00253E  0E01               	movlw	high main@moveSequence
  1660   002540  6E32               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1661   002542  0E00               	movlw	low main@straightTime
  1662   002544  6E33               	movwf	lostReturnHome@straightTime^0,c
  1663   002546  0E01               	movlw	high main@straightTime
  1664   002548  6E34               	movwf	(lostReturnHome@straightTime+1)^0,c
  1665   00254A  C1AF  F035         	movff	main@curMove,lostReturnHome@curMove
  1666   00254E  C199  F036         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1667   002552  C198  F037         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1668   002556  C1B0  F038         	movff	main@straightRamp,lostReturnHome@straightRamp
  1669   00255A  C19A  F039         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1670   00255E  C1B9  F03A         	movff	main@turnDuration,lostReturnHome@turnDuration
  1671   002562  C19B  F03B         	movff	main@turnRamp,lostReturnHome@turnRamp
  1672   002566  EC5F  F00A         	call	_lostReturnHome	;wreg free
  1673   00256A                     
  1674                           ;main.c: 161:             PIE0bits.INT0IE=1;
  1675   00256A  010E               	movlb	14	; () banked
  1676   00256C  8129               	bsf	41,0,b	;volatile
  1677   00256E                     
  1678                           ; BSR set to: 14
  1679                           ;main.c: 162:             lost = 0;
  1680   00256E  0E00               	movlw	0
  1681   002570  0100               	movlb	0	; () banked
  1682   002572  6FB0               	movwf	_lost& (0+255),b
  1683                           
  1684                           ;main.c: 163:             break;
  1685   002574  EFCF  F012         	goto	l100
  1686   002578                     l3949:
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;main.c: 166:         if (color == 8 || color == 9) {break;}
  1690   002578  0E08               	movlw	8
  1691   00257A  0101               	movlb	1	; () banked
  1692   00257C  19AE               	xorwf	main@color& (0+255),w,b
  1693   00257E  B4D8               	btfsc	status,2,c
  1694   002580  EFC4  F012         	goto	u2691
  1695   002584  EFC6  F012         	goto	u2690
  1696   002588                     u2691:
  1697   002588  EFCF  F012         	goto	l100
  1698   00258C                     u2690:
  1699   00258C                     
  1700                           ; BSR set to: 1
  1701   00258C  0E09               	movlw	9
  1702   00258E  19AE               	xorwf	main@color& (0+255),w,b
  1703   002590  A4D8               	btfss	status,2,c
  1704   002592  EFCD  F012         	goto	u2701
  1705   002596  EFCF  F012         	goto	u2700
  1706   00259A                     u2701:
  1707   00259A  EFCD  F011         	goto	l3911
  1708   00259E                     u2700:
  1709   00259E                     l100:
  1710   00259E  EF4C  F000         	goto	start
  1711   0025A2                     __end_of_main:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _move *****************
  1715 ;; Defined at:
  1716 ;;		line 91 in file "dc_motor.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  1719 ;;		 -> main@motorL(10), 
  1720 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  1721 ;;		 -> main@motorR(10), 
  1722 ;;  color           1    4[BANK0 ] unsigned char 
  1723 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  1724 ;;		 -> main@moveSequence(40), 
  1725 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  1726 ;;		 -> main@straightTime(82), 
  1727 ;;  curMove         1    9[BANK0 ] unsigned char 
  1728 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  1729 ;;  reverseDurat    1   11[BANK0 ] unsigned char 
  1730 ;;  straightRamp    1   12[BANK0 ] unsigned char 
  1731 ;;  turnSpeed       1   13[BANK0 ] unsigned char 
  1732 ;;  turnDuration    1   14[BANK0 ] unsigned char 
  1733 ;;  turnRamp        1   15[BANK0 ] unsigned char 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1745 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1748 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1749 ;;Total ram usage:       18 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 9
  1752 ;; This function calls:
  1753 ;;		_fullSpeedAhead
  1754 ;;		_returnHome
  1755 ;;		_reverseOneSquare
  1756 ;;		_turnLeft
  1757 ;;		_turnRight
  1758 ;; This function is called by:
  1759 ;;		_main
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text1
  1764   001B5E                     __ptext1:
  1765                           	callstack 0
  1766   001B5E                     _move:
  1767                           	callstack 21
  1768   001B5E                     
  1769                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reve
      +                          rseDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, uns
      +                          igned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  1770   001B5E  0100               	movlb	0	; () banked
  1771   001B60  05B6               	decf	move@color& (0+255),w,b
  1772   001B62  A4D8               	btfss	status,2,c
  1773   001B64  EFB6  F00D         	goto	u2511
  1774   001B68  EFB8  F00D         	goto	u2510
  1775   001B6C                     u2511:
  1776   001B6C  EF00  F00E         	goto	l3743
  1777   001B70                     u2510:
  1778   001B70                     
  1779                           ; BSR set to: 0
  1780                           ;dc_motor.c: 94:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1781   001B70  C0B2  F01F         	movff	move@mL,turnRight@mL
  1782   001B74  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  1783   001B78  C0B4  F021         	movff	move@mR,turnRight@mR
  1784   001B7C  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  1785   001B80  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1786   001B84  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  1787   001B88  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  1788   001B8C  EC5C  F018         	call	_turnRight	;wreg free
  1789   001B90                     
  1790                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1791   001B90  0E05               	movlw	5
  1792   001B92  6E42               	movwf	(??_move+1)^0,c
  1793   001B94  0E0F               	movlw	15
  1794   001B96  6E41               	movwf	??_move^0,c
  1795   001B98  0EF1               	movlw	241
  1796   001B9A                     u2747:
  1797   001B9A  2EE8               	decfsz	wreg,f,c
  1798   001B9C  D7FE               	bra	u2747
  1799   001B9E  2E41               	decfsz	??_move^0,f,c
  1800   001BA0  D7FC               	bra	u2747
  1801   001BA2  2E42               	decfsz	(??_move+1)^0,f,c
  1802   001BA4  D7FA               	bra	u2747
  1803   001BA6  0000               	nop	
  1804   001BA8                     
  1805                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1806   001BA8  C0B2  F01F         	movff	move@mL,turnRight@mL
  1807   001BAC  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  1808   001BB0  C0B4  F021         	movff	move@mR,turnRight@mR
  1809   001BB4  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  1810   001BB8  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1811   001BBC  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  1812   001BC0  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  1813   001BC4  EC5C  F018         	call	_turnRight	;wreg free
  1814                           
  1815                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1816   001BC8  0E05               	movlw	5
  1817   001BCA  6E42               	movwf	(??_move+1)^0,c
  1818   001BCC  0E0F               	movlw	15
  1819   001BCE  6E41               	movwf	??_move^0,c
  1820   001BD0  0EF1               	movlw	241
  1821   001BD2                     u2757:
  1822   001BD2  2EE8               	decfsz	wreg,f,c
  1823   001BD4  D7FE               	bra	u2757
  1824   001BD6  2E41               	decfsz	??_move^0,f,c
  1825   001BD8  D7FC               	bra	u2757
  1826   001BDA  2E42               	decfsz	(??_move+1)^0,f,c
  1827   001BDC  D7FA               	bra	u2757
  1828   001BDE  0000               	nop	
  1829   001BE0                     
  1830                           ;dc_motor.c: 98:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1831   001BE0  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  1832   001BE4  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1833   001BE8  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  1834   001BEC  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1835   001BF0  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1836   001BF4  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1837   001BF8  EC95  F01C         	call	_fullSpeedAhead	;wreg free
  1838                           
  1839                           ;dc_motor.c: 99:     }
  1840   001BFC  EFD9  F010         	goto	l513
  1841   001C00                     l3743:
  1842                           
  1843                           ; BSR set to: 0
  1844   001C00  0E02               	movlw	2
  1845   001C02  19B6               	xorwf	move@color& (0+255),w,b
  1846   001C04  A4D8               	btfss	status,2,c
  1847   001C06  EF07  F00E         	goto	u2521
  1848   001C0A  EF09  F00E         	goto	u2520
  1849   001C0E                     u2521:
  1850   001C0E  EF51  F00E         	goto	l3753
  1851   001C12                     u2520:
  1852   001C12                     
  1853                           ; BSR set to: 0
  1854                           ;dc_motor.c: 102:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1855   001C12  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1856   001C16  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1857   001C1A  C0B4  F021         	movff	move@mR,turnLeft@mR
  1858   001C1E  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1859   001C22  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1860   001C26  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1861   001C2A  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1862   001C2E  EC46  F019         	call	_turnLeft	;wreg free
  1863   001C32                     
  1864                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1865   001C32  0E05               	movlw	5
  1866   001C34  6E42               	movwf	(??_move+1)^0,c
  1867   001C36  0E0F               	movlw	15
  1868   001C38  6E41               	movwf	??_move^0,c
  1869   001C3A  0EF1               	movlw	241
  1870   001C3C                     u2767:
  1871   001C3C  2EE8               	decfsz	wreg,f,c
  1872   001C3E  D7FE               	bra	u2767
  1873   001C40  2E41               	decfsz	??_move^0,f,c
  1874   001C42  D7FC               	bra	u2767
  1875   001C44  2E42               	decfsz	(??_move+1)^0,f,c
  1876   001C46  D7FA               	bra	u2767
  1877   001C48  0000               	nop	
  1878   001C4A                     
  1879                           ;dc_motor.c: 104:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1880   001C4A  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1881   001C4E  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1882   001C52  C0B4  F021         	movff	move@mR,turnLeft@mR
  1883   001C56  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1884   001C5A  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1885   001C5E  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1886   001C62  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1887   001C66  EC46  F019         	call	_turnLeft	;wreg free
  1888                           
  1889                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1890   001C6A  0E05               	movlw	5
  1891   001C6C  6E42               	movwf	(??_move+1)^0,c
  1892   001C6E  0E0F               	movlw	15
  1893   001C70  6E41               	movwf	??_move^0,c
  1894   001C72  0EF1               	movlw	241
  1895   001C74                     u2777:
  1896   001C74  2EE8               	decfsz	wreg,f,c
  1897   001C76  D7FE               	bra	u2777
  1898   001C78  2E41               	decfsz	??_move^0,f,c
  1899   001C7A  D7FC               	bra	u2777
  1900   001C7C  2E42               	decfsz	(??_move+1)^0,f,c
  1901   001C7E  D7FA               	bra	u2777
  1902   001C80  0000               	nop	
  1903   001C82                     
  1904                           ;dc_motor.c: 106:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1905   001C82  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  1906   001C86  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1907   001C8A  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  1908   001C8E  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1909   001C92  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1910   001C96  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1911   001C9A  EC95  F01C         	call	_fullSpeedAhead	;wreg free
  1912                           
  1913                           ;dc_motor.c: 107:     }
  1914   001C9E  EFD9  F010         	goto	l513
  1915   001CA2                     l3753:
  1916                           
  1917                           ; BSR set to: 0
  1918   001CA2  0E03               	movlw	3
  1919   001CA4  19B6               	xorwf	move@color& (0+255),w,b
  1920   001CA6  A4D8               	btfss	status,2,c
  1921   001CA8  EF58  F00E         	goto	u2531
  1922   001CAC  EF5A  F00E         	goto	u2530
  1923   001CB0                     u2531:
  1924   001CB0  EFDA  F00E         	goto	l3769
  1925   001CB4                     u2530:
  1926   001CB4                     
  1927                           ; BSR set to: 0
  1928                           ;dc_motor.c: 110:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1929   001CB4  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1930   001CB8  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1931   001CBC  C0B4  F021         	movff	move@mR,turnLeft@mR
  1932   001CC0  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1933   001CC4  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1934   001CC8  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1935   001CCC  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1936   001CD0  EC46  F019         	call	_turnLeft	;wreg free
  1937   001CD4                     
  1938                           ;dc_motor.c: 111:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1939   001CD4  0E05               	movlw	5
  1940   001CD6  6E42               	movwf	(??_move+1)^0,c
  1941   001CD8  0E0F               	movlw	15
  1942   001CDA  6E41               	movwf	??_move^0,c
  1943   001CDC  0EF1               	movlw	241
  1944   001CDE                     u2787:
  1945   001CDE  2EE8               	decfsz	wreg,f,c
  1946   001CE0  D7FE               	bra	u2787
  1947   001CE2  2E41               	decfsz	??_move^0,f,c
  1948   001CE4  D7FC               	bra	u2787
  1949   001CE6  2E42               	decfsz	(??_move+1)^0,f,c
  1950   001CE8  D7FA               	bra	u2787
  1951   001CEA  0000               	nop	
  1952   001CEC                     
  1953                           ;dc_motor.c: 112:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1954   001CEC  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1955   001CF0  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1956   001CF4  C0B4  F021         	movff	move@mR,turnLeft@mR
  1957   001CF8  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1958   001CFC  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1959   001D00  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1960   001D04  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1961   001D08  EC46  F019         	call	_turnLeft	;wreg free
  1962                           
  1963                           ;dc_motor.c: 113:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1964   001D0C  0E05               	movlw	5
  1965   001D0E  6E42               	movwf	(??_move+1)^0,c
  1966   001D10  0E0F               	movlw	15
  1967   001D12  6E41               	movwf	??_move^0,c
  1968   001D14  0EF1               	movlw	241
  1969   001D16                     u2797:
  1970   001D16  2EE8               	decfsz	wreg,f,c
  1971   001D18  D7FE               	bra	u2797
  1972   001D1A  2E41               	decfsz	??_move^0,f,c
  1973   001D1C  D7FC               	bra	u2797
  1974   001D1E  2E42               	decfsz	(??_move+1)^0,f,c
  1975   001D20  D7FA               	bra	u2797
  1976   001D22  0000               	nop	
  1977   001D24                     
  1978                           ;dc_motor.c: 114:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1979   001D24  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1980   001D28  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1981   001D2C  C0B4  F021         	movff	move@mR,turnLeft@mR
  1982   001D30  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1983   001D34  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1984   001D38  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1985   001D3C  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1986   001D40  EC46  F019         	call	_turnLeft	;wreg free
  1987   001D44                     
  1988                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1989   001D44  0E05               	movlw	5
  1990   001D46  6E42               	movwf	(??_move+1)^0,c
  1991   001D48  0E0F               	movlw	15
  1992   001D4A  6E41               	movwf	??_move^0,c
  1993   001D4C  0EF1               	movlw	241
  1994   001D4E                     u2807:
  1995   001D4E  2EE8               	decfsz	wreg,f,c
  1996   001D50  D7FE               	bra	u2807
  1997   001D52  2E41               	decfsz	??_move^0,f,c
  1998   001D54  D7FC               	bra	u2807
  1999   001D56  2E42               	decfsz	(??_move+1)^0,f,c
  2000   001D58  D7FA               	bra	u2807
  2001   001D5A  0000               	nop	
  2002                           
  2003                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2004   001D5C  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2005   001D60  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2006   001D64  C0B4  F021         	movff	move@mR,turnLeft@mR
  2007   001D68  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2008   001D6C  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2009   001D70  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2010   001D74  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2011   001D78  EC46  F019         	call	_turnLeft	;wreg free
  2012   001D7C                     
  2013                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2014   001D7C  0E05               	movlw	5
  2015   001D7E  6E42               	movwf	(??_move+1)^0,c
  2016   001D80  0E0F               	movlw	15
  2017   001D82  6E41               	movwf	??_move^0,c
  2018   001D84  0EF1               	movlw	241
  2019   001D86                     u2817:
  2020   001D86  2EE8               	decfsz	wreg,f,c
  2021   001D88  D7FE               	bra	u2817
  2022   001D8A  2E41               	decfsz	??_move^0,f,c
  2023   001D8C  D7FC               	bra	u2817
  2024   001D8E  2E42               	decfsz	(??_move+1)^0,f,c
  2025   001D90  D7FA               	bra	u2817
  2026   001D92  0000               	nop	
  2027   001D94                     
  2028                           ;dc_motor.c: 118:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2029   001D94  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2030   001D98  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2031   001D9C  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2032   001DA0  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2033   001DA4  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2034   001DA8  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2035   001DAC  EC95  F01C         	call	_fullSpeedAhead	;wreg free
  2036                           
  2037                           ;dc_motor.c: 119:     }
  2038   001DB0  EFD9  F010         	goto	l513
  2039   001DB4                     l3769:
  2040                           
  2041                           ; BSR set to: 0
  2042   001DB4  0E04               	movlw	4
  2043   001DB6  19B6               	xorwf	move@color& (0+255),w,b
  2044   001DB8  A4D8               	btfss	status,2,c
  2045   001DBA  EFE1  F00E         	goto	u2541
  2046   001DBE  EFE3  F00E         	goto	u2540
  2047   001DC2                     u2541:
  2048   001DC2  EF47  F00F         	goto	l3781
  2049   001DC6                     u2540:
  2050   001DC6                     
  2051                           ; BSR set to: 0
  2052                           ;dc_motor.c: 122:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2053   001DC6  C0B2  F01F         	movff	move@mL,reverseOneSquare@mL
  2054   001DCA  C0B3  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2055   001DCE  C0B4  F021         	movff	move@mR,reverseOneSquare@mR
  2056   001DD2  C0B5  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2057   001DD6  C0BC  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2058   001DDA  C0BD  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2059   001DDE  C0BE  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2060   001DE2  EC69  F017         	call	_reverseOneSquare	;wreg free
  2061   001DE6                     
  2062                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2063   001DE6  0E05               	movlw	5
  2064   001DE8  6E42               	movwf	(??_move+1)^0,c
  2065   001DEA  0E0F               	movlw	15
  2066   001DEC  6E41               	movwf	??_move^0,c
  2067   001DEE  0EF1               	movlw	241
  2068   001DF0                     u2827:
  2069   001DF0  2EE8               	decfsz	wreg,f,c
  2070   001DF2  D7FE               	bra	u2827
  2071   001DF4  2E41               	decfsz	??_move^0,f,c
  2072   001DF6  D7FC               	bra	u2827
  2073   001DF8  2E42               	decfsz	(??_move+1)^0,f,c
  2074   001DFA  D7FA               	bra	u2827
  2075   001DFC  0000               	nop	
  2076   001DFE                     
  2077                           ;dc_motor.c: 124:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2078   001DFE  C0B2  F01F         	movff	move@mL,turnRight@mL
  2079   001E02  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2080   001E06  C0B4  F021         	movff	move@mR,turnRight@mR
  2081   001E0A  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2082   001E0E  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2083   001E12  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2084   001E16  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2085   001E1A  EC5C  F018         	call	_turnRight	;wreg free
  2086                           
  2087                           ;dc_motor.c: 125:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2088   001E1E  0E05               	movlw	5
  2089   001E20  6E42               	movwf	(??_move+1)^0,c
  2090   001E22  0E0F               	movlw	15
  2091   001E24  6E41               	movwf	??_move^0,c
  2092   001E26  0EF1               	movlw	241
  2093   001E28                     u2837:
  2094   001E28  2EE8               	decfsz	wreg,f,c
  2095   001E2A  D7FE               	bra	u2837
  2096   001E2C  2E41               	decfsz	??_move^0,f,c
  2097   001E2E  D7FC               	bra	u2837
  2098   001E30  2E42               	decfsz	(??_move+1)^0,f,c
  2099   001E32  D7FA               	bra	u2837
  2100   001E34  0000               	nop	
  2101   001E36                     
  2102                           ;dc_motor.c: 126:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2103   001E36  C0B2  F01F         	movff	move@mL,turnRight@mL
  2104   001E3A  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2105   001E3E  C0B4  F021         	movff	move@mR,turnRight@mR
  2106   001E42  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2107   001E46  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2108   001E4A  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2109   001E4E  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2110   001E52  EC5C  F018         	call	_turnRight	;wreg free
  2111   001E56                     
  2112                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2113   001E56  0E05               	movlw	5
  2114   001E58  6E42               	movwf	(??_move+1)^0,c
  2115   001E5A  0E0F               	movlw	15
  2116   001E5C  6E41               	movwf	??_move^0,c
  2117   001E5E  0EF1               	movlw	241
  2118   001E60                     u2847:
  2119   001E60  2EE8               	decfsz	wreg,f,c
  2120   001E62  D7FE               	bra	u2847
  2121   001E64  2E41               	decfsz	??_move^0,f,c
  2122   001E66  D7FC               	bra	u2847
  2123   001E68  2E42               	decfsz	(??_move+1)^0,f,c
  2124   001E6A  D7FA               	bra	u2847
  2125   001E6C  0000               	nop	
  2126                           
  2127                           ;dc_motor.c: 128:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2128   001E6E  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2129   001E72  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2130   001E76  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2131   001E7A  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2132   001E7E  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2133   001E82  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2134   001E86  EC95  F01C         	call	_fullSpeedAhead	;wreg free
  2135                           
  2136                           ;dc_motor.c: 129:     }
  2137   001E8A  EFD9  F010         	goto	l513
  2138   001E8E                     l3781:
  2139                           
  2140                           ; BSR set to: 0
  2141   001E8E  0E05               	movlw	5
  2142   001E90  19B6               	xorwf	move@color& (0+255),w,b
  2143   001E92  A4D8               	btfss	status,2,c
  2144   001E94  EF4E  F00F         	goto	u2551
  2145   001E98  EF50  F00F         	goto	u2550
  2146   001E9C                     u2551:
  2147   001E9C  EFB4  F00F         	goto	l3793
  2148   001EA0                     u2550:
  2149   001EA0                     
  2150                           ; BSR set to: 0
  2151                           ;dc_motor.c: 132:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2152   001EA0  C0B2  F01F         	movff	move@mL,reverseOneSquare@mL
  2153   001EA4  C0B3  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2154   001EA8  C0B4  F021         	movff	move@mR,reverseOneSquare@mR
  2155   001EAC  C0B5  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2156   001EB0  C0BC  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2157   001EB4  C0BD  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2158   001EB8  C0BE  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2159   001EBC  EC69  F017         	call	_reverseOneSquare	;wreg free
  2160   001EC0                     
  2161                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2162   001EC0  0E05               	movlw	5
  2163   001EC2  6E42               	movwf	(??_move+1)^0,c
  2164   001EC4  0E0F               	movlw	15
  2165   001EC6  6E41               	movwf	??_move^0,c
  2166   001EC8  0EF1               	movlw	241
  2167   001ECA                     u2857:
  2168   001ECA  2EE8               	decfsz	wreg,f,c
  2169   001ECC  D7FE               	bra	u2857
  2170   001ECE  2E41               	decfsz	??_move^0,f,c
  2171   001ED0  D7FC               	bra	u2857
  2172   001ED2  2E42               	decfsz	(??_move+1)^0,f,c
  2173   001ED4  D7FA               	bra	u2857
  2174   001ED6  0000               	nop	
  2175   001ED8                     
  2176                           ;dc_motor.c: 134:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2177   001ED8  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2178   001EDC  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2179   001EE0  C0B4  F021         	movff	move@mR,turnLeft@mR
  2180   001EE4  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2181   001EE8  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2182   001EEC  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2183   001EF0  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2184   001EF4  EC46  F019         	call	_turnLeft	;wreg free
  2185                           
  2186                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2187   001EF8  0E05               	movlw	5
  2188   001EFA  6E42               	movwf	(??_move+1)^0,c
  2189   001EFC  0E0F               	movlw	15
  2190   001EFE  6E41               	movwf	??_move^0,c
  2191   001F00  0EF1               	movlw	241
  2192   001F02                     u2867:
  2193   001F02  2EE8               	decfsz	wreg,f,c
  2194   001F04  D7FE               	bra	u2867
  2195   001F06  2E41               	decfsz	??_move^0,f,c
  2196   001F08  D7FC               	bra	u2867
  2197   001F0A  2E42               	decfsz	(??_move+1)^0,f,c
  2198   001F0C  D7FA               	bra	u2867
  2199   001F0E  0000               	nop	
  2200   001F10                     
  2201                           ;dc_motor.c: 136:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2202   001F10  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2203   001F14  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2204   001F18  C0B4  F021         	movff	move@mR,turnLeft@mR
  2205   001F1C  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2206   001F20  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2207   001F24  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2208   001F28  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2209   001F2C  EC46  F019         	call	_turnLeft	;wreg free
  2210   001F30                     
  2211                           ;dc_motor.c: 137:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2212   001F30  0E05               	movlw	5
  2213   001F32  6E42               	movwf	(??_move+1)^0,c
  2214   001F34  0E0F               	movlw	15
  2215   001F36  6E41               	movwf	??_move^0,c
  2216   001F38  0EF1               	movlw	241
  2217   001F3A                     u2877:
  2218   001F3A  2EE8               	decfsz	wreg,f,c
  2219   001F3C  D7FE               	bra	u2877
  2220   001F3E  2E41               	decfsz	??_move^0,f,c
  2221   001F40  D7FC               	bra	u2877
  2222   001F42  2E42               	decfsz	(??_move+1)^0,f,c
  2223   001F44  D7FA               	bra	u2877
  2224   001F46  0000               	nop	
  2225                           
  2226                           ;dc_motor.c: 138:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2227   001F48  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2228   001F4C  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2229   001F50  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2230   001F54  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2231   001F58  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2232   001F5C  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2233   001F60  EC95  F01C         	call	_fullSpeedAhead	;wreg free
  2234                           
  2235                           ;dc_motor.c: 139:     }
  2236   001F64  EFD9  F010         	goto	l513
  2237   001F68                     l3793:
  2238                           
  2239                           ; BSR set to: 0
  2240   001F68  0E06               	movlw	6
  2241   001F6A  19B6               	xorwf	move@color& (0+255),w,b
  2242   001F6C  A4D8               	btfss	status,2,c
  2243   001F6E  EFBB  F00F         	goto	u2561
  2244   001F72  EFBD  F00F         	goto	u2560
  2245   001F76                     u2561:
  2246   001F76  EF21  F010         	goto	l3805
  2247   001F7A                     u2560:
  2248   001F7A                     
  2249                           ; BSR set to: 0
  2250                           ;dc_motor.c: 142:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2251   001F7A  C0B2  F01F         	movff	move@mL,turnRight@mL
  2252   001F7E  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2253   001F82  C0B4  F021         	movff	move@mR,turnRight@mR
  2254   001F86  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2255   001F8A  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2256   001F8E  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2257   001F92  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2258   001F96  EC5C  F018         	call	_turnRight	;wreg free
  2259   001F9A                     
  2260                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2261   001F9A  0E05               	movlw	5
  2262   001F9C  6E42               	movwf	(??_move+1)^0,c
  2263   001F9E  0E0F               	movlw	15
  2264   001FA0  6E41               	movwf	??_move^0,c
  2265   001FA2  0EF1               	movlw	241
  2266   001FA4                     u2887:
  2267   001FA4  2EE8               	decfsz	wreg,f,c
  2268   001FA6  D7FE               	bra	u2887
  2269   001FA8  2E41               	decfsz	??_move^0,f,c
  2270   001FAA  D7FC               	bra	u2887
  2271   001FAC  2E42               	decfsz	(??_move+1)^0,f,c
  2272   001FAE  D7FA               	bra	u2887
  2273   001FB0  0000               	nop	
  2274   001FB2                     
  2275                           ;dc_motor.c: 144:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2276   001FB2  C0B2  F01F         	movff	move@mL,turnRight@mL
  2277   001FB6  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2278   001FBA  C0B4  F021         	movff	move@mR,turnRight@mR
  2279   001FBE  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2280   001FC2  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2281   001FC6  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2282   001FCA  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2283   001FCE  EC5C  F018         	call	_turnRight	;wreg free
  2284                           
  2285                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2286   001FD2  0E05               	movlw	5
  2287   001FD4  6E42               	movwf	(??_move+1)^0,c
  2288   001FD6  0E0F               	movlw	15
  2289   001FD8  6E41               	movwf	??_move^0,c
  2290   001FDA  0EF1               	movlw	241
  2291   001FDC                     u2897:
  2292   001FDC  2EE8               	decfsz	wreg,f,c
  2293   001FDE  D7FE               	bra	u2897
  2294   001FE0  2E41               	decfsz	??_move^0,f,c
  2295   001FE2  D7FC               	bra	u2897
  2296   001FE4  2E42               	decfsz	(??_move+1)^0,f,c
  2297   001FE6  D7FA               	bra	u2897
  2298   001FE8  0000               	nop	
  2299   001FEA                     
  2300                           ;dc_motor.c: 146:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2301   001FEA  C0B2  F01F         	movff	move@mL,turnRight@mL
  2302   001FEE  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2303   001FF2  C0B4  F021         	movff	move@mR,turnRight@mR
  2304   001FF6  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2305   001FFA  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2306   001FFE  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2307   002002  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2308   002006  EC5C  F018         	call	_turnRight	;wreg free
  2309   00200A                     
  2310                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2311   00200A  0E05               	movlw	5
  2312   00200C  6E42               	movwf	(??_move+1)^0,c
  2313   00200E  0E0F               	movlw	15
  2314   002010  6E41               	movwf	??_move^0,c
  2315   002012  0EF1               	movlw	241
  2316   002014                     u2907:
  2317   002014  2EE8               	decfsz	wreg,f,c
  2318   002016  D7FE               	bra	u2907
  2319   002018  2E41               	decfsz	??_move^0,f,c
  2320   00201A  D7FC               	bra	u2907
  2321   00201C  2E42               	decfsz	(??_move+1)^0,f,c
  2322   00201E  D7FA               	bra	u2907
  2323   002020  0000               	nop	
  2324                           
  2325                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2326   002022  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2327   002026  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2328   00202A  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2329   00202E  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2330   002032  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2331   002036  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2332   00203A  EC95  F01C         	call	_fullSpeedAhead	;wreg free
  2333                           
  2334                           ;dc_motor.c: 149:     }
  2335   00203E  EFD9  F010         	goto	l513
  2336   002042                     l3805:
  2337                           
  2338                           ; BSR set to: 0
  2339   002042  0E07               	movlw	7
  2340   002044  19B6               	xorwf	move@color& (0+255),w,b
  2341   002046  A4D8               	btfss	status,2,c
  2342   002048  EF28  F010         	goto	u2571
  2343   00204C  EF2A  F010         	goto	u2570
  2344   002050                     u2571:
  2345   002050  EF8E  F010         	goto	l3817
  2346   002054                     u2570:
  2347   002054                     
  2348                           ; BSR set to: 0
  2349                           ;dc_motor.c: 152:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2350   002054  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2351   002058  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2352   00205C  C0B4  F021         	movff	move@mR,turnLeft@mR
  2353   002060  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2354   002064  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2355   002068  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2356   00206C  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2357   002070  EC46  F019         	call	_turnLeft	;wreg free
  2358   002074                     
  2359                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2360   002074  0E05               	movlw	5
  2361   002076  6E42               	movwf	(??_move+1)^0,c
  2362   002078  0E0F               	movlw	15
  2363   00207A  6E41               	movwf	??_move^0,c
  2364   00207C  0EF1               	movlw	241
  2365   00207E                     u2917:
  2366   00207E  2EE8               	decfsz	wreg,f,c
  2367   002080  D7FE               	bra	u2917
  2368   002082  2E41               	decfsz	??_move^0,f,c
  2369   002084  D7FC               	bra	u2917
  2370   002086  2E42               	decfsz	(??_move+1)^0,f,c
  2371   002088  D7FA               	bra	u2917
  2372   00208A  0000               	nop	
  2373   00208C                     
  2374                           ;dc_motor.c: 154:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2375   00208C  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2376   002090  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2377   002094  C0B4  F021         	movff	move@mR,turnLeft@mR
  2378   002098  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2379   00209C  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2380   0020A0  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2381   0020A4  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2382   0020A8  EC46  F019         	call	_turnLeft	;wreg free
  2383                           
  2384                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2385   0020AC  0E05               	movlw	5
  2386   0020AE  6E42               	movwf	(??_move+1)^0,c
  2387   0020B0  0E0F               	movlw	15
  2388   0020B2  6E41               	movwf	??_move^0,c
  2389   0020B4  0EF1               	movlw	241
  2390   0020B6                     u2927:
  2391   0020B6  2EE8               	decfsz	wreg,f,c
  2392   0020B8  D7FE               	bra	u2927
  2393   0020BA  2E41               	decfsz	??_move^0,f,c
  2394   0020BC  D7FC               	bra	u2927
  2395   0020BE  2E42               	decfsz	(??_move+1)^0,f,c
  2396   0020C0  D7FA               	bra	u2927
  2397   0020C2  0000               	nop	
  2398   0020C4                     
  2399                           ;dc_motor.c: 156:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2400   0020C4  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2401   0020C8  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2402   0020CC  C0B4  F021         	movff	move@mR,turnLeft@mR
  2403   0020D0  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2404   0020D4  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2405   0020D8  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2406   0020DC  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2407   0020E0  EC46  F019         	call	_turnLeft	;wreg free
  2408   0020E4                     
  2409                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2410   0020E4  0E05               	movlw	5
  2411   0020E6  6E42               	movwf	(??_move+1)^0,c
  2412   0020E8  0E0F               	movlw	15
  2413   0020EA  6E41               	movwf	??_move^0,c
  2414   0020EC  0EF1               	movlw	241
  2415   0020EE                     u2937:
  2416   0020EE  2EE8               	decfsz	wreg,f,c
  2417   0020F0  D7FE               	bra	u2937
  2418   0020F2  2E41               	decfsz	??_move^0,f,c
  2419   0020F4  D7FC               	bra	u2937
  2420   0020F6  2E42               	decfsz	(??_move+1)^0,f,c
  2421   0020F8  D7FA               	bra	u2937
  2422   0020FA  0000               	nop	
  2423                           
  2424                           ;dc_motor.c: 158:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2425   0020FC  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2426   002100  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2427   002104  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2428   002108  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2429   00210C  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2430   002110  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2431   002114  EC95  F01C         	call	_fullSpeedAhead	;wreg free
  2432                           
  2433                           ;dc_motor.c: 159:     }
  2434   002118  EFD9  F010         	goto	l513
  2435   00211C                     l3817:
  2436                           
  2437                           ; BSR set to: 0
  2438   00211C  0E08               	movlw	8
  2439   00211E  19B6               	xorwf	move@color& (0+255),w,b
  2440   002120  A4D8               	btfss	status,2,c
  2441   002122  EF95  F010         	goto	u2581
  2442   002126  EF97  F010         	goto	u2580
  2443   00212A                     u2581:
  2444   00212A  EFB9  F010         	goto	l3821
  2445   00212E                     u2580:
  2446   00212E                     
  2447                           ; BSR set to: 0
  2448                           ;dc_motor.c: 162:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2449   00212E  C0B2  F02D         	movff	move@mL,returnHome@mL
  2450   002132  C0B3  F02E         	movff	move@mL+1,returnHome@mL+1
  2451   002136  C0B4  F02F         	movff	move@mR,returnHome@mR
  2452   00213A  C0B5  F030         	movff	move@mR+1,returnHome@mR+1
  2453   00213E  C0B7  F031         	movff	move@moveSequence,returnHome@moveSequence
  2454   002142  C0B8  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2455   002146  C0B9  F033         	movff	move@straightTime,returnHome@straightTime
  2456   00214A  C0BA  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2457   00214E  C0BB  F035         	movff	move@curMove,returnHome@curMove
  2458   002152  C0BC  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2459   002156  C0BD  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2460   00215A  C0BE  F038         	movff	move@straightRamp,returnHome@straightRamp
  2461   00215E  C0BF  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2462   002162  C0C0  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2463   002166  C0C1  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2464   00216A  EC01  F007         	call	_returnHome	;wreg free
  2465                           
  2466                           ;dc_motor.c: 163:     }
  2467   00216E  EFD9  F010         	goto	l513
  2468   002172                     l3821:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;dc_motor.c: 166:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2472   002172  C0B2  F02D         	movff	move@mL,returnHome@mL
  2473   002176  C0B3  F02E         	movff	move@mL+1,returnHome@mL+1
  2474   00217A  C0B4  F02F         	movff	move@mR,returnHome@mR
  2475   00217E  C0B5  F030         	movff	move@mR+1,returnHome@mR+1
  2476   002182  C0B7  F031         	movff	move@moveSequence,returnHome@moveSequence
  2477   002186  C0B8  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2478   00218A  C0B9  F033         	movff	move@straightTime,returnHome@straightTime
  2479   00218E  C0BA  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2480   002192  C0BB  F035         	movff	move@curMove,returnHome@curMove
  2481   002196  C0BC  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2482   00219A  C0BD  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2483   00219E  C0BE  F038         	movff	move@straightRamp,returnHome@straightRamp
  2484   0021A2  C0BF  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2485   0021A6  C0C0  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2486   0021AA  C0C1  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2487   0021AE  EC01  F007         	call	_returnHome	;wreg free
  2488   0021B2                     l513:
  2489   0021B2  0012               	return		;funcret
  2490   0021B4                     __end_of_move:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _returnHome *****************
  2494 ;; Defined at:
  2495 ;;		line 171 in file "dc_motor.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2498 ;;		 -> main@motorL(10), 
  2499 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2500 ;;		 -> main@motorR(10), 
  2501 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  2502 ;;		 -> main@moveSequence(40), 
  2503 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  2504 ;;		 -> main@straightTime(82), 
  2505 ;;  curMove         1   52[COMRAM] unsigned char 
  2506 ;;  straightSpee    1   53[COMRAM] unsigned char 
  2507 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  2508 ;;  straightRamp    1   55[COMRAM] unsigned char 
  2509 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  2510 ;;  turnDuration    1   57[COMRAM] unsigned char 
  2511 ;;  turnRamp        1   58[COMRAM] unsigned char 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  i               1   63[COMRAM] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2523 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;Total ram usage:       20 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 8
  2530 ;; This function calls:
  2531 ;;		_fullSpeedAhead
  2532 ;;		_get16bitTMR0val
  2533 ;;		_resetTimer
  2534 ;;		_reverseOneSquare
  2535 ;;		_stop
  2536 ;;		_turnLeft
  2537 ;;		_turnRight
  2538 ;; This function is called by:
  2539 ;;		_move
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text2
  2544   000E02                     __ptext2:
  2545                           	callstack 0
  2546   000E02                     _returnHome:
  2547                           	callstack 21
  2548   000E02                     
  2549                           ;dc_motor.c: 171: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reverseDu
      +                          ration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned
      +                           char turnRamp);dc_motor.c: 172: {;dc_motor.c: 173:     turnLeft(mL, mR, turnSpeed, turn
      +                          Duration, turnRamp);
  2550   000E02  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2551   000E06  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2552   000E0A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2553   000E0E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2554   000E12  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2555   000E16  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2556   000E1A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2557   000E1E  EC46  F019         	call	_turnLeft	;wreg free
  2558   000E22                     
  2559                           ;dc_motor.c: 174:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2560   000E22  0E05               	movlw	5
  2561   000E24  6E3D               	movwf	(??_returnHome+1)^0,c
  2562   000E26  0E0F               	movlw	15
  2563   000E28  6E3C               	movwf	??_returnHome^0,c
  2564   000E2A  0EF1               	movlw	241
  2565   000E2C                     u2947:
  2566   000E2C  2EE8               	decfsz	wreg,f,c
  2567   000E2E  D7FE               	bra	u2947
  2568   000E30  2E3C               	decfsz	??_returnHome^0,f,c
  2569   000E32  D7FC               	bra	u2947
  2570   000E34  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2571   000E36  D7FA               	bra	u2947
  2572   000E38  0000               	nop	
  2573   000E3A                     
  2574                           ;dc_motor.c: 175:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2575   000E3A  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2576   000E3E  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2577   000E42  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2578   000E46  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2579   000E4A  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2580   000E4E  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2581   000E52  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2582   000E56  EC46  F019         	call	_turnLeft	;wreg free
  2583                           
  2584                           ;dc_motor.c: 176:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2585   000E5A  0E05               	movlw	5
  2586   000E5C  6E3D               	movwf	(??_returnHome+1)^0,c
  2587   000E5E  0E0F               	movlw	15
  2588   000E60  6E3C               	movwf	??_returnHome^0,c
  2589   000E62  0EF1               	movlw	241
  2590   000E64                     u2957:
  2591   000E64  2EE8               	decfsz	wreg,f,c
  2592   000E66  D7FE               	bra	u2957
  2593   000E68  2E3C               	decfsz	??_returnHome^0,f,c
  2594   000E6A  D7FC               	bra	u2957
  2595   000E6C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2596   000E6E  D7FA               	bra	u2957
  2597   000E70  0000               	nop	
  2598   000E72                     
  2599                           ;dc_motor.c: 177:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2600   000E72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2601   000E76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2602   000E7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2603   000E7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2604   000E82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2605   000E86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2606   000E8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2607   000E8E  EC46  F019         	call	_turnLeft	;wreg free
  2608   000E92                     
  2609                           ;dc_motor.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2610   000E92  0E05               	movlw	5
  2611   000E94  6E3D               	movwf	(??_returnHome+1)^0,c
  2612   000E96  0E0F               	movlw	15
  2613   000E98  6E3C               	movwf	??_returnHome^0,c
  2614   000E9A  0EF1               	movlw	241
  2615   000E9C                     u2967:
  2616   000E9C  2EE8               	decfsz	wreg,f,c
  2617   000E9E  D7FE               	bra	u2967
  2618   000EA0  2E3C               	decfsz	??_returnHome^0,f,c
  2619   000EA2  D7FC               	bra	u2967
  2620   000EA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2621   000EA6  D7FA               	bra	u2967
  2622   000EA8  0000               	nop	
  2623                           
  2624                           ;dc_motor.c: 179:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2625   000EAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2626   000EAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2627   000EB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2628   000EB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2629   000EBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2630   000EBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2631   000EC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2632   000EC6  EC46  F019         	call	_turnLeft	;wreg free
  2633   000ECA                     
  2634                           ;dc_motor.c: 180:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2635   000ECA  0E05               	movlw	5
  2636   000ECC  6E3D               	movwf	(??_returnHome+1)^0,c
  2637   000ECE  0E0F               	movlw	15
  2638   000ED0  6E3C               	movwf	??_returnHome^0,c
  2639   000ED2  0EF1               	movlw	241
  2640   000ED4                     u2977:
  2641   000ED4  2EE8               	decfsz	wreg,f,c
  2642   000ED6  D7FE               	bra	u2977
  2643   000ED8  2E3C               	decfsz	??_returnHome^0,f,c
  2644   000EDA  D7FC               	bra	u2977
  2645   000EDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2646   000EDE  D7FA               	bra	u2977
  2647   000EE0  0000               	nop	
  2648   000EE2                     
  2649                           ;dc_motor.c: 181:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2650   000EE2  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  2651   000EE6  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  2652   000EEA  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  2653   000EEE  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  2654   000EF2  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  2655   000EF6  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  2656   000EFA  EC95  F01C         	call	_fullSpeedAhead	;wreg free
  2657   000EFE                     
  2658                           ;dc_motor.c: 182:     resetTimer();
  2659   000EFE  EC67  F020         	call	_resetTimer	;wreg free
  2660   000F02                     l2973:
  2661   000F02  5035               	movf	returnHome@curMove^0,w,c
  2662   000F04  0D02               	mullw	2
  2663   000F06  CFF3 F03C          	movff	prodl,??_returnHome
  2664   000F0A  CFF4 F03D          	movff	prodh,??_returnHome+1
  2665   000F0E  503C               	movf	??_returnHome^0,w,c
  2666   000F10  2433               	addwf	returnHome@straightTime^0,w,c
  2667   000F12  6ED9               	movwf	fsr2l,c
  2668   000F14  503D               	movf	(??_returnHome+1)^0,w,c
  2669   000F16  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  2670   000F18  6EDA               	movwf	fsr2h,c
  2671   000F1A  EC65  F01F         	call	_get16bitTMR0val	;wreg free
  2672   000F1E  50DE               	movf	postinc2,w,c
  2673   000F20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  2674   000F22  50DE               	movf	postinc2,w,c
  2675   000F24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  2676   000F26  A0D8               	btfss	status,0,c
  2677   000F28  EF98  F007         	goto	u1661
  2678   000F2C  EF9A  F007         	goto	u1660
  2679   000F30                     u1661:
  2680   000F30  EF81  F007         	goto	l2973
  2681   000F34                     u1660:
  2682   000F34                     
  2683                           ;dc_motor.c: 184:     stop(mL, mR, straightRamp);
  2684   000F34  C02D  F01F         	movff	returnHome@mL,stop@mL
  2685   000F38  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  2686   000F3C  C02F  F021         	movff	returnHome@mR,stop@mR
  2687   000F40  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  2688   000F44  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  2689   000F48  EC11  F01C         	call	_stop	;wreg free
  2690   000F4C                     
  2691                           ;dc_motor.c: 186:     char i=curMove;
  2692   000F4C  C035  F040         	movff	returnHome@curMove,returnHome@i
  2693                           
  2694                           ;dc_motor.c: 187:     while (i>0) {
  2695   000F50  EF56  F00A         	goto	l3065
  2696   000F54                     l2979:
  2697                           
  2698                           ;dc_motor.c: 188:         i--;
  2699   000F54  0640               	decf	returnHome@i^0,f,c
  2700   000F56                     
  2701                           ;dc_motor.c: 190:         if (moveSequence[i] == 1) {
  2702   000F56  5040               	movf	returnHome@i^0,w,c
  2703   000F58  2431               	addwf	returnHome@moveSequence^0,w,c
  2704   000F5A  6ED9               	movwf	fsr2l,c
  2705   000F5C  0E00               	movlw	0
  2706   000F5E  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2707   000F60  6EDA               	movwf	fsr2h,c
  2708   000F62  04DE               	decf	postinc2,w,c
  2709   000F64  A4D8               	btfss	status,2,c
  2710   000F66  EFB7  F007         	goto	u1671
  2711   000F6A  EFB9  F007         	goto	u1670
  2712   000F6E                     u1671:
  2713   000F6E  EFF3  F007         	goto	l2989
  2714   000F72                     u1670:
  2715   000F72                     
  2716                           ;dc_motor.c: 191:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2717   000F72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2718   000F76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2719   000F7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2720   000F7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2721   000F82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2722   000F86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2723   000F8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2724   000F8E  EC46  F019         	call	_turnLeft	;wreg free
  2725   000F92                     
  2726                           ;dc_motor.c: 192:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2727   000F92  0E05               	movlw	5
  2728   000F94  6E3D               	movwf	(??_returnHome+1)^0,c
  2729   000F96  0E0F               	movlw	15
  2730   000F98  6E3C               	movwf	??_returnHome^0,c
  2731   000F9A  0EF1               	movlw	241
  2732   000F9C                     u2987:
  2733   000F9C  2EE8               	decfsz	wreg,f,c
  2734   000F9E  D7FE               	bra	u2987
  2735   000FA0  2E3C               	decfsz	??_returnHome^0,f,c
  2736   000FA2  D7FC               	bra	u2987
  2737   000FA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2738   000FA6  D7FA               	bra	u2987
  2739   000FA8  0000               	nop	
  2740   000FAA                     
  2741                           ;dc_motor.c: 193:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2742   000FAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2743   000FAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2744   000FB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2745   000FB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2746   000FBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2747   000FBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2748   000FC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2749   000FC6  EC46  F019         	call	_turnLeft	;wreg free
  2750                           
  2751                           ;dc_motor.c: 194:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2752   000FCA  0E05               	movlw	5
  2753   000FCC  6E3D               	movwf	(??_returnHome+1)^0,c
  2754   000FCE  0E0F               	movlw	15
  2755   000FD0  6E3C               	movwf	??_returnHome^0,c
  2756   000FD2  0EF1               	movlw	241
  2757   000FD4                     u2997:
  2758   000FD4  2EE8               	decfsz	wreg,f,c
  2759   000FD6  D7FE               	bra	u2997
  2760   000FD8  2E3C               	decfsz	??_returnHome^0,f,c
  2761   000FDA  D7FC               	bra	u2997
  2762   000FDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2763   000FDE  D7FA               	bra	u2997
  2764   000FE0  0000               	nop	
  2765                           
  2766                           ;dc_motor.c: 195:         }
  2767   000FE2  EF21  F00A         	goto	l522
  2768   000FE6                     l2989:
  2769   000FE6  5040               	movf	returnHome@i^0,w,c
  2770   000FE8  2431               	addwf	returnHome@moveSequence^0,w,c
  2771   000FEA  6ED9               	movwf	fsr2l,c
  2772   000FEC  0E00               	movlw	0
  2773   000FEE  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2774   000FF0  6EDA               	movwf	fsr2h,c
  2775   000FF2  0E02               	movlw	2
  2776   000FF4  18DE               	xorwf	postinc2,w,c
  2777   000FF6  A4D8               	btfss	status,2,c
  2778   000FF8  EF00  F008         	goto	u1681
  2779   000FFC  EF02  F008         	goto	u1680
  2780   001000                     u1681:
  2781   001000  EF3C  F008         	goto	l2997
  2782   001004                     u1680:
  2783   001004                     
  2784                           ;dc_motor.c: 198:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2785   001004  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2786   001008  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2787   00100C  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2788   001010  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2789   001014  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2790   001018  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2791   00101C  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2792   001020  EC5C  F018         	call	_turnRight	;wreg free
  2793   001024                     
  2794                           ;dc_motor.c: 199:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2795   001024  0E05               	movlw	5
  2796   001026  6E3D               	movwf	(??_returnHome+1)^0,c
  2797   001028  0E0F               	movlw	15
  2798   00102A  6E3C               	movwf	??_returnHome^0,c
  2799   00102C  0EF1               	movlw	241
  2800   00102E                     u3007:
  2801   00102E  2EE8               	decfsz	wreg,f,c
  2802   001030  D7FE               	bra	u3007
  2803   001032  2E3C               	decfsz	??_returnHome^0,f,c
  2804   001034  D7FC               	bra	u3007
  2805   001036  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2806   001038  D7FA               	bra	u3007
  2807   00103A  0000               	nop	
  2808   00103C                     
  2809                           ;dc_motor.c: 200:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2810   00103C  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2811   001040  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2812   001044  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2813   001048  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2814   00104C  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2815   001050  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2816   001054  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2817   001058  EC5C  F018         	call	_turnRight	;wreg free
  2818                           
  2819                           ;dc_motor.c: 201:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2820   00105C  0E05               	movlw	5
  2821   00105E  6E3D               	movwf	(??_returnHome+1)^0,c
  2822   001060  0E0F               	movlw	15
  2823   001062  6E3C               	movwf	??_returnHome^0,c
  2824   001064  0EF1               	movlw	241
  2825   001066                     u3017:
  2826   001066  2EE8               	decfsz	wreg,f,c
  2827   001068  D7FE               	bra	u3017
  2828   00106A  2E3C               	decfsz	??_returnHome^0,f,c
  2829   00106C  D7FC               	bra	u3017
  2830   00106E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2831   001070  D7FA               	bra	u3017
  2832   001072  0000               	nop	
  2833                           
  2834                           ;dc_motor.c: 202:         }
  2835   001074  EF21  F00A         	goto	l522
  2836   001078                     l2997:
  2837   001078  5040               	movf	returnHome@i^0,w,c
  2838   00107A  2431               	addwf	returnHome@moveSequence^0,w,c
  2839   00107C  6ED9               	movwf	fsr2l,c
  2840   00107E  0E00               	movlw	0
  2841   001080  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2842   001082  6EDA               	movwf	fsr2h,c
  2843   001084  0E03               	movlw	3
  2844   001086  18DE               	xorwf	postinc2,w,c
  2845   001088  A4D8               	btfss	status,2,c
  2846   00108A  EF49  F008         	goto	u1691
  2847   00108E  EF4B  F008         	goto	u1690
  2848   001092                     u1691:
  2849   001092  EFBD  F008         	goto	l3011
  2850   001096                     u1690:
  2851   001096                     
  2852                           ;dc_motor.c: 205:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2853   001096  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2854   00109A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2855   00109E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2856   0010A2  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2857   0010A6  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2858   0010AA  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2859   0010AE  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2860   0010B2  EC46  F019         	call	_turnLeft	;wreg free
  2861   0010B6                     
  2862                           ;dc_motor.c: 206:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2863   0010B6  0E05               	movlw	5
  2864   0010B8  6E3D               	movwf	(??_returnHome+1)^0,c
  2865   0010BA  0E0F               	movlw	15
  2866   0010BC  6E3C               	movwf	??_returnHome^0,c
  2867   0010BE  0EF1               	movlw	241
  2868   0010C0                     u3027:
  2869   0010C0  2EE8               	decfsz	wreg,f,c
  2870   0010C2  D7FE               	bra	u3027
  2871   0010C4  2E3C               	decfsz	??_returnHome^0,f,c
  2872   0010C6  D7FC               	bra	u3027
  2873   0010C8  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2874   0010CA  D7FA               	bra	u3027
  2875   0010CC  0000               	nop	
  2876   0010CE                     
  2877                           ;dc_motor.c: 207:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2878   0010CE  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2879   0010D2  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2880   0010D6  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2881   0010DA  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2882   0010DE  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2883   0010E2  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2884   0010E6  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2885   0010EA  EC46  F019         	call	_turnLeft	;wreg free
  2886                           
  2887                           ;dc_motor.c: 208:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2888   0010EE  0E05               	movlw	5
  2889   0010F0  6E3D               	movwf	(??_returnHome+1)^0,c
  2890   0010F2  0E0F               	movlw	15
  2891   0010F4  6E3C               	movwf	??_returnHome^0,c
  2892   0010F6  0EF1               	movlw	241
  2893   0010F8                     u3037:
  2894   0010F8  2EE8               	decfsz	wreg,f,c
  2895   0010FA  D7FE               	bra	u3037
  2896   0010FC  2E3C               	decfsz	??_returnHome^0,f,c
  2897   0010FE  D7FC               	bra	u3037
  2898   001100  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2899   001102  D7FA               	bra	u3037
  2900   001104  0000               	nop	
  2901   001106                     
  2902                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2903   001106  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2904   00110A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2905   00110E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2906   001112  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2907   001116  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2908   00111A  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2909   00111E  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2910   001122  EC46  F019         	call	_turnLeft	;wreg free
  2911   001126                     
  2912                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2913   001126  0E05               	movlw	5
  2914   001128  6E3D               	movwf	(??_returnHome+1)^0,c
  2915   00112A  0E0F               	movlw	15
  2916   00112C  6E3C               	movwf	??_returnHome^0,c
  2917   00112E  0EF1               	movlw	241
  2918   001130                     u3047:
  2919   001130  2EE8               	decfsz	wreg,f,c
  2920   001132  D7FE               	bra	u3047
  2921   001134  2E3C               	decfsz	??_returnHome^0,f,c
  2922   001136  D7FC               	bra	u3047
  2923   001138  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2924   00113A  D7FA               	bra	u3047
  2925   00113C  0000               	nop	
  2926                           
  2927                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2928   00113E  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2929   001142  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2930   001146  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2931   00114A  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2932   00114E  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2933   001152  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2934   001156  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2935   00115A  EC46  F019         	call	_turnLeft	;wreg free
  2936   00115E                     l3009:
  2937                           
  2938                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2939   00115E  0E05               	movlw	5
  2940   001160  6E3D               	movwf	(??_returnHome+1)^0,c
  2941   001162  0E0F               	movlw	15
  2942   001164  6E3C               	movwf	??_returnHome^0,c
  2943   001166  0EF1               	movlw	241
  2944   001168                     u3057:
  2945   001168  2EE8               	decfsz	wreg,f,c
  2946   00116A  D7FE               	bra	u3057
  2947   00116C  2E3C               	decfsz	??_returnHome^0,f,c
  2948   00116E  D7FC               	bra	u3057
  2949   001170  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2950   001172  D7FA               	bra	u3057
  2951   001174  0000               	nop	
  2952                           
  2953                           ;dc_motor.c: 213:         }
  2954   001176  EF21  F00A         	goto	l522
  2955   00117A                     l3011:
  2956   00117A  5040               	movf	returnHome@i^0,w,c
  2957   00117C  2431               	addwf	returnHome@moveSequence^0,w,c
  2958   00117E  6ED9               	movwf	fsr2l,c
  2959   001180  0E00               	movlw	0
  2960   001182  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2961   001184  6EDA               	movwf	fsr2h,c
  2962   001186  0E04               	movlw	4
  2963   001188  18DE               	xorwf	postinc2,w,c
  2964   00118A  A4D8               	btfss	status,2,c
  2965   00118C  EFCA  F008         	goto	u1701
  2966   001190  EFCC  F008         	goto	u1700
  2967   001194                     u1701:
  2968   001194  EF16  F009         	goto	l3023
  2969   001198                     u1700:
  2970   001198                     
  2971                           ;dc_motor.c: 216:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2972   001198  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2973   00119C  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2974   0011A0  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2975   0011A4  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2976   0011A8  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2977   0011AC  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2978   0011B0  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2979   0011B4  EC46  F019         	call	_turnLeft	;wreg free
  2980   0011B8                     
  2981                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2982   0011B8  0E05               	movlw	5
  2983   0011BA  6E3D               	movwf	(??_returnHome+1)^0,c
  2984   0011BC  0E0F               	movlw	15
  2985   0011BE  6E3C               	movwf	??_returnHome^0,c
  2986   0011C0  0EF1               	movlw	241
  2987   0011C2                     u3067:
  2988   0011C2  2EE8               	decfsz	wreg,f,c
  2989   0011C4  D7FE               	bra	u3067
  2990   0011C6  2E3C               	decfsz	??_returnHome^0,f,c
  2991   0011C8  D7FC               	bra	u3067
  2992   0011CA  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2993   0011CC  D7FA               	bra	u3067
  2994   0011CE  0000               	nop	
  2995   0011D0                     
  2996                           ;dc_motor.c: 218:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2997   0011D0  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2998   0011D4  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2999   0011D8  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3000   0011DC  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3001   0011E0  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3002   0011E4  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3003   0011E8  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3004   0011EC  EC46  F019         	call	_turnLeft	;wreg free
  3005                           
  3006                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3007   0011F0  0E05               	movlw	5
  3008   0011F2  6E3D               	movwf	(??_returnHome+1)^0,c
  3009   0011F4  0E0F               	movlw	15
  3010   0011F6  6E3C               	movwf	??_returnHome^0,c
  3011   0011F8  0EF1               	movlw	241
  3012   0011FA                     u3077:
  3013   0011FA  2EE8               	decfsz	wreg,f,c
  3014   0011FC  D7FE               	bra	u3077
  3015   0011FE  2E3C               	decfsz	??_returnHome^0,f,c
  3016   001200  D7FC               	bra	u3077
  3017   001202  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3018   001204  D7FA               	bra	u3077
  3019   001206  0000               	nop	
  3020   001208                     
  3021                           ;dc_motor.c: 220:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3022   001208  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  3023   00120C  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  3024   001210  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  3025   001214  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  3026   001218  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  3027   00121C  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  3028   001220  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  3029   001224  EC69  F017         	call	_reverseOneSquare	;wreg free
  3030   001228  EFAF  F008         	goto	l3009
  3031   00122C                     l3023:
  3032   00122C  5040               	movf	returnHome@i^0,w,c
  3033   00122E  2431               	addwf	returnHome@moveSequence^0,w,c
  3034   001230  6ED9               	movwf	fsr2l,c
  3035   001232  0E00               	movlw	0
  3036   001234  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3037   001236  6EDA               	movwf	fsr2h,c
  3038   001238  0E05               	movlw	5
  3039   00123A  18DE               	xorwf	postinc2,w,c
  3040   00123C  A4D8               	btfss	status,2,c
  3041   00123E  EF23  F009         	goto	u1711
  3042   001242  EF25  F009         	goto	u1710
  3043   001246                     u1711:
  3044   001246  EF6F  F009         	goto	l3035
  3045   00124A                     u1710:
  3046   00124A                     
  3047                           ;dc_motor.c: 225:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3048   00124A  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3049   00124E  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3050   001252  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3051   001256  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3052   00125A  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3053   00125E  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3054   001262  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3055   001266  EC5C  F018         	call	_turnRight	;wreg free
  3056   00126A                     
  3057                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3058   00126A  0E05               	movlw	5
  3059   00126C  6E3D               	movwf	(??_returnHome+1)^0,c
  3060   00126E  0E0F               	movlw	15
  3061   001270  6E3C               	movwf	??_returnHome^0,c
  3062   001272  0EF1               	movlw	241
  3063   001274                     u3087:
  3064   001274  2EE8               	decfsz	wreg,f,c
  3065   001276  D7FE               	bra	u3087
  3066   001278  2E3C               	decfsz	??_returnHome^0,f,c
  3067   00127A  D7FC               	bra	u3087
  3068   00127C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3069   00127E  D7FA               	bra	u3087
  3070   001280  0000               	nop	
  3071   001282                     
  3072                           ;dc_motor.c: 227:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3073   001282  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3074   001286  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3075   00128A  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3076   00128E  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3077   001292  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3078   001296  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3079   00129A  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3080   00129E  EC5C  F018         	call	_turnRight	;wreg free
  3081                           
  3082                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3083   0012A2  0E05               	movlw	5
  3084   0012A4  6E3D               	movwf	(??_returnHome+1)^0,c
  3085   0012A6  0E0F               	movlw	15
  3086   0012A8  6E3C               	movwf	??_returnHome^0,c
  3087   0012AA  0EF1               	movlw	241
  3088   0012AC                     u3097:
  3089   0012AC  2EE8               	decfsz	wreg,f,c
  3090   0012AE  D7FE               	bra	u3097
  3091   0012B0  2E3C               	decfsz	??_returnHome^0,f,c
  3092   0012B2  D7FC               	bra	u3097
  3093   0012B4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3094   0012B6  D7FA               	bra	u3097
  3095   0012B8  0000               	nop	
  3096   0012BA                     
  3097                           ;dc_motor.c: 229:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3098   0012BA  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  3099   0012BE  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  3100   0012C2  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  3101   0012C6  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  3102   0012CA  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  3103   0012CE  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  3104   0012D2  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  3105   0012D6  EC69  F017         	call	_reverseOneSquare	;wreg free
  3106   0012DA  EFAF  F008         	goto	l3009
  3107   0012DE                     l3035:
  3108   0012DE  5040               	movf	returnHome@i^0,w,c
  3109   0012E0  2431               	addwf	returnHome@moveSequence^0,w,c
  3110   0012E2  6ED9               	movwf	fsr2l,c
  3111   0012E4  0E00               	movlw	0
  3112   0012E6  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3113   0012E8  6EDA               	movwf	fsr2h,c
  3114   0012EA  0E06               	movlw	6
  3115   0012EC  18DE               	xorwf	postinc2,w,c
  3116   0012EE  A4D8               	btfss	status,2,c
  3117   0012F0  EF7C  F009         	goto	u1721
  3118   0012F4  EF7E  F009         	goto	u1720
  3119   0012F8                     u1721:
  3120   0012F8  EFC8  F009         	goto	l3047
  3121   0012FC                     u1720:
  3122   0012FC                     
  3123                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3124   0012FC  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3125   001300  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3126   001304  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3127   001308  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3128   00130C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3129   001310  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3130   001314  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3131   001318  EC46  F019         	call	_turnLeft	;wreg free
  3132   00131C                     
  3133                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3134   00131C  0E05               	movlw	5
  3135   00131E  6E3D               	movwf	(??_returnHome+1)^0,c
  3136   001320  0E0F               	movlw	15
  3137   001322  6E3C               	movwf	??_returnHome^0,c
  3138   001324  0EF1               	movlw	241
  3139   001326                     u3107:
  3140   001326  2EE8               	decfsz	wreg,f,c
  3141   001328  D7FE               	bra	u3107
  3142   00132A  2E3C               	decfsz	??_returnHome^0,f,c
  3143   00132C  D7FC               	bra	u3107
  3144   00132E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3145   001330  D7FA               	bra	u3107
  3146   001332  0000               	nop	
  3147   001334                     
  3148                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3149   001334  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3150   001338  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3151   00133C  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3152   001340  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3153   001344  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3154   001348  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3155   00134C  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3156   001350  EC46  F019         	call	_turnLeft	;wreg free
  3157                           
  3158                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3159   001354  0E05               	movlw	5
  3160   001356  6E3D               	movwf	(??_returnHome+1)^0,c
  3161   001358  0E0F               	movlw	15
  3162   00135A  6E3C               	movwf	??_returnHome^0,c
  3163   00135C  0EF1               	movlw	241
  3164   00135E                     u3117:
  3165   00135E  2EE8               	decfsz	wreg,f,c
  3166   001360  D7FE               	bra	u3117
  3167   001362  2E3C               	decfsz	??_returnHome^0,f,c
  3168   001364  D7FC               	bra	u3117
  3169   001366  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3170   001368  D7FA               	bra	u3117
  3171   00136A  0000               	nop	
  3172   00136C                     
  3173                           ;dc_motor.c: 238:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3174   00136C  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3175   001370  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3176   001374  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3177   001378  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3178   00137C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3179   001380  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3180   001384  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3181   001388  EC46  F019         	call	_turnLeft	;wreg free
  3182   00138C  EFAF  F008         	goto	l3009
  3183   001390                     l3047:
  3184   001390  5040               	movf	returnHome@i^0,w,c
  3185   001392  2431               	addwf	returnHome@moveSequence^0,w,c
  3186   001394  6ED9               	movwf	fsr2l,c
  3187   001396  0E00               	movlw	0
  3188   001398  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3189   00139A  6EDA               	movwf	fsr2h,c
  3190   00139C  0E07               	movlw	7
  3191   00139E  18DE               	xorwf	postinc2,w,c
  3192   0013A0  A4D8               	btfss	status,2,c
  3193   0013A2  EFD5  F009         	goto	u1731
  3194   0013A6  EFD7  F009         	goto	u1730
  3195   0013AA                     u1731:
  3196   0013AA  EF21  F00A         	goto	l528
  3197   0013AE                     u1730:
  3198   0013AE                     
  3199                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3200   0013AE  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3201   0013B2  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3202   0013B6  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3203   0013BA  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3204   0013BE  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3205   0013C2  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3206   0013C6  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3207   0013CA  EC5C  F018         	call	_turnRight	;wreg free
  3208   0013CE                     
  3209                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3210   0013CE  0E05               	movlw	5
  3211   0013D0  6E3D               	movwf	(??_returnHome+1)^0,c
  3212   0013D2  0E0F               	movlw	15
  3213   0013D4  6E3C               	movwf	??_returnHome^0,c
  3214   0013D6  0EF1               	movlw	241
  3215   0013D8                     u3127:
  3216   0013D8  2EE8               	decfsz	wreg,f,c
  3217   0013DA  D7FE               	bra	u3127
  3218   0013DC  2E3C               	decfsz	??_returnHome^0,f,c
  3219   0013DE  D7FC               	bra	u3127
  3220   0013E0  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3221   0013E2  D7FA               	bra	u3127
  3222   0013E4  0000               	nop	
  3223   0013E6                     
  3224                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3225   0013E6  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3226   0013EA  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3227   0013EE  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3228   0013F2  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3229   0013F6  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3230   0013FA  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3231   0013FE  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3232   001402  EC5C  F018         	call	_turnRight	;wreg free
  3233                           
  3234                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3235   001406  0E05               	movlw	5
  3236   001408  6E3D               	movwf	(??_returnHome+1)^0,c
  3237   00140A  0E0F               	movlw	15
  3238   00140C  6E3C               	movwf	??_returnHome^0,c
  3239   00140E  0EF1               	movlw	241
  3240   001410                     u3137:
  3241   001410  2EE8               	decfsz	wreg,f,c
  3242   001412  D7FE               	bra	u3137
  3243   001414  2E3C               	decfsz	??_returnHome^0,f,c
  3244   001416  D7FC               	bra	u3137
  3245   001418  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3246   00141A  D7FA               	bra	u3137
  3247   00141C  0000               	nop	
  3248   00141E                     
  3249                           ;dc_motor.c: 247:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3250   00141E  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3251   001422  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3252   001426  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3253   00142A  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3254   00142E  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3255   001432  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3256   001436  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3257   00143A  EC5C  F018         	call	_turnRight	;wreg free
  3258   00143E  EFAF  F008         	goto	l3009
  3259   001442                     l528:
  3260   001442                     l522:
  3261                           
  3262                           ;dc_motor.c: 251:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3263   001442  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  3264   001446  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  3265   00144A  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  3266   00144E  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  3267   001452  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3268   001456  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  3269   00145A  EC95  F01C         	call	_fullSpeedAhead	;wreg free
  3270   00145E                     
  3271                           ;dc_motor.c: 252:         resetTimer();
  3272   00145E  EC67  F020         	call	_resetTimer	;wreg free
  3273   001462                     l3061:
  3274   001462  5040               	movf	returnHome@i^0,w,c
  3275   001464  0D02               	mullw	2
  3276   001466  CFF3 F03C          	movff	prodl,??_returnHome
  3277   00146A  CFF4 F03D          	movff	prodh,??_returnHome+1
  3278   00146E  503C               	movf	??_returnHome^0,w,c
  3279   001470  2433               	addwf	returnHome@straightTime^0,w,c
  3280   001472  6ED9               	movwf	fsr2l,c
  3281   001474  503D               	movf	(??_returnHome+1)^0,w,c
  3282   001476  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  3283   001478  6EDA               	movwf	fsr2h,c
  3284   00147A  EC65  F01F         	call	_get16bitTMR0val	;wreg free
  3285   00147E  50DE               	movf	postinc2,w,c
  3286   001480  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  3287   001482  50DE               	movf	postinc2,w,c
  3288   001484  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  3289   001486  A0D8               	btfss	status,0,c
  3290   001488  EF48  F00A         	goto	u1741
  3291   00148C  EF4A  F00A         	goto	u1740
  3292   001490                     u1741:
  3293   001490  EF31  F00A         	goto	l3061
  3294   001494                     u1740:
  3295   001494                     
  3296                           ;dc_motor.c: 254:         stop(mL, mR, straightRamp);
  3297   001494  C02D  F01F         	movff	returnHome@mL,stop@mL
  3298   001498  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  3299   00149C  C02F  F021         	movff	returnHome@mR,stop@mR
  3300   0014A0  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  3301   0014A4  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  3302   0014A8  EC11  F01C         	call	_stop	;wreg free
  3303   0014AC                     l3065:
  3304                           
  3305                           ;dc_motor.c: 187:     while (i>0) {
  3306   0014AC  5040               	movf	returnHome@i^0,w,c
  3307   0014AE  A4D8               	btfss	status,2,c
  3308   0014B0  EF5C  F00A         	goto	u1751
  3309   0014B4  EF5E  F00A         	goto	u1750
  3310   0014B8                     u1751:
  3311   0014B8  EFAA  F007         	goto	l2979
  3312   0014BC                     u1750:
  3313   0014BC  0012               	return		;funcret
  3314   0014BE                     __end_of_returnHome:
  3315                           	callstack 0
  3316                           
  3317 ;; *************** function _lostReturnHome *****************
  3318 ;; Defined at:
  3319 ;;		line 259 in file "dc_motor.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  3322 ;;		 -> main@motorL(10), 
  3323 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  3324 ;;		 -> main@motorR(10), 
  3325 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  3326 ;;		 -> main@moveSequence(40), 
  3327 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  3328 ;;		 -> main@straightTime(82), 
  3329 ;;  curMove         1   52[COMRAM] unsigned char 
  3330 ;;  straightSpee    1   53[COMRAM] unsigned char 
  3331 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  3332 ;;  straightRamp    1   55[COMRAM] unsigned char 
  3333 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  3334 ;;  turnDuration    1   57[COMRAM] unsigned char 
  3335 ;;  turnRamp        1   58[COMRAM] unsigned char 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  i               1   63[COMRAM] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3347 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3350 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3351 ;;Total ram usage:       20 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 8
  3354 ;; This function calls:
  3355 ;;		_fullSpeedAhead
  3356 ;;		_get16bitTMR0val
  3357 ;;		_resetTimer
  3358 ;;		_reverseOneSquare
  3359 ;;		_stop
  3360 ;;		_turnLeft
  3361 ;;		_turnRight
  3362 ;; This function is called by:
  3363 ;;		_main
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text3
  3368   0014BE                     __ptext3:
  3369                           	callstack 0
  3370   0014BE                     _lostReturnHome:
  3371                           	callstack 22
  3372   0014BE                     
  3373                           ;dc_motor.c: 259: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 260: {;dc_motor.c: 261:     turnLeft(mL, mR, turnSpeed, 
      +                          turnDuration, turnRamp);
  3374   0014BE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3375   0014C2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3376   0014C6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3377   0014CA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3378   0014CE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3379   0014D2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3380   0014D6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3381   0014DA  EC46  F019         	call	_turnLeft	;wreg free
  3382   0014DE                     
  3383                           ;dc_motor.c: 262:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3384   0014DE  0E05               	movlw	5
  3385   0014E0  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3386   0014E2  0E0F               	movlw	15
  3387   0014E4  6E3C               	movwf	??_lostReturnHome^0,c
  3388   0014E6  0EF1               	movlw	241
  3389   0014E8                     u3147:
  3390   0014E8  2EE8               	decfsz	wreg,f,c
  3391   0014EA  D7FE               	bra	u3147
  3392   0014EC  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3393   0014EE  D7FC               	bra	u3147
  3394   0014F0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3395   0014F2  D7FA               	bra	u3147
  3396   0014F4  0000               	nop	
  3397   0014F6                     
  3398                           ;dc_motor.c: 263:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3399   0014F6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3400   0014FA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3401   0014FE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3402   001502  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3403   001506  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3404   00150A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3405   00150E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3406   001512  EC46  F019         	call	_turnLeft	;wreg free
  3407                           
  3408                           ;dc_motor.c: 264:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3409   001516  0E05               	movlw	5
  3410   001518  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3411   00151A  0E0F               	movlw	15
  3412   00151C  6E3C               	movwf	??_lostReturnHome^0,c
  3413   00151E  0EF1               	movlw	241
  3414   001520                     u3157:
  3415   001520  2EE8               	decfsz	wreg,f,c
  3416   001522  D7FE               	bra	u3157
  3417   001524  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3418   001526  D7FC               	bra	u3157
  3419   001528  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3420   00152A  D7FA               	bra	u3157
  3421   00152C  0000               	nop	
  3422   00152E                     
  3423                           ;dc_motor.c: 265:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3424   00152E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3425   001532  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3426   001536  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3427   00153A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3428   00153E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3429   001542  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3430   001546  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3431   00154A  EC46  F019         	call	_turnLeft	;wreg free
  3432   00154E                     
  3433                           ;dc_motor.c: 266:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3434   00154E  0E05               	movlw	5
  3435   001550  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3436   001552  0E0F               	movlw	15
  3437   001554  6E3C               	movwf	??_lostReturnHome^0,c
  3438   001556  0EF1               	movlw	241
  3439   001558                     u3167:
  3440   001558  2EE8               	decfsz	wreg,f,c
  3441   00155A  D7FE               	bra	u3167
  3442   00155C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3443   00155E  D7FC               	bra	u3167
  3444   001560  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3445   001562  D7FA               	bra	u3167
  3446   001564  0000               	nop	
  3447                           
  3448                           ;dc_motor.c: 267:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3449   001566  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3450   00156A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3451   00156E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3452   001572  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3453   001576  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3454   00157A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3455   00157E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3456   001582  EC46  F019         	call	_turnLeft	;wreg free
  3457   001586                     
  3458                           ;dc_motor.c: 268:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3459   001586  0E05               	movlw	5
  3460   001588  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3461   00158A  0E0F               	movlw	15
  3462   00158C  6E3C               	movwf	??_lostReturnHome^0,c
  3463   00158E  0EF1               	movlw	241
  3464   001590                     u3177:
  3465   001590  2EE8               	decfsz	wreg,f,c
  3466   001592  D7FE               	bra	u3177
  3467   001594  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3468   001596  D7FC               	bra	u3177
  3469   001598  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3470   00159A  D7FA               	bra	u3177
  3471   00159C  0000               	nop	
  3472   00159E                     
  3473                           ;dc_motor.c: 269:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3474   00159E  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  3475   0015A2  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  3476   0015A6  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  3477   0015AA  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  3478   0015AE  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3479   0015B2  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  3480   0015B6  EC95  F01C         	call	_fullSpeedAhead	;wreg free
  3481   0015BA                     
  3482                           ;dc_motor.c: 270:     resetTimer();
  3483   0015BA  EC67  F020         	call	_resetTimer	;wreg free
  3484   0015BE                     
  3485                           ;dc_motor.c: 271:     lost = 0;
  3486   0015BE  0E00               	movlw	0
  3487   0015C0  0100               	movlb	0	; () banked
  3488   0015C2  6FB0               	movwf	_lost& (0+255),b
  3489   0015C4                     l3415:
  3490                           
  3491                           ; BSR set to: 0
  3492   0015C4  51B0               	movf	_lost& (0+255),w,b
  3493   0015C6  B4D8               	btfsc	status,2,c
  3494   0015C8  EFE8  F00A         	goto	u2161
  3495   0015CC  EFEA  F00A         	goto	u2160
  3496   0015D0                     u2161:
  3497   0015D0  EFE2  F00A         	goto	l3415
  3498   0015D4                     u2160:
  3499   0015D4                     
  3500                           ; BSR set to: 0
  3501                           ;dc_motor.c: 273:     stop(mL, mR, straightRamp);
  3502   0015D4  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  3503   0015D8  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  3504   0015DC  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  3505   0015E0  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  3506   0015E4  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  3507   0015E8  EC11  F01C         	call	_stop	;wreg free
  3508   0015EC                     
  3509                           ;dc_motor.c: 275:     char i=curMove;
  3510   0015EC  C035  F040         	movff	lostReturnHome@curMove,lostReturnHome@i
  3511                           
  3512                           ;dc_motor.c: 276:     while (i>0) {
  3513   0015F0  EFA6  F00D         	goto	l3507
  3514   0015F4                     l3421:
  3515                           
  3516                           ;dc_motor.c: 277:         i--;
  3517   0015F4  0640               	decf	lostReturnHome@i^0,f,c
  3518   0015F6                     
  3519                           ;dc_motor.c: 279:         if (moveSequence[i] == 1) {
  3520   0015F6  5040               	movf	lostReturnHome@i^0,w,c
  3521   0015F8  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3522   0015FA  6ED9               	movwf	fsr2l,c
  3523   0015FC  0E00               	movlw	0
  3524   0015FE  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3525   001600  6EDA               	movwf	fsr2h,c
  3526   001602  04DE               	decf	postinc2,w,c
  3527   001604  A4D8               	btfss	status,2,c
  3528   001606  EF07  F00B         	goto	u2171
  3529   00160A  EF09  F00B         	goto	u2170
  3530   00160E                     u2171:
  3531   00160E  EF43  F00B         	goto	l3431
  3532   001612                     u2170:
  3533   001612                     
  3534                           ;dc_motor.c: 280:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3535   001612  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3536   001616  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3537   00161A  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3538   00161E  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3539   001622  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3540   001626  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3541   00162A  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3542   00162E  EC46  F019         	call	_turnLeft	;wreg free
  3543   001632                     
  3544                           ;dc_motor.c: 281:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3545   001632  0E05               	movlw	5
  3546   001634  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3547   001636  0E0F               	movlw	15
  3548   001638  6E3C               	movwf	??_lostReturnHome^0,c
  3549   00163A  0EF1               	movlw	241
  3550   00163C                     u3187:
  3551   00163C  2EE8               	decfsz	wreg,f,c
  3552   00163E  D7FE               	bra	u3187
  3553   001640  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3554   001642  D7FC               	bra	u3187
  3555   001644  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3556   001646  D7FA               	bra	u3187
  3557   001648  0000               	nop	
  3558   00164A                     
  3559                           ;dc_motor.c: 282:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3560   00164A  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3561   00164E  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3562   001652  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3563   001656  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3564   00165A  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3565   00165E  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3566   001662  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3567   001666  EC46  F019         	call	_turnLeft	;wreg free
  3568                           
  3569                           ;dc_motor.c: 283:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3570   00166A  0E05               	movlw	5
  3571   00166C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3572   00166E  0E0F               	movlw	15
  3573   001670  6E3C               	movwf	??_lostReturnHome^0,c
  3574   001672  0EF1               	movlw	241
  3575   001674                     u3197:
  3576   001674  2EE8               	decfsz	wreg,f,c
  3577   001676  D7FE               	bra	u3197
  3578   001678  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3579   00167A  D7FC               	bra	u3197
  3580   00167C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3581   00167E  D7FA               	bra	u3197
  3582   001680  0000               	nop	
  3583                           
  3584                           ;dc_motor.c: 284:         }
  3585   001682  EF71  F00D         	goto	l547
  3586   001686                     l3431:
  3587   001686  5040               	movf	lostReturnHome@i^0,w,c
  3588   001688  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3589   00168A  6ED9               	movwf	fsr2l,c
  3590   00168C  0E00               	movlw	0
  3591   00168E  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3592   001690  6EDA               	movwf	fsr2h,c
  3593   001692  0E02               	movlw	2
  3594   001694  18DE               	xorwf	postinc2,w,c
  3595   001696  A4D8               	btfss	status,2,c
  3596   001698  EF50  F00B         	goto	u2181
  3597   00169C  EF52  F00B         	goto	u2180
  3598   0016A0                     u2181:
  3599   0016A0  EF8C  F00B         	goto	l3439
  3600   0016A4                     u2180:
  3601   0016A4                     
  3602                           ;dc_motor.c: 287:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3603   0016A4  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3604   0016A8  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3605   0016AC  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3606   0016B0  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3607   0016B4  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3608   0016B8  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3609   0016BC  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3610   0016C0  EC5C  F018         	call	_turnRight	;wreg free
  3611   0016C4                     
  3612                           ;dc_motor.c: 288:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3613   0016C4  0E05               	movlw	5
  3614   0016C6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3615   0016C8  0E0F               	movlw	15
  3616   0016CA  6E3C               	movwf	??_lostReturnHome^0,c
  3617   0016CC  0EF1               	movlw	241
  3618   0016CE                     u3207:
  3619   0016CE  2EE8               	decfsz	wreg,f,c
  3620   0016D0  D7FE               	bra	u3207
  3621   0016D2  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3622   0016D4  D7FC               	bra	u3207
  3623   0016D6  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3624   0016D8  D7FA               	bra	u3207
  3625   0016DA  0000               	nop	
  3626   0016DC                     
  3627                           ;dc_motor.c: 289:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3628   0016DC  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3629   0016E0  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3630   0016E4  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3631   0016E8  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3632   0016EC  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3633   0016F0  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3634   0016F4  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3635   0016F8  EC5C  F018         	call	_turnRight	;wreg free
  3636                           
  3637                           ;dc_motor.c: 290:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3638   0016FC  0E05               	movlw	5
  3639   0016FE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3640   001700  0E0F               	movlw	15
  3641   001702  6E3C               	movwf	??_lostReturnHome^0,c
  3642   001704  0EF1               	movlw	241
  3643   001706                     u3217:
  3644   001706  2EE8               	decfsz	wreg,f,c
  3645   001708  D7FE               	bra	u3217
  3646   00170A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3647   00170C  D7FC               	bra	u3217
  3648   00170E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3649   001710  D7FA               	bra	u3217
  3650   001712  0000               	nop	
  3651                           
  3652                           ;dc_motor.c: 291:         }
  3653   001714  EF71  F00D         	goto	l547
  3654   001718                     l3439:
  3655   001718  5040               	movf	lostReturnHome@i^0,w,c
  3656   00171A  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3657   00171C  6ED9               	movwf	fsr2l,c
  3658   00171E  0E00               	movlw	0
  3659   001720  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3660   001722  6EDA               	movwf	fsr2h,c
  3661   001724  0E03               	movlw	3
  3662   001726  18DE               	xorwf	postinc2,w,c
  3663   001728  A4D8               	btfss	status,2,c
  3664   00172A  EF99  F00B         	goto	u2191
  3665   00172E  EF9B  F00B         	goto	u2190
  3666   001732                     u2191:
  3667   001732  EF0D  F00C         	goto	l3453
  3668   001736                     u2190:
  3669   001736                     
  3670                           ;dc_motor.c: 294:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3671   001736  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3672   00173A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3673   00173E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3674   001742  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3675   001746  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3676   00174A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3677   00174E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3678   001752  EC46  F019         	call	_turnLeft	;wreg free
  3679   001756                     
  3680                           ;dc_motor.c: 295:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3681   001756  0E05               	movlw	5
  3682   001758  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3683   00175A  0E0F               	movlw	15
  3684   00175C  6E3C               	movwf	??_lostReturnHome^0,c
  3685   00175E  0EF1               	movlw	241
  3686   001760                     u3227:
  3687   001760  2EE8               	decfsz	wreg,f,c
  3688   001762  D7FE               	bra	u3227
  3689   001764  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3690   001766  D7FC               	bra	u3227
  3691   001768  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3692   00176A  D7FA               	bra	u3227
  3693   00176C  0000               	nop	
  3694   00176E                     
  3695                           ;dc_motor.c: 296:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3696   00176E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3697   001772  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3698   001776  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3699   00177A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3700   00177E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3701   001782  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3702   001786  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3703   00178A  EC46  F019         	call	_turnLeft	;wreg free
  3704                           
  3705                           ;dc_motor.c: 297:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3706   00178E  0E05               	movlw	5
  3707   001790  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3708   001792  0E0F               	movlw	15
  3709   001794  6E3C               	movwf	??_lostReturnHome^0,c
  3710   001796  0EF1               	movlw	241
  3711   001798                     u3237:
  3712   001798  2EE8               	decfsz	wreg,f,c
  3713   00179A  D7FE               	bra	u3237
  3714   00179C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3715   00179E  D7FC               	bra	u3237
  3716   0017A0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3717   0017A2  D7FA               	bra	u3237
  3718   0017A4  0000               	nop	
  3719   0017A6                     
  3720                           ;dc_motor.c: 298:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3721   0017A6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3722   0017AA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3723   0017AE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3724   0017B2  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3725   0017B6  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3726   0017BA  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3727   0017BE  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3728   0017C2  EC46  F019         	call	_turnLeft	;wreg free
  3729   0017C6                     
  3730                           ;dc_motor.c: 299:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3731   0017C6  0E05               	movlw	5
  3732   0017C8  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3733   0017CA  0E0F               	movlw	15
  3734   0017CC  6E3C               	movwf	??_lostReturnHome^0,c
  3735   0017CE  0EF1               	movlw	241
  3736   0017D0                     u3247:
  3737   0017D0  2EE8               	decfsz	wreg,f,c
  3738   0017D2  D7FE               	bra	u3247
  3739   0017D4  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3740   0017D6  D7FC               	bra	u3247
  3741   0017D8  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3742   0017DA  D7FA               	bra	u3247
  3743   0017DC  0000               	nop	
  3744                           
  3745                           ;dc_motor.c: 300:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3746   0017DE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3747   0017E2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3748   0017E6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3749   0017EA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3750   0017EE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3751   0017F2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3752   0017F6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3753   0017FA  EC46  F019         	call	_turnLeft	;wreg free
  3754   0017FE                     l3451:
  3755                           
  3756                           ;dc_motor.c: 301:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3757   0017FE  0E05               	movlw	5
  3758   001800  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3759   001802  0E0F               	movlw	15
  3760   001804  6E3C               	movwf	??_lostReturnHome^0,c
  3761   001806  0EF1               	movlw	241
  3762   001808                     u3257:
  3763   001808  2EE8               	decfsz	wreg,f,c
  3764   00180A  D7FE               	bra	u3257
  3765   00180C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3766   00180E  D7FC               	bra	u3257
  3767   001810  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3768   001812  D7FA               	bra	u3257
  3769   001814  0000               	nop	
  3770                           
  3771                           ;dc_motor.c: 302:         }
  3772   001816  EF71  F00D         	goto	l547
  3773   00181A                     l3453:
  3774   00181A  5040               	movf	lostReturnHome@i^0,w,c
  3775   00181C  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3776   00181E  6ED9               	movwf	fsr2l,c
  3777   001820  0E00               	movlw	0
  3778   001822  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3779   001824  6EDA               	movwf	fsr2h,c
  3780   001826  0E04               	movlw	4
  3781   001828  18DE               	xorwf	postinc2,w,c
  3782   00182A  A4D8               	btfss	status,2,c
  3783   00182C  EF1A  F00C         	goto	u2201
  3784   001830  EF1C  F00C         	goto	u2200
  3785   001834                     u2201:
  3786   001834  EF66  F00C         	goto	l3465
  3787   001838                     u2200:
  3788   001838                     
  3789                           ;dc_motor.c: 305:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3790   001838  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3791   00183C  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3792   001840  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3793   001844  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3794   001848  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3795   00184C  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3796   001850  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3797   001854  EC46  F019         	call	_turnLeft	;wreg free
  3798   001858                     
  3799                           ;dc_motor.c: 306:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3800   001858  0E05               	movlw	5
  3801   00185A  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3802   00185C  0E0F               	movlw	15
  3803   00185E  6E3C               	movwf	??_lostReturnHome^0,c
  3804   001860  0EF1               	movlw	241
  3805   001862                     u3267:
  3806   001862  2EE8               	decfsz	wreg,f,c
  3807   001864  D7FE               	bra	u3267
  3808   001866  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3809   001868  D7FC               	bra	u3267
  3810   00186A  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3811   00186C  D7FA               	bra	u3267
  3812   00186E  0000               	nop	
  3813   001870                     
  3814                           ;dc_motor.c: 307:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3815   001870  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3816   001874  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3817   001878  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3818   00187C  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3819   001880  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3820   001884  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3821   001888  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3822   00188C  EC46  F019         	call	_turnLeft	;wreg free
  3823                           
  3824                           ;dc_motor.c: 308:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3825   001890  0E05               	movlw	5
  3826   001892  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3827   001894  0E0F               	movlw	15
  3828   001896  6E3C               	movwf	??_lostReturnHome^0,c
  3829   001898  0EF1               	movlw	241
  3830   00189A                     u3277:
  3831   00189A  2EE8               	decfsz	wreg,f,c
  3832   00189C  D7FE               	bra	u3277
  3833   00189E  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3834   0018A0  D7FC               	bra	u3277
  3835   0018A2  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3836   0018A4  D7FA               	bra	u3277
  3837   0018A6  0000               	nop	
  3838   0018A8                     
  3839                           ;dc_motor.c: 309:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3840   0018A8  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3841   0018AC  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3842   0018B0  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3843   0018B4  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3844   0018B8  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3845   0018BC  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3846   0018C0  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3847   0018C4  EC69  F017         	call	_reverseOneSquare	;wreg free
  3848   0018C8  EFFF  F00B         	goto	l3451
  3849   0018CC                     l3465:
  3850   0018CC  5040               	movf	lostReturnHome@i^0,w,c
  3851   0018CE  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3852   0018D0  6ED9               	movwf	fsr2l,c
  3853   0018D2  0E00               	movlw	0
  3854   0018D4  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3855   0018D6  6EDA               	movwf	fsr2h,c
  3856   0018D8  0E05               	movlw	5
  3857   0018DA  18DE               	xorwf	postinc2,w,c
  3858   0018DC  A4D8               	btfss	status,2,c
  3859   0018DE  EF73  F00C         	goto	u2211
  3860   0018E2  EF75  F00C         	goto	u2210
  3861   0018E6                     u2211:
  3862   0018E6  EFBF  F00C         	goto	l3477
  3863   0018EA                     u2210:
  3864   0018EA                     
  3865                           ;dc_motor.c: 314:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3866   0018EA  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3867   0018EE  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3868   0018F2  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3869   0018F6  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3870   0018FA  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3871   0018FE  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3872   001902  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3873   001906  EC5C  F018         	call	_turnRight	;wreg free
  3874   00190A                     
  3875                           ;dc_motor.c: 315:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3876   00190A  0E05               	movlw	5
  3877   00190C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3878   00190E  0E0F               	movlw	15
  3879   001910  6E3C               	movwf	??_lostReturnHome^0,c
  3880   001912  0EF1               	movlw	241
  3881   001914                     u3287:
  3882   001914  2EE8               	decfsz	wreg,f,c
  3883   001916  D7FE               	bra	u3287
  3884   001918  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3885   00191A  D7FC               	bra	u3287
  3886   00191C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3887   00191E  D7FA               	bra	u3287
  3888   001920  0000               	nop	
  3889   001922                     
  3890                           ;dc_motor.c: 316:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3891   001922  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3892   001926  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3893   00192A  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3894   00192E  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3895   001932  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3896   001936  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3897   00193A  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3898   00193E  EC5C  F018         	call	_turnRight	;wreg free
  3899                           
  3900                           ;dc_motor.c: 317:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3901   001942  0E05               	movlw	5
  3902   001944  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3903   001946  0E0F               	movlw	15
  3904   001948  6E3C               	movwf	??_lostReturnHome^0,c
  3905   00194A  0EF1               	movlw	241
  3906   00194C                     u3297:
  3907   00194C  2EE8               	decfsz	wreg,f,c
  3908   00194E  D7FE               	bra	u3297
  3909   001950  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3910   001952  D7FC               	bra	u3297
  3911   001954  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3912   001956  D7FA               	bra	u3297
  3913   001958  0000               	nop	
  3914   00195A                     
  3915                           ;dc_motor.c: 318:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3916   00195A  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3917   00195E  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3918   001962  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3919   001966  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3920   00196A  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3921   00196E  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3922   001972  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3923   001976  EC69  F017         	call	_reverseOneSquare	;wreg free
  3924   00197A  EFFF  F00B         	goto	l3451
  3925   00197E                     l3477:
  3926   00197E  5040               	movf	lostReturnHome@i^0,w,c
  3927   001980  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3928   001982  6ED9               	movwf	fsr2l,c
  3929   001984  0E00               	movlw	0
  3930   001986  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3931   001988  6EDA               	movwf	fsr2h,c
  3932   00198A  0E06               	movlw	6
  3933   00198C  18DE               	xorwf	postinc2,w,c
  3934   00198E  A4D8               	btfss	status,2,c
  3935   001990  EFCC  F00C         	goto	u2221
  3936   001994  EFCE  F00C         	goto	u2220
  3937   001998                     u2221:
  3938   001998  EF18  F00D         	goto	l3489
  3939   00199C                     u2220:
  3940   00199C                     
  3941                           ;dc_motor.c: 323:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3942   00199C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3943   0019A0  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3944   0019A4  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3945   0019A8  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3946   0019AC  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3947   0019B0  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3948   0019B4  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3949   0019B8  EC46  F019         	call	_turnLeft	;wreg free
  3950   0019BC                     
  3951                           ;dc_motor.c: 324:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3952   0019BC  0E05               	movlw	5
  3953   0019BE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3954   0019C0  0E0F               	movlw	15
  3955   0019C2  6E3C               	movwf	??_lostReturnHome^0,c
  3956   0019C4  0EF1               	movlw	241
  3957   0019C6                     u3307:
  3958   0019C6  2EE8               	decfsz	wreg,f,c
  3959   0019C8  D7FE               	bra	u3307
  3960   0019CA  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3961   0019CC  D7FC               	bra	u3307
  3962   0019CE  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3963   0019D0  D7FA               	bra	u3307
  3964   0019D2  0000               	nop	
  3965   0019D4                     
  3966                           ;dc_motor.c: 325:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3967   0019D4  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3968   0019D8  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3969   0019DC  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3970   0019E0  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3971   0019E4  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3972   0019E8  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3973   0019EC  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3974   0019F0  EC46  F019         	call	_turnLeft	;wreg free
  3975                           
  3976                           ;dc_motor.c: 326:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3977   0019F4  0E05               	movlw	5
  3978   0019F6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3979   0019F8  0E0F               	movlw	15
  3980   0019FA  6E3C               	movwf	??_lostReturnHome^0,c
  3981   0019FC  0EF1               	movlw	241
  3982   0019FE                     u3317:
  3983   0019FE  2EE8               	decfsz	wreg,f,c
  3984   001A00  D7FE               	bra	u3317
  3985   001A02  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3986   001A04  D7FC               	bra	u3317
  3987   001A06  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3988   001A08  D7FA               	bra	u3317
  3989   001A0A  0000               	nop	
  3990   001A0C                     
  3991                           ;dc_motor.c: 327:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3992   001A0C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3993   001A10  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3994   001A14  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3995   001A18  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3996   001A1C  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3997   001A20  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3998   001A24  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3999   001A28  EC46  F019         	call	_turnLeft	;wreg free
  4000   001A2C  EFFF  F00B         	goto	l3451
  4001   001A30                     l3489:
  4002   001A30  5040               	movf	lostReturnHome@i^0,w,c
  4003   001A32  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4004   001A34  6ED9               	movwf	fsr2l,c
  4005   001A36  0E00               	movlw	0
  4006   001A38  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4007   001A3A  6EDA               	movwf	fsr2h,c
  4008   001A3C  0E07               	movlw	7
  4009   001A3E  18DE               	xorwf	postinc2,w,c
  4010   001A40  A4D8               	btfss	status,2,c
  4011   001A42  EF25  F00D         	goto	u2231
  4012   001A46  EF27  F00D         	goto	u2230
  4013   001A4A                     u2231:
  4014   001A4A  EF71  F00D         	goto	l553
  4015   001A4E                     u2230:
  4016   001A4E                     
  4017                           ;dc_motor.c: 332:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4018   001A4E  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4019   001A52  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4020   001A56  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4021   001A5A  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4022   001A5E  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4023   001A62  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4024   001A66  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4025   001A6A  EC5C  F018         	call	_turnRight	;wreg free
  4026   001A6E                     
  4027                           ;dc_motor.c: 333:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4028   001A6E  0E05               	movlw	5
  4029   001A70  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4030   001A72  0E0F               	movlw	15
  4031   001A74  6E3C               	movwf	??_lostReturnHome^0,c
  4032   001A76  0EF1               	movlw	241
  4033   001A78                     u3327:
  4034   001A78  2EE8               	decfsz	wreg,f,c
  4035   001A7A  D7FE               	bra	u3327
  4036   001A7C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4037   001A7E  D7FC               	bra	u3327
  4038   001A80  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4039   001A82  D7FA               	bra	u3327
  4040   001A84  0000               	nop	
  4041   001A86                     
  4042                           ;dc_motor.c: 334:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4043   001A86  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4044   001A8A  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4045   001A8E  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4046   001A92  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4047   001A96  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4048   001A9A  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4049   001A9E  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4050   001AA2  EC5C  F018         	call	_turnRight	;wreg free
  4051                           
  4052                           ;dc_motor.c: 335:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4053   001AA6  0E05               	movlw	5
  4054   001AA8  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4055   001AAA  0E0F               	movlw	15
  4056   001AAC  6E3C               	movwf	??_lostReturnHome^0,c
  4057   001AAE  0EF1               	movlw	241
  4058   001AB0                     u3337:
  4059   001AB0  2EE8               	decfsz	wreg,f,c
  4060   001AB2  D7FE               	bra	u3337
  4061   001AB4  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4062   001AB6  D7FC               	bra	u3337
  4063   001AB8  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4064   001ABA  D7FA               	bra	u3337
  4065   001ABC  0000               	nop	
  4066   001ABE                     
  4067                           ;dc_motor.c: 336:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4068   001ABE  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4069   001AC2  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4070   001AC6  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4071   001ACA  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4072   001ACE  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4073   001AD2  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4074   001AD6  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4075   001ADA  EC5C  F018         	call	_turnRight	;wreg free
  4076   001ADE  EFFF  F00B         	goto	l3451
  4077   001AE2                     l553:
  4078   001AE2                     l547:
  4079                           
  4080                           ;dc_motor.c: 340:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4081   001AE2  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4082   001AE6  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4083   001AEA  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4084   001AEE  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4085   001AF2  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4086   001AF6  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4087   001AFA  EC95  F01C         	call	_fullSpeedAhead	;wreg free
  4088   001AFE                     
  4089                           ;dc_motor.c: 341:         resetTimer();
  4090   001AFE  EC67  F020         	call	_resetTimer	;wreg free
  4091   001B02                     l3503:
  4092   001B02  5040               	movf	lostReturnHome@i^0,w,c
  4093   001B04  0D02               	mullw	2
  4094   001B06  CFF3 F03C          	movff	prodl,??_lostReturnHome
  4095   001B0A  CFF4 F03D          	movff	prodh,??_lostReturnHome+1
  4096   001B0E  503C               	movf	??_lostReturnHome^0,w,c
  4097   001B10  2433               	addwf	lostReturnHome@straightTime^0,w,c
  4098   001B12  6ED9               	movwf	fsr2l,c
  4099   001B14  503D               	movf	(??_lostReturnHome+1)^0,w,c
  4100   001B16  2034               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  4101   001B18  6EDA               	movwf	fsr2h,c
  4102   001B1A  EC65  F01F         	call	_get16bitTMR0val	;wreg free
  4103   001B1E  50DE               	movf	postinc2,w,c
  4104   001B20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  4105   001B22  50DE               	movf	postinc2,w,c
  4106   001B24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4107   001B26  A0D8               	btfss	status,0,c
  4108   001B28  EF98  F00D         	goto	u2241
  4109   001B2C  EF9A  F00D         	goto	u2240
  4110   001B30                     u2241:
  4111   001B30  EF81  F00D         	goto	l3503
  4112   001B34                     u2240:
  4113   001B34                     
  4114                           ;dc_motor.c: 343:         stop(mL, mR, straightRamp);
  4115   001B34  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  4116   001B38  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  4117   001B3C  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  4118   001B40  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  4119   001B44  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4120   001B48  EC11  F01C         	call	_stop	;wreg free
  4121   001B4C                     l3507:
  4122                           
  4123                           ;dc_motor.c: 276:     while (i>0) {
  4124   001B4C  5040               	movf	lostReturnHome@i^0,w,c
  4125   001B4E  A4D8               	btfss	status,2,c
  4126   001B50  EFAC  F00D         	goto	u2251
  4127   001B54  EFAE  F00D         	goto	u2250
  4128   001B58                     u2251:
  4129   001B58  EFFA  F00A         	goto	l3421
  4130   001B5C                     u2250:
  4131   001B5C  0012               	return		;funcret
  4132   001B5E                     __end_of_lostReturnHome:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _stop *****************
  4136 ;; Defined at:
  4137 ;;		line 348 in file "dc_motor.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4140 ;;		 -> main@motorL(10), 
  4141 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4142 ;;		 -> main@motorR(10), 
  4143 ;;  straightRamp    1   34[COMRAM] unsigned char 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  cur_power       2   40[COMRAM] int 
  4146 ;;  i               2   38[COMRAM] int 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4156 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4157 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4158 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4159 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4160 ;;Total ram usage:       12 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; Hardware stack levels required when called: 7
  4163 ;; This function calls:
  4164 ;;		_setMotorPWM
  4165 ;; This function is called by:
  4166 ;;		_main
  4167 ;;		_returnHome
  4168 ;;		_lostReturnHome
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text4
  4173   003822                     __ptext4:
  4174                           	callstack 0
  4175   003822                     _stop:
  4176                           	callstack 23
  4177   003822                     
  4178                           ;dc_motor.c: 348: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 349: {;dc_motor.c: 350:     mL->direction = 1;
  4179   003822  EE20 F001          	lfsr	2,1
  4180   003826  501F               	movf	stop@mL^0,w,c
  4181   003828  26D9               	addwf	fsr2l,f,c
  4182   00382A  5020               	movf	(stop@mL+1)^0,w,c
  4183   00382C  22DA               	addwfc	fsr2h,f,c
  4184   00382E  0E01               	movlw	1
  4185   003830  6EDF               	movwf	indf2,c
  4186                           
  4187                           ;dc_motor.c: 351:     mR->direction = 1;
  4188   003832  EE20 F001          	lfsr	2,1
  4189   003836  5021               	movf	stop@mR^0,w,c
  4190   003838  26D9               	addwf	fsr2l,f,c
  4191   00383A  5022               	movf	(stop@mR+1)^0,w,c
  4192   00383C  22DA               	addwfc	fsr2h,f,c
  4193   00383E  0E01               	movlw	1
  4194   003840  6EDF               	movwf	indf2,c
  4195                           
  4196                           ;dc_motor.c: 352:     int i;;dc_motor.c: 353:     int cur_power;;dc_motor.c: 354:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  4197   003842  C01F  FFD9         	movff	stop@mL,fsr2l
  4198   003846  C020  FFDA         	movff	stop@mL+1,fsr2h
  4199   00384A  50DF               	movf	indf2,w,c
  4200   00384C  6E24               	movwf	??_stop^0,c
  4201   00384E  EE20 F009          	lfsr	2,9
  4202   003852  501F               	movf	stop@mL^0,w,c
  4203   003854  26D9               	addwf	fsr2l,f,c
  4204   003856  5020               	movf	(stop@mL+1)^0,w,c
  4205   003858  22DA               	addwfc	fsr2h,f,c
  4206   00385A  50DF               	movf	indf2,w,c
  4207   00385C  6E25               	movwf	(??_stop+1)^0,c
  4208   00385E  5025               	movf	(??_stop+1)^0,w,c
  4209   003860  5C24               	subwf	??_stop^0,w,c
  4210   003862  6E29               	movwf	stop@cur_power^0,c
  4211   003864  6A2A               	clrf	(stop@cur_power+1)^0,c
  4212   003866  A0D8               	btfss	status,0,c
  4213   003868  062A               	decf	(stop@cur_power+1)^0,f,c
  4214   00386A                     l2633:
  4215   00386A  BE2A               	btfsc	(stop@cur_power+1)^0,7,c
  4216   00386C  EF3C  F01C         	goto	u1370
  4217   003870  EF3A  F01C         	goto	u1371
  4218   003874                     u1371:
  4219   003874  EF3E  F01C         	goto	l2637
  4220   003878                     u1370:
  4221   003878  EF8A  F01C         	goto	l2653
  4222   00387C                     l2637:
  4223                           
  4224                           ;dc_motor.c: 355:         mL->power = cur_power+mL->compensation;
  4225   00387C  EE20 F009          	lfsr	2,9
  4226   003880  501F               	movf	stop@mL^0,w,c
  4227   003882  26D9               	addwf	fsr2l,f,c
  4228   003884  5020               	movf	(stop@mL+1)^0,w,c
  4229   003886  22DA               	addwfc	fsr2h,f,c
  4230   003888  50DF               	movf	indf2,w,c
  4231   00388A  2429               	addwf	stop@cur_power^0,w,c
  4232   00388C  C01F  FFD9         	movff	stop@mL,fsr2l
  4233   003890  C020  FFDA         	movff	stop@mL+1,fsr2h
  4234   003894  6EDF               	movwf	indf2,c
  4235                           
  4236                           ;dc_motor.c: 356:         mR->power = cur_power+mR->compensation;
  4237   003896  EE20 F009          	lfsr	2,9
  4238   00389A  5021               	movf	stop@mR^0,w,c
  4239   00389C  26D9               	addwf	fsr2l,f,c
  4240   00389E  5022               	movf	(stop@mR+1)^0,w,c
  4241   0038A0  22DA               	addwfc	fsr2h,f,c
  4242   0038A2  50DF               	movf	indf2,w,c
  4243   0038A4  2429               	addwf	stop@cur_power^0,w,c
  4244   0038A6  C021  FFD9         	movff	stop@mR,fsr2l
  4245   0038AA  C022  FFDA         	movff	stop@mR+1,fsr2h
  4246   0038AE  6EDF               	movwf	indf2,c
  4247   0038B0                     
  4248                           ;dc_motor.c: 357:         setMotorPWM(mL);
  4249   0038B0  C01F  F019         	movff	stop@mL,setMotorPWM@m
  4250   0038B4  C020  F01A         	movff	stop@mL+1,setMotorPWM@m+1
  4251   0038B8  EC30  F01A         	call	_setMotorPWM	;wreg free
  4252   0038BC                     
  4253                           ;dc_motor.c: 358:         setMotorPWM(mR);
  4254   0038BC  C021  F019         	movff	stop@mR,setMotorPWM@m
  4255   0038C0  C022  F01A         	movff	stop@mR+1,setMotorPWM@m+1
  4256   0038C4  EC30  F01A         	call	_setMotorPWM	;wreg free
  4257   0038C8                     
  4258                           ;dc_motor.c: 359:         for (i=0;i<straightRamp;i++) {
  4259   0038C8  0E00               	movlw	0
  4260   0038CA  6E28               	movwf	(stop@i+1)^0,c
  4261   0038CC  0E00               	movlw	0
  4262   0038CE  6E27               	movwf	stop@i^0,c
  4263   0038D0  EF73  F01C         	goto	l568
  4264   0038D4                     l2645:
  4265                           
  4266                           ;dc_motor.c: 360:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4267   0038D4  0ED0               	movlw	208
  4268   0038D6  6E24               	movwf	??_stop^0,c
  4269   0038D8  0ECA               	movlw	202
  4270   0038DA                     u3347:
  4271   0038DA  2EE8               	decfsz	wreg,f,c
  4272   0038DC  D7FE               	bra	u3347
  4273   0038DE  2E24               	decfsz	??_stop^0,f,c
  4274   0038E0  D7FC               	bra	u3347
  4275   0038E2                     
  4276                           ;dc_motor.c: 361:         }
  4277   0038E2  4A27               	infsnz	stop@i^0,f,c
  4278   0038E4  2A28               	incf	(stop@i+1)^0,f,c
  4279   0038E6                     l568:
  4280   0038E6  5023               	movf	stop@straightRamp^0,w,c
  4281   0038E8  6E24               	movwf	??_stop^0,c
  4282   0038EA  6A25               	clrf	(??_stop+1)^0,c
  4283   0038EC  5024               	movf	??_stop^0,w,c
  4284   0038EE  5C27               	subwf	stop@i^0,w,c
  4285   0038F0  5028               	movf	(stop@i+1)^0,w,c
  4286   0038F2  0A80               	xorlw	128
  4287   0038F4  6E26               	movwf	(??_stop+2)^0,c
  4288   0038F6  5025               	movf	(??_stop+1)^0,w,c
  4289   0038F8  0A80               	xorlw	128
  4290   0038FA  5826               	subwfb	(??_stop+2)^0,w,c
  4291   0038FC  A0D8               	btfss	status,0,c
  4292   0038FE  EF83  F01C         	goto	u1381
  4293   003902  EF85  F01C         	goto	u1380
  4294   003906                     u1381:
  4295   003906  EF6A  F01C         	goto	l2645
  4296   00390A                     u1380:
  4297   00390A                     
  4298                           ;dc_motor.c: 362:     }
  4299   00390A  0629               	decf	stop@cur_power^0,f,c
  4300   00390C  A0D8               	btfss	status,0,c
  4301   00390E  062A               	decf	(stop@cur_power+1)^0,f,c
  4302   003910  EF35  F01C         	goto	l2633
  4303   003914                     l2653:
  4304                           
  4305                           ;dc_motor.c: 363:     mL->power = 0;
  4306   003914  C01F  FFD9         	movff	stop@mL,fsr2l
  4307   003918  C020  FFDA         	movff	stop@mL+1,fsr2h
  4308   00391C  6ADF               	clrf	indf2,c
  4309                           
  4310                           ;dc_motor.c: 364:     mR->power = 0;
  4311   00391E  C021  FFD9         	movff	stop@mR,fsr2l
  4312   003922  C022  FFDA         	movff	stop@mR+1,fsr2h
  4313   003926  6ADF               	clrf	indf2,c
  4314   003928  0012               	return		;funcret
  4315   00392A                     __end_of_stop:
  4316                           	callstack 0
  4317                           
  4318 ;; *************** function _reverseOneSquare *****************
  4319 ;; Defined at:
  4320 ;;		line 449 in file "dc_motor.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4323 ;;		 -> main@motorL(10), 
  4324 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4325 ;;		 -> main@motorR(10), 
  4326 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4327 ;;  reverseDurat    1   35[COMRAM] unsigned char 
  4328 ;;  straightRamp    1   36[COMRAM] unsigned char 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  cur_power       2   42[COMRAM] int 
  4331 ;;  i               2   40[COMRAM] int 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4341 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4342 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4343 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;Total ram usage:       14 bytes
  4346 ;; Hardware stack levels used: 1
  4347 ;; Hardware stack levels required when called: 7
  4348 ;; This function calls:
  4349 ;;		_setMotorPWM
  4350 ;; This function is called by:
  4351 ;;		_move
  4352 ;;		_returnHome
  4353 ;;		_lostReturnHome
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text5
  4358   002ED2                     __ptext5:
  4359                           	callstack 0
  4360   002ED2                     _reverseOneSquare:
  4361                           	callstack 22
  4362   002ED2                     
  4363                           ;dc_motor.c: 449: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned char reverseDuration, unsigned char straightRamp);dc_motor.c: 450: {;dc_motor.c
      +                          : 451:     mL->direction = 0;
  4364   002ED2  EE20 F001          	lfsr	2,1
  4365   002ED6  501F               	movf	reverseOneSquare@mL^0,w,c
  4366   002ED8  26D9               	addwf	fsr2l,f,c
  4367   002EDA  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4368   002EDC  22DA               	addwfc	fsr2h,f,c
  4369   002EDE  6ADF               	clrf	indf2,c
  4370                           
  4371                           ;dc_motor.c: 452:     mR->direction = 0;
  4372   002EE0  EE20 F001          	lfsr	2,1
  4373   002EE4  5021               	movf	reverseOneSquare@mR^0,w,c
  4374   002EE6  26D9               	addwf	fsr2l,f,c
  4375   002EE8  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4376   002EEA  22DA               	addwfc	fsr2h,f,c
  4377   002EEC  6ADF               	clrf	indf2,c
  4378   002EEE                     
  4379                           ;dc_motor.c: 453:     int i;;dc_motor.c: 454:     int cur_power;;dc_motor.c: 455:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4380   002EEE  0E00               	movlw	0
  4381   002EF0  6E2C               	movwf	(reverseOneSquare@cur_power+1)^0,c
  4382   002EF2  0E01               	movlw	1
  4383   002EF4  6E2B               	movwf	reverseOneSquare@cur_power^0,c
  4384   002EF6  EFC6  F017         	goto	l2785
  4385   002EFA                     l2771:
  4386                           
  4387                           ;dc_motor.c: 456:         mL->power = cur_power+mL->compensation;
  4388   002EFA  EE20 F009          	lfsr	2,9
  4389   002EFE  501F               	movf	reverseOneSquare@mL^0,w,c
  4390   002F00  26D9               	addwf	fsr2l,f,c
  4391   002F02  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4392   002F04  22DA               	addwfc	fsr2h,f,c
  4393   002F06  50DF               	movf	indf2,w,c
  4394   002F08  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4395   002F0A  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4396   002F0E  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4397   002F12  6EDF               	movwf	indf2,c
  4398                           
  4399                           ;dc_motor.c: 457:         mR->power = cur_power+mR->compensation;
  4400   002F14  EE20 F009          	lfsr	2,9
  4401   002F18  5021               	movf	reverseOneSquare@mR^0,w,c
  4402   002F1A  26D9               	addwf	fsr2l,f,c
  4403   002F1C  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4404   002F1E  22DA               	addwfc	fsr2h,f,c
  4405   002F20  50DF               	movf	indf2,w,c
  4406   002F22  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4407   002F24  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4408   002F28  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4409   002F2C  6EDF               	movwf	indf2,c
  4410   002F2E                     
  4411                           ;dc_motor.c: 458:         setMotorPWM(mL);
  4412   002F2E  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4413   002F32  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4414   002F36  EC30  F01A         	call	_setMotorPWM	;wreg free
  4415   002F3A                     
  4416                           ;dc_motor.c: 459:         setMotorPWM(mR);
  4417   002F3A  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4418   002F3E  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4419   002F42  EC30  F01A         	call	_setMotorPWM	;wreg free
  4420   002F46                     
  4421                           ;dc_motor.c: 460:         for (i=0;i<straightRamp;i++) {
  4422   002F46  0E00               	movlw	0
  4423   002F48  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4424   002F4A  0E00               	movlw	0
  4425   002F4C  6E29               	movwf	reverseOneSquare@i^0,c
  4426   002F4E  EFB2  F017         	goto	l619
  4427   002F52                     l2779:
  4428                           
  4429                           ;dc_motor.c: 461:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4430   002F52  0ED0               	movlw	208
  4431   002F54  6E26               	movwf	??_reverseOneSquare^0,c
  4432   002F56  0ECA               	movlw	202
  4433   002F58                     u3357:
  4434   002F58  2EE8               	decfsz	wreg,f,c
  4435   002F5A  D7FE               	bra	u3357
  4436   002F5C  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4437   002F5E  D7FC               	bra	u3357
  4438   002F60                     
  4439                           ;dc_motor.c: 462:         }
  4440   002F60  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4441   002F62  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4442   002F64                     l619:
  4443   002F64  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4444   002F66  6E26               	movwf	??_reverseOneSquare^0,c
  4445   002F68  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4446   002F6A  5026               	movf	??_reverseOneSquare^0,w,c
  4447   002F6C  5C29               	subwf	reverseOneSquare@i^0,w,c
  4448   002F6E  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4449   002F70  0A80               	xorlw	128
  4450   002F72  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4451   002F74  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4452   002F76  0A80               	xorlw	128
  4453   002F78  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4454   002F7A  A0D8               	btfss	status,0,c
  4455   002F7C  EFC2  F017         	goto	u1511
  4456   002F80  EFC4  F017         	goto	u1510
  4457   002F84                     u1511:
  4458   002F84  EFA9  F017         	goto	l2779
  4459   002F88                     u1510:
  4460   002F88                     
  4461                           ;dc_motor.c: 463:     }
  4462   002F88  4A2B               	infsnz	reverseOneSquare@cur_power^0,f,c
  4463   002F8A  2A2C               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  4464   002F8C                     l2785:
  4465   002F8C  5023               	movf	reverseOneSquare@straightSpeed^0,w,c
  4466   002F8E  6E26               	movwf	??_reverseOneSquare^0,c
  4467   002F90  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4468   002F92  502B               	movf	reverseOneSquare@cur_power^0,w,c
  4469   002F94  5C26               	subwf	??_reverseOneSquare^0,w,c
  4470   002F96  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4471   002F98  0A80               	xorlw	128
  4472   002F9A  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4473   002F9C  502C               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  4474   002F9E  0A80               	xorlw	128
  4475   002FA0  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4476   002FA2  B0D8               	btfsc	status,0,c
  4477   002FA4  EFD6  F017         	goto	u1521
  4478   002FA8  EFD8  F017         	goto	u1520
  4479   002FAC                     u1521:
  4480   002FAC  EF7D  F017         	goto	l2771
  4481   002FB0                     u1520:
  4482   002FB0                     
  4483                           ;dc_motor.c: 465:     for (i=0;i<reverseDuration;i++) {
  4484   002FB0  0E00               	movlw	0
  4485   002FB2  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4486   002FB4  0E00               	movlw	0
  4487   002FB6  6E29               	movwf	reverseOneSquare@i^0,c
  4488   002FB8  EFE7  F017         	goto	l623
  4489   002FBC                     l2789:
  4490                           
  4491                           ;dc_motor.c: 466:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4492   002FBC  0ED0               	movlw	208
  4493   002FBE  6E26               	movwf	??_reverseOneSquare^0,c
  4494   002FC0  0ECA               	movlw	202
  4495   002FC2                     u3367:
  4496   002FC2  2EE8               	decfsz	wreg,f,c
  4497   002FC4  D7FE               	bra	u3367
  4498   002FC6  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4499   002FC8  D7FC               	bra	u3367
  4500   002FCA                     
  4501                           ;dc_motor.c: 467:         }
  4502   002FCA  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4503   002FCC  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4504   002FCE                     l623:
  4505   002FCE  5024               	movf	reverseOneSquare@reverseDuration^0,w,c
  4506   002FD0  6E26               	movwf	??_reverseOneSquare^0,c
  4507   002FD2  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4508   002FD4  5026               	movf	??_reverseOneSquare^0,w,c
  4509   002FD6  5C29               	subwf	reverseOneSquare@i^0,w,c
  4510   002FD8  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4511   002FDA  0A80               	xorlw	128
  4512   002FDC  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4513   002FDE  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4514   002FE0  0A80               	xorlw	128
  4515   002FE2  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4516   002FE4  A0D8               	btfss	status,0,c
  4517   002FE6  EFF7  F017         	goto	u1531
  4518   002FEA  EFF9  F017         	goto	u1530
  4519   002FEE                     u1531:
  4520   002FEE  EFDE  F017         	goto	l2789
  4521   002FF2                     u1530:
  4522   002FF2                     
  4523                           ;dc_motor.c: 469:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  4524   002FF2  C023  F02B         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  4525   002FF6  6A2C               	clrf	(reverseOneSquare@cur_power+1)^0,c
  4526   002FF8                     l2793:
  4527   002FF8  BE2C               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  4528   002FFA  EF03  F018         	goto	u1540
  4529   002FFE  EF01  F018         	goto	u1541
  4530   003002                     u1541:
  4531   003002  EF05  F018         	goto	l2797
  4532   003006                     u1540:
  4533   003006  EF51  F018         	goto	l2813
  4534   00300A                     l2797:
  4535                           
  4536                           ;dc_motor.c: 470:         mL->power = cur_power+mL->compensation;
  4537   00300A  EE20 F009          	lfsr	2,9
  4538   00300E  501F               	movf	reverseOneSquare@mL^0,w,c
  4539   003010  26D9               	addwf	fsr2l,f,c
  4540   003012  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4541   003014  22DA               	addwfc	fsr2h,f,c
  4542   003016  50DF               	movf	indf2,w,c
  4543   003018  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4544   00301A  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4545   00301E  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4546   003022  6EDF               	movwf	indf2,c
  4547                           
  4548                           ;dc_motor.c: 471:         mR->power = cur_power+mR->compensation;
  4549   003024  EE20 F009          	lfsr	2,9
  4550   003028  5021               	movf	reverseOneSquare@mR^0,w,c
  4551   00302A  26D9               	addwf	fsr2l,f,c
  4552   00302C  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4553   00302E  22DA               	addwfc	fsr2h,f,c
  4554   003030  50DF               	movf	indf2,w,c
  4555   003032  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4556   003034  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4557   003038  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4558   00303C  6EDF               	movwf	indf2,c
  4559   00303E                     
  4560                           ;dc_motor.c: 472:         setMotorPWM(mL);
  4561   00303E  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4562   003042  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4563   003046  EC30  F01A         	call	_setMotorPWM	;wreg free
  4564   00304A                     
  4565                           ;dc_motor.c: 473:         setMotorPWM(mR);
  4566   00304A  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4567   00304E  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4568   003052  EC30  F01A         	call	_setMotorPWM	;wreg free
  4569   003056                     
  4570                           ;dc_motor.c: 474:         for (i=0;i<straightRamp;i++) {
  4571   003056  0E00               	movlw	0
  4572   003058  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4573   00305A  0E00               	movlw	0
  4574   00305C  6E29               	movwf	reverseOneSquare@i^0,c
  4575   00305E  EF3A  F018         	goto	l628
  4576   003062                     l2805:
  4577                           
  4578                           ;dc_motor.c: 475:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4579   003062  0ED0               	movlw	208
  4580   003064  6E26               	movwf	??_reverseOneSquare^0,c
  4581   003066  0ECA               	movlw	202
  4582   003068                     u3377:
  4583   003068  2EE8               	decfsz	wreg,f,c
  4584   00306A  D7FE               	bra	u3377
  4585   00306C  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4586   00306E  D7FC               	bra	u3377
  4587   003070                     
  4588                           ;dc_motor.c: 476:         }
  4589   003070  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4590   003072  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4591   003074                     l628:
  4592   003074  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4593   003076  6E26               	movwf	??_reverseOneSquare^0,c
  4594   003078  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4595   00307A  5026               	movf	??_reverseOneSquare^0,w,c
  4596   00307C  5C29               	subwf	reverseOneSquare@i^0,w,c
  4597   00307E  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4598   003080  0A80               	xorlw	128
  4599   003082  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4600   003084  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4601   003086  0A80               	xorlw	128
  4602   003088  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4603   00308A  A0D8               	btfss	status,0,c
  4604   00308C  EF4A  F018         	goto	u1551
  4605   003090  EF4C  F018         	goto	u1550
  4606   003094                     u1551:
  4607   003094  EF31  F018         	goto	l2805
  4608   003098                     u1550:
  4609   003098                     
  4610                           ;dc_motor.c: 477:     }
  4611   003098  062B               	decf	reverseOneSquare@cur_power^0,f,c
  4612   00309A  A0D8               	btfss	status,0,c
  4613   00309C  062C               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  4614   00309E  EFFC  F017         	goto	l2793
  4615   0030A2                     l2813:
  4616                           
  4617                           ;dc_motor.c: 478:     mL->power = 0;
  4618   0030A2  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4619   0030A6  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4620   0030AA  6ADF               	clrf	indf2,c
  4621                           
  4622                           ;dc_motor.c: 479:     mR->power = 0;
  4623   0030AC  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4624   0030B0  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4625   0030B4  6ADF               	clrf	indf2,c
  4626   0030B6  0012               	return		;funcret
  4627   0030B8                     __end_of_reverseOneSquare:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function _resetTimer *****************
  4631 ;; Defined at:
  4632 ;;		line 23 in file "timers.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;Total ram usage:        0 bytes
  4651 ;; Hardware stack levels used: 1
  4652 ;; Hardware stack levels required when called: 5
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_main
  4657 ;;		_returnHome
  4658 ;;		_lostReturnHome
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text6
  4663   0040CE                     __ptext6:
  4664                           	callstack 0
  4665   0040CE                     _resetTimer:
  4666                           	callstack 25
  4667   0040CE                     
  4668                           ;timers.c: 25:     TMR0H=0;
  4669   0040CE  0E00               	movlw	0
  4670   0040D0  6ED4               	movwf	212,c	;volatile
  4671                           
  4672                           ;timers.c: 26:     TMR0L=0;
  4673   0040D2  0E00               	movlw	0
  4674   0040D4  6ED3               	movwf	211,c	;volatile
  4675   0040D6  0012               	return		;funcret
  4676   0040D8                     __end_of_resetTimer:
  4677                           	callstack 0
  4678                           
  4679 ;; *************** function _get16bitTMR0val *****************
  4680 ;; Defined at:
  4681 ;;		line 33 in file "timers.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;  timer_val       2   19[COMRAM] unsigned int 
  4686 ;;  timer_high      2   17[COMRAM] unsigned int 
  4687 ;;  timer_low       2   15[COMRAM] unsigned int 
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  2   11[COMRAM] unsigned int 
  4690 ;; Registers used:
  4691 ;;		wreg, status,2, status,0
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4698 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4700 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4701 ;;Total ram usage:       10 bytes
  4702 ;; Hardware stack levels used: 1
  4703 ;; Hardware stack levels required when called: 5
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_main
  4708 ;;		_returnHome
  4709 ;;		_lostReturnHome
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text7
  4714   003ECA                     __ptext7:
  4715                           	callstack 0
  4716   003ECA                     _get16bitTMR0val:
  4717                           	callstack 23
  4718   003ECA                     
  4719                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  4720   003ECA  CFD3 F010          	movff	4051,get16bitTMR0val@timer_low	;volatile
  4721   003ECE  6A11               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  4722                           
  4723                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  4724   003ED0  CFD4 F012          	movff	4052,get16bitTMR0val@timer_high	;volatile
  4725   003ED4  6A13               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  4726   003ED6                     
  4727                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  4728   003ED6  5012               	movf	get16bitTMR0val@timer_high^0,w,c
  4729   003ED8  6E0F               	movwf	(??_get16bitTMR0val+1)^0,c
  4730   003EDA  6A0E               	clrf	??_get16bitTMR0val^0,c
  4731   003EDC  5010               	movf	get16bitTMR0val@timer_low^0,w,c
  4732   003EDE  100E               	iorwf	??_get16bitTMR0val^0,w,c
  4733   003EE0  6E14               	movwf	get16bitTMR0val@timer_val^0,c
  4734   003EE2  5011               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  4735   003EE4  100F               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  4736   003EE6  6E15               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  4737   003EE8                     
  4738                           ;timers.c: 39:     return timer_val;
  4739   003EE8  C014  F00C         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  4740   003EEC  C015  F00D         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  4741   003EF0  0012               	return		;funcret
  4742   003EF2                     __end_of_get16bitTMR0val:
  4743                           	callstack 0
  4744                           
  4745 ;; *************** function _fullSpeedAhead *****************
  4746 ;; Defined at:
  4747 ;;		line 432 in file "dc_motor.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4750 ;;		 -> main@motorL(10), 
  4751 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4752 ;;		 -> main@motorR(10), 
  4753 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4754 ;;  straightRamp    1   35[COMRAM] unsigned char 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  cur_power       2   41[COMRAM] int 
  4757 ;;  i               2   39[COMRAM] int 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4767 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4768 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4769 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4770 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4771 ;;Total ram usage:       13 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 7
  4774 ;; This function calls:
  4775 ;;		_setMotorPWM
  4776 ;; This function is called by:
  4777 ;;		_main
  4778 ;;		_move
  4779 ;;		_returnHome
  4780 ;;		_lostReturnHome
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text8
  4785   00392A                     __ptext8:
  4786                           	callstack 0
  4787   00392A                     _fullSpeedAhead:
  4788                           	callstack 21
  4789   00392A                     
  4790                           ;dc_motor.c: 432: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 433: {;dc_motor.c: 434:     mL->direction = 1;
  4791   00392A  EE20 F001          	lfsr	2,1
  4792   00392E  501F               	movf	fullSpeedAhead@mL^0,w,c
  4793   003930  26D9               	addwf	fsr2l,f,c
  4794   003932  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4795   003934  22DA               	addwfc	fsr2h,f,c
  4796   003936  0E01               	movlw	1
  4797   003938  6EDF               	movwf	indf2,c
  4798                           
  4799                           ;dc_motor.c: 435:     mR->direction = 1;
  4800   00393A  EE20 F001          	lfsr	2,1
  4801   00393E  5021               	movf	fullSpeedAhead@mR^0,w,c
  4802   003940  26D9               	addwf	fsr2l,f,c
  4803   003942  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4804   003944  22DA               	addwfc	fsr2h,f,c
  4805   003946  0E01               	movlw	1
  4806   003948  6EDF               	movwf	indf2,c
  4807   00394A                     
  4808                           ;dc_motor.c: 436:     int i;;dc_motor.c: 437:     int cur_power;;dc_motor.c: 438:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4809   00394A  0E00               	movlw	0
  4810   00394C  6E2B               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  4811   00394E  0E01               	movlw	1
  4812   003950  6E2A               	movwf	fullSpeedAhead@cur_power^0,c
  4813   003952  EFF4  F01C         	goto	l2619
  4814   003956                     l2605:
  4815                           
  4816                           ;dc_motor.c: 439:         mL->power = cur_power+mL->compensation;
  4817   003956  EE20 F009          	lfsr	2,9
  4818   00395A  501F               	movf	fullSpeedAhead@mL^0,w,c
  4819   00395C  26D9               	addwf	fsr2l,f,c
  4820   00395E  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4821   003960  22DA               	addwfc	fsr2h,f,c
  4822   003962  50DF               	movf	indf2,w,c
  4823   003964  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4824   003966  C01F  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4825   00396A  C020  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4826   00396E  6EDF               	movwf	indf2,c
  4827                           
  4828                           ;dc_motor.c: 440:         mR->power = cur_power+mR->compensation;
  4829   003970  EE20 F009          	lfsr	2,9
  4830   003974  5021               	movf	fullSpeedAhead@mR^0,w,c
  4831   003976  26D9               	addwf	fsr2l,f,c
  4832   003978  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4833   00397A  22DA               	addwfc	fsr2h,f,c
  4834   00397C  50DF               	movf	indf2,w,c
  4835   00397E  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4836   003980  C021  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4837   003984  C022  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4838   003988  6EDF               	movwf	indf2,c
  4839   00398A                     
  4840                           ;dc_motor.c: 441:         setMotorPWM(mL);
  4841   00398A  C01F  F019         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4842   00398E  C020  F01A         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4843   003992  EC30  F01A         	call	_setMotorPWM	;wreg free
  4844   003996                     
  4845                           ;dc_motor.c: 442:         setMotorPWM(mR);
  4846   003996  C021  F019         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4847   00399A  C022  F01A         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4848   00399E  EC30  F01A         	call	_setMotorPWM	;wreg free
  4849   0039A2                     
  4850                           ;dc_motor.c: 443:         for (i=0;i<straightRamp;i++) {
  4851   0039A2  0E00               	movlw	0
  4852   0039A4  6E29               	movwf	(fullSpeedAhead@i+1)^0,c
  4853   0039A6  0E00               	movlw	0
  4854   0039A8  6E28               	movwf	fullSpeedAhead@i^0,c
  4855   0039AA  EFE0  F01C         	goto	l610
  4856   0039AE                     l2613:
  4857                           
  4858                           ;dc_motor.c: 444:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4859   0039AE  0ED0               	movlw	208
  4860   0039B0  6E25               	movwf	??_fullSpeedAhead^0,c
  4861   0039B2  0ECA               	movlw	202
  4862   0039B4                     u3387:
  4863   0039B4  2EE8               	decfsz	wreg,f,c
  4864   0039B6  D7FE               	bra	u3387
  4865   0039B8  2E25               	decfsz	??_fullSpeedAhead^0,f,c
  4866   0039BA  D7FC               	bra	u3387
  4867   0039BC                     
  4868                           ;dc_motor.c: 445:         }
  4869   0039BC  4A28               	infsnz	fullSpeedAhead@i^0,f,c
  4870   0039BE  2A29               	incf	(fullSpeedAhead@i+1)^0,f,c
  4871   0039C0                     l610:
  4872   0039C0  5024               	movf	fullSpeedAhead@straightRamp^0,w,c
  4873   0039C2  6E25               	movwf	??_fullSpeedAhead^0,c
  4874   0039C4  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  4875   0039C6  5025               	movf	??_fullSpeedAhead^0,w,c
  4876   0039C8  5C28               	subwf	fullSpeedAhead@i^0,w,c
  4877   0039CA  5029               	movf	(fullSpeedAhead@i+1)^0,w,c
  4878   0039CC  0A80               	xorlw	128
  4879   0039CE  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  4880   0039D0  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  4881   0039D2  0A80               	xorlw	128
  4882   0039D4  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  4883   0039D6  A0D8               	btfss	status,0,c
  4884   0039D8  EFF0  F01C         	goto	u1351
  4885   0039DC  EFF2  F01C         	goto	u1350
  4886   0039E0                     u1351:
  4887   0039E0  EFD7  F01C         	goto	l2613
  4888   0039E4                     u1350:
  4889   0039E4                     
  4890                           ;dc_motor.c: 446:     }
  4891   0039E4  4A2A               	infsnz	fullSpeedAhead@cur_power^0,f,c
  4892   0039E6  2A2B               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  4893   0039E8                     l2619:
  4894   0039E8  5023               	movf	fullSpeedAhead@straightSpeed^0,w,c
  4895   0039EA  6E25               	movwf	??_fullSpeedAhead^0,c
  4896   0039EC  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  4897   0039EE  502A               	movf	fullSpeedAhead@cur_power^0,w,c
  4898   0039F0  5C25               	subwf	??_fullSpeedAhead^0,w,c
  4899   0039F2  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  4900   0039F4  0A80               	xorlw	128
  4901   0039F6  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  4902   0039F8  502B               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  4903   0039FA  0A80               	xorlw	128
  4904   0039FC  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  4905   0039FE  B0D8               	btfsc	status,0,c
  4906   003A00  EF04  F01D         	goto	u1361
  4907   003A04  EF06  F01D         	goto	u1360
  4908   003A08                     u1361:
  4909   003A08  EFAB  F01C         	goto	l2605
  4910   003A0C                     u1360:
  4911   003A0C  0012               	return		;funcret
  4912   003A0E                     __end_of_fullSpeedAhead:
  4913                           	callstack 0
  4914                           
  4915 ;; *************** function _initUSART4 *****************
  4916 ;; Defined at:
  4917 ;;		line 4 in file "serial.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		wreg, status,2
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4935 ;;Total ram usage:        0 bytes
  4936 ;; Hardware stack levels used: 1
  4937 ;; Hardware stack levels required when called: 5
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_main
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text9
  4946   004038                     __ptext9:
  4947                           	callstack 0
  4948   004038                     _initUSART4:
  4949                           	callstack 25
  4950   004038                     
  4951                           ;serial.c: 7:     RC0PPS = 0x12;
  4952   004038  0E12               	movlw	18
  4953   00403A  010E               	movlb	14	; () banked
  4954   00403C  6F62               	movwf	98,b	;volatile
  4955                           
  4956                           ;serial.c: 8:     RX4PPS = 0x11;
  4957   00403E  0E11               	movlw	17
  4958   004040  6F15               	movwf	21,b	;volatile
  4959   004042                     
  4960                           ; BSR set to: 14
  4961                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  4962   004042  97E9               	bcf	233,3,b	;volatile
  4963   004044                     
  4964                           ; BSR set to: 14
  4965                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  4966   004044  95E8               	bcf	232,2,b	;volatile
  4967                           
  4968                           ;serial.c: 13:     SP4BRGL = 51;
  4969   004046  0E33               	movlw	51
  4970   004048  6FE5               	movwf	229,b	;volatile
  4971                           
  4972                           ;serial.c: 14:     SP4BRGH = 0;
  4973   00404A  0E00               	movlw	0
  4974   00404C  6FE6               	movwf	230,b	;volatile
  4975   00404E                     
  4976                           ; BSR set to: 14
  4977                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  4978   00404E  89E7               	bsf	231,4,b	;volatile
  4979   004050                     
  4980                           ; BSR set to: 14
  4981                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  4982   004050  8BE8               	bsf	232,5,b	;volatile
  4983   004052                     
  4984                           ; BSR set to: 14
  4985                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  4986   004052  8FE7               	bsf	231,7,b	;volatile
  4987   004054                     
  4988                           ; BSR set to: 14
  4989   004054  0012               	return		;funcret
  4990   004056                     __end_of_initUSART4:
  4991                           	callstack 0
  4992                           
  4993 ;; *************** function _initDCmotorsPWM *****************
  4994 ;; Defined at:
  4995 ;;		line 8 in file "dc_motor.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  PWMperiod       2   11[COMRAM] unsigned int 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5013 ;;Total ram usage:        2 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 5
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_main
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text10
  5024   003AD2                     __ptext10:
  5025                           	callstack 0
  5026   003AD2                     _initDCmotorsPWM:
  5027                           	callstack 25
  5028   003AD2                     
  5029                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  5030   003AD2  947D               	bcf	125,2,c	;volatile
  5031                           
  5032                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  5033   003AD4  9485               	bcf	133,2,c	;volatile
  5034                           
  5035                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  5036   003AD6  987D               	bcf	125,4,c	;volatile
  5037                           
  5038                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  5039   003AD8  9885               	bcf	133,4,c	;volatile
  5040                           
  5041                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  5042   003ADA  9E7B               	bcf	123,7,c	;volatile
  5043                           
  5044                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  5045   003ADC  9E83               	bcf	131,7,c	;volatile
  5046                           
  5047                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  5048   003ADE  9C7F               	bcf	127,6,c	;volatile
  5049                           
  5050                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  5051   003AE0  9C87               	bcf	135,6,c	;volatile
  5052   003AE2                     
  5053                           ;dc_motor.c: 21:     RE2PPS=0x05;
  5054   003AE2  0E05               	movlw	5
  5055   003AE4  010E               	movlb	14	; () banked
  5056   003AE6  6F74               	movwf	116,b	;volatile
  5057                           
  5058                           ;dc_motor.c: 22:     RE4PPS=0x06;
  5059   003AE8  0E06               	movlw	6
  5060   003AEA  6F76               	movwf	118,b	;volatile
  5061                           
  5062                           ;dc_motor.c: 23:     RC7PPS=0x07;
  5063   003AEC  0E07               	movlw	7
  5064   003AEE  6F69               	movwf	105,b	;volatile
  5065                           
  5066                           ;dc_motor.c: 24:     RG6PPS=0x08;
  5067   003AF0  0E08               	movlw	8
  5068   003AF2  6F88               	movwf	136,b	;volatile
  5069                           
  5070                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  5071   003AF4  50BD               	movf	189,w,c	;volatile
  5072   003AF6  0B8F               	andlw	-113
  5073   003AF8  0930               	iorlw	48
  5074   003AFA  6EBD               	movwf	189,c	;volatile
  5075                           
  5076                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  5077   003AFC  0EE0               	movlw	-32
  5078   003AFE  16BE               	andwf	190,f,c	;volatile
  5079                           
  5080                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  5081   003B00  50BF               	movf	191,w,c	;volatile
  5082   003B02  0BF0               	andlw	-16
  5083   003B04  0901               	iorlw	1
  5084   003B06  6EBF               	movwf	191,c	;volatile
  5085   003B08                     
  5086                           ; BSR set to: 14
  5087                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  5088   003B08  C00C  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  5089   003B0C                     
  5090                           ; BSR set to: 14
  5091                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  5092   003B0C  8EBD               	bsf	189,7,c	;volatile
  5093                           
  5094                           ;dc_motor.c: 38:     CCPR1H=0;
  5095   003B0E  0E00               	movlw	0
  5096   003B10  6EAA               	movwf	170,c	;volatile
  5097                           
  5098                           ;dc_motor.c: 39:     CCPR2H=0;
  5099   003B12  0E00               	movlw	0
  5100   003B14  6EA6               	movwf	166,c	;volatile
  5101                           
  5102                           ;dc_motor.c: 40:     CCPR3H=0;
  5103   003B16  0E00               	movlw	0
  5104   003B18  010F               	movlb	15	; () banked
  5105   003B1A  6F25               	movwf	37,b	;volatile
  5106                           
  5107                           ;dc_motor.c: 41:     CCPR4H=0;
  5108   003B1C  0E00               	movlw	0
  5109   003B1E  6F21               	movwf	33,b	;volatile
  5110                           
  5111                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  5112   003B20  0EFC               	movlw	-4
  5113   003B22  16AD               	andwf	173,f,c	;volatile
  5114                           
  5115                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  5116   003B24  0EF3               	movlw	-13
  5117   003B26  16AD               	andwf	173,f,c	;volatile
  5118                           
  5119                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  5120   003B28  0ECF               	movlw	-49
  5121   003B2A  16AD               	andwf	173,f,c	;volatile
  5122                           
  5123                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  5124   003B2C  0E3F               	movlw	-193
  5125   003B2E  16AD               	andwf	173,f,c	;volatile
  5126   003B30                     
  5127                           ; BSR set to: 15
  5128                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  5129   003B30  88AB               	bsf	171,4,c	;volatile
  5130                           
  5131                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  5132   003B32  50AB               	movf	171,w,c	;volatile
  5133   003B34  0BF0               	andlw	-16
  5134   003B36  090C               	iorlw	12
  5135   003B38  6EAB               	movwf	171,c	;volatile
  5136   003B3A                     
  5137                           ; BSR set to: 15
  5138                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  5139   003B3A  8EAB               	bsf	171,7,c	;volatile
  5140   003B3C                     
  5141                           ; BSR set to: 15
  5142                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  5143   003B3C  88A7               	bsf	167,4,c	;volatile
  5144                           
  5145                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  5146   003B3E  50A7               	movf	167,w,c	;volatile
  5147   003B40  0BF0               	andlw	-16
  5148   003B42  090C               	iorlw	12
  5149   003B44  6EA7               	movwf	167,c	;volatile
  5150   003B46                     
  5151                           ; BSR set to: 15
  5152                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  5153   003B46  8EA7               	bsf	167,7,c	;volatile
  5154   003B48                     
  5155                           ; BSR set to: 15
  5156                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  5157   003B48  8926               	bsf	38,4,b	;volatile
  5158                           
  5159                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  5160   003B4A  5126               	movf	38,w,b	;volatile
  5161   003B4C  0BF0               	andlw	-16
  5162   003B4E  090C               	iorlw	12
  5163   003B50  6F26               	movwf	38,b	;volatile
  5164   003B52                     
  5165                           ; BSR set to: 15
  5166                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  5167   003B52  8F26               	bsf	38,7,b	;volatile
  5168   003B54                     
  5169                           ; BSR set to: 15
  5170                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  5171   003B54  8922               	bsf	34,4,b	;volatile
  5172                           
  5173                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  5174   003B56  5122               	movf	34,w,b	;volatile
  5175   003B58  0BF0               	andlw	-16
  5176   003B5A  090C               	iorlw	12
  5177   003B5C  6F22               	movwf	34,b	;volatile
  5178   003B5E                     
  5179                           ; BSR set to: 15
  5180                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  5181   003B5E  8F22               	bsf	34,7,b	;volatile
  5182   003B60                     
  5183                           ; BSR set to: 15
  5184   003B60  0012               	return		;funcret
  5185   003B62                     __end_of_initDCmotorsPWM:
  5186                           	callstack 0
  5187                           
  5188 ;; *************** function _color_detect *****************
  5189 ;; Defined at:
  5190 ;;		line 138 in file "color.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  RGBC_n          8   11[COMRAM] struct RGBC_val
  5193 ;;  red             2   19[COMRAM] PTR struct RGB_calib
  5194 ;;		 -> main@red(6), 
  5195 ;;  green           2   21[COMRAM] PTR struct RGB_calib
  5196 ;;		 -> main@green(6), 
  5197 ;;  blue            2   23[COMRAM] PTR struct RGB_calib
  5198 ;;		 -> main@blue(6), 
  5199 ;;  yellow          2   25[COMRAM] PTR struct RGB_calib
  5200 ;;		 -> main@yellow(6), 
  5201 ;;  pink            2   27[COMRAM] PTR struct RGB_calib
  5202 ;;		 -> main@pink(6), 
  5203 ;;  orange          2   29[COMRAM] PTR struct RGB_calib
  5204 ;;		 -> main@orange(6), 
  5205 ;;  lightBlue       2   31[COMRAM] PTR struct RGB_calib
  5206 ;;		 -> main@lightblue(6), 
  5207 ;;  white           2   33[COMRAM] PTR struct RGB_calib
  5208 ;;		 -> main@white(6), 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  color           1   39[COMRAM] unsigned char 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      unsigned char 
  5213 ;; Registers used:
  5214 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5220 ;;      Params:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5222 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5223 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5224 ;;Total ram usage:       29 bytes
  5225 ;; Hardware stack levels used: 1
  5226 ;; Hardware stack levels required when called: 5
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_main
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text11
  5235   00283C                     __ptext11:
  5236                           	callstack 0
  5237   00283C                     _color_detect:
  5238                           	callstack 25
  5239   00283C                     
  5240                           ;color.c: 142:     if ((red->R)-30 < RGBC_n.R && RGBC_n.G < (red->G)+30 && RGBC_n.B < (r
      +                          ed->B)+30) {
  5241   00283C  C014  FFD9         	movff	color_detect@red,fsr2l
  5242   002840  C015  FFDA         	movff	color_detect@red+1,fsr2h
  5243   002844  CFDE F024          	movff	postinc2,??_color_detect
  5244   002848  CFDD F025          	movff	postdec2,??_color_detect+1
  5245   00284C  0EE2               	movlw	226
  5246   00284E  2424               	addwf	??_color_detect^0,w,c
  5247   002850  6E26               	movwf	(??_color_detect+2)^0,c
  5248   002852  0EFF               	movlw	255
  5249   002854  2025               	addwfc	(??_color_detect+1)^0,w,c
  5250   002856  6E27               	movwf	(??_color_detect+3)^0,c
  5251   002858  500C               	movf	color_detect@RGBC_n^0,w,c
  5252   00285A  5C26               	subwf	(??_color_detect+2)^0,w,c
  5253   00285C  500D               	movf	(color_detect@RGBC_n+1)^0,w,c
  5254   00285E  5827               	subwfb	(??_color_detect+3)^0,w,c
  5255   002860  B0D8               	btfsc	status,0,c
  5256   002862  EF35  F014         	goto	u1961
  5257   002866  EF37  F014         	goto	u1960
  5258   00286A                     u1961:
  5259   00286A  EF6D  F014         	goto	l3281
  5260   00286E                     u1960:
  5261   00286E  EE20 F002          	lfsr	2,2
  5262   002872  5014               	movf	color_detect@red^0,w,c
  5263   002874  26D9               	addwf	fsr2l,f,c
  5264   002876  5015               	movf	(color_detect@red+1)^0,w,c
  5265   002878  22DA               	addwfc	fsr2h,f,c
  5266   00287A  CFDE F024          	movff	postinc2,??_color_detect
  5267   00287E  CFDD F025          	movff	postdec2,??_color_detect+1
  5268   002882  0E1E               	movlw	30
  5269   002884  2624               	addwf	??_color_detect^0,f,c
  5270   002886  0E00               	movlw	0
  5271   002888  2225               	addwfc	(??_color_detect+1)^0,f,c
  5272   00288A  5024               	movf	??_color_detect^0,w,c
  5273   00288C  5C0E               	subwf	(color_detect@RGBC_n+2)^0,w,c
  5274   00288E  5025               	movf	(??_color_detect+1)^0,w,c
  5275   002890  580F               	subwfb	(color_detect@RGBC_n+3)^0,w,c
  5276   002892  B0D8               	btfsc	status,0,c
  5277   002894  EF4E  F014         	goto	u1971
  5278   002898  EF50  F014         	goto	u1970
  5279   00289C                     u1971:
  5280   00289C  EF6D  F014         	goto	l3281
  5281   0028A0                     u1970:
  5282   0028A0  EE20 F004          	lfsr	2,4
  5283   0028A4  5014               	movf	color_detect@red^0,w,c
  5284   0028A6  26D9               	addwf	fsr2l,f,c
  5285   0028A8  5015               	movf	(color_detect@red+1)^0,w,c
  5286   0028AA  22DA               	addwfc	fsr2h,f,c
  5287   0028AC  CFDE F024          	movff	postinc2,??_color_detect
  5288   0028B0  CFDD F025          	movff	postdec2,??_color_detect+1
  5289   0028B4  0E1E               	movlw	30
  5290   0028B6  2624               	addwf	??_color_detect^0,f,c
  5291   0028B8  0E00               	movlw	0
  5292   0028BA  2225               	addwfc	(??_color_detect+1)^0,f,c
  5293   0028BC  5024               	movf	??_color_detect^0,w,c
  5294   0028BE  5C10               	subwf	(color_detect@RGBC_n+4)^0,w,c
  5295   0028C0  5025               	movf	(??_color_detect+1)^0,w,c
  5296   0028C2  5811               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  5297   0028C4  B0D8               	btfsc	status,0,c
  5298   0028C6  EF67  F014         	goto	u1981
  5299   0028CA  EF69  F014         	goto	u1980
  5300   0028CE                     u1981:
  5301   0028CE  EF6D  F014         	goto	l3281
  5302   0028D2                     u1980:
  5303   0028D2                     
  5304                           ;color.c: 143:         color = 1;
  5305   0028D2  0E01               	movlw	1
  5306   0028D4  6E28               	movwf	color_detect@color^0,c
  5307                           
  5308                           ;color.c: 144:     }
  5309   0028D6  EF5C  F015         	goto	l156
  5310   0028DA                     l3281:
  5311   0028DA  C016  FFD9         	movff	color_detect@green,fsr2l
  5312   0028DE  C017  FFDA         	movff	color_detect@green+1,fsr2h
  5313   0028E2  CFDE F024          	movff	postinc2,??_color_detect
  5314   0028E6  CFDD F025          	movff	postdec2,??_color_detect+1
  5315   0028EA  0EE2               	movlw	226
  5316   0028EC  2424               	addwf	??_color_detect^0,w,c
  5317   0028EE  6E26               	movwf	(??_color_detect+2)^0,c
  5318   0028F0  0EFF               	movlw	255
  5319   0028F2  2025               	addwfc	(??_color_detect+1)^0,w,c
  5320   0028F4  6E27               	movwf	(??_color_detect+3)^0,c
  5321   0028F6  500C               	movf	color_detect@RGBC_n^0,w,c
  5322   0028F8  5C26               	subwf	(??_color_detect+2)^0,w,c
  5323   0028FA  500D               	movf	(color_detect@RGBC_n+1)^0,w,c
  5324   0028FC  5827               	subwfb	(??_color_detect+3)^0,w,c
  5325   0028FE  B0D8               	btfsc	status,0,c
  5326   002900  EF84  F014         	goto	u1991
  5327   002904  EF86  F014         	goto	u1990
  5328   002908                     u1991:
  5329   002908  EFF0  F014         	goto	l3293
  5330   00290C                     u1990:
  5331   00290C  C016  FFD9         	movff	color_detect@green,fsr2l
  5332   002910  C017  FFDA         	movff	color_detect@green+1,fsr2h
  5333   002914  CFDE F024          	movff	postinc2,??_color_detect
  5334   002918  CFDD F025          	movff	postdec2,??_color_detect+1
  5335   00291C  0E1E               	movlw	30
  5336   00291E  2624               	addwf	??_color_detect^0,f,c
  5337   002920  0E00               	movlw	0
  5338   002922  2225               	addwfc	(??_color_detect+1)^0,f,c
  5339   002924  5024               	movf	??_color_detect^0,w,c
  5340   002926  5C0C               	subwf	color_detect@RGBC_n^0,w,c
  5341   002928  5025               	movf	(??_color_detect+1)^0,w,c
  5342   00292A  580D               	subwfb	(color_detect@RGBC_n+1)^0,w,c
  5343   00292C  B0D8               	btfsc	status,0,c
  5344   00292E  EF9B  F014         	goto	u2001
  5345   002932  EF9D  F014         	goto	u2000
  5346   002936                     u2001:
  5347   002936  EFF0  F014         	goto	l3293
  5348   00293A                     u2000:
  5349   00293A  EE20 F002          	lfsr	2,2
  5350   00293E  5016               	movf	color_detect@green^0,w,c
  5351   002940  26D9               	addwf	fsr2l,f,c
  5352   002942  5017               	movf	(color_detect@green+1)^0,w,c
  5353   002944  22DA               	addwfc	fsr2h,f,c
  5354   002946  CFDE F024          	movff	postinc2,??_color_detect
  5355   00294A  CFDD F025          	movff	postdec2,??_color_detect+1
  5356   00294E  0EE2               	movlw	226
  5357   002950  2424               	addwf	??_color_detect^0,w,c
  5358   002952  6E26               	movwf	(??_color_detect+2)^0,c
  5359   002954  0EFF               	movlw	255
  5360   002956  2025               	addwfc	(??_color_detect+1)^0,w,c
  5361   002958  6E27               	movwf	(??_color_detect+3)^0,c
  5362   00295A  500E               	movf	(color_detect@RGBC_n+2)^0,w,c
  5363   00295C  5C26               	subwf	(??_color_detect+2)^0,w,c
  5364   00295E  500F               	movf	(color_detect@RGBC_n+3)^0,w,c
  5365   002960  5827               	subwfb	(??_color_detect+3)^0,w,c
  5366   002962  B0D8               	btfsc	status,0,c
  5367   002964  EFB6  F014         	goto	u2011
  5368   002968  EFB8  F014         	goto	u2010
  5369   00296C                     u2011:
  5370   00296C  EFF0  F014         	goto	l3293
  5371   002970                     u2010:
  5372   002970  EE20 F004          	lfsr	2,4
  5373   002974  5016               	movf	color_detect@green^0,w,c
  5374   002976  26D9               	addwf	fsr2l,f,c
  5375   002978  5017               	movf	(color_detect@green+1)^0,w,c
  5376   00297A  22DA               	addwfc	fsr2h,f,c
  5377   00297C  CFDE F024          	movff	postinc2,??_color_detect
  5378   002980  CFDD F025          	movff	postdec2,??_color_detect+1
  5379   002984  0EE2               	movlw	226
  5380   002986  2424               	addwf	??_color_detect^0,w,c
  5381   002988  6E26               	movwf	(??_color_detect+2)^0,c
  5382   00298A  0EFF               	movlw	255
  5383   00298C  2025               	addwfc	(??_color_detect+1)^0,w,c
  5384   00298E  6E27               	movwf	(??_color_detect+3)^0,c
  5385   002990  5010               	movf	(color_detect@RGBC_n+4)^0,w,c
  5386   002992  5C26               	subwf	(??_color_detect+2)^0,w,c
  5387   002994  5011               	movf	(color_detect@RGBC_n+5)^0,w,c
  5388   002996  5827               	subwfb	(??_color_detect+3)^0,w,c
  5389   002998  B0D8               	btfsc	status,0,c
  5390   00299A  EFD1  F014         	goto	u2021
  5391   00299E  EFD3  F014         	goto	u2020
  5392   0029A2                     u2021:
  5393   0029A2  EFF0  F014         	goto	l3293
  5394   0029A6                     u2020:
  5395   0029A6  EE20 F004          	lfsr	2,4
  5396   0029AA  5016               	movf	color_detect@green^0,w,c
  5397   0029AC  26D9               	addwf	fsr2l,f,c
  5398   0029AE  5017               	movf	(color_detect@green+1)^0,w,c
  5399   0029B0  22DA               	addwfc	fsr2h,f,c
  5400   0029B2  CFDE F024          	movff	postinc2,??_color_detect
  5401   0029B6  CFDD F025          	movff	postdec2,??_color_detect+1
  5402   0029BA  0E1E               	movlw	30
  5403   0029BC  2624               	addwf	??_color_detect^0,f,c
  5404   0029BE  0E00               	movlw	0
  5405   0029C0  2225               	addwfc	(??_color_detect+1)^0,f,c
  5406   0029C2  5024               	movf	??_color_detect^0,w,c
  5407   0029C4  5C10               	subwf	(color_detect@RGBC_n+4)^0,w,c
  5408   0029C6  5025               	movf	(??_color_detect+1)^0,w,c
  5409   0029C8  5811               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  5410   0029CA  B0D8               	btfsc	status,0,c
  5411   0029CC  EFEA  F014         	goto	u2031
  5412   0029D0  EFEC  F014         	goto	u2030
  5413   0029D4                     u2031:
  5414   0029D4  EFF0  F014         	goto	l3293
  5415   0029D8                     u2030:
  5416   0029D8                     
  5417                           ;color.c: 147:         color = 2;
  5418   0029D8  0E02               	movlw	2
  5419   0029DA  6E28               	movwf	color_detect@color^0,c
  5420                           
  5421                           ;color.c: 148:     }
  5422   0029DC  EF5C  F015         	goto	l156
  5423   0029E0                     l3293:
  5424   0029E0  C018  FFD9         	movff	color_detect@blue,fsr2l
  5425   0029E4  C019  FFDA         	movff	color_detect@blue+1,fsr2h
  5426   0029E8  CFDE F024          	movff	postinc2,??_color_detect
  5427   0029EC  CFDD F025          	movff	postdec2,??_color_detect+1
  5428   0029F0  0E1E               	movlw	30
  5429   0029F2  2624               	addwf	??_color_detect^0,f,c
  5430   0029F4  0E00               	movlw	0
  5431   0029F6  2225               	addwfc	(??_color_detect+1)^0,f,c
  5432   0029F8  5024               	movf	??_color_detect^0,w,c
  5433   0029FA  5C0C               	subwf	color_detect@RGBC_n^0,w,c
  5434   0029FC  5025               	movf	(??_color_detect+1)^0,w,c
  5435   0029FE  580D               	subwfb	(color_detect@RGBC_n+1)^0,w,c
  5436   002A00  B0D8               	btfsc	status,0,c
  5437   002A02  EF05  F015         	goto	u2041
  5438   002A06  EF07  F015         	goto	u2040
  5439   002A0A                     u2041:
  5440   002A0A  EF5A  F015         	goto	l3303
  5441   002A0E                     u2040:
  5442   002A0E  EE20 F002          	lfsr	2,2
  5443   002A12  5018               	movf	color_detect@blue^0,w,c
  5444   002A14  26D9               	addwf	fsr2l,f,c
  5445   002A16  5019               	movf	(color_detect@blue+1)^0,w,c
  5446   002A18  22DA               	addwfc	fsr2h,f,c
  5447   002A1A  CFDE F024          	movff	postinc2,??_color_detect
  5448   002A1E  CFDD F025          	movff	postdec2,??_color_detect+1
  5449   002A22  0EE2               	movlw	226
  5450   002A24  2424               	addwf	??_color_detect^0,w,c
  5451   002A26  6E26               	movwf	(??_color_detect+2)^0,c
  5452   002A28  0EFF               	movlw	255
  5453   002A2A  2025               	addwfc	(??_color_detect+1)^0,w,c
  5454   002A2C  6E27               	movwf	(??_color_detect+3)^0,c
  5455   002A2E  500E               	movf	(color_detect@RGBC_n+2)^0,w,c
  5456   002A30  5C26               	subwf	(??_color_detect+2)^0,w,c
  5457   002A32  500F               	movf	(color_detect@RGBC_n+3)^0,w,c
  5458   002A34  5827               	subwfb	(??_color_detect+3)^0,w,c
  5459   002A36  B0D8               	btfsc	status,0,c
  5460   002A38  EF20  F015         	goto	u2051
  5461   002A3C  EF22  F015         	goto	u2050
  5462   002A40                     u2051:
  5463   002A40  EF5A  F015         	goto	l3303
  5464   002A44                     u2050:
  5465   002A44  EE20 F002          	lfsr	2,2
  5466   002A48  5018               	movf	color_detect@blue^0,w,c
  5467   002A4A  26D9               	addwf	fsr2l,f,c
  5468   002A4C  5019               	movf	(color_detect@blue+1)^0,w,c
  5469   002A4E  22DA               	addwfc	fsr2h,f,c
  5470   002A50  CFDE F024          	movff	postinc2,??_color_detect
  5471   002A54  CFDD F025          	movff	postdec2,??_color_detect+1
  5472   002A58  0E1E               	movlw	30
  5473   002A5A  2624               	addwf	??_color_detect^0,f,c
  5474   002A5C  0E00               	movlw	0
  5475   002A5E  2225               	addwfc	(??_color_detect+1)^0,f,c
  5476   002A60  5024               	movf	??_color_detect^0,w,c
  5477   002A62  5C0E               	subwf	(color_detect@RGBC_n+2)^0,w,c
  5478   002A64  5025               	movf	(??_color_detect+1)^0,w,c
  5479   002A66  580F               	subwfb	(color_detect@RGBC_n+3)^0,w,c
  5480   002A68  B0D8               	btfsc	status,0,c
  5481   002A6A  EF39  F015         	goto	u2061
  5482   002A6E  EF3B  F015         	goto	u2060
  5483   002A72                     u2061:
  5484   002A72  EF5A  F015         	goto	l3303
  5485   002A76                     u2060:
  5486   002A76  EE20 F004          	lfsr	2,4
  5487   002A7A  5018               	movf	color_detect@blue^0,w,c
  5488   002A7C  26D9               	addwf	fsr2l,f,c
  5489   002A7E  5019               	movf	(color_detect@blue+1)^0,w,c
  5490   002A80  22DA               	addwfc	fsr2h,f,c
  5491   002A82  CFDE F024          	movff	postinc2,??_color_detect
  5492   002A86  CFDD F025          	movff	postdec2,??_color_detect+1
  5493   002A8A  0EE2               	movlw	226
  5494   002A8C  2424               	addwf	??_color_detect^0,w,c
  5495   002A8E  6E26               	movwf	(??_color_detect+2)^0,c
  5496   002A90  0EFF               	movlw	255
  5497   002A92  2025               	addwfc	(??_color_detect+1)^0,w,c
  5498   002A94  6E27               	movwf	(??_color_detect+3)^0,c
  5499   002A96  5010               	movf	(color_detect@RGBC_n+4)^0,w,c
  5500   002A98  5C26               	subwf	(??_color_detect+2)^0,w,c
  5501   002A9A  5011               	movf	(color_detect@RGBC_n+5)^0,w,c
  5502   002A9C  5827               	subwfb	(??_color_detect+3)^0,w,c
  5503   002A9E  B0D8               	btfsc	status,0,c
  5504   002AA0  EF54  F015         	goto	u2071
  5505   002AA4  EF56  F015         	goto	u2070
  5506   002AA8                     u2071:
  5507   002AA8  EF5A  F015         	goto	l3303
  5508   002AAC                     u2070:
  5509   002AAC                     
  5510                           ;color.c: 151:         color = 3;
  5511   002AAC  0E03               	movlw	3
  5512   002AAE  6E28               	movwf	color_detect@color^0,c
  5513                           
  5514                           ;color.c: 152:     }
  5515   002AB0  EF5C  F015         	goto	l156
  5516   002AB4                     l3303:
  5517   002AB4  0E09               	movlw	9
  5518   002AB6  6E28               	movwf	color_detect@color^0,c
  5519   002AB8                     l156:
  5520                           
  5521                           ;color.c: 204:     return color;
  5522   002AB8  5028               	movf	color_detect@color^0,w,c
  5523   002ABA  0012               	return		;funcret
  5524   002ABC                     __end_of_color_detect:
  5525                           	callstack 0
  5526                           
  5527 ;; *************** function _color_click_init *****************
  5528 ;; Defined at:
  5529 ;;		line 7 in file "color.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;		None
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1    wreg      void 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0, cstack
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5547 ;;Total ram usage:        1 bytes
  5548 ;; Hardware stack levels used: 1
  5549 ;; Hardware stack levels required when called: 9
  5550 ;; This function calls:
  5551 ;;		_I2C_2_Master_Init
  5552 ;;		_color_clear_init_interrupts
  5553 ;;		_color_writetoaddr
  5554 ;; This function is called by:
  5555 ;;		_main
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text12
  5560   003E32                     __ptext12:
  5561                           	callstack 0
  5562   003E32                     _color_click_init:
  5563                           	callstack 21
  5564   003E32                     
  5565                           ;color.c: 10:     I2C_2_Master_Init();
  5566   003E32  EC50  F01F         	call	_I2C_2_Master_Init	;wreg free
  5567   003E36                     
  5568                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  5569   003E36  0E01               	movlw	1
  5570   003E38  6E0E               	movwf	color_writetoaddr@value^0,c
  5571   003E3A  0E00               	movlw	0
  5572   003E3C  ECEC  F01F         	call	_color_writetoaddr
  5573   003E40                     
  5574                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5575   003E40  0E3F               	movlw	63
  5576   003E42  6E15               	movwf	??_color_click_init^0,c
  5577   003E44  0E55               	movlw	85
  5578   003E46                     u3397:
  5579   003E46  2EE8               	decfsz	wreg,f,c
  5580   003E48  D7FE               	bra	u3397
  5581   003E4A  2E15               	decfsz	??_color_click_init^0,f,c
  5582   003E4C  D7FC               	bra	u3397
  5583   003E4E  0000               	nop	
  5584   003E50                     
  5585                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  5586   003E50  0E03               	movlw	3
  5587   003E52  6E0E               	movwf	color_writetoaddr@value^0,c
  5588   003E54  0E00               	movlw	0
  5589   003E56  ECEC  F01F         	call	_color_writetoaddr
  5590   003E5A                     
  5591                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  5592   003E5A  0ED5               	movlw	213
  5593   003E5C  6E0E               	movwf	color_writetoaddr@value^0,c
  5594   003E5E  0E01               	movlw	1
  5595   003E60  ECEC  F01F         	call	_color_writetoaddr
  5596   003E64                     
  5597                           ;color.c: 23:     color_clear_init_interrupts();
  5598   003E64  ECB1  F01D         	call	_color_clear_init_interrupts	;wreg free
  5599   003E68  0012               	return		;funcret
  5600   003E6A                     __end_of_color_click_init:
  5601                           	callstack 0
  5602                           
  5603 ;; *************** function _color_clear_init_interrupts *****************
  5604 ;; Defined at:
  5605 ;;		line 27 in file "color.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  low_threshol    2   18[COMRAM] unsigned int 
  5610 ;;  high_thresho    2   16[COMRAM] unsigned int 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      void 
  5613 ;; Registers used:
  5614 ;;		wreg, status,2, status,0, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5621 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5623 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5624 ;;Total ram usage:        5 bytes
  5625 ;; Hardware stack levels used: 1
  5626 ;; Hardware stack levels required when called: 8
  5627 ;; This function calls:
  5628 ;;		_I2C_2_Master_Start
  5629 ;;		_I2C_2_Master_Stop
  5630 ;;		_I2C_2_Master_Write
  5631 ;;		_color_writetoaddr
  5632 ;; This function is called by:
  5633 ;;		_color_click_init
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text13
  5638   003B62                     __ptext13:
  5639                           	callstack 0
  5640   003B62                     _color_clear_init_interrupts:
  5641                           	callstack 21
  5642   003B62                     
  5643                           ;color.c: 29:     I2C_2_Master_Start();
  5644   003B62  EC71  F020         	call	_I2C_2_Master_Start	;wreg free
  5645                           
  5646                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  5647   003B66  0E52               	movlw	82
  5648   003B68  EC5B  F020         	call	_I2C_2_Master_Write
  5649                           
  5650                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  5651   003B6C  0EE6               	movlw	230
  5652   003B6E  EC5B  F020         	call	_I2C_2_Master_Write
  5653                           
  5654                           ;color.c: 32:     I2C_2_Master_Stop();
  5655   003B72  EC6C  F020         	call	_I2C_2_Master_Stop	;wreg free
  5656   003B76                     
  5657                           ;color.c: 35:     unsigned int high_threshold = ambient + 12;
  5658   003B76  0E0C               	movlw	12
  5659   003B78  244E               	addwf	_ambient^0,w,c
  5660   003B7A  6E11               	movwf	color_clear_init_interrupts@high_threshold^0,c
  5661   003B7C  0E00               	movlw	0
  5662   003B7E  204F               	addwfc	(_ambient+1)^0,w,c
  5663   003B80  6E12               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  5664   003B82                     
  5665                           ;color.c: 36:     unsigned int low_threshold = ambient - 12;
  5666   003B82  0EF4               	movlw	244
  5667   003B84  244E               	addwf	_ambient^0,w,c
  5668   003B86  6E13               	movwf	color_clear_init_interrupts@low_threshold^0,c
  5669   003B88  0EFF               	movlw	255
  5670   003B8A  204F               	addwfc	(_ambient+1)^0,w,c
  5671   003B8C  6E14               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  5672                           
  5673                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
  5674   003B8E  0E13               	movlw	19
  5675   003B90  6E0E               	movwf	color_writetoaddr@value^0,c
  5676   003B92  0E00               	movlw	0
  5677   003B94  ECEC  F01F         	call	_color_writetoaddr
  5678   003B98                     
  5679                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5680   003B98  0E3F               	movlw	63
  5681   003B9A  6E10               	movwf	??_color_clear_init_interrupts^0,c
  5682   003B9C  0E55               	movlw	85
  5683   003B9E                     u3407:
  5684   003B9E  2EE8               	decfsz	wreg,f,c
  5685   003BA0  D7FE               	bra	u3407
  5686   003BA2  2E10               	decfsz	??_color_clear_init_interrupts^0,f,c
  5687   003BA4  D7FC               	bra	u3407
  5688   003BA6  0000               	nop	
  5689   003BA8                     
  5690                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
  5691   003BA8  5012               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  5692   003BAA  6E0E               	movwf	color_writetoaddr@value^0,c
  5693   003BAC  0E07               	movlw	7
  5694   003BAE  ECEC  F01F         	call	_color_writetoaddr
  5695   003BB2                     
  5696                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  5697   003BB2  C011  F00E         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  5698   003BB6  0E06               	movlw	6
  5699   003BB8  ECEC  F01F         	call	_color_writetoaddr
  5700   003BBC                     
  5701                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
  5702   003BBC  5014               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  5703   003BBE  6E0E               	movwf	color_writetoaddr@value^0,c
  5704   003BC0  0E05               	movlw	5
  5705   003BC2  ECEC  F01F         	call	_color_writetoaddr
  5706   003BC6                     
  5707                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  5708   003BC6  C013  F00E         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  5709   003BCA  0E04               	movlw	4
  5710   003BCC  ECEC  F01F         	call	_color_writetoaddr
  5711   003BD0                     
  5712                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
  5713   003BD0  0E04               	movlw	4
  5714   003BD2  6E0E               	movwf	color_writetoaddr@value^0,c
  5715   003BD4  0E0C               	movlw	12
  5716   003BD6  ECEC  F01F         	call	_color_writetoaddr
  5717   003BDA  0012               	return		;funcret
  5718   003BDC                     __end_of_color_clear_init_interrupts:
  5719                           	callstack 0
  5720                           
  5721 ;; *************** function _color_writetoaddr *****************
  5722 ;; Defined at:
  5723 ;;		line 50 in file "color.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  address         1    wreg     unsigned char 
  5726 ;;  value           1   13[COMRAM] unsigned char 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  address         1   14[COMRAM] unsigned char 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, status,2, status,0, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5738 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5742 ;;Total ram usage:        2 bytes
  5743 ;; Hardware stack levels used: 1
  5744 ;; Hardware stack levels required when called: 7
  5745 ;; This function calls:
  5746 ;;		_I2C_2_Master_Start
  5747 ;;		_I2C_2_Master_Stop
  5748 ;;		_I2C_2_Master_Write
  5749 ;; This function is called by:
  5750 ;;		_color_click_init
  5751 ;;		_color_clear_init_interrupts
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text14
  5756   003FD8                     __ptext14:
  5757                           	callstack 0
  5758   003FD8                     _color_writetoaddr:
  5759                           	callstack 22
  5760                           
  5761                           ;incstack = 0
  5762                           ;color_writetoaddr@address stored from wreg
  5763   003FD8  6E0F               	movwf	color_writetoaddr@address^0,c
  5764   003FDA                     
  5765                           ;color.c: 51:     I2C_2_Master_Start();
  5766   003FDA  EC71  F020         	call	_I2C_2_Master_Start	;wreg free
  5767                           
  5768                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
  5769   003FDE  0E52               	movlw	82
  5770   003FE0  EC5B  F020         	call	_I2C_2_Master_Write
  5771                           
  5772                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
  5773   003FE4  500F               	movf	color_writetoaddr@address^0,w,c
  5774   003FE6  0980               	iorlw	128
  5775   003FE8  EC5B  F020         	call	_I2C_2_Master_Write
  5776                           
  5777                           ;color.c: 54:     I2C_2_Master_Write(value);
  5778   003FEC  500E               	movf	color_writetoaddr@value^0,w,c
  5779   003FEE  EC5B  F020         	call	_I2C_2_Master_Write
  5780                           
  5781                           ;color.c: 55:     I2C_2_Master_Stop();
  5782   003FF2  EC6C  F020         	call	_I2C_2_Master_Stop	;wreg free
  5783   003FF6  0012               	return		;funcret
  5784   003FF8                     __end_of_color_writetoaddr:
  5785                           	callstack 0
  5786                           
  5787 ;; *************** function _I2C_2_Master_Init *****************
  5788 ;; Defined at:
  5789 ;;		line 4 in file "i2c.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5807 ;;Total ram usage:        0 bytes
  5808 ;; Hardware stack levels used: 1
  5809 ;; Hardware stack levels required when called: 5
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_color_click_init
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           	psect	text15
  5818   003EA0                     __ptext15:
  5819                           	callstack 0
  5820   003EA0                     _I2C_2_Master_Init:
  5821                           	callstack 24
  5822   003EA0                     
  5823                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5824   003EA0  010E               	movlb	14	; () banked
  5825   003EA2  51D9               	movf	217,w,b	;volatile
  5826   003EA4  0BF0               	andlw	-16
  5827   003EA6  0908               	iorlw	8
  5828   003EA8  6FD9               	movwf	217,b	;volatile
  5829   003EAA                     
  5830                           ; BSR set to: 14
  5831                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5832   003EAA  8BD9               	bsf	217,5,b	;volatile
  5833                           
  5834                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5835   003EAC  0E9F               	movlw	159
  5836   003EAE  6FD6               	movwf	214,b	;volatile
  5837   003EB0                     
  5838                           ; BSR set to: 14
  5839                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5840   003EB0  8A84               	bsf	132,5,c	;volatile
  5841   003EB2                     
  5842                           ; BSR set to: 14
  5843                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5844   003EB2  8C84               	bsf	132,6,c	;volatile
  5845   003EB4                     
  5846                           ; BSR set to: 14
  5847                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5848   003EB4  9BA7               	bcf	167,5,b	;volatile
  5849   003EB6                     
  5850                           ; BSR set to: 14
  5851                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5852   003EB6  9DA7               	bcf	167,6,b	;volatile
  5853                           
  5854                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5855   003EB8  0E1D               	movlw	29
  5856   003EBA  6F1D               	movwf	29,b	;volatile
  5857                           
  5858                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5859   003EBC  0E1E               	movlw	30
  5860   003EBE  6F1C               	movwf	28,b	;volatile
  5861                           
  5862                           ;i2c.c: 18:   RD5PPS=0x1C;
  5863   003EC0  0E1C               	movlw	28
  5864   003EC2  6F6F               	movwf	111,b	;volatile
  5865                           
  5866                           ;i2c.c: 19:   RD6PPS=0x1B;
  5867   003EC4  0E1B               	movlw	27
  5868   003EC6  6F70               	movwf	112,b	;volatile
  5869   003EC8                     
  5870                           ; BSR set to: 14
  5871   003EC8  0012               	return		;funcret
  5872   003ECA                     __end_of_I2C_2_Master_Init:
  5873                           	callstack 0
  5874                           
  5875 ;; *************** function _color_calibration *****************
  5876 ;; Defined at:
  5877 ;;		line 207 in file "color.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  RGBC            2   49[COMRAM] PTR struct RGBC_val
  5880 ;;		 -> main@RGBC(8), 
  5881 ;;  RGBC_n          2   51[COMRAM] PTR struct RGBC_val
  5882 ;;		 -> main@RGBC_n(8), 
  5883 ;;  red             2   53[COMRAM] PTR struct RGB_calib
  5884 ;;		 -> main@red(6), 
  5885 ;;  green           2   55[COMRAM] PTR struct RGB_calib
  5886 ;;		 -> main@green(6), 
  5887 ;;  blue            2   57[COMRAM] PTR struct RGB_calib
  5888 ;;		 -> main@blue(6), 
  5889 ;;  yellow          2   59[COMRAM] PTR struct RGB_calib
  5890 ;;		 -> main@yellow(6), 
  5891 ;;  pink            2   61[COMRAM] PTR struct RGB_calib
  5892 ;;		 -> main@pink(6), 
  5893 ;;  orange          2   63[COMRAM] PTR struct RGB_calib
  5894 ;;		 -> main@orange(6), 
  5895 ;;  lightblue       2   65[COMRAM] PTR struct RGB_calib
  5896 ;;		 -> main@lightblue(6), 
  5897 ;;  white           2   67[COMRAM] PTR struct RGB_calib
  5898 ;;		 -> main@white(6), 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5910 ;;      Params:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5913 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5914 ;;Total ram usage:       22 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; Hardware stack levels required when called: 8
  5917 ;; This function calls:
  5918 ;;		_color_normalise
  5919 ;;		_color_read
  5920 ;;		_white_Light
  5921 ;; This function is called by:
  5922 ;;		_main
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text16
  5927   002ABC                     __ptext16:
  5928                           	callstack 0
  5929   002ABC                     _color_calibration:
  5930                           	callstack 22
  5931   002ABC                     
  5932                           ;color.c: 207: void color_calibration(RGBC_val *RGBC, RGBC_val *RGBC_n, RGB_calib *red, 
      +                          RGB_calib *green, RGB_calib *blue, RGB_calib *yellow, RGB_calib *pink, RGB_calib *orange
      +                          , RGB_calib *lightblue, RGB_calib *white);color.c: 208: {;color.c: 209:     white_Light(
      +                          1);
  5933   002ABC  0E01               	movlw	1
  5934   002ABE  ECDA  F01F         	call	_white_Light
  5935   002AC2                     
  5936                           ;color.c: 210:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  5937   002AC2  8680               	bsf	128,3,c	;volatile
  5938   002AC4  8E7C               	bsf	124,7,c	;volatile
  5939   002AC6                     l164:
  5940   002AC6  B48E               	btfsc	142,2,c	;volatile
  5941   002AC8  EF68  F015         	goto	u1841
  5942   002ACC  EF6A  F015         	goto	u1840
  5943   002AD0                     u1841:
  5944   002AD0  EF63  F015         	goto	l164
  5945   002AD4                     u1840:
  5946   002AD4                     
  5947                           ;color.c: 213:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  5948   002AD4  9680               	bcf	128,3,c	;volatile
  5949   002AD6  9E7C               	bcf	124,7,c	;volatile
  5950   002AD8                     
  5951                           ;color.c: 214:     color_read(RGBC);
  5952   002AD8  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  5953   002ADC  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  5954   002AE0  EC72  F016         	call	_color_read	;wreg free
  5955   002AE4                     
  5956                           ;color.c: 215:     color_normalise(*RGBC, RGBC_n);
  5957   002AE4  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  5958   002AE8  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  5959   002AEC  EE00  F026         	lfsr	0,color_normalise@RGBC
  5960   002AF0  0E07               	movlw	7
  5961   002AF2                     u1851:
  5962   002AF2  CFDB FFEB          	movff	plusw2,plusw0
  5963   002AF6  06E8               	decf	wreg,f,c
  5964   002AF8  E2FC               	bc	u1851
  5965   002AFA  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  5966   002AFE  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  5967   002B02  ECE6  F01A         	call	_color_normalise	;wreg free
  5968   002B06                     
  5969                           ;color.c: 216:     red->R = RGBC_n->R;
  5970   002B06  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  5971   002B0A  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  5972   002B0E  C036  FFE1         	movff	color_calibration@red,fsr1l
  5973   002B12  C037  FFE2         	movff	color_calibration@red+1,fsr1h
  5974   002B16  CFDE FFE6          	movff	postinc2,postinc1
  5975   002B1A  CFDD FFE5          	movff	postdec2,postdec1
  5976   002B1E                     
  5977                           ;color.c: 217:     red->G = RGBC_n->G;
  5978   002B1E  EE20 F002          	lfsr	2,2
  5979   002B22  5034               	movf	color_calibration@RGBC_n^0,w,c
  5980   002B24  26D9               	addwf	fsr2l,f,c
  5981   002B26  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5982   002B28  22DA               	addwfc	fsr2h,f,c
  5983   002B2A  EE10 F002          	lfsr	1,2
  5984   002B2E  5036               	movf	color_calibration@red^0,w,c
  5985   002B30  26E1               	addwf	fsr1l,f,c
  5986   002B32  5037               	movf	(color_calibration@red+1)^0,w,c
  5987   002B34  22E2               	addwfc	fsr1h,f,c
  5988   002B36  CFDE FFE6          	movff	postinc2,postinc1
  5989   002B3A  CFDD FFE5          	movff	postdec2,postdec1
  5990   002B3E                     
  5991                           ;color.c: 218:     red->B = RGBC_n->B;
  5992   002B3E  EE20 F004          	lfsr	2,4
  5993   002B42  5034               	movf	color_calibration@RGBC_n^0,w,c
  5994   002B44  26D9               	addwf	fsr2l,f,c
  5995   002B46  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5996   002B48  22DA               	addwfc	fsr2h,f,c
  5997   002B4A  EE10 F004          	lfsr	1,4
  5998   002B4E  5036               	movf	color_calibration@red^0,w,c
  5999   002B50  26E1               	addwf	fsr1l,f,c
  6000   002B52  5037               	movf	(color_calibration@red+1)^0,w,c
  6001   002B54  22E2               	addwfc	fsr1h,f,c
  6002   002B56  CFDE FFE6          	movff	postinc2,postinc1
  6003   002B5A  CFDD FFE5          	movff	postdec2,postdec1
  6004   002B5E                     
  6005                           ;color.c: 220:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6006   002B5E  0E29               	movlw	41
  6007   002B60  6E47               	movwf	(??_color_calibration+1)^0,c
  6008   002B62  0E96               	movlw	150
  6009   002B64  6E46               	movwf	??_color_calibration^0,c
  6010   002B66  0E7F               	movlw	127
  6011   002B68                     u3417:
  6012   002B68  2EE8               	decfsz	wreg,f,c
  6013   002B6A  D7FE               	bra	u3417
  6014   002B6C  2E46               	decfsz	??_color_calibration^0,f,c
  6015   002B6E  D7FC               	bra	u3417
  6016   002B70  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6017   002B72  D7FA               	bra	u3417
  6018   002B74  0000               	nop	
  6019   002B76                     
  6020                           ;color.c: 221:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6021   002B76  8680               	bsf	128,3,c	;volatile
  6022   002B78  8E7C               	bsf	124,7,c	;volatile
  6023   002B7A                     l167:
  6024   002B7A  B48E               	btfsc	142,2,c	;volatile
  6025   002B7C  EFC2  F015         	goto	u1861
  6026   002B80  EFC4  F015         	goto	u1860
  6027   002B84                     u1861:
  6028   002B84  EFBD  F015         	goto	l167
  6029   002B88                     u1860:
  6030   002B88                     
  6031                           ;color.c: 224:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6032   002B88  9680               	bcf	128,3,c	;volatile
  6033   002B8A  9E7C               	bcf	124,7,c	;volatile
  6034   002B8C                     
  6035                           ;color.c: 225:     color_read(RGBC);
  6036   002B8C  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6037   002B90  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6038   002B94  EC72  F016         	call	_color_read	;wreg free
  6039   002B98                     
  6040                           ;color.c: 226:     color_normalise(*RGBC, RGBC_n);
  6041   002B98  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6042   002B9C  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6043   002BA0  EE00  F026         	lfsr	0,color_normalise@RGBC
  6044   002BA4  0E07               	movlw	7
  6045   002BA6                     u1871:
  6046   002BA6  CFDB FFEB          	movff	plusw2,plusw0
  6047   002BAA  06E8               	decf	wreg,f,c
  6048   002BAC  E2FC               	bc	u1871
  6049   002BAE  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6050   002BB2  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6051   002BB6  ECE6  F01A         	call	_color_normalise	;wreg free
  6052   002BBA                     
  6053                           ;color.c: 227:     green->R = RGBC_n->R;
  6054   002BBA  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6055   002BBE  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6056   002BC2  C038  FFE1         	movff	color_calibration@green,fsr1l
  6057   002BC6  C039  FFE2         	movff	color_calibration@green+1,fsr1h
  6058   002BCA  CFDE FFE6          	movff	postinc2,postinc1
  6059   002BCE  CFDD FFE5          	movff	postdec2,postdec1
  6060   002BD2                     
  6061                           ;color.c: 228:     green->G = RGBC_n->G;
  6062   002BD2  EE20 F002          	lfsr	2,2
  6063   002BD6  5034               	movf	color_calibration@RGBC_n^0,w,c
  6064   002BD8  26D9               	addwf	fsr2l,f,c
  6065   002BDA  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6066   002BDC  22DA               	addwfc	fsr2h,f,c
  6067   002BDE  EE10 F002          	lfsr	1,2
  6068   002BE2  5038               	movf	color_calibration@green^0,w,c
  6069   002BE4  26E1               	addwf	fsr1l,f,c
  6070   002BE6  5039               	movf	(color_calibration@green+1)^0,w,c
  6071   002BE8  22E2               	addwfc	fsr1h,f,c
  6072   002BEA  CFDE FFE6          	movff	postinc2,postinc1
  6073   002BEE  CFDD FFE5          	movff	postdec2,postdec1
  6074   002BF2                     
  6075                           ;color.c: 229:     green->B = RGBC_n->B;
  6076   002BF2  EE20 F004          	lfsr	2,4
  6077   002BF6  5034               	movf	color_calibration@RGBC_n^0,w,c
  6078   002BF8  26D9               	addwf	fsr2l,f,c
  6079   002BFA  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6080   002BFC  22DA               	addwfc	fsr2h,f,c
  6081   002BFE  EE10 F004          	lfsr	1,4
  6082   002C02  5038               	movf	color_calibration@green^0,w,c
  6083   002C04  26E1               	addwf	fsr1l,f,c
  6084   002C06  5039               	movf	(color_calibration@green+1)^0,w,c
  6085   002C08  22E2               	addwfc	fsr1h,f,c
  6086   002C0A  CFDE FFE6          	movff	postinc2,postinc1
  6087   002C0E  CFDD FFE5          	movff	postdec2,postdec1
  6088   002C12                     
  6089                           ;color.c: 231:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6090   002C12  0E29               	movlw	41
  6091   002C14  6E47               	movwf	(??_color_calibration+1)^0,c
  6092   002C16  0E96               	movlw	150
  6093   002C18  6E46               	movwf	??_color_calibration^0,c
  6094   002C1A  0E7F               	movlw	127
  6095   002C1C                     u3427:
  6096   002C1C  2EE8               	decfsz	wreg,f,c
  6097   002C1E  D7FE               	bra	u3427
  6098   002C20  2E46               	decfsz	??_color_calibration^0,f,c
  6099   002C22  D7FC               	bra	u3427
  6100   002C24  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6101   002C26  D7FA               	bra	u3427
  6102   002C28  0000               	nop	
  6103   002C2A                     
  6104                           ;color.c: 232:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6105   002C2A  8680               	bsf	128,3,c	;volatile
  6106   002C2C  8E7C               	bsf	124,7,c	;volatile
  6107   002C2E                     l170:
  6108   002C2E  B48E               	btfsc	142,2,c	;volatile
  6109   002C30  EF1C  F016         	goto	u1881
  6110   002C34  EF1E  F016         	goto	u1880
  6111   002C38                     u1881:
  6112   002C38  EF17  F016         	goto	l170
  6113   002C3C                     u1880:
  6114   002C3C                     
  6115                           ;color.c: 235:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6116   002C3C  9680               	bcf	128,3,c	;volatile
  6117   002C3E  9E7C               	bcf	124,7,c	;volatile
  6118   002C40                     
  6119                           ;color.c: 236:     color_read(RGBC);
  6120   002C40  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6121   002C44  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6122   002C48  EC72  F016         	call	_color_read	;wreg free
  6123   002C4C                     
  6124                           ;color.c: 237:     color_normalise(*RGBC, RGBC_n);
  6125   002C4C  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6126   002C50  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6127   002C54  EE00  F026         	lfsr	0,color_normalise@RGBC
  6128   002C58  0E07               	movlw	7
  6129   002C5A                     u1891:
  6130   002C5A  CFDB FFEB          	movff	plusw2,plusw0
  6131   002C5E  06E8               	decf	wreg,f,c
  6132   002C60  E2FC               	bc	u1891
  6133   002C62  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6134   002C66  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6135   002C6A  ECE6  F01A         	call	_color_normalise	;wreg free
  6136   002C6E                     
  6137                           ;color.c: 238:     blue->R = RGBC_n->R;
  6138   002C6E  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6139   002C72  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6140   002C76  C03A  FFE1         	movff	color_calibration@blue,fsr1l
  6141   002C7A  C03B  FFE2         	movff	color_calibration@blue+1,fsr1h
  6142   002C7E  CFDE FFE6          	movff	postinc2,postinc1
  6143   002C82  CFDD FFE5          	movff	postdec2,postdec1
  6144   002C86                     
  6145                           ;color.c: 239:     blue->G = RGBC_n->G;
  6146   002C86  EE20 F002          	lfsr	2,2
  6147   002C8A  5034               	movf	color_calibration@RGBC_n^0,w,c
  6148   002C8C  26D9               	addwf	fsr2l,f,c
  6149   002C8E  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6150   002C90  22DA               	addwfc	fsr2h,f,c
  6151   002C92  EE10 F002          	lfsr	1,2
  6152   002C96  503A               	movf	color_calibration@blue^0,w,c
  6153   002C98  26E1               	addwf	fsr1l,f,c
  6154   002C9A  503B               	movf	(color_calibration@blue+1)^0,w,c
  6155   002C9C  22E2               	addwfc	fsr1h,f,c
  6156   002C9E  CFDE FFE6          	movff	postinc2,postinc1
  6157   002CA2  CFDD FFE5          	movff	postdec2,postdec1
  6158   002CA6                     
  6159                           ;color.c: 240:     blue->B = RGBC_n->B;
  6160   002CA6  EE20 F004          	lfsr	2,4
  6161   002CAA  5034               	movf	color_calibration@RGBC_n^0,w,c
  6162   002CAC  26D9               	addwf	fsr2l,f,c
  6163   002CAE  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6164   002CB0  22DA               	addwfc	fsr2h,f,c
  6165   002CB2  EE10 F004          	lfsr	1,4
  6166   002CB6  503A               	movf	color_calibration@blue^0,w,c
  6167   002CB8  26E1               	addwf	fsr1l,f,c
  6168   002CBA  503B               	movf	(color_calibration@blue+1)^0,w,c
  6169   002CBC  22E2               	addwfc	fsr1h,f,c
  6170   002CBE  CFDE FFE6          	movff	postinc2,postinc1
  6171   002CC2  CFDD FFE5          	movff	postdec2,postdec1
  6172   002CC6                     
  6173                           ;color.c: 242:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6174   002CC6  0E29               	movlw	41
  6175   002CC8  6E47               	movwf	(??_color_calibration+1)^0,c
  6176   002CCA  0E96               	movlw	150
  6177   002CCC  6E46               	movwf	??_color_calibration^0,c
  6178   002CCE  0E7F               	movlw	127
  6179   002CD0                     u3437:
  6180   002CD0  2EE8               	decfsz	wreg,f,c
  6181   002CD2  D7FE               	bra	u3437
  6182   002CD4  2E46               	decfsz	??_color_calibration^0,f,c
  6183   002CD6  D7FC               	bra	u3437
  6184   002CD8  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6185   002CDA  D7FA               	bra	u3437
  6186   002CDC  0000               	nop	
  6187   002CDE                     
  6188                           ;color.c: 243:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6189   002CDE  8680               	bsf	128,3,c	;volatile
  6190   002CE0  8E7C               	bsf	124,7,c	;volatile
  6191   002CE2  0012               	return		;funcret
  6192   002CE4                     __end_of_color_calibration:
  6193                           	callstack 0
  6194                           
  6195 ;; *************** function _white_Light *****************
  6196 ;; Defined at:
  6197 ;;		line 59 in file "color.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;  state           1    wreg     unsigned char 
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;  state           1   11[COMRAM] unsigned char 
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  1    wreg      void 
  6204 ;; Registers used:
  6205 ;;		wreg, status,2
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6215 ;;Total ram usage:        1 bytes
  6216 ;; Hardware stack levels used: 1
  6217 ;; Hardware stack levels required when called: 5
  6218 ;; This function calls:
  6219 ;;		Nothing
  6220 ;; This function is called by:
  6221 ;;		_main
  6222 ;;		_color_calibration
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           	psect	text17
  6227   003FB4                     __ptext17:
  6228                           	callstack 0
  6229   003FB4                     _white_Light:
  6230                           	callstack 25
  6231                           
  6232                           ;incstack = 0
  6233                           ;white_Light@state stored from wreg
  6234   003FB4  6E0C               	movwf	white_Light@state^0,c
  6235   003FB6                     
  6236                           ;color.c: 59: void white_Light(char state);color.c: 60: {;color.c: 61:     if (state){
  6237   003FB6  500C               	movf	white_Light@state^0,w,c
  6238   003FB8  B4D8               	btfsc	status,2,c
  6239   003FBA  EFE1  F01F         	goto	u1641
  6240   003FBE  EFE3  F01F         	goto	u1640
  6241   003FC2                     u1641:
  6242   003FC2  EFE8  F01F         	goto	l144
  6243   003FC6                     u1640:
  6244   003FC6                     
  6245                           ;color.c: 62:         LATGbits.LATG0 = 1;
  6246   003FC6  807F               	bsf	127,0,c	;volatile
  6247                           
  6248                           ;color.c: 63:         LATEbits.LATE7 = 1;
  6249   003FC8  8E7D               	bsf	125,7,c	;volatile
  6250                           
  6251                           ;color.c: 64:         LATAbits.LATA3 = 1;
  6252   003FCA  8679               	bsf	121,3,c	;volatile
  6253                           
  6254                           ;color.c: 65:     }
  6255   003FCC  EFEB  F01F         	goto	l146
  6256   003FD0                     l144:
  6257                           
  6258                           ;color.c: 67:         LATGbits.LATG0 = 0;
  6259   003FD0  907F               	bcf	127,0,c	;volatile
  6260                           
  6261                           ;color.c: 68:         LATEbits.LATE7 = 0;
  6262   003FD2  9E7D               	bcf	125,7,c	;volatile
  6263                           
  6264                           ;color.c: 69:         LATAbits.LATA3 = 0;
  6265   003FD4  9679               	bcf	121,3,c	;volatile
  6266   003FD6                     l146:
  6267   003FD6  0012               	return		;funcret
  6268   003FD8                     __end_of_white_Light:
  6269                           	callstack 0
  6270                           
  6271 ;; *************** function _color_read *****************
  6272 ;; Defined at:
  6273 ;;		line 74 in file "color.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  RGBC            2   15[COMRAM] PTR struct RGBC_val
  6276 ;;		 -> main@RGBC(8), 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6290 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6291 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6292 ;;Total ram usage:        9 bytes
  6293 ;; Hardware stack levels used: 1
  6294 ;; Hardware stack levels required when called: 7
  6295 ;; This function calls:
  6296 ;;		_I2C_2_Master_Read
  6297 ;;		_I2C_2_Master_RepStart
  6298 ;;		_I2C_2_Master_Start
  6299 ;;		_I2C_2_Master_Stop
  6300 ;;		_I2C_2_Master_Write
  6301 ;; This function is called by:
  6302 ;;		_main
  6303 ;;		_color_calibration
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text18
  6308   002CE4                     __ptext18:
  6309                           	callstack 0
  6310   002CE4                     _color_read:
  6311                           	callstack 23
  6312   002CE4                     
  6313                           ;color.c: 74: void color_read(RGBC_val *RGBC);color.c: 75: {;color.c: 76:  I2C_2_Master_
      +                          Start();
  6314   002CE4  EC71  F020         	call	_I2C_2_Master_Start	;wreg free
  6315                           
  6316                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  6317   002CE8  0E52               	movlw	82
  6318   002CEA  EC5B  F020         	call	_I2C_2_Master_Write
  6319                           
  6320                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x16);
  6321   002CEE  0EB6               	movlw	182
  6322   002CF0  EC5B  F020         	call	_I2C_2_Master_Write
  6323                           
  6324                           ;color.c: 79:  I2C_2_Master_RepStart();
  6325   002CF4  EC76  F020         	call	_I2C_2_Master_RepStart	;wreg free
  6326                           
  6327                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  6328   002CF8  0E53               	movlw	83
  6329   002CFA  EC5B  F020         	call	_I2C_2_Master_Write
  6330   002CFE                     
  6331                           ;color.c: 81:  RGBC->R=I2C_2_Master_Read(1);
  6332   002CFE  0E01               	movlw	1
  6333   002D00  ECF8  F01E         	call	_I2C_2_Master_Read
  6334   002D04  6E12               	movwf	??_color_read^0,c
  6335   002D06  6A13               	clrf	(??_color_read+1)^0,c
  6336   002D08  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6337   002D0C  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6338   002D10  C012  FFDE         	movff	??_color_read,postinc2
  6339   002D14  C013  FFDD         	movff	??_color_read+1,postdec2
  6340   002D18                     
  6341                           ;color.c: 82:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  6342   002D18  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6343   002D1C  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6344   002D20  CFDE F012          	movff	postinc2,??_color_read
  6345   002D24  CFDD F013          	movff	postdec2,??_color_read+1
  6346   002D28  0E00               	movlw	0
  6347   002D2A  ECF8  F01E         	call	_I2C_2_Master_Read
  6348   002D2E  6E14               	movwf	(??_color_read+2)^0,c
  6349   002D30  5014               	movf	(??_color_read+2)^0,w,c
  6350   002D32  6E16               	movwf	(??_color_read+4)^0,c
  6351   002D34  6A15               	clrf	(??_color_read+3)^0,c
  6352   002D36  5012               	movf	??_color_read^0,w,c
  6353   002D38  1015               	iorwf	(??_color_read+3)^0,w,c
  6354   002D3A  6E17               	movwf	(??_color_read+5)^0,c
  6355   002D3C  5013               	movf	(??_color_read+1)^0,w,c
  6356   002D3E  1016               	iorwf	(??_color_read+4)^0,w,c
  6357   002D40  6E18               	movwf	(??_color_read+6)^0,c
  6358   002D42  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6359   002D46  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6360   002D4A  C017  FFDE         	movff	??_color_read+5,postinc2
  6361   002D4E  C018  FFDD         	movff	??_color_read+6,postdec2
  6362                           
  6363                           ;color.c: 83:  I2C_2_Master_Stop();
  6364   002D52  EC6C  F020         	call	_I2C_2_Master_Stop	;wreg free
  6365                           
  6366                           ;color.c: 85:     I2C_2_Master_Start();
  6367   002D56  EC71  F020         	call	_I2C_2_Master_Start	;wreg free
  6368                           
  6369                           ;color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  6370   002D5A  0E52               	movlw	82
  6371   002D5C  EC5B  F020         	call	_I2C_2_Master_Write
  6372                           
  6373                           ;color.c: 87:  I2C_2_Master_Write(0xA0 | 0x18);
  6374   002D60  0EB8               	movlw	184
  6375   002D62  EC5B  F020         	call	_I2C_2_Master_Write
  6376                           
  6377                           ;color.c: 88:  I2C_2_Master_RepStart();
  6378   002D66  EC76  F020         	call	_I2C_2_Master_RepStart	;wreg free
  6379                           
  6380                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  6381   002D6A  0E53               	movlw	83
  6382   002D6C  EC5B  F020         	call	_I2C_2_Master_Write
  6383   002D70                     
  6384                           ;color.c: 90:  RGBC->G=I2C_2_Master_Read(1);
  6385   002D70  0E01               	movlw	1
  6386   002D72  ECF8  F01E         	call	_I2C_2_Master_Read
  6387   002D76  6E12               	movwf	??_color_read^0,c
  6388   002D78  6A13               	clrf	(??_color_read+1)^0,c
  6389   002D7A  EE20 F002          	lfsr	2,2
  6390   002D7E  5010               	movf	color_read@RGBC^0,w,c
  6391   002D80  26D9               	addwf	fsr2l,f,c
  6392   002D82  5011               	movf	(color_read@RGBC+1)^0,w,c
  6393   002D84  22DA               	addwfc	fsr2h,f,c
  6394   002D86  C012  FFDE         	movff	??_color_read,postinc2
  6395   002D8A  C013  FFDD         	movff	??_color_read+1,postdec2
  6396   002D8E                     
  6397                           ;color.c: 91:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  6398   002D8E  EE20 F002          	lfsr	2,2
  6399   002D92  5010               	movf	color_read@RGBC^0,w,c
  6400   002D94  26D9               	addwf	fsr2l,f,c
  6401   002D96  5011               	movf	(color_read@RGBC+1)^0,w,c
  6402   002D98  22DA               	addwfc	fsr2h,f,c
  6403   002D9A  CFDE F012          	movff	postinc2,??_color_read
  6404   002D9E  CFDD F013          	movff	postdec2,??_color_read+1
  6405   002DA2  0E00               	movlw	0
  6406   002DA4  ECF8  F01E         	call	_I2C_2_Master_Read
  6407   002DA8  6E14               	movwf	(??_color_read+2)^0,c
  6408   002DAA  5014               	movf	(??_color_read+2)^0,w,c
  6409   002DAC  6E16               	movwf	(??_color_read+4)^0,c
  6410   002DAE  6A15               	clrf	(??_color_read+3)^0,c
  6411   002DB0  5012               	movf	??_color_read^0,w,c
  6412   002DB2  1015               	iorwf	(??_color_read+3)^0,w,c
  6413   002DB4  6E17               	movwf	(??_color_read+5)^0,c
  6414   002DB6  5013               	movf	(??_color_read+1)^0,w,c
  6415   002DB8  1016               	iorwf	(??_color_read+4)^0,w,c
  6416   002DBA  6E18               	movwf	(??_color_read+6)^0,c
  6417   002DBC  EE20 F002          	lfsr	2,2
  6418   002DC0  5010               	movf	color_read@RGBC^0,w,c
  6419   002DC2  26D9               	addwf	fsr2l,f,c
  6420   002DC4  5011               	movf	(color_read@RGBC+1)^0,w,c
  6421   002DC6  22DA               	addwfc	fsr2h,f,c
  6422   002DC8  C017  FFDE         	movff	??_color_read+5,postinc2
  6423   002DCC  C018  FFDD         	movff	??_color_read+6,postdec2
  6424                           
  6425                           ;color.c: 92:  I2C_2_Master_Stop();
  6426   002DD0  EC6C  F020         	call	_I2C_2_Master_Stop	;wreg free
  6427                           
  6428                           ;color.c: 94:     I2C_2_Master_Start();
  6429   002DD4  EC71  F020         	call	_I2C_2_Master_Start	;wreg free
  6430                           
  6431                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6432   002DD8  0E52               	movlw	82
  6433   002DDA  EC5B  F020         	call	_I2C_2_Master_Write
  6434                           
  6435                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  6436   002DDE  0EBA               	movlw	186
  6437   002DE0  EC5B  F020         	call	_I2C_2_Master_Write
  6438                           
  6439                           ;color.c: 97:  I2C_2_Master_RepStart();
  6440   002DE4  EC76  F020         	call	_I2C_2_Master_RepStart	;wreg free
  6441                           
  6442                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6443   002DE8  0E53               	movlw	83
  6444   002DEA  EC5B  F020         	call	_I2C_2_Master_Write
  6445   002DEE                     
  6446                           ;color.c: 99:  RGBC->B=I2C_2_Master_Read(1);
  6447   002DEE  0E01               	movlw	1
  6448   002DF0  ECF8  F01E         	call	_I2C_2_Master_Read
  6449   002DF4  6E12               	movwf	??_color_read^0,c
  6450   002DF6  6A13               	clrf	(??_color_read+1)^0,c
  6451   002DF8  EE20 F004          	lfsr	2,4
  6452   002DFC  5010               	movf	color_read@RGBC^0,w,c
  6453   002DFE  26D9               	addwf	fsr2l,f,c
  6454   002E00  5011               	movf	(color_read@RGBC+1)^0,w,c
  6455   002E02  22DA               	addwfc	fsr2h,f,c
  6456   002E04  C012  FFDE         	movff	??_color_read,postinc2
  6457   002E08  C013  FFDD         	movff	??_color_read+1,postdec2
  6458   002E0C                     
  6459                           ;color.c: 100:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  6460   002E0C  EE20 F004          	lfsr	2,4
  6461   002E10  5010               	movf	color_read@RGBC^0,w,c
  6462   002E12  26D9               	addwf	fsr2l,f,c
  6463   002E14  5011               	movf	(color_read@RGBC+1)^0,w,c
  6464   002E16  22DA               	addwfc	fsr2h,f,c
  6465   002E18  CFDE F012          	movff	postinc2,??_color_read
  6466   002E1C  CFDD F013          	movff	postdec2,??_color_read+1
  6467   002E20  0E00               	movlw	0
  6468   002E22  ECF8  F01E         	call	_I2C_2_Master_Read
  6469   002E26  6E14               	movwf	(??_color_read+2)^0,c
  6470   002E28  5014               	movf	(??_color_read+2)^0,w,c
  6471   002E2A  6E16               	movwf	(??_color_read+4)^0,c
  6472   002E2C  6A15               	clrf	(??_color_read+3)^0,c
  6473   002E2E  5012               	movf	??_color_read^0,w,c
  6474   002E30  1015               	iorwf	(??_color_read+3)^0,w,c
  6475   002E32  6E17               	movwf	(??_color_read+5)^0,c
  6476   002E34  5013               	movf	(??_color_read+1)^0,w,c
  6477   002E36  1016               	iorwf	(??_color_read+4)^0,w,c
  6478   002E38  6E18               	movwf	(??_color_read+6)^0,c
  6479   002E3A  EE20 F004          	lfsr	2,4
  6480   002E3E  5010               	movf	color_read@RGBC^0,w,c
  6481   002E40  26D9               	addwf	fsr2l,f,c
  6482   002E42  5011               	movf	(color_read@RGBC+1)^0,w,c
  6483   002E44  22DA               	addwfc	fsr2h,f,c
  6484   002E46  C017  FFDE         	movff	??_color_read+5,postinc2
  6485   002E4A  C018  FFDD         	movff	??_color_read+6,postdec2
  6486                           
  6487                           ;color.c: 101:  I2C_2_Master_Stop();
  6488   002E4E  EC6C  F020         	call	_I2C_2_Master_Stop	;wreg free
  6489                           
  6490                           ;color.c: 103:     I2C_2_Master_Start();
  6491   002E52  EC71  F020         	call	_I2C_2_Master_Start	;wreg free
  6492                           
  6493                           ;color.c: 104:  I2C_2_Master_Write(0x52 | 0x00);
  6494   002E56  0E52               	movlw	82
  6495   002E58  EC5B  F020         	call	_I2C_2_Master_Write
  6496                           
  6497                           ;color.c: 105:  I2C_2_Master_Write(0xA0 | 0x14);
  6498   002E5C  0EB4               	movlw	180
  6499   002E5E  EC5B  F020         	call	_I2C_2_Master_Write
  6500                           
  6501                           ;color.c: 106:  I2C_2_Master_RepStart();
  6502   002E62  EC76  F020         	call	_I2C_2_Master_RepStart	;wreg free
  6503                           
  6504                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x01);
  6505   002E66  0E53               	movlw	83
  6506   002E68  EC5B  F020         	call	_I2C_2_Master_Write
  6507   002E6C                     
  6508                           ;color.c: 108:  RGBC->C=I2C_2_Master_Read(1);
  6509   002E6C  0E01               	movlw	1
  6510   002E6E  ECF8  F01E         	call	_I2C_2_Master_Read
  6511   002E72  6E12               	movwf	??_color_read^0,c
  6512   002E74  6A13               	clrf	(??_color_read+1)^0,c
  6513   002E76  EE20 F006          	lfsr	2,6
  6514   002E7A  5010               	movf	color_read@RGBC^0,w,c
  6515   002E7C  26D9               	addwf	fsr2l,f,c
  6516   002E7E  5011               	movf	(color_read@RGBC+1)^0,w,c
  6517   002E80  22DA               	addwfc	fsr2h,f,c
  6518   002E82  C012  FFDE         	movff	??_color_read,postinc2
  6519   002E86  C013  FFDD         	movff	??_color_read+1,postdec2
  6520   002E8A                     
  6521                           ;color.c: 109:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  6522   002E8A  EE20 F006          	lfsr	2,6
  6523   002E8E  5010               	movf	color_read@RGBC^0,w,c
  6524   002E90  26D9               	addwf	fsr2l,f,c
  6525   002E92  5011               	movf	(color_read@RGBC+1)^0,w,c
  6526   002E94  22DA               	addwfc	fsr2h,f,c
  6527   002E96  CFDE F012          	movff	postinc2,??_color_read
  6528   002E9A  CFDD F013          	movff	postdec2,??_color_read+1
  6529   002E9E  0E00               	movlw	0
  6530   002EA0  ECF8  F01E         	call	_I2C_2_Master_Read
  6531   002EA4  6E14               	movwf	(??_color_read+2)^0,c
  6532   002EA6  5014               	movf	(??_color_read+2)^0,w,c
  6533   002EA8  6E16               	movwf	(??_color_read+4)^0,c
  6534   002EAA  6A15               	clrf	(??_color_read+3)^0,c
  6535   002EAC  5012               	movf	??_color_read^0,w,c
  6536   002EAE  1015               	iorwf	(??_color_read+3)^0,w,c
  6537   002EB0  6E17               	movwf	(??_color_read+5)^0,c
  6538   002EB2  5013               	movf	(??_color_read+1)^0,w,c
  6539   002EB4  1016               	iorwf	(??_color_read+4)^0,w,c
  6540   002EB6  6E18               	movwf	(??_color_read+6)^0,c
  6541   002EB8  EE20 F006          	lfsr	2,6
  6542   002EBC  5010               	movf	color_read@RGBC^0,w,c
  6543   002EBE  26D9               	addwf	fsr2l,f,c
  6544   002EC0  5011               	movf	(color_read@RGBC+1)^0,w,c
  6545   002EC2  22DA               	addwfc	fsr2h,f,c
  6546   002EC4  C017  FFDE         	movff	??_color_read+5,postinc2
  6547   002EC8  C018  FFDD         	movff	??_color_read+6,postdec2
  6548                           
  6549                           ;color.c: 110:  I2C_2_Master_Stop();
  6550   002ECC  EC6C  F020         	call	_I2C_2_Master_Stop	;wreg free
  6551   002ED0  0012               	return		;funcret
  6552   002ED2                     __end_of_color_read:
  6553                           	callstack 0
  6554                           
  6555 ;; *************** function _I2C_2_Master_Write *****************
  6556 ;; Defined at:
  6557 ;;		line 45 in file "i2c.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  data_byte       1    wreg     unsigned char 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;  data_byte       1   12[COMRAM] unsigned char 
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  1    wreg      void 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6574 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6575 ;;Total ram usage:        1 bytes
  6576 ;; Hardware stack levels used: 1
  6577 ;; Hardware stack levels required when called: 6
  6578 ;; This function calls:
  6579 ;;		_I2C_2_Master_Idle
  6580 ;; This function is called by:
  6581 ;;		_color_clear_init_interrupts
  6582 ;;		_color_writetoaddr
  6583 ;;		_color_read
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text19
  6588   0040B6                     __ptext19:
  6589                           	callstack 0
  6590   0040B6                     _I2C_2_Master_Write:
  6591                           	callstack 23
  6592                           
  6593                           ;incstack = 0
  6594                           ;I2C_2_Master_Write@data_byte stored from wreg
  6595   0040B6  6E0D               	movwf	I2C_2_Master_Write@data_byte^0,c
  6596   0040B8                     
  6597                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6598   0040B8  EC79  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6599   0040BC                     
  6600                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6601   0040BC  C00D  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6602   0040C0  0012               	return		;funcret
  6603   0040C2                     __end_of_I2C_2_Master_Write:
  6604                           	callstack 0
  6605                           
  6606 ;; *************** function _I2C_2_Master_Stop *****************
  6607 ;; Defined at:
  6608 ;;		line 39 in file "i2c.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;		None
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;Total ram usage:        0 bytes
  6627 ;; Hardware stack levels used: 1
  6628 ;; Hardware stack levels required when called: 6
  6629 ;; This function calls:
  6630 ;;		_I2C_2_Master_Idle
  6631 ;; This function is called by:
  6632 ;;		_color_clear_init_interrupts
  6633 ;;		_color_writetoaddr
  6634 ;;		_color_read
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text20
  6639   0040D8                     __ptext20:
  6640                           	callstack 0
  6641   0040D8                     _I2C_2_Master_Stop:
  6642                           	callstack 23
  6643   0040D8                     
  6644                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6645   0040D8  EC79  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6646   0040DC                     
  6647                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6648   0040DC  010E               	movlb	14	; () banked
  6649   0040DE  85DA               	bsf	218,2,b	;volatile
  6650   0040E0                     
  6651                           ; BSR set to: 14
  6652   0040E0  0012               	return		;funcret
  6653   0040E2                     __end_of_I2C_2_Master_Stop:
  6654                           	callstack 0
  6655                           
  6656 ;; *************** function _I2C_2_Master_Start *****************
  6657 ;; Defined at:
  6658 ;;		line 27 in file "i2c.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;		None
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;		None
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  1    wreg      void 
  6665 ;; Registers used:
  6666 ;;		wreg, status,2, status,0, cstack
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6676 ;;Total ram usage:        0 bytes
  6677 ;; Hardware stack levels used: 1
  6678 ;; Hardware stack levels required when called: 6
  6679 ;; This function calls:
  6680 ;;		_I2C_2_Master_Idle
  6681 ;; This function is called by:
  6682 ;;		_color_clear_init_interrupts
  6683 ;;		_color_writetoaddr
  6684 ;;		_color_read
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text21
  6689   0040E2                     __ptext21:
  6690                           	callstack 0
  6691   0040E2                     _I2C_2_Master_Start:
  6692                           	callstack 23
  6693   0040E2                     
  6694                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6695   0040E2  EC79  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6696   0040E6                     
  6697                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6698   0040E6  010E               	movlb	14	; () banked
  6699   0040E8  81DA               	bsf	218,0,b	;volatile
  6700   0040EA                     
  6701                           ; BSR set to: 14
  6702   0040EA  0012               	return		;funcret
  6703   0040EC                     __end_of_I2C_2_Master_Start:
  6704                           	callstack 0
  6705                           
  6706 ;; *************** function _I2C_2_Master_RepStart *****************
  6707 ;; Defined at:
  6708 ;;		line 33 in file "i2c.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;		None
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;		None
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  1    wreg      void 
  6715 ;; Registers used:
  6716 ;;		wreg, status,2, status,0, cstack
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6726 ;;Total ram usage:        0 bytes
  6727 ;; Hardware stack levels used: 1
  6728 ;; Hardware stack levels required when called: 6
  6729 ;; This function calls:
  6730 ;;		_I2C_2_Master_Idle
  6731 ;; This function is called by:
  6732 ;;		_color_read
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text22
  6737   0040EC                     __ptext22:
  6738                           	callstack 0
  6739   0040EC                     _I2C_2_Master_RepStart:
  6740                           	callstack 23
  6741   0040EC                     
  6742                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6743   0040EC  EC79  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6744   0040F0                     
  6745                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6746   0040F0  010E               	movlb	14	; () banked
  6747   0040F2  83DA               	bsf	218,1,b	;volatile
  6748   0040F4                     
  6749                           ; BSR set to: 14
  6750   0040F4  0012               	return		;funcret
  6751   0040F6                     __end_of_I2C_2_Master_RepStart:
  6752                           	callstack 0
  6753                           
  6754 ;; *************** function _I2C_2_Master_Read *****************
  6755 ;; Defined at:
  6756 ;;		line 51 in file "i2c.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  ack             1    wreg     unsigned char 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  ack             1   13[COMRAM] unsigned char 
  6761 ;;  tmp             1   14[COMRAM] unsigned char 
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      unsigned char 
  6764 ;; Registers used:
  6765 ;;		wreg, status,2, status,0, cstack
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6772 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6774 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6775 ;;Total ram usage:        3 bytes
  6776 ;; Hardware stack levels used: 1
  6777 ;; Hardware stack levels required when called: 6
  6778 ;; This function calls:
  6779 ;;		_I2C_2_Master_Idle
  6780 ;; This function is called by:
  6781 ;;		_color_read
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           	psect	text23
  6786   003DF0                     __ptext23:
  6787                           	callstack 0
  6788   003DF0                     _I2C_2_Master_Read:
  6789                           	callstack 23
  6790                           
  6791                           ; BSR set to: 14
  6792                           ;incstack = 0
  6793                           ;I2C_2_Master_Read@ack stored from wreg
  6794   003DF0  6E0E               	movwf	I2C_2_Master_Read@ack^0,c
  6795   003DF2                     
  6796                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6797   003DF2  EC79  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6798   003DF6                     
  6799                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6800   003DF6  010E               	movlb	14	; () banked
  6801   003DF8  87DA               	bsf	218,3,b	;volatile
  6802                           
  6803                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6804   003DFA  EC79  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6805   003DFE                     
  6806                           ;i2c.c: 57:   tmp = SSP2BUF;
  6807   003DFE  CED5 F00F          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6808                           
  6809                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6810   003E02  EC79  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6811   003E06                     
  6812                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6813   003E06  500E               	movf	I2C_2_Master_Read@ack^0,w,c
  6814   003E08  B4D8               	btfsc	status,2,c
  6815   003E0A  EF09  F01F         	goto	u1391
  6816   003E0E  EF0D  F01F         	goto	u1390
  6817   003E12                     u1391:
  6818   003E12  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  6819   003E14  2A0D               	incf	??_I2C_2_Master_Read^0,f,c
  6820   003E16  EF0E  F01F         	goto	u1408
  6821   003E1A                     u1390:
  6822   003E1A  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  6823   003E1C                     u1408:
  6824   003E1C  3A0D               	swapf	??_I2C_2_Master_Read^0,f,c
  6825   003E1E  460D               	rlncf	??_I2C_2_Master_Read^0,f,c
  6826   003E20  010E               	movlb	14	; () banked
  6827   003E22  51DA               	movf	218,w,b	;volatile
  6828   003E24  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  6829   003E26  0BDF               	andlw	-33
  6830   003E28  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  6831   003E2A  6FDA               	movwf	218,b	;volatile
  6832   003E2C                     
  6833                           ; BSR set to: 14
  6834                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6835   003E2C  89DA               	bsf	218,4,b	;volatile
  6836   003E2E                     
  6837                           ; BSR set to: 14
  6838                           ;i2c.c: 61:   return tmp;
  6839   003E2E  500F               	movf	I2C_2_Master_Read@tmp^0,w,c
  6840   003E30                     
  6841                           ; BSR set to: 14
  6842   003E30  0012               	return		;funcret
  6843   003E32                     __end_of_I2C_2_Master_Read:
  6844                           	callstack 0
  6845                           
  6846 ;; *************** function _I2C_2_Master_Idle *****************
  6847 ;; Defined at:
  6848 ;;		line 22 in file "i2c.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;		None
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;		None
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      void 
  6855 ;; Registers used:
  6856 ;;		wreg, status,2, status,0
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6865 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6866 ;;Total ram usage:        1 bytes
  6867 ;; Hardware stack levels used: 1
  6868 ;; Hardware stack levels required when called: 5
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_I2C_2_Master_Start
  6873 ;;		_I2C_2_Master_RepStart
  6874 ;;		_I2C_2_Master_Stop
  6875 ;;		_I2C_2_Master_Write
  6876 ;;		_I2C_2_Master_Read
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           	psect	text24
  6881   003EF2                     __ptext24:
  6882                           	callstack 0
  6883   003EF2                     _I2C_2_Master_Idle:
  6884                           	callstack 23
  6885   003EF2                     l203:
  6886   003EF2  010E               	movlb	14	; () banked
  6887   003EF4  B5D8               	btfsc	216,2,b	;volatile
  6888   003EF6  EF7F  F01F         	goto	u1261
  6889   003EFA  EF81  F01F         	goto	u1260
  6890   003EFE                     u1261:
  6891   003EFE  EF79  F01F         	goto	l203
  6892   003F02                     u1260:
  6893   003F02                     
  6894                           ; BSR set to: 14
  6895   003F02  CEDA F00C          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6896   003F06  0E1F               	movlw	31
  6897   003F08  160C               	andwf	??_I2C_2_Master_Idle^0,f,c
  6898   003F0A  A4D8               	btfss	status,2,c
  6899   003F0C  EF8A  F01F         	goto	u1271
  6900   003F10  EF8C  F01F         	goto	u1270
  6901   003F14                     u1271:
  6902   003F14  EF79  F01F         	goto	l203
  6903   003F18                     u1270:
  6904   003F18                     
  6905                           ; BSR set to: 14
  6906   003F18  0012               	return		;funcret
  6907   003F1A                     __end_of_I2C_2_Master_Idle:
  6908                           	callstack 0
  6909                           
  6910 ;; *************** function _color_normalise *****************
  6911 ;; Defined at:
  6912 ;;		line 114 in file "color.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;  RGBC            8   37[COMRAM] struct RGBC_val
  6915 ;;  RGBC_n          2   45[COMRAM] PTR struct RGBC_val
  6916 ;;		 -> main@RGBC_n(8), 
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;		None
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      void 
  6921 ;; Registers used:
  6922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6928 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6931 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6932 ;;Total ram usage:       12 bytes
  6933 ;; Hardware stack levels used: 1
  6934 ;; Hardware stack levels required when called: 6
  6935 ;; This function calls:
  6936 ;;		___aldiv
  6937 ;;		___lmul
  6938 ;; This function is called by:
  6939 ;;		_main
  6940 ;;		_color_calibration
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           	psect	text25
  6945   0035CC                     __ptext25:
  6946                           	callstack 0
  6947   0035CC                     _color_normalise:
  6948                           	callstack 24
  6949   0035CC                     
  6950                           ;color.c: 132:     RGBC_n->C = RGBC.C;
  6951   0035CC  EE20 F006          	lfsr	2,6
  6952   0035D0  502E               	movf	color_normalise@RGBC_n^0,w,c
  6953   0035D2  26D9               	addwf	fsr2l,f,c
  6954   0035D4  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  6955   0035D6  22DA               	addwfc	fsr2h,f,c
  6956   0035D8  C02C  FFDE         	movff	color_normalise@RGBC+6,postinc2
  6957   0035DC  C02D  FFDD         	movff	color_normalise@RGBC+7,postdec2
  6958   0035E0                     
  6959                           ;color.c: 133:     RGBC_n->R = 1000L*RGBC.R/(RGBC.R+RGBC.G+RGBC.B);
  6960   0035E0  C026  F00C         	movff	color_normalise@RGBC,___lmul@multiplier
  6961   0035E4  C027  F00D         	movff	color_normalise@RGBC+1,___lmul@multiplier+1
  6962   0035E8  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6963   0035EA  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6964   0035EC  0EE8               	movlw	232
  6965   0035EE  6E10               	movwf	___lmul@multiplicand^0,c
  6966   0035F0  0E03               	movlw	3
  6967   0035F2  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6968   0035F4  0E00               	movlw	0
  6969   0035F6  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6970   0035F8  0E00               	movlw	0
  6971   0035FA  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6972   0035FC  EC9C  F01E         	call	___lmul	;wreg free
  6973   003600  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6974   003604  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6975   003608  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6976   00360C  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6977   003610  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  6978   003612  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  6979   003614  6E30               	movwf	??_color_normalise^0,c
  6980   003616  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  6981   003618  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  6982   00361A  6E31               	movwf	(??_color_normalise+1)^0,c
  6983   00361C  5026               	movf	color_normalise@RGBC^0,w,c
  6984   00361E  2630               	addwf	??_color_normalise^0,f,c
  6985   003620  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  6986   003622  2231               	addwfc	(??_color_normalise+1)^0,f,c
  6987   003624  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  6988   003628  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  6989   00362C  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  6990   00362E  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  6991   003630  EC8B  F01B         	call	___aldiv	;wreg free
  6992   003634  C02E  FFD9         	movff	color_normalise@RGBC_n,fsr2l
  6993   003638  C02F  FFDA         	movff	color_normalise@RGBC_n+1,fsr2h
  6994   00363C  C018  FFDE         	movff	?___aldiv,postinc2
  6995   003640  C019  FFDD         	movff	?___aldiv+1,postdec2
  6996   003644                     
  6997                           ;color.c: 134:     RGBC_n->G = 1000L*RGBC.G/(RGBC.R+RGBC.G+RGBC.B);
  6998   003644  C028  F00C         	movff	color_normalise@RGBC+2,___lmul@multiplier
  6999   003648  C029  F00D         	movff	color_normalise@RGBC+3,___lmul@multiplier+1
  7000   00364C  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  7001   00364E  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  7002   003650  0EE8               	movlw	232
  7003   003652  6E10               	movwf	___lmul@multiplicand^0,c
  7004   003654  0E03               	movlw	3
  7005   003656  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7006   003658  0E00               	movlw	0
  7007   00365A  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7008   00365C  0E00               	movlw	0
  7009   00365E  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7010   003660  EC9C  F01E         	call	___lmul	;wreg free
  7011   003664  C00C  F018         	movff	?___lmul,___aldiv@dividend
  7012   003668  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  7013   00366C  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  7014   003670  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  7015   003674  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  7016   003676  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  7017   003678  6E30               	movwf	??_color_normalise^0,c
  7018   00367A  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  7019   00367C  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  7020   00367E  6E31               	movwf	(??_color_normalise+1)^0,c
  7021   003680  5026               	movf	color_normalise@RGBC^0,w,c
  7022   003682  2630               	addwf	??_color_normalise^0,f,c
  7023   003684  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  7024   003686  2231               	addwfc	(??_color_normalise+1)^0,f,c
  7025   003688  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  7026   00368C  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  7027   003690  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  7028   003692  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  7029   003694  EC8B  F01B         	call	___aldiv	;wreg free
  7030   003698  EE20 F002          	lfsr	2,2
  7031   00369C  502E               	movf	color_normalise@RGBC_n^0,w,c
  7032   00369E  26D9               	addwf	fsr2l,f,c
  7033   0036A0  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  7034   0036A2  22DA               	addwfc	fsr2h,f,c
  7035   0036A4  C018  FFDE         	movff	?___aldiv,postinc2
  7036   0036A8  C019  FFDD         	movff	?___aldiv+1,postdec2
  7037   0036AC                     
  7038                           ;color.c: 135:     RGBC_n->B = 1000L*RGBC.B/(RGBC.R+RGBC.G+RGBC.B);
  7039   0036AC  C02A  F00C         	movff	color_normalise@RGBC+4,___lmul@multiplier
  7040   0036B0  C02B  F00D         	movff	color_normalise@RGBC+5,___lmul@multiplier+1
  7041   0036B4  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  7042   0036B6  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  7043   0036B8  0EE8               	movlw	232
  7044   0036BA  6E10               	movwf	___lmul@multiplicand^0,c
  7045   0036BC  0E03               	movlw	3
  7046   0036BE  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7047   0036C0  0E00               	movlw	0
  7048   0036C2  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7049   0036C4  0E00               	movlw	0
  7050   0036C6  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7051   0036C8  EC9C  F01E         	call	___lmul	;wreg free
  7052   0036CC  C00C  F018         	movff	?___lmul,___aldiv@dividend
  7053   0036D0  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  7054   0036D4  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  7055   0036D8  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  7056   0036DC  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  7057   0036DE  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  7058   0036E0  6E30               	movwf	??_color_normalise^0,c
  7059   0036E2  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  7060   0036E4  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  7061   0036E6  6E31               	movwf	(??_color_normalise+1)^0,c
  7062   0036E8  5026               	movf	color_normalise@RGBC^0,w,c
  7063   0036EA  2630               	addwf	??_color_normalise^0,f,c
  7064   0036EC  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  7065   0036EE  2231               	addwfc	(??_color_normalise+1)^0,f,c
  7066   0036F0  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  7067   0036F4  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  7068   0036F8  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  7069   0036FA  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  7070   0036FC  EC8B  F01B         	call	___aldiv	;wreg free
  7071   003700  EE20 F004          	lfsr	2,4
  7072   003704  502E               	movf	color_normalise@RGBC_n^0,w,c
  7073   003706  26D9               	addwf	fsr2l,f,c
  7074   003708  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  7075   00370A  22DA               	addwfc	fsr2h,f,c
  7076   00370C  C018  FFDE         	movff	?___aldiv,postinc2
  7077   003710  C019  FFDD         	movff	?___aldiv+1,postdec2
  7078   003714  0012               	return		;funcret
  7079   003716                     __end_of_color_normalise:
  7080                           	callstack 0
  7081                           
  7082 ;; *************** function ___lmul *****************
  7083 ;; Defined at:
  7084 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  multiplier      4   11[COMRAM] unsigned long 
  7087 ;;  multiplicand    4   15[COMRAM] unsigned long 
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;  product         4   19[COMRAM] unsigned long 
  7090 ;; Return value:  Size  Location     Type
  7091 ;;                  4   11[COMRAM] unsigned long 
  7092 ;; Registers used:
  7093 ;;		wreg, status,2, status,0
  7094 ;; Tracked objects:
  7095 ;;		On entry : 0/0
  7096 ;;		On exit  : 0/0
  7097 ;;		Unchanged: 0/0
  7098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7099 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7100 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7102 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7103 ;;Total ram usage:       12 bytes
  7104 ;; Hardware stack levels used: 1
  7105 ;; Hardware stack levels required when called: 5
  7106 ;; This function calls:
  7107 ;;		Nothing
  7108 ;; This function is called by:
  7109 ;;		_color_normalise
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           	psect	text26
  7114   003D38                     __ptext26:
  7115                           	callstack 0
  7116   003D38                     ___lmul:
  7117                           	callstack 24
  7118   003D38  0E00               	movlw	0
  7119   003D3A  6E14               	movwf	___lmul@product^0,c
  7120   003D3C  0E00               	movlw	0
  7121   003D3E  6E15               	movwf	(___lmul@product+1)^0,c
  7122   003D40  0E00               	movlw	0
  7123   003D42  6E16               	movwf	(___lmul@product+2)^0,c
  7124   003D44  0E00               	movlw	0
  7125   003D46  6E17               	movwf	(___lmul@product+3)^0,c
  7126   003D48                     l2817:
  7127   003D48  A00C               	btfss	___lmul@multiplier^0,0,c
  7128   003D4A  EFA9  F01E         	goto	u1561
  7129   003D4E  EFAB  F01E         	goto	u1560
  7130   003D52                     u1561:
  7131   003D52  EFB3  F01E         	goto	l2821
  7132   003D56                     u1560:
  7133   003D56  5010               	movf	___lmul@multiplicand^0,w,c
  7134   003D58  2614               	addwf	___lmul@product^0,f,c
  7135   003D5A  5011               	movf	(___lmul@multiplicand+1)^0,w,c
  7136   003D5C  2215               	addwfc	(___lmul@product+1)^0,f,c
  7137   003D5E  5012               	movf	(___lmul@multiplicand+2)^0,w,c
  7138   003D60  2216               	addwfc	(___lmul@product+2)^0,f,c
  7139   003D62  5013               	movf	(___lmul@multiplicand+3)^0,w,c
  7140   003D64  2217               	addwfc	(___lmul@product+3)^0,f,c
  7141   003D66                     l2821:
  7142   003D66  90D8               	bcf	status,0,c
  7143   003D68  3610               	rlcf	___lmul@multiplicand^0,f,c
  7144   003D6A  3611               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7145   003D6C  3612               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7146   003D6E  3613               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7147   003D70  90D8               	bcf	status,0,c
  7148   003D72  320F               	rrcf	(___lmul@multiplier+3)^0,f,c
  7149   003D74  320E               	rrcf	(___lmul@multiplier+2)^0,f,c
  7150   003D76  320D               	rrcf	(___lmul@multiplier+1)^0,f,c
  7151   003D78  320C               	rrcf	___lmul@multiplier^0,f,c
  7152   003D7A  500C               	movf	___lmul@multiplier^0,w,c
  7153   003D7C  100D               	iorwf	(___lmul@multiplier+1)^0,w,c
  7154   003D7E  100E               	iorwf	(___lmul@multiplier+2)^0,w,c
  7155   003D80  100F               	iorwf	(___lmul@multiplier+3)^0,w,c
  7156   003D82  A4D8               	btfss	status,2,c
  7157   003D84  EFC6  F01E         	goto	u1571
  7158   003D88  EFC8  F01E         	goto	u1570
  7159   003D8C                     u1571:
  7160   003D8C  EFA4  F01E         	goto	l2817
  7161   003D90                     u1570:
  7162   003D90  C014  F00C         	movff	___lmul@product,?___lmul
  7163   003D94  C015  F00D         	movff	___lmul@product+1,?___lmul+1
  7164   003D98  C016  F00E         	movff	___lmul@product+2,?___lmul+2
  7165   003D9C  C017  F00F         	movff	___lmul@product+3,?___lmul+3
  7166   003DA0  0012               	return		;funcret
  7167   003DA2                     __end_of___lmul:
  7168                           	callstack 0
  7169                           
  7170 ;; *************** function ___aldiv *****************
  7171 ;; Defined at:
  7172 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;  dividend        4   23[COMRAM] long 
  7175 ;;  divisor         4   27[COMRAM] long 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;  quotient        4   33[COMRAM] long 
  7178 ;;  sign            1   32[COMRAM] unsigned char 
  7179 ;;  counter         1   31[COMRAM] unsigned char 
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  4   23[COMRAM] long 
  7182 ;; Registers used:
  7183 ;;		wreg, status,2, status,0
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7189 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7190 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7192 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7193 ;;Total ram usage:       14 bytes
  7194 ;; Hardware stack levels used: 1
  7195 ;; Hardware stack levels required when called: 5
  7196 ;; This function calls:
  7197 ;;		Nothing
  7198 ;; This function is called by:
  7199 ;;		_color_normalise
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text27
  7204   003716                     __ptext27:
  7205                           	callstack 0
  7206   003716                     ___aldiv:
  7207                           	callstack 24
  7208   003716  0E00               	movlw	0
  7209   003718  6E21               	movwf	___aldiv@sign^0,c
  7210   00371A  BE1F               	btfsc	(___aldiv@divisor+3)^0,7,c
  7211   00371C  EF94  F01B         	goto	u1580
  7212   003720  EF92  F01B         	goto	u1581
  7213   003724                     u1581:
  7214   003724  EF9E  F01B         	goto	l2833
  7215   003728                     u1580:
  7216   003728  1E1F               	comf	(___aldiv@divisor+3)^0,f,c
  7217   00372A  1E1E               	comf	(___aldiv@divisor+2)^0,f,c
  7218   00372C  1E1D               	comf	(___aldiv@divisor+1)^0,f,c
  7219   00372E  6C1C               	negf	___aldiv@divisor^0,c
  7220   003730  0E00               	movlw	0
  7221   003732  221D               	addwfc	(___aldiv@divisor+1)^0,f,c
  7222   003734  221E               	addwfc	(___aldiv@divisor+2)^0,f,c
  7223   003736  221F               	addwfc	(___aldiv@divisor+3)^0,f,c
  7224   003738  0E01               	movlw	1
  7225   00373A  6E21               	movwf	___aldiv@sign^0,c
  7226   00373C                     l2833:
  7227   00373C  BE1B               	btfsc	(___aldiv@dividend+3)^0,7,c
  7228   00373E  EFA5  F01B         	goto	u1590
  7229   003742  EFA3  F01B         	goto	u1591
  7230   003746                     u1591:
  7231   003746  EFAF  F01B         	goto	l2839
  7232   00374A                     u1590:
  7233   00374A  1E1B               	comf	(___aldiv@dividend+3)^0,f,c
  7234   00374C  1E1A               	comf	(___aldiv@dividend+2)^0,f,c
  7235   00374E  1E19               	comf	(___aldiv@dividend+1)^0,f,c
  7236   003750  6C18               	negf	___aldiv@dividend^0,c
  7237   003752  0E00               	movlw	0
  7238   003754  2219               	addwfc	(___aldiv@dividend+1)^0,f,c
  7239   003756  221A               	addwfc	(___aldiv@dividend+2)^0,f,c
  7240   003758  221B               	addwfc	(___aldiv@dividend+3)^0,f,c
  7241   00375A  0E01               	movlw	1
  7242   00375C  1A21               	xorwf	___aldiv@sign^0,f,c
  7243   00375E                     l2839:
  7244   00375E  0E00               	movlw	0
  7245   003760  6E22               	movwf	___aldiv@quotient^0,c
  7246   003762  0E00               	movlw	0
  7247   003764  6E23               	movwf	(___aldiv@quotient+1)^0,c
  7248   003766  0E00               	movlw	0
  7249   003768  6E24               	movwf	(___aldiv@quotient+2)^0,c
  7250   00376A  0E00               	movlw	0
  7251   00376C  6E25               	movwf	(___aldiv@quotient+3)^0,c
  7252   00376E  501C               	movf	___aldiv@divisor^0,w,c
  7253   003770  101D               	iorwf	(___aldiv@divisor+1)^0,w,c
  7254   003772  101E               	iorwf	(___aldiv@divisor+2)^0,w,c
  7255   003774  101F               	iorwf	(___aldiv@divisor+3)^0,w,c
  7256   003776  B4D8               	btfsc	status,2,c
  7257   003778  EFC0  F01B         	goto	u1601
  7258   00377C  EFC2  F01B         	goto	u1600
  7259   003780                     u1601:
  7260   003780  EFF8  F01B         	goto	l2861
  7261   003784                     u1600:
  7262   003784  0E01               	movlw	1
  7263   003786  6E20               	movwf	___aldiv@counter^0,c
  7264   003788  EFCC  F01B         	goto	l2847
  7265   00378C                     l2845:
  7266   00378C  90D8               	bcf	status,0,c
  7267   00378E  361C               	rlcf	___aldiv@divisor^0,f,c
  7268   003790  361D               	rlcf	(___aldiv@divisor+1)^0,f,c
  7269   003792  361E               	rlcf	(___aldiv@divisor+2)^0,f,c
  7270   003794  361F               	rlcf	(___aldiv@divisor+3)^0,f,c
  7271   003796  2A20               	incf	___aldiv@counter^0,f,c
  7272   003798                     l2847:
  7273   003798  AE1F               	btfss	(___aldiv@divisor+3)^0,7,c
  7274   00379A  EFD1  F01B         	goto	u1611
  7275   00379E  EFD3  F01B         	goto	u1610
  7276   0037A2                     u1611:
  7277   0037A2  EFC6  F01B         	goto	l2845
  7278   0037A6                     u1610:
  7279   0037A6                     l2849:
  7280   0037A6  90D8               	bcf	status,0,c
  7281   0037A8  3622               	rlcf	___aldiv@quotient^0,f,c
  7282   0037AA  3623               	rlcf	(___aldiv@quotient+1)^0,f,c
  7283   0037AC  3624               	rlcf	(___aldiv@quotient+2)^0,f,c
  7284   0037AE  3625               	rlcf	(___aldiv@quotient+3)^0,f,c
  7285   0037B0  501C               	movf	___aldiv@divisor^0,w,c
  7286   0037B2  5C18               	subwf	___aldiv@dividend^0,w,c
  7287   0037B4  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7288   0037B6  5819               	subwfb	(___aldiv@dividend+1)^0,w,c
  7289   0037B8  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7290   0037BA  581A               	subwfb	(___aldiv@dividend+2)^0,w,c
  7291   0037BC  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7292   0037BE  581B               	subwfb	(___aldiv@dividend+3)^0,w,c
  7293   0037C0  A0D8               	btfss	status,0,c
  7294   0037C2  EFE5  F01B         	goto	u1621
  7295   0037C6  EFE7  F01B         	goto	u1620
  7296   0037CA                     u1621:
  7297   0037CA  EFF0  F01B         	goto	l2857
  7298   0037CE                     u1620:
  7299   0037CE  501C               	movf	___aldiv@divisor^0,w,c
  7300   0037D0  5E18               	subwf	___aldiv@dividend^0,f,c
  7301   0037D2  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7302   0037D4  5A19               	subwfb	(___aldiv@dividend+1)^0,f,c
  7303   0037D6  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7304   0037D8  5A1A               	subwfb	(___aldiv@dividend+2)^0,f,c
  7305   0037DA  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7306   0037DC  5A1B               	subwfb	(___aldiv@dividend+3)^0,f,c
  7307   0037DE  8022               	bsf	___aldiv@quotient^0,0,c
  7308   0037E0                     l2857:
  7309   0037E0  90D8               	bcf	status,0,c
  7310   0037E2  321F               	rrcf	(___aldiv@divisor+3)^0,f,c
  7311   0037E4  321E               	rrcf	(___aldiv@divisor+2)^0,f,c
  7312   0037E6  321D               	rrcf	(___aldiv@divisor+1)^0,f,c
  7313   0037E8  321C               	rrcf	___aldiv@divisor^0,f,c
  7314   0037EA  2E20               	decfsz	___aldiv@counter^0,f,c
  7315   0037EC  EFD3  F01B         	goto	l2849
  7316   0037F0                     l2861:
  7317   0037F0  5021               	movf	___aldiv@sign^0,w,c
  7318   0037F2  B4D8               	btfsc	status,2,c
  7319   0037F4  EFFE  F01B         	goto	u1631
  7320   0037F8  EF00  F01C         	goto	u1630
  7321   0037FC                     u1631:
  7322   0037FC  EF08  F01C         	goto	l2865
  7323   003800                     u1630:
  7324   003800  1E25               	comf	(___aldiv@quotient+3)^0,f,c
  7325   003802  1E24               	comf	(___aldiv@quotient+2)^0,f,c
  7326   003804  1E23               	comf	(___aldiv@quotient+1)^0,f,c
  7327   003806  6C22               	negf	___aldiv@quotient^0,c
  7328   003808  0E00               	movlw	0
  7329   00380A  2223               	addwfc	(___aldiv@quotient+1)^0,f,c
  7330   00380C  2224               	addwfc	(___aldiv@quotient+2)^0,f,c
  7331   00380E  2225               	addwfc	(___aldiv@quotient+3)^0,f,c
  7332   003810                     l2865:
  7333   003810  C022  F018         	movff	___aldiv@quotient,?___aldiv
  7334   003814  C023  F019         	movff	___aldiv@quotient+1,?___aldiv+1
  7335   003818  C024  F01A         	movff	___aldiv@quotient+2,?___aldiv+2
  7336   00381C  C025  F01B         	movff	___aldiv@quotient+3,?___aldiv+3
  7337   003820  0012               	return		;funcret
  7338   003822                     __end_of___aldiv:
  7339                           	callstack 0
  7340                           
  7341 ;; *************** function _calibration *****************
  7342 ;; Defined at:
  7343 ;;		line 482 in file "dc_motor.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  7346 ;;		 -> main@motorL(10), 
  7347 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  7348 ;;		 -> main@motorR(10), 
  7349 ;;  turnSpeed       1   48[COMRAM] unsigned char 
  7350 ;;  turnDuration    2   49[COMRAM] PTR unsigned char 
  7351 ;;		 -> main@turnDuration(1), 
  7352 ;;  turnRamp        1   51[COMRAM] unsigned char 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  1    wreg      void 
  7357 ;; Registers used:
  7358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7364 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7367 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7368 ;;Total ram usage:       10 bytes
  7369 ;; Hardware stack levels used: 1
  7370 ;; Hardware stack levels required when called: 8
  7371 ;; This function calls:
  7372 ;;		_turnLeft
  7373 ;;		_turnRight
  7374 ;; This function is called by:
  7375 ;;		_main
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           	psect	text28
  7380   0025A2                     __ptext28:
  7381                           	callstack 0
  7382   0025A2                     _calibration:
  7383                           	callstack 22
  7384   0025A2                     
  7385                           ;dc_motor.c: 482: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 483: {;dc_motor.c: 485:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7386   0025A2  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7387   0025A6  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7388   0025AA  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7389   0025AE  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7390   0025B2  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7391   0025B6  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7392   0025BA  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7393   0025BE  50DF               	movf	indf2,w,c
  7394   0025C0  6E24               	movwf	turnLeft@turnDuration^0,c
  7395   0025C2  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7396   0025C6  EC46  F019         	call	_turnLeft	;wreg free
  7397   0025CA                     
  7398                           ;dc_motor.c: 486:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7399   0025CA  0E05               	movlw	5
  7400   0025CC  6E36               	movwf	(??_calibration+1)^0,c
  7401   0025CE  0E0F               	movlw	15
  7402   0025D0  6E35               	movwf	??_calibration^0,c
  7403   0025D2  0EF1               	movlw	241
  7404   0025D4                     u3447:
  7405   0025D4  2EE8               	decfsz	wreg,f,c
  7406   0025D6  D7FE               	bra	u3447
  7407   0025D8  2E35               	decfsz	??_calibration^0,f,c
  7408   0025DA  D7FC               	bra	u3447
  7409   0025DC  2E36               	decfsz	(??_calibration+1)^0,f,c
  7410   0025DE  D7FA               	bra	u3447
  7411   0025E0  0000               	nop	
  7412   0025E2                     
  7413                           ;dc_motor.c: 487:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7414   0025E2  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7415   0025E6  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7416   0025EA  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7417   0025EE  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7418   0025F2  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7419   0025F6  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7420   0025FA  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7421   0025FE  50DF               	movf	indf2,w,c
  7422   002600  6E24               	movwf	turnLeft@turnDuration^0,c
  7423   002602  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7424   002606  EC46  F019         	call	_turnLeft	;wreg free
  7425                           
  7426                           ;dc_motor.c: 488:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7427   00260A  0E05               	movlw	5
  7428   00260C  6E36               	movwf	(??_calibration+1)^0,c
  7429   00260E  0E0F               	movlw	15
  7430   002610  6E35               	movwf	??_calibration^0,c
  7431   002612  0EF1               	movlw	241
  7432   002614                     u3457:
  7433   002614  2EE8               	decfsz	wreg,f,c
  7434   002616  D7FE               	bra	u3457
  7435   002618  2E35               	decfsz	??_calibration^0,f,c
  7436   00261A  D7FC               	bra	u3457
  7437   00261C  2E36               	decfsz	(??_calibration+1)^0,f,c
  7438   00261E  D7FA               	bra	u3457
  7439   002620  0000               	nop	
  7440   002622                     
  7441                           ;dc_motor.c: 489:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7442   002622  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7443   002626  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7444   00262A  C02F  F021         	movff	calibration@mR,turnRight@mR
  7445   00262E  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7446   002632  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7447   002636  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7448   00263A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7449   00263E  50DF               	movf	indf2,w,c
  7450   002640  6E24               	movwf	turnRight@turnDuration^0,c
  7451   002642  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7452   002646  EC5C  F018         	call	_turnRight	;wreg free
  7453   00264A                     
  7454                           ;dc_motor.c: 490:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7455   00264A  0E05               	movlw	5
  7456   00264C  6E36               	movwf	(??_calibration+1)^0,c
  7457   00264E  0E0F               	movlw	15
  7458   002650  6E35               	movwf	??_calibration^0,c
  7459   002652  0EF1               	movlw	241
  7460   002654                     u3467:
  7461   002654  2EE8               	decfsz	wreg,f,c
  7462   002656  D7FE               	bra	u3467
  7463   002658  2E35               	decfsz	??_calibration^0,f,c
  7464   00265A  D7FC               	bra	u3467
  7465   00265C  2E36               	decfsz	(??_calibration+1)^0,f,c
  7466   00265E  D7FA               	bra	u3467
  7467   002660  0000               	nop	
  7468                           
  7469                           ;dc_motor.c: 491:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7470   002662  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7471   002666  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7472   00266A  C02F  F021         	movff	calibration@mR,turnRight@mR
  7473   00266E  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7474   002672  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7475   002676  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7476   00267A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7477   00267E  50DF               	movf	indf2,w,c
  7478   002680  6E24               	movwf	turnRight@turnDuration^0,c
  7479   002682  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7480   002686  EC5C  F018         	call	_turnRight	;wreg free
  7481   00268A                     l635:
  7482   00268A  A48E               	btfss	142,2,c	;volatile
  7483   00268C  EF4A  F013         	goto	u1901
  7484   002690  EF4C  F013         	goto	u1900
  7485   002694                     u1901:
  7486   002694  EF53  F013         	goto	l639
  7487   002698                     u1900:
  7488   002698  B68E               	btfsc	142,3,c	;volatile
  7489   00269A  EF51  F013         	goto	u1911
  7490   00269E  EF53  F013         	goto	u1910
  7491   0026A2                     u1911:
  7492   0026A2  EF45  F013         	goto	l635
  7493   0026A6                     u1910:
  7494   0026A6                     l639:
  7495                           
  7496                           ;dc_motor.c: 496:         if (!PORTFbits.RF2 && *turnDuration>0) {
  7497   0026A6  B48E               	btfsc	142,2,c	;volatile
  7498   0026A8  EF58  F013         	goto	u1921
  7499   0026AC  EF5A  F013         	goto	u1920
  7500   0026B0                     u1921:
  7501   0026B0  EF6E  F013         	goto	l640
  7502   0026B4                     u1920:
  7503   0026B4  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7504   0026B8  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7505   0026BC  50DF               	movf	indf2,w,c
  7506   0026BE  B4D8               	btfsc	status,2,c
  7507   0026C0  EF64  F013         	goto	u1931
  7508   0026C4  EF66  F013         	goto	u1930
  7509   0026C8                     u1931:
  7510   0026C8  EF6E  F013         	goto	l640
  7511   0026CC                     u1930:
  7512   0026CC                     
  7513                           ;dc_motor.c: 497:             (*turnDuration)--;
  7514   0026CC  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7515   0026D0  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7516   0026D4  06DF               	decf	indf2,f,c
  7517   0026D6                     
  7518                           ;dc_motor.c: 498:             LATDbits.LATD7 = 1;
  7519   0026D6  8E7C               	bsf	124,7,c	;volatile
  7520                           
  7521                           ;dc_motor.c: 499:         }
  7522   0026D8  EF7B  F013         	goto	l3251
  7523   0026DC                     l640:
  7524   0026DC  B68E               	btfsc	142,3,c	;volatile
  7525   0026DE  EF73  F013         	goto	u1941
  7526   0026E2  EF75  F013         	goto	u1940
  7527   0026E6                     u1941:
  7528   0026E6  EF7B  F013         	goto	l3251
  7529   0026EA                     u1940:
  7530   0026EA                     
  7531                           ;dc_motor.c: 502:             (*turnDuration)++;
  7532   0026EA  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7533   0026EE  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7534   0026F2  2ADF               	incf	indf2,f,c
  7535   0026F4                     
  7536                           ;dc_motor.c: 503:             LATHbits.LATH3 = 1;
  7537   0026F4  8680               	bsf	128,3,c	;volatile
  7538   0026F6                     l3251:
  7539                           
  7540                           ;dc_motor.c: 506:         _delay((unsigned long)((500)*(64000000/4000.0)));
  7541   0026F6  0E29               	movlw	41
  7542   0026F8  6E36               	movwf	(??_calibration+1)^0,c
  7543   0026FA  0E96               	movlw	150
  7544   0026FC  6E35               	movwf	??_calibration^0,c
  7545   0026FE  0E7F               	movlw	127
  7546   002700                     u3477:
  7547   002700  2EE8               	decfsz	wreg,f,c
  7548   002702  D7FE               	bra	u3477
  7549   002704  2E35               	decfsz	??_calibration^0,f,c
  7550   002706  D7FC               	bra	u3477
  7551   002708  2E36               	decfsz	(??_calibration+1)^0,f,c
  7552   00270A  D7FA               	bra	u3477
  7553   00270C  0000               	nop	
  7554   00270E                     
  7555                           ;dc_motor.c: 508:         if (!PORTFbits.RF3) {
  7556   00270E  B68E               	btfsc	142,3,c	;volatile
  7557   002710  EF8C  F013         	goto	u1951
  7558   002714  EF8E  F013         	goto	u1950
  7559   002718                     u1951:
  7560   002718  EF95  F013         	goto	l643
  7561   00271C                     u1950:
  7562   00271C                     
  7563                           ;dc_motor.c: 509:             (*turnDuration)--;
  7564   00271C  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7565   002720  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7566   002724  06DF               	decf	indf2,f,c
  7567                           
  7568                           ;dc_motor.c: 510:             break;
  7569   002726  EF0D  F014         	goto	l644
  7570   00272A                     l643:
  7571                           
  7572                           ;dc_motor.c: 513:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7573   00272A  9680               	bcf	128,3,c	;volatile
  7574   00272C  9E7C               	bcf	124,7,c	;volatile
  7575   00272E                     
  7576                           ;dc_motor.c: 516:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7577   00272E  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7578   002732  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7579   002736  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7580   00273A  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7581   00273E  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7582   002742  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7583   002746  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7584   00274A  50DF               	movf	indf2,w,c
  7585   00274C  6E24               	movwf	turnLeft@turnDuration^0,c
  7586   00274E  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7587   002752  EC46  F019         	call	_turnLeft	;wreg free
  7588   002756                     
  7589                           ;dc_motor.c: 517:         _delay((unsigned long)((50)*(64000000/4000.0)));
  7590   002756  0E05               	movlw	5
  7591   002758  6E36               	movwf	(??_calibration+1)^0,c
  7592   00275A  0E0F               	movlw	15
  7593   00275C  6E35               	movwf	??_calibration^0,c
  7594   00275E  0EF1               	movlw	241
  7595   002760                     u3487:
  7596   002760  2EE8               	decfsz	wreg,f,c
  7597   002762  D7FE               	bra	u3487
  7598   002764  2E35               	decfsz	??_calibration^0,f,c
  7599   002766  D7FC               	bra	u3487
  7600   002768  2E36               	decfsz	(??_calibration+1)^0,f,c
  7601   00276A  D7FA               	bra	u3487
  7602   00276C  0000               	nop	
  7603   00276E                     
  7604                           ;dc_motor.c: 518:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7605   00276E  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7606   002772  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7607   002776  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7608   00277A  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7609   00277E  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7610   002782  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7611   002786  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7612   00278A  50DF               	movf	indf2,w,c
  7613   00278C  6E24               	movwf	turnLeft@turnDuration^0,c
  7614   00278E  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7615   002792  EC46  F019         	call	_turnLeft	;wreg free
  7616                           
  7617                           ;dc_motor.c: 519:         _delay((unsigned long)((50)*(64000000/4000.0)));
  7618   002796  0E05               	movlw	5
  7619   002798  6E36               	movwf	(??_calibration+1)^0,c
  7620   00279A  0E0F               	movlw	15
  7621   00279C  6E35               	movwf	??_calibration^0,c
  7622   00279E  0EF1               	movlw	241
  7623   0027A0                     u3497:
  7624   0027A0  2EE8               	decfsz	wreg,f,c
  7625   0027A2  D7FE               	bra	u3497
  7626   0027A4  2E35               	decfsz	??_calibration^0,f,c
  7627   0027A6  D7FC               	bra	u3497
  7628   0027A8  2E36               	decfsz	(??_calibration+1)^0,f,c
  7629   0027AA  D7FA               	bra	u3497
  7630   0027AC  0000               	nop	
  7631   0027AE                     
  7632                           ;dc_motor.c: 520:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7633   0027AE  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7634   0027B2  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7635   0027B6  C02F  F021         	movff	calibration@mR,turnRight@mR
  7636   0027BA  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7637   0027BE  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7638   0027C2  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7639   0027C6  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7640   0027CA  50DF               	movf	indf2,w,c
  7641   0027CC  6E24               	movwf	turnRight@turnDuration^0,c
  7642   0027CE  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7643   0027D2  EC5C  F018         	call	_turnRight	;wreg free
  7644   0027D6                     
  7645                           ;dc_motor.c: 521:         _delay((unsigned long)((50)*(64000000/4000.0)));
  7646   0027D6  0E05               	movlw	5
  7647   0027D8  6E36               	movwf	(??_calibration+1)^0,c
  7648   0027DA  0E0F               	movlw	15
  7649   0027DC  6E35               	movwf	??_calibration^0,c
  7650   0027DE  0EF1               	movlw	241
  7651   0027E0                     u3507:
  7652   0027E0  2EE8               	decfsz	wreg,f,c
  7653   0027E2  D7FE               	bra	u3507
  7654   0027E4  2E35               	decfsz	??_calibration^0,f,c
  7655   0027E6  D7FC               	bra	u3507
  7656   0027E8  2E36               	decfsz	(??_calibration+1)^0,f,c
  7657   0027EA  D7FA               	bra	u3507
  7658   0027EC  0000               	nop	
  7659                           
  7660                           ;dc_motor.c: 522:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7661   0027EE  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7662   0027F2  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7663   0027F6  C02F  F021         	movff	calibration@mR,turnRight@mR
  7664   0027FA  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7665   0027FE  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7666   002802  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7667   002806  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7668   00280A  50DF               	movf	indf2,w,c
  7669   00280C  6E24               	movwf	turnRight@turnDuration^0,c
  7670   00280E  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7671   002812  EC5C  F018         	call	_turnRight	;wreg free
  7672   002816  EF45  F013         	goto	l635
  7673   00281A                     l644:
  7674                           
  7675                           ;dc_motor.c: 527:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7676   00281A  8680               	bsf	128,3,c	;volatile
  7677   00281C  8E7C               	bsf	124,7,c	;volatile
  7678   00281E                     
  7679                           ;dc_motor.c: 528:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7680   00281E  0E09               	movlw	9
  7681   002820  6E36               	movwf	(??_calibration+1)^0,c
  7682   002822  0E1E               	movlw	30
  7683   002824  6E35               	movwf	??_calibration^0,c
  7684   002826  0EE4               	movlw	228
  7685   002828                     u3517:
  7686   002828  2EE8               	decfsz	wreg,f,c
  7687   00282A  D7FE               	bra	u3517
  7688   00282C  2E35               	decfsz	??_calibration^0,f,c
  7689   00282E  D7FC               	bra	u3517
  7690   002830  2E36               	decfsz	(??_calibration+1)^0,f,c
  7691   002832  D7FA               	bra	u3517
  7692   002834  D000               	nop2	
  7693   002836                     
  7694                           ;dc_motor.c: 529:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7695   002836  9680               	bcf	128,3,c	;volatile
  7696   002838  9E7C               	bcf	124,7,c	;volatile
  7697   00283A  0012               	return		;funcret
  7698   00283C                     __end_of_calibration:
  7699                           	callstack 0
  7700                           
  7701 ;; *************** function _turnRight *****************
  7702 ;; Defined at:
  7703 ;;		line 400 in file "dc_motor.c"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7706 ;;		 -> main@motorL(10), 
  7707 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7708 ;;		 -> main@motorR(10), 
  7709 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  7710 ;;  turnDuration    1   35[COMRAM] unsigned char 
  7711 ;;  turnRamp        1   36[COMRAM] unsigned char 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  cur_power       2   42[COMRAM] int 
  7714 ;;  i               2   40[COMRAM] int 
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  1    wreg      void 
  7717 ;; Registers used:
  7718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/0
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7724 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7725 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7726 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7727 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7728 ;;Total ram usage:       14 bytes
  7729 ;; Hardware stack levels used: 1
  7730 ;; Hardware stack levels required when called: 7
  7731 ;; This function calls:
  7732 ;;		_setMotorPWM
  7733 ;; This function is called by:
  7734 ;;		_move
  7735 ;;		_returnHome
  7736 ;;		_lostReturnHome
  7737 ;;		_calibration
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           	psect	text29
  7742   0030B8                     __ptext29:
  7743                           	callstack 0
  7744   0030B8                     _turnRight:
  7745                           	callstack 22
  7746   0030B8                     
  7747                           ;dc_motor.c: 400: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 401: {;dc_motor.c: 402:     mL->dir
      +                          ection = 1;
  7748   0030B8  EE20 F001          	lfsr	2,1
  7749   0030BC  501F               	movf	turnRight@mL^0,w,c
  7750   0030BE  26D9               	addwf	fsr2l,f,c
  7751   0030C0  5020               	movf	(turnRight@mL+1)^0,w,c
  7752   0030C2  22DA               	addwfc	fsr2h,f,c
  7753   0030C4  0E01               	movlw	1
  7754   0030C6  6EDF               	movwf	indf2,c
  7755                           
  7756                           ;dc_motor.c: 403:     mR->direction = 0;
  7757   0030C8  EE20 F001          	lfsr	2,1
  7758   0030CC  5021               	movf	turnRight@mR^0,w,c
  7759   0030CE  26D9               	addwf	fsr2l,f,c
  7760   0030D0  5022               	movf	(turnRight@mR+1)^0,w,c
  7761   0030D2  22DA               	addwfc	fsr2h,f,c
  7762   0030D4  6ADF               	clrf	indf2,c
  7763   0030D6                     
  7764                           ;dc_motor.c: 404:     int i;;dc_motor.c: 405:     int cur_power;;dc_motor.c: 406:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  7765   0030D6  0E00               	movlw	0
  7766   0030D8  6E2C               	movwf	(turnRight@cur_power+1)^0,c
  7767   0030DA  0E01               	movlw	1
  7768   0030DC  6E2B               	movwf	turnRight@cur_power^0,c
  7769   0030DE  EFBA  F018         	goto	l2693
  7770   0030E2                     l2679:
  7771                           
  7772                           ;dc_motor.c: 407:         mL->power = cur_power+mL->compensation;
  7773   0030E2  EE20 F009          	lfsr	2,9
  7774   0030E6  501F               	movf	turnRight@mL^0,w,c
  7775   0030E8  26D9               	addwf	fsr2l,f,c
  7776   0030EA  5020               	movf	(turnRight@mL+1)^0,w,c
  7777   0030EC  22DA               	addwfc	fsr2h,f,c
  7778   0030EE  50DF               	movf	indf2,w,c
  7779   0030F0  242B               	addwf	turnRight@cur_power^0,w,c
  7780   0030F2  C01F  FFD9         	movff	turnRight@mL,fsr2l
  7781   0030F6  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  7782   0030FA  6EDF               	movwf	indf2,c
  7783                           
  7784                           ;dc_motor.c: 408:         mR->power = cur_power+mR->compensation;
  7785   0030FC  EE20 F009          	lfsr	2,9
  7786   003100  5021               	movf	turnRight@mR^0,w,c
  7787   003102  26D9               	addwf	fsr2l,f,c
  7788   003104  5022               	movf	(turnRight@mR+1)^0,w,c
  7789   003106  22DA               	addwfc	fsr2h,f,c
  7790   003108  50DF               	movf	indf2,w,c
  7791   00310A  242B               	addwf	turnRight@cur_power^0,w,c
  7792   00310C  C021  FFD9         	movff	turnRight@mR,fsr2l
  7793   003110  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  7794   003114  6EDF               	movwf	indf2,c
  7795   003116                     
  7796                           ;dc_motor.c: 409:         setMotorPWM(mL);
  7797   003116  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  7798   00311A  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  7799   00311E  EC30  F01A         	call	_setMotorPWM	;wreg free
  7800   003122                     
  7801                           ;dc_motor.c: 410:         setMotorPWM(mR);
  7802   003122  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  7803   003126  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  7804   00312A  EC30  F01A         	call	_setMotorPWM	;wreg free
  7805   00312E                     
  7806                           ;dc_motor.c: 411:         for (i=0;i<turnRamp;i++) {
  7807   00312E  0E00               	movlw	0
  7808   003130  6E2A               	movwf	(turnRight@i+1)^0,c
  7809   003132  0E00               	movlw	0
  7810   003134  6E29               	movwf	turnRight@i^0,c
  7811   003136  EFA6  F018         	goto	l593
  7812   00313A                     l2687:
  7813                           
  7814                           ;dc_motor.c: 412:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7815   00313A  0ED0               	movlw	208
  7816   00313C  6E26               	movwf	??_turnRight^0,c
  7817   00313E  0ECA               	movlw	202
  7818   003140                     u3527:
  7819   003140  2EE8               	decfsz	wreg,f,c
  7820   003142  D7FE               	bra	u3527
  7821   003144  2E26               	decfsz	??_turnRight^0,f,c
  7822   003146  D7FC               	bra	u3527
  7823   003148                     
  7824                           ;dc_motor.c: 413:         }
  7825   003148  4A29               	infsnz	turnRight@i^0,f,c
  7826   00314A  2A2A               	incf	(turnRight@i+1)^0,f,c
  7827   00314C                     l593:
  7828   00314C  5025               	movf	turnRight@turnRamp^0,w,c
  7829   00314E  6E26               	movwf	??_turnRight^0,c
  7830   003150  6A27               	clrf	(??_turnRight+1)^0,c
  7831   003152  5026               	movf	??_turnRight^0,w,c
  7832   003154  5C29               	subwf	turnRight@i^0,w,c
  7833   003156  502A               	movf	(turnRight@i+1)^0,w,c
  7834   003158  0A80               	xorlw	128
  7835   00315A  6E28               	movwf	(??_turnRight+2)^0,c
  7836   00315C  5027               	movf	(??_turnRight+1)^0,w,c
  7837   00315E  0A80               	xorlw	128
  7838   003160  5828               	subwfb	(??_turnRight+2)^0,w,c
  7839   003162  A0D8               	btfss	status,0,c
  7840   003164  EFB6  F018         	goto	u1411
  7841   003168  EFB8  F018         	goto	u1410
  7842   00316C                     u1411:
  7843   00316C  EF9D  F018         	goto	l2687
  7844   003170                     u1410:
  7845   003170                     
  7846                           ;dc_motor.c: 414:     }
  7847   003170  4A2B               	infsnz	turnRight@cur_power^0,f,c
  7848   003172  2A2C               	incf	(turnRight@cur_power+1)^0,f,c
  7849   003174                     l2693:
  7850   003174  5023               	movf	turnRight@turnSpeed^0,w,c
  7851   003176  6E26               	movwf	??_turnRight^0,c
  7852   003178  6A27               	clrf	(??_turnRight+1)^0,c
  7853   00317A  502B               	movf	turnRight@cur_power^0,w,c
  7854   00317C  5C26               	subwf	??_turnRight^0,w,c
  7855   00317E  5027               	movf	(??_turnRight+1)^0,w,c
  7856   003180  0A80               	xorlw	128
  7857   003182  6E28               	movwf	(??_turnRight+2)^0,c
  7858   003184  502C               	movf	(turnRight@cur_power+1)^0,w,c
  7859   003186  0A80               	xorlw	128
  7860   003188  5828               	subwfb	(??_turnRight+2)^0,w,c
  7861   00318A  B0D8               	btfsc	status,0,c
  7862   00318C  EFCA  F018         	goto	u1421
  7863   003190  EFCC  F018         	goto	u1420
  7864   003194                     u1421:
  7865   003194  EF71  F018         	goto	l2679
  7866   003198                     u1420:
  7867   003198                     
  7868                           ;dc_motor.c: 416:     for (i=0;i<turnDuration;i++) {
  7869   003198  0E00               	movlw	0
  7870   00319A  6E2A               	movwf	(turnRight@i+1)^0,c
  7871   00319C  0E00               	movlw	0
  7872   00319E  6E29               	movwf	turnRight@i^0,c
  7873   0031A0  EFDB  F018         	goto	l597
  7874   0031A4                     l2697:
  7875                           
  7876                           ;dc_motor.c: 417:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7877   0031A4  0ED0               	movlw	208
  7878   0031A6  6E26               	movwf	??_turnRight^0,c
  7879   0031A8  0ECA               	movlw	202
  7880   0031AA                     u3537:
  7881   0031AA  2EE8               	decfsz	wreg,f,c
  7882   0031AC  D7FE               	bra	u3537
  7883   0031AE  2E26               	decfsz	??_turnRight^0,f,c
  7884   0031B0  D7FC               	bra	u3537
  7885   0031B2                     
  7886                           ;dc_motor.c: 418:         }
  7887   0031B2  4A29               	infsnz	turnRight@i^0,f,c
  7888   0031B4  2A2A               	incf	(turnRight@i+1)^0,f,c
  7889   0031B6                     l597:
  7890   0031B6  5024               	movf	turnRight@turnDuration^0,w,c
  7891   0031B8  6E26               	movwf	??_turnRight^0,c
  7892   0031BA  6A27               	clrf	(??_turnRight+1)^0,c
  7893   0031BC  5026               	movf	??_turnRight^0,w,c
  7894   0031BE  5C29               	subwf	turnRight@i^0,w,c
  7895   0031C0  502A               	movf	(turnRight@i+1)^0,w,c
  7896   0031C2  0A80               	xorlw	128
  7897   0031C4  6E28               	movwf	(??_turnRight+2)^0,c
  7898   0031C6  5027               	movf	(??_turnRight+1)^0,w,c
  7899   0031C8  0A80               	xorlw	128
  7900   0031CA  5828               	subwfb	(??_turnRight+2)^0,w,c
  7901   0031CC  A0D8               	btfss	status,0,c
  7902   0031CE  EFEB  F018         	goto	u1431
  7903   0031D2  EFED  F018         	goto	u1430
  7904   0031D6                     u1431:
  7905   0031D6  EFD2  F018         	goto	l2697
  7906   0031DA                     u1430:
  7907   0031DA                     
  7908                           ;dc_motor.c: 420:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  7909   0031DA  C023  F02B         	movff	turnRight@turnSpeed,turnRight@cur_power
  7910   0031DE  6A2C               	clrf	(turnRight@cur_power+1)^0,c
  7911   0031E0                     l2701:
  7912   0031E0  BE2C               	btfsc	(turnRight@cur_power+1)^0,7,c
  7913   0031E2  EFF7  F018         	goto	u1440
  7914   0031E6  EFF5  F018         	goto	u1441
  7915   0031EA                     u1441:
  7916   0031EA  EFF9  F018         	goto	l2705
  7917   0031EE                     u1440:
  7918   0031EE  EF45  F019         	goto	l605
  7919   0031F2                     l2705:
  7920                           
  7921                           ;dc_motor.c: 421:         mL->power = cur_power+mL->compensation;
  7922   0031F2  EE20 F009          	lfsr	2,9
  7923   0031F6  501F               	movf	turnRight@mL^0,w,c
  7924   0031F8  26D9               	addwf	fsr2l,f,c
  7925   0031FA  5020               	movf	(turnRight@mL+1)^0,w,c
  7926   0031FC  22DA               	addwfc	fsr2h,f,c
  7927   0031FE  50DF               	movf	indf2,w,c
  7928   003200  242B               	addwf	turnRight@cur_power^0,w,c
  7929   003202  C01F  FFD9         	movff	turnRight@mL,fsr2l
  7930   003206  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  7931   00320A  6EDF               	movwf	indf2,c
  7932                           
  7933                           ;dc_motor.c: 422:         mR->power = cur_power+mR->compensation;
  7934   00320C  EE20 F009          	lfsr	2,9
  7935   003210  5021               	movf	turnRight@mR^0,w,c
  7936   003212  26D9               	addwf	fsr2l,f,c
  7937   003214  5022               	movf	(turnRight@mR+1)^0,w,c
  7938   003216  22DA               	addwfc	fsr2h,f,c
  7939   003218  50DF               	movf	indf2,w,c
  7940   00321A  242B               	addwf	turnRight@cur_power^0,w,c
  7941   00321C  C021  FFD9         	movff	turnRight@mR,fsr2l
  7942   003220  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  7943   003224  6EDF               	movwf	indf2,c
  7944   003226                     
  7945                           ;dc_motor.c: 423:         setMotorPWM(mL);
  7946   003226  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  7947   00322A  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  7948   00322E  EC30  F01A         	call	_setMotorPWM	;wreg free
  7949   003232                     
  7950                           ;dc_motor.c: 424:         setMotorPWM(mR);
  7951   003232  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  7952   003236  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  7953   00323A  EC30  F01A         	call	_setMotorPWM	;wreg free
  7954   00323E                     
  7955                           ;dc_motor.c: 425:         for (i=0;i<turnRamp;i++) {
  7956   00323E  0E00               	movlw	0
  7957   003240  6E2A               	movwf	(turnRight@i+1)^0,c
  7958   003242  0E00               	movlw	0
  7959   003244  6E29               	movwf	turnRight@i^0,c
  7960   003246  EF2E  F019         	goto	l602
  7961   00324A                     l2713:
  7962                           
  7963                           ;dc_motor.c: 426:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7964   00324A  0ED0               	movlw	208
  7965   00324C  6E26               	movwf	??_turnRight^0,c
  7966   00324E  0ECA               	movlw	202
  7967   003250                     u3547:
  7968   003250  2EE8               	decfsz	wreg,f,c
  7969   003252  D7FE               	bra	u3547
  7970   003254  2E26               	decfsz	??_turnRight^0,f,c
  7971   003256  D7FC               	bra	u3547
  7972   003258                     
  7973                           ;dc_motor.c: 427:         }
  7974   003258  4A29               	infsnz	turnRight@i^0,f,c
  7975   00325A  2A2A               	incf	(turnRight@i+1)^0,f,c
  7976   00325C                     l602:
  7977   00325C  5025               	movf	turnRight@turnRamp^0,w,c
  7978   00325E  6E26               	movwf	??_turnRight^0,c
  7979   003260  6A27               	clrf	(??_turnRight+1)^0,c
  7980   003262  5026               	movf	??_turnRight^0,w,c
  7981   003264  5C29               	subwf	turnRight@i^0,w,c
  7982   003266  502A               	movf	(turnRight@i+1)^0,w,c
  7983   003268  0A80               	xorlw	128
  7984   00326A  6E28               	movwf	(??_turnRight+2)^0,c
  7985   00326C  5027               	movf	(??_turnRight+1)^0,w,c
  7986   00326E  0A80               	xorlw	128
  7987   003270  5828               	subwfb	(??_turnRight+2)^0,w,c
  7988   003272  A0D8               	btfss	status,0,c
  7989   003274  EF3E  F019         	goto	u1451
  7990   003278  EF40  F019         	goto	u1450
  7991   00327C                     u1451:
  7992   00327C  EF25  F019         	goto	l2713
  7993   003280                     u1450:
  7994   003280                     
  7995                           ;dc_motor.c: 428:     }
  7996   003280  062B               	decf	turnRight@cur_power^0,f,c
  7997   003282  A0D8               	btfss	status,0,c
  7998   003284  062C               	decf	(turnRight@cur_power+1)^0,f,c
  7999   003286  EFF0  F018         	goto	l2701
  8000   00328A                     l605:
  8001   00328A  0012               	return		;funcret
  8002   00328C                     __end_of_turnRight:
  8003                           	callstack 0
  8004                           
  8005 ;; *************** function _turnLeft *****************
  8006 ;; Defined at:
  8007 ;;		line 368 in file "dc_motor.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8010 ;;		 -> main@motorL(10), 
  8011 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8012 ;;		 -> main@motorR(10), 
  8013 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  8014 ;;  turnDuration    1   35[COMRAM] unsigned char 
  8015 ;;  turnRamp        1   36[COMRAM] unsigned char 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  cur_power       2   42[COMRAM] int 
  8018 ;;  i               2   40[COMRAM] int 
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  1    wreg      void 
  8021 ;; Registers used:
  8022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8028 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8029 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8030 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8031 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8032 ;;Total ram usage:       14 bytes
  8033 ;; Hardware stack levels used: 1
  8034 ;; Hardware stack levels required when called: 7
  8035 ;; This function calls:
  8036 ;;		_setMotorPWM
  8037 ;; This function is called by:
  8038 ;;		_move
  8039 ;;		_returnHome
  8040 ;;		_lostReturnHome
  8041 ;;		_calibration
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text30
  8046   00328C                     __ptext30:
  8047                           	callstack 0
  8048   00328C                     _turnLeft:
  8049                           	callstack 22
  8050   00328C                     
  8051                           ;dc_motor.c: 368: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 369: {;dc_motor.c: 370:     mL->dire
      +                          ction = 0;
  8052   00328C  EE20 F001          	lfsr	2,1
  8053   003290  501F               	movf	turnLeft@mL^0,w,c
  8054   003292  26D9               	addwf	fsr2l,f,c
  8055   003294  5020               	movf	(turnLeft@mL+1)^0,w,c
  8056   003296  22DA               	addwfc	fsr2h,f,c
  8057   003298  6ADF               	clrf	indf2,c
  8058                           
  8059                           ;dc_motor.c: 371:     mR->direction = 1;
  8060   00329A  EE20 F001          	lfsr	2,1
  8061   00329E  5021               	movf	turnLeft@mR^0,w,c
  8062   0032A0  26D9               	addwf	fsr2l,f,c
  8063   0032A2  5022               	movf	(turnLeft@mR+1)^0,w,c
  8064   0032A4  22DA               	addwfc	fsr2h,f,c
  8065   0032A6  0E01               	movlw	1
  8066   0032A8  6EDF               	movwf	indf2,c
  8067   0032AA                     
  8068                           ;dc_motor.c: 372:     int i;;dc_motor.c: 373:     int cur_power;;dc_motor.c: 374:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  8069   0032AA  0E00               	movlw	0
  8070   0032AC  6E2C               	movwf	(turnLeft@cur_power+1)^0,c
  8071   0032AE  0E01               	movlw	1
  8072   0032B0  6E2B               	movwf	turnLeft@cur_power^0,c
  8073   0032B2  EFA4  F019         	goto	l2739
  8074   0032B6                     l2725:
  8075                           
  8076                           ;dc_motor.c: 375:         mL->power = cur_power+mL->compensation;
  8077   0032B6  EE20 F009          	lfsr	2,9
  8078   0032BA  501F               	movf	turnLeft@mL^0,w,c
  8079   0032BC  26D9               	addwf	fsr2l,f,c
  8080   0032BE  5020               	movf	(turnLeft@mL+1)^0,w,c
  8081   0032C0  22DA               	addwfc	fsr2h,f,c
  8082   0032C2  50DF               	movf	indf2,w,c
  8083   0032C4  242B               	addwf	turnLeft@cur_power^0,w,c
  8084   0032C6  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  8085   0032CA  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  8086   0032CE  6EDF               	movwf	indf2,c
  8087                           
  8088                           ;dc_motor.c: 376:         mR->power = cur_power+mR->compensation;
  8089   0032D0  EE20 F009          	lfsr	2,9
  8090   0032D4  5021               	movf	turnLeft@mR^0,w,c
  8091   0032D6  26D9               	addwf	fsr2l,f,c
  8092   0032D8  5022               	movf	(turnLeft@mR+1)^0,w,c
  8093   0032DA  22DA               	addwfc	fsr2h,f,c
  8094   0032DC  50DF               	movf	indf2,w,c
  8095   0032DE  242B               	addwf	turnLeft@cur_power^0,w,c
  8096   0032E0  C021  FFD9         	movff	turnLeft@mR,fsr2l
  8097   0032E4  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  8098   0032E8  6EDF               	movwf	indf2,c
  8099   0032EA                     
  8100                           ;dc_motor.c: 377:         setMotorPWM(mL);
  8101   0032EA  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  8102   0032EE  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8103   0032F2  EC30  F01A         	call	_setMotorPWM	;wreg free
  8104   0032F6                     
  8105                           ;dc_motor.c: 378:         setMotorPWM(mR);
  8106   0032F6  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  8107   0032FA  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8108   0032FE  EC30  F01A         	call	_setMotorPWM	;wreg free
  8109   003302                     
  8110                           ;dc_motor.c: 379:         for (i=0;i<turnRamp;i++) {
  8111   003302  0E00               	movlw	0
  8112   003304  6E2A               	movwf	(turnLeft@i+1)^0,c
  8113   003306  0E00               	movlw	0
  8114   003308  6E29               	movwf	turnLeft@i^0,c
  8115   00330A  EF90  F019         	goto	l576
  8116   00330E                     l2733:
  8117                           
  8118                           ;dc_motor.c: 380:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8119   00330E  0ED0               	movlw	208
  8120   003310  6E26               	movwf	??_turnLeft^0,c
  8121   003312  0ECA               	movlw	202
  8122   003314                     u3557:
  8123   003314  2EE8               	decfsz	wreg,f,c
  8124   003316  D7FE               	bra	u3557
  8125   003318  2E26               	decfsz	??_turnLeft^0,f,c
  8126   00331A  D7FC               	bra	u3557
  8127   00331C                     
  8128                           ;dc_motor.c: 381:         }
  8129   00331C  4A29               	infsnz	turnLeft@i^0,f,c
  8130   00331E  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8131   003320                     l576:
  8132   003320  5025               	movf	turnLeft@turnRamp^0,w,c
  8133   003322  6E26               	movwf	??_turnLeft^0,c
  8134   003324  6A27               	clrf	(??_turnLeft+1)^0,c
  8135   003326  5026               	movf	??_turnLeft^0,w,c
  8136   003328  5C29               	subwf	turnLeft@i^0,w,c
  8137   00332A  502A               	movf	(turnLeft@i+1)^0,w,c
  8138   00332C  0A80               	xorlw	128
  8139   00332E  6E28               	movwf	(??_turnLeft+2)^0,c
  8140   003330  5027               	movf	(??_turnLeft+1)^0,w,c
  8141   003332  0A80               	xorlw	128
  8142   003334  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8143   003336  A0D8               	btfss	status,0,c
  8144   003338  EFA0  F019         	goto	u1461
  8145   00333C  EFA2  F019         	goto	u1460
  8146   003340                     u1461:
  8147   003340  EF87  F019         	goto	l2733
  8148   003344                     u1460:
  8149   003344                     
  8150                           ;dc_motor.c: 382:     }
  8151   003344  4A2B               	infsnz	turnLeft@cur_power^0,f,c
  8152   003346  2A2C               	incf	(turnLeft@cur_power+1)^0,f,c
  8153   003348                     l2739:
  8154   003348  5023               	movf	turnLeft@turnSpeed^0,w,c
  8155   00334A  6E26               	movwf	??_turnLeft^0,c
  8156   00334C  6A27               	clrf	(??_turnLeft+1)^0,c
  8157   00334E  502B               	movf	turnLeft@cur_power^0,w,c
  8158   003350  5C26               	subwf	??_turnLeft^0,w,c
  8159   003352  5027               	movf	(??_turnLeft+1)^0,w,c
  8160   003354  0A80               	xorlw	128
  8161   003356  6E28               	movwf	(??_turnLeft+2)^0,c
  8162   003358  502C               	movf	(turnLeft@cur_power+1)^0,w,c
  8163   00335A  0A80               	xorlw	128
  8164   00335C  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8165   00335E  B0D8               	btfsc	status,0,c
  8166   003360  EFB4  F019         	goto	u1471
  8167   003364  EFB6  F019         	goto	u1470
  8168   003368                     u1471:
  8169   003368  EF5B  F019         	goto	l2725
  8170   00336C                     u1470:
  8171   00336C                     
  8172                           ;dc_motor.c: 384:     for (i=0;i<turnDuration;i++) {
  8173   00336C  0E00               	movlw	0
  8174   00336E  6E2A               	movwf	(turnLeft@i+1)^0,c
  8175   003370  0E00               	movlw	0
  8176   003372  6E29               	movwf	turnLeft@i^0,c
  8177   003374  EFC5  F019         	goto	l580
  8178   003378                     l2743:
  8179                           
  8180                           ;dc_motor.c: 385:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8181   003378  0ED0               	movlw	208
  8182   00337A  6E26               	movwf	??_turnLeft^0,c
  8183   00337C  0ECA               	movlw	202
  8184   00337E                     u3567:
  8185   00337E  2EE8               	decfsz	wreg,f,c
  8186   003380  D7FE               	bra	u3567
  8187   003382  2E26               	decfsz	??_turnLeft^0,f,c
  8188   003384  D7FC               	bra	u3567
  8189   003386                     
  8190                           ;dc_motor.c: 386:         }
  8191   003386  4A29               	infsnz	turnLeft@i^0,f,c
  8192   003388  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8193   00338A                     l580:
  8194   00338A  5024               	movf	turnLeft@turnDuration^0,w,c
  8195   00338C  6E26               	movwf	??_turnLeft^0,c
  8196   00338E  6A27               	clrf	(??_turnLeft+1)^0,c
  8197   003390  5026               	movf	??_turnLeft^0,w,c
  8198   003392  5C29               	subwf	turnLeft@i^0,w,c
  8199   003394  502A               	movf	(turnLeft@i+1)^0,w,c
  8200   003396  0A80               	xorlw	128
  8201   003398  6E28               	movwf	(??_turnLeft+2)^0,c
  8202   00339A  5027               	movf	(??_turnLeft+1)^0,w,c
  8203   00339C  0A80               	xorlw	128
  8204   00339E  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8205   0033A0  A0D8               	btfss	status,0,c
  8206   0033A2  EFD5  F019         	goto	u1481
  8207   0033A6  EFD7  F019         	goto	u1480
  8208   0033AA                     u1481:
  8209   0033AA  EFBC  F019         	goto	l2743
  8210   0033AE                     u1480:
  8211   0033AE                     
  8212                           ;dc_motor.c: 388:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  8213   0033AE  C023  F02B         	movff	turnLeft@turnSpeed,turnLeft@cur_power
  8214   0033B2  6A2C               	clrf	(turnLeft@cur_power+1)^0,c
  8215   0033B4                     l2747:
  8216   0033B4  BE2C               	btfsc	(turnLeft@cur_power+1)^0,7,c
  8217   0033B6  EFE1  F019         	goto	u1490
  8218   0033BA  EFDF  F019         	goto	u1491
  8219   0033BE                     u1491:
  8220   0033BE  EFE3  F019         	goto	l2751
  8221   0033C2                     u1490:
  8222   0033C2  EF2F  F01A         	goto	l588
  8223   0033C6                     l2751:
  8224                           
  8225                           ;dc_motor.c: 389:         mL->power = cur_power+mL->compensation;
  8226   0033C6  EE20 F009          	lfsr	2,9
  8227   0033CA  501F               	movf	turnLeft@mL^0,w,c
  8228   0033CC  26D9               	addwf	fsr2l,f,c
  8229   0033CE  5020               	movf	(turnLeft@mL+1)^0,w,c
  8230   0033D0  22DA               	addwfc	fsr2h,f,c
  8231   0033D2  50DF               	movf	indf2,w,c
  8232   0033D4  242B               	addwf	turnLeft@cur_power^0,w,c
  8233   0033D6  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  8234   0033DA  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  8235   0033DE  6EDF               	movwf	indf2,c
  8236                           
  8237                           ;dc_motor.c: 390:         mR->power = cur_power+mR->compensation;
  8238   0033E0  EE20 F009          	lfsr	2,9
  8239   0033E4  5021               	movf	turnLeft@mR^0,w,c
  8240   0033E6  26D9               	addwf	fsr2l,f,c
  8241   0033E8  5022               	movf	(turnLeft@mR+1)^0,w,c
  8242   0033EA  22DA               	addwfc	fsr2h,f,c
  8243   0033EC  50DF               	movf	indf2,w,c
  8244   0033EE  242B               	addwf	turnLeft@cur_power^0,w,c
  8245   0033F0  C021  FFD9         	movff	turnLeft@mR,fsr2l
  8246   0033F4  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  8247   0033F8  6EDF               	movwf	indf2,c
  8248   0033FA                     
  8249                           ;dc_motor.c: 391:         setMotorPWM(mL);
  8250   0033FA  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  8251   0033FE  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8252   003402  EC30  F01A         	call	_setMotorPWM	;wreg free
  8253   003406                     
  8254                           ;dc_motor.c: 392:         setMotorPWM(mR);
  8255   003406  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  8256   00340A  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8257   00340E  EC30  F01A         	call	_setMotorPWM	;wreg free
  8258   003412                     
  8259                           ;dc_motor.c: 393:         for (i=0;i<turnRamp;i++) {
  8260   003412  0E00               	movlw	0
  8261   003414  6E2A               	movwf	(turnLeft@i+1)^0,c
  8262   003416  0E00               	movlw	0
  8263   003418  6E29               	movwf	turnLeft@i^0,c
  8264   00341A  EF18  F01A         	goto	l585
  8265   00341E                     l2759:
  8266                           
  8267                           ;dc_motor.c: 394:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8268   00341E  0ED0               	movlw	208
  8269   003420  6E26               	movwf	??_turnLeft^0,c
  8270   003422  0ECA               	movlw	202
  8271   003424                     u3577:
  8272   003424  2EE8               	decfsz	wreg,f,c
  8273   003426  D7FE               	bra	u3577
  8274   003428  2E26               	decfsz	??_turnLeft^0,f,c
  8275   00342A  D7FC               	bra	u3577
  8276   00342C                     
  8277                           ;dc_motor.c: 395:         }
  8278   00342C  4A29               	infsnz	turnLeft@i^0,f,c
  8279   00342E  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8280   003430                     l585:
  8281   003430  5025               	movf	turnLeft@turnRamp^0,w,c
  8282   003432  6E26               	movwf	??_turnLeft^0,c
  8283   003434  6A27               	clrf	(??_turnLeft+1)^0,c
  8284   003436  5026               	movf	??_turnLeft^0,w,c
  8285   003438  5C29               	subwf	turnLeft@i^0,w,c
  8286   00343A  502A               	movf	(turnLeft@i+1)^0,w,c
  8287   00343C  0A80               	xorlw	128
  8288   00343E  6E28               	movwf	(??_turnLeft+2)^0,c
  8289   003440  5027               	movf	(??_turnLeft+1)^0,w,c
  8290   003442  0A80               	xorlw	128
  8291   003444  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8292   003446  A0D8               	btfss	status,0,c
  8293   003448  EF28  F01A         	goto	u1501
  8294   00344C  EF2A  F01A         	goto	u1500
  8295   003450                     u1501:
  8296   003450  EF0F  F01A         	goto	l2759
  8297   003454                     u1500:
  8298   003454                     
  8299                           ;dc_motor.c: 396:     }
  8300   003454  062B               	decf	turnLeft@cur_power^0,f,c
  8301   003456  A0D8               	btfss	status,0,c
  8302   003458  062C               	decf	(turnLeft@cur_power+1)^0,f,c
  8303   00345A  EFDA  F019         	goto	l2747
  8304   00345E                     l588:
  8305   00345E  0012               	return		;funcret
  8306   003460                     __end_of_turnLeft:
  8307                           	callstack 0
  8308                           
  8309 ;; *************** function _setMotorPWM *****************
  8310 ;; Defined at:
  8311 ;;		line 68 in file "dc_motor.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;  m               2   24[COMRAM] PTR struct DC_motor
  8314 ;;		 -> main@motorR(10), main@motorL(10), 
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  negDuty         1   29[COMRAM] unsigned char 
  8317 ;;  posDuty         1   28[COMRAM] unsigned char 
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  1    wreg      void 
  8320 ;; Registers used:
  8321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8331 ;;Total ram usage:        6 bytes
  8332 ;; Hardware stack levels used: 1
  8333 ;; Hardware stack levels required when called: 6
  8334 ;; This function calls:
  8335 ;;		___lwdiv
  8336 ;;		___wmul
  8337 ;; This function is called by:
  8338 ;;		_stop
  8339 ;;		_turnLeft
  8340 ;;		_turnRight
  8341 ;;		_fullSpeedAhead
  8342 ;;		_reverseOneSquare
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           	psect	text31
  8347   003460                     __ptext31:
  8348                           	callstack 0
  8349   003460                     _setMotorPWM:
  8350                           	callstack 23
  8351   003460                     
  8352                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  8353   003460  EE20 F002          	lfsr	2,2
  8354   003464  5019               	movf	setMotorPWM@m^0,w,c
  8355   003466  26D9               	addwf	fsr2l,f,c
  8356   003468  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8357   00346A  22DA               	addwfc	fsr2h,f,c
  8358   00346C  50DF               	movf	indf2,w,c
  8359   00346E  B4D8               	btfsc	status,2,c
  8360   003470  EF3C  F01A         	goto	u1311
  8361   003474  EF3E  F01A         	goto	u1310
  8362   003478                     u1311:
  8363   003478  EF72  F01A         	goto	l2587
  8364   00347C                     u1310:
  8365   00347C                     
  8366                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8367   00347C  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  8368   003480  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8369   003484  50DF               	movf	indf2,w,c
  8370   003486  6E1B               	movwf	??_setMotorPWM^0,c
  8371   003488  501B               	movf	??_setMotorPWM^0,w,c
  8372   00348A  6E0C               	movwf	___wmul@multiplier^0,c
  8373   00348C  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  8374   00348E  EE20 F003          	lfsr	2,3
  8375   003492  5019               	movf	setMotorPWM@m^0,w,c
  8376   003494  26D9               	addwf	fsr2l,f,c
  8377   003496  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8378   003498  22DA               	addwfc	fsr2h,f,c
  8379   00349A  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  8380   00349E  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  8381   0034A2  ECA1  F01F         	call	___wmul	;wreg free
  8382   0034A6  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  8383   0034AA  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  8384   0034AE  0E00               	movlw	0
  8385   0034B0  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  8386   0034B2  0E64               	movlw	100
  8387   0034B4  6E14               	movwf	___lwdiv@divisor^0,c
  8388   0034B6  EC2B  F01E         	call	___lwdiv	;wreg free
  8389   0034BA  EE20 F003          	lfsr	2,3
  8390   0034BE  5019               	movf	setMotorPWM@m^0,w,c
  8391   0034C0  26D9               	addwf	fsr2l,f,c
  8392   0034C2  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8393   0034C4  22DA               	addwfc	fsr2h,f,c
  8394   0034C6  50DF               	movf	indf2,w,c
  8395   0034C8  6E1C               	movwf	(??_setMotorPWM+1)^0,c
  8396   0034CA  5012               	movf	?___lwdiv^0,w,c
  8397   0034CC  5C1C               	subwf	(??_setMotorPWM+1)^0,w,c
  8398   0034CE  6E1D               	movwf	setMotorPWM@posDuty^0,c
  8399   0034D0                     
  8400                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  8401   0034D0  EE20 F003          	lfsr	2,3
  8402   0034D4  5019               	movf	setMotorPWM@m^0,w,c
  8403   0034D6  26D9               	addwf	fsr2l,f,c
  8404   0034D8  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8405   0034DA  22DA               	addwfc	fsr2h,f,c
  8406   0034DC  50DF               	movf	indf2,w,c
  8407   0034DE  6E1E               	movwf	setMotorPWM@negDuty^0,c
  8408                           
  8409                           ;dc_motor.c: 75:     }
  8410   0034E0  EF95  F01A         	goto	l2591
  8411   0034E4                     l2587:
  8412                           
  8413                           ;dc_motor.c: 77:         posDuty=0;
  8414   0034E4  0E00               	movlw	0
  8415   0034E6  6E1D               	movwf	setMotorPWM@posDuty^0,c
  8416   0034E8                     
  8417                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8418   0034E8  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  8419   0034EC  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8420   0034F0  50DF               	movf	indf2,w,c
  8421   0034F2  6E1B               	movwf	??_setMotorPWM^0,c
  8422   0034F4  501B               	movf	??_setMotorPWM^0,w,c
  8423   0034F6  6E0C               	movwf	___wmul@multiplier^0,c
  8424   0034F8  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  8425   0034FA  EE20 F003          	lfsr	2,3
  8426   0034FE  5019               	movf	setMotorPWM@m^0,w,c
  8427   003500  26D9               	addwf	fsr2l,f,c
  8428   003502  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8429   003504  22DA               	addwfc	fsr2h,f,c
  8430   003506  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  8431   00350A  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  8432   00350E  ECA1  F01F         	call	___wmul	;wreg free
  8433   003512  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  8434   003516  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  8435   00351A  0E00               	movlw	0
  8436   00351C  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  8437   00351E  0E64               	movlw	100
  8438   003520  6E14               	movwf	___lwdiv@divisor^0,c
  8439   003522  EC2B  F01E         	call	___lwdiv	;wreg free
  8440   003526  5012               	movf	?___lwdiv^0,w,c
  8441   003528  6E1E               	movwf	setMotorPWM@negDuty^0,c
  8442   00352A                     l2591:
  8443                           
  8444                           ;dc_motor.c: 81:     if (m->direction) {
  8445   00352A  EE20 F001          	lfsr	2,1
  8446   00352E  5019               	movf	setMotorPWM@m^0,w,c
  8447   003530  26D9               	addwf	fsr2l,f,c
  8448   003532  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8449   003534  22DA               	addwfc	fsr2h,f,c
  8450   003536  50DF               	movf	indf2,w,c
  8451   003538  B4D8               	btfsc	status,2,c
  8452   00353A  EFA1  F01A         	goto	u1321
  8453   00353E  EFA3  F01A         	goto	u1320
  8454   003542                     u1321:
  8455   003542  EFC5  F01A         	goto	l2595
  8456   003546                     u1320:
  8457   003546                     
  8458                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  8459   003546  EE20 F005          	lfsr	2,5
  8460   00354A  5019               	movf	setMotorPWM@m^0,w,c
  8461   00354C  26D9               	addwf	fsr2l,f,c
  8462   00354E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8463   003550  22DA               	addwfc	fsr2h,f,c
  8464   003552  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8465   003556  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8466   00355A  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8467   00355E  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8468   003562  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  8469                           
  8470                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  8471   003566  EE20 F007          	lfsr	2,7
  8472   00356A  5019               	movf	setMotorPWM@m^0,w,c
  8473   00356C  26D9               	addwf	fsr2l,f,c
  8474   00356E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8475   003570  22DA               	addwfc	fsr2h,f,c
  8476   003572  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8477   003576  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8478   00357A  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8479   00357E  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8480   003582  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  8481                           
  8482                           ;dc_motor.c: 84:     } else {
  8483   003586  EFE5  F01A         	goto	l494
  8484   00358A                     l2595:
  8485                           
  8486                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  8487   00358A  EE20 F005          	lfsr	2,5
  8488   00358E  5019               	movf	setMotorPWM@m^0,w,c
  8489   003590  26D9               	addwf	fsr2l,f,c
  8490   003592  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8491   003594  22DA               	addwfc	fsr2h,f,c
  8492   003596  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8493   00359A  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8494   00359E  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8495   0035A2  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8496   0035A6  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  8497                           
  8498                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  8499   0035AA  EE20 F007          	lfsr	2,7
  8500   0035AE  5019               	movf	setMotorPWM@m^0,w,c
  8501   0035B0  26D9               	addwf	fsr2l,f,c
  8502   0035B2  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8503   0035B4  22DA               	addwfc	fsr2h,f,c
  8504   0035B6  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8505   0035BA  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8506   0035BE  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8507   0035C2  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8508   0035C6  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  8509   0035CA                     l494:
  8510   0035CA  0012               	return		;funcret
  8511   0035CC                     __end_of_setMotorPWM:
  8512                           	callstack 0
  8513                           
  8514 ;; *************** function ___wmul *****************
  8515 ;; Defined at:
  8516 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  8517 ;; Parameters:    Size  Location     Type
  8518 ;;  multiplier      2   11[COMRAM] unsigned int 
  8519 ;;  multiplicand    2   13[COMRAM] unsigned int 
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;  product         2   15[COMRAM] unsigned int 
  8522 ;; Return value:  Size  Location     Type
  8523 ;;                  2   11[COMRAM] unsigned int 
  8524 ;; Registers used:
  8525 ;;		wreg, status,2, status,0, prodl, prodh
  8526 ;; Tracked objects:
  8527 ;;		On entry : 0/0
  8528 ;;		On exit  : 0/0
  8529 ;;		Unchanged: 0/0
  8530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8534 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8535 ;;Total ram usage:        6 bytes
  8536 ;; Hardware stack levels used: 1
  8537 ;; Hardware stack levels required when called: 5
  8538 ;; This function calls:
  8539 ;;		Nothing
  8540 ;; This function is called by:
  8541 ;;		_setMotorPWM
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           
  8545                           	psect	text32
  8546   003F42                     __ptext32:
  8547                           	callstack 0
  8548   003F42                     ___wmul:
  8549                           	callstack 23
  8550   003F42  500C               	movf	___wmul@multiplier^0,w,c
  8551   003F44  020E               	mulwf	___wmul@multiplicand^0,c
  8552   003F46  CFF3 F010          	movff	prodl,___wmul@product
  8553   003F4A  CFF4 F011          	movff	prodh,___wmul@product+1
  8554   003F4E  500C               	movf	___wmul@multiplier^0,w,c
  8555   003F50  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  8556   003F52  50F3               	movf	243,w,c
  8557   003F54  2611               	addwf	(___wmul@product+1)^0,f,c
  8558   003F56  500D               	movf	(___wmul@multiplier+1)^0,w,c
  8559   003F58  020E               	mulwf	___wmul@multiplicand^0,c
  8560   003F5A  50F3               	movf	243,w,c
  8561   003F5C  2611               	addwf	(___wmul@product+1)^0,f,c
  8562   003F5E  C010  F00C         	movff	___wmul@product,?___wmul
  8563   003F62  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  8564   003F66  0012               	return		;funcret
  8565   003F68                     __end_of___wmul:
  8566                           	callstack 0
  8567                           
  8568 ;; *************** function ___lwdiv *****************
  8569 ;; Defined at:
  8570 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;  dividend        2   17[COMRAM] unsigned int 
  8573 ;;  divisor         2   19[COMRAM] unsigned int 
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;  quotient        2   21[COMRAM] unsigned int 
  8576 ;;  counter         1   23[COMRAM] unsigned char 
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  2   17[COMRAM] unsigned int 
  8579 ;; Registers used:
  8580 ;;		wreg, status,2, status,0
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8586 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8587 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8589 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8590 ;;Total ram usage:        7 bytes
  8591 ;; Hardware stack levels used: 1
  8592 ;; Hardware stack levels required when called: 5
  8593 ;; This function calls:
  8594 ;;		Nothing
  8595 ;; This function is called by:
  8596 ;;		_setMotorPWM
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           	psect	text33
  8601   003C56                     __ptext33:
  8602                           	callstack 0
  8603   003C56                     ___lwdiv:
  8604                           	callstack 23
  8605   003C56  0E00               	movlw	0
  8606   003C58  6E17               	movwf	(___lwdiv@quotient+1)^0,c
  8607   003C5A  0E00               	movlw	0
  8608   003C5C  6E16               	movwf	___lwdiv@quotient^0,c
  8609   003C5E  5014               	movf	___lwdiv@divisor^0,w,c
  8610   003C60  1015               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8611   003C62  B4D8               	btfsc	status,2,c
  8612   003C64  EF36  F01E         	goto	u1281
  8613   003C68  EF38  F01E         	goto	u1280
  8614   003C6C                     u1281:
  8615   003C6C  EF60  F01E         	goto	l1157
  8616   003C70                     u1280:
  8617   003C70  0E01               	movlw	1
  8618   003C72  6E18               	movwf	___lwdiv@counter^0,c
  8619   003C74  EF40  F01E         	goto	l2555
  8620   003C78                     l2553:
  8621   003C78  90D8               	bcf	status,0,c
  8622   003C7A  3614               	rlcf	___lwdiv@divisor^0,f,c
  8623   003C7C  3615               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8624   003C7E  2A18               	incf	___lwdiv@counter^0,f,c
  8625   003C80                     l2555:
  8626   003C80  AE15               	btfss	(___lwdiv@divisor+1)^0,7,c
  8627   003C82  EF45  F01E         	goto	u1291
  8628   003C86  EF47  F01E         	goto	u1290
  8629   003C8A                     u1291:
  8630   003C8A  EF3C  F01E         	goto	l2553
  8631   003C8E                     u1290:
  8632   003C8E                     l2557:
  8633   003C8E  90D8               	bcf	status,0,c
  8634   003C90  3616               	rlcf	___lwdiv@quotient^0,f,c
  8635   003C92  3617               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8636   003C94  5014               	movf	___lwdiv@divisor^0,w,c
  8637   003C96  5C12               	subwf	___lwdiv@dividend^0,w,c
  8638   003C98  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  8639   003C9A  5813               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8640   003C9C  A0D8               	btfss	status,0,c
  8641   003C9E  EF53  F01E         	goto	u1301
  8642   003CA2  EF55  F01E         	goto	u1300
  8643   003CA6                     u1301:
  8644   003CA6  EF5A  F01E         	goto	l2565
  8645   003CAA                     u1300:
  8646   003CAA  5014               	movf	___lwdiv@divisor^0,w,c
  8647   003CAC  5E12               	subwf	___lwdiv@dividend^0,f,c
  8648   003CAE  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  8649   003CB0  5A13               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8650   003CB2  8016               	bsf	___lwdiv@quotient^0,0,c
  8651   003CB4                     l2565:
  8652   003CB4  90D8               	bcf	status,0,c
  8653   003CB6  3215               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8654   003CB8  3214               	rrcf	___lwdiv@divisor^0,f,c
  8655   003CBA  2E18               	decfsz	___lwdiv@counter^0,f,c
  8656   003CBC  EF47  F01E         	goto	l2557
  8657   003CC0                     l1157:
  8658   003CC0  C016  F012         	movff	___lwdiv@quotient,?___lwdiv
  8659   003CC4  C017  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8660   003CC8  0012               	return		;funcret
  8661   003CCA                     __end_of___lwdiv:
  8662                           	callstack 0
  8663                           
  8664 ;; *************** function _batteryLevel *****************
  8665 ;; Defined at:
  8666 ;;		line 6 in file "battery.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;		None
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  batteryQuart    1   20[COMRAM] unsigned char 
  8671 ;;  batteryVolta    1   19[COMRAM] unsigned char 
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  1    wreg      void 
  8674 ;; Registers used:
  8675 ;;		wreg, status,2, status,0, cstack
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8685 ;;Total ram usage:        2 bytes
  8686 ;; Hardware stack levels used: 1
  8687 ;; Hardware stack levels required when called: 6
  8688 ;; This function calls:
  8689 ;;		_ADC_getval
  8690 ;;		_ADC_init
  8691 ;;		___awdiv
  8692 ;; This function is called by:
  8693 ;;		_main
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text34
  8698   003DA2                     __ptext34:
  8699                           	callstack 0
  8700   003DA2                     _batteryLevel:
  8701                           	callstack 24
  8702   003DA2                     
  8703                           ;battery.c: 7:     ADC_init();
  8704   003DA2  EC2B  F020         	call	_ADC_init	;wreg free
  8705                           
  8706                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
  8707   003DA6  EC38  F020         	call	_ADC_getval	;wreg free
  8708   003DAA  6E14               	movwf	batteryLevel@batteryVoltage^0,c
  8709   003DAC                     
  8710                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
  8711   003DAC  C014  F00C         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
  8712   003DB0  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  8713   003DB2  0E00               	movlw	0
  8714   003DB4  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  8715   003DB6  0E18               	movlw	24
  8716   003DB8  6E0E               	movwf	___awdiv@divisor^0,c
  8717   003DBA  EC07  F01D         	call	___awdiv	;wreg free
  8718   003DBE  500C               	movf	?___awdiv^0,w,c
  8719   003DC0  6E15               	movwf	batteryLevel@batteryQuarter^0,c
  8720   003DC2                     
  8721                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
  8722   003DC2  A215               	btfss	batteryLevel@batteryQuarter^0,1,c
  8723   003DC4  EFE6  F01E         	goto	u1821
  8724   003DC8  EFE8  F01E         	goto	u1820
  8725   003DCC                     u1821:
  8726   003DCC  EFEB  F01E         	goto	l408
  8727   003DD0                     u1820:
  8728   003DD0  8E7C               	bsf	124,7,c	;volatile
  8729   003DD2  EFEC  F01E         	goto	l409
  8730   003DD6                     l408:
  8731   003DD6  9E7C               	bcf	124,7,c	;volatile
  8732   003DD8                     l409:
  8733                           
  8734                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
  8735   003DD8  A015               	btfss	batteryLevel@batteryQuarter^0,0,c
  8736   003DDA  EFF1  F01E         	goto	u1831
  8737   003DDE  EFF3  F01E         	goto	u1830
  8738   003DE2                     u1831:
  8739   003DE2  EFF6  F01E         	goto	l410
  8740   003DE6                     u1830:
  8741   003DE6  8680               	bsf	128,3,c	;volatile
  8742   003DE8  EFF7  F01E         	goto	l412
  8743   003DEC                     l410:
  8744   003DEC  9680               	bcf	128,3,c	;volatile
  8745   003DEE                     l412:
  8746   003DEE  0012               	return		;funcret
  8747   003DF0                     __end_of_batteryLevel:
  8748                           	callstack 0
  8749                           
  8750 ;; *************** function ___awdiv *****************
  8751 ;; Defined at:
  8752 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;  dividend        2   11[COMRAM] int 
  8755 ;;  divisor         2   13[COMRAM] int 
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;  quotient        2   17[COMRAM] int 
  8758 ;;  sign            1   16[COMRAM] unsigned char 
  8759 ;;  counter         1   15[COMRAM] unsigned char 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  2   11[COMRAM] int 
  8762 ;; Registers used:
  8763 ;;		wreg, status,2, status,0
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8769 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8770 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8772 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8773 ;;Total ram usage:        8 bytes
  8774 ;; Hardware stack levels used: 1
  8775 ;; Hardware stack levels required when called: 5
  8776 ;; This function calls:
  8777 ;;		Nothing
  8778 ;; This function is called by:
  8779 ;;		_batteryLevel
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text35
  8784   003A0E                     __ptext35:
  8785                           	callstack 0
  8786   003A0E                     ___awdiv:
  8787                           	callstack 24
  8788   003A0E  0E00               	movlw	0
  8789   003A10  6E11               	movwf	___awdiv@sign^0,c
  8790   003A12  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  8791   003A14  EF10  F01D         	goto	u1760
  8792   003A18  EF0E  F01D         	goto	u1761
  8793   003A1C                     u1761:
  8794   003A1C  EF16  F01D         	goto	l3075
  8795   003A20                     u1760:
  8796   003A20  6C0E               	negf	___awdiv@divisor^0,c
  8797   003A22  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  8798   003A24  B0D8               	btfsc	status,0,c
  8799   003A26  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  8800   003A28  0E01               	movlw	1
  8801   003A2A  6E11               	movwf	___awdiv@sign^0,c
  8802   003A2C                     l3075:
  8803   003A2C  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  8804   003A2E  EF1D  F01D         	goto	u1770
  8805   003A32  EF1B  F01D         	goto	u1771
  8806   003A36                     u1771:
  8807   003A36  EF23  F01D         	goto	l3081
  8808   003A3A                     u1770:
  8809   003A3A  6C0C               	negf	___awdiv@dividend^0,c
  8810   003A3C  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  8811   003A3E  B0D8               	btfsc	status,0,c
  8812   003A40  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  8813   003A42  0E01               	movlw	1
  8814   003A44  1A11               	xorwf	___awdiv@sign^0,f,c
  8815   003A46                     l3081:
  8816   003A46  0E00               	movlw	0
  8817   003A48  6E13               	movwf	(___awdiv@quotient+1)^0,c
  8818   003A4A  0E00               	movlw	0
  8819   003A4C  6E12               	movwf	___awdiv@quotient^0,c
  8820   003A4E  500E               	movf	___awdiv@divisor^0,w,c
  8821   003A50  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  8822   003A52  B4D8               	btfsc	status,2,c
  8823   003A54  EF2E  F01D         	goto	u1781
  8824   003A58  EF30  F01D         	goto	u1780
  8825   003A5C                     u1781:
  8826   003A5C  EF58  F01D         	goto	l3103
  8827   003A60                     u1780:
  8828   003A60  0E01               	movlw	1
  8829   003A62  6E10               	movwf	___awdiv@counter^0,c
  8830   003A64  EF38  F01D         	goto	l3089
  8831   003A68                     l3087:
  8832   003A68  90D8               	bcf	status,0,c
  8833   003A6A  360E               	rlcf	___awdiv@divisor^0,f,c
  8834   003A6C  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  8835   003A6E  2A10               	incf	___awdiv@counter^0,f,c
  8836   003A70                     l3089:
  8837   003A70  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  8838   003A72  EF3D  F01D         	goto	u1791
  8839   003A76  EF3F  F01D         	goto	u1790
  8840   003A7A                     u1791:
  8841   003A7A  EF34  F01D         	goto	l3087
  8842   003A7E                     u1790:
  8843   003A7E                     l3091:
  8844   003A7E  90D8               	bcf	status,0,c
  8845   003A80  3612               	rlcf	___awdiv@quotient^0,f,c
  8846   003A82  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  8847   003A84  500E               	movf	___awdiv@divisor^0,w,c
  8848   003A86  5C0C               	subwf	___awdiv@dividend^0,w,c
  8849   003A88  500F               	movf	(___awdiv@divisor+1)^0,w,c
  8850   003A8A  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  8851   003A8C  A0D8               	btfss	status,0,c
  8852   003A8E  EF4B  F01D         	goto	u1801
  8853   003A92  EF4D  F01D         	goto	u1800
  8854   003A96                     u1801:
  8855   003A96  EF52  F01D         	goto	l3099
  8856   003A9A                     u1800:
  8857   003A9A  500E               	movf	___awdiv@divisor^0,w,c
  8858   003A9C  5E0C               	subwf	___awdiv@dividend^0,f,c
  8859   003A9E  500F               	movf	(___awdiv@divisor+1)^0,w,c
  8860   003AA0  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  8861   003AA2  8012               	bsf	___awdiv@quotient^0,0,c
  8862   003AA4                     l3099:
  8863   003AA4  90D8               	bcf	status,0,c
  8864   003AA6  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  8865   003AA8  320E               	rrcf	___awdiv@divisor^0,f,c
  8866   003AAA  2E10               	decfsz	___awdiv@counter^0,f,c
  8867   003AAC  EF3F  F01D         	goto	l3091
  8868   003AB0                     l3103:
  8869   003AB0  5011               	movf	___awdiv@sign^0,w,c
  8870   003AB2  B4D8               	btfsc	status,2,c
  8871   003AB4  EF5E  F01D         	goto	u1811
  8872   003AB8  EF60  F01D         	goto	u1810
  8873   003ABC                     u1811:
  8874   003ABC  EF64  F01D         	goto	l3107
  8875   003AC0                     u1810:
  8876   003AC0  6C12               	negf	___awdiv@quotient^0,c
  8877   003AC2  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  8878   003AC4  B0D8               	btfsc	status,0,c
  8879   003AC6  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  8880   003AC8                     l3107:
  8881   003AC8  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  8882   003ACC  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  8883   003AD0  0012               	return		;funcret
  8884   003AD2                     __end_of___awdiv:
  8885                           	callstack 0
  8886                           
  8887 ;; *************** function _ADC_init *****************
  8888 ;; Defined at:
  8889 ;;		line 9 in file "ADC.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;		None
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;		None
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  1    wreg      void 
  8896 ;; Registers used:
  8897 ;;		wreg, status,2
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8907 ;;Total ram usage:        0 bytes
  8908 ;; Hardware stack levels used: 1
  8909 ;; Hardware stack levels required when called: 5
  8910 ;; This function calls:
  8911 ;;		Nothing
  8912 ;; This function is called by:
  8913 ;;		_batteryLevel
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917                           	psect	text36
  8918   004056                     __ptext36:
  8919                           	callstack 0
  8920   004056                     _ADC_init:
  8921                           	callstack 24
  8922   004056                     
  8923                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  8924   004056  8C86               	bsf	134,6,c	;volatile
  8925                           
  8926                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  8927   004058  010E               	movlb	14	; () banked
  8928   00405A  8DB4               	bsf	180,6,b	;volatile
  8929                           
  8930                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  8931   00405C  010F               	movlb	15	; () banked
  8932   00405E  9958               	bcf	88,4,b	;volatile
  8933   004060                     
  8934                           ; BSR set to: 15
  8935                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  8936   004060  0EFC               	movlw	-4
  8937   004062  1758               	andwf	88,f,b	;volatile
  8938                           
  8939                           ;ADC.c: 17:     ADPCH=0b101110;
  8940   004064  0E2E               	movlw	46
  8941   004066  6F5F               	movwf	95,b	;volatile
  8942   004068                     
  8943                           ; BSR set to: 15
  8944                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  8945   004068  9460               	bcf	96,2,c	;volatile
  8946   00406A                     
  8947                           ; BSR set to: 15
  8948                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  8949   00406A  8860               	bsf	96,4,c	;volatile
  8950   00406C                     
  8951                           ; BSR set to: 15
  8952                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  8953   00406C  8E60               	bsf	96,7,c	;volatile
  8954   00406E                     
  8955                           ; BSR set to: 15
  8956   00406E  0012               	return		;funcret
  8957   004070                     __end_of_ADC_init:
  8958                           	callstack 0
  8959                           
  8960 ;; *************** function _ADC_getval *****************
  8961 ;; Defined at:
  8962 ;;		line 23 in file "ADC.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;		None
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;  tmpval          1   11[COMRAM] unsigned char 
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      unsigned char 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8980 ;;Total ram usage:        1 bytes
  8981 ;; Hardware stack levels used: 1
  8982 ;; Hardware stack levels required when called: 5
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		_batteryLevel
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           	psect	text37
  8991   004070                     __ptext37:
  8992                           	callstack 0
  8993   004070                     _ADC_getval:
  8994                           	callstack 24
  8995   004070                     
  8996                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  8997   004070  8060               	bsf	96,0,c	;volatile
  8998   004072                     l394:
  8999   004072  B060               	btfsc	96,0,c	;volatile
  9000   004074  EF3E  F020         	goto	u1651
  9001   004078  EF40  F020         	goto	u1650
  9002   00407C                     u1651:
  9003   00407C  EF39  F020         	goto	l394
  9004   004080                     u1650:
  9005   004080                     
  9006                           ;ADC.c: 31:     tmpval = ADRESH;
  9007   004080  CF64 F00C          	movff	3940,ADC_getval@tmpval	;volatile
  9008   004084                     
  9009                           ;ADC.c: 35:     return tmpval;
  9010   004084  500C               	movf	ADC_getval@tmpval^0,w,c
  9011   004086  0012               	return		;funcret
  9012   004088                     __end_of_ADC_getval:
  9013                           	callstack 0
  9014                           
  9015 ;; *************** function _Timer0_init *****************
  9016 ;; Defined at:
  9017 ;;		line 7 in file "timers.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;		None
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;		None
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  1    wreg      void 
  9024 ;; Registers used:
  9025 ;;		wreg, status,2
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9035 ;;Total ram usage:        0 bytes
  9036 ;; Hardware stack levels used: 1
  9037 ;; Hardware stack levels required when called: 5
  9038 ;; This function calls:
  9039 ;;		Nothing
  9040 ;; This function is called by:
  9041 ;;		_main
  9042 ;; This function uses a non-reentrant model
  9043 ;;
  9044                           
  9045                           	psect	text38
  9046   003FF8                     __ptext38:
  9047                           	callstack 0
  9048   003FF8                     _Timer0_init:
  9049                           	callstack 25
  9050   003FF8                     
  9051                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  9052   003FF8  50D6               	movf	214,w,c	;volatile
  9053   003FFA  0B1F               	andlw	-225
  9054   003FFC  0940               	iorlw	64
  9055   003FFE  6ED6               	movwf	214,c	;volatile
  9056   004000                     
  9057                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  9058   004000  88D6               	bsf	214,4,c	;volatile
  9059                           
  9060                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
  9061   004002  50D6               	movf	214,w,c	;volatile
  9062   004004  0BF0               	andlw	-16
  9063   004006  090B               	iorlw	11
  9064   004008  6ED6               	movwf	214,c	;volatile
  9065   00400A                     
  9066                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  9067   00400A  88D5               	bsf	213,4,c	;volatile
  9068                           
  9069                           ;timers.c: 15:     TMR0H=0;
  9070   00400C  0E00               	movlw	0
  9071   00400E  6ED4               	movwf	212,c	;volatile
  9072                           
  9073                           ;timers.c: 16:     TMR0L=0;
  9074   004010  0E00               	movlw	0
  9075   004012  6ED3               	movwf	211,c	;volatile
  9076   004014                     
  9077                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  9078   004014  8ED5               	bsf	213,7,c	;volatile
  9079   004016  0012               	return		;funcret
  9080   004018                     __end_of_Timer0_init:
  9081                           	callstack 0
  9082                           
  9083 ;; *************** function _Interrupts_init *****************
  9084 ;; Defined at:
  9085 ;;		line 11 in file "interrupts.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;		None
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;		None
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  1    wreg      void 
  9092 ;; Registers used:
  9093 ;;		None
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9103 ;;Total ram usage:        0 bytes
  9104 ;; Hardware stack levels used: 1
  9105 ;; Hardware stack levels required when called: 5
  9106 ;; This function calls:
  9107 ;;		Nothing
  9108 ;; This function is called by:
  9109 ;;		_main
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113                           	psect	text39
  9114   0040A0                     __ptext39:
  9115                           	callstack 0
  9116   0040A0                     _Interrupts_init:
  9117                           	callstack 25
  9118   0040A0                     
  9119                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
  9120   0040A0  8082               	bsf	130,0,c	;volatile
  9121                           
  9122                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
  9123   0040A2  010E               	movlb	14	; () banked
  9124   0040A4  919A               	bcf	154,0,b	;volatile
  9125                           
  9126                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
  9127   0040A6  8129               	bsf	41,0,b	;volatile
  9128                           
  9129                           ;interrupts.c: 17:     IPR0bits.INT0IP = 1;
  9130   0040A8  811F               	bsf	31,0,b	;volatile
  9131                           
  9132                           ;interrupts.c: 18:     INTCONbits.INT0EDG = 0;
  9133   0040AA  90F2               	bcf	242,0,c	;volatile
  9134                           
  9135                           ;interrupts.c: 22:     TMR0IE=1;
  9136   0040AC  8B29               	bsf	41,5,b	;volatile
  9137                           
  9138                           ;interrupts.c: 23:     PIE4bits.RC4IE=1;
  9139   0040AE  872D               	bsf	45,3,b	;volatile
  9140                           
  9141                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  9142   0040B0  8CF2               	bsf	242,6,c	;volatile
  9143                           
  9144                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  9145   0040B2  8EF2               	bsf	242,7,c	;volatile
  9146   0040B4                     
  9147                           ; BSR set to: 14
  9148   0040B4  0012               	return		;funcret
  9149   0040B6                     __end_of_Interrupts_init:
  9150                           	callstack 0
  9151                           
  9152 ;; *************** function _Buggy_init *****************
  9153 ;; Defined at:
  9154 ;;		line 7 in file "buggysetup.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;		None
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;		None
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  1    wreg      void 
  9161 ;; Registers used:
  9162 ;;		None
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9172 ;;Total ram usage:        0 bytes
  9173 ;; Hardware stack levels used: 1
  9174 ;; Hardware stack levels required when called: 5
  9175 ;; This function calls:
  9176 ;;		Nothing
  9177 ;; This function is called by:
  9178 ;;		_main
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           	psect	text40
  9183   003E6A                     __ptext40:
  9184                           	callstack 0
  9185   003E6A                     _Buggy_init:
  9186                           	callstack 25
  9187   003E6A                     
  9188                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
  9189   003E6A  9E7C               	bcf	124,7,c	;volatile
  9190                           
  9191                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
  9192   003E6C  9E84               	bcf	132,7,c	;volatile
  9193                           
  9194                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
  9195   003E6E  9680               	bcf	128,3,c	;volatile
  9196                           
  9197                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
  9198   003E70  9688               	bcf	136,3,c	;volatile
  9199                           
  9200                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
  9201   003E72  8486               	bsf	134,2,c	;volatile
  9202                           
  9203                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
  9204   003E74  010E               	movlb	14	; () banked
  9205   003E76  95B4               	bcf	180,2,b	;volatile
  9206                           
  9207                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
  9208   003E78  8686               	bsf	134,3,c	;volatile
  9209                           
  9210                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
  9211   003E7A  97B4               	bcf	180,3,b	;volatile
  9212                           
  9213                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
  9214   003E7C  9280               	bcf	128,1,c	;volatile
  9215                           
  9216                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
  9217   003E7E  9288               	bcf	136,1,c	;volatile
  9218                           
  9219                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
  9220   003E80  987C               	bcf	124,4,c	;volatile
  9221                           
  9222                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
  9223   003E82  9884               	bcf	132,4,c	;volatile
  9224                           
  9225                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
  9226   003E84  967C               	bcf	124,3,c	;volatile
  9227                           
  9228                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
  9229   003E86  9684               	bcf	132,3,c	;volatile
  9230                           
  9231                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
  9232   003E88  97A7               	bcf	167,3,b	;volatile
  9233                           
  9234                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
  9235   003E8A  9080               	bcf	128,0,c	;volatile
  9236                           
  9237                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
  9238   003E8C  9088               	bcf	136,0,c	;volatile
  9239                           
  9240                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
  9241   003E8E  907E               	bcf	126,0,c	;volatile
  9242                           
  9243                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
  9244   003E90  9086               	bcf	134,0,c	;volatile
  9245                           
  9246                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
  9247   003E92  907F               	bcf	127,0,c	;volatile
  9248                           
  9249                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
  9250   003E94  9087               	bcf	135,0,c	;volatile
  9251                           
  9252                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
  9253   003E96  9E7D               	bcf	125,7,c	;volatile
  9254                           
  9255                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
  9256   003E98  9E85               	bcf	133,7,c	;volatile
  9257                           
  9258                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
  9259   003E9A  9679               	bcf	121,3,c	;volatile
  9260                           
  9261                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
  9262   003E9C  9681               	bcf	129,3,c	;volatile
  9263   003E9E                     
  9264                           ; BSR set to: 14
  9265   003E9E  0012               	return		;funcret
  9266   003EA0                     __end_of_Buggy_init:
  9267                           	callstack 0
  9268                           
  9269 ;; *************** function _HighISR *****************
  9270 ;; Defined at:
  9271 ;;		line 33 in file "interrupts.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;		None
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;		None
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  1    wreg      void 
  9278 ;; Registers used:
  9279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9289 ;;Total ram usage:        2 bytes
  9290 ;; Hardware stack levels used: 1
  9291 ;; Hardware stack levels required when called: 4
  9292 ;; This function calls:
  9293 ;;		_getCharFromTxBuf
  9294 ;;		_isDataInTxBuf
  9295 ;;		_putCharToRxBuf
  9296 ;;		i2_color_clear_init_interrupts
  9297 ;; This function is called by:
  9298 ;;		Interrupt level 2
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	intcode
  9303   000008                     __pintcode:
  9304                           	callstack 0
  9305   000008                     _HighISR:
  9306                           	callstack 21
  9307                           
  9308                           ; BSR set to: 14
  9309                           ;incstack = 0
  9310   000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9311   00000A  CFD9 F00A          	movff	fsr2l,??_HighISR
  9312   00000E  CFDA F00B          	movff	fsr2h,??_HighISR+1
  9313   000012                     
  9314                           ;interrupts.c: 37:     if(PIR0bits.INT0IF){
  9315   000012  010E               	movlb	14	; () banked
  9316   000014  A133               	btfss	51,0,b	;volatile
  9317   000016  EF0F  F000         	goto	i2u243_41
  9318   00001A  EF11  F000         	goto	i2u243_40
  9319   00001E                     i2u243_41:
  9320   00001E  EF18  F000         	goto	i2l3693
  9321   000022                     i2u243_40:
  9322   000022                     
  9323                           ; BSR set to: 14
  9324                           ;interrupts.c: 38:         wall = 1;
  9325   000022  0E01               	movlw	1
  9326   000024  0100               	movlb	0	; () banked
  9327   000026  6FB1               	movwf	_wall& (0+255),b
  9328   000028                     
  9329                           ; BSR set to: 0
  9330                           ;interrupts.c: 39:         color_clear_init_interrupts();
  9331   000028  ECEE  F01D         	call	i2_color_clear_init_interrupts	;wreg free
  9332   00002C                     
  9333                           ;interrupts.c: 40:         PIR0bits.INT0IF = 0;
  9334   00002C  010E               	movlb	14	; () banked
  9335   00002E  9133               	bcf	51,0,b	;volatile
  9336   000030                     i2l3693:
  9337                           
  9338                           ; BSR set to: 14
  9339                           ;interrupts.c: 47:     if(TMR0IF){
  9340   000030  AB33               	btfss	51,5,b	;volatile
  9341   000032  EF1D  F000         	goto	i2u244_41
  9342   000036  EF1F  F000         	goto	i2u244_40
  9343   00003A                     i2u244_41:
  9344   00003A  EF24  F000         	goto	i2l3699
  9345   00003E                     i2u244_40:
  9346   00003E                     
  9347                           ; BSR set to: 14
  9348                           ;interrupts.c: 48:         lost = 1;
  9349   00003E  0E01               	movlw	1
  9350   000040  0100               	movlb	0	; () banked
  9351   000042  6FB0               	movwf	_lost& (0+255),b
  9352   000044                     
  9353                           ; BSR set to: 0
  9354                           ;interrupts.c: 49:         TMR0IF=0;
  9355   000044  010E               	movlb	14	; () banked
  9356   000046  9B33               	bcf	51,5,b	;volatile
  9357   000048                     i2l3699:
  9358                           
  9359                           ; BSR set to: 14
  9360                           ;interrupts.c: 56:     if(PIR4bits.RC4IF){
  9361   000048  A737               	btfss	55,3,b	;volatile
  9362   00004A  EF29  F000         	goto	i2u245_41
  9363   00004E  EF2B  F000         	goto	i2u245_40
  9364   000052                     i2u245_41:
  9365   000052  EF2E  F000         	goto	i2l3703
  9366   000056                     i2u245_40:
  9367   000056                     
  9368                           ; BSR set to: 14
  9369                           ;interrupts.c: 58:         putCharToRxBuf(RC4REG);
  9370   000056  51E3               	movf	227,w,b	;volatile
  9371   000058  ECB4  F01F         	call	_putCharToRxBuf
  9372   00005C                     i2l3703:
  9373                           
  9374                           ;interrupts.c: 62:     if(PIR4bits.TX4IF){
  9375   00005C  010E               	movlb	14	; () banked
  9376   00005E  A537               	btfss	55,2,b	;volatile
  9377   000060  EF34  F000         	goto	i2u246_41
  9378   000064  EF36  F000         	goto	i2u246_40
  9379   000068                     i2u246_41:
  9380   000068  EF46  F000         	goto	i2l313
  9381   00006C                     i2u246_40:
  9382   00006C                     
  9383                           ; BSR set to: 14
  9384                           ;interrupts.c: 64:         TX4REG = getCharFromTxBuf();
  9385   00006C  ECC7  F01F         	call	_getCharFromTxBuf	;wreg free
  9386   000070  010E               	movlb	14	; () banked
  9387   000072  6FE4               	movwf	228,b	;volatile
  9388   000074                     
  9389                           ; BSR set to: 14
  9390                           ;interrupts.c: 65:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
  9391   000074  EC44  F020         	call	_isDataInTxBuf	;wreg free
  9392   000078  0900               	iorlw	0
  9393   00007A  A4D8               	btfss	status,2,c
  9394   00007C  EF42  F000         	goto	i2u247_41
  9395   000080  EF44  F000         	goto	i2u247_40
  9396   000084                     i2u247_41:
  9397   000084  EF46  F000         	goto	i2l313
  9398   000088                     i2u247_40:
  9399   000088  010E               	movlb	14	; () banked
  9400   00008A  952D               	bcf	45,2,b	;volatile
  9401   00008C                     i2l313:
  9402   00008C  C00B  FFDA         	movff	??_HighISR+1,fsr2h
  9403   000090  C00A  FFD9         	movff	??_HighISR,fsr2l
  9404   000094  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9405   000096  0011               	retfie		f
  9406   000098                     __end_of_HighISR:
  9407                           	callstack 0
  9408                           
  9409 ;; *************** function i2_color_clear_init_interrupts *****************
  9410 ;; Defined at:
  9411 ;;		line 27 in file "color.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;		None
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;  low_threshol    2    7[COMRAM] unsigned int 
  9416 ;;  high_thresho    2    5[COMRAM] unsigned int 
  9417 ;; Return value:  Size  Location     Type
  9418 ;;                  1    wreg      void 
  9419 ;; Registers used:
  9420 ;;		wreg, status,2, status,0, cstack
  9421 ;; Tracked objects:
  9422 ;;		On entry : 0/0
  9423 ;;		On exit  : 0/0
  9424 ;;		Unchanged: 0/0
  9425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9427 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9428 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9429 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9430 ;;Total ram usage:        5 bytes
  9431 ;; Hardware stack levels used: 1
  9432 ;; Hardware stack levels required when called: 3
  9433 ;; This function calls:
  9434 ;;		i2_I2C_2_Master_Start
  9435 ;;		i2_I2C_2_Master_Stop
  9436 ;;		i2_I2C_2_Master_Write
  9437 ;;		i2_color_writetoaddr
  9438 ;; This function is called by:
  9439 ;;		_HighISR
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           	psect	text42
  9444   003BDC                     __ptext42:
  9445                           	callstack 0
  9446   003BDC                     i2_color_clear_init_interrupts:
  9447                           	callstack 21
  9448   003BDC                     
  9449                           ;color.c: 29:     I2C_2_Master_Start();
  9450   003BDC  EC80  F020         	call	i2_I2C_2_Master_Start	;wreg free
  9451                           
  9452                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  9453   003BE0  0E52               	movlw	82
  9454   003BE2  EC61  F020         	call	i2_I2C_2_Master_Write
  9455                           
  9456                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  9457   003BE6  0EE6               	movlw	230
  9458   003BE8  EC61  F020         	call	i2_I2C_2_Master_Write
  9459                           
  9460                           ;color.c: 32:     I2C_2_Master_Stop();
  9461   003BEC  EC7B  F020         	call	i2_I2C_2_Master_Stop	;wreg free
  9462   003BF0                     
  9463                           ;color.c: 35:     unsigned int high_threshold = ambient + 12;
  9464   003BF0  0E0C               	movlw	12
  9465   003BF2  244E               	addwf	_ambient^0,w,c
  9466   003BF4  6E06               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
  9467   003BF6  0E00               	movlw	0
  9468   003BF8  204F               	addwfc	(_ambient+1)^0,w,c
  9469   003BFA  6E07               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
  9470   003BFC                     
  9471                           ;color.c: 36:     unsigned int low_threshold = ambient - 12;
  9472   003BFC  0EF4               	movlw	244
  9473   003BFE  244E               	addwf	_ambient^0,w,c
  9474   003C00  6E08               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
  9475   003C02  0EFF               	movlw	255
  9476   003C04  204F               	addwfc	(_ambient+1)^0,w,c
  9477   003C06  6E09               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
  9478                           
  9479                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
  9480   003C08  0E13               	movlw	19
  9481   003C0A  6E03               	movwf	i2color_writetoaddr@value^0,c
  9482   003C0C  0E00               	movlw	0
  9483   003C0E  EC0C  F020         	call	i2_color_writetoaddr
  9484   003C12                     
  9485                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9486   003C12  0E3F               	movlw	63
  9487   003C14  6E05               	movwf	??i2_color_clear_init_interrupts^0,c
  9488   003C16  0E55               	movlw	85
  9489   003C18                     i2u358_47:
  9490   003C18  2EE8               	decfsz	wreg,f,c
  9491   003C1A  D7FE               	bra	i2u358_47
  9492   003C1C  2E05               	decfsz	??i2_color_clear_init_interrupts^0,f,c
  9493   003C1E  D7FC               	bra	i2u358_47
  9494   003C20  0000               	nop	
  9495   003C22                     
  9496                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
  9497   003C22  5007               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
  9498   003C24  6E03               	movwf	i2color_writetoaddr@value^0,c
  9499   003C26  0E07               	movlw	7
  9500   003C28  EC0C  F020         	call	i2_color_writetoaddr
  9501   003C2C                     
  9502                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  9503   003C2C  C006  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
  9504   003C30  0E06               	movlw	6
  9505   003C32  EC0C  F020         	call	i2_color_writetoaddr
  9506   003C36                     
  9507                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
  9508   003C36  5009               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
  9509   003C38  6E03               	movwf	i2color_writetoaddr@value^0,c
  9510   003C3A  0E05               	movlw	5
  9511   003C3C  EC0C  F020         	call	i2_color_writetoaddr
  9512   003C40                     
  9513                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  9514   003C40  C008  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
  9515   003C44  0E04               	movlw	4
  9516   003C46  EC0C  F020         	call	i2_color_writetoaddr
  9517   003C4A                     
  9518                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
  9519   003C4A  0E04               	movlw	4
  9520   003C4C  6E03               	movwf	i2color_writetoaddr@value^0,c
  9521   003C4E  0E0C               	movlw	12
  9522   003C50  EC0C  F020         	call	i2_color_writetoaddr
  9523   003C54  0012               	return		;funcret
  9524   003C56                     __end_ofi2_color_clear_init_interrupts:
  9525                           	callstack 0
  9526                           
  9527 ;; *************** function i2_color_writetoaddr *****************
  9528 ;; Defined at:
  9529 ;;		line 50 in file "color.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;  address         1    wreg     unsigned char 
  9532 ;;  value           1    2[COMRAM] unsigned char 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  address         1    3[COMRAM] unsigned char 
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      void 
  9537 ;; Registers used:
  9538 ;;		wreg, status,2, status,0, cstack
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9544 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9548 ;;Total ram usage:        2 bytes
  9549 ;; Hardware stack levels used: 1
  9550 ;; Hardware stack levels required when called: 2
  9551 ;; This function calls:
  9552 ;;		i2_I2C_2_Master_Start
  9553 ;;		i2_I2C_2_Master_Stop
  9554 ;;		i2_I2C_2_Master_Write
  9555 ;; This function is called by:
  9556 ;;		i2_color_clear_init_interrupts
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           	psect	text43
  9561   004018                     __ptext43:
  9562                           	callstack 0
  9563   004018                     i2_color_writetoaddr:
  9564                           	callstack 21
  9565                           
  9566                           ;incstack = 0
  9567                           ;i2color_writetoaddr@address stored from wreg
  9568   004018  6E04               	movwf	i2color_writetoaddr@address^0,c
  9569   00401A                     
  9570                           ;color.c: 51:     I2C_2_Master_Start();
  9571   00401A  EC80  F020         	call	i2_I2C_2_Master_Start	;wreg free
  9572                           
  9573                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
  9574   00401E  0E52               	movlw	82
  9575   004020  EC61  F020         	call	i2_I2C_2_Master_Write
  9576                           
  9577                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
  9578   004024  5004               	movf	i2color_writetoaddr@address^0,w,c
  9579   004026  0980               	iorlw	128
  9580   004028  EC61  F020         	call	i2_I2C_2_Master_Write
  9581                           
  9582                           ;color.c: 54:     I2C_2_Master_Write(value);
  9583   00402C  5003               	movf	i2color_writetoaddr@value^0,w,c
  9584   00402E  EC61  F020         	call	i2_I2C_2_Master_Write
  9585                           
  9586                           ;color.c: 55:     I2C_2_Master_Stop();
  9587   004032  EC7B  F020         	call	i2_I2C_2_Master_Stop	;wreg free
  9588   004036  0012               	return		;funcret
  9589   004038                     __end_ofi2_color_writetoaddr:
  9590                           	callstack 0
  9591                           
  9592 ;; *************** function i2_I2C_2_Master_Write *****************
  9593 ;; Defined at:
  9594 ;;		line 45 in file "i2c.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;  data_byte       1    wreg     unsigned char 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  data_byte       1    1[COMRAM] unsigned char 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  1    wreg      void 
  9601 ;; Registers used:
  9602 ;;		wreg, status,2, status,0, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9612 ;;Total ram usage:        1 bytes
  9613 ;; Hardware stack levels used: 1
  9614 ;; Hardware stack levels required when called: 1
  9615 ;; This function calls:
  9616 ;;		i2_I2C_2_Master_Idle
  9617 ;; This function is called by:
  9618 ;;		i2_color_clear_init_interrupts
  9619 ;;		i2_color_writetoaddr
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           	psect	text44
  9624   0040C2                     __ptext44:
  9625                           	callstack 0
  9626   0040C2                     i2_I2C_2_Master_Write:
  9627                           	callstack 21
  9628                           
  9629                           ;incstack = 0
  9630                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9631   0040C2  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9632   0040C4                     
  9633                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9634   0040C4  EC8D  F01F         	call	i2_I2C_2_Master_Idle	;wreg free
  9635   0040C8                     
  9636                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9637   0040C8  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9638   0040CC  0012               	return		;funcret
  9639   0040CE                     __end_ofi2_I2C_2_Master_Write:
  9640                           	callstack 0
  9641                           
  9642 ;; *************** function i2_I2C_2_Master_Stop *****************
  9643 ;; Defined at:
  9644 ;;		line 39 in file "i2c.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;		None
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  1    wreg      void 
  9651 ;; Registers used:
  9652 ;;		wreg, status,2, status,0, cstack
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9662 ;;Total ram usage:        0 bytes
  9663 ;; Hardware stack levels used: 1
  9664 ;; Hardware stack levels required when called: 1
  9665 ;; This function calls:
  9666 ;;		i2_I2C_2_Master_Idle
  9667 ;; This function is called by:
  9668 ;;		i2_color_clear_init_interrupts
  9669 ;;		i2_color_writetoaddr
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673                           	psect	text45
  9674   0040F6                     __ptext45:
  9675                           	callstack 0
  9676   0040F6                     i2_I2C_2_Master_Stop:
  9677                           	callstack 21
  9678   0040F6                     
  9679                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9680   0040F6  EC8D  F01F         	call	i2_I2C_2_Master_Idle	;wreg free
  9681   0040FA                     
  9682                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9683   0040FA  010E               	movlb	14	; () banked
  9684   0040FC  85DA               	bsf	218,2,b	;volatile
  9685   0040FE                     
  9686                           ; BSR set to: 14
  9687   0040FE  0012               	return		;funcret
  9688   004100                     __end_ofi2_I2C_2_Master_Stop:
  9689                           	callstack 0
  9690                           
  9691 ;; *************** function i2_I2C_2_Master_Start *****************
  9692 ;; Defined at:
  9693 ;;		line 27 in file "i2c.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;		None
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;		None
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  1    wreg      void 
  9700 ;; Registers used:
  9701 ;;		wreg, status,2, status,0, cstack
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9711 ;;Total ram usage:        0 bytes
  9712 ;; Hardware stack levels used: 1
  9713 ;; Hardware stack levels required when called: 1
  9714 ;; This function calls:
  9715 ;;		i2_I2C_2_Master_Idle
  9716 ;; This function is called by:
  9717 ;;		i2_color_clear_init_interrupts
  9718 ;;		i2_color_writetoaddr
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text46
  9723   004100                     __ptext46:
  9724                           	callstack 0
  9725   004100                     i2_I2C_2_Master_Start:
  9726                           	callstack 21
  9727   004100                     
  9728                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9729   004100  EC8D  F01F         	call	i2_I2C_2_Master_Idle	;wreg free
  9730   004104                     
  9731                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9732   004104  010E               	movlb	14	; () banked
  9733   004106  81DA               	bsf	218,0,b	;volatile
  9734   004108                     
  9735                           ; BSR set to: 14
  9736   004108  0012               	return		;funcret
  9737   00410A                     __end_ofi2_I2C_2_Master_Start:
  9738                           	callstack 0
  9739                           
  9740 ;; *************** function i2_I2C_2_Master_Idle *****************
  9741 ;; Defined at:
  9742 ;;		line 22 in file "i2c.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;		None
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;		None
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, status,2, status,0
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9760 ;;Total ram usage:        1 bytes
  9761 ;; Hardware stack levels used: 1
  9762 ;; This function calls:
  9763 ;;		Nothing
  9764 ;; This function is called by:
  9765 ;;		i2_I2C_2_Master_Start
  9766 ;;		i2_I2C_2_Master_Stop
  9767 ;;		i2_I2C_2_Master_Write
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text47
  9772   003F1A                     __ptext47:
  9773                           	callstack 0
  9774   003F1A                     i2_I2C_2_Master_Idle:
  9775                           	callstack 21
  9776   003F1A                     i2l203:
  9777   003F1A  010E               	movlb	14	; () banked
  9778   003F1C  B5D8               	btfsc	216,2,b	;volatile
  9779   003F1E  EF93  F01F         	goto	i2u133_41
  9780   003F22  EF95  F01F         	goto	i2u133_40
  9781   003F26                     i2u133_41:
  9782   003F26  EF8D  F01F         	goto	i2l203
  9783   003F2A                     i2u133_40:
  9784   003F2A                     
  9785                           ; BSR set to: 14
  9786   003F2A  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9787   003F2E  0E1F               	movlw	31
  9788   003F30  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9789   003F32  A4D8               	btfss	status,2,c
  9790   003F34  EF9E  F01F         	goto	i2u134_41
  9791   003F38  EFA0  F01F         	goto	i2u134_40
  9792   003F3C                     i2u134_41:
  9793   003F3C  EF8D  F01F         	goto	i2l203
  9794   003F40                     i2u134_40:
  9795   003F40                     
  9796                           ; BSR set to: 14
  9797   003F40  0012               	return		;funcret
  9798   003F42                     __end_ofi2_I2C_2_Master_Idle:
  9799                           	callstack 0
  9800                           
  9801 ;; *************** function _putCharToRxBuf *****************
  9802 ;; Defined at:
  9803 ;;		line 33 in file "serial.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;  byte            1    wreg     unsigned char 
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;  byte            1    0[COMRAM] unsigned char 
  9808 ;; Return value:  Size  Location     Type
  9809 ;;                  1    wreg      void 
  9810 ;; Registers used:
  9811 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9812 ;; Tracked objects:
  9813 ;;		On entry : 0/0
  9814 ;;		On exit  : 0/0
  9815 ;;		Unchanged: 0/0
  9816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9820 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9821 ;;Total ram usage:        1 bytes
  9822 ;; Hardware stack levels used: 1
  9823 ;; This function calls:
  9824 ;;		Nothing
  9825 ;; This function is called by:
  9826 ;;		_HighISR
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           	psect	text48
  9831   003F68                     __ptext48:
  9832                           	callstack 0
  9833   003F68                     _putCharToRxBuf:
  9834                           	callstack 24
  9835                           
  9836                           ; BSR set to: 14
  9837                           ;incstack = 0
  9838                           ;putCharToRxBuf@byte stored from wreg
  9839   003F68  6E01               	movwf	putCharToRxBuf@byte^0,c
  9840   003F6A                     
  9841                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9842   003F6A  0E13               	movlw	19
  9843   003F6C  644D               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9844   003F6E  EFBB  F01F         	goto	i2u226_41
  9845   003F72  EFBD  F01F         	goto	i2u226_40
  9846   003F76                     i2u226_41:
  9847   003F76  EFBF  F01F         	goto	i2l3513
  9848   003F7A                     i2u226_40:
  9849   003F7A  0E00               	movlw	0
  9850   003F7C  6E4D               	movwf	_RxBufWriteCnt^0,c	;volatile
  9851   003F7E                     i2l3513:
  9852                           
  9853                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9854   003F7E  504D               	movf	_RxBufWriteCnt^0,w,c
  9855   003F80  0F9C               	addlw	low _EUSART4RXbuf
  9856   003F82  6ED9               	movwf	fsr2l,c
  9857   003F84  6ADA               	clrf	fsr2h,c
  9858   003F86  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9859   003F8A  2A4D               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9860   003F8C  0012               	return		;funcret
  9861   003F8E                     __end_of_putCharToRxBuf:
  9862                           	callstack 0
  9863                           
  9864 ;; *************** function _isDataInTxBuf *****************
  9865 ;; Defined at:
  9866 ;;		line 61 in file "serial.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;		None
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;		None
  9871 ;; Return value:  Size  Location     Type
  9872 ;;                  1    wreg      unsigned char 
  9873 ;; Registers used:
  9874 ;;		wreg, status,2, status,0
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9884 ;;Total ram usage:        0 bytes
  9885 ;; Hardware stack levels used: 1
  9886 ;; This function calls:
  9887 ;;		Nothing
  9888 ;; This function is called by:
  9889 ;;		_HighISR
  9890 ;;		_sendTxBuf
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text49
  9895   004088                     __ptext49:
  9896                           	callstack 0
  9897   004088                     _isDataInTxBuf:
  9898                           	callstack 24
  9899   004088                     
  9900                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  9901   004088  504A               	movf	_TxBufReadCnt^0,w,c	;volatile
  9902   00408A  184B               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  9903   00408C  A4D8               	btfss	status,2,c
  9904   00408E  EF4B  F020         	goto	i2u228_41
  9905   004092  EF4E  F020         	goto	i2u228_40
  9906   004096                     i2u228_41:
  9907   004096  0E01               	movlw	1
  9908   004098  EF4F  F020         	goto	i2u229_40
  9909   00409C                     i2u228_40:
  9910   00409C  0E00               	movlw	0
  9911   00409E                     i2u229_40:
  9912   00409E  0012               	return		;funcret
  9913   0040A0                     __end_of_isDataInTxBuf:
  9914                           	callstack 0
  9915                           
  9916 ;; *************** function _getCharFromTxBuf *****************
  9917 ;; Defined at:
  9918 ;;		line 47 in file "serial.c"
  9919 ;; Parameters:    Size  Location     Type
  9920 ;;		None
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;		None
  9923 ;; Return value:  Size  Location     Type
  9924 ;;                  1    wreg      unsigned char 
  9925 ;; Registers used:
  9926 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9927 ;; Tracked objects:
  9928 ;;		On entry : 0/0
  9929 ;;		On exit  : 0/0
  9930 ;;		Unchanged: 0/0
  9931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9936 ;;Total ram usage:        1 bytes
  9937 ;; Hardware stack levels used: 1
  9938 ;; This function calls:
  9939 ;;		Nothing
  9940 ;; This function is called by:
  9941 ;;		_HighISR
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text50
  9946   003F8E                     __ptext50:
  9947                           	callstack 0
  9948   003F8E                     _getCharFromTxBuf:
  9949                           	callstack 24
  9950   003F8E                     
  9951                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9952   003F8E  0E3B               	movlw	59
  9953   003F90  644A               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9954   003F92  EFCD  F01F         	goto	i2u227_41
  9955   003F96  EFCF  F01F         	goto	i2u227_40
  9956   003F9A                     i2u227_41:
  9957   003F9A  EFD1  F01F         	goto	i2l3521
  9958   003F9E                     i2u227_40:
  9959   003F9E  0E00               	movlw	0
  9960   003FA0  6E4A               	movwf	_TxBufReadCnt^0,c	;volatile
  9961   003FA2                     i2l3521:
  9962                           
  9963                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
  9964   003FA2  2A4A               	incf	_TxBufReadCnt^0,f,c	;volatile
  9965   003FA4  044A               	decf	_TxBufReadCnt^0,w,c	;volatile
  9966   003FA6  6E01               	movwf	??_getCharFromTxBuf^0,c
  9967   003FA8  5001               	movf	??_getCharFromTxBuf^0,w,c
  9968   003FAA  0F60               	addlw	low _EUSART4TXbuf
  9969   003FAC  6ED9               	movwf	fsr2l,c
  9970   003FAE  6ADA               	clrf	fsr2h,c
  9971   003FB0  50DF               	movf	indf2,w,c
  9972   003FB2  0012               	return		;funcret
  9973   003FB4                     __end_of_getCharFromTxBuf:
  9974                           	callstack 0
  9975                           
  9976                           	psect	smallconst
  9977   000E00                     __psmallconst:
  9978                           	callstack 0
  9979   000E00  00                 	db	0
  9980   000E01  00                 	db	0	; dummy byte at the end
  9981   000000                     
  9982                           	psect	rparam
  9983   000000                     
  9984                           	psect	temp
  9985   000050                     btemp:
  9986                           	callstack 0
  9987   000050                     	ds	1
  9988   000000                     int$flags	set	btemp
  9989   000000                     wtemp8	set	btemp+1
  9990   000000                     ttemp5	set	btemp+1
  9991   000000                     ttemp6	set	btemp+4
  9992   000000                     ttemp7	set	btemp+8
  9993                           
  9994                           	psect	config
  9995                           
  9996                           ;Config register CONFIG1L @ 0x300000
  9997                           ;	External Oscillator mode Selection bits
  9998                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9999                           ;	Power-up default value for COSC bits
 10000                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10001   300000                     	org	3145728
 10002   300000  AA                 	db	170
 10003                           
 10004                           ;Config register CONFIG1H @ 0x300001
 10005                           ;	unspecified, using default values
 10006                           ;	Clock Out Enable bit
 10007                           ;	CLKOUTEN = 0x1, unprogrammed default
 10008                           ;	Clock Switch Enable bit
 10009                           ;	CSWEN = 0x1, unprogrammed default
 10010                           ;	Fail-Safe Clock Monitor Enable bit
 10011                           ;	FCMEN = 0x1, unprogrammed default
 10012   300001                     	org	3145729
 10013   300001  FF                 	db	255
 10014                           
 10015                           ;Config register CONFIG3L @ 0x300004
 10016                           ;	WDT Period Select bits
 10017                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10018                           ;	WDT operating mode
 10019                           ;	WDTE = OFF, WDT Disabled
 10020   300004                     	org	3145732
 10021   300004  9F                 	db	159
 10022                           
 10023                           ;Config register CONFIG3H @ 0x300005
 10024                           ;	unspecified, using default values
 10025                           ;	WDT Window Select bits
 10026                           ;	WDTCWS = 0x7, unprogrammed default
 10027                           ;	WDT input clock selector
 10028                           ;	WDTCCS = 0x7, unprogrammed default
 10029   300005                     	org	3145733
 10030   300005  FF                 	db	255
 10031                           tosu	equ	0xFFF
 10032                           tosh	equ	0xFFE
 10033                           tosl	equ	0xFFD
 10034                           stkptr	equ	0xFFC
 10035                           pclatu	equ	0xFFB
 10036                           pclath	equ	0xFFA
 10037                           pcl	equ	0xFF9
 10038                           tblptru	equ	0xFF8
 10039                           tblptrh	equ	0xFF7
 10040                           tblptrl	equ	0xFF6
 10041                           tablat	equ	0xFF5
 10042                           prodh	equ	0xFF4
 10043                           prodl	equ	0xFF3
 10044                           indf0	equ	0xFEF
 10045                           postinc0	equ	0xFEE
 10046                           postdec0	equ	0xFED
 10047                           preinc0	equ	0xFEC
 10048                           plusw0	equ	0xFEB
 10049                           fsr0h	equ	0xFEA
 10050                           fsr0l	equ	0xFE9
 10051                           wreg	equ	0xFE8
 10052                           indf1	equ	0xFE7
 10053                           postinc1	equ	0xFE6
 10054                           postdec1	equ	0xFE5
 10055                           preinc1	equ	0xFE4
 10056                           plusw1	equ	0xFE3
 10057                           fsr1h	equ	0xFE2
 10058                           fsr1l	equ	0xFE1
 10059                           bsr	equ	0xFE0
 10060                           indf2	equ	0xFDF
 10061                           postinc2	equ	0xFDE
 10062                           postdec2	equ	0xFDD
 10063                           preinc2	equ	0xFDC
 10064                           plusw2	equ	0xFDB
 10065                           fsr2h	equ	0xFDA
 10066                           fsr2l	equ	0xFD9
 10067                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      79
    BANK0           160     60     146
    BANK1           256    214     254
    BANK2           256      0     122
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK1[1]), 

    color_calibration@blue	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@blue(BANK1[6]), 

    color_calibration@green	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@green(BANK1[6]), 

    color_calibration@lightblue	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@lightblue(BANK1[6]), 

    color_calibration@orange	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@orange(BANK1[6]), 

    color_calibration@pink	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@pink(BANK1[6]), 

    color_calibration@red	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@red(BANK1[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    color_calibration@RGBC_n	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC_n(BANK1[8]), 

    color_calibration@white	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@white(BANK1[6]), 

    color_calibration@yellow	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@yellow(BANK1[6]), 

    color_detect@blue	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@blue(BANK1[6]), 

    color_detect@green	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@green(BANK1[6]), 

    color_detect@lightBlue	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@lightblue(BANK1[6]), 

    color_detect@orange	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@orange(BANK1[6]), 

    color_detect@pink	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@pink(BANK1[6]), 

    color_detect@red	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@red(BANK1[6]), 

    color_detect@white	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@white(BANK1[6]), 

    color_detect@yellow	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@yellow(BANK1[6]), 

    color_normalise@RGBC_n	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC_n(BANK1[8]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    S29DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S29DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), main@motorR(BANK1[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_calibration
    _move->_returnHome
    _returnHome->_reverseOneSquare
    _returnHome->_turnLeft
    _returnHome->_turnRight
    _lostReturnHome->_reverseOneSquare
    _lostReturnHome->_turnLeft
    _lostReturnHome->_turnRight
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_color_normalise
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___aldiv
    ___aldiv->___lmul
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_move

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               262   262      0  214284
                                             71 COMRAM     2     2      0
                                             16 BANK0     44    44      0
                                              0 BANK1    214   214      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
                   _color_click_init
                       _color_detect
                    _color_normalise
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                               _stop
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _move                                                18     2     16  103098
                                             64 COMRAM     2     2      0
                                              0 BANK0     16     0     16
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          20     5     15   53152
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      20     5     15   52272
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    4053
                                             30 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    14     7      7    5257
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2      69
                                             11 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    6245
                                             30 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        29     5     24    1247
                                             11 COMRAM    29     5     24
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    1612
                                             20 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0     862
                                             15 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             13 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20    4584
                                             49 COMRAM    22     2     20
                    _color_normalise
                         _color_read
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2     787
                                             15 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                             12 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                     12     2     10    2421
                                             37 COMRAM    12     2     10
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             23 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   33814
                                             44 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   12433
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   20033
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2285
                                             24 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             17 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     543
                                             19 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0     356
                                              9 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (7) i2_color_clear_init_interrupts                        5     5      0     334
                                              4 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_normalise
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _white_Light
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_writetoaddr
   _color_detect
   _color_normalise
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _turnLeft
     _turnRight
   _resetTimer
   _stop
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      7A       9       47.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D6      FE       7       99.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3C      92       5       91.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      4F       1       84.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     259      66        0.0%
DATA                 0      0     259       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Mar 11 18:24:20 2024

                                _white_Light 3FB4                      color_calibration@RGBC_n 0034  
                                         l91 228E                                           l89 2280  
                               ___awdiv@sign 0011                          ___wmul@multiplicand 000E  
                           main@turnDuration 01B9                            ??_Interrupts_init 000C  
                                        l100 259E                                          l200 3EC8  
                                        l203 3EF2                                          l212 40F4  
                                        l221 3E30                                          l141 3FF6  
                                        l206 3F18                                          l303 40B4  
                                        l215 40E0                                          l135 3E68  
                                        l152 3714                                          l144 3FD0  
                                        l209 40EA                                          l161 2ABA  
                                        l410 3DEC                                          l218 40C0  
                                        l146 3FD6                                          l170 2C2E  
                                        l138 3BDA                                          l252 3E9E  
                                        l412 3DEE                                          l172 2C3C  
                                        l164 2AC6                                          l156 2AB8  
                                        l149 2ED0                                          l173 2CE2  
                                        l166 2AD4                                          l167 2B7A  
                                        l408 3DD6                                          l344 4054  
                                        l409 3DD8                                          l169 2B88  
                                        l513 21B2                                          l602 325C  
                                        l610 39C0                                          l522 1442  
                                        l605 328A                                          l614 3A0C  
                                        l391 406E                                          l631 30B6  
                                        l623 2FCE                                          l640 26DC  
                                        l528 1442                                          l625 2FF2  
                                        l553 1AE2                                          l394 4072  
                                        l538 14BC                                          l643 272A  
                                        l635 268A                                          l619 2F64  
                                        l571 3928                                          l563 1B5C  
                                        l547 1AE2                                          l396 4080  
                                        l580 338A                                          l644 281A  
                                        l660 40D6                                          l628 3074  
                                        l397 4086                                          l494 35CA  
                                        l582 33AE                                          l646 283A  
                                        l639 26A6                                          l487 3B60  
                                        l663 3EF0                                          l576 3320  
                                        l568 38E6                                          l657 4016  
                                        l585 3430                                          l593 314C  
                                        l745 3820                                          l666 3F66  
                                        l588 345E                                          l597 31B6  
                                        l677 3D90                                          l678 3DA0  
                                        l599 31DA                                          l897 3AD0  
                              ?_color_detect 000C                                          prod 0FF3  
                        i2_color_writetoaddr 4018                                          wreg 0FE8  
                            color_detect@red 0014    color_clear_init_interrupts@high_threshold 0011  
i2color_clear_init_interrupts@high_threshold 0006                              _color_normalise 35CC  
                                       l3001 10B6                                         l3003 10CE  
                                       l3011 117A                                         l1164 3CC8  
                                       l3101 3AAA                                         l1157 3CC0  
                                       l3013 1198                                         l3005 1106  
                                       l3103 3AB0                                         l3031 12BA  
                                       l3015 11B8                                         l3023 122C  
                                       l3007 1126                                         l3113 3E6A  
                                       l3105 3AC0                                         l3201 2B8C  
                                       l3121 3E50                                         l3041 1334  
                                       l3025 124A                                         l3017 11D0  
                                       l3009 115E                                         l3131 400A  
                                       l3107 3AC8                                         l3211 2C12  
                                       l3203 2B98                                         l3123 3E5A  
                                       l3115 3E32                                         l3051 13CE  
                                       l3043 136C                                         l3027 126A  
                                       l3035 12DE                                         l3019 1208  
                                       l3133 4014                                         l3221 2C86  
                                       l3213 2C2A                                         l3205 2BBA  
                                       l3125 3E64                                         l3117 3E36  
                                       l3301 2AAC                                         l3141 4044  
                                       l3061 1462                                         l3053 13E6  
                                       l3037 12FC                                         l3029 1282  
                                       l3135 40A0                                         l3127 3FF8  
                                       l3071 3A20                                         l3231 25CA  
                                       l3223 2CA6                                         l3215 2C40  
                                       l3207 2BD2                                         l3119 3E40  
                                       l3303 2AB4                                         l3151 3AE2  
                                       l3143 404E                                         l3063 1494  
                                       l3055 141E                                         l3039 131C  
                                       l3047 1390                                         l3129 4000  
                                       l3081 3A46                                         l3073 3A28  
                                       l3241 26B4                                         l3233 25E2  
                                       l3225 2CC6                                         l3217 2C4C  
                                       l3209 2BF2                                         l3161 3B3C  
                                       l3153 3B08                                         l3145 4050  
                                       l3137 4038                                         l2601 392A  
                                       l3401 14F6                                         l3049 13AE  
                                       l3065 14AC                                         l3091 3A7E  
                                       l3083 3A4E                                         l3075 3A2C  
                                       l3067 3A0E                                         l3251 26F6  
                                       l3243 26CC                                         l3235 2622  
                                       l3227 2CDE                                         l3219 2C6E  
                                       l3171 3B5E                                         l3163 3B46  
                                       l3155 3B0C                                         l3147 4052  
                                       l3139 4042                                         l2611 39A2  
                                       l2603 394A                                         l3411 15BA  
                                       l3403 152E                                         l3059 145E  
                                       l3093 3A84                                         l3085 3A60  
                                       l3077 3A3A                                         l3069 3A12  
                                       l3181 3DE6                                         l3173 3DA2  
                                       l2541 3F42                                         l2701 31E0  
                                       l3261 276E                                         l3253 270E  
                                       l3245 26D6                                         l3237 264A  
                                       l3229 25A2                                         l3165 3B48  
                                       l3157 3B30                                         l3149 3AD2  
                                       l2613 39AE                                         l2605 3956  
                                       l2621 40CE                                         l3501 1AFE  
                                       l3421 15F4                                         l3413 15BE  
                                       l3405 154E                                         l3095 3A9A  
                                       l3087 3A68                                         l3079 3A42  
                                       l3175 3DAC                                         l2551 3C70  
                                       l2543 3F5E                                         l2711 323E  
                                       l3263 27AE                                         l3255 271C  
                                       l3247 26EA                                         l3239 2698  
                                       l3191 2B06                                         l3183 2ABC  
                                       l3271 283C                                         l3167 3B52  
                                       l3159 3B3A                                         l2615 39BC  
                                       l2607 398A                                         l2623 3ECA  
                                       l2631 3822                                         l3503 1B02  
                                       l3431 1686                                         l3423 15F6  
                                       l3415 15C4                                         l3407 1586  
                                       l3097 3AA2                                         l3089 3A70  
                                       l3177 3DC2                                         l2561 3CAA  
                                       l2553 3C78                                         l2721 328C  
                                       l2713 324A                                         l2705 31F2  
                                       l3265 27D6                                         l3257 272E  
                                       l3249 26F4                                         l2537 3EF2  
                                       l3193 2B1E                                         l3185 2AC2  
                                       l3281 28DA                                         l3273 283C  
                                       l3169 3B54                                         l2617 39E4  
                                       l2609 3996                                         l2625 3ED6  
                                       l2801 304A                                         l2641 38BC  
                                       l2633 386A                                         l3505 1B34  
                                       l3441 1736                                         l3433 16A4  
                                       l3425 1612                                         l3417 15D4  
                                       l3409 159E                                         l3099 3AA4  
                                       l3179 3DD0                                         l2563 3CB2  
                                       l2555 3C80                                         l2547 3C56  
                                       l2731 3302                                         l2723 32AA  
                                       l2715 3258                                         l2707 3226  
                                       l3267 281E                                         l3259 2756  
                                       l2539 3F02                                         l2571 40E6  
                                       l3195 2B3E                                         l3187 2AD8  
                                       l3291 29D8                                         l3283 290C  
                                       l3275 286E                                         l2619 39E8  
                                       l2627 3EE8                                         l2803 3056  
                                       l2643 38C8                                         l3451 17FE  
                                       l3443 1756                                         l3435 16C4  
                                       l3427 1632                                         l3507 1B4C  
                                       l3419 15EC                                         l2565 3CB4  
                                       l2557 3C8E                                         l2549 3C5E  
                                       l2581 3460                                         l2741 336C  
                                       l2733 330E                                         l2725 32B6  
                                       l2717 3280                                         l2709 3232  
                                       l3269 2836                                         l2821 3D66  
                                       l2661 3DF2                                         l2573 40B8  
                                       l2901 2E8A                                         l3197 2B5E  
                                       l3189 2AE4                                         l3285 293A  
                                       l3293 29E0                                         l3277 28A0  
                                       l2805 3062                                         l2813 30A2  
                                       l2645 38D4                                         l2653 3914  
                                       l2637 387C                                         l3461 18A8  
                                       l3445 176E                                         l3453 181A  
                                       l3437 16DC                                         l3429 164A  
                                       l2567 3CBA                                         l2559 3C94  
                                       l2591 352A                                         l2583 347C  
                                       l2751 33C6                                         l2743 3378  
                                       l2735 331C                                         l2727 32EA  
                                       l2831 3738                                         l2823 3D70  
                                       l2815 3D38                                         l2903 35CC  
                                       l2671 3E2E                                         l2663 3DF6  
                                       l2575 40BC                                         l3199 2B76  
                                       l2911 3EA0                                         l2655 3FDA  
                                       l3295 2A0E                                         l3287 2970  
                                       l3279 28D2                                         l2807 3070  
                                       l2647 38E2                                         l2639 38B0  
                                       l3471 1922                                         l3455 1838  
                                       l3447 17A6                                         l3439 1718  
                                       l2593 3546                                         l2585 34D0  
                                       l2761 342C                                         l2753 33FA  
                                       l2745 3386                                         l2737 3344  
                                       l2729 32F6                                         l2681 3116  
                                       l2841 376E                                         l2833 373C  
                                       l2825 3716                                         l2817 3D48  
                                       l2905 35E0                                         l2665 3DFE  
                                       l2657 40EC                                         l2569 40E2  
                                       l2577 40D8                                         l2921 3EB6  
                                       l2913 3EAA                                         l3297 2A44  
                                       l3289 29A6                                         l2809 3098  
                                       l2649 390A                                         l3481 19BC  
                                       l3473 195A                                         l3457 1858  
                                       l3465 18CC                                         l3449 17C6  
                                       l3801 1FEA                                         l2595 358A  
                                       l2587 34E4                                         l2763 3454  
                                       l2755 3406                                         l2747 33B4  
                                       l2739 3348                                         l2691 3170  
                                       l2683 3122                                         l2675 30B8  
                                       l2851 37B0                                         l2843 3784  
                                       l2835 374A                                         l2827 371A  
                                       l2819 3D56                                         l2907 3644  
                                       l2667 3E06                                         l2659 40F0  
                                       l2579 40DC                                         l2915 3EB0  
                                       l2931 3BA8                                         l2923 3B62  
                                       l3299 2A76                                         l2771 2EFA  
                                       l3491 1A4E                                         l3483 19D4  
                                       l3467 18EA                                         l3459 1870  
                                       l3811 208C                                         l3803 200A  
                                       l2941 4056                                         l2589 34E8  
                                       l2757 3412                                         l2685 312E  
                                       l2693 3174                                         l2677 30D6  
                                       l2853 37CE                                         l2845 378C  
                                       l2861 37F0                                         l2837 375A  
                                       l2829 3728                                         l2909 36AC  
                                       l2669 3E2C                                         l2917 3EB2  
                                       l2933 3BB2                                         l2925 3B76  
                                       l2781 2F60                                         l2773 2F2E  
                                       l3493 1A6E                                         l3485 1A0C  
                                       l3469 190A                                         l3477 197E  
                                       l3397 14BE                                         l3821 2172  
                                       l3813 20C4                                         l3805 2042  
                                       l3741 1BE0                                         l3733 1B5E  
                                       l3901 2358                                         l2951 4070  
                                       l2943 4060                                         l2759 341E  
                                       l2695 3198                                         l2687 313A  
                                       l2679 30E2                                         l2863 3800  
                                       l2855 37DE                                         l2847 3798  
                                       l2839 375E                                         l2919 3EB4  
                                       l2935 3BBC                                         l2927 3B82  
                                       l2791 2FCA                                         l2783 2F88  
                                       l2775 2F3A                                         l2767 2ED2  
                                       l3495 1A86                                         l3479 199C  
                                       l3399 14DE                                         l3815 20E4  
                                       l3807 2054                                         l3751 1C82  
                                       l3735 1B70                                         l3743 1C00  
                                       l3911 239A                                         l3903 2370  
                                       l3831 21E2                                         l3823 21B4  
                                       l2953 4084                                         l2945 4068  
                                       l2697 31A4                                         l2689 3148  
                                       l2865 3810                                         l2857 37E0  
                                       l2849 37A6                                         l2881 3FB6  
                                       l2937 3BC6                                         l2929 3B98  
                                       l2793 2FF8                                         l2777 2F46  
                                       l2785 2F8C                                         l2769 2EEE  
                                       l3497 1ABE                                         l3489 1A30  
                                       l2961 0E3A                                         l3809 2074  
                                       l3817 211C                                         l3761 1D24  
                                       l3745 1C12                                         l3753 1CA2  
                                       l3737 1B90                                         l3921 241C  
                                       l3913 23AC                                         l3905 238C  
                                       l3841 2202                                         l3833 21F2  
                                       l3825 21C0                                         l2947 406A  
                                       l2699 31B2                                         l2859 37EA  
                                       l2891 2D70                                         l2883 3FC6  
                                       l2939 3BD0                                         l2787 2FB0  
                                       l2779 2F52                                         l2971 0EFE  
                                       l2963 0E72                                         l3819 212E  
                                       l3771 1DC6                                         l3763 1D44  
                                       l3755 1CB4                                         l3747 1C32  
                                       l3739 1BA8                                         l3931 24E0  
                                       l3923 2476                                         l3915 23BC  
                                       l3907 2390                                         l3851 2220  
                                       l3843 2206                                         l3835 21F6  
                                       l3827 21C0                                         l2949 406C  
                                       l2893 2D8E                                         l2885 2CE4  
                                       l2797 300A                                         l2789 2FBC  
                                       l2981 0F56                                         l2973 0F02  
                                       l2965 0E92                                         l2957 0E02  
                                       l3773 1DE6                                         l3781 1E8E  
                                       l3765 1D7C                                         l3757 1CD4  
                                       l3749 1C4A                                         l3941 250E  
                                       l3933 24E4                                         l3925 2486  
                                       l3917 23F2                                         l3909 2396  
                                       l3861 2240                                         l3853 2228  
                                       l3845 2212                                         l3837 21FA  
                                       l3829 21DE                                         l2895 2DEE  
                                       l2887 2CFE                                         l2799 303E  
                                       l2991 1004                                         l2983 0F72  
                                       l2975 0F34                                         l2967 0ECA  
                                       l2959 0E22                                         l3791 1F30  
                                       l3783 1EA0                                         l3775 1DFE  
                                       l3767 1D94                                         l3759 1CEC  
                                       l3951 258C                                         l3943 2512  
                                       l3935 24E8                                         l3927 24CC  
                                       l3919 23FE                                         l3871 2260  
                                       l3863 2244                                         l3855 2230  
                                       l3847 2218                                         l3839 21FE  
                                       l2897 2E0C                                         l2889 2D18  
                                       l2993 1024                                         l2985 0F92  
                                       l2977 0F4C                                         l2969 0EE2  
                                       l3785 1EC0                                         l3793 1F68  
                                       l3777 1E36                                         l3769 1DB4  
                                       l3945 256A                                         l3937 24F8  
                                       l3929 24D8                                         l3881 2274  
                                       l3873 2264                                         l3865 2248  
                                       l3857 2238                                         l3849 221C  
                                main@curMove 01AF                                         l2899 2E6C  
                                       l2995 103C                                         l2987 0FAA  
                                       l2979 0F54                                         l3795 1F7A  
                                       l3787 1ED8                                         l3779 1E56  
                                       l3947 256E                                         l3939 24FE  
                                       l3891 2302                                         l3883 2278  
                                       l3875 2268                                         l3867 2250  
                                       l3859 223C                                         l2997 1078  
                                       l2989 0FE6                                         l3797 1F9A  
                                       l3789 1F10                                         l3949 2578  
                                       l3893 2326                                         l3885 227C  
                                       l3877 226C                                         l3869 2258  
                                       l2999 1096                                         l3799 1FB2  
                                       l3895 232C                                         l3887 2296  
                                       l3879 2270                                         l3897 2344  
                                       l3889 22AE                                         l3899 2350  
                                       u2000 293A                                         u2001 2936  
                                       u2010 2970                                         u2011 296C  
                                       u1300 3CAA                                         u2020 29A6  
                                       u1301 3CA6                                         u2021 29A2  
                                       u1310 347C                                         u2030 29D8  
                                       u1311 3478                                         u2031 29D4  
                                       u1320 3546                                         u2040 2A0E  
                                       u2200 1838                                         u1321 3542  
                                       u2041 2A0A                                         u2201 1834  
                                       u1410 3170                                         u2050 2A44  
                                       u2210 18EA                                         u1411 316C  
                                       u2051 2A40                                         u2211 18E6  
                                       u1500 3454                                         u1420 3198  
                                       u1260 3F02                                         u2060 2A76  
                                       u2220 199C                                         u1501 3450  
                                       u1421 3194                                         u1261 3EFE  
                                       u2061 2A72                                         u2221 1998  
                                       u1430 31DA                                         u1270 3F18  
                                       u2070 2AAC                                         u1350 39E4  
                                       u1510 2F88                                         u2230 1A4E  
                                       u1431 31D6                                         u1271 3F14  
                                       u2071 2AA8                                         u1351 39E0  
                                       u1511 2F84                                         u2231 1A4A  
                                       u3007 102E                                         u1280 3C70  
                                       u1440 31EE                                         u1600 3784  
                                       u1408 3E1C                                         u1360 3A0C  
                                       u1520 2FB0                                         u2240 1B34  
                                       u2160 15D4                      color_calibration@orange 0040  
                               _BAUD4CONbits 0EE9                                         u1281 3C6C  
                                       u1441 31EA                                         u1601 3780  
                                       u1361 3A08                                         u1521 2FAC  
                                       u2241 1B30                                         u2161 15D0  
                                       u3017 1066                                         u1290 3C8E  
                                       u1450 3280                                         u1610 37A6  
                                       u1530 2FF2                                         u1370 3878  
                                       u2250 1B5C                                         u2170 1612  
                                       u1291 3C8A                                         u1451 327C  
                                       u1611 37A2                                         u1531 2FEE  
                                       u1371 3874                                         u2251 1B58  
                                       u2171 160E                                         u3107 1326  
                                       u3027 10C0                                         u1460 3344  
                                       u1620 37CE                                         u1540 3006  
                                       u1380 390A                                         u2180 16A4  
                                       u1700 1198                                         u1461 3340  
                                       u1621 37CA                                         u1541 3002  
                                       u1381 3906                                         u2181 16A0  
                                       u3117 135E                                         u1701 1194  
                                       u3037 10F8                                         u1470 336C  
                                       u1630 3800                                         u1390 3E1A  
                                       u1550 3098                                         u2190 1736  
                                       u1710 124A                                         u2510 1B70  
                                       u1471 3368                                         u1631 37FC  
                                       u1391 3E12                                         u1551 3094  
                                       u2191 1732                                         u3207 16CE  
                                       u3127 13D8                                         u1711 1246  
                                       u3047 1130                                         u2511 1B6C  
                                       u1800 3A9A                                         u1480 33AE  
                                       u1560 3D56                                         u1640 3FC6  
                                       u1720 12FC                                         u2520 1C12  
                                       u1801 3A96                                         u1481 33AA  
                                       u1561 3D52                                         u1641 3FC2  
                                       u3217 1706                                         u3137 1410  
                                       u1721 12F8                                         u3057 1168  
                                       u2521 1C0E                                         u2601 21CC  
                                       u1650 4080                                         u1810 3AC0  
                                       u1490 33C2                                         u1570 3D90  
                                       u1730 13AE                                         u2530 1CB4  
                                       _T2PR 0FBC                                         u1651 407C  
                                       u1811 3ABC                                         u1491 33BE  
                                       u1571 3D8C                                         u3307 19C6  
                                       u3227 1760                                         u3147 14E8  
                                       u1731 13AA                                         u3067 11C2  
                                       u2531 1CB0                                         u2611 21D8  
                                       u1820 3DD0                                         u1900 2698  
                                       u1580 3728                                         u1740 1494  
                                       u1660 0F34                                         u2540 1DC6  
                                       u2700 259E                                         u2620 228E  
                                       u1821 3DCC                                         u1901 2694  
                                       u1581 3724                                         u3317 19FE  
                                       u3237 1798                                         u3157 1520  
                                       u1741 1490                                         u3077 11FA  
                                       u1661 0F30                                         u2541 1DC2  
                                       u2701 259A                                         u2621 228A  
                                       u1830 3DE6                                         u1910 26A6  
                                       u1590 374A                                         u1750 14BC  
                                       u1670 0F72                                         u2550 1EA0  
                                       u2630 23AC                                         u1831 3DE2  
                                       u1911 26A2                                         u1591 3746  
                                       u3407 3B9E                                         u3327 1A78  
                                       u3247 17D0                                         u3167 1558  
                                       u1751 14B8                                         u3087 1274  
                                       u1671 0F6E                                         u2551 1E9C  
                                       u2631 23A8                                         u1760 3A20  
                                       u1920 26B4                                         u1840 2AD4  
                                       u1680 1004                                         u2560 1F7A  
                                       u1761 3A1C                                         u1921 26B0  
                                       u3417 2B68                                         u1841 2AD0  
                                       u3337 1AB0                                         u3257 1808  
                                       u3177 1590                                         u3097 12AC  
                                       u1681 1000                                         u2561 1F76  
                                       u1770 3A3A                                         u1930 26CC  
                                       u1690 1096                                         u2570 2054  
                                       u1771 3A36                                         u3507 27E0  
                                       u1931 26C8                                         u3427 2C1C  
                                       u1851 2AF2                                         u3347 38DA  
                                       u3267 1862                                         u3187 163C  
                                       u1691 1092                                         u2571 2050  
                                       u2651 2408                                         u1780 3A60  
                                       u1940 26EA                                         u1860 2B88  
                                       u2580 212E                                         u1781 3A5C  
                                       u3517 2828                                         u1941 26E6  
                                       u3437 2CD0                                         u1861 2B84  
                                       u3357 2F58                                         u3277 189A  
                                       u3197 1674                                         u2581 212A  
                                       u2661 2426                                         u2645 23B8  
                                       u2717 22A0                                         u1790 3A7E  
                                       u1950 271C                                         u1791 3A7A  
                                       u3527 3140                                         u1951 2718  
                                       u3447 25D4                                         u1871 2BA6  
                                       u3367 2FC2                                         u3287 1914  
                                       u2807 1D4E                                         u2647 23BC  
                                       u2727 2336                                         u2591 21BA  
                                       u1880 2C3C                                         u1960 286E  
                                       u2680 250E                                         u3537 31AA  
                                       u3457 2614                                         u1881 2C38  
                                       u1961 286A                                         u3377 3068  
                                       u3297 194C                                         u2817 1D86  
                                       u2681 250A                                         u2737 2362  
                                       u1970 28A0                                         u2690 258C  
                                       u3547 3250                                         u3467 2654  
                                       u1891 2C5A                                         u1971 289C  
                                       u3387 39B4                                         u2907 2014  
                                       u2827 1DF0                                         u2747 1B9A  
                                       u2691 2588                                         u2675 24F4  
                                       u1980 28D2                                         u3557 3314  
                                       u3477 2700                                         u3397 3E46  
                                       u1981 28CE                                         u2917 207E  
                                       u2837 1E28                                         u2757 1BD2  
                                       u2677 24F8                                         u1990 290C  
                                       u3567 337E                                         u3487 2760  
                                       u1991 2908                                         u2927 20B6  
                                       u2847 1E60                                         u2767 1C3C  
                                       u3577 3424                                         u3497 27A0  
                                       u2937 20EE                                         u2857 1ECA  
                                       u2777 1C74                                         u2947 0E2C  
                                       u2867 1F02                                         u2787 1CDE  
                                       u2957 0E64                                         u2877 1F3A  
                                       u2797 1D16                                         u2967 0E9C  
                                       u2887 1FA4                                         u2977 0ED4  
                                       u2897 1FDC                                         u2987 0F9C  
                                       u2997 0FD4                      color_calibration@yellow 003C  
                lostReturnHome@straightSpeed 0036                                         _main 21B4  
                                       _move 1B5E                                         _lost 00B0  
                                       _wall 00B1                                         fsr1h 0FE2  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                                       btemp 0050                                         _stop 3822  
                                       prodh 0FF4                                         prodl 0FF3  
                                       start 0098                             color_detect@blue 0018  
                        main@reverseDuration 0198                             __end_of_ADC_init 4070  
                       ?i2_color_writetoaddr 0003                             color_detect@pink 001C  
                            __end_of_HighISR 0098                        lostReturnHome@curMove 0035  
                               ___param_bank 0000                         __end_of_batteryLevel 3DF0  
                            __end_of___aldiv 3822                                        ?_main 0001  
                                      _ADPCH 0F5F                              __end_of___awdiv 3AD2  
                                      ?_move 00B2                                        ?_stop 001F  
                            ___awdiv@divisor 000E                              __end_of___lwdiv 3CCA  
                                      i2l203 3F1A                                        i2l141 4036  
                                      i2l206 3F40                                        i2l215 40FE  
                                      i2l209 4108                                        i2l313 008C  
                                      i2l218 40CC                                        i2l138 3C54  
                                      i2l352 3F8C                                        i2l366 409E  
                                      i2l359 3FB2                              ___awdiv@counter 0010  
                             ??_color_detect 0024                                        _TMR0H 0FD4  
                                      _TMR0L 0FD3                          ___lmul@multiplicand 0010  
                 __end_of_I2C_2_Master_Start 40EC                   __end_of_I2C_2_Master_Write 40C2  
                                 _Buggy_init 3E6A                   color_calibration@lightblue 0042  
                     returnHome@straightRamp 0038                       returnHome@straightTime 0033  
                                      tablat 0FF5                                        plusw0 0FEB  
                                      plusw2 0FDB                                        ttemp5 0051  
                                      ttemp6 0054                                        ttemp7 0058  
                                      stop@i 0027                                        status 0FD8  
                                      wtemp8 0051                            color_detect@color 0028  
                          color_detect@green 0016                            color_detect@white 0022  
                      ??i2_color_writetoaddr 0004                                 main@turnRamp 019B  
                      _I2C_2_Master_RepStart 40EC                           putCharToRxBuf@byte 0001  
                            __initialization 3CCA                    get16bitTMR0val@timer_high 0012  
                               __end_of_main 25A2                                 __end_of_move 21B4  
                               __end_of_stop 392A                          move@reverseDuration 00BD  
                            _get16bitTMR0val 3ECA                                       ??_main 0048  
                                     ??_move 0041                                       ??_stop 0024  
                              __activetblptr 0000                                calibration@mL 002D  
                              calibration@mR 002F                      __end_of_color_normalise 3716  
                     returnHome@turnDuration 003A                                 ?_setMotorPWM 0019  
                                     _ADRESH 0F64                                       _CCPR1H 0FAA  
                                     _CCPR2H 0FA6                                       _CCPR3H 0F25  
                                     _CCPR4H 0F21                             ___awdiv@dividend 000C  
                     lostReturnHome@turnRamp 003B                                       _RC0PPS 0E62  
                                     _RC4REG 0EE3                                       _RE2PPS 0E74  
                                     _RC7PPS 0E69                                       _RD5PPS 0E6F  
                                     _RE4PPS 0E76                                       _RD6PPS 0E70  
                                     i2l3111 401A                                       i2l3511 3F7A  
                                     i2l3521 3FA2                                       i2l3513 3F7E  
                                     i2l3515 3F8A                                       i2l3517 3F8E  
                                     i2l3525 4088                                       i2l3509 3F6A  
                                     i2l3541 3BFC                                       i2l3701 0056  
                                     i2l3519 3F9E                                       i2l3551 3C40  
                                     i2l3543 3C12                                       i2l3703 005C  
                                     i2l3553 3C4A                                       i2l3545 3C22  
                                     i2l3537 3BDC                                       i2l3705 006C  
                                     i2l3547 3C2C                                       i2l3539 3BF0  
                                     i2l3707 0074                                       i2l2597 3F1A  
                                     i2l3549 3C36                                       i2l3709 0088  
                                     i2l2599 3F2A                                       i2l2871 4104  
                                     i2l2873 40F6                                       i2l2875 40FA  
                                     i2l3691 002C                                       _RG6PPS 0E88  
                                     i2l2869 4100                                       i2l2877 40C4  
                                     i2l3693 0030                                       i2l3685 0012  
                                     i2l2879 40C8                                       i2l3695 003E  
                                     i2l3687 0022                                       i2l3697 0044  
                                     i2l3689 0028                                       i2l3699 0048  
                                  ??_HighISR 000A                     __end_of_color_click_init 3E6A  
                                     _TMR0IE 714D                                       _TMR0IF 719D  
                                     _RX4PPS 0E15                                       _TX4REG 0EE4  
                              main@lightblue 018C                                 ??_ADC_getval 000C  
                              ??_Timer0_init 000C                          calibration@turnRamp 0034  
                    calibration@turnDuration 0032                                 _CCPTMRS0bits 0FAD  
                           _getCharFromTxBuf 3F8E                                       ___lmul 3D38  
                                  ??___aldiv 0020                                       ___wmul 3F42  
                                  ??___awdiv 0010                                    ??___lwdiv 0016  
                         color_detect@RGBC_n 000C                                       clear_0 3D08  
                                     clear_1 3D14                                       clear_2 3D20  
                           ___awdiv@quotient 0012                                       isa$std 0001  
                    returnHome@straightSpeed 0036                                 __pdataCOMRAM 004E  
                                     move@mL 00B2                                       move@mR 00B4  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                  ?_ADC_init 0001                                       stop@mL 001F  
                                     stop@mR 0021                                  ?_Buggy_init 0001  
                          ??_initDCmotorsPWM 000E                           __end_of_ADC_getval 4088  
                 i2color_writetoaddr@address 0004                             __end_of_turnLeft 3460  
                         color_detect@orange 001E                   lostReturnHome@moveSequence 0031  
                      __end_of_isDataInTxBuf 40A0                                   __accesstop 0060  
                    __end_of__initialization 3D2E                           color_detect@yellow 001A  
                            fullSpeedAhead@i 0028                                main@turnSpeed 019A  
                     ?_I2C_2_Master_RepStart 0001                                ___rparam_used 0001  
                       __end_of_color_detect 2ABC                lostReturnHome@reverseDuration 0037  
                            _Interrupts_init 40A0                               __pcstackCOMRAM 0001  
                    __end_of_get16bitTMR0val 3EF2                                 ?_white_Light 0001  
                               __pidataBANK0 410A                     get16bitTMR0val@timer_low 0010  
                   get16bitTMR0val@timer_val 0014                 ?_color_clear_init_interrupts 0001  
                           _reverseOneSquare 2ED2                          __end_of_Timer0_init 4018  
                           ?_color_normalise 0026                                   ??_ADC_init 000C  
                               _batteryLevel 3DA2                                   __pbssBANK0 0060  
                                 __pbssBANK1 01D6                                   __pbssBANK2 0200  
                          _color_writetoaddr 3FD8                                 _T2CLKCONbits 0FBF  
                             _lostReturnHome 14BE                           ?_color_writetoaddr 000E  
                                    ?___lmul 000C                                      ?___wmul 000C  
                             ___lmul@product 0014                ??_color_clear_init_interrupts 0010  
                                move@curMove 00BB                      lostReturnHome@turnSpeed 0039  
                        ??_color_writetoaddr 000F                                      _SP4BRGH 0EE6  
                                    _SP4BRGL 0EE5                   fullSpeedAhead@straightRamp 0024  
                      turnRight@turnDuration 0024                                      _SSP2ADD 0ED6  
                                    _SSP2BUF 0ED5                                   _color_read 2CE4  
                    __end_of_Interrupts_init 40B6                       color_writetoaddr@value 000E  
                                    _HighISR 0008                    __end_of_color_writetoaddr 3FF8  
                     __end_of_lostReturnHome 1B5E                                    _ADREFbits 0F58  
                         _I2C_2_Master_Start 40E2                                   _initUSART4 4038  
                        i2_I2C_2_Master_Idle 3F1A                           _I2C_2_Master_Write 40B6  
                                    __Hparam 0000                          i2_I2C_2_Master_Stop 40F6  
                                    __Lparam 0000                                  _Timer0_init 3FF8  
                       calibration@turnSpeed 0031                             ?_get16bitTMR0val 000C  
                                    ___aldiv 3716                                      ___awdiv 3A0E  
                            lostReturnHome@i 0040                                ??_calibration 0035  
                        ?_I2C_2_Master_Start 0001                                      ___lwdiv 3C56  
                        ?_I2C_2_Master_Write 0001                                 __psmallconst 0E00  
                                    _ambient 004E                                      __pcinit 3CCA  
                                    __ramtop 0E00                                    ?_turnLeft 001F  
                                    __ptext0 21B4                                      __ptext1 1B5E  
                                    __ptext2 0E02                                      __ptext3 14BE  
                                    __ptext4 3822                                      __ptext5 2ED2  
                                    __ptext6 40CE                                      __ptext7 3ECA  
                                    __ptext8 392A                                      __ptext9 4038  
                       ?i2_I2C_2_Master_Idle 0001                                    _T2CONbits 0FBD  
                       ?i2_I2C_2_Master_Stop 0001                             ___aldiv@dividend 0018  
                                  _T2HLTbits 0FBE                                _RxBufWriteCnt 004D  
                   __end_of_getCharFromTxBuf 3FB4                                      main@buf 00C2  
                                    main@red 019C                         ??_I2C_2_Master_Start 000D  
                       ??_I2C_2_Master_Write 000D                        color_normalise@RGBC_n 002E  
                       end_of_initialization 3D2E              ??i2_color_clear_init_interrupts 0005  
                __end_ofi2_color_writetoaddr 4038                             ADC_getval@tmpval 000C  
                          reverseOneSquare@i 0029                            ?_color_click_init 0001  
                            ?_lostReturnHome 002D                                   _resetTimer 40CE  
                         ??_color_click_init 0015                             ___aldiv@quotient 0022  
                 batteryLevel@batteryQuarter 0015                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc1 0FE6                                      postinc2 0FDE  
                 batteryLevel@batteryVoltage 0014                                   main@F14630 0252  
                                 main@F14632 0200                                   main@F14626 01D6  
                                 main@F14635 00EE                                   _returnHome 0E02  
                            _initDCmotorsPWM 3AD2                                   ??_turnLeft 0026  
                                  _PORTFbits 0F8E                           setMotorPWM@negDuty 001E  
                      ??i2_I2C_2_Master_Idle 0001                                move@turnSpeed 00BF  
                          __end_of_turnRight 328C                        ??i2_I2C_2_Master_Stop 0002  
                                 main@RGBC_n 01B1                          __end_of_calibration 283C  
                               _color_detect 283C                                  returnHome@i 0040  
                                  _TRISAbits 0F81                           setMotorPWM@posDuty 001D  
                                  _TRISBbits 0F82                                    _TRISCbits 0F83  
                                  _TRISDbits 0F84                                    _TRISEbits 0F85  
                                  _TRISFbits 0F86                                    _TRISGbits 0F87  
                                  _TRISHbits 0F88                             white_Light@state 000C  
                               ??_Buggy_init 000C                             fullSpeedAhead@mL 001F  
                           fullSpeedAhead@mR 0021                                  ?_color_read 0010  
                   color_writetoaddr@address 000F                      ??_I2C_2_Master_RepStart 000D  
                   __end_of_reverseOneSquare 30B8                             ?_Interrupts_init 0001  
                              stop@cur_power 0029                                  _CCP1CONbits 0FAB  
                     color_calibration@green 0038                                 _EUSART4RXbuf 009C  
                        returnHome@turnSpeed 0039                                 _EUSART4TXbuf 0060  
                                _CCP2CONbits 0FA7                       color_calibration@white 0044  
                                _CCP3CONbits 0F26                   lostReturnHome@straightRamp 0038  
                 lostReturnHome@straightTime 0033                                  ?_initUSART4 0001  
                                 main@orange 0186                                  _CCP4CONbits 0F22  
                                 main@motorL 01CC                                   main@motorR 01C2  
                                 main@yellow 017A                               color_read@RGBC 0010  
                             _fullSpeedAhead 392A                               __end_of___lmul 3DA2  
                       turnLeft@turnDuration 0024                               __end_of___wmul 3F68  
                         __end_of_Buggy_init 3EA0                                __pidataCOMRAM 410E  
                        start_initialization 3CCA                                _TxBufWriteCnt 004B  
                 lostReturnHome@turnDuration 003A                             move@moveSequence 00B7  
      __end_ofi2_color_clear_init_interrupts 3C56                i2_color_clear_init_interrupts 3BDC  
                                ?_resetTimer 0001                      __end_of_initDCmotorsPWM 3B62  
                     __end_of_fullSpeedAhead 3A0E                           turnRight@cur_power 002B  
                                   ??___lmul 0014                                     ??___wmul 0010  
                             _putCharToRxBuf 3F68                          color_normalise@RGBC 0026  
                                __pdataBANK0 00EE                i2I2C_2_Master_Write@data_byte 0002  
                                _calibration 25A2                                  ?_returnHome 002D  
               reverseOneSquare@straightRamp 0025                 __end_ofi2_I2C_2_Master_Start 410A  
               __end_ofi2_I2C_2_Master_Write 40CE                            turnLeft@cur_power 002B  
                                __pbssCOMRAM 004A                                __pcstackBANK0 00B2  
                              __pcstackBANK1 0100                                     ?_HighISR 0001  
                           stop@straightRamp 0023                             ___lwdiv@dividend 0012  
                               ?_Timer0_init 0001                       __end_of_putCharToRxBuf 3F8E  
                            ?_fullSpeedAhead 001F                                    __pintcode 0008  
                                   ?___aldiv 0018                           turnRight@turnSpeed 0023  
                                   ?___awdiv 000C                                     ?___lwdiv 0012  
                       I2C_2_Master_Read@ack 000E                         I2C_2_Master_Read@tmp 000F  
                                __smallconst 0E00                             main@moveSequence 0152  
                          _I2C_2_Master_Idle 3EF2                            _I2C_2_Master_Init 3EA0  
                          _I2C_2_Master_Read 3DF0                            turnLeft@turnSpeed 0023  
                          _I2C_2_Master_Stop 40D8                                 _RxBufReadCnt 004C  
                                   _ADC_init 4056                           ?_I2C_2_Master_Idle 0001  
                         ?_I2C_2_Master_Init 0001                           ?_I2C_2_Master_Read 0001  
                              ??_setMotorPWM 001B                           ?_I2C_2_Master_Stop 0001  
                           ___lwdiv@quotient 0016                     initDCmotorsPWM@PWMperiod 000C  
                          ?_getCharFromTxBuf 0001                             ??_lostReturnHome 003C  
                         ??_getCharFromTxBuf 0001                            move@straightSpeed 00BC  
                            ___aldiv@divisor 001C                          ??_I2C_2_Master_Idle 000C  
                            ___aldiv@counter 0020                          ??_I2C_2_Master_Init 000C  
                        ??_I2C_2_Master_Read 000D                               ___wmul@product 0010  
                                   _LATAbits 0F79                          ??_I2C_2_Master_Stop 000D  
                                   _LATCbits 0F7B                                _isDataInTxBuf 4088  
                                   _LATDbits 0F7C                                     _LATEbits 0F7D  
                                   _LATFbits 0F7E                                     _LATGbits 0F7F  
                                   _LATHbits 0F80                                     _IPR0bits 0E1F  
                                   _PIE0bits 0E29                                     _PIE4bits 0E2D  
                                   i2u133_40 3F2A                                     i2u133_41 3F26  
                                   i2u134_40 3F40                                     i2u134_41 3F3C  
                                turnRight@mL 001F                                  turnRight@mR 0021  
                                   i2u226_40 3F7A                                     i2u226_41 3F76  
                                   i2u227_40 3F9E                                     i2u243_40 0022  
                                   i2u227_41 3F9A                                     i2u243_41 001E  
                                   i2u228_40 409C                                     i2u244_40 003E  
                                   i2u228_41 4096                                     i2u244_41 003A  
                                   i2u229_40 409E                                     i2u245_40 0056  
                                   i2u245_41 0052                                     i2u246_40 006C  
                                   i2u246_41 0068                                     i2u247_40 0088  
                                   i2u247_41 0084                                     _PIR0bits 0E33  
                                   i2u358_47 3C18                                     _PIR4bits 0E37  
                            ?_putCharToRxBuf 0001                             ?_initDCmotorsPWM 000C  
                fullSpeedAhead@straightSpeed 0023          __end_of_color_clear_init_interrupts 3BDC  
             ?i2_color_clear_init_interrupts 0001                  _color_clear_init_interrupts 3B62  
                                   _SSP2CON2 0EDA                                     _SSP2STAT 0ED8  
                               move@turnRamp 00C1                                   _ADCON0bits 0F60  
                  __end_of_I2C_2_Master_Idle 3F1A                        color_calibration@RGBC 0032  
                  __end_of_I2C_2_Master_Init 3ECA                    __end_of_I2C_2_Master_Read 3E32  
                          ___wmul@multiplier 000C                    __end_of_I2C_2_Master_Stop 40E2  
   color_clear_init_interrupts@low_threshold 0013   i2color_clear_init_interrupts@low_threshold 0008  
                               setMotorPWM@m 0019                  I2C_2_Master_Write@data_byte 000D  
                      color_calibration@blue 003A                           returnHome@turnRamp 003B  
                                  main@color 01AE                        color_calibration@pink 003E  
                                  main@green 01A8                                    main@white 0192  
                               _TxBufReadCnt 004A                     i2color_writetoaddr@value 0003  
                                  _turnRight 30B8                    returnHome@reverseDuration 0037  
                               ??_color_read 0012                            ___lmul@multiplier 000C  
                                  copy_data0 3CDE                               ?_isDataInTxBuf 0001  
              __end_of_I2C_2_Master_RepStart 40F6                            ?_reverseOneSquare 001F  
                        __end_of_setMotorPWM 35CC                                 ??_initUSART4 000C  
                       i2_I2C_2_Master_Start 4100              reverseOneSquare@reverseDuration 0024  
                       i2_I2C_2_Master_Write 40C2                           ??_reverseOneSquare 0026  
                                   __Hrparam 0000                            ??_color_normalise 0030  
                                 _ADC_getval 4070                             main@testSequence 00EA  
                                   __Lrparam 0000                                ??_white_Light 000C  
                __end_ofi2_I2C_2_Master_Idle 3F42                  __end_ofi2_I2C_2_Master_Stop 4100  
                           lostReturnHome@mL 002D                             lostReturnHome@mR 002F  
                         __end_of_color_read 2ED2                                   _ANSELBbits 0E9A  
                                 _ANSELDbits 0EA7                                   _ANSELFbits 0EB4  
                                 _T0CON0bits 0FD5                                   _T0CON1bits 0FD6  
                          _color_calibration 2ABC                reverseOneSquare@straightSpeed 0023  
                            ___lwdiv@divisor 0014                       returnHome@moveSequence 0031  
                         __end_of_initUSART4 4056                              ___lwdiv@counter 0018  
                          turnRight@turnRamp 0025                                   ?_turnRight 001F  
                                   __ptext10 3AD2                                     __ptext11 283C  
                                   __ptext20 40D8                                     __ptext12 3E32  
                                   __ptext21 40E2                                     __ptext13 3B62  
                                   __ptext30 328C                                     __ptext22 40EC  
                                   __ptext14 3FD8                                     __ptext31 3460  
                                   __ptext23 3DF0                                     __ptext15 3EA0  
                                   __ptext40 3E6A                                     __ptext32 3F42  
                                   __ptext24 3EF2                                     __ptext16 2ABC  
                                   __ptext33 3C56                                     __ptext25 35CC  
                                   __ptext17 3FB4                                     __ptext50 3F8E  
                                   __ptext42 3BDC                                     __ptext34 3DA2  
                                   __ptext26 3D38                                     __ptext18 2CE4  
                                   __ptext43 4018                                     __ptext35 3A0E  
                                   __ptext27 3716                                     __ptext19 40B6  
                                   __ptext44 40C2                                     __ptext36 4056  
                                   __ptext28 25A2                                     __ptext45 40F6  
                                   __ptext37 4070                                     __ptext29 30B8  
                                   __ptext46 4100                                     __ptext38 3FF8  
                                   __ptext47 3F1A                                     __ptext39 40A0  
                                   __ptext48 3F68                                     __ptext49 4088  
                                  move@color 00B6                           ?_color_calibration 0032  
                              ?_batteryLevel 0001                                 _SSP2CON1bits 0ED9  
                               _SSP2CON2bits 0EDA                             turnLeft@turnRamp 0025  
                                 turnLeft@mL 001F                                   turnLeft@mR 0021  
                        ??_color_calibration 0046                        ?i2_I2C_2_Master_Start 0001  
                           move@straightRamp 00BE                        ?i2_I2C_2_Master_Write 0001  
                           move@straightTime 00B9                            returnHome@curMove 0035  
                               ??_resetTimer 000C                                   turnRight@i 0029  
                                   isa$xinst 0000                                   _RC4STAbits 0EE7  
                                   main@RGBC 01BA                                     int$flags 0050  
                               ?_calibration 002D                                     main@blue 01A2  
                       color_calibration@red 0036                                 ??_returnHome 003C  
                                   main@pink 0180                                     _turnLeft 328C  
                    fullSpeedAhead@cur_power 002A                          __end_of_white_Light 3FD8  
                  __end_of_color_calibration 2CE4                                   _INTCONbits 0FF2  
                  reverseOneSquare@cur_power 002B                           reverseOneSquare@mL 001F  
                         reverseOneSquare@mR 0021                           __end_of_resetTimer 40D8  
                           move@turnDuration 00C0                               ??_batteryLevel 0014  
                                _setMotorPWM 3460                            ??_get16bitTMR0val 000E  
                            ??_isDataInTxBuf 0001                                     intlevel2 0000  
                           ??_fullSpeedAhead 0025                           __end_of_returnHome 14BE  
                                  turnLeft@i 0029                                  ?_ADC_getval 0001  
                          main@straightSpeed 0199                        color_detect@lightBlue 0020  
                           _color_click_init 3E32                                   _SSP2DATPPS 0E1D  
                                 _SSP2CLKPPS 0E1C                                 ___aldiv@sign 0021  
                                ??_turnRight 0026                             main@straightRamp 01B0  
                           main@straightTime 0100                                   _TX4STAbits 0EE8  
                     ??i2_I2C_2_Master_Start 0002                       ??i2_I2C_2_Master_Write 0002  
                           ??_putCharToRxBuf 0001                                 returnHome@mL 002D  
                               returnHome@mR 002F  
