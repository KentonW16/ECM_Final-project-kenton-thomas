

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 18:18:38 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Generated 21/07/2023 GMT
    75                           ; 
    76                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F67K40 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000000                     
   109                           	psect	idataCOMRAM
   110   0044D2                     __pidataCOMRAM:
   111                           	callstack 0
   112                           
   113                           ;initializer for _ambient
   114   0044D2  01F4               	dw	500
   115                           
   116                           	psect	idataBANK0
   117   0044CE                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for main@F14635
   121   0044CE  02                 	db	2
   122   0044CF  01                 	db	1
   123   0044D0  01                 	db	1
   124   0044D1  08                 	db	8
   125   000000                     _TRISCbits	set	3971
   126   000000                     _RC4STAbits	set	3815
   127   000000                     _SP4BRGH	set	3814
   128   000000                     _SP4BRGL	set	3813
   129   000000                     _TX4STAbits	set	3816
   130   000000                     _BAUD4CONbits	set	3817
   131   000000                     _TX4REG	set	3812
   132   000000                     _TRISBbits	set	3970
   133   000000                     _TRISAbits	set	3969
   134   000000                     _TRISEbits	set	3973
   135   000000                     _TRISGbits	set	3975
   136   000000                     _LATFbits	set	3966
   137   000000                     _TRISFbits	set	3974
   138   000000                     _TRISHbits	set	3976
   139   000000                     _TRISDbits	set	3972
   140   000000                     _LATEbits	set	3965
   141   000000                     _LATGbits	set	3967
   142   000000                     _LATHbits	set	3968
   143   000000                     _SSP2CON2bits	set	3802
   144   000000                     _TMR0IF	set	29085
   145   000000                     _TMR0IE	set	29005
   146   000000                     _RX4PPS	set	3605
   147   000000                     _SSP2CLKPPS	set	3612
   148   000000                     _SSP2DATPPS	set	3613
   149   000000                     _PIE0bits	set	3625
   150   000000                     _CCPR4H	set	3873
   151   000000                     _CCPR3H	set	3877
   152   000000                     _CCPR2H	set	4006
   153   000000                     _CCPR1H	set	4010
   154   000000                     _CCP1CONbits	set	4011
   155   000000                     _CCPTMRS0bits	set	4013
   156   000000                     _T2PR	set	4028
   157   000000                     _T2CONbits	set	4029
   158   000000                     _INTCONbits	set	4082
   159   000000                     _CCP2CONbits	set	4007
   160   000000                     _CCP3CONbits	set	3878
   161   000000                     _ADREFbits	set	3928
   162   000000                     _LATAbits	set	3961
   163   000000                     _LATDbits	set	3964
   164   000000                     _PORTFbits	set	3982
   165   000000                     _CCP4CONbits	set	3874
   166   000000                     _PIE4bits	set	3629
   167   000000                     _RD5PPS	set	3695
   168   000000                     _ANSELDbits	set	3751
   169   000000                     _SSP2ADD	set	3798
   170   000000                     _SSP2CON1bits	set	3801
   171   000000                     _LATCbits	set	3963
   172   000000                     _RC4REG	set	3811
   173   000000                     _SSP2CON2	set	3802
   174   000000                     _SSP2STAT	set	3800
   175   000000                     _ANSELFbits	set	3764
   176   000000                     _SSP2BUF	set	3797
   177   000000                     _IPR0bits	set	3615
   178   000000                     _RE2PPS	set	3700
   179   000000                     _ANSELBbits	set	3738
   180   000000                     _RD6PPS	set	3696
   181   000000                     _PIR0bits	set	3635
   182   000000                     _PIR4bits	set	3639
   183   000000                     _RC0PPS	set	3682
   184   000000                     _RC7PPS	set	3689
   185   000000                     _ADPCH	set	3935
   186   000000                     _ADRESH	set	3940
   187   000000                     _ADCON0bits	set	3936
   188   000000                     _RE4PPS	set	3702
   189   000000                     _RG6PPS	set	3720
   190   000000                     _TMR0L	set	4051
   191   000000                     _TMR0H	set	4052
   192   000000                     _T0CON0bits	set	4053
   193   000000                     _T0CON1bits	set	4054
   194   000000                     _T2CLKCONbits	set	4031
   195   000000                     _T2HLTbits	set	4030
   196                           
   197                           ; #config settings
   198                           
   199                           	psect	cinit
   200   00408E                     __pcinit:
   201                           	callstack 0
   202   00408E                     start_initialization:
   203                           	callstack 0
   204   00408E                     __initialization:
   205                           	callstack 0
   206                           
   207                           ; Initialize objects allocated to BANK0 (4 bytes)
   208                           ; load TBLPTR registers with __pidataBANK0
   209   00408E  0ECE               	movlw	low __pidataBANK0
   210   004090  6EF6               	movwf	tblptrl,c
   211   004092  0E44               	movlw	high __pidataBANK0
   212   004094  6EF7               	movwf	tblptrh,c
   213   004096  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   214   004098  6EF8               	movwf	tblptru,c
   215   00409A  EE00  F0EE         	lfsr	0,__pdataBANK0
   216   00409E  EE10 F004          	lfsr	1,4
   217   0040A2                     copy_data0:
   218   0040A2  0009               	tblrd		*+
   219   0040A4  CFF5 FFEE          	movff	tablat,postinc0
   220   0040A8  50E5               	movf	postdec1,w,c
   221   0040AA  50E1               	movf	fsr1l,w,c
   222   0040AC  E1FA               	bnz	copy_data0
   223                           
   224                           ; Initialize objects allocated to COMRAM (2 bytes)
   225                           ; load TBLPTR registers with __pidataCOMRAM
   226   0040AE  0ED2               	movlw	low __pidataCOMRAM
   227   0040B0  6EF6               	movwf	tblptrl,c
   228   0040B2  0E44               	movlw	high __pidataCOMRAM
   229   0040B4  6EF7               	movwf	tblptrh,c
   230   0040B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   231   0040B8  6EF8               	movwf	tblptru,c
   232   0040BA  0009               	tblrd		*+	;fetch initializer
   233   0040BC  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   234   0040C0  0009               	tblrd		*+	;fetch initializer
   235   0040C2  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   236                           
   237                           ; Clear objects allocated to BANK2 (122 bytes)
   238   0040C6  EE02  F000         	lfsr	0,__pbssBANK2
   239   0040CA  0E7A               	movlw	122
   240   0040CC                     clear_0:
   241   0040CC  6AEE               	clrf	postinc0,c
   242   0040CE  06E8               	decf	wreg,f,c
   243   0040D0  E1FD               	bnz	clear_0
   244                           
   245                           ; Clear objects allocated to BANK1 (40 bytes)
   246   0040D2  EE01  F0D6         	lfsr	0,__pbssBANK1
   247   0040D6  0E28               	movlw	40
   248   0040D8                     clear_1:
   249   0040D8  6AEE               	clrf	postinc0,c
   250   0040DA  06E8               	decf	wreg,f,c
   251   0040DC  E1FD               	bnz	clear_1
   252                           
   253                           ; Clear objects allocated to BANK0 (82 bytes)
   254   0040DE  EE00  F060         	lfsr	0,__pbssBANK0
   255   0040E2  0E52               	movlw	82
   256   0040E4                     clear_2:
   257   0040E4  6AEE               	clrf	postinc0,c
   258   0040E6  06E8               	decf	wreg,f,c
   259   0040E8  E1FD               	bnz	clear_2
   260                           
   261                           ; Clear objects allocated to COMRAM (4 bytes)
   262   0040EA  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   263   0040EC  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   264   0040EE  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   265   0040F0  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   266   0040F2                     end_of_initialization:
   267                           	callstack 0
   268   0040F2                     __end_of__initialization:
   269                           	callstack 0
   270   0040F2  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   271   0040F4  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   272   0040F6  0100               	movlb	0
   273   0040F8  EFB2  F013         	goto	_main	;jump to C main() function
   274                           
   275                           	psect	bssCOMRAM
   276   00004A                     __pbssCOMRAM:
   277                           	callstack 0
   278   00004A                     _TxBufReadCnt:
   279                           	callstack 0
   280   00004A                     	ds	1
   281   00004B                     _TxBufWriteCnt:
   282                           	callstack 0
   283   00004B                     	ds	1
   284   00004C                     _RxBufReadCnt:
   285                           	callstack 0
   286   00004C                     	ds	1
   287   00004D                     _RxBufWriteCnt:
   288                           	callstack 0
   289   00004D                     	ds	1
   290                           
   291                           	psect	dataCOMRAM
   292   00004E                     __pdataCOMRAM:
   293                           	callstack 0
   294   00004E                     _ambient:
   295                           	callstack 0
   296   00004E                     	ds	2
   297                           
   298                           	psect	bssBANK0
   299   000060                     __pbssBANK0:
   300                           	callstack 0
   301   000060                     _EUSART4TXbuf:
   302                           	callstack 0
   303   000060                     	ds	60
   304   00009C                     _EUSART4RXbuf:
   305                           	callstack 0
   306   00009C                     	ds	20
   307   0000B0                     _lost:
   308                           	callstack 0
   309   0000B0                     	ds	1
   310   0000B1                     _wall:
   311                           	callstack 0
   312   0000B1                     	ds	1
   313                           
   314                           	psect	dataBANK0
   315   0000EE                     __pdataBANK0:
   316                           	callstack 0
   317   0000EE                     main@F14635:
   318                           	callstack 0
   319   0000EE                     	ds	4
   320                           
   321                           	psect	bssBANK1
   322   0001D6                     __pbssBANK1:
   323                           	callstack 0
   324   0001D6                     	ds	40
   325                           
   326                           	psect	bssBANK2
   327   000200                     __pbssBANK2:
   328                           	callstack 0
   329   000200                     	ds	82
   330   000252                     	ds	40
   331                           
   332                           	psect	cstackBANK1
   333   000100                     __pcstackBANK1:
   334                           	callstack 0
   335   000100                     main@straightTime:
   336                           	callstack 0
   337                           
   338                           ; 82 bytes @ 0x0
   339   000100                     	ds	82
   340   000152                     main@moveSequence:
   341                           	callstack 0
   342                           
   343                           ; 40 bytes @ 0x52
   344   000152                     	ds	40
   345   00017A                     main@reverseDuration:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x7A
   349   00017A                     	ds	1
   350   00017B                     main@red:
   351                           	callstack 0
   352                           
   353                           ; 6 bytes @ 0x7B
   354   00017B                     	ds	6
   355   000181                     main@green:
   356                           	callstack 0
   357                           
   358                           ; 6 bytes @ 0x81
   359   000181                     	ds	6
   360   000187                     main@blue:
   361                           	callstack 0
   362                           
   363                           ; 6 bytes @ 0x87
   364   000187                     	ds	6
   365   00018D                     main@yellow:
   366                           	callstack 0
   367                           
   368                           ; 6 bytes @ 0x8D
   369   00018D                     	ds	6
   370   000193                     main@pink:
   371                           	callstack 0
   372                           
   373                           ; 6 bytes @ 0x93
   374   000193                     	ds	6
   375   000199                     main@orange:
   376                           	callstack 0
   377                           
   378                           ; 6 bytes @ 0x99
   379   000199                     	ds	6
   380   00019F                     main@lightblue:
   381                           	callstack 0
   382                           
   383                           ; 6 bytes @ 0x9F
   384   00019F                     	ds	6
   385   0001A5                     main@white:
   386                           	callstack 0
   387                           
   388                           ; 6 bytes @ 0xA5
   389   0001A5                     	ds	6
   390   0001AB                     main@straightSpeed:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0xAB
   394   0001AB                     	ds	1
   395   0001AC                     main@turnSpeed:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0xAC
   399   0001AC                     	ds	1
   400   0001AD                     main@turnRamp:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0xAD
   404   0001AD                     	ds	1
   405   0001AE                     main@color:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0xAE
   409   0001AE                     	ds	1
   410   0001AF                     main@curMove:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0xAF
   414   0001AF                     	ds	1
   415   0001B0                     main@straightRamp:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0xB0
   419   0001B0                     	ds	1
   420   0001B1                     main@turnDuration:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0xB1
   424   0001B1                     	ds	1
   425   0001B2                     main@RGBC_n:
   426                           	callstack 0
   427                           
   428                           ; 8 bytes @ 0xB2
   429   0001B2                     	ds	8
   430   0001BA                     main@RGBC:
   431                           	callstack 0
   432                           
   433                           ; 8 bytes @ 0xBA
   434   0001BA                     	ds	8
   435   0001C2                     main@motorR:
   436                           	callstack 0
   437                           
   438                           ; 10 bytes @ 0xC2
   439   0001C2                     	ds	10
   440   0001CC                     main@motorL:
   441                           	callstack 0
   442                           
   443                           ; 10 bytes @ 0xCC
   444   0001CC                     	ds	10
   445                           
   446                           	psect	cstackBANK0
   447   0000B2                     __pcstackBANK0:
   448                           	callstack 0
   449   0000B2                     move@mL:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x0
   453   0000B2                     	ds	2
   454   0000B4                     move@mR:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x2
   458   0000B4                     	ds	2
   459   0000B6                     move@color:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x4
   463   0000B6                     	ds	1
   464   0000B7                     move@moveSequence:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x5
   468   0000B7                     	ds	2
   469   0000B9                     move@straightTime:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x7
   473   0000B9                     	ds	2
   474   0000BB                     move@curMove:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x9
   478   0000BB                     	ds	1
   479   0000BC                     move@straightSpeed:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0xA
   483   0000BC                     	ds	1
   484   0000BD                     move@reverseDuration:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0xB
   488   0000BD                     	ds	1
   489   0000BE                     move@straightRamp:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0xC
   493   0000BE                     	ds	1
   494   0000BF                     move@turnSpeed:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xD
   498   0000BF                     	ds	1
   499   0000C0                     move@turnDuration:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0xE
   503   0000C0                     	ds	1
   504   0000C1                     move@turnRamp:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0xF
   508   0000C1                     	ds	1
   509   0000C2                     main@buf:
   510                           	callstack 0
   511                           
   512                           ; 40 bytes @ 0x10
   513   0000C2                     	ds	40
   514   0000EA                     main@testSequence:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x38
   518   0000EA                     	ds	4
   519                           
   520                           	psect	cstackCOMRAM
   521   000001                     __pcstackCOMRAM:
   522                           	callstack 0
   523   000001                     ??_getCharFromTxBuf:
   524   000001                     ??i2_I2C_2_Master_Idle:
   525   000001                     putCharToRxBuf@byte:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x0
   529   000001                     	ds	1
   530   000002                     i2I2C_2_Master_Write@data_byte:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x1
   534   000002                     	ds	1
   535   000003                     i2color_writetoaddr@value:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x2
   539   000003                     	ds	1
   540   000004                     i2color_writetoaddr@address:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x3
   544   000004                     	ds	1
   545   000005                     ??i2_color_clear_init_interrupts:
   546                           
   547                           ; 1 bytes @ 0x4
   548   000005                     	ds	1
   549   000006                     i2color_clear_init_interrupts@high_threshold:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x5
   553   000006                     	ds	2
   554   000008                     i2color_clear_init_interrupts@low_threshold:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x7
   558   000008                     	ds	2
   559   00000A                     ??_HighISR:
   560                           
   561                           ; 1 bytes @ 0x9
   562   00000A                     	ds	2
   563   00000C                     ??_I2C_2_Master_Idle:
   564   00000C                     ?_get16bitTMR0val:
   565                           	callstack 0
   566   00000C                     ?___wmul:
   567                           	callstack 0
   568   00000C                     ?___awdiv:
   569                           	callstack 0
   570   00000C                     ?___lmul:
   571                           	callstack 0
   572   00000C                     white_Light@state:
   573                           	callstack 0
   574   00000C                     ADC_getval@tmpval:
   575                           	callstack 0
   576   00000C                     initDCmotorsPWM@PWMperiod:
   577                           	callstack 0
   578   00000C                     ___wmul@multiplier:
   579                           	callstack 0
   580   00000C                     ___awdiv@dividend:
   581                           	callstack 0
   582   00000C                     ___lmul@multiplier:
   583                           	callstack 0
   584   00000C                     color_detect@RGBC_n:
   585                           	callstack 0
   586                           
   587                           ; 8 bytes @ 0xB
   588   00000C                     	ds	1
   589   00000D                     ??_I2C_2_Master_Read:
   590   00000D                     I2C_2_Master_Write@data_byte:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0xC
   594   00000D                     	ds	1
   595   00000E                     ??_get16bitTMR0val:
   596   00000E                     color_writetoaddr@value:
   597                           	callstack 0
   598   00000E                     I2C_2_Master_Read@ack:
   599                           	callstack 0
   600   00000E                     ___wmul@multiplicand:
   601                           	callstack 0
   602   00000E                     ___awdiv@divisor:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0xD
   606   00000E                     	ds	1
   607   00000F                     color_writetoaddr@address:
   608                           	callstack 0
   609   00000F                     I2C_2_Master_Read@tmp:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0xE
   613   00000F                     	ds	1
   614   000010                     ??_color_clear_init_interrupts:
   615   000010                     ___awdiv@counter:
   616                           	callstack 0
   617   000010                     color_read@RGBC:
   618                           	callstack 0
   619   000010                     get16bitTMR0val@timer_low:
   620                           	callstack 0
   621   000010                     ___wmul@product:
   622                           	callstack 0
   623   000010                     ___lmul@multiplicand:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0xF
   627   000010                     	ds	1
   628   000011                     ___awdiv@sign:
   629                           	callstack 0
   630   000011                     color_clear_init_interrupts@high_threshold:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x10
   634   000011                     	ds	1
   635   000012                     ??_color_read:
   636   000012                     ?___lwdiv:
   637                           	callstack 0
   638   000012                     get16bitTMR0val@timer_high:
   639                           	callstack 0
   640   000012                     ___awdiv@quotient:
   641                           	callstack 0
   642   000012                     ___lwdiv@dividend:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x11
   646   000012                     	ds	1
   647   000013                     color_clear_init_interrupts@low_threshold:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x12
   651   000013                     	ds	1
   652   000014                     batteryLevel@batteryVoltage:
   653                           	callstack 0
   654   000014                     get16bitTMR0val@timer_val:
   655                           	callstack 0
   656   000014                     ___lwdiv@divisor:
   657                           	callstack 0
   658   000014                     ___lmul@product:
   659                           	callstack 0
   660   000014                     color_detect@red:
   661                           	callstack 0
   662                           
   663                           ; 6 bytes @ 0x13
   664   000014                     	ds	1
   665   000015                     ??_color_click_init:
   666   000015                     batteryLevel@batteryQuarter:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x14
   670   000015                     	ds	1
   671   000016                     ___lwdiv@quotient:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x15
   675   000016                     	ds	2
   676   000018                     ?___aldiv:
   677                           	callstack 0
   678   000018                     ___lwdiv@counter:
   679                           	callstack 0
   680   000018                     ___aldiv@dividend:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x17
   684   000018                     	ds	1
   685   000019                     setMotorPWM@m:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x18
   689   000019                     	ds	1
   690   00001A                     color_detect@green:
   691                           	callstack 0
   692                           
   693                           ; 6 bytes @ 0x19
   694   00001A                     	ds	1
   695   00001B                     ??_setMotorPWM:
   696                           
   697                           ; 1 bytes @ 0x1A
   698   00001B                     	ds	1
   699   00001C                     ___aldiv@divisor:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x1B
   703   00001C                     	ds	1
   704   00001D                     setMotorPWM@posDuty:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x1C
   708   00001D                     	ds	1
   709   00001E                     setMotorPWM@negDuty:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x1D
   713   00001E                     	ds	1
   714   00001F                     stop@mL:
   715                           	callstack 0
   716   00001F                     turnLeft@mL:
   717                           	callstack 0
   718   00001F                     turnRight@mL:
   719                           	callstack 0
   720   00001F                     fullSpeedAhead@mL:
   721                           	callstack 0
   722   00001F                     reverseOneSquare@mL:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x1E
   726   00001F                     	ds	1
   727   000020                     ___aldiv@counter:
   728                           	callstack 0
   729   000020                     color_detect@blue:
   730                           	callstack 0
   731                           
   732                           ; 6 bytes @ 0x1F
   733   000020                     	ds	1
   734   000021                     ___aldiv@sign:
   735                           	callstack 0
   736   000021                     stop@mR:
   737                           	callstack 0
   738   000021                     turnLeft@mR:
   739                           	callstack 0
   740   000021                     turnRight@mR:
   741                           	callstack 0
   742   000021                     fullSpeedAhead@mR:
   743                           	callstack 0
   744   000021                     reverseOneSquare@mR:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x20
   748   000021                     	ds	1
   749   000022                     ___aldiv@quotient:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x21
   753   000022                     	ds	1
   754   000023                     stop@straightRamp:
   755                           	callstack 0
   756   000023                     turnLeft@turnSpeed:
   757                           	callstack 0
   758   000023                     turnRight@turnSpeed:
   759                           	callstack 0
   760   000023                     fullSpeedAhead@straightSpeed:
   761                           	callstack 0
   762   000023                     reverseOneSquare@straightSpeed:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x22
   766   000023                     	ds	1
   767   000024                     ??_stop:
   768   000024                     turnLeft@turnDuration:
   769                           	callstack 0
   770   000024                     turnRight@turnDuration:
   771                           	callstack 0
   772   000024                     fullSpeedAhead@straightRamp:
   773                           	callstack 0
   774   000024                     reverseOneSquare@reverseDuration:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x23
   778   000024                     	ds	1
   779   000025                     ??_fullSpeedAhead:
   780   000025                     turnLeft@turnRamp:
   781                           	callstack 0
   782   000025                     turnRight@turnRamp:
   783                           	callstack 0
   784   000025                     reverseOneSquare@straightRamp:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x24
   788   000025                     	ds	1
   789   000026                     ??_turnRight:
   790   000026                     ??_turnLeft:
   791   000026                     ??_reverseOneSquare:
   792   000026                     color_detect@yellow:
   793                           	callstack 0
   794   000026                     color_normalise@RGBC:
   795                           	callstack 0
   796                           
   797                           ; 8 bytes @ 0x25
   798   000026                     	ds	1
   799   000027                     stop@i:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x26
   803   000027                     	ds	1
   804   000028                     fullSpeedAhead@i:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x27
   808   000028                     	ds	1
   809   000029                     stop@cur_power:
   810                           	callstack 0
   811   000029                     turnLeft@i:
   812                           	callstack 0
   813   000029                     turnRight@i:
   814                           	callstack 0
   815   000029                     reverseOneSquare@i:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x28
   819   000029                     	ds	1
   820   00002A                     fullSpeedAhead@cur_power:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x29
   824   00002A                     	ds	1
   825   00002B                     turnLeft@cur_power:
   826                           	callstack 0
   827   00002B                     turnRight@cur_power:
   828                           	callstack 0
   829   00002B                     reverseOneSquare@cur_power:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x2A
   833   00002B                     	ds	1
   834   00002C                     color_detect@pink:
   835                           	callstack 0
   836                           
   837                           ; 6 bytes @ 0x2B
   838   00002C                     	ds	1
   839   00002D                     returnHome@mL:
   840                           	callstack 0
   841   00002D                     lostReturnHome@mL:
   842                           	callstack 0
   843   00002D                     calibration@mL:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x2C
   847   00002D                     	ds	1
   848   00002E                     color_normalise@RGBC_n:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x2D
   852   00002E                     	ds	1
   853   00002F                     returnHome@mR:
   854                           	callstack 0
   855   00002F                     lostReturnHome@mR:
   856                           	callstack 0
   857   00002F                     calibration@mR:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x2E
   861   00002F                     	ds	1
   862   000030                     ??_color_normalise:
   863                           
   864                           ; 1 bytes @ 0x2F
   865   000030                     	ds	1
   866   000031                     calibration@turnSpeed:
   867                           	callstack 0
   868   000031                     returnHome@moveSequence:
   869                           	callstack 0
   870   000031                     lostReturnHome@moveSequence:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x30
   874   000031                     	ds	1
   875   000032                     color_calibration@RGBC:
   876                           	callstack 0
   877   000032                     calibration@turnDuration:
   878                           	callstack 0
   879   000032                     color_detect@orange:
   880                           	callstack 0
   881                           
   882                           ; 6 bytes @ 0x31
   883   000032                     	ds	1
   884   000033                     returnHome@straightTime:
   885                           	callstack 0
   886   000033                     lostReturnHome@straightTime:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x32
   890   000033                     	ds	1
   891   000034                     calibration@turnRamp:
   892                           	callstack 0
   893   000034                     color_calibration@RGBC_n:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x33
   897   000034                     	ds	1
   898   000035                     ??_calibration:
   899   000035                     returnHome@curMove:
   900                           	callstack 0
   901   000035                     lostReturnHome@curMove:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0x34
   905   000035                     	ds	1
   906   000036                     returnHome@straightSpeed:
   907                           	callstack 0
   908   000036                     lostReturnHome@straightSpeed:
   909                           	callstack 0
   910   000036                     color_calibration@red:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x35
   914   000036                     	ds	1
   915   000037                     returnHome@reverseDuration:
   916                           	callstack 0
   917   000037                     lostReturnHome@reverseDuration:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x36
   921   000037                     	ds	1
   922   000038                     returnHome@straightRamp:
   923                           	callstack 0
   924   000038                     lostReturnHome@straightRamp:
   925                           	callstack 0
   926   000038                     color_calibration@green:
   927                           	callstack 0
   928   000038                     color_detect@lightBlue:
   929                           	callstack 0
   930                           
   931                           ; 6 bytes @ 0x37
   932   000038                     	ds	1
   933   000039                     returnHome@turnSpeed:
   934                           	callstack 0
   935   000039                     lostReturnHome@turnSpeed:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x38
   939   000039                     	ds	1
   940   00003A                     returnHome@turnDuration:
   941                           	callstack 0
   942   00003A                     lostReturnHome@turnDuration:
   943                           	callstack 0
   944   00003A                     color_calibration@blue:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x39
   948   00003A                     	ds	1
   949   00003B                     returnHome@turnRamp:
   950                           	callstack 0
   951   00003B                     lostReturnHome@turnRamp:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x3A
   955   00003B                     	ds	1
   956   00003C                     ??_lostReturnHome:
   957   00003C                     ??_returnHome:
   958   00003C                     color_calibration@yellow:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x3B
   962   00003C                     	ds	2
   963   00003E                     color_calibration@pink:
   964                           	callstack 0
   965   00003E                     color_detect@white:
   966                           	callstack 0
   967                           
   968                           ; 6 bytes @ 0x3D
   969   00003E                     	ds	2
   970   000040                     returnHome@i:
   971                           	callstack 0
   972   000040                     lostReturnHome@i:
   973                           	callstack 0
   974   000040                     color_calibration@orange:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x3F
   978   000040                     	ds	1
   979   000041                     ??_move:
   980                           
   981                           ; 1 bytes @ 0x40
   982   000041                     	ds	1
   983   000042                     color_calibration@lightblue:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x41
   987   000042                     	ds	2
   988   000044                     ??_color_detect:
   989   000044                     color_calibration@white:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x43
   993   000044                     	ds	2
   994   000046                     ??_color_calibration:
   995   000046                     color_detect@color:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x45
   999   000046                     	ds	2
  1000   000048                     ??_main:
  1001                           
  1002                           ; 1 bytes @ 0x47
  1003   000048                     	ds	2
  1004                           
  1005 ;;
  1006 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1007 ;;
  1008 ;; *************** function _main *****************
  1009 ;; Defined at:
  1010 ;;		line 28 in file "main.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  straightTime   82    0[BANK1 ] unsigned int [41]
  1015 ;;  moveSequence   40   82[BANK1 ] unsigned char [40]
  1016 ;;  buf            40   16[BANK0 ] unsigned char [40]
  1017 ;;  motorL         10  204[BANK1 ] struct DC_motor
  1018 ;;  motorR         10  194[BANK1 ] struct DC_motor
  1019 ;;  RGBC            8  186[BANK1 ] struct RGBC_val
  1020 ;;  RGBC_n          8  178[BANK1 ] struct RGBC_val
  1021 ;;  white           6  165[BANK1 ] struct RGB_calib
  1022 ;;  lightblue       6  159[BANK1 ] struct RGB_calib
  1023 ;;  orange          6  153[BANK1 ] struct RGB_calib
  1024 ;;  pink            6  147[BANK1 ] struct RGB_calib
  1025 ;;  yellow          6  141[BANK1 ] struct RGB_calib
  1026 ;;  blue            6  135[BANK1 ] struct RGB_calib
  1027 ;;  green           6  129[BANK1 ] struct RGB_calib
  1028 ;;  red             6  123[BANK1 ] struct RGB_calib
  1029 ;;  testSequence    4   56[BANK0 ] unsigned char [4]
  1030 ;;  PWMcycle        2    0        unsigned int 
  1031 ;;  turnDuration    1  177[BANK1 ] unsigned char 
  1032 ;;  straightRamp    1  176[BANK1 ] unsigned char 
  1033 ;;  curMove         1  175[BANK1 ] unsigned char 
  1034 ;;  color           1  174[BANK1 ] unsigned char 
  1035 ;;  turnRamp        1  173[BANK1 ] unsigned char 
  1036 ;;  turnSpeed       1  172[BANK1 ] unsigned char 
  1037 ;;  straightSpee    1  171[BANK1 ] unsigned char 
  1038 ;;  reverseDurat    1  122[BANK1 ] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1049 ;;      Locals:         0      44     214       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1050 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1051 ;;      Totals:         2      44     214       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1052 ;;Total ram usage:      260 bytes
  1053 ;; Hardware stack levels required when called: 10
  1054 ;; This function calls:
  1055 ;;		_Buggy_init
  1056 ;;		_Interrupts_init
  1057 ;;		_Timer0_init
  1058 ;;		_batteryLevel
  1059 ;;		_calibration
  1060 ;;		_color_calibration
  1061 ;;		_color_click_init
  1062 ;;		_color_detect
  1063 ;;		_color_normalise
  1064 ;;		_color_read
  1065 ;;		_fullSpeedAhead
  1066 ;;		_get16bitTMR0val
  1067 ;;		_initDCmotorsPWM
  1068 ;;		_initUSART4
  1069 ;;		_lostReturnHome
  1070 ;;		_move
  1071 ;;		_resetTimer
  1072 ;;		_stop
  1073 ;;		_white_Light
  1074 ;; This function is called by:
  1075 ;;		Startup code after reset
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text0
  1080   002764                     __ptext0:
  1081                           	callstack 0
  1082   002764                     _main:
  1083                           	callstack 21
  1084   002764                     
  1085                           ;main.c: 30:     char buf[40] = {0};
  1086   002764  EE20  F0C2         	lfsr	2,main@buf
  1087   002768  0E27               	movlw	39
  1088   00276A                     u3031:
  1089   00276A  6ADE               	clrf	postinc2,c
  1090   00276C  06E8               	decf	wreg,f,c
  1091   00276E  E2FD               	bc	u3031
  1092   002770                     
  1093                           ;main.c: 32:     unsigned char color = 0;
  1094   002770  0E00               	movlw	0
  1095   002772  0101               	movlb	1	; () banked
  1096   002774  6FAE               	movwf	main@color& (0+255),b
  1097                           
  1098                           ;main.c: 33:     unsigned char moveSequence[40] = {0};
  1099   002776  EE21  F052         	lfsr	2,main@moveSequence
  1100   00277A  0E27               	movlw	39
  1101   00277C                     u3041:
  1102   00277C  6ADE               	clrf	postinc2,c
  1103   00277E  06E8               	decf	wreg,f,c
  1104   002780  E2FD               	bc	u3041
  1105                           
  1106                           ;main.c: 34:     unsigned int straightTime[41] = {0};
  1107   002782  EE21  F000         	lfsr	2,main@straightTime
  1108   002786  0E51               	movlw	81
  1109   002788                     u3051:
  1110   002788  6ADE               	clrf	postinc2,c
  1111   00278A  06E8               	decf	wreg,f,c
  1112   00278C  E2FD               	bc	u3051
  1113   00278E                     
  1114                           ; BSR set to: 1
  1115                           ;main.c: 35:     char curMove = 0;
  1116   00278E  0E00               	movlw	0
  1117   002790  6FAF               	movwf	main@curMove& (0+255),b
  1118   002792                     
  1119                           ; BSR set to: 1
  1120                           ;main.c: 37:     unsigned char testSequence[4] = {2,1,1,8};
  1121   002792  C0EE  F0EA         	movff	main@F14635,main@testSequence
  1122   002796  C0EF  F0EB         	movff	main@F14635+1,main@testSequence+1
  1123   00279A  C0F0  F0EC         	movff	main@F14635+2,main@testSequence+2
  1124   00279E  C0F1  F0ED         	movff	main@F14635+3,main@testSequence+3
  1125   0027A2                     
  1126                           ; BSR set to: 1
  1127                           ;main.c: 40:     struct RGBC_val RGBC, RGBC_n;;main.c: 41:     struct DC_motor motorL, m
      +                          otorR;;main.c: 44:     Buggy_init();
  1128   0027A2  EC17  F021         	call	_Buggy_init	;wreg free
  1129   0027A6                     
  1130                           ;main.c: 45:     color_click_init();
  1131   0027A6  ECFB  F020         	call	_color_click_init	;wreg free
  1132   0027AA                     
  1133                           ;main.c: 46:     Timer0_init();
  1134   0027AA  ECDE  F021         	call	_Timer0_init	;wreg free
  1135   0027AE                     
  1136                           ;main.c: 47:     Interrupts_init();
  1137   0027AE  EC32  F022         	call	_Interrupts_init	;wreg free
  1138   0027B2                     
  1139                           ;main.c: 48:     initUSART4();
  1140   0027B2  ECFE  F021         	call	_initUSART4	;wreg free
  1141   0027B6                     
  1142                           ;main.c: 49:     initDCmotorsPWM(PWMcycle);
  1143   0027B6  0E00               	movlw	0
  1144   0027B8  6E0D               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1145   0027BA  0EC7               	movlw	199
  1146   0027BC  6E0C               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1147   0027BE  EC4B  F01F         	call	_initDCmotorsPWM	;wreg free
  1148   0027C2                     
  1149                           ;main.c: 51:     motorL.power=0;
  1150   0027C2  0E00               	movlw	0
  1151   0027C4  0101               	movlb	1	; () banked
  1152   0027C6  6FCC               	movwf	main@motorL& (0+255),b
  1153   0027C8                     
  1154                           ; BSR set to: 1
  1155                           ;main.c: 52:     motorL.direction=1;
  1156   0027C8  0E01               	movlw	1
  1157   0027CA  6FCD               	movwf	(main@motorL+1)& (0+255),b
  1158   0027CC                     
  1159                           ; BSR set to: 1
  1160                           ;main.c: 53:     motorL.brakemode=1;
  1161   0027CC  0E01               	movlw	1
  1162   0027CE  6FCE               	movwf	(main@motorL+2)& (0+255),b
  1163   0027D0                     
  1164                           ; BSR set to: 1
  1165                           ;main.c: 54:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1166   0027D0  0EAA               	movlw	170
  1167   0027D2  6FD1               	movwf	(main@motorL+5)& (0+255),b
  1168   0027D4  0E0F               	movlw	15
  1169   0027D6  6FD2               	movwf	(main@motorL+6)& (0+255),b
  1170   0027D8                     
  1171                           ; BSR set to: 1
  1172                           ;main.c: 55:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1173   0027D8  0EA6               	movlw	166
  1174   0027DA  6FD3               	movwf	(main@motorL+7)& (0+255),b
  1175   0027DC  0E0F               	movlw	15
  1176   0027DE  6FD4               	movwf	(main@motorL+8)& (0+255),b
  1177   0027E0                     
  1178                           ; BSR set to: 1
  1179                           ;main.c: 56:     motorL.PWMperiod=PWMcycle;
  1180   0027E0  0E00               	movlw	0
  1181   0027E2  6FD0               	movwf	(main@motorL+4)& (0+255),b
  1182   0027E4  0EC7               	movlw	199
  1183   0027E6  6FCF               	movwf	(main@motorL+3)& (0+255),b
  1184   0027E8                     
  1185                           ; BSR set to: 1
  1186                           ;main.c: 57:     motorL.compensation=0;
  1187   0027E8  0E00               	movlw	0
  1188   0027EA  6FD5               	movwf	(main@motorL+9)& (0+255),b
  1189   0027EC                     
  1190                           ; BSR set to: 1
  1191                           ;main.c: 59:     motorR.power=0;
  1192   0027EC  0E00               	movlw	0
  1193   0027EE  6FC2               	movwf	main@motorR& (0+255),b
  1194   0027F0                     
  1195                           ; BSR set to: 1
  1196                           ;main.c: 60:     motorR.direction=1;
  1197   0027F0  0E01               	movlw	1
  1198   0027F2  6FC3               	movwf	(main@motorR+1)& (0+255),b
  1199   0027F4                     
  1200                           ; BSR set to: 1
  1201                           ;main.c: 61:     motorR.brakemode=1;
  1202   0027F4  0E01               	movlw	1
  1203   0027F6  6FC4               	movwf	(main@motorR+2)& (0+255),b
  1204   0027F8                     
  1205                           ; BSR set to: 1
  1206                           ;main.c: 62:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1207   0027F8  0E25               	movlw	37
  1208   0027FA  6FC7               	movwf	(main@motorR+5)& (0+255),b
  1209   0027FC  0E0F               	movlw	15
  1210   0027FE  6FC8               	movwf	(main@motorR+6)& (0+255),b
  1211   002800                     
  1212                           ; BSR set to: 1
  1213                           ;main.c: 63:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1214   002800  0E21               	movlw	33
  1215   002802  6FC9               	movwf	(main@motorR+7)& (0+255),b
  1216   002804  0E0F               	movlw	15
  1217   002806  6FCA               	movwf	(main@motorR+8)& (0+255),b
  1218   002808                     
  1219                           ; BSR set to: 1
  1220                           ;main.c: 64:     motorR.PWMperiod=PWMcycle;
  1221   002808  0E00               	movlw	0
  1222   00280A  6FC6               	movwf	(main@motorR+4)& (0+255),b
  1223   00280C  0EC7               	movlw	199
  1224   00280E  6FC5               	movwf	(main@motorR+3)& (0+255),b
  1225   002810                     
  1226                           ; BSR set to: 1
  1227                           ;main.c: 65:     motorR.compensation=0;
  1228   002810  0E00               	movlw	0
  1229   002812  6FCB               	movwf	(main@motorR+9)& (0+255),b
  1230   002814                     
  1231                           ; BSR set to: 1
  1232                           ;main.c: 68:     char straightSpeed=25;
  1233   002814  0E19               	movlw	25
  1234   002816  6FAB               	movwf	main@straightSpeed& (0+255),b
  1235   002818                     
  1236                           ; BSR set to: 1
  1237                           ;main.c: 69:     unsigned char straightRamp=1;
  1238   002818  0E01               	movlw	1
  1239   00281A  6FB0               	movwf	main@straightRamp& (0+255),b
  1240   00281C                     
  1241                           ; BSR set to: 1
  1242                           ;main.c: 71:     unsigned char reverseDuration=200;
  1243   00281C  0EC8               	movlw	200
  1244   00281E  6F7A               	movwf	main@reverseDuration& (0+255),b
  1245   002820                     
  1246                           ; BSR set to: 1
  1247                           ;main.c: 73:     char turnSpeed=20;
  1248   002820  0E14               	movlw	20
  1249   002822  6FAC               	movwf	main@turnSpeed& (0+255),b
  1250   002824                     
  1251                           ; BSR set to: 1
  1252                           ;main.c: 74:     unsigned char turnDuration=25;
  1253   002824  0E19               	movlw	25
  1254   002826  6FB1               	movwf	main@turnDuration& (0+255),b
  1255   002828                     
  1256                           ; BSR set to: 1
  1257                           ;main.c: 75:     unsigned char turnRamp=2;
  1258   002828  0E02               	movlw	2
  1259   00282A  6FAD               	movwf	main@turnRamp& (0+255),b
  1260   00282C                     
  1261                           ; BSR set to: 1
  1262                           ;main.c: 78:     batteryLevel();
  1263   00282C  ECB3  F020         	call	_batteryLevel	;wreg free
  1264   002830                     l89:
  1265   002830  B48E               	btfsc	142,2,c	;volatile
  1266   002832  EF1D  F014         	goto	u3061
  1267   002836  EF1F  F014         	goto	u3060
  1268   00283A                     u3061:
  1269   00283A  EF18  F014         	goto	l89
  1270   00283E                     u3060:
  1271   00283E                     
  1272                           ;main.c: 82:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1273   00283E  9680               	bcf	128,3,c	;volatile
  1274   002840  9E7C               	bcf	124,7,c	;volatile
  1275                           
  1276                           ;main.c: 107:     LATHbits.LATH1=LATDbits.LATD3=1;
  1277   002842  867C               	bsf	124,3,c	;volatile
  1278   002844  8280               	bsf	128,1,c	;volatile
  1279   002846                     
  1280                           ;main.c: 108:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1281   002846  0E29               	movlw	41
  1282   002848  6E49               	movwf	(??_main+1)^0,c
  1283   00284A  0E96               	movlw	150
  1284   00284C  6E48               	movwf	??_main^0,c
  1285   00284E  0E7F               	movlw	127
  1286   002850                     u3237:
  1287   002850  2EE8               	decfsz	wreg,f,c
  1288   002852  D7FE               	bra	u3237
  1289   002854  2E48               	decfsz	??_main^0,f,c
  1290   002856  D7FC               	bra	u3237
  1291   002858  2E49               	decfsz	(??_main+1)^0,f,c
  1292   00285A  D7FA               	bra	u3237
  1293   00285C  0000               	nop	
  1294   00285E                     
  1295                           ;main.c: 111:     struct RGB_calib red, green, blue, yellow, pink, orange, lightblue, wh
      +                          ite;;main.c: 112:     color_calibration(&RGBC, &RGBC_n, &red, &green, &blue, &yellow, &p
      +                          ink, &orange, &lightblue, &white);
  1296   00285E  0EBA               	movlw	low main@RGBC
  1297   002860  6E32               	movwf	color_calibration@RGBC^0,c
  1298   002862  0E01               	movlw	high main@RGBC
  1299   002864  6E33               	movwf	(color_calibration@RGBC+1)^0,c
  1300   002866  0EB2               	movlw	low main@RGBC_n
  1301   002868  6E34               	movwf	color_calibration@RGBC_n^0,c
  1302   00286A  0E01               	movlw	high main@RGBC_n
  1303   00286C  6E35               	movwf	(color_calibration@RGBC_n+1)^0,c
  1304   00286E  0E7B               	movlw	low main@red
  1305   002870  6E36               	movwf	color_calibration@red^0,c
  1306   002872  0E01               	movlw	high main@red
  1307   002874  6E37               	movwf	(color_calibration@red+1)^0,c
  1308   002876  0E81               	movlw	low main@green
  1309   002878  6E38               	movwf	color_calibration@green^0,c
  1310   00287A  0E01               	movlw	high main@green
  1311   00287C  6E39               	movwf	(color_calibration@green+1)^0,c
  1312   00287E  0E87               	movlw	low main@blue
  1313   002880  6E3A               	movwf	color_calibration@blue^0,c
  1314   002882  0E01               	movlw	high main@blue
  1315   002884  6E3B               	movwf	(color_calibration@blue+1)^0,c
  1316   002886  0E8D               	movlw	low main@yellow
  1317   002888  6E3C               	movwf	color_calibration@yellow^0,c
  1318   00288A  0E01               	movlw	high main@yellow
  1319   00288C  6E3D               	movwf	(color_calibration@yellow+1)^0,c
  1320   00288E  0E93               	movlw	low main@pink
  1321   002890  6E3E               	movwf	color_calibration@pink^0,c
  1322   002892  0E01               	movlw	high main@pink
  1323   002894  6E3F               	movwf	(color_calibration@pink+1)^0,c
  1324   002896  0E99               	movlw	low main@orange
  1325   002898  6E40               	movwf	color_calibration@orange^0,c
  1326   00289A  0E01               	movlw	high main@orange
  1327   00289C  6E41               	movwf	(color_calibration@orange+1)^0,c
  1328   00289E  0E9F               	movlw	low main@lightblue
  1329   0028A0  6E42               	movwf	color_calibration@lightblue^0,c
  1330   0028A2  0E01               	movlw	high main@lightblue
  1331   0028A4  6E43               	movwf	(color_calibration@lightblue+1)^0,c
  1332   0028A6  0EA5               	movlw	low main@white
  1333   0028A8  6E44               	movwf	color_calibration@white^0,c
  1334   0028AA  0E01               	movlw	high main@white
  1335   0028AC  6E45               	movwf	(color_calibration@white+1)^0,c
  1336   0028AE  ECDC  F010         	call	_color_calibration	;wreg free
  1337   0028B2                     
  1338                           ;main.c: 115:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1339   0028B2  0ECC               	movlw	low main@motorL
  1340   0028B4  6E2D               	movwf	calibration@mL^0,c
  1341   0028B6  0E01               	movlw	high main@motorL
  1342   0028B8  6E2E               	movwf	(calibration@mL+1)^0,c
  1343   0028BA  0EC2               	movlw	low main@motorR
  1344   0028BC  6E2F               	movwf	calibration@mR^0,c
  1345   0028BE  0E01               	movlw	high main@motorR
  1346   0028C0  6E30               	movwf	(calibration@mR+1)^0,c
  1347   0028C2  0E14               	movlw	20
  1348   0028C4  6E31               	movwf	calibration@turnSpeed^0,c
  1349   0028C6  0EB1               	movlw	low main@turnDuration
  1350   0028C8  6E32               	movwf	calibration@turnDuration^0,c
  1351   0028CA  0E01               	movlw	high main@turnDuration
  1352   0028CC  6E33               	movwf	(calibration@turnDuration+1)^0,c
  1353   0028CE  0E02               	movlw	2
  1354   0028D0  6E34               	movwf	calibration@turnRamp^0,c
  1355   0028D2  ECD1  F015         	call	_calibration	;wreg free
  1356   0028D6                     
  1357                           ;main.c: 118:     white_Light(1);
  1358   0028D6  0E01               	movlw	1
  1359   0028D8  ECBC  F021         	call	_white_Light
  1360   0028DC                     
  1361                           ;main.c: 119:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1362   0028DC  0E52               	movlw	82
  1363   0028DE  6E49               	movwf	(??_main+1)^0,c
  1364   0028E0  0E2B               	movlw	43
  1365   0028E2  6E48               	movwf	??_main^0,c
  1366   0028E4  0E00               	movlw	0
  1367   0028E6                     u3247:
  1368   0028E6  2EE8               	decfsz	wreg,f,c
  1369   0028E8  D7FE               	bra	u3247
  1370   0028EA  2E48               	decfsz	??_main^0,f,c
  1371   0028EC  D7FC               	bra	u3247
  1372   0028EE  2E49               	decfsz	(??_main+1)^0,f,c
  1373   0028F0  D7FA               	bra	u3247
  1374   0028F2  D000               	nop2	
  1375   0028F4                     
  1376                           ;main.c: 122:     color_read(&RGBC);
  1377   0028F4  0EBA               	movlw	low main@RGBC
  1378   0028F6  6E10               	movwf	color_read@RGBC^0,c
  1379   0028F8  0E01               	movlw	high main@RGBC
  1380   0028FA  6E11               	movwf	(color_read@RGBC+1)^0,c
  1381   0028FC  EC54  F018         	call	_color_read	;wreg free
  1382   002900                     
  1383                           ;main.c: 123:     ambient=RGBC.C;
  1384   002900  C1C0  F04E         	movff	main@RGBC+6,_ambient
  1385   002904  C1C1  F04F         	movff	main@RGBC+7,_ambient+1
  1386   002908                     
  1387                           ;main.c: 124:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1388   002908  0E29               	movlw	41
  1389   00290A  6E49               	movwf	(??_main+1)^0,c
  1390   00290C  0E96               	movlw	150
  1391   00290E  6E48               	movwf	??_main^0,c
  1392   002910  0E7F               	movlw	127
  1393   002912                     u3257:
  1394   002912  2EE8               	decfsz	wreg,f,c
  1395   002914  D7FE               	bra	u3257
  1396   002916  2E48               	decfsz	??_main^0,f,c
  1397   002918  D7FC               	bra	u3257
  1398   00291A  2E49               	decfsz	(??_main+1)^0,f,c
  1399   00291C  D7FA               	bra	u3257
  1400   00291E  0000               	nop	
  1401   002920                     
  1402                           ;main.c: 126:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1403   002920  0ECC               	movlw	low main@motorL
  1404   002922  6E1F               	movwf	fullSpeedAhead@mL^0,c
  1405   002924  0E01               	movlw	high main@motorL
  1406   002926  6E20               	movwf	(fullSpeedAhead@mL+1)^0,c
  1407   002928  0EC2               	movlw	low main@motorR
  1408   00292A  6E21               	movwf	fullSpeedAhead@mR^0,c
  1409   00292C  0E01               	movlw	high main@motorR
  1410   00292E  6E22               	movwf	(fullSpeedAhead@mR+1)^0,c
  1411   002930  0E19               	movlw	25
  1412   002932  6E23               	movwf	fullSpeedAhead@straightSpeed^0,c
  1413   002934  0E01               	movlw	1
  1414   002936  6E24               	movwf	fullSpeedAhead@straightRamp^0,c
  1415   002938  EC77  F01E         	call	_fullSpeedAhead	;wreg free
  1416   00293C                     
  1417                           ;main.c: 127:     resetTimer();
  1418   00293C  EC49  F022         	call	_resetTimer	;wreg free
  1419   002940                     
  1420                           ;main.c: 129:     wall=0;
  1421   002940  0E00               	movlw	0
  1422   002942  0100               	movlb	0	; () banked
  1423   002944  6FB1               	movwf	_wall& (0+255),b
  1424   002946                     
  1425                           ; BSR set to: 0
  1426                           ;main.c: 130:     lost=0;
  1427   002946  0E00               	movlw	0
  1428   002948  6FB0               	movwf	_lost& (0+255),b
  1429   00294A                     l4120:
  1430                           
  1431                           ;main.c: 133:         if (wall == 1) {
  1432   00294A  0100               	movlb	0	; () banked
  1433   00294C  05B1               	decf	_wall& (0+255),w,b
  1434   00294E  A4D8               	btfss	status,2,c
  1435   002950  EFAC  F014         	goto	u3071
  1436   002954  EFAE  F014         	goto	u3070
  1437   002958                     u3071:
  1438   002958  EF7F  F015         	goto	l4148
  1439   00295C                     u3070:
  1440   00295C                     
  1441                           ; BSR set to: 0
  1442                           ;main.c: 134:             PIE0bits.INT0IE=TMR0IE=0;
  1443   00295C  010E               	movlb	14	; () banked
  1444   00295E  9B29               	bcf	41,5,b	;volatile
  1445   002960  AB29               	btfss	41,5,b	;volatile
  1446   002962  D002               	bra	u3085
  1447   002964  8129               	bsf	41,0,b	;volatile
  1448   002966  D002               	bra	u3087
  1449   002968                     u3085:
  1450   002968  010E               	movlb	14	; () banked
  1451   00296A  9129               	bcf	41,0,b	;volatile
  1452   00296C                     u3087:
  1453   00296C                     
  1454                           ; BSR set to: 14
  1455                           ;main.c: 135:             straightTime[curMove] = get16bitTMR0val();
  1456   00296C  EC47  F021         	call	_get16bitTMR0val	;wreg free
  1457   002970  0101               	movlb	1	; () banked
  1458   002972  51AF               	movf	main@curMove& (0+255),w,b
  1459   002974  0D02               	mullw	2
  1460   002976  0E00               	movlw	low main@straightTime
  1461   002978  24F3               	addwf	243,w,c
  1462   00297A  6ED9               	movwf	fsr2l,c
  1463   00297C  0E01               	movlw	high main@straightTime
  1464   00297E  20F4               	addwfc	prodh,w,c
  1465   002980  6EDA               	movwf	fsr2h,c
  1466   002982  C00C  FFDE         	movff	?_get16bitTMR0val,postinc2
  1467   002986  C00D  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1468                           
  1469                           ;main.c: 138:             stop(&motorL, &motorR, straightRamp);
  1470   00298A  0ECC               	movlw	low main@motorL
  1471   00298C  6E1F               	movwf	stop@mL^0,c
  1472   00298E  0E01               	movlw	high main@motorL
  1473   002990  6E20               	movwf	(stop@mL+1)^0,c
  1474   002992  0EC2               	movlw	low main@motorR
  1475   002994  6E21               	movwf	stop@mR^0,c
  1476   002996  0E01               	movlw	high main@motorR
  1477   002998  6E22               	movwf	(stop@mR+1)^0,c
  1478   00299A  C1B0  F023         	movff	main@straightRamp,stop@straightRamp
  1479   00299E  ECF3  F01D         	call	_stop	;wreg free
  1480   0029A2                     
  1481                           ;main.c: 139:             color_read(&RGBC);
  1482   0029A2  0EBA               	movlw	low main@RGBC
  1483   0029A4  6E10               	movwf	color_read@RGBC^0,c
  1484   0029A6  0E01               	movlw	high main@RGBC
  1485   0029A8  6E11               	movwf	(color_read@RGBC+1)^0,c
  1486   0029AA  EC54  F018         	call	_color_read	;wreg free
  1487   0029AE                     
  1488                           ;main.c: 140:             color_normalise(RGBC, &RGBC_n);
  1489   0029AE  EE21  F0BA         	lfsr	2,main@RGBC
  1490   0029B2  EE00  F026         	lfsr	0,color_normalise@RGBC
  1491   0029B6  0E07               	movlw	7
  1492   0029B8                     u3091:
  1493   0029B8  CFDB FFEB          	movff	plusw2,plusw0
  1494   0029BC  06E8               	decf	wreg,f,c
  1495   0029BE  E2FC               	bc	u3091
  1496   0029C0  0EB2               	movlw	low main@RGBC_n
  1497   0029C2  6E2E               	movwf	color_normalise@RGBC_n^0,c
  1498   0029C4  0E01               	movlw	high main@RGBC_n
  1499   0029C6  6E2F               	movwf	(color_normalise@RGBC_n+1)^0,c
  1500   0029C8  ECC8  F01C         	call	_color_normalise	;wreg free
  1501   0029CC                     
  1502                           ;main.c: 141:             color = color_detect(RGBC_n, red, green, blue, yellow, pink, o
      +                          range, lightblue, white);
  1503   0029CC  EE21  F0B2         	lfsr	2,main@RGBC_n
  1504   0029D0  EE00  F00C         	lfsr	0,color_detect@RGBC_n
  1505   0029D4  0E07               	movlw	7
  1506   0029D6                     u3101:
  1507   0029D6  CFDB FFEB          	movff	plusw2,plusw0
  1508   0029DA  06E8               	decf	wreg,f,c
  1509   0029DC  E2FC               	bc	u3101
  1510   0029DE  EE21  F07B         	lfsr	2,main@red
  1511   0029E2  EE00  F014         	lfsr	0,color_detect@red
  1512   0029E6  0E05               	movlw	5
  1513   0029E8                     u3111:
  1514   0029E8  CFDB FFEB          	movff	plusw2,plusw0
  1515   0029EC  06E8               	decf	wreg,f,c
  1516   0029EE  E2FC               	bc	u3111
  1517   0029F0  EE21  F081         	lfsr	2,main@green
  1518   0029F4  EE00  F01A         	lfsr	0,color_detect@green
  1519   0029F8  0E05               	movlw	5
  1520   0029FA                     u3121:
  1521   0029FA  CFDB FFEB          	movff	plusw2,plusw0
  1522   0029FE  06E8               	decf	wreg,f,c
  1523   002A00  E2FC               	bc	u3121
  1524   002A02  EE21  F087         	lfsr	2,main@blue
  1525   002A06  EE00  F020         	lfsr	0,color_detect@blue
  1526   002A0A  0E05               	movlw	5
  1527   002A0C                     u3131:
  1528   002A0C  CFDB FFEB          	movff	plusw2,plusw0
  1529   002A10  06E8               	decf	wreg,f,c
  1530   002A12  E2FC               	bc	u3131
  1531   002A14  EE21  F08D         	lfsr	2,main@yellow
  1532   002A18  EE00  F026         	lfsr	0,color_detect@yellow
  1533   002A1C  0E05               	movlw	5
  1534   002A1E                     u3141:
  1535   002A1E  CFDB FFEB          	movff	plusw2,plusw0
  1536   002A22  06E8               	decf	wreg,f,c
  1537   002A24  E2FC               	bc	u3141
  1538   002A26  EE21  F093         	lfsr	2,main@pink
  1539   002A2A  EE00  F02C         	lfsr	0,color_detect@pink
  1540   002A2E  0E05               	movlw	5
  1541   002A30                     u3151:
  1542   002A30  CFDB FFEB          	movff	plusw2,plusw0
  1543   002A34  06E8               	decf	wreg,f,c
  1544   002A36  E2FC               	bc	u3151
  1545   002A38  EE21  F099         	lfsr	2,main@orange
  1546   002A3C  EE00  F032         	lfsr	0,color_detect@orange
  1547   002A40  0E05               	movlw	5
  1548   002A42                     u3161:
  1549   002A42  CFDB FFEB          	movff	plusw2,plusw0
  1550   002A46  06E8               	decf	wreg,f,c
  1551   002A48  E2FC               	bc	u3161
  1552   002A4A  EE21  F09F         	lfsr	2,main@lightblue
  1553   002A4E  EE00  F038         	lfsr	0,color_detect@lightBlue
  1554   002A52  0E05               	movlw	5
  1555   002A54                     u3171:
  1556   002A54  CFDB FFEB          	movff	plusw2,plusw0
  1557   002A58  06E8               	decf	wreg,f,c
  1558   002A5A  E2FC               	bc	u3171
  1559   002A5C  EE21  F0A5         	lfsr	2,main@white
  1560   002A60  EE00  F03E         	lfsr	0,color_detect@white
  1561   002A64  0E05               	movlw	5
  1562   002A66                     u3181:
  1563   002A66  CFDB FFEB          	movff	plusw2,plusw0
  1564   002A6A  06E8               	decf	wreg,f,c
  1565   002A6C  E2FC               	bc	u3181
  1566   002A6E  EC1E  F017         	call	_color_detect	;wreg free
  1567   002A72  0101               	movlb	1	; () banked
  1568   002A74  6FAE               	movwf	main@color& (0+255),b
  1569   002A76                     
  1570                           ; BSR set to: 1
  1571                           ;main.c: 143:             moveSequence[curMove] = color;
  1572   002A76  0E52               	movlw	low main@moveSequence
  1573   002A78  25AF               	addwf	main@curMove& (0+255),w,b
  1574   002A7A  6ED9               	movwf	fsr2l,c
  1575   002A7C  6ADA               	clrf	fsr2h,c
  1576   002A7E  0E01               	movlw	high main@moveSequence
  1577   002A80  22DA               	addwfc	fsr2h,f,c
  1578   002A82  C1AE  FFDF         	movff	main@color,indf2
  1579   002A86                     
  1580                           ; BSR set to: 1
  1581                           ;main.c: 146:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1582   002A86  0ECC               	movlw	low main@motorL
  1583   002A88  0100               	movlb	0	; () banked
  1584   002A8A  6FB2               	movwf	move@mL& (0+255),b
  1585   002A8C  0E01               	movlw	high main@motorL
  1586   002A8E  6FB3               	movwf	(move@mL+1)& (0+255),b
  1587   002A90  0EC2               	movlw	low main@motorR
  1588   002A92  6FB4               	movwf	move@mR& (0+255),b
  1589   002A94  0E01               	movlw	high main@motorR
  1590   002A96  6FB5               	movwf	(move@mR+1)& (0+255),b
  1591   002A98  C1AE  F0B6         	movff	main@color,move@color
  1592   002A9C  0E52               	movlw	low main@moveSequence
  1593   002A9E  6FB7               	movwf	move@moveSequence& (0+255),b
  1594   002AA0  0E01               	movlw	high main@moveSequence
  1595   002AA2  6FB8               	movwf	(move@moveSequence+1)& (0+255),b
  1596   002AA4  0E00               	movlw	low main@straightTime
  1597   002AA6  6FB9               	movwf	move@straightTime& (0+255),b
  1598   002AA8  0E01               	movlw	high main@straightTime
  1599   002AAA  6FBA               	movwf	(move@straightTime+1)& (0+255),b
  1600   002AAC  C1AF  F0BB         	movff	main@curMove,move@curMove
  1601   002AB0  C1AB  F0BC         	movff	main@straightSpeed,move@straightSpeed
  1602   002AB4  C17A  F0BD         	movff	main@reverseDuration,move@reverseDuration
  1603   002AB8  C1B0  F0BE         	movff	main@straightRamp,move@straightRamp
  1604   002ABC  C1AC  F0BF         	movff	main@turnSpeed,move@turnSpeed
  1605   002AC0  C1B1  F0C0         	movff	main@turnDuration,move@turnDuration
  1606   002AC4  C1AD  F0C1         	movff	main@turnRamp,move@turnRamp
  1607   002AC8  ECB1  F00D         	call	_move	;wreg free
  1608   002ACC                     
  1609                           ;main.c: 149:             color_read(&RGBC);
  1610   002ACC  0EBA               	movlw	low main@RGBC
  1611   002ACE  6E10               	movwf	color_read@RGBC^0,c
  1612   002AD0  0E01               	movlw	high main@RGBC
  1613   002AD2  6E11               	movwf	(color_read@RGBC+1)^0,c
  1614   002AD4  EC54  F018         	call	_color_read	;wreg free
  1615   002AD8                     
  1616                           ;main.c: 150:             ambient=RGBC.C;
  1617   002AD8  C1C0  F04E         	movff	main@RGBC+6,_ambient
  1618   002ADC  C1C1  F04F         	movff	main@RGBC+7,_ambient+1
  1619   002AE0                     
  1620                           ;main.c: 152:             curMove++;
  1621   002AE0  0101               	movlb	1	; () banked
  1622   002AE2  2BAF               	incf	main@curMove& (0+255),f,b
  1623   002AE4                     
  1624                           ; BSR set to: 1
  1625                           ;main.c: 153:             resetTimer();
  1626   002AE4  EC49  F022         	call	_resetTimer	;wreg free
  1627   002AE8                     
  1628                           ;main.c: 154:             PIE0bits.INT0IE=TMR0IE=1;
  1629   002AE8  010E               	movlb	14	; () banked
  1630   002AEA  8B29               	bsf	41,5,b	;volatile
  1631   002AEC  AB29               	btfss	41,5,b	;volatile
  1632   002AEE  D002               	bra	u3195
  1633   002AF0  8129               	bsf	41,0,b	;volatile
  1634   002AF2  D002               	bra	u3197
  1635   002AF4                     u3195:
  1636   002AF4  010E               	movlb	14	; () banked
  1637   002AF6  9129               	bcf	41,0,b	;volatile
  1638   002AF8                     u3197:
  1639   002AF8                     
  1640                           ; BSR set to: 14
  1641                           ;main.c: 155:             wall = 0;
  1642   002AF8  0E00               	movlw	0
  1643   002AFA  0100               	movlb	0	; () banked
  1644   002AFC  6FB1               	movwf	_wall& (0+255),b
  1645   002AFE                     l4148:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;main.c: 159:         if (lost == 1) {
  1649   002AFE  05B0               	decf	_lost& (0+255),w,b
  1650   002B00  A4D8               	btfss	status,2,c
  1651   002B02  EF85  F015         	goto	u3201
  1652   002B06  EF87  F015         	goto	u3200
  1653   002B0A                     u3201:
  1654   002B0A  EFBC  F015         	goto	l4158
  1655   002B0E                     u3200:
  1656   002B0E                     
  1657                           ; BSR set to: 0
  1658                           ;main.c: 160:             PIE0bits.INT0IE=0;
  1659   002B0E  010E               	movlb	14	; () banked
  1660   002B10  9129               	bcf	41,0,b	;volatile
  1661   002B12                     
  1662                           ; BSR set to: 14
  1663                           ;main.c: 161:             stop(&motorL, &motorR, straightRamp);
  1664   002B12  0ECC               	movlw	low main@motorL
  1665   002B14  6E1F               	movwf	stop@mL^0,c
  1666   002B16  0E01               	movlw	high main@motorL
  1667   002B18  6E20               	movwf	(stop@mL+1)^0,c
  1668   002B1A  0EC2               	movlw	low main@motorR
  1669   002B1C  6E21               	movwf	stop@mR^0,c
  1670   002B1E  0E01               	movlw	high main@motorR
  1671   002B20  6E22               	movwf	(stop@mR+1)^0,c
  1672   002B22  C1B0  F023         	movff	main@straightRamp,stop@straightRamp
  1673   002B26  ECF3  F01D         	call	_stop	;wreg free
  1674                           
  1675                           ;main.c: 162:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1676   002B2A  0ECC               	movlw	low main@motorL
  1677   002B2C  6E2D               	movwf	lostReturnHome@mL^0,c
  1678   002B2E  0E01               	movlw	high main@motorL
  1679   002B30  6E2E               	movwf	(lostReturnHome@mL+1)^0,c
  1680   002B32  0EC2               	movlw	low main@motorR
  1681   002B34  6E2F               	movwf	lostReturnHome@mR^0,c
  1682   002B36  0E01               	movlw	high main@motorR
  1683   002B38  6E30               	movwf	(lostReturnHome@mR+1)^0,c
  1684   002B3A  0E52               	movlw	low main@moveSequence
  1685   002B3C  6E31               	movwf	lostReturnHome@moveSequence^0,c
  1686   002B3E  0E01               	movlw	high main@moveSequence
  1687   002B40  6E32               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1688   002B42  0E00               	movlw	low main@straightTime
  1689   002B44  6E33               	movwf	lostReturnHome@straightTime^0,c
  1690   002B46  0E01               	movlw	high main@straightTime
  1691   002B48  6E34               	movwf	(lostReturnHome@straightTime+1)^0,c
  1692   002B4A  C1AF  F035         	movff	main@curMove,lostReturnHome@curMove
  1693   002B4E  C1AB  F036         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1694   002B52  C17A  F037         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1695   002B56  C1B0  F038         	movff	main@straightRamp,lostReturnHome@straightRamp
  1696   002B5A  C1AC  F039         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1697   002B5E  C1B1  F03A         	movff	main@turnDuration,lostReturnHome@turnDuration
  1698   002B62  C1AD  F03B         	movff	main@turnRamp,lostReturnHome@turnRamp
  1699   002B66  EC5F  F00A         	call	_lostReturnHome	;wreg free
  1700   002B6A                     
  1701                           ;main.c: 163:             PIE0bits.INT0IE=1;
  1702   002B6A  010E               	movlb	14	; () banked
  1703   002B6C  8129               	bsf	41,0,b	;volatile
  1704   002B6E                     
  1705                           ; BSR set to: 14
  1706                           ;main.c: 164:             lost = 0;
  1707   002B6E  0E00               	movlw	0
  1708   002B70  0100               	movlb	0	; () banked
  1709   002B72  6FB0               	movwf	_lost& (0+255),b
  1710                           
  1711                           ;main.c: 165:             break;
  1712   002B74  EFCF  F015         	goto	l100
  1713   002B78                     l4158:
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;main.c: 168:         if (color == 8 || color == 9) {break;}
  1717   002B78  0E08               	movlw	8
  1718   002B7A  0101               	movlb	1	; () banked
  1719   002B7C  19AE               	xorwf	main@color& (0+255),w,b
  1720   002B7E  B4D8               	btfsc	status,2,c
  1721   002B80  EFC4  F015         	goto	u3211
  1722   002B84  EFC6  F015         	goto	u3210
  1723   002B88                     u3211:
  1724   002B88  EFCF  F015         	goto	l100
  1725   002B8C                     u3210:
  1726   002B8C                     
  1727                           ; BSR set to: 1
  1728   002B8C  0E09               	movlw	9
  1729   002B8E  19AE               	xorwf	main@color& (0+255),w,b
  1730   002B90  A4D8               	btfss	status,2,c
  1731   002B92  EFCD  F015         	goto	u3221
  1732   002B96  EFCF  F015         	goto	u3220
  1733   002B9A                     u3221:
  1734   002B9A  EFA5  F014         	goto	l4120
  1735   002B9E                     u3220:
  1736   002B9E                     l100:
  1737   002B9E  EF4C  F000         	goto	start
  1738   002BA2                     __end_of_main:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _move *****************
  1742 ;; Defined at:
  1743 ;;		line 91 in file "dc_motor.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  1746 ;;		 -> main@motorL(10), 
  1747 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  1748 ;;		 -> main@motorR(10), 
  1749 ;;  color           1    4[BANK0 ] unsigned char 
  1750 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  1751 ;;		 -> main@moveSequence(40), 
  1752 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  1753 ;;		 -> main@straightTime(82), 
  1754 ;;  curMove         1    9[BANK0 ] unsigned char 
  1755 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  1756 ;;  reverseDurat    1   11[BANK0 ] unsigned char 
  1757 ;;  straightRamp    1   12[BANK0 ] unsigned char 
  1758 ;;  turnSpeed       1   13[BANK0 ] unsigned char 
  1759 ;;  turnDuration    1   14[BANK0 ] unsigned char 
  1760 ;;  turnRamp        1   15[BANK0 ] unsigned char 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;		None
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1772 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1776 ;;Total ram usage:       18 bytes
  1777 ;; Hardware stack levels used: 1
  1778 ;; Hardware stack levels required when called: 9
  1779 ;; This function calls:
  1780 ;;		_fullSpeedAhead
  1781 ;;		_returnHome
  1782 ;;		_reverseOneSquare
  1783 ;;		_turnLeft
  1784 ;;		_turnRight
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text1
  1791   001B62                     __ptext1:
  1792                           	callstack 0
  1793   001B62                     _move:
  1794                           	callstack 21
  1795   001B62                     
  1796                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reve
      +                          rseDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, uns
      +                          igned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  1797   001B62  0100               	movlb	0	; () banked
  1798   001B64  05B6               	decf	move@color& (0+255),w,b
  1799   001B66  A4D8               	btfss	status,2,c
  1800   001B68  EFB8  F00D         	goto	u2951
  1801   001B6C  EFBA  F00D         	goto	u2950
  1802   001B70                     u2951:
  1803   001B70  EF02  F00E         	goto	l3952
  1804   001B74                     u2950:
  1805   001B74                     
  1806                           ; BSR set to: 0
  1807                           ;dc_motor.c: 94:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1808   001B74  C0B2  F01F         	movff	move@mL,turnRight@mL
  1809   001B78  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  1810   001B7C  C0B4  F021         	movff	move@mR,turnRight@mR
  1811   001B80  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  1812   001B84  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1813   001B88  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  1814   001B8C  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  1815   001B90  EC3E  F01A         	call	_turnRight	;wreg free
  1816   001B94                     
  1817                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1818   001B94  0E05               	movlw	5
  1819   001B96  6E42               	movwf	(??_move+1)^0,c
  1820   001B98  0E0F               	movlw	15
  1821   001B9A  6E41               	movwf	??_move^0,c
  1822   001B9C  0EF1               	movlw	241
  1823   001B9E                     u3267:
  1824   001B9E  2EE8               	decfsz	wreg,f,c
  1825   001BA0  D7FE               	bra	u3267
  1826   001BA2  2E41               	decfsz	??_move^0,f,c
  1827   001BA4  D7FC               	bra	u3267
  1828   001BA6  2E42               	decfsz	(??_move+1)^0,f,c
  1829   001BA8  D7FA               	bra	u3267
  1830   001BAA  0000               	nop	
  1831   001BAC                     
  1832                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1833   001BAC  C0B2  F01F         	movff	move@mL,turnRight@mL
  1834   001BB0  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  1835   001BB4  C0B4  F021         	movff	move@mR,turnRight@mR
  1836   001BB8  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  1837   001BBC  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1838   001BC0  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  1839   001BC4  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  1840   001BC8  EC3E  F01A         	call	_turnRight	;wreg free
  1841                           
  1842                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1843   001BCC  0E05               	movlw	5
  1844   001BCE  6E42               	movwf	(??_move+1)^0,c
  1845   001BD0  0E0F               	movlw	15
  1846   001BD2  6E41               	movwf	??_move^0,c
  1847   001BD4  0EF1               	movlw	241
  1848   001BD6                     u3277:
  1849   001BD6  2EE8               	decfsz	wreg,f,c
  1850   001BD8  D7FE               	bra	u3277
  1851   001BDA  2E41               	decfsz	??_move^0,f,c
  1852   001BDC  D7FC               	bra	u3277
  1853   001BDE  2E42               	decfsz	(??_move+1)^0,f,c
  1854   001BE0  D7FA               	bra	u3277
  1855   001BE2  0000               	nop	
  1856   001BE4                     
  1857                           ;dc_motor.c: 98:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1858   001BE4  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  1859   001BE8  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1860   001BEC  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  1861   001BF0  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1862   001BF4  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1863   001BF8  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1864   001BFC  EC77  F01E         	call	_fullSpeedAhead	;wreg free
  1865                           
  1866                           ;dc_motor.c: 99:     }
  1867   001C00  EFDB  F010         	goto	l538
  1868   001C04                     l3952:
  1869                           
  1870                           ; BSR set to: 0
  1871   001C04  0E02               	movlw	2
  1872   001C06  19B6               	xorwf	move@color& (0+255),w,b
  1873   001C08  A4D8               	btfss	status,2,c
  1874   001C0A  EF09  F00E         	goto	u2961
  1875   001C0E  EF0B  F00E         	goto	u2960
  1876   001C12                     u2961:
  1877   001C12  EF53  F00E         	goto	l3962
  1878   001C16                     u2960:
  1879   001C16                     
  1880                           ; BSR set to: 0
  1881                           ;dc_motor.c: 102:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1882   001C16  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1883   001C1A  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1884   001C1E  C0B4  F021         	movff	move@mR,turnLeft@mR
  1885   001C22  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1886   001C26  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1887   001C2A  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1888   001C2E  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1889   001C32  EC28  F01B         	call	_turnLeft	;wreg free
  1890   001C36                     
  1891                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1892   001C36  0E05               	movlw	5
  1893   001C38  6E42               	movwf	(??_move+1)^0,c
  1894   001C3A  0E0F               	movlw	15
  1895   001C3C  6E41               	movwf	??_move^0,c
  1896   001C3E  0EF1               	movlw	241
  1897   001C40                     u3287:
  1898   001C40  2EE8               	decfsz	wreg,f,c
  1899   001C42  D7FE               	bra	u3287
  1900   001C44  2E41               	decfsz	??_move^0,f,c
  1901   001C46  D7FC               	bra	u3287
  1902   001C48  2E42               	decfsz	(??_move+1)^0,f,c
  1903   001C4A  D7FA               	bra	u3287
  1904   001C4C  0000               	nop	
  1905   001C4E                     
  1906                           ;dc_motor.c: 104:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1907   001C4E  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1908   001C52  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1909   001C56  C0B4  F021         	movff	move@mR,turnLeft@mR
  1910   001C5A  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1911   001C5E  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1912   001C62  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1913   001C66  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1914   001C6A  EC28  F01B         	call	_turnLeft	;wreg free
  1915                           
  1916                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1917   001C6E  0E05               	movlw	5
  1918   001C70  6E42               	movwf	(??_move+1)^0,c
  1919   001C72  0E0F               	movlw	15
  1920   001C74  6E41               	movwf	??_move^0,c
  1921   001C76  0EF1               	movlw	241
  1922   001C78                     u3297:
  1923   001C78  2EE8               	decfsz	wreg,f,c
  1924   001C7A  D7FE               	bra	u3297
  1925   001C7C  2E41               	decfsz	??_move^0,f,c
  1926   001C7E  D7FC               	bra	u3297
  1927   001C80  2E42               	decfsz	(??_move+1)^0,f,c
  1928   001C82  D7FA               	bra	u3297
  1929   001C84  0000               	nop	
  1930   001C86                     
  1931                           ;dc_motor.c: 106:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1932   001C86  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  1933   001C8A  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1934   001C8E  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  1935   001C92  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1936   001C96  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1937   001C9A  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1938   001C9E  EC77  F01E         	call	_fullSpeedAhead	;wreg free
  1939                           
  1940                           ;dc_motor.c: 107:     }
  1941   001CA2  EFDB  F010         	goto	l538
  1942   001CA6                     l3962:
  1943                           
  1944                           ; BSR set to: 0
  1945   001CA6  0E03               	movlw	3
  1946   001CA8  19B6               	xorwf	move@color& (0+255),w,b
  1947   001CAA  A4D8               	btfss	status,2,c
  1948   001CAC  EF5A  F00E         	goto	u2971
  1949   001CB0  EF5C  F00E         	goto	u2970
  1950   001CB4                     u2971:
  1951   001CB4  EFDC  F00E         	goto	l3978
  1952   001CB8                     u2970:
  1953   001CB8                     
  1954                           ; BSR set to: 0
  1955                           ;dc_motor.c: 110:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1956   001CB8  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1957   001CBC  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1958   001CC0  C0B4  F021         	movff	move@mR,turnLeft@mR
  1959   001CC4  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1960   001CC8  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1961   001CCC  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1962   001CD0  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1963   001CD4  EC28  F01B         	call	_turnLeft	;wreg free
  1964   001CD8                     
  1965                           ;dc_motor.c: 111:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1966   001CD8  0E05               	movlw	5
  1967   001CDA  6E42               	movwf	(??_move+1)^0,c
  1968   001CDC  0E0F               	movlw	15
  1969   001CDE  6E41               	movwf	??_move^0,c
  1970   001CE0  0EF1               	movlw	241
  1971   001CE2                     u3307:
  1972   001CE2  2EE8               	decfsz	wreg,f,c
  1973   001CE4  D7FE               	bra	u3307
  1974   001CE6  2E41               	decfsz	??_move^0,f,c
  1975   001CE8  D7FC               	bra	u3307
  1976   001CEA  2E42               	decfsz	(??_move+1)^0,f,c
  1977   001CEC  D7FA               	bra	u3307
  1978   001CEE  0000               	nop	
  1979   001CF0                     
  1980                           ;dc_motor.c: 112:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1981   001CF0  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1982   001CF4  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1983   001CF8  C0B4  F021         	movff	move@mR,turnLeft@mR
  1984   001CFC  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1985   001D00  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1986   001D04  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1987   001D08  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1988   001D0C  EC28  F01B         	call	_turnLeft	;wreg free
  1989                           
  1990                           ;dc_motor.c: 113:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1991   001D10  0E05               	movlw	5
  1992   001D12  6E42               	movwf	(??_move+1)^0,c
  1993   001D14  0E0F               	movlw	15
  1994   001D16  6E41               	movwf	??_move^0,c
  1995   001D18  0EF1               	movlw	241
  1996   001D1A                     u3317:
  1997   001D1A  2EE8               	decfsz	wreg,f,c
  1998   001D1C  D7FE               	bra	u3317
  1999   001D1E  2E41               	decfsz	??_move^0,f,c
  2000   001D20  D7FC               	bra	u3317
  2001   001D22  2E42               	decfsz	(??_move+1)^0,f,c
  2002   001D24  D7FA               	bra	u3317
  2003   001D26  0000               	nop	
  2004   001D28                     
  2005                           ;dc_motor.c: 114:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2006   001D28  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2007   001D2C  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2008   001D30  C0B4  F021         	movff	move@mR,turnLeft@mR
  2009   001D34  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2010   001D38  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2011   001D3C  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2012   001D40  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2013   001D44  EC28  F01B         	call	_turnLeft	;wreg free
  2014   001D48                     
  2015                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2016   001D48  0E05               	movlw	5
  2017   001D4A  6E42               	movwf	(??_move+1)^0,c
  2018   001D4C  0E0F               	movlw	15
  2019   001D4E  6E41               	movwf	??_move^0,c
  2020   001D50  0EF1               	movlw	241
  2021   001D52                     u3327:
  2022   001D52  2EE8               	decfsz	wreg,f,c
  2023   001D54  D7FE               	bra	u3327
  2024   001D56  2E41               	decfsz	??_move^0,f,c
  2025   001D58  D7FC               	bra	u3327
  2026   001D5A  2E42               	decfsz	(??_move+1)^0,f,c
  2027   001D5C  D7FA               	bra	u3327
  2028   001D5E  0000               	nop	
  2029                           
  2030                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2031   001D60  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2032   001D64  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2033   001D68  C0B4  F021         	movff	move@mR,turnLeft@mR
  2034   001D6C  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2035   001D70  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2036   001D74  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2037   001D78  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2038   001D7C  EC28  F01B         	call	_turnLeft	;wreg free
  2039   001D80                     
  2040                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2041   001D80  0E05               	movlw	5
  2042   001D82  6E42               	movwf	(??_move+1)^0,c
  2043   001D84  0E0F               	movlw	15
  2044   001D86  6E41               	movwf	??_move^0,c
  2045   001D88  0EF1               	movlw	241
  2046   001D8A                     u3337:
  2047   001D8A  2EE8               	decfsz	wreg,f,c
  2048   001D8C  D7FE               	bra	u3337
  2049   001D8E  2E41               	decfsz	??_move^0,f,c
  2050   001D90  D7FC               	bra	u3337
  2051   001D92  2E42               	decfsz	(??_move+1)^0,f,c
  2052   001D94  D7FA               	bra	u3337
  2053   001D96  0000               	nop	
  2054   001D98                     
  2055                           ;dc_motor.c: 118:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2056   001D98  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2057   001D9C  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2058   001DA0  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2059   001DA4  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2060   001DA8  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2061   001DAC  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2062   001DB0  EC77  F01E         	call	_fullSpeedAhead	;wreg free
  2063                           
  2064                           ;dc_motor.c: 119:     }
  2065   001DB4  EFDB  F010         	goto	l538
  2066   001DB8                     l3978:
  2067                           
  2068                           ; BSR set to: 0
  2069   001DB8  0E04               	movlw	4
  2070   001DBA  19B6               	xorwf	move@color& (0+255),w,b
  2071   001DBC  A4D8               	btfss	status,2,c
  2072   001DBE  EFE3  F00E         	goto	u2981
  2073   001DC2  EFE5  F00E         	goto	u2980
  2074   001DC6                     u2981:
  2075   001DC6  EF49  F00F         	goto	l3990
  2076   001DCA                     u2980:
  2077   001DCA                     
  2078                           ; BSR set to: 0
  2079                           ;dc_motor.c: 122:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2080   001DCA  C0B2  F01F         	movff	move@mL,reverseOneSquare@mL
  2081   001DCE  C0B3  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2082   001DD2  C0B4  F021         	movff	move@mR,reverseOneSquare@mR
  2083   001DD6  C0B5  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2084   001DDA  C0BC  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2085   001DDE  C0BD  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2086   001DE2  C0BE  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2087   001DE6  EC4B  F019         	call	_reverseOneSquare	;wreg free
  2088   001DEA                     
  2089                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2090   001DEA  0E05               	movlw	5
  2091   001DEC  6E42               	movwf	(??_move+1)^0,c
  2092   001DEE  0E0F               	movlw	15
  2093   001DF0  6E41               	movwf	??_move^0,c
  2094   001DF2  0EF1               	movlw	241
  2095   001DF4                     u3347:
  2096   001DF4  2EE8               	decfsz	wreg,f,c
  2097   001DF6  D7FE               	bra	u3347
  2098   001DF8  2E41               	decfsz	??_move^0,f,c
  2099   001DFA  D7FC               	bra	u3347
  2100   001DFC  2E42               	decfsz	(??_move+1)^0,f,c
  2101   001DFE  D7FA               	bra	u3347
  2102   001E00  0000               	nop	
  2103   001E02                     
  2104                           ;dc_motor.c: 124:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2105   001E02  C0B2  F01F         	movff	move@mL,turnRight@mL
  2106   001E06  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2107   001E0A  C0B4  F021         	movff	move@mR,turnRight@mR
  2108   001E0E  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2109   001E12  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2110   001E16  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2111   001E1A  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2112   001E1E  EC3E  F01A         	call	_turnRight	;wreg free
  2113                           
  2114                           ;dc_motor.c: 125:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2115   001E22  0E05               	movlw	5
  2116   001E24  6E42               	movwf	(??_move+1)^0,c
  2117   001E26  0E0F               	movlw	15
  2118   001E28  6E41               	movwf	??_move^0,c
  2119   001E2A  0EF1               	movlw	241
  2120   001E2C                     u3357:
  2121   001E2C  2EE8               	decfsz	wreg,f,c
  2122   001E2E  D7FE               	bra	u3357
  2123   001E30  2E41               	decfsz	??_move^0,f,c
  2124   001E32  D7FC               	bra	u3357
  2125   001E34  2E42               	decfsz	(??_move+1)^0,f,c
  2126   001E36  D7FA               	bra	u3357
  2127   001E38  0000               	nop	
  2128   001E3A                     
  2129                           ;dc_motor.c: 126:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2130   001E3A  C0B2  F01F         	movff	move@mL,turnRight@mL
  2131   001E3E  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2132   001E42  C0B4  F021         	movff	move@mR,turnRight@mR
  2133   001E46  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2134   001E4A  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2135   001E4E  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2136   001E52  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2137   001E56  EC3E  F01A         	call	_turnRight	;wreg free
  2138   001E5A                     
  2139                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2140   001E5A  0E05               	movlw	5
  2141   001E5C  6E42               	movwf	(??_move+1)^0,c
  2142   001E5E  0E0F               	movlw	15
  2143   001E60  6E41               	movwf	??_move^0,c
  2144   001E62  0EF1               	movlw	241
  2145   001E64                     u3367:
  2146   001E64  2EE8               	decfsz	wreg,f,c
  2147   001E66  D7FE               	bra	u3367
  2148   001E68  2E41               	decfsz	??_move^0,f,c
  2149   001E6A  D7FC               	bra	u3367
  2150   001E6C  2E42               	decfsz	(??_move+1)^0,f,c
  2151   001E6E  D7FA               	bra	u3367
  2152   001E70  0000               	nop	
  2153                           
  2154                           ;dc_motor.c: 128:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2155   001E72  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2156   001E76  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2157   001E7A  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2158   001E7E  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2159   001E82  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2160   001E86  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2161   001E8A  EC77  F01E         	call	_fullSpeedAhead	;wreg free
  2162                           
  2163                           ;dc_motor.c: 129:     }
  2164   001E8E  EFDB  F010         	goto	l538
  2165   001E92                     l3990:
  2166                           
  2167                           ; BSR set to: 0
  2168   001E92  0E05               	movlw	5
  2169   001E94  19B6               	xorwf	move@color& (0+255),w,b
  2170   001E96  A4D8               	btfss	status,2,c
  2171   001E98  EF50  F00F         	goto	u2991
  2172   001E9C  EF52  F00F         	goto	u2990
  2173   001EA0                     u2991:
  2174   001EA0  EFB6  F00F         	goto	l4002
  2175   001EA4                     u2990:
  2176   001EA4                     
  2177                           ; BSR set to: 0
  2178                           ;dc_motor.c: 132:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2179   001EA4  C0B2  F01F         	movff	move@mL,reverseOneSquare@mL
  2180   001EA8  C0B3  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2181   001EAC  C0B4  F021         	movff	move@mR,reverseOneSquare@mR
  2182   001EB0  C0B5  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2183   001EB4  C0BC  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2184   001EB8  C0BD  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2185   001EBC  C0BE  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2186   001EC0  EC4B  F019         	call	_reverseOneSquare	;wreg free
  2187   001EC4                     
  2188                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2189   001EC4  0E05               	movlw	5
  2190   001EC6  6E42               	movwf	(??_move+1)^0,c
  2191   001EC8  0E0F               	movlw	15
  2192   001ECA  6E41               	movwf	??_move^0,c
  2193   001ECC  0EF1               	movlw	241
  2194   001ECE                     u3377:
  2195   001ECE  2EE8               	decfsz	wreg,f,c
  2196   001ED0  D7FE               	bra	u3377
  2197   001ED2  2E41               	decfsz	??_move^0,f,c
  2198   001ED4  D7FC               	bra	u3377
  2199   001ED6  2E42               	decfsz	(??_move+1)^0,f,c
  2200   001ED8  D7FA               	bra	u3377
  2201   001EDA  0000               	nop	
  2202   001EDC                     
  2203                           ;dc_motor.c: 134:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2204   001EDC  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2205   001EE0  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2206   001EE4  C0B4  F021         	movff	move@mR,turnLeft@mR
  2207   001EE8  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2208   001EEC  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2209   001EF0  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2210   001EF4  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2211   001EF8  EC28  F01B         	call	_turnLeft	;wreg free
  2212                           
  2213                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2214   001EFC  0E05               	movlw	5
  2215   001EFE  6E42               	movwf	(??_move+1)^0,c
  2216   001F00  0E0F               	movlw	15
  2217   001F02  6E41               	movwf	??_move^0,c
  2218   001F04  0EF1               	movlw	241
  2219   001F06                     u3387:
  2220   001F06  2EE8               	decfsz	wreg,f,c
  2221   001F08  D7FE               	bra	u3387
  2222   001F0A  2E41               	decfsz	??_move^0,f,c
  2223   001F0C  D7FC               	bra	u3387
  2224   001F0E  2E42               	decfsz	(??_move+1)^0,f,c
  2225   001F10  D7FA               	bra	u3387
  2226   001F12  0000               	nop	
  2227   001F14                     
  2228                           ;dc_motor.c: 136:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2229   001F14  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2230   001F18  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2231   001F1C  C0B4  F021         	movff	move@mR,turnLeft@mR
  2232   001F20  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2233   001F24  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2234   001F28  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2235   001F2C  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2236   001F30  EC28  F01B         	call	_turnLeft	;wreg free
  2237   001F34                     
  2238                           ;dc_motor.c: 137:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2239   001F34  0E05               	movlw	5
  2240   001F36  6E42               	movwf	(??_move+1)^0,c
  2241   001F38  0E0F               	movlw	15
  2242   001F3A  6E41               	movwf	??_move^0,c
  2243   001F3C  0EF1               	movlw	241
  2244   001F3E                     u3397:
  2245   001F3E  2EE8               	decfsz	wreg,f,c
  2246   001F40  D7FE               	bra	u3397
  2247   001F42  2E41               	decfsz	??_move^0,f,c
  2248   001F44  D7FC               	bra	u3397
  2249   001F46  2E42               	decfsz	(??_move+1)^0,f,c
  2250   001F48  D7FA               	bra	u3397
  2251   001F4A  0000               	nop	
  2252                           
  2253                           ;dc_motor.c: 138:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2254   001F4C  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2255   001F50  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2256   001F54  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2257   001F58  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2258   001F5C  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2259   001F60  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2260   001F64  EC77  F01E         	call	_fullSpeedAhead	;wreg free
  2261                           
  2262                           ;dc_motor.c: 139:     }
  2263   001F68  EFDB  F010         	goto	l538
  2264   001F6C                     l4002:
  2265                           
  2266                           ; BSR set to: 0
  2267   001F6C  0E06               	movlw	6
  2268   001F6E  19B6               	xorwf	move@color& (0+255),w,b
  2269   001F70  A4D8               	btfss	status,2,c
  2270   001F72  EFBD  F00F         	goto	u3001
  2271   001F76  EFBF  F00F         	goto	u3000
  2272   001F7A                     u3001:
  2273   001F7A  EF23  F010         	goto	l4014
  2274   001F7E                     u3000:
  2275   001F7E                     
  2276                           ; BSR set to: 0
  2277                           ;dc_motor.c: 142:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2278   001F7E  C0B2  F01F         	movff	move@mL,turnRight@mL
  2279   001F82  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2280   001F86  C0B4  F021         	movff	move@mR,turnRight@mR
  2281   001F8A  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2282   001F8E  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2283   001F92  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2284   001F96  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2285   001F9A  EC3E  F01A         	call	_turnRight	;wreg free
  2286   001F9E                     
  2287                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2288   001F9E  0E05               	movlw	5
  2289   001FA0  6E42               	movwf	(??_move+1)^0,c
  2290   001FA2  0E0F               	movlw	15
  2291   001FA4  6E41               	movwf	??_move^0,c
  2292   001FA6  0EF1               	movlw	241
  2293   001FA8                     u3407:
  2294   001FA8  2EE8               	decfsz	wreg,f,c
  2295   001FAA  D7FE               	bra	u3407
  2296   001FAC  2E41               	decfsz	??_move^0,f,c
  2297   001FAE  D7FC               	bra	u3407
  2298   001FB0  2E42               	decfsz	(??_move+1)^0,f,c
  2299   001FB2  D7FA               	bra	u3407
  2300   001FB4  0000               	nop	
  2301   001FB6                     
  2302                           ;dc_motor.c: 144:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2303   001FB6  C0B2  F01F         	movff	move@mL,turnRight@mL
  2304   001FBA  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2305   001FBE  C0B4  F021         	movff	move@mR,turnRight@mR
  2306   001FC2  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2307   001FC6  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2308   001FCA  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2309   001FCE  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2310   001FD2  EC3E  F01A         	call	_turnRight	;wreg free
  2311                           
  2312                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2313   001FD6  0E05               	movlw	5
  2314   001FD8  6E42               	movwf	(??_move+1)^0,c
  2315   001FDA  0E0F               	movlw	15
  2316   001FDC  6E41               	movwf	??_move^0,c
  2317   001FDE  0EF1               	movlw	241
  2318   001FE0                     u3417:
  2319   001FE0  2EE8               	decfsz	wreg,f,c
  2320   001FE2  D7FE               	bra	u3417
  2321   001FE4  2E41               	decfsz	??_move^0,f,c
  2322   001FE6  D7FC               	bra	u3417
  2323   001FE8  2E42               	decfsz	(??_move+1)^0,f,c
  2324   001FEA  D7FA               	bra	u3417
  2325   001FEC  0000               	nop	
  2326   001FEE                     
  2327                           ;dc_motor.c: 146:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2328   001FEE  C0B2  F01F         	movff	move@mL,turnRight@mL
  2329   001FF2  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2330   001FF6  C0B4  F021         	movff	move@mR,turnRight@mR
  2331   001FFA  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2332   001FFE  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2333   002002  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2334   002006  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2335   00200A  EC3E  F01A         	call	_turnRight	;wreg free
  2336   00200E                     
  2337                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2338   00200E  0E05               	movlw	5
  2339   002010  6E42               	movwf	(??_move+1)^0,c
  2340   002012  0E0F               	movlw	15
  2341   002014  6E41               	movwf	??_move^0,c
  2342   002016  0EF1               	movlw	241
  2343   002018                     u3427:
  2344   002018  2EE8               	decfsz	wreg,f,c
  2345   00201A  D7FE               	bra	u3427
  2346   00201C  2E41               	decfsz	??_move^0,f,c
  2347   00201E  D7FC               	bra	u3427
  2348   002020  2E42               	decfsz	(??_move+1)^0,f,c
  2349   002022  D7FA               	bra	u3427
  2350   002024  0000               	nop	
  2351                           
  2352                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2353   002026  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2354   00202A  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2355   00202E  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2356   002032  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2357   002036  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2358   00203A  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2359   00203E  EC77  F01E         	call	_fullSpeedAhead	;wreg free
  2360                           
  2361                           ;dc_motor.c: 149:     }
  2362   002042  EFDB  F010         	goto	l538
  2363   002046                     l4014:
  2364                           
  2365                           ; BSR set to: 0
  2366   002046  0E07               	movlw	7
  2367   002048  19B6               	xorwf	move@color& (0+255),w,b
  2368   00204A  A4D8               	btfss	status,2,c
  2369   00204C  EF2A  F010         	goto	u3011
  2370   002050  EF2C  F010         	goto	u3010
  2371   002054                     u3011:
  2372   002054  EF90  F010         	goto	l4026
  2373   002058                     u3010:
  2374   002058                     
  2375                           ; BSR set to: 0
  2376                           ;dc_motor.c: 152:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2377   002058  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2378   00205C  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2379   002060  C0B4  F021         	movff	move@mR,turnLeft@mR
  2380   002064  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2381   002068  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2382   00206C  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2383   002070  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2384   002074  EC28  F01B         	call	_turnLeft	;wreg free
  2385   002078                     
  2386                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2387   002078  0E05               	movlw	5
  2388   00207A  6E42               	movwf	(??_move+1)^0,c
  2389   00207C  0E0F               	movlw	15
  2390   00207E  6E41               	movwf	??_move^0,c
  2391   002080  0EF1               	movlw	241
  2392   002082                     u3437:
  2393   002082  2EE8               	decfsz	wreg,f,c
  2394   002084  D7FE               	bra	u3437
  2395   002086  2E41               	decfsz	??_move^0,f,c
  2396   002088  D7FC               	bra	u3437
  2397   00208A  2E42               	decfsz	(??_move+1)^0,f,c
  2398   00208C  D7FA               	bra	u3437
  2399   00208E  0000               	nop	
  2400   002090                     
  2401                           ;dc_motor.c: 154:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2402   002090  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2403   002094  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2404   002098  C0B4  F021         	movff	move@mR,turnLeft@mR
  2405   00209C  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2406   0020A0  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2407   0020A4  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2408   0020A8  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2409   0020AC  EC28  F01B         	call	_turnLeft	;wreg free
  2410                           
  2411                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2412   0020B0  0E05               	movlw	5
  2413   0020B2  6E42               	movwf	(??_move+1)^0,c
  2414   0020B4  0E0F               	movlw	15
  2415   0020B6  6E41               	movwf	??_move^0,c
  2416   0020B8  0EF1               	movlw	241
  2417   0020BA                     u3447:
  2418   0020BA  2EE8               	decfsz	wreg,f,c
  2419   0020BC  D7FE               	bra	u3447
  2420   0020BE  2E41               	decfsz	??_move^0,f,c
  2421   0020C0  D7FC               	bra	u3447
  2422   0020C2  2E42               	decfsz	(??_move+1)^0,f,c
  2423   0020C4  D7FA               	bra	u3447
  2424   0020C6  0000               	nop	
  2425   0020C8                     
  2426                           ;dc_motor.c: 156:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2427   0020C8  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2428   0020CC  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2429   0020D0  C0B4  F021         	movff	move@mR,turnLeft@mR
  2430   0020D4  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2431   0020D8  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2432   0020DC  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2433   0020E0  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2434   0020E4  EC28  F01B         	call	_turnLeft	;wreg free
  2435   0020E8                     
  2436                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2437   0020E8  0E05               	movlw	5
  2438   0020EA  6E42               	movwf	(??_move+1)^0,c
  2439   0020EC  0E0F               	movlw	15
  2440   0020EE  6E41               	movwf	??_move^0,c
  2441   0020F0  0EF1               	movlw	241
  2442   0020F2                     u3457:
  2443   0020F2  2EE8               	decfsz	wreg,f,c
  2444   0020F4  D7FE               	bra	u3457
  2445   0020F6  2E41               	decfsz	??_move^0,f,c
  2446   0020F8  D7FC               	bra	u3457
  2447   0020FA  2E42               	decfsz	(??_move+1)^0,f,c
  2448   0020FC  D7FA               	bra	u3457
  2449   0020FE  0000               	nop	
  2450                           
  2451                           ;dc_motor.c: 158:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2452   002100  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2453   002104  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2454   002108  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2455   00210C  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2456   002110  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2457   002114  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2458   002118  EC77  F01E         	call	_fullSpeedAhead	;wreg free
  2459                           
  2460                           ;dc_motor.c: 159:     }
  2461   00211C  EFDB  F010         	goto	l538
  2462   002120                     l4026:
  2463                           
  2464                           ; BSR set to: 0
  2465   002120  0E08               	movlw	8
  2466   002122  19B6               	xorwf	move@color& (0+255),w,b
  2467   002124  A4D8               	btfss	status,2,c
  2468   002126  EF97  F010         	goto	u3021
  2469   00212A  EF99  F010         	goto	u3020
  2470   00212E                     u3021:
  2471   00212E  EFBB  F010         	goto	l4030
  2472   002132                     u3020:
  2473   002132                     
  2474                           ; BSR set to: 0
  2475                           ;dc_motor.c: 162:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2476   002132  C0B2  F02D         	movff	move@mL,returnHome@mL
  2477   002136  C0B3  F02E         	movff	move@mL+1,returnHome@mL+1
  2478   00213A  C0B4  F02F         	movff	move@mR,returnHome@mR
  2479   00213E  C0B5  F030         	movff	move@mR+1,returnHome@mR+1
  2480   002142  C0B7  F031         	movff	move@moveSequence,returnHome@moveSequence
  2481   002146  C0B8  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2482   00214A  C0B9  F033         	movff	move@straightTime,returnHome@straightTime
  2483   00214E  C0BA  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2484   002152  C0BB  F035         	movff	move@curMove,returnHome@curMove
  2485   002156  C0BC  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2486   00215A  C0BD  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2487   00215E  C0BE  F038         	movff	move@straightRamp,returnHome@straightRamp
  2488   002162  C0BF  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2489   002166  C0C0  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2490   00216A  C0C1  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2491   00216E  EC01  F007         	call	_returnHome	;wreg free
  2492                           
  2493                           ;dc_motor.c: 163:     }
  2494   002172  EFDB  F010         	goto	l538
  2495   002176                     l4030:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;dc_motor.c: 166:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2499   002176  C0B2  F02D         	movff	move@mL,returnHome@mL
  2500   00217A  C0B3  F02E         	movff	move@mL+1,returnHome@mL+1
  2501   00217E  C0B4  F02F         	movff	move@mR,returnHome@mR
  2502   002182  C0B5  F030         	movff	move@mR+1,returnHome@mR+1
  2503   002186  C0B7  F031         	movff	move@moveSequence,returnHome@moveSequence
  2504   00218A  C0B8  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2505   00218E  C0B9  F033         	movff	move@straightTime,returnHome@straightTime
  2506   002192  C0BA  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2507   002196  C0BB  F035         	movff	move@curMove,returnHome@curMove
  2508   00219A  C0BC  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2509   00219E  C0BD  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2510   0021A2  C0BE  F038         	movff	move@straightRamp,returnHome@straightRamp
  2511   0021A6  C0BF  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2512   0021AA  C0C0  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2513   0021AE  C0C1  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2514   0021B2  EC01  F007         	call	_returnHome	;wreg free
  2515   0021B6                     l538:
  2516   0021B6  0012               	return		;funcret
  2517   0021B8                     __end_of_move:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _returnHome *****************
  2521 ;; Defined at:
  2522 ;;		line 171 in file "dc_motor.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2525 ;;		 -> main@motorL(10), 
  2526 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2527 ;;		 -> main@motorR(10), 
  2528 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  2529 ;;		 -> main@moveSequence(40), 
  2530 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  2531 ;;		 -> main@straightTime(82), 
  2532 ;;  curMove         1   52[COMRAM] unsigned char 
  2533 ;;  straightSpee    1   53[COMRAM] unsigned char 
  2534 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  2535 ;;  straightRamp    1   55[COMRAM] unsigned char 
  2536 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  2537 ;;  turnDuration    1   57[COMRAM] unsigned char 
  2538 ;;  turnRamp        1   58[COMRAM] unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  i               1   63[COMRAM] unsigned char 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2550 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2552 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2553 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2554 ;;Total ram usage:       20 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 8
  2557 ;; This function calls:
  2558 ;;		_fullSpeedAhead
  2559 ;;		_get16bitTMR0val
  2560 ;;		_resetTimer
  2561 ;;		_reverseOneSquare
  2562 ;;		_stop
  2563 ;;		_turnLeft
  2564 ;;		_turnRight
  2565 ;; This function is called by:
  2566 ;;		_move
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text2
  2571   000E02                     __ptext2:
  2572                           	callstack 0
  2573   000E02                     _returnHome:
  2574                           	callstack 21
  2575   000E02                     
  2576                           ;dc_motor.c: 171: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reverseDu
      +                          ration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned
      +                           char turnRamp);dc_motor.c: 172: {;dc_motor.c: 173:     turnLeft(mL, mR, turnSpeed, turn
      +                          Duration, turnRamp);
  2577   000E02  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2578   000E06  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2579   000E0A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2580   000E0E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2581   000E12  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2582   000E16  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2583   000E1A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2584   000E1E  EC28  F01B         	call	_turnLeft	;wreg free
  2585   000E22                     
  2586                           ;dc_motor.c: 174:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2587   000E22  0E05               	movlw	5
  2588   000E24  6E3D               	movwf	(??_returnHome+1)^0,c
  2589   000E26  0E0F               	movlw	15
  2590   000E28  6E3C               	movwf	??_returnHome^0,c
  2591   000E2A  0EF1               	movlw	241
  2592   000E2C                     u3467:
  2593   000E2C  2EE8               	decfsz	wreg,f,c
  2594   000E2E  D7FE               	bra	u3467
  2595   000E30  2E3C               	decfsz	??_returnHome^0,f,c
  2596   000E32  D7FC               	bra	u3467
  2597   000E34  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2598   000E36  D7FA               	bra	u3467
  2599   000E38  0000               	nop	
  2600   000E3A                     
  2601                           ;dc_motor.c: 175:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2602   000E3A  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2603   000E3E  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2604   000E42  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2605   000E46  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2606   000E4A  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2607   000E4E  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2608   000E52  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2609   000E56  EC28  F01B         	call	_turnLeft	;wreg free
  2610                           
  2611                           ;dc_motor.c: 176:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2612   000E5A  0E05               	movlw	5
  2613   000E5C  6E3D               	movwf	(??_returnHome+1)^0,c
  2614   000E5E  0E0F               	movlw	15
  2615   000E60  6E3C               	movwf	??_returnHome^0,c
  2616   000E62  0EF1               	movlw	241
  2617   000E64                     u3477:
  2618   000E64  2EE8               	decfsz	wreg,f,c
  2619   000E66  D7FE               	bra	u3477
  2620   000E68  2E3C               	decfsz	??_returnHome^0,f,c
  2621   000E6A  D7FC               	bra	u3477
  2622   000E6C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2623   000E6E  D7FA               	bra	u3477
  2624   000E70  0000               	nop	
  2625   000E72                     
  2626                           ;dc_motor.c: 177:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2627   000E72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2628   000E76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2629   000E7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2630   000E7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2631   000E82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2632   000E86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2633   000E8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2634   000E8E  EC28  F01B         	call	_turnLeft	;wreg free
  2635   000E92                     
  2636                           ;dc_motor.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2637   000E92  0E05               	movlw	5
  2638   000E94  6E3D               	movwf	(??_returnHome+1)^0,c
  2639   000E96  0E0F               	movlw	15
  2640   000E98  6E3C               	movwf	??_returnHome^0,c
  2641   000E9A  0EF1               	movlw	241
  2642   000E9C                     u3487:
  2643   000E9C  2EE8               	decfsz	wreg,f,c
  2644   000E9E  D7FE               	bra	u3487
  2645   000EA0  2E3C               	decfsz	??_returnHome^0,f,c
  2646   000EA2  D7FC               	bra	u3487
  2647   000EA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2648   000EA6  D7FA               	bra	u3487
  2649   000EA8  0000               	nop	
  2650                           
  2651                           ;dc_motor.c: 179:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2652   000EAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2653   000EAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2654   000EB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2655   000EB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2656   000EBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2657   000EBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2658   000EC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2659   000EC6  EC28  F01B         	call	_turnLeft	;wreg free
  2660   000ECA                     
  2661                           ;dc_motor.c: 180:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2662   000ECA  0E05               	movlw	5
  2663   000ECC  6E3D               	movwf	(??_returnHome+1)^0,c
  2664   000ECE  0E0F               	movlw	15
  2665   000ED0  6E3C               	movwf	??_returnHome^0,c
  2666   000ED2  0EF1               	movlw	241
  2667   000ED4                     u3497:
  2668   000ED4  2EE8               	decfsz	wreg,f,c
  2669   000ED6  D7FE               	bra	u3497
  2670   000ED8  2E3C               	decfsz	??_returnHome^0,f,c
  2671   000EDA  D7FC               	bra	u3497
  2672   000EDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2673   000EDE  D7FA               	bra	u3497
  2674   000EE0  0000               	nop	
  2675   000EE2                     
  2676                           ;dc_motor.c: 181:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2677   000EE2  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  2678   000EE6  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  2679   000EEA  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  2680   000EEE  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  2681   000EF2  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  2682   000EF6  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  2683   000EFA  EC77  F01E         	call	_fullSpeedAhead	;wreg free
  2684   000EFE                     
  2685                           ;dc_motor.c: 182:     resetTimer();
  2686   000EFE  EC49  F022         	call	_resetTimer	;wreg free
  2687   000F02                     l3090:
  2688   000F02  5035               	movf	returnHome@curMove^0,w,c
  2689   000F04  0D02               	mullw	2
  2690   000F06  CFF3 F03C          	movff	prodl,??_returnHome
  2691   000F0A  CFF4 F03D          	movff	prodh,??_returnHome+1
  2692   000F0E  503C               	movf	??_returnHome^0,w,c
  2693   000F10  2433               	addwf	returnHome@straightTime^0,w,c
  2694   000F12  6ED9               	movwf	fsr2l,c
  2695   000F14  503D               	movf	(??_returnHome+1)^0,w,c
  2696   000F16  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  2697   000F18  6EDA               	movwf	fsr2h,c
  2698   000F1A  EC47  F021         	call	_get16bitTMR0val	;wreg free
  2699   000F1E  50DE               	movf	postinc2,w,c
  2700   000F20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  2701   000F22  50DE               	movf	postinc2,w,c
  2702   000F24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  2703   000F26  A0D8               	btfss	status,0,c
  2704   000F28  EF98  F007         	goto	u1881
  2705   000F2C  EF9A  F007         	goto	u1880
  2706   000F30                     u1881:
  2707   000F30  EF81  F007         	goto	l3090
  2708   000F34                     u1880:
  2709   000F34                     
  2710                           ;dc_motor.c: 184:     stop(mL, mR, straightRamp);
  2711   000F34  C02D  F01F         	movff	returnHome@mL,stop@mL
  2712   000F38  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  2713   000F3C  C02F  F021         	movff	returnHome@mR,stop@mR
  2714   000F40  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  2715   000F44  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  2716   000F48  ECF3  F01D         	call	_stop	;wreg free
  2717   000F4C                     
  2718                           ;dc_motor.c: 186:     char i=curMove;
  2719   000F4C  C035  F040         	movff	returnHome@curMove,returnHome@i
  2720                           
  2721                           ;dc_motor.c: 187:     while (i>0) {
  2722   000F50  EF56  F00A         	goto	l3182
  2723   000F54                     l3096:
  2724                           
  2725                           ;dc_motor.c: 188:         i--;
  2726   000F54  0640               	decf	returnHome@i^0,f,c
  2727   000F56                     
  2728                           ;dc_motor.c: 190:         if (moveSequence[i] == 1) {
  2729   000F56  5040               	movf	returnHome@i^0,w,c
  2730   000F58  2431               	addwf	returnHome@moveSequence^0,w,c
  2731   000F5A  6ED9               	movwf	fsr2l,c
  2732   000F5C  0E00               	movlw	0
  2733   000F5E  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2734   000F60  6EDA               	movwf	fsr2h,c
  2735   000F62  04DE               	decf	postinc2,w,c
  2736   000F64  A4D8               	btfss	status,2,c
  2737   000F66  EFB7  F007         	goto	u1891
  2738   000F6A  EFB9  F007         	goto	u1890
  2739   000F6E                     u1891:
  2740   000F6E  EFF3  F007         	goto	l3106
  2741   000F72                     u1890:
  2742   000F72                     
  2743                           ;dc_motor.c: 191:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2744   000F72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2745   000F76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2746   000F7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2747   000F7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2748   000F82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2749   000F86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2750   000F8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2751   000F8E  EC28  F01B         	call	_turnLeft	;wreg free
  2752   000F92                     
  2753                           ;dc_motor.c: 192:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2754   000F92  0E05               	movlw	5
  2755   000F94  6E3D               	movwf	(??_returnHome+1)^0,c
  2756   000F96  0E0F               	movlw	15
  2757   000F98  6E3C               	movwf	??_returnHome^0,c
  2758   000F9A  0EF1               	movlw	241
  2759   000F9C                     u3507:
  2760   000F9C  2EE8               	decfsz	wreg,f,c
  2761   000F9E  D7FE               	bra	u3507
  2762   000FA0  2E3C               	decfsz	??_returnHome^0,f,c
  2763   000FA2  D7FC               	bra	u3507
  2764   000FA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2765   000FA6  D7FA               	bra	u3507
  2766   000FA8  0000               	nop	
  2767   000FAA                     
  2768                           ;dc_motor.c: 193:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2769   000FAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2770   000FAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2771   000FB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2772   000FB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2773   000FBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2774   000FBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2775   000FC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2776   000FC6  EC28  F01B         	call	_turnLeft	;wreg free
  2777                           
  2778                           ;dc_motor.c: 194:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2779   000FCA  0E05               	movlw	5
  2780   000FCC  6E3D               	movwf	(??_returnHome+1)^0,c
  2781   000FCE  0E0F               	movlw	15
  2782   000FD0  6E3C               	movwf	??_returnHome^0,c
  2783   000FD2  0EF1               	movlw	241
  2784   000FD4                     u3517:
  2785   000FD4  2EE8               	decfsz	wreg,f,c
  2786   000FD6  D7FE               	bra	u3517
  2787   000FD8  2E3C               	decfsz	??_returnHome^0,f,c
  2788   000FDA  D7FC               	bra	u3517
  2789   000FDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2790   000FDE  D7FA               	bra	u3517
  2791   000FE0  0000               	nop	
  2792                           
  2793                           ;dc_motor.c: 195:         }
  2794   000FE2  EF21  F00A         	goto	l547
  2795   000FE6                     l3106:
  2796   000FE6  5040               	movf	returnHome@i^0,w,c
  2797   000FE8  2431               	addwf	returnHome@moveSequence^0,w,c
  2798   000FEA  6ED9               	movwf	fsr2l,c
  2799   000FEC  0E00               	movlw	0
  2800   000FEE  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2801   000FF0  6EDA               	movwf	fsr2h,c
  2802   000FF2  0E02               	movlw	2
  2803   000FF4  18DE               	xorwf	postinc2,w,c
  2804   000FF6  A4D8               	btfss	status,2,c
  2805   000FF8  EF00  F008         	goto	u1901
  2806   000FFC  EF02  F008         	goto	u1900
  2807   001000                     u1901:
  2808   001000  EF3C  F008         	goto	l3114
  2809   001004                     u1900:
  2810   001004                     
  2811                           ;dc_motor.c: 198:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2812   001004  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2813   001008  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2814   00100C  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2815   001010  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2816   001014  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2817   001018  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2818   00101C  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2819   001020  EC3E  F01A         	call	_turnRight	;wreg free
  2820   001024                     
  2821                           ;dc_motor.c: 199:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2822   001024  0E05               	movlw	5
  2823   001026  6E3D               	movwf	(??_returnHome+1)^0,c
  2824   001028  0E0F               	movlw	15
  2825   00102A  6E3C               	movwf	??_returnHome^0,c
  2826   00102C  0EF1               	movlw	241
  2827   00102E                     u3527:
  2828   00102E  2EE8               	decfsz	wreg,f,c
  2829   001030  D7FE               	bra	u3527
  2830   001032  2E3C               	decfsz	??_returnHome^0,f,c
  2831   001034  D7FC               	bra	u3527
  2832   001036  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2833   001038  D7FA               	bra	u3527
  2834   00103A  0000               	nop	
  2835   00103C                     
  2836                           ;dc_motor.c: 200:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2837   00103C  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2838   001040  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2839   001044  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2840   001048  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2841   00104C  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2842   001050  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2843   001054  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2844   001058  EC3E  F01A         	call	_turnRight	;wreg free
  2845                           
  2846                           ;dc_motor.c: 201:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2847   00105C  0E05               	movlw	5
  2848   00105E  6E3D               	movwf	(??_returnHome+1)^0,c
  2849   001060  0E0F               	movlw	15
  2850   001062  6E3C               	movwf	??_returnHome^0,c
  2851   001064  0EF1               	movlw	241
  2852   001066                     u3537:
  2853   001066  2EE8               	decfsz	wreg,f,c
  2854   001068  D7FE               	bra	u3537
  2855   00106A  2E3C               	decfsz	??_returnHome^0,f,c
  2856   00106C  D7FC               	bra	u3537
  2857   00106E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2858   001070  D7FA               	bra	u3537
  2859   001072  0000               	nop	
  2860                           
  2861                           ;dc_motor.c: 202:         }
  2862   001074  EF21  F00A         	goto	l547
  2863   001078                     l3114:
  2864   001078  5040               	movf	returnHome@i^0,w,c
  2865   00107A  2431               	addwf	returnHome@moveSequence^0,w,c
  2866   00107C  6ED9               	movwf	fsr2l,c
  2867   00107E  0E00               	movlw	0
  2868   001080  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2869   001082  6EDA               	movwf	fsr2h,c
  2870   001084  0E03               	movlw	3
  2871   001086  18DE               	xorwf	postinc2,w,c
  2872   001088  A4D8               	btfss	status,2,c
  2873   00108A  EF49  F008         	goto	u1911
  2874   00108E  EF4B  F008         	goto	u1910
  2875   001092                     u1911:
  2876   001092  EFBD  F008         	goto	l3128
  2877   001096                     u1910:
  2878   001096                     
  2879                           ;dc_motor.c: 205:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2880   001096  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2881   00109A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2882   00109E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2883   0010A2  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2884   0010A6  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2885   0010AA  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2886   0010AE  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2887   0010B2  EC28  F01B         	call	_turnLeft	;wreg free
  2888   0010B6                     
  2889                           ;dc_motor.c: 206:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2890   0010B6  0E05               	movlw	5
  2891   0010B8  6E3D               	movwf	(??_returnHome+1)^0,c
  2892   0010BA  0E0F               	movlw	15
  2893   0010BC  6E3C               	movwf	??_returnHome^0,c
  2894   0010BE  0EF1               	movlw	241
  2895   0010C0                     u3547:
  2896   0010C0  2EE8               	decfsz	wreg,f,c
  2897   0010C2  D7FE               	bra	u3547
  2898   0010C4  2E3C               	decfsz	??_returnHome^0,f,c
  2899   0010C6  D7FC               	bra	u3547
  2900   0010C8  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2901   0010CA  D7FA               	bra	u3547
  2902   0010CC  0000               	nop	
  2903   0010CE                     
  2904                           ;dc_motor.c: 207:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2905   0010CE  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2906   0010D2  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2907   0010D6  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2908   0010DA  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2909   0010DE  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2910   0010E2  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2911   0010E6  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2912   0010EA  EC28  F01B         	call	_turnLeft	;wreg free
  2913                           
  2914                           ;dc_motor.c: 208:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2915   0010EE  0E05               	movlw	5
  2916   0010F0  6E3D               	movwf	(??_returnHome+1)^0,c
  2917   0010F2  0E0F               	movlw	15
  2918   0010F4  6E3C               	movwf	??_returnHome^0,c
  2919   0010F6  0EF1               	movlw	241
  2920   0010F8                     u3557:
  2921   0010F8  2EE8               	decfsz	wreg,f,c
  2922   0010FA  D7FE               	bra	u3557
  2923   0010FC  2E3C               	decfsz	??_returnHome^0,f,c
  2924   0010FE  D7FC               	bra	u3557
  2925   001100  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2926   001102  D7FA               	bra	u3557
  2927   001104  0000               	nop	
  2928   001106                     
  2929                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2930   001106  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2931   00110A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2932   00110E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2933   001112  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2934   001116  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2935   00111A  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2936   00111E  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2937   001122  EC28  F01B         	call	_turnLeft	;wreg free
  2938   001126                     
  2939                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2940   001126  0E05               	movlw	5
  2941   001128  6E3D               	movwf	(??_returnHome+1)^0,c
  2942   00112A  0E0F               	movlw	15
  2943   00112C  6E3C               	movwf	??_returnHome^0,c
  2944   00112E  0EF1               	movlw	241
  2945   001130                     u3567:
  2946   001130  2EE8               	decfsz	wreg,f,c
  2947   001132  D7FE               	bra	u3567
  2948   001134  2E3C               	decfsz	??_returnHome^0,f,c
  2949   001136  D7FC               	bra	u3567
  2950   001138  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2951   00113A  D7FA               	bra	u3567
  2952   00113C  0000               	nop	
  2953                           
  2954                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2955   00113E  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2956   001142  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2957   001146  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2958   00114A  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2959   00114E  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2960   001152  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2961   001156  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2962   00115A  EC28  F01B         	call	_turnLeft	;wreg free
  2963   00115E                     l3126:
  2964                           
  2965                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2966   00115E  0E05               	movlw	5
  2967   001160  6E3D               	movwf	(??_returnHome+1)^0,c
  2968   001162  0E0F               	movlw	15
  2969   001164  6E3C               	movwf	??_returnHome^0,c
  2970   001166  0EF1               	movlw	241
  2971   001168                     u3577:
  2972   001168  2EE8               	decfsz	wreg,f,c
  2973   00116A  D7FE               	bra	u3577
  2974   00116C  2E3C               	decfsz	??_returnHome^0,f,c
  2975   00116E  D7FC               	bra	u3577
  2976   001170  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2977   001172  D7FA               	bra	u3577
  2978   001174  0000               	nop	
  2979                           
  2980                           ;dc_motor.c: 213:         }
  2981   001176  EF21  F00A         	goto	l547
  2982   00117A                     l3128:
  2983   00117A  5040               	movf	returnHome@i^0,w,c
  2984   00117C  2431               	addwf	returnHome@moveSequence^0,w,c
  2985   00117E  6ED9               	movwf	fsr2l,c
  2986   001180  0E00               	movlw	0
  2987   001182  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2988   001184  6EDA               	movwf	fsr2h,c
  2989   001186  0E04               	movlw	4
  2990   001188  18DE               	xorwf	postinc2,w,c
  2991   00118A  A4D8               	btfss	status,2,c
  2992   00118C  EFCA  F008         	goto	u1921
  2993   001190  EFCC  F008         	goto	u1920
  2994   001194                     u1921:
  2995   001194  EF16  F009         	goto	l3140
  2996   001198                     u1920:
  2997   001198                     
  2998                           ;dc_motor.c: 216:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2999   001198  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3000   00119C  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3001   0011A0  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3002   0011A4  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3003   0011A8  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3004   0011AC  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3005   0011B0  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3006   0011B4  EC28  F01B         	call	_turnLeft	;wreg free
  3007   0011B8                     
  3008                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3009   0011B8  0E05               	movlw	5
  3010   0011BA  6E3D               	movwf	(??_returnHome+1)^0,c
  3011   0011BC  0E0F               	movlw	15
  3012   0011BE  6E3C               	movwf	??_returnHome^0,c
  3013   0011C0  0EF1               	movlw	241
  3014   0011C2                     u3587:
  3015   0011C2  2EE8               	decfsz	wreg,f,c
  3016   0011C4  D7FE               	bra	u3587
  3017   0011C6  2E3C               	decfsz	??_returnHome^0,f,c
  3018   0011C8  D7FC               	bra	u3587
  3019   0011CA  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3020   0011CC  D7FA               	bra	u3587
  3021   0011CE  0000               	nop	
  3022   0011D0                     
  3023                           ;dc_motor.c: 218:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3024   0011D0  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3025   0011D4  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3026   0011D8  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3027   0011DC  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3028   0011E0  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3029   0011E4  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3030   0011E8  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3031   0011EC  EC28  F01B         	call	_turnLeft	;wreg free
  3032                           
  3033                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3034   0011F0  0E05               	movlw	5
  3035   0011F2  6E3D               	movwf	(??_returnHome+1)^0,c
  3036   0011F4  0E0F               	movlw	15
  3037   0011F6  6E3C               	movwf	??_returnHome^0,c
  3038   0011F8  0EF1               	movlw	241
  3039   0011FA                     u3597:
  3040   0011FA  2EE8               	decfsz	wreg,f,c
  3041   0011FC  D7FE               	bra	u3597
  3042   0011FE  2E3C               	decfsz	??_returnHome^0,f,c
  3043   001200  D7FC               	bra	u3597
  3044   001202  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3045   001204  D7FA               	bra	u3597
  3046   001206  0000               	nop	
  3047   001208                     
  3048                           ;dc_motor.c: 220:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3049   001208  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  3050   00120C  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  3051   001210  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  3052   001214  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  3053   001218  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  3054   00121C  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  3055   001220  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  3056   001224  EC4B  F019         	call	_reverseOneSquare	;wreg free
  3057   001228  EFAF  F008         	goto	l3126
  3058   00122C                     l3140:
  3059   00122C  5040               	movf	returnHome@i^0,w,c
  3060   00122E  2431               	addwf	returnHome@moveSequence^0,w,c
  3061   001230  6ED9               	movwf	fsr2l,c
  3062   001232  0E00               	movlw	0
  3063   001234  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3064   001236  6EDA               	movwf	fsr2h,c
  3065   001238  0E05               	movlw	5
  3066   00123A  18DE               	xorwf	postinc2,w,c
  3067   00123C  A4D8               	btfss	status,2,c
  3068   00123E  EF23  F009         	goto	u1931
  3069   001242  EF25  F009         	goto	u1930
  3070   001246                     u1931:
  3071   001246  EF6F  F009         	goto	l3152
  3072   00124A                     u1930:
  3073   00124A                     
  3074                           ;dc_motor.c: 225:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3075   00124A  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3076   00124E  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3077   001252  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3078   001256  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3079   00125A  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3080   00125E  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3081   001262  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3082   001266  EC3E  F01A         	call	_turnRight	;wreg free
  3083   00126A                     
  3084                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3085   00126A  0E05               	movlw	5
  3086   00126C  6E3D               	movwf	(??_returnHome+1)^0,c
  3087   00126E  0E0F               	movlw	15
  3088   001270  6E3C               	movwf	??_returnHome^0,c
  3089   001272  0EF1               	movlw	241
  3090   001274                     u3607:
  3091   001274  2EE8               	decfsz	wreg,f,c
  3092   001276  D7FE               	bra	u3607
  3093   001278  2E3C               	decfsz	??_returnHome^0,f,c
  3094   00127A  D7FC               	bra	u3607
  3095   00127C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3096   00127E  D7FA               	bra	u3607
  3097   001280  0000               	nop	
  3098   001282                     
  3099                           ;dc_motor.c: 227:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3100   001282  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3101   001286  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3102   00128A  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3103   00128E  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3104   001292  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3105   001296  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3106   00129A  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3107   00129E  EC3E  F01A         	call	_turnRight	;wreg free
  3108                           
  3109                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3110   0012A2  0E05               	movlw	5
  3111   0012A4  6E3D               	movwf	(??_returnHome+1)^0,c
  3112   0012A6  0E0F               	movlw	15
  3113   0012A8  6E3C               	movwf	??_returnHome^0,c
  3114   0012AA  0EF1               	movlw	241
  3115   0012AC                     u3617:
  3116   0012AC  2EE8               	decfsz	wreg,f,c
  3117   0012AE  D7FE               	bra	u3617
  3118   0012B0  2E3C               	decfsz	??_returnHome^0,f,c
  3119   0012B2  D7FC               	bra	u3617
  3120   0012B4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3121   0012B6  D7FA               	bra	u3617
  3122   0012B8  0000               	nop	
  3123   0012BA                     
  3124                           ;dc_motor.c: 229:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3125   0012BA  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  3126   0012BE  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  3127   0012C2  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  3128   0012C6  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  3129   0012CA  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  3130   0012CE  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  3131   0012D2  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  3132   0012D6  EC4B  F019         	call	_reverseOneSquare	;wreg free
  3133   0012DA  EFAF  F008         	goto	l3126
  3134   0012DE                     l3152:
  3135   0012DE  5040               	movf	returnHome@i^0,w,c
  3136   0012E0  2431               	addwf	returnHome@moveSequence^0,w,c
  3137   0012E2  6ED9               	movwf	fsr2l,c
  3138   0012E4  0E00               	movlw	0
  3139   0012E6  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3140   0012E8  6EDA               	movwf	fsr2h,c
  3141   0012EA  0E06               	movlw	6
  3142   0012EC  18DE               	xorwf	postinc2,w,c
  3143   0012EE  A4D8               	btfss	status,2,c
  3144   0012F0  EF7C  F009         	goto	u1941
  3145   0012F4  EF7E  F009         	goto	u1940
  3146   0012F8                     u1941:
  3147   0012F8  EFC8  F009         	goto	l3164
  3148   0012FC                     u1940:
  3149   0012FC                     
  3150                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3151   0012FC  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3152   001300  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3153   001304  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3154   001308  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3155   00130C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3156   001310  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3157   001314  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3158   001318  EC28  F01B         	call	_turnLeft	;wreg free
  3159   00131C                     
  3160                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3161   00131C  0E05               	movlw	5
  3162   00131E  6E3D               	movwf	(??_returnHome+1)^0,c
  3163   001320  0E0F               	movlw	15
  3164   001322  6E3C               	movwf	??_returnHome^0,c
  3165   001324  0EF1               	movlw	241
  3166   001326                     u3627:
  3167   001326  2EE8               	decfsz	wreg,f,c
  3168   001328  D7FE               	bra	u3627
  3169   00132A  2E3C               	decfsz	??_returnHome^0,f,c
  3170   00132C  D7FC               	bra	u3627
  3171   00132E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3172   001330  D7FA               	bra	u3627
  3173   001332  0000               	nop	
  3174   001334                     
  3175                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3176   001334  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3177   001338  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3178   00133C  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3179   001340  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3180   001344  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3181   001348  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3182   00134C  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3183   001350  EC28  F01B         	call	_turnLeft	;wreg free
  3184                           
  3185                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3186   001354  0E05               	movlw	5
  3187   001356  6E3D               	movwf	(??_returnHome+1)^0,c
  3188   001358  0E0F               	movlw	15
  3189   00135A  6E3C               	movwf	??_returnHome^0,c
  3190   00135C  0EF1               	movlw	241
  3191   00135E                     u3637:
  3192   00135E  2EE8               	decfsz	wreg,f,c
  3193   001360  D7FE               	bra	u3637
  3194   001362  2E3C               	decfsz	??_returnHome^0,f,c
  3195   001364  D7FC               	bra	u3637
  3196   001366  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3197   001368  D7FA               	bra	u3637
  3198   00136A  0000               	nop	
  3199   00136C                     
  3200                           ;dc_motor.c: 238:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3201   00136C  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3202   001370  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3203   001374  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3204   001378  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3205   00137C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3206   001380  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3207   001384  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3208   001388  EC28  F01B         	call	_turnLeft	;wreg free
  3209   00138C  EFAF  F008         	goto	l3126
  3210   001390                     l3164:
  3211   001390  5040               	movf	returnHome@i^0,w,c
  3212   001392  2431               	addwf	returnHome@moveSequence^0,w,c
  3213   001394  6ED9               	movwf	fsr2l,c
  3214   001396  0E00               	movlw	0
  3215   001398  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3216   00139A  6EDA               	movwf	fsr2h,c
  3217   00139C  0E07               	movlw	7
  3218   00139E  18DE               	xorwf	postinc2,w,c
  3219   0013A0  A4D8               	btfss	status,2,c
  3220   0013A2  EFD5  F009         	goto	u1951
  3221   0013A6  EFD7  F009         	goto	u1950
  3222   0013AA                     u1951:
  3223   0013AA  EF21  F00A         	goto	l553
  3224   0013AE                     u1950:
  3225   0013AE                     
  3226                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3227   0013AE  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3228   0013B2  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3229   0013B6  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3230   0013BA  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3231   0013BE  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3232   0013C2  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3233   0013C6  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3234   0013CA  EC3E  F01A         	call	_turnRight	;wreg free
  3235   0013CE                     
  3236                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3237   0013CE  0E05               	movlw	5
  3238   0013D0  6E3D               	movwf	(??_returnHome+1)^0,c
  3239   0013D2  0E0F               	movlw	15
  3240   0013D4  6E3C               	movwf	??_returnHome^0,c
  3241   0013D6  0EF1               	movlw	241
  3242   0013D8                     u3647:
  3243   0013D8  2EE8               	decfsz	wreg,f,c
  3244   0013DA  D7FE               	bra	u3647
  3245   0013DC  2E3C               	decfsz	??_returnHome^0,f,c
  3246   0013DE  D7FC               	bra	u3647
  3247   0013E0  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3248   0013E2  D7FA               	bra	u3647
  3249   0013E4  0000               	nop	
  3250   0013E6                     
  3251                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3252   0013E6  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3253   0013EA  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3254   0013EE  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3255   0013F2  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3256   0013F6  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3257   0013FA  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3258   0013FE  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3259   001402  EC3E  F01A         	call	_turnRight	;wreg free
  3260                           
  3261                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3262   001406  0E05               	movlw	5
  3263   001408  6E3D               	movwf	(??_returnHome+1)^0,c
  3264   00140A  0E0F               	movlw	15
  3265   00140C  6E3C               	movwf	??_returnHome^0,c
  3266   00140E  0EF1               	movlw	241
  3267   001410                     u3657:
  3268   001410  2EE8               	decfsz	wreg,f,c
  3269   001412  D7FE               	bra	u3657
  3270   001414  2E3C               	decfsz	??_returnHome^0,f,c
  3271   001416  D7FC               	bra	u3657
  3272   001418  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3273   00141A  D7FA               	bra	u3657
  3274   00141C  0000               	nop	
  3275   00141E                     
  3276                           ;dc_motor.c: 247:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3277   00141E  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3278   001422  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3279   001426  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3280   00142A  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3281   00142E  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3282   001432  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3283   001436  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3284   00143A  EC3E  F01A         	call	_turnRight	;wreg free
  3285   00143E  EFAF  F008         	goto	l3126
  3286   001442                     l553:
  3287   001442                     l547:
  3288                           
  3289                           ;dc_motor.c: 251:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3290   001442  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  3291   001446  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  3292   00144A  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  3293   00144E  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  3294   001452  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3295   001456  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  3296   00145A  EC77  F01E         	call	_fullSpeedAhead	;wreg free
  3297   00145E                     
  3298                           ;dc_motor.c: 252:         resetTimer();
  3299   00145E  EC49  F022         	call	_resetTimer	;wreg free
  3300   001462                     l3178:
  3301   001462  5040               	movf	returnHome@i^0,w,c
  3302   001464  0D02               	mullw	2
  3303   001466  CFF3 F03C          	movff	prodl,??_returnHome
  3304   00146A  CFF4 F03D          	movff	prodh,??_returnHome+1
  3305   00146E  503C               	movf	??_returnHome^0,w,c
  3306   001470  2433               	addwf	returnHome@straightTime^0,w,c
  3307   001472  6ED9               	movwf	fsr2l,c
  3308   001474  503D               	movf	(??_returnHome+1)^0,w,c
  3309   001476  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  3310   001478  6EDA               	movwf	fsr2h,c
  3311   00147A  EC47  F021         	call	_get16bitTMR0val	;wreg free
  3312   00147E  50DE               	movf	postinc2,w,c
  3313   001480  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  3314   001482  50DE               	movf	postinc2,w,c
  3315   001484  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  3316   001486  A0D8               	btfss	status,0,c
  3317   001488  EF48  F00A         	goto	u1961
  3318   00148C  EF4A  F00A         	goto	u1960
  3319   001490                     u1961:
  3320   001490  EF31  F00A         	goto	l3178
  3321   001494                     u1960:
  3322   001494                     
  3323                           ;dc_motor.c: 254:         stop(mL, mR, straightRamp);
  3324   001494  C02D  F01F         	movff	returnHome@mL,stop@mL
  3325   001498  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  3326   00149C  C02F  F021         	movff	returnHome@mR,stop@mR
  3327   0014A0  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  3328   0014A4  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  3329   0014A8  ECF3  F01D         	call	_stop	;wreg free
  3330   0014AC                     l3182:
  3331                           
  3332                           ;dc_motor.c: 187:     while (i>0) {
  3333   0014AC  5040               	movf	returnHome@i^0,w,c
  3334   0014AE  A4D8               	btfss	status,2,c
  3335   0014B0  EF5C  F00A         	goto	u1971
  3336   0014B4  EF5E  F00A         	goto	u1970
  3337   0014B8                     u1971:
  3338   0014B8  EFAA  F007         	goto	l3096
  3339   0014BC                     u1970:
  3340   0014BC  0012               	return		;funcret
  3341   0014BE                     __end_of_returnHome:
  3342                           	callstack 0
  3343                           
  3344 ;; *************** function _lostReturnHome *****************
  3345 ;; Defined at:
  3346 ;;		line 259 in file "dc_motor.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  3349 ;;		 -> main@motorL(10), 
  3350 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  3351 ;;		 -> main@motorR(10), 
  3352 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  3353 ;;		 -> main@moveSequence(40), 
  3354 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  3355 ;;		 -> main@straightTime(82), 
  3356 ;;  curMove         1   52[COMRAM] unsigned char 
  3357 ;;  straightSpee    1   53[COMRAM] unsigned char 
  3358 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  3359 ;;  straightRamp    1   55[COMRAM] unsigned char 
  3360 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  3361 ;;  turnDuration    1   57[COMRAM] unsigned char 
  3362 ;;  turnRamp        1   58[COMRAM] unsigned char 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  i               1   63[COMRAM] unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3374 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;Total ram usage:       20 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; Hardware stack levels required when called: 8
  3381 ;; This function calls:
  3382 ;;		_fullSpeedAhead
  3383 ;;		_get16bitTMR0val
  3384 ;;		_resetTimer
  3385 ;;		_reverseOneSquare
  3386 ;;		_stop
  3387 ;;		_turnLeft
  3388 ;;		_turnRight
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text3
  3395   0014BE                     __ptext3:
  3396                           	callstack 0
  3397   0014BE                     _lostReturnHome:
  3398                           	callstack 22
  3399   0014BE                     
  3400                           ;dc_motor.c: 259: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 260: {;dc_motor.c: 261:     LATDbits.LATD7 = LATHbits.LA
      +                          TH3 = 1;
  3401   0014BE  8680               	bsf	128,3,c	;volatile
  3402   0014C0  8E7C               	bsf	124,7,c	;volatile
  3403   0014C2                     
  3404                           ;dc_motor.c: 262:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3405   0014C2  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3406   0014C6  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3407   0014CA  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3408   0014CE  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3409   0014D2  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3410   0014D6  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3411   0014DA  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3412   0014DE  EC28  F01B         	call	_turnLeft	;wreg free
  3413   0014E2                     
  3414                           ;dc_motor.c: 263:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3415   0014E2  0E05               	movlw	5
  3416   0014E4  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3417   0014E6  0E0F               	movlw	15
  3418   0014E8  6E3C               	movwf	??_lostReturnHome^0,c
  3419   0014EA  0EF1               	movlw	241
  3420   0014EC                     u3667:
  3421   0014EC  2EE8               	decfsz	wreg,f,c
  3422   0014EE  D7FE               	bra	u3667
  3423   0014F0  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3424   0014F2  D7FC               	bra	u3667
  3425   0014F4  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3426   0014F6  D7FA               	bra	u3667
  3427   0014F8  0000               	nop	
  3428   0014FA                     
  3429                           ;dc_motor.c: 264:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3430   0014FA  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3431   0014FE  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3432   001502  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3433   001506  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3434   00150A  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3435   00150E  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3436   001512  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3437   001516  EC28  F01B         	call	_turnLeft	;wreg free
  3438                           
  3439                           ;dc_motor.c: 265:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3440   00151A  0E05               	movlw	5
  3441   00151C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3442   00151E  0E0F               	movlw	15
  3443   001520  6E3C               	movwf	??_lostReturnHome^0,c
  3444   001522  0EF1               	movlw	241
  3445   001524                     u3677:
  3446   001524  2EE8               	decfsz	wreg,f,c
  3447   001526  D7FE               	bra	u3677
  3448   001528  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3449   00152A  D7FC               	bra	u3677
  3450   00152C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3451   00152E  D7FA               	bra	u3677
  3452   001530  0000               	nop	
  3453   001532                     
  3454                           ;dc_motor.c: 266:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3455   001532  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3456   001536  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3457   00153A  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3458   00153E  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3459   001542  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3460   001546  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3461   00154A  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3462   00154E  EC28  F01B         	call	_turnLeft	;wreg free
  3463   001552                     
  3464                           ;dc_motor.c: 267:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3465   001552  0E05               	movlw	5
  3466   001554  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3467   001556  0E0F               	movlw	15
  3468   001558  6E3C               	movwf	??_lostReturnHome^0,c
  3469   00155A  0EF1               	movlw	241
  3470   00155C                     u3687:
  3471   00155C  2EE8               	decfsz	wreg,f,c
  3472   00155E  D7FE               	bra	u3687
  3473   001560  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3474   001562  D7FC               	bra	u3687
  3475   001564  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3476   001566  D7FA               	bra	u3687
  3477   001568  0000               	nop	
  3478                           
  3479                           ;dc_motor.c: 268:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3480   00156A  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3481   00156E  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3482   001572  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3483   001576  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3484   00157A  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3485   00157E  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3486   001582  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3487   001586  EC28  F01B         	call	_turnLeft	;wreg free
  3488   00158A                     
  3489                           ;dc_motor.c: 269:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3490   00158A  0E05               	movlw	5
  3491   00158C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3492   00158E  0E0F               	movlw	15
  3493   001590  6E3C               	movwf	??_lostReturnHome^0,c
  3494   001592  0EF1               	movlw	241
  3495   001594                     u3697:
  3496   001594  2EE8               	decfsz	wreg,f,c
  3497   001596  D7FE               	bra	u3697
  3498   001598  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3499   00159A  D7FC               	bra	u3697
  3500   00159C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3501   00159E  D7FA               	bra	u3697
  3502   0015A0  0000               	nop	
  3503   0015A2                     
  3504                           ;dc_motor.c: 270:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3505   0015A2  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  3506   0015A6  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  3507   0015AA  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  3508   0015AE  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  3509   0015B2  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3510   0015B6  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  3511   0015BA  EC77  F01E         	call	_fullSpeedAhead	;wreg free
  3512   0015BE                     
  3513                           ;dc_motor.c: 271:     resetTimer();
  3514   0015BE  EC49  F022         	call	_resetTimer	;wreg free
  3515   0015C2                     
  3516                           ;dc_motor.c: 272:     lost = 0;
  3517   0015C2  0E00               	movlw	0
  3518   0015C4  0100               	movlb	0	; () banked
  3519   0015C6  6FB0               	movwf	_lost& (0+255),b
  3520   0015C8                     l3624:
  3521                           
  3522                           ; BSR set to: 0
  3523   0015C8  51B0               	movf	_lost& (0+255),w,b
  3524   0015CA  B4D8               	btfsc	status,2,c
  3525   0015CC  EFEA  F00A         	goto	u2521
  3526   0015D0  EFEC  F00A         	goto	u2520
  3527   0015D4                     u2521:
  3528   0015D4  EFE4  F00A         	goto	l3624
  3529   0015D8                     u2520:
  3530   0015D8                     
  3531                           ; BSR set to: 0
  3532                           ;dc_motor.c: 274:     stop(mL, mR, straightRamp);
  3533   0015D8  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  3534   0015DC  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  3535   0015E0  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  3536   0015E4  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  3537   0015E8  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  3538   0015EC  ECF3  F01D         	call	_stop	;wreg free
  3539   0015F0                     
  3540                           ;dc_motor.c: 276:     char i=curMove;
  3541   0015F0  C035  F040         	movff	lostReturnHome@curMove,lostReturnHome@i
  3542                           
  3543                           ;dc_motor.c: 277:     while (i>0) {
  3544   0015F4  EFA8  F00D         	goto	l3716
  3545   0015F8                     l3630:
  3546                           
  3547                           ;dc_motor.c: 278:         i--;
  3548   0015F8  0640               	decf	lostReturnHome@i^0,f,c
  3549   0015FA                     
  3550                           ;dc_motor.c: 280:         if (moveSequence[i] == 1) {
  3551   0015FA  5040               	movf	lostReturnHome@i^0,w,c
  3552   0015FC  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3553   0015FE  6ED9               	movwf	fsr2l,c
  3554   001600  0E00               	movlw	0
  3555   001602  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3556   001604  6EDA               	movwf	fsr2h,c
  3557   001606  04DE               	decf	postinc2,w,c
  3558   001608  A4D8               	btfss	status,2,c
  3559   00160A  EF09  F00B         	goto	u2531
  3560   00160E  EF0B  F00B         	goto	u2530
  3561   001612                     u2531:
  3562   001612  EF45  F00B         	goto	l3640
  3563   001616                     u2530:
  3564   001616                     
  3565                           ;dc_motor.c: 281:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3566   001616  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3567   00161A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3568   00161E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3569   001622  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3570   001626  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3571   00162A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3572   00162E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3573   001632  EC28  F01B         	call	_turnLeft	;wreg free
  3574   001636                     
  3575                           ;dc_motor.c: 282:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3576   001636  0E05               	movlw	5
  3577   001638  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3578   00163A  0E0F               	movlw	15
  3579   00163C  6E3C               	movwf	??_lostReturnHome^0,c
  3580   00163E  0EF1               	movlw	241
  3581   001640                     u3707:
  3582   001640  2EE8               	decfsz	wreg,f,c
  3583   001642  D7FE               	bra	u3707
  3584   001644  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3585   001646  D7FC               	bra	u3707
  3586   001648  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3587   00164A  D7FA               	bra	u3707
  3588   00164C  0000               	nop	
  3589   00164E                     
  3590                           ;dc_motor.c: 283:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3591   00164E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3592   001652  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3593   001656  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3594   00165A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3595   00165E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3596   001662  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3597   001666  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3598   00166A  EC28  F01B         	call	_turnLeft	;wreg free
  3599                           
  3600                           ;dc_motor.c: 284:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3601   00166E  0E05               	movlw	5
  3602   001670  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3603   001672  0E0F               	movlw	15
  3604   001674  6E3C               	movwf	??_lostReturnHome^0,c
  3605   001676  0EF1               	movlw	241
  3606   001678                     u3717:
  3607   001678  2EE8               	decfsz	wreg,f,c
  3608   00167A  D7FE               	bra	u3717
  3609   00167C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3610   00167E  D7FC               	bra	u3717
  3611   001680  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3612   001682  D7FA               	bra	u3717
  3613   001684  0000               	nop	
  3614                           
  3615                           ;dc_motor.c: 285:         }
  3616   001686  EF73  F00D         	goto	l572
  3617   00168A                     l3640:
  3618   00168A  5040               	movf	lostReturnHome@i^0,w,c
  3619   00168C  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3620   00168E  6ED9               	movwf	fsr2l,c
  3621   001690  0E00               	movlw	0
  3622   001692  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3623   001694  6EDA               	movwf	fsr2h,c
  3624   001696  0E02               	movlw	2
  3625   001698  18DE               	xorwf	postinc2,w,c
  3626   00169A  A4D8               	btfss	status,2,c
  3627   00169C  EF52  F00B         	goto	u2541
  3628   0016A0  EF54  F00B         	goto	u2540
  3629   0016A4                     u2541:
  3630   0016A4  EF8E  F00B         	goto	l3648
  3631   0016A8                     u2540:
  3632   0016A8                     
  3633                           ;dc_motor.c: 288:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3634   0016A8  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3635   0016AC  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3636   0016B0  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3637   0016B4  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3638   0016B8  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3639   0016BC  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3640   0016C0  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3641   0016C4  EC3E  F01A         	call	_turnRight	;wreg free
  3642   0016C8                     
  3643                           ;dc_motor.c: 289:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3644   0016C8  0E05               	movlw	5
  3645   0016CA  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3646   0016CC  0E0F               	movlw	15
  3647   0016CE  6E3C               	movwf	??_lostReturnHome^0,c
  3648   0016D0  0EF1               	movlw	241
  3649   0016D2                     u3727:
  3650   0016D2  2EE8               	decfsz	wreg,f,c
  3651   0016D4  D7FE               	bra	u3727
  3652   0016D6  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3653   0016D8  D7FC               	bra	u3727
  3654   0016DA  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3655   0016DC  D7FA               	bra	u3727
  3656   0016DE  0000               	nop	
  3657   0016E0                     
  3658                           ;dc_motor.c: 290:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3659   0016E0  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3660   0016E4  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3661   0016E8  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3662   0016EC  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3663   0016F0  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3664   0016F4  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3665   0016F8  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3666   0016FC  EC3E  F01A         	call	_turnRight	;wreg free
  3667                           
  3668                           ;dc_motor.c: 291:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3669   001700  0E05               	movlw	5
  3670   001702  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3671   001704  0E0F               	movlw	15
  3672   001706  6E3C               	movwf	??_lostReturnHome^0,c
  3673   001708  0EF1               	movlw	241
  3674   00170A                     u3737:
  3675   00170A  2EE8               	decfsz	wreg,f,c
  3676   00170C  D7FE               	bra	u3737
  3677   00170E  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3678   001710  D7FC               	bra	u3737
  3679   001712  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3680   001714  D7FA               	bra	u3737
  3681   001716  0000               	nop	
  3682                           
  3683                           ;dc_motor.c: 292:         }
  3684   001718  EF73  F00D         	goto	l572
  3685   00171C                     l3648:
  3686   00171C  5040               	movf	lostReturnHome@i^0,w,c
  3687   00171E  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3688   001720  6ED9               	movwf	fsr2l,c
  3689   001722  0E00               	movlw	0
  3690   001724  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3691   001726  6EDA               	movwf	fsr2h,c
  3692   001728  0E03               	movlw	3
  3693   00172A  18DE               	xorwf	postinc2,w,c
  3694   00172C  A4D8               	btfss	status,2,c
  3695   00172E  EF9B  F00B         	goto	u2551
  3696   001732  EF9D  F00B         	goto	u2550
  3697   001736                     u2551:
  3698   001736  EF0F  F00C         	goto	l3662
  3699   00173A                     u2550:
  3700   00173A                     
  3701                           ;dc_motor.c: 295:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3702   00173A  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3703   00173E  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3704   001742  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3705   001746  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3706   00174A  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3707   00174E  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3708   001752  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3709   001756  EC28  F01B         	call	_turnLeft	;wreg free
  3710   00175A                     
  3711                           ;dc_motor.c: 296:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3712   00175A  0E05               	movlw	5
  3713   00175C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3714   00175E  0E0F               	movlw	15
  3715   001760  6E3C               	movwf	??_lostReturnHome^0,c
  3716   001762  0EF1               	movlw	241
  3717   001764                     u3747:
  3718   001764  2EE8               	decfsz	wreg,f,c
  3719   001766  D7FE               	bra	u3747
  3720   001768  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3721   00176A  D7FC               	bra	u3747
  3722   00176C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3723   00176E  D7FA               	bra	u3747
  3724   001770  0000               	nop	
  3725   001772                     
  3726                           ;dc_motor.c: 297:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3727   001772  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3728   001776  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3729   00177A  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3730   00177E  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3731   001782  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3732   001786  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3733   00178A  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3734   00178E  EC28  F01B         	call	_turnLeft	;wreg free
  3735                           
  3736                           ;dc_motor.c: 298:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3737   001792  0E05               	movlw	5
  3738   001794  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3739   001796  0E0F               	movlw	15
  3740   001798  6E3C               	movwf	??_lostReturnHome^0,c
  3741   00179A  0EF1               	movlw	241
  3742   00179C                     u3757:
  3743   00179C  2EE8               	decfsz	wreg,f,c
  3744   00179E  D7FE               	bra	u3757
  3745   0017A0  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3746   0017A2  D7FC               	bra	u3757
  3747   0017A4  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3748   0017A6  D7FA               	bra	u3757
  3749   0017A8  0000               	nop	
  3750   0017AA                     
  3751                           ;dc_motor.c: 299:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3752   0017AA  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3753   0017AE  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3754   0017B2  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3755   0017B6  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3756   0017BA  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3757   0017BE  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3758   0017C2  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3759   0017C6  EC28  F01B         	call	_turnLeft	;wreg free
  3760   0017CA                     
  3761                           ;dc_motor.c: 300:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3762   0017CA  0E05               	movlw	5
  3763   0017CC  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3764   0017CE  0E0F               	movlw	15
  3765   0017D0  6E3C               	movwf	??_lostReturnHome^0,c
  3766   0017D2  0EF1               	movlw	241
  3767   0017D4                     u3767:
  3768   0017D4  2EE8               	decfsz	wreg,f,c
  3769   0017D6  D7FE               	bra	u3767
  3770   0017D8  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3771   0017DA  D7FC               	bra	u3767
  3772   0017DC  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3773   0017DE  D7FA               	bra	u3767
  3774   0017E0  0000               	nop	
  3775                           
  3776                           ;dc_motor.c: 301:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3777   0017E2  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3778   0017E6  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3779   0017EA  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3780   0017EE  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3781   0017F2  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3782   0017F6  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3783   0017FA  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3784   0017FE  EC28  F01B         	call	_turnLeft	;wreg free
  3785   001802                     l3660:
  3786                           
  3787                           ;dc_motor.c: 302:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3788   001802  0E05               	movlw	5
  3789   001804  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3790   001806  0E0F               	movlw	15
  3791   001808  6E3C               	movwf	??_lostReturnHome^0,c
  3792   00180A  0EF1               	movlw	241
  3793   00180C                     u3777:
  3794   00180C  2EE8               	decfsz	wreg,f,c
  3795   00180E  D7FE               	bra	u3777
  3796   001810  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3797   001812  D7FC               	bra	u3777
  3798   001814  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3799   001816  D7FA               	bra	u3777
  3800   001818  0000               	nop	
  3801                           
  3802                           ;dc_motor.c: 303:         }
  3803   00181A  EF73  F00D         	goto	l572
  3804   00181E                     l3662:
  3805   00181E  5040               	movf	lostReturnHome@i^0,w,c
  3806   001820  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3807   001822  6ED9               	movwf	fsr2l,c
  3808   001824  0E00               	movlw	0
  3809   001826  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3810   001828  6EDA               	movwf	fsr2h,c
  3811   00182A  0E04               	movlw	4
  3812   00182C  18DE               	xorwf	postinc2,w,c
  3813   00182E  A4D8               	btfss	status,2,c
  3814   001830  EF1C  F00C         	goto	u2561
  3815   001834  EF1E  F00C         	goto	u2560
  3816   001838                     u2561:
  3817   001838  EF68  F00C         	goto	l3674
  3818   00183C                     u2560:
  3819   00183C                     
  3820                           ;dc_motor.c: 306:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3821   00183C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3822   001840  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3823   001844  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3824   001848  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3825   00184C  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3826   001850  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3827   001854  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3828   001858  EC28  F01B         	call	_turnLeft	;wreg free
  3829   00185C                     
  3830                           ;dc_motor.c: 307:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3831   00185C  0E05               	movlw	5
  3832   00185E  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3833   001860  0E0F               	movlw	15
  3834   001862  6E3C               	movwf	??_lostReturnHome^0,c
  3835   001864  0EF1               	movlw	241
  3836   001866                     u3787:
  3837   001866  2EE8               	decfsz	wreg,f,c
  3838   001868  D7FE               	bra	u3787
  3839   00186A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3840   00186C  D7FC               	bra	u3787
  3841   00186E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3842   001870  D7FA               	bra	u3787
  3843   001872  0000               	nop	
  3844   001874                     
  3845                           ;dc_motor.c: 308:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3846   001874  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3847   001878  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3848   00187C  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3849   001880  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3850   001884  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3851   001888  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3852   00188C  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3853   001890  EC28  F01B         	call	_turnLeft	;wreg free
  3854                           
  3855                           ;dc_motor.c: 309:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3856   001894  0E05               	movlw	5
  3857   001896  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3858   001898  0E0F               	movlw	15
  3859   00189A  6E3C               	movwf	??_lostReturnHome^0,c
  3860   00189C  0EF1               	movlw	241
  3861   00189E                     u3797:
  3862   00189E  2EE8               	decfsz	wreg,f,c
  3863   0018A0  D7FE               	bra	u3797
  3864   0018A2  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3865   0018A4  D7FC               	bra	u3797
  3866   0018A6  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3867   0018A8  D7FA               	bra	u3797
  3868   0018AA  0000               	nop	
  3869   0018AC                     
  3870                           ;dc_motor.c: 310:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3871   0018AC  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3872   0018B0  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3873   0018B4  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3874   0018B8  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3875   0018BC  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3876   0018C0  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3877   0018C4  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3878   0018C8  EC4B  F019         	call	_reverseOneSquare	;wreg free
  3879   0018CC  EF01  F00C         	goto	l3660
  3880   0018D0                     l3674:
  3881   0018D0  5040               	movf	lostReturnHome@i^0,w,c
  3882   0018D2  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3883   0018D4  6ED9               	movwf	fsr2l,c
  3884   0018D6  0E00               	movlw	0
  3885   0018D8  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3886   0018DA  6EDA               	movwf	fsr2h,c
  3887   0018DC  0E05               	movlw	5
  3888   0018DE  18DE               	xorwf	postinc2,w,c
  3889   0018E0  A4D8               	btfss	status,2,c
  3890   0018E2  EF75  F00C         	goto	u2571
  3891   0018E6  EF77  F00C         	goto	u2570
  3892   0018EA                     u2571:
  3893   0018EA  EFC1  F00C         	goto	l3686
  3894   0018EE                     u2570:
  3895   0018EE                     
  3896                           ;dc_motor.c: 315:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3897   0018EE  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3898   0018F2  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3899   0018F6  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3900   0018FA  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3901   0018FE  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3902   001902  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3903   001906  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3904   00190A  EC3E  F01A         	call	_turnRight	;wreg free
  3905   00190E                     
  3906                           ;dc_motor.c: 316:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3907   00190E  0E05               	movlw	5
  3908   001910  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3909   001912  0E0F               	movlw	15
  3910   001914  6E3C               	movwf	??_lostReturnHome^0,c
  3911   001916  0EF1               	movlw	241
  3912   001918                     u3807:
  3913   001918  2EE8               	decfsz	wreg,f,c
  3914   00191A  D7FE               	bra	u3807
  3915   00191C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3916   00191E  D7FC               	bra	u3807
  3917   001920  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3918   001922  D7FA               	bra	u3807
  3919   001924  0000               	nop	
  3920   001926                     
  3921                           ;dc_motor.c: 317:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3922   001926  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3923   00192A  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3924   00192E  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3925   001932  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3926   001936  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3927   00193A  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3928   00193E  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3929   001942  EC3E  F01A         	call	_turnRight	;wreg free
  3930                           
  3931                           ;dc_motor.c: 318:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3932   001946  0E05               	movlw	5
  3933   001948  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3934   00194A  0E0F               	movlw	15
  3935   00194C  6E3C               	movwf	??_lostReturnHome^0,c
  3936   00194E  0EF1               	movlw	241
  3937   001950                     u3817:
  3938   001950  2EE8               	decfsz	wreg,f,c
  3939   001952  D7FE               	bra	u3817
  3940   001954  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3941   001956  D7FC               	bra	u3817
  3942   001958  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3943   00195A  D7FA               	bra	u3817
  3944   00195C  0000               	nop	
  3945   00195E                     
  3946                           ;dc_motor.c: 319:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3947   00195E  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3948   001962  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3949   001966  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3950   00196A  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3951   00196E  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3952   001972  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3953   001976  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3954   00197A  EC4B  F019         	call	_reverseOneSquare	;wreg free
  3955   00197E  EF01  F00C         	goto	l3660
  3956   001982                     l3686:
  3957   001982  5040               	movf	lostReturnHome@i^0,w,c
  3958   001984  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3959   001986  6ED9               	movwf	fsr2l,c
  3960   001988  0E00               	movlw	0
  3961   00198A  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3962   00198C  6EDA               	movwf	fsr2h,c
  3963   00198E  0E06               	movlw	6
  3964   001990  18DE               	xorwf	postinc2,w,c
  3965   001992  A4D8               	btfss	status,2,c
  3966   001994  EFCE  F00C         	goto	u2581
  3967   001998  EFD0  F00C         	goto	u2580
  3968   00199C                     u2581:
  3969   00199C  EF1A  F00D         	goto	l3698
  3970   0019A0                     u2580:
  3971   0019A0                     
  3972                           ;dc_motor.c: 324:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3973   0019A0  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3974   0019A4  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3975   0019A8  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3976   0019AC  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3977   0019B0  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3978   0019B4  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3979   0019B8  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3980   0019BC  EC28  F01B         	call	_turnLeft	;wreg free
  3981   0019C0                     
  3982                           ;dc_motor.c: 325:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3983   0019C0  0E05               	movlw	5
  3984   0019C2  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3985   0019C4  0E0F               	movlw	15
  3986   0019C6  6E3C               	movwf	??_lostReturnHome^0,c
  3987   0019C8  0EF1               	movlw	241
  3988   0019CA                     u3827:
  3989   0019CA  2EE8               	decfsz	wreg,f,c
  3990   0019CC  D7FE               	bra	u3827
  3991   0019CE  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3992   0019D0  D7FC               	bra	u3827
  3993   0019D2  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3994   0019D4  D7FA               	bra	u3827
  3995   0019D6  0000               	nop	
  3996   0019D8                     
  3997                           ;dc_motor.c: 326:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3998   0019D8  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3999   0019DC  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4000   0019E0  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4001   0019E4  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4002   0019E8  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4003   0019EC  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4004   0019F0  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4005   0019F4  EC28  F01B         	call	_turnLeft	;wreg free
  4006                           
  4007                           ;dc_motor.c: 327:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4008   0019F8  0E05               	movlw	5
  4009   0019FA  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4010   0019FC  0E0F               	movlw	15
  4011   0019FE  6E3C               	movwf	??_lostReturnHome^0,c
  4012   001A00  0EF1               	movlw	241
  4013   001A02                     u3837:
  4014   001A02  2EE8               	decfsz	wreg,f,c
  4015   001A04  D7FE               	bra	u3837
  4016   001A06  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4017   001A08  D7FC               	bra	u3837
  4018   001A0A  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4019   001A0C  D7FA               	bra	u3837
  4020   001A0E  0000               	nop	
  4021   001A10                     
  4022                           ;dc_motor.c: 328:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4023   001A10  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4024   001A14  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4025   001A18  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4026   001A1C  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4027   001A20  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4028   001A24  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4029   001A28  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4030   001A2C  EC28  F01B         	call	_turnLeft	;wreg free
  4031   001A30  EF01  F00C         	goto	l3660
  4032   001A34                     l3698:
  4033   001A34  5040               	movf	lostReturnHome@i^0,w,c
  4034   001A36  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4035   001A38  6ED9               	movwf	fsr2l,c
  4036   001A3A  0E00               	movlw	0
  4037   001A3C  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4038   001A3E  6EDA               	movwf	fsr2h,c
  4039   001A40  0E07               	movlw	7
  4040   001A42  18DE               	xorwf	postinc2,w,c
  4041   001A44  A4D8               	btfss	status,2,c
  4042   001A46  EF27  F00D         	goto	u2591
  4043   001A4A  EF29  F00D         	goto	u2590
  4044   001A4E                     u2591:
  4045   001A4E  EF73  F00D         	goto	l578
  4046   001A52                     u2590:
  4047   001A52                     
  4048                           ;dc_motor.c: 333:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4049   001A52  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4050   001A56  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4051   001A5A  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4052   001A5E  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4053   001A62  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4054   001A66  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4055   001A6A  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4056   001A6E  EC3E  F01A         	call	_turnRight	;wreg free
  4057   001A72                     
  4058                           ;dc_motor.c: 334:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4059   001A72  0E05               	movlw	5
  4060   001A74  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4061   001A76  0E0F               	movlw	15
  4062   001A78  6E3C               	movwf	??_lostReturnHome^0,c
  4063   001A7A  0EF1               	movlw	241
  4064   001A7C                     u3847:
  4065   001A7C  2EE8               	decfsz	wreg,f,c
  4066   001A7E  D7FE               	bra	u3847
  4067   001A80  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4068   001A82  D7FC               	bra	u3847
  4069   001A84  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4070   001A86  D7FA               	bra	u3847
  4071   001A88  0000               	nop	
  4072   001A8A                     
  4073                           ;dc_motor.c: 335:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4074   001A8A  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4075   001A8E  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4076   001A92  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4077   001A96  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4078   001A9A  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4079   001A9E  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4080   001AA2  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4081   001AA6  EC3E  F01A         	call	_turnRight	;wreg free
  4082                           
  4083                           ;dc_motor.c: 336:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4084   001AAA  0E05               	movlw	5
  4085   001AAC  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4086   001AAE  0E0F               	movlw	15
  4087   001AB0  6E3C               	movwf	??_lostReturnHome^0,c
  4088   001AB2  0EF1               	movlw	241
  4089   001AB4                     u3857:
  4090   001AB4  2EE8               	decfsz	wreg,f,c
  4091   001AB6  D7FE               	bra	u3857
  4092   001AB8  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4093   001ABA  D7FC               	bra	u3857
  4094   001ABC  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4095   001ABE  D7FA               	bra	u3857
  4096   001AC0  0000               	nop	
  4097   001AC2                     
  4098                           ;dc_motor.c: 337:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4099   001AC2  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4100   001AC6  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4101   001ACA  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4102   001ACE  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4103   001AD2  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4104   001AD6  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4105   001ADA  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4106   001ADE  EC3E  F01A         	call	_turnRight	;wreg free
  4107   001AE2  EF01  F00C         	goto	l3660
  4108   001AE6                     l578:
  4109   001AE6                     l572:
  4110                           
  4111                           ;dc_motor.c: 341:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4112   001AE6  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4113   001AEA  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4114   001AEE  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4115   001AF2  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4116   001AF6  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4117   001AFA  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4118   001AFE  EC77  F01E         	call	_fullSpeedAhead	;wreg free
  4119   001B02                     
  4120                           ;dc_motor.c: 342:         resetTimer();
  4121   001B02  EC49  F022         	call	_resetTimer	;wreg free
  4122   001B06                     l3712:
  4123   001B06  5040               	movf	lostReturnHome@i^0,w,c
  4124   001B08  0D02               	mullw	2
  4125   001B0A  CFF3 F03C          	movff	prodl,??_lostReturnHome
  4126   001B0E  CFF4 F03D          	movff	prodh,??_lostReturnHome+1
  4127   001B12  503C               	movf	??_lostReturnHome^0,w,c
  4128   001B14  2433               	addwf	lostReturnHome@straightTime^0,w,c
  4129   001B16  6ED9               	movwf	fsr2l,c
  4130   001B18  503D               	movf	(??_lostReturnHome+1)^0,w,c
  4131   001B1A  2034               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  4132   001B1C  6EDA               	movwf	fsr2h,c
  4133   001B1E  EC47  F021         	call	_get16bitTMR0val	;wreg free
  4134   001B22  50DE               	movf	postinc2,w,c
  4135   001B24  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  4136   001B26  50DE               	movf	postinc2,w,c
  4137   001B28  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4138   001B2A  A0D8               	btfss	status,0,c
  4139   001B2C  EF9A  F00D         	goto	u2601
  4140   001B30  EF9C  F00D         	goto	u2600
  4141   001B34                     u2601:
  4142   001B34  EF83  F00D         	goto	l3712
  4143   001B38                     u2600:
  4144   001B38                     
  4145                           ;dc_motor.c: 344:         stop(mL, mR, straightRamp);
  4146   001B38  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  4147   001B3C  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  4148   001B40  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  4149   001B44  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  4150   001B48  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4151   001B4C  ECF3  F01D         	call	_stop	;wreg free
  4152   001B50                     l3716:
  4153                           
  4154                           ;dc_motor.c: 277:     while (i>0) {
  4155   001B50  5040               	movf	lostReturnHome@i^0,w,c
  4156   001B52  A4D8               	btfss	status,2,c
  4157   001B54  EFAE  F00D         	goto	u2611
  4158   001B58  EFB0  F00D         	goto	u2610
  4159   001B5C                     u2611:
  4160   001B5C  EFFC  F00A         	goto	l3630
  4161   001B60                     u2610:
  4162   001B60  0012               	return		;funcret
  4163   001B62                     __end_of_lostReturnHome:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function _stop *****************
  4167 ;; Defined at:
  4168 ;;		line 349 in file "dc_motor.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4171 ;;		 -> main@motorL(10), 
  4172 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4173 ;;		 -> main@motorR(10), 
  4174 ;;  straightRamp    1   34[COMRAM] unsigned char 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  cur_power       2   40[COMRAM] int 
  4177 ;;  i               2   38[COMRAM] int 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4187 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;Total ram usage:       12 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; Hardware stack levels required when called: 7
  4194 ;; This function calls:
  4195 ;;		_setMotorPWM
  4196 ;; This function is called by:
  4197 ;;		_main
  4198 ;;		_returnHome
  4199 ;;		_lostReturnHome
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text4
  4204   003BE6                     __ptext4:
  4205                           	callstack 0
  4206   003BE6                     _stop:
  4207                           	callstack 23
  4208   003BE6                     
  4209                           ;dc_motor.c: 349: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 350: {;dc_motor.c: 351:     mL->direction = 1;
  4210   003BE6  EE20 F001          	lfsr	2,1
  4211   003BEA  501F               	movf	stop@mL^0,w,c
  4212   003BEC  26D9               	addwf	fsr2l,f,c
  4213   003BEE  5020               	movf	(stop@mL+1)^0,w,c
  4214   003BF0  22DA               	addwfc	fsr2h,f,c
  4215   003BF2  0E01               	movlw	1
  4216   003BF4  6EDF               	movwf	indf2,c
  4217                           
  4218                           ;dc_motor.c: 352:     mR->direction = 1;
  4219   003BF6  EE20 F001          	lfsr	2,1
  4220   003BFA  5021               	movf	stop@mR^0,w,c
  4221   003BFC  26D9               	addwf	fsr2l,f,c
  4222   003BFE  5022               	movf	(stop@mR+1)^0,w,c
  4223   003C00  22DA               	addwfc	fsr2h,f,c
  4224   003C02  0E01               	movlw	1
  4225   003C04  6EDF               	movwf	indf2,c
  4226                           
  4227                           ;dc_motor.c: 353:     int i;;dc_motor.c: 354:     int cur_power;;dc_motor.c: 355:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  4228   003C06  C01F  FFD9         	movff	stop@mL,fsr2l
  4229   003C0A  C020  FFDA         	movff	stop@mL+1,fsr2h
  4230   003C0E  50DF               	movf	indf2,w,c
  4231   003C10  6E24               	movwf	??_stop^0,c
  4232   003C12  EE20 F009          	lfsr	2,9
  4233   003C16  501F               	movf	stop@mL^0,w,c
  4234   003C18  26D9               	addwf	fsr2l,f,c
  4235   003C1A  5020               	movf	(stop@mL+1)^0,w,c
  4236   003C1C  22DA               	addwfc	fsr2h,f,c
  4237   003C1E  50DF               	movf	indf2,w,c
  4238   003C20  6E25               	movwf	(??_stop+1)^0,c
  4239   003C22  5025               	movf	(??_stop+1)^0,w,c
  4240   003C24  5C24               	subwf	??_stop^0,w,c
  4241   003C26  6E29               	movwf	stop@cur_power^0,c
  4242   003C28  6A2A               	clrf	(stop@cur_power+1)^0,c
  4243   003C2A  A0D8               	btfss	status,0,c
  4244   003C2C  062A               	decf	(stop@cur_power+1)^0,f,c
  4245   003C2E                     l2750:
  4246   003C2E  BE2A               	btfsc	(stop@cur_power+1)^0,7,c
  4247   003C30  EF1E  F01E         	goto	u1590
  4248   003C34  EF1C  F01E         	goto	u1591
  4249   003C38                     u1591:
  4250   003C38  EF20  F01E         	goto	l2754
  4251   003C3C                     u1590:
  4252   003C3C  EF6C  F01E         	goto	l2770
  4253   003C40                     l2754:
  4254                           
  4255                           ;dc_motor.c: 356:         mL->power = cur_power+mL->compensation;
  4256   003C40  EE20 F009          	lfsr	2,9
  4257   003C44  501F               	movf	stop@mL^0,w,c
  4258   003C46  26D9               	addwf	fsr2l,f,c
  4259   003C48  5020               	movf	(stop@mL+1)^0,w,c
  4260   003C4A  22DA               	addwfc	fsr2h,f,c
  4261   003C4C  50DF               	movf	indf2,w,c
  4262   003C4E  2429               	addwf	stop@cur_power^0,w,c
  4263   003C50  C01F  FFD9         	movff	stop@mL,fsr2l
  4264   003C54  C020  FFDA         	movff	stop@mL+1,fsr2h
  4265   003C58  6EDF               	movwf	indf2,c
  4266                           
  4267                           ;dc_motor.c: 357:         mR->power = cur_power+mR->compensation;
  4268   003C5A  EE20 F009          	lfsr	2,9
  4269   003C5E  5021               	movf	stop@mR^0,w,c
  4270   003C60  26D9               	addwf	fsr2l,f,c
  4271   003C62  5022               	movf	(stop@mR+1)^0,w,c
  4272   003C64  22DA               	addwfc	fsr2h,f,c
  4273   003C66  50DF               	movf	indf2,w,c
  4274   003C68  2429               	addwf	stop@cur_power^0,w,c
  4275   003C6A  C021  FFD9         	movff	stop@mR,fsr2l
  4276   003C6E  C022  FFDA         	movff	stop@mR+1,fsr2h
  4277   003C72  6EDF               	movwf	indf2,c
  4278   003C74                     
  4279                           ;dc_motor.c: 358:         setMotorPWM(mL);
  4280   003C74  C01F  F019         	movff	stop@mL,setMotorPWM@m
  4281   003C78  C020  F01A         	movff	stop@mL+1,setMotorPWM@m+1
  4282   003C7C  EC12  F01C         	call	_setMotorPWM	;wreg free
  4283   003C80                     
  4284                           ;dc_motor.c: 359:         setMotorPWM(mR);
  4285   003C80  C021  F019         	movff	stop@mR,setMotorPWM@m
  4286   003C84  C022  F01A         	movff	stop@mR+1,setMotorPWM@m+1
  4287   003C88  EC12  F01C         	call	_setMotorPWM	;wreg free
  4288   003C8C                     
  4289                           ;dc_motor.c: 360:         for (i=0;i<straightRamp;i++) {
  4290   003C8C  0E00               	movlw	0
  4291   003C8E  6E28               	movwf	(stop@i+1)^0,c
  4292   003C90  0E00               	movlw	0
  4293   003C92  6E27               	movwf	stop@i^0,c
  4294   003C94  EF55  F01E         	goto	l593
  4295   003C98                     l2762:
  4296                           
  4297                           ;dc_motor.c: 361:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4298   003C98  0ED0               	movlw	208
  4299   003C9A  6E24               	movwf	??_stop^0,c
  4300   003C9C  0ECA               	movlw	202
  4301   003C9E                     u3867:
  4302   003C9E  2EE8               	decfsz	wreg,f,c
  4303   003CA0  D7FE               	bra	u3867
  4304   003CA2  2E24               	decfsz	??_stop^0,f,c
  4305   003CA4  D7FC               	bra	u3867
  4306   003CA6                     
  4307                           ;dc_motor.c: 362:         }
  4308   003CA6  4A27               	infsnz	stop@i^0,f,c
  4309   003CA8  2A28               	incf	(stop@i+1)^0,f,c
  4310   003CAA                     l593:
  4311   003CAA  5023               	movf	stop@straightRamp^0,w,c
  4312   003CAC  6E24               	movwf	??_stop^0,c
  4313   003CAE  6A25               	clrf	(??_stop+1)^0,c
  4314   003CB0  5024               	movf	??_stop^0,w,c
  4315   003CB2  5C27               	subwf	stop@i^0,w,c
  4316   003CB4  5028               	movf	(stop@i+1)^0,w,c
  4317   003CB6  0A80               	xorlw	128
  4318   003CB8  6E26               	movwf	(??_stop+2)^0,c
  4319   003CBA  5025               	movf	(??_stop+1)^0,w,c
  4320   003CBC  0A80               	xorlw	128
  4321   003CBE  5826               	subwfb	(??_stop+2)^0,w,c
  4322   003CC0  A0D8               	btfss	status,0,c
  4323   003CC2  EF65  F01E         	goto	u1601
  4324   003CC6  EF67  F01E         	goto	u1600
  4325   003CCA                     u1601:
  4326   003CCA  EF4C  F01E         	goto	l2762
  4327   003CCE                     u1600:
  4328   003CCE                     
  4329                           ;dc_motor.c: 363:     }
  4330   003CCE  0629               	decf	stop@cur_power^0,f,c
  4331   003CD0  A0D8               	btfss	status,0,c
  4332   003CD2  062A               	decf	(stop@cur_power+1)^0,f,c
  4333   003CD4  EF17  F01E         	goto	l2750
  4334   003CD8                     l2770:
  4335                           
  4336                           ;dc_motor.c: 364:     mL->power = 0;
  4337   003CD8  C01F  FFD9         	movff	stop@mL,fsr2l
  4338   003CDC  C020  FFDA         	movff	stop@mL+1,fsr2h
  4339   003CE0  6ADF               	clrf	indf2,c
  4340                           
  4341                           ;dc_motor.c: 365:     mR->power = 0;
  4342   003CE2  C021  FFD9         	movff	stop@mR,fsr2l
  4343   003CE6  C022  FFDA         	movff	stop@mR+1,fsr2h
  4344   003CEA  6ADF               	clrf	indf2,c
  4345   003CEC  0012               	return		;funcret
  4346   003CEE                     __end_of_stop:
  4347                           	callstack 0
  4348                           
  4349 ;; *************** function _reverseOneSquare *****************
  4350 ;; Defined at:
  4351 ;;		line 450 in file "dc_motor.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4354 ;;		 -> main@motorL(10), 
  4355 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4356 ;;		 -> main@motorR(10), 
  4357 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4358 ;;  reverseDurat    1   35[COMRAM] unsigned char 
  4359 ;;  straightRamp    1   36[COMRAM] unsigned char 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  cur_power       2   42[COMRAM] int 
  4362 ;;  i               2   40[COMRAM] int 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4372 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4373 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4374 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4375 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4376 ;;Total ram usage:       14 bytes
  4377 ;; Hardware stack levels used: 1
  4378 ;; Hardware stack levels required when called: 7
  4379 ;; This function calls:
  4380 ;;		_setMotorPWM
  4381 ;; This function is called by:
  4382 ;;		_move
  4383 ;;		_returnHome
  4384 ;;		_lostReturnHome
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text5
  4389   003296                     __ptext5:
  4390                           	callstack 0
  4391   003296                     _reverseOneSquare:
  4392                           	callstack 22
  4393   003296                     
  4394                           ;dc_motor.c: 450: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned char reverseDuration, unsigned char straightRamp);dc_motor.c: 451: {;dc_motor.c
      +                          : 452:     mL->direction = 0;
  4395   003296  EE20 F001          	lfsr	2,1
  4396   00329A  501F               	movf	reverseOneSquare@mL^0,w,c
  4397   00329C  26D9               	addwf	fsr2l,f,c
  4398   00329E  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4399   0032A0  22DA               	addwfc	fsr2h,f,c
  4400   0032A2  6ADF               	clrf	indf2,c
  4401                           
  4402                           ;dc_motor.c: 453:     mR->direction = 0;
  4403   0032A4  EE20 F001          	lfsr	2,1
  4404   0032A8  5021               	movf	reverseOneSquare@mR^0,w,c
  4405   0032AA  26D9               	addwf	fsr2l,f,c
  4406   0032AC  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4407   0032AE  22DA               	addwfc	fsr2h,f,c
  4408   0032B0  6ADF               	clrf	indf2,c
  4409   0032B2                     
  4410                           ;dc_motor.c: 454:     int i;;dc_motor.c: 455:     int cur_power;;dc_motor.c: 456:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4411   0032B2  0E00               	movlw	0
  4412   0032B4  6E2C               	movwf	(reverseOneSquare@cur_power+1)^0,c
  4413   0032B6  0E01               	movlw	1
  4414   0032B8  6E2B               	movwf	reverseOneSquare@cur_power^0,c
  4415   0032BA  EFA8  F019         	goto	l2902
  4416   0032BE                     l2888:
  4417                           
  4418                           ;dc_motor.c: 457:         mL->power = cur_power+mL->compensation;
  4419   0032BE  EE20 F009          	lfsr	2,9
  4420   0032C2  501F               	movf	reverseOneSquare@mL^0,w,c
  4421   0032C4  26D9               	addwf	fsr2l,f,c
  4422   0032C6  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4423   0032C8  22DA               	addwfc	fsr2h,f,c
  4424   0032CA  50DF               	movf	indf2,w,c
  4425   0032CC  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4426   0032CE  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4427   0032D2  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4428   0032D6  6EDF               	movwf	indf2,c
  4429                           
  4430                           ;dc_motor.c: 458:         mR->power = cur_power+mR->compensation;
  4431   0032D8  EE20 F009          	lfsr	2,9
  4432   0032DC  5021               	movf	reverseOneSquare@mR^0,w,c
  4433   0032DE  26D9               	addwf	fsr2l,f,c
  4434   0032E0  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4435   0032E2  22DA               	addwfc	fsr2h,f,c
  4436   0032E4  50DF               	movf	indf2,w,c
  4437   0032E6  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4438   0032E8  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4439   0032EC  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4440   0032F0  6EDF               	movwf	indf2,c
  4441   0032F2                     
  4442                           ;dc_motor.c: 459:         setMotorPWM(mL);
  4443   0032F2  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4444   0032F6  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4445   0032FA  EC12  F01C         	call	_setMotorPWM	;wreg free
  4446   0032FE                     
  4447                           ;dc_motor.c: 460:         setMotorPWM(mR);
  4448   0032FE  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4449   003302  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4450   003306  EC12  F01C         	call	_setMotorPWM	;wreg free
  4451   00330A                     
  4452                           ;dc_motor.c: 461:         for (i=0;i<straightRamp;i++) {
  4453   00330A  0E00               	movlw	0
  4454   00330C  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4455   00330E  0E00               	movlw	0
  4456   003310  6E29               	movwf	reverseOneSquare@i^0,c
  4457   003312  EF94  F019         	goto	l644
  4458   003316                     l2896:
  4459                           
  4460                           ;dc_motor.c: 462:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4461   003316  0ED0               	movlw	208
  4462   003318  6E26               	movwf	??_reverseOneSquare^0,c
  4463   00331A  0ECA               	movlw	202
  4464   00331C                     u3877:
  4465   00331C  2EE8               	decfsz	wreg,f,c
  4466   00331E  D7FE               	bra	u3877
  4467   003320  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4468   003322  D7FC               	bra	u3877
  4469   003324                     
  4470                           ;dc_motor.c: 463:         }
  4471   003324  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4472   003326  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4473   003328                     l644:
  4474   003328  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4475   00332A  6E26               	movwf	??_reverseOneSquare^0,c
  4476   00332C  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4477   00332E  5026               	movf	??_reverseOneSquare^0,w,c
  4478   003330  5C29               	subwf	reverseOneSquare@i^0,w,c
  4479   003332  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4480   003334  0A80               	xorlw	128
  4481   003336  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4482   003338  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4483   00333A  0A80               	xorlw	128
  4484   00333C  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4485   00333E  A0D8               	btfss	status,0,c
  4486   003340  EFA4  F019         	goto	u1731
  4487   003344  EFA6  F019         	goto	u1730
  4488   003348                     u1731:
  4489   003348  EF8B  F019         	goto	l2896
  4490   00334C                     u1730:
  4491   00334C                     
  4492                           ;dc_motor.c: 464:     }
  4493   00334C  4A2B               	infsnz	reverseOneSquare@cur_power^0,f,c
  4494   00334E  2A2C               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  4495   003350                     l2902:
  4496   003350  5023               	movf	reverseOneSquare@straightSpeed^0,w,c
  4497   003352  6E26               	movwf	??_reverseOneSquare^0,c
  4498   003354  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4499   003356  502B               	movf	reverseOneSquare@cur_power^0,w,c
  4500   003358  5C26               	subwf	??_reverseOneSquare^0,w,c
  4501   00335A  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4502   00335C  0A80               	xorlw	128
  4503   00335E  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4504   003360  502C               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  4505   003362  0A80               	xorlw	128
  4506   003364  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4507   003366  B0D8               	btfsc	status,0,c
  4508   003368  EFB8  F019         	goto	u1741
  4509   00336C  EFBA  F019         	goto	u1740
  4510   003370                     u1741:
  4511   003370  EF5F  F019         	goto	l2888
  4512   003374                     u1740:
  4513   003374                     
  4514                           ;dc_motor.c: 466:     for (i=0;i<reverseDuration;i++) {
  4515   003374  0E00               	movlw	0
  4516   003376  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4517   003378  0E00               	movlw	0
  4518   00337A  6E29               	movwf	reverseOneSquare@i^0,c
  4519   00337C  EFC9  F019         	goto	l648
  4520   003380                     l2906:
  4521                           
  4522                           ;dc_motor.c: 467:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4523   003380  0ED0               	movlw	208
  4524   003382  6E26               	movwf	??_reverseOneSquare^0,c
  4525   003384  0ECA               	movlw	202
  4526   003386                     u3887:
  4527   003386  2EE8               	decfsz	wreg,f,c
  4528   003388  D7FE               	bra	u3887
  4529   00338A  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4530   00338C  D7FC               	bra	u3887
  4531   00338E                     
  4532                           ;dc_motor.c: 468:         }
  4533   00338E  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4534   003390  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4535   003392                     l648:
  4536   003392  5024               	movf	reverseOneSquare@reverseDuration^0,w,c
  4537   003394  6E26               	movwf	??_reverseOneSquare^0,c
  4538   003396  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4539   003398  5026               	movf	??_reverseOneSquare^0,w,c
  4540   00339A  5C29               	subwf	reverseOneSquare@i^0,w,c
  4541   00339C  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4542   00339E  0A80               	xorlw	128
  4543   0033A0  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4544   0033A2  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4545   0033A4  0A80               	xorlw	128
  4546   0033A6  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4547   0033A8  A0D8               	btfss	status,0,c
  4548   0033AA  EFD9  F019         	goto	u1751
  4549   0033AE  EFDB  F019         	goto	u1750
  4550   0033B2                     u1751:
  4551   0033B2  EFC0  F019         	goto	l2906
  4552   0033B6                     u1750:
  4553   0033B6                     
  4554                           ;dc_motor.c: 470:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  4555   0033B6  C023  F02B         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  4556   0033BA  6A2C               	clrf	(reverseOneSquare@cur_power+1)^0,c
  4557   0033BC                     l2910:
  4558   0033BC  BE2C               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  4559   0033BE  EFE5  F019         	goto	u1760
  4560   0033C2  EFE3  F019         	goto	u1761
  4561   0033C6                     u1761:
  4562   0033C6  EFE7  F019         	goto	l2914
  4563   0033CA                     u1760:
  4564   0033CA  EF33  F01A         	goto	l2930
  4565   0033CE                     l2914:
  4566                           
  4567                           ;dc_motor.c: 471:         mL->power = cur_power+mL->compensation;
  4568   0033CE  EE20 F009          	lfsr	2,9
  4569   0033D2  501F               	movf	reverseOneSquare@mL^0,w,c
  4570   0033D4  26D9               	addwf	fsr2l,f,c
  4571   0033D6  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4572   0033D8  22DA               	addwfc	fsr2h,f,c
  4573   0033DA  50DF               	movf	indf2,w,c
  4574   0033DC  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4575   0033DE  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4576   0033E2  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4577   0033E6  6EDF               	movwf	indf2,c
  4578                           
  4579                           ;dc_motor.c: 472:         mR->power = cur_power+mR->compensation;
  4580   0033E8  EE20 F009          	lfsr	2,9
  4581   0033EC  5021               	movf	reverseOneSquare@mR^0,w,c
  4582   0033EE  26D9               	addwf	fsr2l,f,c
  4583   0033F0  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4584   0033F2  22DA               	addwfc	fsr2h,f,c
  4585   0033F4  50DF               	movf	indf2,w,c
  4586   0033F6  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4587   0033F8  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4588   0033FC  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4589   003400  6EDF               	movwf	indf2,c
  4590   003402                     
  4591                           ;dc_motor.c: 473:         setMotorPWM(mL);
  4592   003402  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4593   003406  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4594   00340A  EC12  F01C         	call	_setMotorPWM	;wreg free
  4595   00340E                     
  4596                           ;dc_motor.c: 474:         setMotorPWM(mR);
  4597   00340E  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4598   003412  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4599   003416  EC12  F01C         	call	_setMotorPWM	;wreg free
  4600   00341A                     
  4601                           ;dc_motor.c: 475:         for (i=0;i<straightRamp;i++) {
  4602   00341A  0E00               	movlw	0
  4603   00341C  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4604   00341E  0E00               	movlw	0
  4605   003420  6E29               	movwf	reverseOneSquare@i^0,c
  4606   003422  EF1C  F01A         	goto	l653
  4607   003426                     l2922:
  4608                           
  4609                           ;dc_motor.c: 476:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4610   003426  0ED0               	movlw	208
  4611   003428  6E26               	movwf	??_reverseOneSquare^0,c
  4612   00342A  0ECA               	movlw	202
  4613   00342C                     u3897:
  4614   00342C  2EE8               	decfsz	wreg,f,c
  4615   00342E  D7FE               	bra	u3897
  4616   003430  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4617   003432  D7FC               	bra	u3897
  4618   003434                     
  4619                           ;dc_motor.c: 477:         }
  4620   003434  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4621   003436  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4622   003438                     l653:
  4623   003438  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4624   00343A  6E26               	movwf	??_reverseOneSquare^0,c
  4625   00343C  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4626   00343E  5026               	movf	??_reverseOneSquare^0,w,c
  4627   003440  5C29               	subwf	reverseOneSquare@i^0,w,c
  4628   003442  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4629   003444  0A80               	xorlw	128
  4630   003446  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4631   003448  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4632   00344A  0A80               	xorlw	128
  4633   00344C  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4634   00344E  A0D8               	btfss	status,0,c
  4635   003450  EF2C  F01A         	goto	u1771
  4636   003454  EF2E  F01A         	goto	u1770
  4637   003458                     u1771:
  4638   003458  EF13  F01A         	goto	l2922
  4639   00345C                     u1770:
  4640   00345C                     
  4641                           ;dc_motor.c: 478:     }
  4642   00345C  062B               	decf	reverseOneSquare@cur_power^0,f,c
  4643   00345E  A0D8               	btfss	status,0,c
  4644   003460  062C               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  4645   003462  EFDE  F019         	goto	l2910
  4646   003466                     l2930:
  4647                           
  4648                           ;dc_motor.c: 479:     mL->power = 0;
  4649   003466  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4650   00346A  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4651   00346E  6ADF               	clrf	indf2,c
  4652                           
  4653                           ;dc_motor.c: 480:     mR->power = 0;
  4654   003470  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4655   003474  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4656   003478  6ADF               	clrf	indf2,c
  4657   00347A  0012               	return		;funcret
  4658   00347C                     __end_of_reverseOneSquare:
  4659                           	callstack 0
  4660                           
  4661 ;; *************** function _resetTimer *****************
  4662 ;; Defined at:
  4663 ;;		line 23 in file "timers.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;		None
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;Total ram usage:        0 bytes
  4682 ;; Hardware stack levels used: 1
  4683 ;; Hardware stack levels required when called: 5
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_main
  4688 ;;		_returnHome
  4689 ;;		_lostReturnHome
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text6
  4694   004492                     __ptext6:
  4695                           	callstack 0
  4696   004492                     _resetTimer:
  4697                           	callstack 25
  4698   004492                     
  4699                           ;timers.c: 25:     TMR0H=0;
  4700   004492  0E00               	movlw	0
  4701   004494  6ED4               	movwf	212,c	;volatile
  4702                           
  4703                           ;timers.c: 26:     TMR0L=0;
  4704   004496  0E00               	movlw	0
  4705   004498  6ED3               	movwf	211,c	;volatile
  4706   00449A  0012               	return		;funcret
  4707   00449C                     __end_of_resetTimer:
  4708                           	callstack 0
  4709                           
  4710 ;; *************** function _get16bitTMR0val *****************
  4711 ;; Defined at:
  4712 ;;		line 33 in file "timers.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  timer_val       2   19[COMRAM] unsigned int 
  4717 ;;  timer_high      2   17[COMRAM] unsigned int 
  4718 ;;  timer_low       2   15[COMRAM] unsigned int 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  2   11[COMRAM] unsigned int 
  4721 ;; Registers used:
  4722 ;;		wreg, status,2, status,0
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4729 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4731 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4732 ;;Total ram usage:       10 bytes
  4733 ;; Hardware stack levels used: 1
  4734 ;; Hardware stack levels required when called: 5
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		_main
  4739 ;;		_returnHome
  4740 ;;		_lostReturnHome
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text7
  4745   00428E                     __ptext7:
  4746                           	callstack 0
  4747   00428E                     _get16bitTMR0val:
  4748                           	callstack 23
  4749   00428E                     
  4750                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  4751   00428E  CFD3 F010          	movff	4051,get16bitTMR0val@timer_low	;volatile
  4752   004292  6A11               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  4753                           
  4754                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  4755   004294  CFD4 F012          	movff	4052,get16bitTMR0val@timer_high	;volatile
  4756   004298  6A13               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  4757   00429A                     
  4758                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  4759   00429A  5012               	movf	get16bitTMR0val@timer_high^0,w,c
  4760   00429C  6E0F               	movwf	(??_get16bitTMR0val+1)^0,c
  4761   00429E  6A0E               	clrf	??_get16bitTMR0val^0,c
  4762   0042A0  5010               	movf	get16bitTMR0val@timer_low^0,w,c
  4763   0042A2  100E               	iorwf	??_get16bitTMR0val^0,w,c
  4764   0042A4  6E14               	movwf	get16bitTMR0val@timer_val^0,c
  4765   0042A6  5011               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  4766   0042A8  100F               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  4767   0042AA  6E15               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  4768   0042AC                     
  4769                           ;timers.c: 39:     return timer_val;
  4770   0042AC  C014  F00C         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  4771   0042B0  C015  F00D         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  4772   0042B4  0012               	return		;funcret
  4773   0042B6                     __end_of_get16bitTMR0val:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _fullSpeedAhead *****************
  4777 ;; Defined at:
  4778 ;;		line 433 in file "dc_motor.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4781 ;;		 -> main@motorL(10), 
  4782 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4783 ;;		 -> main@motorR(10), 
  4784 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4785 ;;  straightRamp    1   35[COMRAM] unsigned char 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  cur_power       2   41[COMRAM] int 
  4788 ;;  i               2   39[COMRAM] int 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4798 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4799 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;Total ram usage:       13 bytes
  4803 ;; Hardware stack levels used: 1
  4804 ;; Hardware stack levels required when called: 7
  4805 ;; This function calls:
  4806 ;;		_setMotorPWM
  4807 ;; This function is called by:
  4808 ;;		_main
  4809 ;;		_move
  4810 ;;		_returnHome
  4811 ;;		_lostReturnHome
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text8
  4816   003CEE                     __ptext8:
  4817                           	callstack 0
  4818   003CEE                     _fullSpeedAhead:
  4819                           	callstack 21
  4820   003CEE                     
  4821                           ;dc_motor.c: 433: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 434: {;dc_motor.c: 435:     mL->direction = 1;
  4822   003CEE  EE20 F001          	lfsr	2,1
  4823   003CF2  501F               	movf	fullSpeedAhead@mL^0,w,c
  4824   003CF4  26D9               	addwf	fsr2l,f,c
  4825   003CF6  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4826   003CF8  22DA               	addwfc	fsr2h,f,c
  4827   003CFA  0E01               	movlw	1
  4828   003CFC  6EDF               	movwf	indf2,c
  4829                           
  4830                           ;dc_motor.c: 436:     mR->direction = 1;
  4831   003CFE  EE20 F001          	lfsr	2,1
  4832   003D02  5021               	movf	fullSpeedAhead@mR^0,w,c
  4833   003D04  26D9               	addwf	fsr2l,f,c
  4834   003D06  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4835   003D08  22DA               	addwfc	fsr2h,f,c
  4836   003D0A  0E01               	movlw	1
  4837   003D0C  6EDF               	movwf	indf2,c
  4838   003D0E                     
  4839                           ;dc_motor.c: 437:     int i;;dc_motor.c: 438:     int cur_power;;dc_motor.c: 439:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4840   003D0E  0E00               	movlw	0
  4841   003D10  6E2B               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  4842   003D12  0E01               	movlw	1
  4843   003D14  6E2A               	movwf	fullSpeedAhead@cur_power^0,c
  4844   003D16  EFD6  F01E         	goto	l2736
  4845   003D1A                     l2722:
  4846                           
  4847                           ;dc_motor.c: 440:         mL->power = cur_power+mL->compensation;
  4848   003D1A  EE20 F009          	lfsr	2,9
  4849   003D1E  501F               	movf	fullSpeedAhead@mL^0,w,c
  4850   003D20  26D9               	addwf	fsr2l,f,c
  4851   003D22  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4852   003D24  22DA               	addwfc	fsr2h,f,c
  4853   003D26  50DF               	movf	indf2,w,c
  4854   003D28  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4855   003D2A  C01F  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4856   003D2E  C020  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4857   003D32  6EDF               	movwf	indf2,c
  4858                           
  4859                           ;dc_motor.c: 441:         mR->power = cur_power+mR->compensation;
  4860   003D34  EE20 F009          	lfsr	2,9
  4861   003D38  5021               	movf	fullSpeedAhead@mR^0,w,c
  4862   003D3A  26D9               	addwf	fsr2l,f,c
  4863   003D3C  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4864   003D3E  22DA               	addwfc	fsr2h,f,c
  4865   003D40  50DF               	movf	indf2,w,c
  4866   003D42  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4867   003D44  C021  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4868   003D48  C022  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4869   003D4C  6EDF               	movwf	indf2,c
  4870   003D4E                     
  4871                           ;dc_motor.c: 442:         setMotorPWM(mL);
  4872   003D4E  C01F  F019         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4873   003D52  C020  F01A         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4874   003D56  EC12  F01C         	call	_setMotorPWM	;wreg free
  4875   003D5A                     
  4876                           ;dc_motor.c: 443:         setMotorPWM(mR);
  4877   003D5A  C021  F019         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4878   003D5E  C022  F01A         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4879   003D62  EC12  F01C         	call	_setMotorPWM	;wreg free
  4880   003D66                     
  4881                           ;dc_motor.c: 444:         for (i=0;i<straightRamp;i++) {
  4882   003D66  0E00               	movlw	0
  4883   003D68  6E29               	movwf	(fullSpeedAhead@i+1)^0,c
  4884   003D6A  0E00               	movlw	0
  4885   003D6C  6E28               	movwf	fullSpeedAhead@i^0,c
  4886   003D6E  EFC2  F01E         	goto	l635
  4887   003D72                     l2730:
  4888                           
  4889                           ;dc_motor.c: 445:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4890   003D72  0ED0               	movlw	208
  4891   003D74  6E25               	movwf	??_fullSpeedAhead^0,c
  4892   003D76  0ECA               	movlw	202
  4893   003D78                     u3907:
  4894   003D78  2EE8               	decfsz	wreg,f,c
  4895   003D7A  D7FE               	bra	u3907
  4896   003D7C  2E25               	decfsz	??_fullSpeedAhead^0,f,c
  4897   003D7E  D7FC               	bra	u3907
  4898   003D80                     
  4899                           ;dc_motor.c: 446:         }
  4900   003D80  4A28               	infsnz	fullSpeedAhead@i^0,f,c
  4901   003D82  2A29               	incf	(fullSpeedAhead@i+1)^0,f,c
  4902   003D84                     l635:
  4903   003D84  5024               	movf	fullSpeedAhead@straightRamp^0,w,c
  4904   003D86  6E25               	movwf	??_fullSpeedAhead^0,c
  4905   003D88  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  4906   003D8A  5025               	movf	??_fullSpeedAhead^0,w,c
  4907   003D8C  5C28               	subwf	fullSpeedAhead@i^0,w,c
  4908   003D8E  5029               	movf	(fullSpeedAhead@i+1)^0,w,c
  4909   003D90  0A80               	xorlw	128
  4910   003D92  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  4911   003D94  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  4912   003D96  0A80               	xorlw	128
  4913   003D98  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  4914   003D9A  A0D8               	btfss	status,0,c
  4915   003D9C  EFD2  F01E         	goto	u1571
  4916   003DA0  EFD4  F01E         	goto	u1570
  4917   003DA4                     u1571:
  4918   003DA4  EFB9  F01E         	goto	l2730
  4919   003DA8                     u1570:
  4920   003DA8                     
  4921                           ;dc_motor.c: 447:     }
  4922   003DA8  4A2A               	infsnz	fullSpeedAhead@cur_power^0,f,c
  4923   003DAA  2A2B               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  4924   003DAC                     l2736:
  4925   003DAC  5023               	movf	fullSpeedAhead@straightSpeed^0,w,c
  4926   003DAE  6E25               	movwf	??_fullSpeedAhead^0,c
  4927   003DB0  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  4928   003DB2  502A               	movf	fullSpeedAhead@cur_power^0,w,c
  4929   003DB4  5C25               	subwf	??_fullSpeedAhead^0,w,c
  4930   003DB6  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  4931   003DB8  0A80               	xorlw	128
  4932   003DBA  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  4933   003DBC  502B               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  4934   003DBE  0A80               	xorlw	128
  4935   003DC0  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  4936   003DC2  B0D8               	btfsc	status,0,c
  4937   003DC4  EFE6  F01E         	goto	u1581
  4938   003DC8  EFE8  F01E         	goto	u1580
  4939   003DCC                     u1581:
  4940   003DCC  EF8D  F01E         	goto	l2722
  4941   003DD0                     u1580:
  4942   003DD0  0012               	return		;funcret
  4943   003DD2                     __end_of_fullSpeedAhead:
  4944                           	callstack 0
  4945                           
  4946 ;; *************** function _initUSART4 *****************
  4947 ;; Defined at:
  4948 ;;		line 4 in file "serial.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4966 ;;Total ram usage:        0 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 5
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_main
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text9
  4977   0043FC                     __ptext9:
  4978                           	callstack 0
  4979   0043FC                     _initUSART4:
  4980                           	callstack 25
  4981   0043FC                     
  4982                           ;serial.c: 7:     RC0PPS = 0x12;
  4983   0043FC  0E12               	movlw	18
  4984   0043FE  010E               	movlb	14	; () banked
  4985   004400  6F62               	movwf	98,b	;volatile
  4986                           
  4987                           ;serial.c: 8:     RX4PPS = 0x11;
  4988   004402  0E11               	movlw	17
  4989   004404  6F15               	movwf	21,b	;volatile
  4990   004406                     
  4991                           ; BSR set to: 14
  4992                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  4993   004406  97E9               	bcf	233,3,b	;volatile
  4994   004408                     
  4995                           ; BSR set to: 14
  4996                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  4997   004408  95E8               	bcf	232,2,b	;volatile
  4998                           
  4999                           ;serial.c: 13:     SP4BRGL = 51;
  5000   00440A  0E33               	movlw	51
  5001   00440C  6FE5               	movwf	229,b	;volatile
  5002                           
  5003                           ;serial.c: 14:     SP4BRGH = 0;
  5004   00440E  0E00               	movlw	0
  5005   004410  6FE6               	movwf	230,b	;volatile
  5006   004412                     
  5007                           ; BSR set to: 14
  5008                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  5009   004412  89E7               	bsf	231,4,b	;volatile
  5010   004414                     
  5011                           ; BSR set to: 14
  5012                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  5013   004414  8BE8               	bsf	232,5,b	;volatile
  5014   004416                     
  5015                           ; BSR set to: 14
  5016                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  5017   004416  8FE7               	bsf	231,7,b	;volatile
  5018   004418                     
  5019                           ; BSR set to: 14
  5020   004418  0012               	return		;funcret
  5021   00441A                     __end_of_initUSART4:
  5022                           	callstack 0
  5023                           
  5024 ;; *************** function _initDCmotorsPWM *****************
  5025 ;; Defined at:
  5026 ;;		line 8 in file "dc_motor.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  PWMperiod       2   11[COMRAM] unsigned int 
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		wreg, status,2
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;Total ram usage:        2 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; Hardware stack levels required when called: 5
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_main
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text10
  5055   003E96                     __ptext10:
  5056                           	callstack 0
  5057   003E96                     _initDCmotorsPWM:
  5058                           	callstack 25
  5059   003E96                     
  5060                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  5061   003E96  947D               	bcf	125,2,c	;volatile
  5062                           
  5063                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  5064   003E98  9485               	bcf	133,2,c	;volatile
  5065                           
  5066                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  5067   003E9A  987D               	bcf	125,4,c	;volatile
  5068                           
  5069                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  5070   003E9C  9885               	bcf	133,4,c	;volatile
  5071                           
  5072                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  5073   003E9E  9E7B               	bcf	123,7,c	;volatile
  5074                           
  5075                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  5076   003EA0  9E83               	bcf	131,7,c	;volatile
  5077                           
  5078                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  5079   003EA2  9C7F               	bcf	127,6,c	;volatile
  5080                           
  5081                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  5082   003EA4  9C87               	bcf	135,6,c	;volatile
  5083   003EA6                     
  5084                           ;dc_motor.c: 21:     RE2PPS=0x05;
  5085   003EA6  0E05               	movlw	5
  5086   003EA8  010E               	movlb	14	; () banked
  5087   003EAA  6F74               	movwf	116,b	;volatile
  5088                           
  5089                           ;dc_motor.c: 22:     RE4PPS=0x06;
  5090   003EAC  0E06               	movlw	6
  5091   003EAE  6F76               	movwf	118,b	;volatile
  5092                           
  5093                           ;dc_motor.c: 23:     RC7PPS=0x07;
  5094   003EB0  0E07               	movlw	7
  5095   003EB2  6F69               	movwf	105,b	;volatile
  5096                           
  5097                           ;dc_motor.c: 24:     RG6PPS=0x08;
  5098   003EB4  0E08               	movlw	8
  5099   003EB6  6F88               	movwf	136,b	;volatile
  5100                           
  5101                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  5102   003EB8  50BD               	movf	189,w,c	;volatile
  5103   003EBA  0B8F               	andlw	-113
  5104   003EBC  0930               	iorlw	48
  5105   003EBE  6EBD               	movwf	189,c	;volatile
  5106                           
  5107                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  5108   003EC0  0EE0               	movlw	-32
  5109   003EC2  16BE               	andwf	190,f,c	;volatile
  5110                           
  5111                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  5112   003EC4  50BF               	movf	191,w,c	;volatile
  5113   003EC6  0BF0               	andlw	-16
  5114   003EC8  0901               	iorlw	1
  5115   003ECA  6EBF               	movwf	191,c	;volatile
  5116   003ECC                     
  5117                           ; BSR set to: 14
  5118                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  5119   003ECC  C00C  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  5120   003ED0                     
  5121                           ; BSR set to: 14
  5122                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  5123   003ED0  8EBD               	bsf	189,7,c	;volatile
  5124                           
  5125                           ;dc_motor.c: 38:     CCPR1H=0;
  5126   003ED2  0E00               	movlw	0
  5127   003ED4  6EAA               	movwf	170,c	;volatile
  5128                           
  5129                           ;dc_motor.c: 39:     CCPR2H=0;
  5130   003ED6  0E00               	movlw	0
  5131   003ED8  6EA6               	movwf	166,c	;volatile
  5132                           
  5133                           ;dc_motor.c: 40:     CCPR3H=0;
  5134   003EDA  0E00               	movlw	0
  5135   003EDC  010F               	movlb	15	; () banked
  5136   003EDE  6F25               	movwf	37,b	;volatile
  5137                           
  5138                           ;dc_motor.c: 41:     CCPR4H=0;
  5139   003EE0  0E00               	movlw	0
  5140   003EE2  6F21               	movwf	33,b	;volatile
  5141                           
  5142                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  5143   003EE4  0EFC               	movlw	-4
  5144   003EE6  16AD               	andwf	173,f,c	;volatile
  5145                           
  5146                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  5147   003EE8  0EF3               	movlw	-13
  5148   003EEA  16AD               	andwf	173,f,c	;volatile
  5149                           
  5150                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  5151   003EEC  0ECF               	movlw	-49
  5152   003EEE  16AD               	andwf	173,f,c	;volatile
  5153                           
  5154                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  5155   003EF0  0E3F               	movlw	-193
  5156   003EF2  16AD               	andwf	173,f,c	;volatile
  5157   003EF4                     
  5158                           ; BSR set to: 15
  5159                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  5160   003EF4  88AB               	bsf	171,4,c	;volatile
  5161                           
  5162                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  5163   003EF6  50AB               	movf	171,w,c	;volatile
  5164   003EF8  0BF0               	andlw	-16
  5165   003EFA  090C               	iorlw	12
  5166   003EFC  6EAB               	movwf	171,c	;volatile
  5167   003EFE                     
  5168                           ; BSR set to: 15
  5169                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  5170   003EFE  8EAB               	bsf	171,7,c	;volatile
  5171   003F00                     
  5172                           ; BSR set to: 15
  5173                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  5174   003F00  88A7               	bsf	167,4,c	;volatile
  5175                           
  5176                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  5177   003F02  50A7               	movf	167,w,c	;volatile
  5178   003F04  0BF0               	andlw	-16
  5179   003F06  090C               	iorlw	12
  5180   003F08  6EA7               	movwf	167,c	;volatile
  5181   003F0A                     
  5182                           ; BSR set to: 15
  5183                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  5184   003F0A  8EA7               	bsf	167,7,c	;volatile
  5185   003F0C                     
  5186                           ; BSR set to: 15
  5187                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  5188   003F0C  8926               	bsf	38,4,b	;volatile
  5189                           
  5190                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  5191   003F0E  5126               	movf	38,w,b	;volatile
  5192   003F10  0BF0               	andlw	-16
  5193   003F12  090C               	iorlw	12
  5194   003F14  6F26               	movwf	38,b	;volatile
  5195   003F16                     
  5196                           ; BSR set to: 15
  5197                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  5198   003F16  8F26               	bsf	38,7,b	;volatile
  5199   003F18                     
  5200                           ; BSR set to: 15
  5201                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  5202   003F18  8922               	bsf	34,4,b	;volatile
  5203                           
  5204                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  5205   003F1A  5122               	movf	34,w,b	;volatile
  5206   003F1C  0BF0               	andlw	-16
  5207   003F1E  090C               	iorlw	12
  5208   003F20  6F22               	movwf	34,b	;volatile
  5209   003F22                     
  5210                           ; BSR set to: 15
  5211                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  5212   003F22  8F22               	bsf	34,7,b	;volatile
  5213   003F24                     
  5214                           ; BSR set to: 15
  5215   003F24  0012               	return		;funcret
  5216   003F26                     __end_of_initDCmotorsPWM:
  5217                           	callstack 0
  5218                           
  5219 ;; *************** function _color_detect *****************
  5220 ;; Defined at:
  5221 ;;		line 138 in file "color.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;  RGBC_n          8   11[COMRAM] struct RGBC_val
  5224 ;;  red             6   19[COMRAM] struct RGB_calib
  5225 ;;  green           6   25[COMRAM] struct RGB_calib
  5226 ;;  blue            6   31[COMRAM] struct RGB_calib
  5227 ;;  yellow          6   37[COMRAM] struct RGB_calib
  5228 ;;  pink            6   43[COMRAM] struct RGB_calib
  5229 ;;  orange          6   49[COMRAM] struct RGB_calib
  5230 ;;  lightBlue       6   55[COMRAM] struct RGB_calib
  5231 ;;  white           6   61[COMRAM] struct RGB_calib
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  color           1   69[COMRAM] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      unsigned char 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, status,0
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5243 ;;      Params:        56       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5246 ;;      Totals:        59       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;Total ram usage:       59 bytes
  5248 ;; Hardware stack levels used: 1
  5249 ;; Hardware stack levels required when called: 5
  5250 ;; This function calls:
  5251 ;;		Nothing
  5252 ;; This function is called by:
  5253 ;;		_main
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text11
  5258   002E3C                     __ptext11:
  5259                           	callstack 0
  5260   002E3C                     _color_detect:
  5261                           	callstack 25
  5262   002E3C                     
  5263                           ;color.c: 142:     if ((red.R)-40 < RGBC_n.R) {
  5264   002E3C  0ED8               	movlw	216
  5265   002E3E  2414               	addwf	color_detect@red^0,w,c
  5266   002E40  6E44               	movwf	??_color_detect^0,c
  5267   002E42  0EFF               	movlw	255
  5268   002E44  2015               	addwfc	(color_detect@red+1)^0,w,c
  5269   002E46  6E45               	movwf	(??_color_detect+1)^0,c
  5270   002E48  500C               	movf	color_detect@RGBC_n^0,w,c
  5271   002E4A  5C44               	subwf	??_color_detect^0,w,c
  5272   002E4C  500D               	movf	(color_detect@RGBC_n+1)^0,w,c
  5273   002E4E  5845               	subwfb	(??_color_detect+1)^0,w,c
  5274   002E50  B0D8               	btfsc	status,0,c
  5275   002E52  EF2D  F017         	goto	u2281
  5276   002E56  EF2F  F017         	goto	u2280
  5277   002E5A                     u2281:
  5278   002E5A  EF33  F017         	goto	l3464
  5279   002E5E                     u2280:
  5280   002E5E                     
  5281                           ;color.c: 143:         color = 1;
  5282   002E5E  0E01               	movlw	1
  5283   002E60  6E46               	movwf	color_detect@color^0,c
  5284                           
  5285                           ;color.c: 144:     }
  5286   002E62  EF52  F018         	goto	l156
  5287   002E66                     l3464:
  5288   002E66  0EE7               	movlw	231
  5289   002E68  241C               	addwf	(color_detect@green+2)^0,w,c
  5290   002E6A  6E44               	movwf	??_color_detect^0,c
  5291   002E6C  0EFF               	movlw	255
  5292   002E6E  201D               	addwfc	(color_detect@green+3)^0,w,c
  5293   002E70  6E45               	movwf	(??_color_detect+1)^0,c
  5294   002E72  500E               	movf	(color_detect@RGBC_n+2)^0,w,c
  5295   002E74  5C44               	subwf	??_color_detect^0,w,c
  5296   002E76  500F               	movf	(color_detect@RGBC_n+3)^0,w,c
  5297   002E78  5845               	subwfb	(??_color_detect+1)^0,w,c
  5298   002E7A  B0D8               	btfsc	status,0,c
  5299   002E7C  EF42  F017         	goto	u2291
  5300   002E80  EF44  F017         	goto	u2290
  5301   002E84                     u2291:
  5302   002E84  EF59  F017         	goto	l3470
  5303   002E88                     u2290:
  5304   002E88  0E32               	movlw	50
  5305   002E8A  241E               	addwf	(color_detect@green+4)^0,w,c
  5306   002E8C  6E44               	movwf	??_color_detect^0,c
  5307   002E8E  0E00               	movlw	0
  5308   002E90  201F               	addwfc	(color_detect@green+5)^0,w,c
  5309   002E92  6E45               	movwf	(??_color_detect+1)^0,c
  5310   002E94  5044               	movf	??_color_detect^0,w,c
  5311   002E96  5C10               	subwf	(color_detect@RGBC_n+4)^0,w,c
  5312   002E98  5045               	movf	(??_color_detect+1)^0,w,c
  5313   002E9A  5811               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  5314   002E9C  B0D8               	btfsc	status,0,c
  5315   002E9E  EF53  F017         	goto	u2301
  5316   002EA2  EF55  F017         	goto	u2300
  5317   002EA6                     u2301:
  5318   002EA6  EF59  F017         	goto	l3470
  5319   002EAA                     u2300:
  5320   002EAA                     
  5321                           ;color.c: 147:         color = 2;
  5322   002EAA  0E02               	movlw	2
  5323   002EAC  6E46               	movwf	color_detect@color^0,c
  5324                           
  5325                           ;color.c: 148:     }
  5326   002EAE  EF52  F018         	goto	l156
  5327   002EB2                     l3470:
  5328   002EB2  0ED8               	movlw	216
  5329   002EB4  2424               	addwf	(color_detect@blue+4)^0,w,c
  5330   002EB6  6E44               	movwf	??_color_detect^0,c
  5331   002EB8  0EFF               	movlw	255
  5332   002EBA  2025               	addwfc	(color_detect@blue+5)^0,w,c
  5333   002EBC  6E45               	movwf	(??_color_detect+1)^0,c
  5334   002EBE  5010               	movf	(color_detect@RGBC_n+4)^0,w,c
  5335   002EC0  5C44               	subwf	??_color_detect^0,w,c
  5336   002EC2  5011               	movf	(color_detect@RGBC_n+5)^0,w,c
  5337   002EC4  5845               	subwfb	(??_color_detect+1)^0,w,c
  5338   002EC6  B0D8               	btfsc	status,0,c
  5339   002EC8  EF68  F017         	goto	u2311
  5340   002ECC  EF6A  F017         	goto	u2310
  5341   002ED0                     u2311:
  5342   002ED0  EF6E  F017         	goto	l3474
  5343   002ED4                     u2310:
  5344   002ED4                     
  5345                           ;color.c: 151:         color = 3;
  5346   002ED4  0E03               	movlw	3
  5347   002ED6  6E46               	movwf	color_detect@color^0,c
  5348                           
  5349                           ;color.c: 152:     }
  5350   002ED8  EF52  F018         	goto	l156
  5351   002EDC                     l3474:
  5352   002EDC  0EEC               	movlw	236
  5353   002EDE  2426               	addwf	color_detect@yellow^0,w,c
  5354   002EE0  6E44               	movwf	??_color_detect^0,c
  5355   002EE2  0EFF               	movlw	255
  5356   002EE4  2027               	addwfc	(color_detect@yellow+1)^0,w,c
  5357   002EE6  6E45               	movwf	(??_color_detect+1)^0,c
  5358   002EE8  500C               	movf	color_detect@RGBC_n^0,w,c
  5359   002EEA  5C44               	subwf	??_color_detect^0,w,c
  5360   002EEC  500D               	movf	(color_detect@RGBC_n+1)^0,w,c
  5361   002EEE  5845               	subwfb	(??_color_detect+1)^0,w,c
  5362   002EF0  B0D8               	btfsc	status,0,c
  5363   002EF2  EF7D  F017         	goto	u2321
  5364   002EF6  EF7F  F017         	goto	u2320
  5365   002EFA                     u2321:
  5366   002EFA  EF94  F017         	goto	l3480
  5367   002EFE                     u2320:
  5368   002EFE  0EEC               	movlw	236
  5369   002F00  2428               	addwf	(color_detect@yellow+2)^0,w,c
  5370   002F02  6E44               	movwf	??_color_detect^0,c
  5371   002F04  0EFF               	movlw	255
  5372   002F06  2029               	addwfc	(color_detect@yellow+3)^0,w,c
  5373   002F08  6E45               	movwf	(??_color_detect+1)^0,c
  5374   002F0A  500E               	movf	(color_detect@RGBC_n+2)^0,w,c
  5375   002F0C  5C44               	subwf	??_color_detect^0,w,c
  5376   002F0E  500F               	movf	(color_detect@RGBC_n+3)^0,w,c
  5377   002F10  5845               	subwfb	(??_color_detect+1)^0,w,c
  5378   002F12  B0D8               	btfsc	status,0,c
  5379   002F14  EF8E  F017         	goto	u2331
  5380   002F18  EF90  F017         	goto	u2330
  5381   002F1C                     u2331:
  5382   002F1C  EF94  F017         	goto	l3480
  5383   002F20                     u2330:
  5384   002F20                     
  5385                           ;color.c: 155:         color = 4;
  5386   002F20  0E04               	movlw	4
  5387   002F22  6E46               	movwf	color_detect@color^0,c
  5388                           
  5389                           ;color.c: 156:     }
  5390   002F24  EF52  F018         	goto	l156
  5391   002F28                     l3480:
  5392   002F28  0EEC               	movlw	236
  5393   002F2A  242C               	addwf	color_detect@pink^0,w,c
  5394   002F2C  6E44               	movwf	??_color_detect^0,c
  5395   002F2E  0EFF               	movlw	255
  5396   002F30  202D               	addwfc	(color_detect@pink+1)^0,w,c
  5397   002F32  6E45               	movwf	(??_color_detect+1)^0,c
  5398   002F34  500C               	movf	color_detect@RGBC_n^0,w,c
  5399   002F36  5C44               	subwf	??_color_detect^0,w,c
  5400   002F38  500D               	movf	(color_detect@RGBC_n+1)^0,w,c
  5401   002F3A  5845               	subwfb	(??_color_detect+1)^0,w,c
  5402   002F3C  B0D8               	btfsc	status,0,c
  5403   002F3E  EFA3  F017         	goto	u2341
  5404   002F42  EFA5  F017         	goto	u2340
  5405   002F46                     u2341:
  5406   002F46  EFBA  F017         	goto	l3486
  5407   002F4A                     u2340:
  5408   002F4A  0EE2               	movlw	226
  5409   002F4C  2430               	addwf	(color_detect@pink+4)^0,w,c
  5410   002F4E  6E44               	movwf	??_color_detect^0,c
  5411   002F50  0EFF               	movlw	255
  5412   002F52  2031               	addwfc	(color_detect@pink+5)^0,w,c
  5413   002F54  6E45               	movwf	(??_color_detect+1)^0,c
  5414   002F56  5010               	movf	(color_detect@RGBC_n+4)^0,w,c
  5415   002F58  5C44               	subwf	??_color_detect^0,w,c
  5416   002F5A  5011               	movf	(color_detect@RGBC_n+5)^0,w,c
  5417   002F5C  5845               	subwfb	(??_color_detect+1)^0,w,c
  5418   002F5E  B0D8               	btfsc	status,0,c
  5419   002F60  EFB4  F017         	goto	u2351
  5420   002F64  EFB6  F017         	goto	u2350
  5421   002F68                     u2351:
  5422   002F68  EFBA  F017         	goto	l3486
  5423   002F6C                     u2350:
  5424   002F6C                     
  5425                           ;color.c: 159:         color = 5;
  5426   002F6C  0E05               	movlw	5
  5427   002F6E  6E46               	movwf	color_detect@color^0,c
  5428                           
  5429                           ;color.c: 160:     }
  5430   002F70  EF52  F018         	goto	l156
  5431   002F74                     l3486:
  5432   002F74  0EE2               	movlw	226
  5433   002F76  2432               	addwf	color_detect@orange^0,w,c
  5434   002F78  6E44               	movwf	??_color_detect^0,c
  5435   002F7A  0EFF               	movlw	255
  5436   002F7C  2033               	addwfc	(color_detect@orange+1)^0,w,c
  5437   002F7E  6E45               	movwf	(??_color_detect+1)^0,c
  5438   002F80  500C               	movf	color_detect@RGBC_n^0,w,c
  5439   002F82  5C44               	subwf	??_color_detect^0,w,c
  5440   002F84  500D               	movf	(color_detect@RGBC_n+1)^0,w,c
  5441   002F86  5845               	subwfb	(??_color_detect+1)^0,w,c
  5442   002F88  B0D8               	btfsc	status,0,c
  5443   002F8A  EFC9  F017         	goto	u2361
  5444   002F8E  EFCB  F017         	goto	u2360
  5445   002F92                     u2361:
  5446   002F92  EFF1  F017         	goto	l3494
  5447   002F96                     u2360:
  5448   002F96  0EE2               	movlw	226
  5449   002F98  2434               	addwf	(color_detect@orange+2)^0,w,c
  5450   002F9A  6E44               	movwf	??_color_detect^0,c
  5451   002F9C  0EFF               	movlw	255
  5452   002F9E  2035               	addwfc	(color_detect@orange+3)^0,w,c
  5453   002FA0  6E45               	movwf	(??_color_detect+1)^0,c
  5454   002FA2  500E               	movf	(color_detect@RGBC_n+2)^0,w,c
  5455   002FA4  5C44               	subwf	??_color_detect^0,w,c
  5456   002FA6  500F               	movf	(color_detect@RGBC_n+3)^0,w,c
  5457   002FA8  5845               	subwfb	(??_color_detect+1)^0,w,c
  5458   002FAA  B0D8               	btfsc	status,0,c
  5459   002FAC  EFDA  F017         	goto	u2371
  5460   002FB0  EFDC  F017         	goto	u2370
  5461   002FB4                     u2371:
  5462   002FB4  EFF1  F017         	goto	l3494
  5463   002FB8                     u2370:
  5464   002FB8  0E14               	movlw	20
  5465   002FBA  2434               	addwf	(color_detect@orange+2)^0,w,c
  5466   002FBC  6E44               	movwf	??_color_detect^0,c
  5467   002FBE  0E00               	movlw	0
  5468   002FC0  2035               	addwfc	(color_detect@orange+3)^0,w,c
  5469   002FC2  6E45               	movwf	(??_color_detect+1)^0,c
  5470   002FC4  5044               	movf	??_color_detect^0,w,c
  5471   002FC6  5C0E               	subwf	(color_detect@RGBC_n+2)^0,w,c
  5472   002FC8  5045               	movf	(??_color_detect+1)^0,w,c
  5473   002FCA  580F               	subwfb	(color_detect@RGBC_n+3)^0,w,c
  5474   002FCC  B0D8               	btfsc	status,0,c
  5475   002FCE  EFEB  F017         	goto	u2381
  5476   002FD2  EFED  F017         	goto	u2380
  5477   002FD6                     u2381:
  5478   002FD6  EFF1  F017         	goto	l3494
  5479   002FDA                     u2380:
  5480   002FDA                     
  5481                           ;color.c: 163:         color = 6;
  5482   002FDA  0E06               	movlw	6
  5483   002FDC  6E46               	movwf	color_detect@color^0,c
  5484                           
  5485                           ;color.c: 164:     }
  5486   002FDE  EF52  F018         	goto	l156
  5487   002FE2                     l3494:
  5488   002FE2  0EEC               	movlw	236
  5489   002FE4  243C               	addwf	(color_detect@lightBlue+4)^0,w,c
  5490   002FE6  6E44               	movwf	??_color_detect^0,c
  5491   002FE8  0EFF               	movlw	255
  5492   002FEA  203D               	addwfc	(color_detect@lightBlue+5)^0,w,c
  5493   002FEC  6E45               	movwf	(??_color_detect+1)^0,c
  5494   002FEE  5010               	movf	(color_detect@RGBC_n+4)^0,w,c
  5495   002FF0  5C44               	subwf	??_color_detect^0,w,c
  5496   002FF2  5011               	movf	(color_detect@RGBC_n+5)^0,w,c
  5497   002FF4  5845               	subwfb	(??_color_detect+1)^0,w,c
  5498   002FF6  B0D8               	btfsc	status,0,c
  5499   002FF8  EF00  F018         	goto	u2391
  5500   002FFC  EF02  F018         	goto	u2390
  5501   003000                     u2391:
  5502   003000  EF17  F018         	goto	l3500
  5503   003004                     u2390:
  5504   003004  0E1E               	movlw	30
  5505   003006  243C               	addwf	(color_detect@lightBlue+4)^0,w,c
  5506   003008  6E44               	movwf	??_color_detect^0,c
  5507   00300A  0E00               	movlw	0
  5508   00300C  203D               	addwfc	(color_detect@lightBlue+5)^0,w,c
  5509   00300E  6E45               	movwf	(??_color_detect+1)^0,c
  5510   003010  5044               	movf	??_color_detect^0,w,c
  5511   003012  5C10               	subwf	(color_detect@RGBC_n+4)^0,w,c
  5512   003014  5045               	movf	(??_color_detect+1)^0,w,c
  5513   003016  5811               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  5514   003018  B0D8               	btfsc	status,0,c
  5515   00301A  EF11  F018         	goto	u2401
  5516   00301E  EF13  F018         	goto	u2400
  5517   003022                     u2401:
  5518   003022  EF17  F018         	goto	l3500
  5519   003026                     u2400:
  5520   003026                     
  5521                           ;color.c: 167:         color = 7;
  5522   003026  0E07               	movlw	7
  5523   003028  6E46               	movwf	color_detect@color^0,c
  5524                           
  5525                           ;color.c: 168:     }
  5526   00302A  EF52  F018         	goto	l156
  5527   00302E                     l3500:
  5528   00302E  0EEC               	movlw	236
  5529   003030  243E               	addwf	color_detect@white^0,w,c
  5530   003032  6E44               	movwf	??_color_detect^0,c
  5531   003034  0EFF               	movlw	255
  5532   003036  203F               	addwfc	(color_detect@white+1)^0,w,c
  5533   003038  6E45               	movwf	(??_color_detect+1)^0,c
  5534   00303A  500C               	movf	color_detect@RGBC_n^0,w,c
  5535   00303C  5C44               	subwf	??_color_detect^0,w,c
  5536   00303E  500D               	movf	(color_detect@RGBC_n+1)^0,w,c
  5537   003040  5845               	subwfb	(??_color_detect+1)^0,w,c
  5538   003042  B0D8               	btfsc	status,0,c
  5539   003044  EF26  F018         	goto	u2411
  5540   003048  EF28  F018         	goto	u2410
  5541   00304C                     u2411:
  5542   00304C  EF4E  F018         	goto	l3508
  5543   003050                     u2410:
  5544   003050  0EEC               	movlw	236
  5545   003052  2440               	addwf	(color_detect@white+2)^0,w,c
  5546   003054  6E44               	movwf	??_color_detect^0,c
  5547   003056  0EFF               	movlw	255
  5548   003058  2041               	addwfc	(color_detect@white+3)^0,w,c
  5549   00305A  6E45               	movwf	(??_color_detect+1)^0,c
  5550   00305C  500E               	movf	(color_detect@RGBC_n+2)^0,w,c
  5551   00305E  5C44               	subwf	??_color_detect^0,w,c
  5552   003060  500F               	movf	(color_detect@RGBC_n+3)^0,w,c
  5553   003062  5845               	subwfb	(??_color_detect+1)^0,w,c
  5554   003064  B0D8               	btfsc	status,0,c
  5555   003066  EF37  F018         	goto	u2421
  5556   00306A  EF39  F018         	goto	u2420
  5557   00306E                     u2421:
  5558   00306E  EF4E  F018         	goto	l3508
  5559   003072                     u2420:
  5560   003072  0EE2               	movlw	226
  5561   003074  2442               	addwf	(color_detect@white+4)^0,w,c
  5562   003076  6E44               	movwf	??_color_detect^0,c
  5563   003078  0EFF               	movlw	255
  5564   00307A  2043               	addwfc	(color_detect@white+5)^0,w,c
  5565   00307C  6E45               	movwf	(??_color_detect+1)^0,c
  5566   00307E  5010               	movf	(color_detect@RGBC_n+4)^0,w,c
  5567   003080  5C44               	subwf	??_color_detect^0,w,c
  5568   003082  5011               	movf	(color_detect@RGBC_n+5)^0,w,c
  5569   003084  5845               	subwfb	(??_color_detect+1)^0,w,c
  5570   003086  B0D8               	btfsc	status,0,c
  5571   003088  EF48  F018         	goto	u2431
  5572   00308C  EF4A  F018         	goto	u2430
  5573   003090                     u2431:
  5574   003090  EF4E  F018         	goto	l3508
  5575   003094                     u2430:
  5576   003094                     
  5577                           ;color.c: 171:         color = 8;
  5578   003094  0E08               	movlw	8
  5579   003096  6E46               	movwf	color_detect@color^0,c
  5580                           
  5581                           ;color.c: 172:     }
  5582   003098  EF52  F018         	goto	l156
  5583   00309C                     l3508:
  5584                           
  5585                           ;color.c: 175:         color = 9;
  5586   00309C  0E09               	movlw	9
  5587   00309E  6E46               	movwf	color_detect@color^0,c
  5588   0030A0                     
  5589                           ;color.c: 176:         LATDbits.LATD7 = LATHbits.LATH3 = 1;
  5590   0030A0  8680               	bsf	128,3,c	;volatile
  5591   0030A2  8E7C               	bsf	124,7,c	;volatile
  5592   0030A4                     l156:
  5593                           
  5594                           ;color.c: 227:     return color;
  5595   0030A4  5046               	movf	color_detect@color^0,w,c
  5596   0030A6  0012               	return		;funcret
  5597   0030A8                     __end_of_color_detect:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function _color_click_init *****************
  5601 ;; Defined at:
  5602 ;;		line 7 in file "color.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;		None
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5620 ;;Total ram usage:        1 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; Hardware stack levels required when called: 9
  5623 ;; This function calls:
  5624 ;;		_I2C_2_Master_Init
  5625 ;;		_color_clear_init_interrupts
  5626 ;;		_color_writetoaddr
  5627 ;; This function is called by:
  5628 ;;		_main
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           	psect	text12
  5633   0041F6                     __ptext12:
  5634                           	callstack 0
  5635   0041F6                     _color_click_init:
  5636                           	callstack 21
  5637   0041F6                     
  5638                           ;color.c: 10:     I2C_2_Master_Init();
  5639   0041F6  EC32  F021         	call	_I2C_2_Master_Init	;wreg free
  5640   0041FA                     
  5641                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  5642   0041FA  0E01               	movlw	1
  5643   0041FC  6E0E               	movwf	color_writetoaddr@value^0,c
  5644   0041FE  0E00               	movlw	0
  5645   004200  ECCE  F021         	call	_color_writetoaddr
  5646   004204                     
  5647                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5648   004204  0E3F               	movlw	63
  5649   004206  6E15               	movwf	??_color_click_init^0,c
  5650   004208  0E55               	movlw	85
  5651   00420A                     u3917:
  5652   00420A  2EE8               	decfsz	wreg,f,c
  5653   00420C  D7FE               	bra	u3917
  5654   00420E  2E15               	decfsz	??_color_click_init^0,f,c
  5655   004210  D7FC               	bra	u3917
  5656   004212  0000               	nop	
  5657   004214                     
  5658                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  5659   004214  0E03               	movlw	3
  5660   004216  6E0E               	movwf	color_writetoaddr@value^0,c
  5661   004218  0E00               	movlw	0
  5662   00421A  ECCE  F021         	call	_color_writetoaddr
  5663   00421E                     
  5664                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  5665   00421E  0ED5               	movlw	213
  5666   004220  6E0E               	movwf	color_writetoaddr@value^0,c
  5667   004222  0E01               	movlw	1
  5668   004224  ECCE  F021         	call	_color_writetoaddr
  5669   004228                     
  5670                           ;color.c: 23:     color_clear_init_interrupts();
  5671   004228  EC93  F01F         	call	_color_clear_init_interrupts	;wreg free
  5672   00422C  0012               	return		;funcret
  5673   00422E                     __end_of_color_click_init:
  5674                           	callstack 0
  5675                           
  5676 ;; *************** function _color_clear_init_interrupts *****************
  5677 ;; Defined at:
  5678 ;;		line 27 in file "color.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;		None
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  low_threshol    2   18[COMRAM] unsigned int 
  5683 ;;  high_thresho    2   16[COMRAM] unsigned int 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg, status,2, status,0, cstack
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5694 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5696 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5697 ;;Total ram usage:        5 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; Hardware stack levels required when called: 8
  5700 ;; This function calls:
  5701 ;;		_I2C_2_Master_Start
  5702 ;;		_I2C_2_Master_Stop
  5703 ;;		_I2C_2_Master_Write
  5704 ;;		_color_writetoaddr
  5705 ;; This function is called by:
  5706 ;;		_color_click_init
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text13
  5711   003F26                     __ptext13:
  5712                           	callstack 0
  5713   003F26                     _color_clear_init_interrupts:
  5714                           	callstack 21
  5715   003F26                     
  5716                           ;color.c: 29:     I2C_2_Master_Start();
  5717   003F26  EC53  F022         	call	_I2C_2_Master_Start	;wreg free
  5718                           
  5719                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  5720   003F2A  0E52               	movlw	82
  5721   003F2C  EC3D  F022         	call	_I2C_2_Master_Write
  5722                           
  5723                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  5724   003F30  0EE6               	movlw	230
  5725   003F32  EC3D  F022         	call	_I2C_2_Master_Write
  5726                           
  5727                           ;color.c: 32:     I2C_2_Master_Stop();
  5728   003F36  EC4E  F022         	call	_I2C_2_Master_Stop	;wreg free
  5729   003F3A                     
  5730                           ;color.c: 35:     unsigned int high_threshold = ambient + 10;
  5731   003F3A  0E0A               	movlw	10
  5732   003F3C  244E               	addwf	_ambient^0,w,c
  5733   003F3E  6E11               	movwf	color_clear_init_interrupts@high_threshold^0,c
  5734   003F40  0E00               	movlw	0
  5735   003F42  204F               	addwfc	(_ambient+1)^0,w,c
  5736   003F44  6E12               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  5737   003F46                     
  5738                           ;color.c: 36:     unsigned int low_threshold = ambient - 35;
  5739   003F46  0EDD               	movlw	221
  5740   003F48  244E               	addwf	_ambient^0,w,c
  5741   003F4A  6E13               	movwf	color_clear_init_interrupts@low_threshold^0,c
  5742   003F4C  0EFF               	movlw	255
  5743   003F4E  204F               	addwfc	(_ambient+1)^0,w,c
  5744   003F50  6E14               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  5745                           
  5746                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
  5747   003F52  0E13               	movlw	19
  5748   003F54  6E0E               	movwf	color_writetoaddr@value^0,c
  5749   003F56  0E00               	movlw	0
  5750   003F58  ECCE  F021         	call	_color_writetoaddr
  5751   003F5C                     
  5752                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5753   003F5C  0E3F               	movlw	63
  5754   003F5E  6E10               	movwf	??_color_clear_init_interrupts^0,c
  5755   003F60  0E55               	movlw	85
  5756   003F62                     u3927:
  5757   003F62  2EE8               	decfsz	wreg,f,c
  5758   003F64  D7FE               	bra	u3927
  5759   003F66  2E10               	decfsz	??_color_clear_init_interrupts^0,f,c
  5760   003F68  D7FC               	bra	u3927
  5761   003F6A  0000               	nop	
  5762   003F6C                     
  5763                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
  5764   003F6C  5012               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  5765   003F6E  6E0E               	movwf	color_writetoaddr@value^0,c
  5766   003F70  0E07               	movlw	7
  5767   003F72  ECCE  F021         	call	_color_writetoaddr
  5768   003F76                     
  5769                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  5770   003F76  C011  F00E         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  5771   003F7A  0E06               	movlw	6
  5772   003F7C  ECCE  F021         	call	_color_writetoaddr
  5773   003F80                     
  5774                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
  5775   003F80  5014               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  5776   003F82  6E0E               	movwf	color_writetoaddr@value^0,c
  5777   003F84  0E05               	movlw	5
  5778   003F86  ECCE  F021         	call	_color_writetoaddr
  5779   003F8A                     
  5780                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  5781   003F8A  C013  F00E         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  5782   003F8E  0E04               	movlw	4
  5783   003F90  ECCE  F021         	call	_color_writetoaddr
  5784   003F94                     
  5785                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
  5786   003F94  0E04               	movlw	4
  5787   003F96  6E0E               	movwf	color_writetoaddr@value^0,c
  5788   003F98  0E0C               	movlw	12
  5789   003F9A  ECCE  F021         	call	_color_writetoaddr
  5790   003F9E  0012               	return		;funcret
  5791   003FA0                     __end_of_color_clear_init_interrupts:
  5792                           	callstack 0
  5793                           
  5794 ;; *************** function _color_writetoaddr *****************
  5795 ;; Defined at:
  5796 ;;		line 50 in file "color.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  address         1    wreg     unsigned char 
  5799 ;;  value           1   13[COMRAM] unsigned char 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  address         1   14[COMRAM] unsigned char 
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      void 
  5804 ;; Registers used:
  5805 ;;		wreg, status,2, status,0, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5811 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5814 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5815 ;;Total ram usage:        2 bytes
  5816 ;; Hardware stack levels used: 1
  5817 ;; Hardware stack levels required when called: 7
  5818 ;; This function calls:
  5819 ;;		_I2C_2_Master_Start
  5820 ;;		_I2C_2_Master_Stop
  5821 ;;		_I2C_2_Master_Write
  5822 ;; This function is called by:
  5823 ;;		_color_click_init
  5824 ;;		_color_clear_init_interrupts
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text14
  5829   00439C                     __ptext14:
  5830                           	callstack 0
  5831   00439C                     _color_writetoaddr:
  5832                           	callstack 22
  5833                           
  5834                           ;incstack = 0
  5835                           ;color_writetoaddr@address stored from wreg
  5836   00439C  6E0F               	movwf	color_writetoaddr@address^0,c
  5837   00439E                     
  5838                           ;color.c: 51:     I2C_2_Master_Start();
  5839   00439E  EC53  F022         	call	_I2C_2_Master_Start	;wreg free
  5840                           
  5841                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
  5842   0043A2  0E52               	movlw	82
  5843   0043A4  EC3D  F022         	call	_I2C_2_Master_Write
  5844                           
  5845                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
  5846   0043A8  500F               	movf	color_writetoaddr@address^0,w,c
  5847   0043AA  0980               	iorlw	128
  5848   0043AC  EC3D  F022         	call	_I2C_2_Master_Write
  5849                           
  5850                           ;color.c: 54:     I2C_2_Master_Write(value);
  5851   0043B0  500E               	movf	color_writetoaddr@value^0,w,c
  5852   0043B2  EC3D  F022         	call	_I2C_2_Master_Write
  5853                           
  5854                           ;color.c: 55:     I2C_2_Master_Stop();
  5855   0043B6  EC4E  F022         	call	_I2C_2_Master_Stop	;wreg free
  5856   0043BA  0012               	return		;funcret
  5857   0043BC                     __end_of_color_writetoaddr:
  5858                           	callstack 0
  5859                           
  5860 ;; *************** function _I2C_2_Master_Init *****************
  5861 ;; Defined at:
  5862 ;;		line 4 in file "i2c.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;		None
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, status,2
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5880 ;;Total ram usage:        0 bytes
  5881 ;; Hardware stack levels used: 1
  5882 ;; Hardware stack levels required when called: 5
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_color_click_init
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text15
  5891   004264                     __ptext15:
  5892                           	callstack 0
  5893   004264                     _I2C_2_Master_Init:
  5894                           	callstack 24
  5895   004264                     
  5896                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5897   004264  010E               	movlb	14	; () banked
  5898   004266  51D9               	movf	217,w,b	;volatile
  5899   004268  0BF0               	andlw	-16
  5900   00426A  0908               	iorlw	8
  5901   00426C  6FD9               	movwf	217,b	;volatile
  5902   00426E                     
  5903                           ; BSR set to: 14
  5904                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5905   00426E  8BD9               	bsf	217,5,b	;volatile
  5906                           
  5907                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5908   004270  0E9F               	movlw	159
  5909   004272  6FD6               	movwf	214,b	;volatile
  5910   004274                     
  5911                           ; BSR set to: 14
  5912                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5913   004274  8A84               	bsf	132,5,c	;volatile
  5914   004276                     
  5915                           ; BSR set to: 14
  5916                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5917   004276  8C84               	bsf	132,6,c	;volatile
  5918   004278                     
  5919                           ; BSR set to: 14
  5920                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5921   004278  9BA7               	bcf	167,5,b	;volatile
  5922   00427A                     
  5923                           ; BSR set to: 14
  5924                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5925   00427A  9DA7               	bcf	167,6,b	;volatile
  5926                           
  5927                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5928   00427C  0E1D               	movlw	29
  5929   00427E  6F1D               	movwf	29,b	;volatile
  5930                           
  5931                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5932   004280  0E1E               	movlw	30
  5933   004282  6F1C               	movwf	28,b	;volatile
  5934                           
  5935                           ;i2c.c: 18:   RD5PPS=0x1C;
  5936   004284  0E1C               	movlw	28
  5937   004286  6F6F               	movwf	111,b	;volatile
  5938                           
  5939                           ;i2c.c: 19:   RD6PPS=0x1B;
  5940   004288  0E1B               	movlw	27
  5941   00428A  6F70               	movwf	112,b	;volatile
  5942   00428C                     
  5943                           ; BSR set to: 14
  5944   00428C  0012               	return		;funcret
  5945   00428E                     __end_of_I2C_2_Master_Init:
  5946                           	callstack 0
  5947                           
  5948 ;; *************** function _color_calibration *****************
  5949 ;; Defined at:
  5950 ;;		line 230 in file "color.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;  RGBC            2   49[COMRAM] PTR struct RGBC_val
  5953 ;;		 -> main@RGBC(8), 
  5954 ;;  RGBC_n          2   51[COMRAM] PTR struct RGBC_val
  5955 ;;		 -> main@RGBC_n(8), 
  5956 ;;  red             2   53[COMRAM] PTR struct RGB_calib
  5957 ;;		 -> main@red(6), 
  5958 ;;  green           2   55[COMRAM] PTR struct RGB_calib
  5959 ;;		 -> main@green(6), 
  5960 ;;  blue            2   57[COMRAM] PTR struct RGB_calib
  5961 ;;		 -> main@blue(6), 
  5962 ;;  yellow          2   59[COMRAM] PTR struct RGB_calib
  5963 ;;		 -> main@yellow(6), 
  5964 ;;  pink            2   61[COMRAM] PTR struct RGB_calib
  5965 ;;		 -> main@pink(6), 
  5966 ;;  orange          2   63[COMRAM] PTR struct RGB_calib
  5967 ;;		 -> main@orange(6), 
  5968 ;;  lightblue       2   65[COMRAM] PTR struct RGB_calib
  5969 ;;		 -> main@lightblue(6), 
  5970 ;;  white           2   67[COMRAM] PTR struct RGB_calib
  5971 ;;		 -> main@white(6), 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;		None
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  1    wreg      void 
  5976 ;; Registers used:
  5977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5983 ;;      Params:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5985 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5986 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5987 ;;Total ram usage:       22 bytes
  5988 ;; Hardware stack levels used: 1
  5989 ;; Hardware stack levels required when called: 8
  5990 ;; This function calls:
  5991 ;;		_color_normalise
  5992 ;;		_color_read
  5993 ;;		_white_Light
  5994 ;; This function is called by:
  5995 ;;		_main
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text16
  6000   0021B8                     __ptext16:
  6001                           	callstack 0
  6002   0021B8                     _color_calibration:
  6003                           	callstack 22
  6004   0021B8                     
  6005                           ;color.c: 230: void color_calibration(RGBC_val *RGBC, RGBC_val *RGBC_n, RGB_calib *red, 
      +                          RGB_calib *green, RGB_calib *blue, RGB_calib *yellow, RGB_calib *pink, RGB_calib *orange
      +                          , RGB_calib *lightblue, RGB_calib *white);color.c: 231: {;color.c: 232:     white_Light(
      +                          1);
  6006   0021B8  0E01               	movlw	1
  6007   0021BA  ECBC  F021         	call	_white_Light
  6008   0021BE                     
  6009                           ;color.c: 233:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6010   0021BE  8680               	bsf	128,3,c	;volatile
  6011   0021C0  8E7C               	bsf	124,7,c	;volatile
  6012   0021C2                     l174:
  6013   0021C2  B48E               	btfsc	142,2,c	;volatile
  6014   0021C4  EFE6  F010         	goto	u2061
  6015   0021C8  EFE8  F010         	goto	u2060
  6016   0021CC                     u2061:
  6017   0021CC  EFE1  F010         	goto	l174
  6018   0021D0                     u2060:
  6019   0021D0                     
  6020                           ;color.c: 236:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6021   0021D0  9680               	bcf	128,3,c	;volatile
  6022   0021D2  9E7C               	bcf	124,7,c	;volatile
  6023   0021D4                     
  6024                           ;color.c: 237:     color_read(RGBC);
  6025   0021D4  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6026   0021D8  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6027   0021DC  EC54  F018         	call	_color_read	;wreg free
  6028   0021E0                     
  6029                           ;color.c: 238:     color_normalise(*RGBC, RGBC_n);
  6030   0021E0  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6031   0021E4  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6032   0021E8  EE00  F026         	lfsr	0,color_normalise@RGBC
  6033   0021EC  0E07               	movlw	7
  6034   0021EE                     u2071:
  6035   0021EE  CFDB FFEB          	movff	plusw2,plusw0
  6036   0021F2  06E8               	decf	wreg,f,c
  6037   0021F4  E2FC               	bc	u2071
  6038   0021F6  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6039   0021FA  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6040   0021FE  ECC8  F01C         	call	_color_normalise	;wreg free
  6041   002202                     
  6042                           ;color.c: 239:     red->R = RGBC_n->R;
  6043   002202  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6044   002206  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6045   00220A  C036  FFE1         	movff	color_calibration@red,fsr1l
  6046   00220E  C037  FFE2         	movff	color_calibration@red+1,fsr1h
  6047   002212  CFDE FFE6          	movff	postinc2,postinc1
  6048   002216  CFDD FFE5          	movff	postdec2,postdec1
  6049   00221A                     
  6050                           ;color.c: 240:     red->G = RGBC_n->G;
  6051   00221A  EE20 F002          	lfsr	2,2
  6052   00221E  5034               	movf	color_calibration@RGBC_n^0,w,c
  6053   002220  26D9               	addwf	fsr2l,f,c
  6054   002222  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6055   002224  22DA               	addwfc	fsr2h,f,c
  6056   002226  EE10 F002          	lfsr	1,2
  6057   00222A  5036               	movf	color_calibration@red^0,w,c
  6058   00222C  26E1               	addwf	fsr1l,f,c
  6059   00222E  5037               	movf	(color_calibration@red+1)^0,w,c
  6060   002230  22E2               	addwfc	fsr1h,f,c
  6061   002232  CFDE FFE6          	movff	postinc2,postinc1
  6062   002236  CFDD FFE5          	movff	postdec2,postdec1
  6063   00223A                     
  6064                           ;color.c: 241:     red->B = RGBC_n->B;
  6065   00223A  EE20 F004          	lfsr	2,4
  6066   00223E  5034               	movf	color_calibration@RGBC_n^0,w,c
  6067   002240  26D9               	addwf	fsr2l,f,c
  6068   002242  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6069   002244  22DA               	addwfc	fsr2h,f,c
  6070   002246  EE10 F004          	lfsr	1,4
  6071   00224A  5036               	movf	color_calibration@red^0,w,c
  6072   00224C  26E1               	addwf	fsr1l,f,c
  6073   00224E  5037               	movf	(color_calibration@red+1)^0,w,c
  6074   002250  22E2               	addwfc	fsr1h,f,c
  6075   002252  CFDE FFE6          	movff	postinc2,postinc1
  6076   002256  CFDD FFE5          	movff	postdec2,postdec1
  6077   00225A                     
  6078                           ;color.c: 243:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6079   00225A  0E29               	movlw	41
  6080   00225C  6E47               	movwf	(??_color_calibration+1)^0,c
  6081   00225E  0E96               	movlw	150
  6082   002260  6E46               	movwf	??_color_calibration^0,c
  6083   002262  0E7F               	movlw	127
  6084   002264                     u3937:
  6085   002264  2EE8               	decfsz	wreg,f,c
  6086   002266  D7FE               	bra	u3937
  6087   002268  2E46               	decfsz	??_color_calibration^0,f,c
  6088   00226A  D7FC               	bra	u3937
  6089   00226C  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6090   00226E  D7FA               	bra	u3937
  6091   002270  0000               	nop	
  6092   002272                     
  6093                           ;color.c: 244:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6094   002272  8680               	bsf	128,3,c	;volatile
  6095   002274  8E7C               	bsf	124,7,c	;volatile
  6096   002276                     l177:
  6097   002276  B48E               	btfsc	142,2,c	;volatile
  6098   002278  EF40  F011         	goto	u2081
  6099   00227C  EF42  F011         	goto	u2080
  6100   002280                     u2081:
  6101   002280  EF3B  F011         	goto	l177
  6102   002284                     u2080:
  6103   002284                     
  6104                           ;color.c: 247:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6105   002284  9680               	bcf	128,3,c	;volatile
  6106   002286  9E7C               	bcf	124,7,c	;volatile
  6107   002288                     
  6108                           ;color.c: 248:     color_read(RGBC);
  6109   002288  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6110   00228C  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6111   002290  EC54  F018         	call	_color_read	;wreg free
  6112   002294                     
  6113                           ;color.c: 249:     color_normalise(*RGBC, RGBC_n);
  6114   002294  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6115   002298  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6116   00229C  EE00  F026         	lfsr	0,color_normalise@RGBC
  6117   0022A0  0E07               	movlw	7
  6118   0022A2                     u2091:
  6119   0022A2  CFDB FFEB          	movff	plusw2,plusw0
  6120   0022A6  06E8               	decf	wreg,f,c
  6121   0022A8  E2FC               	bc	u2091
  6122   0022AA  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6123   0022AE  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6124   0022B2  ECC8  F01C         	call	_color_normalise	;wreg free
  6125   0022B6                     
  6126                           ;color.c: 250:     green->R = RGBC_n->R;
  6127   0022B6  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6128   0022BA  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6129   0022BE  C038  FFE1         	movff	color_calibration@green,fsr1l
  6130   0022C2  C039  FFE2         	movff	color_calibration@green+1,fsr1h
  6131   0022C6  CFDE FFE6          	movff	postinc2,postinc1
  6132   0022CA  CFDD FFE5          	movff	postdec2,postdec1
  6133   0022CE                     
  6134                           ;color.c: 251:     green->G = RGBC_n->G;
  6135   0022CE  EE20 F002          	lfsr	2,2
  6136   0022D2  5034               	movf	color_calibration@RGBC_n^0,w,c
  6137   0022D4  26D9               	addwf	fsr2l,f,c
  6138   0022D6  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6139   0022D8  22DA               	addwfc	fsr2h,f,c
  6140   0022DA  EE10 F002          	lfsr	1,2
  6141   0022DE  5038               	movf	color_calibration@green^0,w,c
  6142   0022E0  26E1               	addwf	fsr1l,f,c
  6143   0022E2  5039               	movf	(color_calibration@green+1)^0,w,c
  6144   0022E4  22E2               	addwfc	fsr1h,f,c
  6145   0022E6  CFDE FFE6          	movff	postinc2,postinc1
  6146   0022EA  CFDD FFE5          	movff	postdec2,postdec1
  6147   0022EE                     
  6148                           ;color.c: 252:     green->B = RGBC_n->B;
  6149   0022EE  EE20 F004          	lfsr	2,4
  6150   0022F2  5034               	movf	color_calibration@RGBC_n^0,w,c
  6151   0022F4  26D9               	addwf	fsr2l,f,c
  6152   0022F6  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6153   0022F8  22DA               	addwfc	fsr2h,f,c
  6154   0022FA  EE10 F004          	lfsr	1,4
  6155   0022FE  5038               	movf	color_calibration@green^0,w,c
  6156   002300  26E1               	addwf	fsr1l,f,c
  6157   002302  5039               	movf	(color_calibration@green+1)^0,w,c
  6158   002304  22E2               	addwfc	fsr1h,f,c
  6159   002306  CFDE FFE6          	movff	postinc2,postinc1
  6160   00230A  CFDD FFE5          	movff	postdec2,postdec1
  6161   00230E                     
  6162                           ;color.c: 254:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6163   00230E  0E29               	movlw	41
  6164   002310  6E47               	movwf	(??_color_calibration+1)^0,c
  6165   002312  0E96               	movlw	150
  6166   002314  6E46               	movwf	??_color_calibration^0,c
  6167   002316  0E7F               	movlw	127
  6168   002318                     u3947:
  6169   002318  2EE8               	decfsz	wreg,f,c
  6170   00231A  D7FE               	bra	u3947
  6171   00231C  2E46               	decfsz	??_color_calibration^0,f,c
  6172   00231E  D7FC               	bra	u3947
  6173   002320  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6174   002322  D7FA               	bra	u3947
  6175   002324  0000               	nop	
  6176   002326                     
  6177                           ;color.c: 255:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6178   002326  8680               	bsf	128,3,c	;volatile
  6179   002328  8E7C               	bsf	124,7,c	;volatile
  6180   00232A                     l180:
  6181   00232A  B48E               	btfsc	142,2,c	;volatile
  6182   00232C  EF9A  F011         	goto	u2101
  6183   002330  EF9C  F011         	goto	u2100
  6184   002334                     u2101:
  6185   002334  EF95  F011         	goto	l180
  6186   002338                     u2100:
  6187   002338                     
  6188                           ;color.c: 258:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6189   002338  9680               	bcf	128,3,c	;volatile
  6190   00233A  9E7C               	bcf	124,7,c	;volatile
  6191   00233C                     
  6192                           ;color.c: 259:     color_read(RGBC);
  6193   00233C  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6194   002340  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6195   002344  EC54  F018         	call	_color_read	;wreg free
  6196   002348                     
  6197                           ;color.c: 260:     color_normalise(*RGBC, RGBC_n);
  6198   002348  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6199   00234C  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6200   002350  EE00  F026         	lfsr	0,color_normalise@RGBC
  6201   002354  0E07               	movlw	7
  6202   002356                     u2111:
  6203   002356  CFDB FFEB          	movff	plusw2,plusw0
  6204   00235A  06E8               	decf	wreg,f,c
  6205   00235C  E2FC               	bc	u2111
  6206   00235E  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6207   002362  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6208   002366  ECC8  F01C         	call	_color_normalise	;wreg free
  6209   00236A                     
  6210                           ;color.c: 261:     blue->R = RGBC_n->R;
  6211   00236A  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6212   00236E  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6213   002372  C03A  FFE1         	movff	color_calibration@blue,fsr1l
  6214   002376  C03B  FFE2         	movff	color_calibration@blue+1,fsr1h
  6215   00237A  CFDE FFE6          	movff	postinc2,postinc1
  6216   00237E  CFDD FFE5          	movff	postdec2,postdec1
  6217   002382                     
  6218                           ;color.c: 262:     blue->G = RGBC_n->G;
  6219   002382  EE20 F002          	lfsr	2,2
  6220   002386  5034               	movf	color_calibration@RGBC_n^0,w,c
  6221   002388  26D9               	addwf	fsr2l,f,c
  6222   00238A  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6223   00238C  22DA               	addwfc	fsr2h,f,c
  6224   00238E  EE10 F002          	lfsr	1,2
  6225   002392  503A               	movf	color_calibration@blue^0,w,c
  6226   002394  26E1               	addwf	fsr1l,f,c
  6227   002396  503B               	movf	(color_calibration@blue+1)^0,w,c
  6228   002398  22E2               	addwfc	fsr1h,f,c
  6229   00239A  CFDE FFE6          	movff	postinc2,postinc1
  6230   00239E  CFDD FFE5          	movff	postdec2,postdec1
  6231   0023A2                     
  6232                           ;color.c: 263:     blue->B = RGBC_n->B;
  6233   0023A2  EE20 F004          	lfsr	2,4
  6234   0023A6  5034               	movf	color_calibration@RGBC_n^0,w,c
  6235   0023A8  26D9               	addwf	fsr2l,f,c
  6236   0023AA  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6237   0023AC  22DA               	addwfc	fsr2h,f,c
  6238   0023AE  EE10 F004          	lfsr	1,4
  6239   0023B2  503A               	movf	color_calibration@blue^0,w,c
  6240   0023B4  26E1               	addwf	fsr1l,f,c
  6241   0023B6  503B               	movf	(color_calibration@blue+1)^0,w,c
  6242   0023B8  22E2               	addwfc	fsr1h,f,c
  6243   0023BA  CFDE FFE6          	movff	postinc2,postinc1
  6244   0023BE  CFDD FFE5          	movff	postdec2,postdec1
  6245   0023C2                     
  6246                           ;color.c: 265:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6247   0023C2  0E29               	movlw	41
  6248   0023C4  6E47               	movwf	(??_color_calibration+1)^0,c
  6249   0023C6  0E96               	movlw	150
  6250   0023C8  6E46               	movwf	??_color_calibration^0,c
  6251   0023CA  0E7F               	movlw	127
  6252   0023CC                     u3957:
  6253   0023CC  2EE8               	decfsz	wreg,f,c
  6254   0023CE  D7FE               	bra	u3957
  6255   0023D0  2E46               	decfsz	??_color_calibration^0,f,c
  6256   0023D2  D7FC               	bra	u3957
  6257   0023D4  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6258   0023D6  D7FA               	bra	u3957
  6259   0023D8  0000               	nop	
  6260   0023DA                     
  6261                           ;color.c: 266:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6262   0023DA  8680               	bsf	128,3,c	;volatile
  6263   0023DC  8E7C               	bsf	124,7,c	;volatile
  6264   0023DE                     l183:
  6265   0023DE  B48E               	btfsc	142,2,c	;volatile
  6266   0023E0  EFF4  F011         	goto	u2121
  6267   0023E4  EFF6  F011         	goto	u2120
  6268   0023E8                     u2121:
  6269   0023E8  EFEF  F011         	goto	l183
  6270   0023EC                     u2120:
  6271   0023EC                     
  6272                           ;color.c: 269:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6273   0023EC  9680               	bcf	128,3,c	;volatile
  6274   0023EE  9E7C               	bcf	124,7,c	;volatile
  6275   0023F0                     
  6276                           ;color.c: 270:     color_read(RGBC);
  6277   0023F0  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6278   0023F4  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6279   0023F8  EC54  F018         	call	_color_read	;wreg free
  6280   0023FC                     
  6281                           ;color.c: 271:     color_normalise(*RGBC, RGBC_n);
  6282   0023FC  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6283   002400  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6284   002404  EE00  F026         	lfsr	0,color_normalise@RGBC
  6285   002408  0E07               	movlw	7
  6286   00240A                     u2131:
  6287   00240A  CFDB FFEB          	movff	plusw2,plusw0
  6288   00240E  06E8               	decf	wreg,f,c
  6289   002410  E2FC               	bc	u2131
  6290   002412  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6291   002416  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6292   00241A  ECC8  F01C         	call	_color_normalise	;wreg free
  6293   00241E                     
  6294                           ;color.c: 272:     yellow->R = RGBC_n->R;
  6295   00241E  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6296   002422  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6297   002426  C03C  FFE1         	movff	color_calibration@yellow,fsr1l
  6298   00242A  C03D  FFE2         	movff	color_calibration@yellow+1,fsr1h
  6299   00242E  CFDE FFE6          	movff	postinc2,postinc1
  6300   002432  CFDD FFE5          	movff	postdec2,postdec1
  6301   002436                     
  6302                           ;color.c: 273:     yellow->G = RGBC_n->G;
  6303   002436  EE20 F002          	lfsr	2,2
  6304   00243A  5034               	movf	color_calibration@RGBC_n^0,w,c
  6305   00243C  26D9               	addwf	fsr2l,f,c
  6306   00243E  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6307   002440  22DA               	addwfc	fsr2h,f,c
  6308   002442  EE10 F002          	lfsr	1,2
  6309   002446  503C               	movf	color_calibration@yellow^0,w,c
  6310   002448  26E1               	addwf	fsr1l,f,c
  6311   00244A  503D               	movf	(color_calibration@yellow+1)^0,w,c
  6312   00244C  22E2               	addwfc	fsr1h,f,c
  6313   00244E  CFDE FFE6          	movff	postinc2,postinc1
  6314   002452  CFDD FFE5          	movff	postdec2,postdec1
  6315   002456                     
  6316                           ;color.c: 274:     yellow->B = RGBC_n->B;
  6317   002456  EE20 F004          	lfsr	2,4
  6318   00245A  5034               	movf	color_calibration@RGBC_n^0,w,c
  6319   00245C  26D9               	addwf	fsr2l,f,c
  6320   00245E  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6321   002460  22DA               	addwfc	fsr2h,f,c
  6322   002462  EE10 F004          	lfsr	1,4
  6323   002466  503C               	movf	color_calibration@yellow^0,w,c
  6324   002468  26E1               	addwf	fsr1l,f,c
  6325   00246A  503D               	movf	(color_calibration@yellow+1)^0,w,c
  6326   00246C  22E2               	addwfc	fsr1h,f,c
  6327   00246E  CFDE FFE6          	movff	postinc2,postinc1
  6328   002472  CFDD FFE5          	movff	postdec2,postdec1
  6329   002476                     
  6330                           ;color.c: 276:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6331   002476  0E29               	movlw	41
  6332   002478  6E47               	movwf	(??_color_calibration+1)^0,c
  6333   00247A  0E96               	movlw	150
  6334   00247C  6E46               	movwf	??_color_calibration^0,c
  6335   00247E  0E7F               	movlw	127
  6336   002480                     u3967:
  6337   002480  2EE8               	decfsz	wreg,f,c
  6338   002482  D7FE               	bra	u3967
  6339   002484  2E46               	decfsz	??_color_calibration^0,f,c
  6340   002486  D7FC               	bra	u3967
  6341   002488  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6342   00248A  D7FA               	bra	u3967
  6343   00248C  0000               	nop	
  6344   00248E                     
  6345                           ;color.c: 277:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6346   00248E  8680               	bsf	128,3,c	;volatile
  6347   002490  8E7C               	bsf	124,7,c	;volatile
  6348   002492                     l186:
  6349   002492  B48E               	btfsc	142,2,c	;volatile
  6350   002494  EF4E  F012         	goto	u2141
  6351   002498  EF50  F012         	goto	u2140
  6352   00249C                     u2141:
  6353   00249C  EF49  F012         	goto	l186
  6354   0024A0                     u2140:
  6355   0024A0                     
  6356                           ;color.c: 280:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6357   0024A0  9680               	bcf	128,3,c	;volatile
  6358   0024A2  9E7C               	bcf	124,7,c	;volatile
  6359   0024A4                     
  6360                           ;color.c: 281:     color_read(RGBC);
  6361   0024A4  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6362   0024A8  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6363   0024AC  EC54  F018         	call	_color_read	;wreg free
  6364   0024B0                     
  6365                           ;color.c: 282:     color_normalise(*RGBC, RGBC_n);
  6366   0024B0  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6367   0024B4  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6368   0024B8  EE00  F026         	lfsr	0,color_normalise@RGBC
  6369   0024BC  0E07               	movlw	7
  6370   0024BE                     u2151:
  6371   0024BE  CFDB FFEB          	movff	plusw2,plusw0
  6372   0024C2  06E8               	decf	wreg,f,c
  6373   0024C4  E2FC               	bc	u2151
  6374   0024C6  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6375   0024CA  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6376   0024CE  ECC8  F01C         	call	_color_normalise	;wreg free
  6377   0024D2                     
  6378                           ;color.c: 283:     pink->R = RGBC_n->R;
  6379   0024D2  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6380   0024D6  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6381   0024DA  C03E  FFE1         	movff	color_calibration@pink,fsr1l
  6382   0024DE  C03F  FFE2         	movff	color_calibration@pink+1,fsr1h
  6383   0024E2  CFDE FFE6          	movff	postinc2,postinc1
  6384   0024E6  CFDD FFE5          	movff	postdec2,postdec1
  6385   0024EA                     
  6386                           ;color.c: 284:     pink->G = RGBC_n->G;
  6387   0024EA  EE20 F002          	lfsr	2,2
  6388   0024EE  5034               	movf	color_calibration@RGBC_n^0,w,c
  6389   0024F0  26D9               	addwf	fsr2l,f,c
  6390   0024F2  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6391   0024F4  22DA               	addwfc	fsr2h,f,c
  6392   0024F6  EE10 F002          	lfsr	1,2
  6393   0024FA  503E               	movf	color_calibration@pink^0,w,c
  6394   0024FC  26E1               	addwf	fsr1l,f,c
  6395   0024FE  503F               	movf	(color_calibration@pink+1)^0,w,c
  6396   002500  22E2               	addwfc	fsr1h,f,c
  6397   002502  CFDE FFE6          	movff	postinc2,postinc1
  6398   002506  CFDD FFE5          	movff	postdec2,postdec1
  6399   00250A                     
  6400                           ;color.c: 285:     pink->B = RGBC_n->B;
  6401   00250A  EE20 F004          	lfsr	2,4
  6402   00250E  5034               	movf	color_calibration@RGBC_n^0,w,c
  6403   002510  26D9               	addwf	fsr2l,f,c
  6404   002512  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6405   002514  22DA               	addwfc	fsr2h,f,c
  6406   002516  EE10 F004          	lfsr	1,4
  6407   00251A  503E               	movf	color_calibration@pink^0,w,c
  6408   00251C  26E1               	addwf	fsr1l,f,c
  6409   00251E  503F               	movf	(color_calibration@pink+1)^0,w,c
  6410   002520  22E2               	addwfc	fsr1h,f,c
  6411   002522  CFDE FFE6          	movff	postinc2,postinc1
  6412   002526  CFDD FFE5          	movff	postdec2,postdec1
  6413   00252A                     
  6414                           ;color.c: 287:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6415   00252A  0E29               	movlw	41
  6416   00252C  6E47               	movwf	(??_color_calibration+1)^0,c
  6417   00252E  0E96               	movlw	150
  6418   002530  6E46               	movwf	??_color_calibration^0,c
  6419   002532  0E7F               	movlw	127
  6420   002534                     u3977:
  6421   002534  2EE8               	decfsz	wreg,f,c
  6422   002536  D7FE               	bra	u3977
  6423   002538  2E46               	decfsz	??_color_calibration^0,f,c
  6424   00253A  D7FC               	bra	u3977
  6425   00253C  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6426   00253E  D7FA               	bra	u3977
  6427   002540  0000               	nop	
  6428   002542                     
  6429                           ;color.c: 288:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6430   002542  8680               	bsf	128,3,c	;volatile
  6431   002544  8E7C               	bsf	124,7,c	;volatile
  6432   002546                     l189:
  6433   002546  B48E               	btfsc	142,2,c	;volatile
  6434   002548  EFA8  F012         	goto	u2161
  6435   00254C  EFAA  F012         	goto	u2160
  6436   002550                     u2161:
  6437   002550  EFA3  F012         	goto	l189
  6438   002554                     u2160:
  6439   002554                     
  6440                           ;color.c: 291:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6441   002554  9680               	bcf	128,3,c	;volatile
  6442   002556  9E7C               	bcf	124,7,c	;volatile
  6443   002558                     
  6444                           ;color.c: 292:     color_read(RGBC);
  6445   002558  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6446   00255C  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6447   002560  EC54  F018         	call	_color_read	;wreg free
  6448   002564                     
  6449                           ;color.c: 293:     color_normalise(*RGBC, RGBC_n);
  6450   002564  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6451   002568  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6452   00256C  EE00  F026         	lfsr	0,color_normalise@RGBC
  6453   002570  0E07               	movlw	7
  6454   002572                     u2171:
  6455   002572  CFDB FFEB          	movff	plusw2,plusw0
  6456   002576  06E8               	decf	wreg,f,c
  6457   002578  E2FC               	bc	u2171
  6458   00257A  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6459   00257E  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6460   002582  ECC8  F01C         	call	_color_normalise	;wreg free
  6461   002586                     
  6462                           ;color.c: 294:     orange->R = RGBC_n->R;
  6463   002586  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6464   00258A  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6465   00258E  C040  FFE1         	movff	color_calibration@orange,fsr1l
  6466   002592  C041  FFE2         	movff	color_calibration@orange+1,fsr1h
  6467   002596  CFDE FFE6          	movff	postinc2,postinc1
  6468   00259A  CFDD FFE5          	movff	postdec2,postdec1
  6469   00259E                     
  6470                           ;color.c: 295:     orange->G = RGBC_n->G;
  6471   00259E  EE20 F002          	lfsr	2,2
  6472   0025A2  5034               	movf	color_calibration@RGBC_n^0,w,c
  6473   0025A4  26D9               	addwf	fsr2l,f,c
  6474   0025A6  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6475   0025A8  22DA               	addwfc	fsr2h,f,c
  6476   0025AA  EE10 F002          	lfsr	1,2
  6477   0025AE  5040               	movf	color_calibration@orange^0,w,c
  6478   0025B0  26E1               	addwf	fsr1l,f,c
  6479   0025B2  5041               	movf	(color_calibration@orange+1)^0,w,c
  6480   0025B4  22E2               	addwfc	fsr1h,f,c
  6481   0025B6  CFDE FFE6          	movff	postinc2,postinc1
  6482   0025BA  CFDD FFE5          	movff	postdec2,postdec1
  6483   0025BE                     
  6484                           ;color.c: 296:     orange->B = RGBC_n->B;
  6485   0025BE  EE20 F004          	lfsr	2,4
  6486   0025C2  5034               	movf	color_calibration@RGBC_n^0,w,c
  6487   0025C4  26D9               	addwf	fsr2l,f,c
  6488   0025C6  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6489   0025C8  22DA               	addwfc	fsr2h,f,c
  6490   0025CA  EE10 F004          	lfsr	1,4
  6491   0025CE  5040               	movf	color_calibration@orange^0,w,c
  6492   0025D0  26E1               	addwf	fsr1l,f,c
  6493   0025D2  5041               	movf	(color_calibration@orange+1)^0,w,c
  6494   0025D4  22E2               	addwfc	fsr1h,f,c
  6495   0025D6  CFDE FFE6          	movff	postinc2,postinc1
  6496   0025DA  CFDD FFE5          	movff	postdec2,postdec1
  6497   0025DE                     
  6498                           ;color.c: 298:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6499   0025DE  0E29               	movlw	41
  6500   0025E0  6E47               	movwf	(??_color_calibration+1)^0,c
  6501   0025E2  0E96               	movlw	150
  6502   0025E4  6E46               	movwf	??_color_calibration^0,c
  6503   0025E6  0E7F               	movlw	127
  6504   0025E8                     u3987:
  6505   0025E8  2EE8               	decfsz	wreg,f,c
  6506   0025EA  D7FE               	bra	u3987
  6507   0025EC  2E46               	decfsz	??_color_calibration^0,f,c
  6508   0025EE  D7FC               	bra	u3987
  6509   0025F0  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6510   0025F2  D7FA               	bra	u3987
  6511   0025F4  0000               	nop	
  6512   0025F6                     
  6513                           ;color.c: 299:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6514   0025F6  8680               	bsf	128,3,c	;volatile
  6515   0025F8  8E7C               	bsf	124,7,c	;volatile
  6516   0025FA                     l192:
  6517   0025FA  B48E               	btfsc	142,2,c	;volatile
  6518   0025FC  EF02  F013         	goto	u2181
  6519   002600  EF04  F013         	goto	u2180
  6520   002604                     u2181:
  6521   002604  EFFD  F012         	goto	l192
  6522   002608                     u2180:
  6523   002608                     
  6524                           ;color.c: 302:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6525   002608  9680               	bcf	128,3,c	;volatile
  6526   00260A  9E7C               	bcf	124,7,c	;volatile
  6527   00260C                     
  6528                           ;color.c: 303:     color_read(RGBC);
  6529   00260C  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6530   002610  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6531   002614  EC54  F018         	call	_color_read	;wreg free
  6532   002618                     
  6533                           ;color.c: 304:     color_normalise(*RGBC, RGBC_n);
  6534   002618  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6535   00261C  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6536   002620  EE00  F026         	lfsr	0,color_normalise@RGBC
  6537   002624  0E07               	movlw	7
  6538   002626                     u2191:
  6539   002626  CFDB FFEB          	movff	plusw2,plusw0
  6540   00262A  06E8               	decf	wreg,f,c
  6541   00262C  E2FC               	bc	u2191
  6542   00262E  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6543   002632  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6544   002636  ECC8  F01C         	call	_color_normalise	;wreg free
  6545   00263A                     
  6546                           ;color.c: 305:     lightblue->R = RGBC_n->R;
  6547   00263A  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6548   00263E  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6549   002642  C042  FFE1         	movff	color_calibration@lightblue,fsr1l
  6550   002646  C043  FFE2         	movff	color_calibration@lightblue+1,fsr1h
  6551   00264A  CFDE FFE6          	movff	postinc2,postinc1
  6552   00264E  CFDD FFE5          	movff	postdec2,postdec1
  6553   002652                     
  6554                           ;color.c: 306:     lightblue->G = RGBC_n->G;
  6555   002652  EE20 F002          	lfsr	2,2
  6556   002656  5034               	movf	color_calibration@RGBC_n^0,w,c
  6557   002658  26D9               	addwf	fsr2l,f,c
  6558   00265A  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6559   00265C  22DA               	addwfc	fsr2h,f,c
  6560   00265E  EE10 F002          	lfsr	1,2
  6561   002662  5042               	movf	color_calibration@lightblue^0,w,c
  6562   002664  26E1               	addwf	fsr1l,f,c
  6563   002666  5043               	movf	(color_calibration@lightblue+1)^0,w,c
  6564   002668  22E2               	addwfc	fsr1h,f,c
  6565   00266A  CFDE FFE6          	movff	postinc2,postinc1
  6566   00266E  CFDD FFE5          	movff	postdec2,postdec1
  6567   002672                     
  6568                           ;color.c: 307:     lightblue->B = RGBC_n->B;
  6569   002672  EE20 F004          	lfsr	2,4
  6570   002676  5034               	movf	color_calibration@RGBC_n^0,w,c
  6571   002678  26D9               	addwf	fsr2l,f,c
  6572   00267A  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6573   00267C  22DA               	addwfc	fsr2h,f,c
  6574   00267E  EE10 F004          	lfsr	1,4
  6575   002682  5042               	movf	color_calibration@lightblue^0,w,c
  6576   002684  26E1               	addwf	fsr1l,f,c
  6577   002686  5043               	movf	(color_calibration@lightblue+1)^0,w,c
  6578   002688  22E2               	addwfc	fsr1h,f,c
  6579   00268A  CFDE FFE6          	movff	postinc2,postinc1
  6580   00268E  CFDD FFE5          	movff	postdec2,postdec1
  6581   002692                     
  6582                           ;color.c: 309:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6583   002692  0E29               	movlw	41
  6584   002694  6E47               	movwf	(??_color_calibration+1)^0,c
  6585   002696  0E96               	movlw	150
  6586   002698  6E46               	movwf	??_color_calibration^0,c
  6587   00269A  0E7F               	movlw	127
  6588   00269C                     u3997:
  6589   00269C  2EE8               	decfsz	wreg,f,c
  6590   00269E  D7FE               	bra	u3997
  6591   0026A0  2E46               	decfsz	??_color_calibration^0,f,c
  6592   0026A2  D7FC               	bra	u3997
  6593   0026A4  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6594   0026A6  D7FA               	bra	u3997
  6595   0026A8  0000               	nop	
  6596   0026AA                     
  6597                           ;color.c: 310:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6598   0026AA  8680               	bsf	128,3,c	;volatile
  6599   0026AC  8E7C               	bsf	124,7,c	;volatile
  6600   0026AE                     l195:
  6601   0026AE  B48E               	btfsc	142,2,c	;volatile
  6602   0026B0  EF5C  F013         	goto	u2201
  6603   0026B4  EF5E  F013         	goto	u2200
  6604   0026B8                     u2201:
  6605   0026B8  EF57  F013         	goto	l195
  6606   0026BC                     u2200:
  6607   0026BC                     
  6608                           ;color.c: 313:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6609   0026BC  9680               	bcf	128,3,c	;volatile
  6610   0026BE  9E7C               	bcf	124,7,c	;volatile
  6611   0026C0                     
  6612                           ;color.c: 314:     color_read(RGBC);
  6613   0026C0  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6614   0026C4  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6615   0026C8  EC54  F018         	call	_color_read	;wreg free
  6616   0026CC                     
  6617                           ;color.c: 315:     color_normalise(*RGBC, RGBC_n);
  6618   0026CC  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6619   0026D0  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6620   0026D4  EE00  F026         	lfsr	0,color_normalise@RGBC
  6621   0026D8  0E07               	movlw	7
  6622   0026DA                     u2211:
  6623   0026DA  CFDB FFEB          	movff	plusw2,plusw0
  6624   0026DE  06E8               	decf	wreg,f,c
  6625   0026E0  E2FC               	bc	u2211
  6626   0026E2  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6627   0026E6  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6628   0026EA  ECC8  F01C         	call	_color_normalise	;wreg free
  6629   0026EE                     
  6630                           ;color.c: 316:     white->R = RGBC_n->R;
  6631   0026EE  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6632   0026F2  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6633   0026F6  C044  FFE1         	movff	color_calibration@white,fsr1l
  6634   0026FA  C045  FFE2         	movff	color_calibration@white+1,fsr1h
  6635   0026FE  CFDE FFE6          	movff	postinc2,postinc1
  6636   002702  CFDD FFE5          	movff	postdec2,postdec1
  6637   002706                     
  6638                           ;color.c: 317:     white->G = RGBC_n->G;
  6639   002706  EE20 F002          	lfsr	2,2
  6640   00270A  5034               	movf	color_calibration@RGBC_n^0,w,c
  6641   00270C  26D9               	addwf	fsr2l,f,c
  6642   00270E  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6643   002710  22DA               	addwfc	fsr2h,f,c
  6644   002712  EE10 F002          	lfsr	1,2
  6645   002716  5044               	movf	color_calibration@white^0,w,c
  6646   002718  26E1               	addwf	fsr1l,f,c
  6647   00271A  5045               	movf	(color_calibration@white+1)^0,w,c
  6648   00271C  22E2               	addwfc	fsr1h,f,c
  6649   00271E  CFDE FFE6          	movff	postinc2,postinc1
  6650   002722  CFDD FFE5          	movff	postdec2,postdec1
  6651   002726                     
  6652                           ;color.c: 318:     white->B = RGBC_n->B;
  6653   002726  EE20 F004          	lfsr	2,4
  6654   00272A  5034               	movf	color_calibration@RGBC_n^0,w,c
  6655   00272C  26D9               	addwf	fsr2l,f,c
  6656   00272E  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6657   002730  22DA               	addwfc	fsr2h,f,c
  6658   002732  EE10 F004          	lfsr	1,4
  6659   002736  5044               	movf	color_calibration@white^0,w,c
  6660   002738  26E1               	addwf	fsr1l,f,c
  6661   00273A  5045               	movf	(color_calibration@white+1)^0,w,c
  6662   00273C  22E2               	addwfc	fsr1h,f,c
  6663   00273E  CFDE FFE6          	movff	postinc2,postinc1
  6664   002742  CFDD FFE5          	movff	postdec2,postdec1
  6665   002746                     
  6666                           ;color.c: 320:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6667   002746  0E29               	movlw	41
  6668   002748  6E47               	movwf	(??_color_calibration+1)^0,c
  6669   00274A  0E96               	movlw	150
  6670   00274C  6E46               	movwf	??_color_calibration^0,c
  6671   00274E  0E7F               	movlw	127
  6672   002750                     u4007:
  6673   002750  2EE8               	decfsz	wreg,f,c
  6674   002752  D7FE               	bra	u4007
  6675   002754  2E46               	decfsz	??_color_calibration^0,f,c
  6676   002756  D7FC               	bra	u4007
  6677   002758  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6678   00275A  D7FA               	bra	u4007
  6679   00275C  0000               	nop	
  6680   00275E                     
  6681                           ;color.c: 321:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6682   00275E  8680               	bsf	128,3,c	;volatile
  6683   002760  8E7C               	bsf	124,7,c	;volatile
  6684   002762  0012               	return		;funcret
  6685   002764                     __end_of_color_calibration:
  6686                           	callstack 0
  6687                           
  6688 ;; *************** function _white_Light *****************
  6689 ;; Defined at:
  6690 ;;		line 59 in file "color.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  state           1    wreg     unsigned char 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  state           1   11[COMRAM] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  1    wreg      void 
  6697 ;; Registers used:
  6698 ;;		wreg, status,2
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6708 ;;Total ram usage:        1 bytes
  6709 ;; Hardware stack levels used: 1
  6710 ;; Hardware stack levels required when called: 5
  6711 ;; This function calls:
  6712 ;;		Nothing
  6713 ;; This function is called by:
  6714 ;;		_main
  6715 ;;		_color_calibration
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           	psect	text17
  6720   004378                     __ptext17:
  6721                           	callstack 0
  6722   004378                     _white_Light:
  6723                           	callstack 25
  6724                           
  6725                           ;incstack = 0
  6726                           ;white_Light@state stored from wreg
  6727   004378  6E0C               	movwf	white_Light@state^0,c
  6728   00437A                     
  6729                           ;color.c: 59: void white_Light(char state);color.c: 60: {;color.c: 61:     if (state){
  6730   00437A  500C               	movf	white_Light@state^0,w,c
  6731   00437C  B4D8               	btfsc	status,2,c
  6732   00437E  EFC3  F021         	goto	u1861
  6733   004382  EFC5  F021         	goto	u1860
  6734   004386                     u1861:
  6735   004386  EFCA  F021         	goto	l144
  6736   00438A                     u1860:
  6737   00438A                     
  6738                           ;color.c: 62:         LATGbits.LATG0 = 1;
  6739   00438A  807F               	bsf	127,0,c	;volatile
  6740                           
  6741                           ;color.c: 63:         LATEbits.LATE7 = 1;
  6742   00438C  8E7D               	bsf	125,7,c	;volatile
  6743                           
  6744                           ;color.c: 64:         LATAbits.LATA3 = 1;
  6745   00438E  8679               	bsf	121,3,c	;volatile
  6746                           
  6747                           ;color.c: 65:     }
  6748   004390  EFCD  F021         	goto	l146
  6749   004394                     l144:
  6750                           
  6751                           ;color.c: 67:         LATGbits.LATG0 = 0;
  6752   004394  907F               	bcf	127,0,c	;volatile
  6753                           
  6754                           ;color.c: 68:         LATEbits.LATE7 = 0;
  6755   004396  9E7D               	bcf	125,7,c	;volatile
  6756                           
  6757                           ;color.c: 69:         LATAbits.LATA3 = 0;
  6758   004398  9679               	bcf	121,3,c	;volatile
  6759   00439A                     l146:
  6760   00439A  0012               	return		;funcret
  6761   00439C                     __end_of_white_Light:
  6762                           	callstack 0
  6763                           
  6764 ;; *************** function _color_read *****************
  6765 ;; Defined at:
  6766 ;;		line 74 in file "color.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  RGBC            2   15[COMRAM] PTR struct RGBC_val
  6769 ;;		 -> main@RGBC(8), 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6783 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6784 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6785 ;;Total ram usage:        9 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; Hardware stack levels required when called: 7
  6788 ;; This function calls:
  6789 ;;		_I2C_2_Master_Read
  6790 ;;		_I2C_2_Master_RepStart
  6791 ;;		_I2C_2_Master_Start
  6792 ;;		_I2C_2_Master_Stop
  6793 ;;		_I2C_2_Master_Write
  6794 ;; This function is called by:
  6795 ;;		_main
  6796 ;;		_color_calibration
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text18
  6801   0030A8                     __ptext18:
  6802                           	callstack 0
  6803   0030A8                     _color_read:
  6804                           	callstack 23
  6805   0030A8                     
  6806                           ;color.c: 74: void color_read(RGBC_val *RGBC);color.c: 75: {;color.c: 76:  I2C_2_Master_
      +                          Start();
  6807   0030A8  EC53  F022         	call	_I2C_2_Master_Start	;wreg free
  6808                           
  6809                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  6810   0030AC  0E52               	movlw	82
  6811   0030AE  EC3D  F022         	call	_I2C_2_Master_Write
  6812                           
  6813                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x16);
  6814   0030B2  0EB6               	movlw	182
  6815   0030B4  EC3D  F022         	call	_I2C_2_Master_Write
  6816                           
  6817                           ;color.c: 79:  I2C_2_Master_RepStart();
  6818   0030B8  EC58  F022         	call	_I2C_2_Master_RepStart	;wreg free
  6819                           
  6820                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  6821   0030BC  0E53               	movlw	83
  6822   0030BE  EC3D  F022         	call	_I2C_2_Master_Write
  6823   0030C2                     
  6824                           ;color.c: 81:  RGBC->R=I2C_2_Master_Read(1);
  6825   0030C2  0E01               	movlw	1
  6826   0030C4  ECDA  F020         	call	_I2C_2_Master_Read
  6827   0030C8  6E12               	movwf	??_color_read^0,c
  6828   0030CA  6A13               	clrf	(??_color_read+1)^0,c
  6829   0030CC  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6830   0030D0  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6831   0030D4  C012  FFDE         	movff	??_color_read,postinc2
  6832   0030D8  C013  FFDD         	movff	??_color_read+1,postdec2
  6833   0030DC                     
  6834                           ;color.c: 82:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  6835   0030DC  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6836   0030E0  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6837   0030E4  CFDE F012          	movff	postinc2,??_color_read
  6838   0030E8  CFDD F013          	movff	postdec2,??_color_read+1
  6839   0030EC  0E00               	movlw	0
  6840   0030EE  ECDA  F020         	call	_I2C_2_Master_Read
  6841   0030F2  6E14               	movwf	(??_color_read+2)^0,c
  6842   0030F4  5014               	movf	(??_color_read+2)^0,w,c
  6843   0030F6  6E16               	movwf	(??_color_read+4)^0,c
  6844   0030F8  6A15               	clrf	(??_color_read+3)^0,c
  6845   0030FA  5012               	movf	??_color_read^0,w,c
  6846   0030FC  1015               	iorwf	(??_color_read+3)^0,w,c
  6847   0030FE  6E17               	movwf	(??_color_read+5)^0,c
  6848   003100  5013               	movf	(??_color_read+1)^0,w,c
  6849   003102  1016               	iorwf	(??_color_read+4)^0,w,c
  6850   003104  6E18               	movwf	(??_color_read+6)^0,c
  6851   003106  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6852   00310A  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6853   00310E  C017  FFDE         	movff	??_color_read+5,postinc2
  6854   003112  C018  FFDD         	movff	??_color_read+6,postdec2
  6855                           
  6856                           ;color.c: 83:  I2C_2_Master_Stop();
  6857   003116  EC4E  F022         	call	_I2C_2_Master_Stop	;wreg free
  6858                           
  6859                           ;color.c: 85:     I2C_2_Master_Start();
  6860   00311A  EC53  F022         	call	_I2C_2_Master_Start	;wreg free
  6861                           
  6862                           ;color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  6863   00311E  0E52               	movlw	82
  6864   003120  EC3D  F022         	call	_I2C_2_Master_Write
  6865                           
  6866                           ;color.c: 87:  I2C_2_Master_Write(0xA0 | 0x18);
  6867   003124  0EB8               	movlw	184
  6868   003126  EC3D  F022         	call	_I2C_2_Master_Write
  6869                           
  6870                           ;color.c: 88:  I2C_2_Master_RepStart();
  6871   00312A  EC58  F022         	call	_I2C_2_Master_RepStart	;wreg free
  6872                           
  6873                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  6874   00312E  0E53               	movlw	83
  6875   003130  EC3D  F022         	call	_I2C_2_Master_Write
  6876   003134                     
  6877                           ;color.c: 90:  RGBC->G=I2C_2_Master_Read(1);
  6878   003134  0E01               	movlw	1
  6879   003136  ECDA  F020         	call	_I2C_2_Master_Read
  6880   00313A  6E12               	movwf	??_color_read^0,c
  6881   00313C  6A13               	clrf	(??_color_read+1)^0,c
  6882   00313E  EE20 F002          	lfsr	2,2
  6883   003142  5010               	movf	color_read@RGBC^0,w,c
  6884   003144  26D9               	addwf	fsr2l,f,c
  6885   003146  5011               	movf	(color_read@RGBC+1)^0,w,c
  6886   003148  22DA               	addwfc	fsr2h,f,c
  6887   00314A  C012  FFDE         	movff	??_color_read,postinc2
  6888   00314E  C013  FFDD         	movff	??_color_read+1,postdec2
  6889   003152                     
  6890                           ;color.c: 91:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  6891   003152  EE20 F002          	lfsr	2,2
  6892   003156  5010               	movf	color_read@RGBC^0,w,c
  6893   003158  26D9               	addwf	fsr2l,f,c
  6894   00315A  5011               	movf	(color_read@RGBC+1)^0,w,c
  6895   00315C  22DA               	addwfc	fsr2h,f,c
  6896   00315E  CFDE F012          	movff	postinc2,??_color_read
  6897   003162  CFDD F013          	movff	postdec2,??_color_read+1
  6898   003166  0E00               	movlw	0
  6899   003168  ECDA  F020         	call	_I2C_2_Master_Read
  6900   00316C  6E14               	movwf	(??_color_read+2)^0,c
  6901   00316E  5014               	movf	(??_color_read+2)^0,w,c
  6902   003170  6E16               	movwf	(??_color_read+4)^0,c
  6903   003172  6A15               	clrf	(??_color_read+3)^0,c
  6904   003174  5012               	movf	??_color_read^0,w,c
  6905   003176  1015               	iorwf	(??_color_read+3)^0,w,c
  6906   003178  6E17               	movwf	(??_color_read+5)^0,c
  6907   00317A  5013               	movf	(??_color_read+1)^0,w,c
  6908   00317C  1016               	iorwf	(??_color_read+4)^0,w,c
  6909   00317E  6E18               	movwf	(??_color_read+6)^0,c
  6910   003180  EE20 F002          	lfsr	2,2
  6911   003184  5010               	movf	color_read@RGBC^0,w,c
  6912   003186  26D9               	addwf	fsr2l,f,c
  6913   003188  5011               	movf	(color_read@RGBC+1)^0,w,c
  6914   00318A  22DA               	addwfc	fsr2h,f,c
  6915   00318C  C017  FFDE         	movff	??_color_read+5,postinc2
  6916   003190  C018  FFDD         	movff	??_color_read+6,postdec2
  6917                           
  6918                           ;color.c: 92:  I2C_2_Master_Stop();
  6919   003194  EC4E  F022         	call	_I2C_2_Master_Stop	;wreg free
  6920                           
  6921                           ;color.c: 94:     I2C_2_Master_Start();
  6922   003198  EC53  F022         	call	_I2C_2_Master_Start	;wreg free
  6923                           
  6924                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6925   00319C  0E52               	movlw	82
  6926   00319E  EC3D  F022         	call	_I2C_2_Master_Write
  6927                           
  6928                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  6929   0031A2  0EBA               	movlw	186
  6930   0031A4  EC3D  F022         	call	_I2C_2_Master_Write
  6931                           
  6932                           ;color.c: 97:  I2C_2_Master_RepStart();
  6933   0031A8  EC58  F022         	call	_I2C_2_Master_RepStart	;wreg free
  6934                           
  6935                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6936   0031AC  0E53               	movlw	83
  6937   0031AE  EC3D  F022         	call	_I2C_2_Master_Write
  6938   0031B2                     
  6939                           ;color.c: 99:  RGBC->B=I2C_2_Master_Read(1);
  6940   0031B2  0E01               	movlw	1
  6941   0031B4  ECDA  F020         	call	_I2C_2_Master_Read
  6942   0031B8  6E12               	movwf	??_color_read^0,c
  6943   0031BA  6A13               	clrf	(??_color_read+1)^0,c
  6944   0031BC  EE20 F004          	lfsr	2,4
  6945   0031C0  5010               	movf	color_read@RGBC^0,w,c
  6946   0031C2  26D9               	addwf	fsr2l,f,c
  6947   0031C4  5011               	movf	(color_read@RGBC+1)^0,w,c
  6948   0031C6  22DA               	addwfc	fsr2h,f,c
  6949   0031C8  C012  FFDE         	movff	??_color_read,postinc2
  6950   0031CC  C013  FFDD         	movff	??_color_read+1,postdec2
  6951   0031D0                     
  6952                           ;color.c: 100:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  6953   0031D0  EE20 F004          	lfsr	2,4
  6954   0031D4  5010               	movf	color_read@RGBC^0,w,c
  6955   0031D6  26D9               	addwf	fsr2l,f,c
  6956   0031D8  5011               	movf	(color_read@RGBC+1)^0,w,c
  6957   0031DA  22DA               	addwfc	fsr2h,f,c
  6958   0031DC  CFDE F012          	movff	postinc2,??_color_read
  6959   0031E0  CFDD F013          	movff	postdec2,??_color_read+1
  6960   0031E4  0E00               	movlw	0
  6961   0031E6  ECDA  F020         	call	_I2C_2_Master_Read
  6962   0031EA  6E14               	movwf	(??_color_read+2)^0,c
  6963   0031EC  5014               	movf	(??_color_read+2)^0,w,c
  6964   0031EE  6E16               	movwf	(??_color_read+4)^0,c
  6965   0031F0  6A15               	clrf	(??_color_read+3)^0,c
  6966   0031F2  5012               	movf	??_color_read^0,w,c
  6967   0031F4  1015               	iorwf	(??_color_read+3)^0,w,c
  6968   0031F6  6E17               	movwf	(??_color_read+5)^0,c
  6969   0031F8  5013               	movf	(??_color_read+1)^0,w,c
  6970   0031FA  1016               	iorwf	(??_color_read+4)^0,w,c
  6971   0031FC  6E18               	movwf	(??_color_read+6)^0,c
  6972   0031FE  EE20 F004          	lfsr	2,4
  6973   003202  5010               	movf	color_read@RGBC^0,w,c
  6974   003204  26D9               	addwf	fsr2l,f,c
  6975   003206  5011               	movf	(color_read@RGBC+1)^0,w,c
  6976   003208  22DA               	addwfc	fsr2h,f,c
  6977   00320A  C017  FFDE         	movff	??_color_read+5,postinc2
  6978   00320E  C018  FFDD         	movff	??_color_read+6,postdec2
  6979                           
  6980                           ;color.c: 101:  I2C_2_Master_Stop();
  6981   003212  EC4E  F022         	call	_I2C_2_Master_Stop	;wreg free
  6982                           
  6983                           ;color.c: 103:     I2C_2_Master_Start();
  6984   003216  EC53  F022         	call	_I2C_2_Master_Start	;wreg free
  6985                           
  6986                           ;color.c: 104:  I2C_2_Master_Write(0x52 | 0x00);
  6987   00321A  0E52               	movlw	82
  6988   00321C  EC3D  F022         	call	_I2C_2_Master_Write
  6989                           
  6990                           ;color.c: 105:  I2C_2_Master_Write(0xA0 | 0x14);
  6991   003220  0EB4               	movlw	180
  6992   003222  EC3D  F022         	call	_I2C_2_Master_Write
  6993                           
  6994                           ;color.c: 106:  I2C_2_Master_RepStart();
  6995   003226  EC58  F022         	call	_I2C_2_Master_RepStart	;wreg free
  6996                           
  6997                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x01);
  6998   00322A  0E53               	movlw	83
  6999   00322C  EC3D  F022         	call	_I2C_2_Master_Write
  7000   003230                     
  7001                           ;color.c: 108:  RGBC->C=I2C_2_Master_Read(1);
  7002   003230  0E01               	movlw	1
  7003   003232  ECDA  F020         	call	_I2C_2_Master_Read
  7004   003236  6E12               	movwf	??_color_read^0,c
  7005   003238  6A13               	clrf	(??_color_read+1)^0,c
  7006   00323A  EE20 F006          	lfsr	2,6
  7007   00323E  5010               	movf	color_read@RGBC^0,w,c
  7008   003240  26D9               	addwf	fsr2l,f,c
  7009   003242  5011               	movf	(color_read@RGBC+1)^0,w,c
  7010   003244  22DA               	addwfc	fsr2h,f,c
  7011   003246  C012  FFDE         	movff	??_color_read,postinc2
  7012   00324A  C013  FFDD         	movff	??_color_read+1,postdec2
  7013   00324E                     
  7014                           ;color.c: 109:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  7015   00324E  EE20 F006          	lfsr	2,6
  7016   003252  5010               	movf	color_read@RGBC^0,w,c
  7017   003254  26D9               	addwf	fsr2l,f,c
  7018   003256  5011               	movf	(color_read@RGBC+1)^0,w,c
  7019   003258  22DA               	addwfc	fsr2h,f,c
  7020   00325A  CFDE F012          	movff	postinc2,??_color_read
  7021   00325E  CFDD F013          	movff	postdec2,??_color_read+1
  7022   003262  0E00               	movlw	0
  7023   003264  ECDA  F020         	call	_I2C_2_Master_Read
  7024   003268  6E14               	movwf	(??_color_read+2)^0,c
  7025   00326A  5014               	movf	(??_color_read+2)^0,w,c
  7026   00326C  6E16               	movwf	(??_color_read+4)^0,c
  7027   00326E  6A15               	clrf	(??_color_read+3)^0,c
  7028   003270  5012               	movf	??_color_read^0,w,c
  7029   003272  1015               	iorwf	(??_color_read+3)^0,w,c
  7030   003274  6E17               	movwf	(??_color_read+5)^0,c
  7031   003276  5013               	movf	(??_color_read+1)^0,w,c
  7032   003278  1016               	iorwf	(??_color_read+4)^0,w,c
  7033   00327A  6E18               	movwf	(??_color_read+6)^0,c
  7034   00327C  EE20 F006          	lfsr	2,6
  7035   003280  5010               	movf	color_read@RGBC^0,w,c
  7036   003282  26D9               	addwf	fsr2l,f,c
  7037   003284  5011               	movf	(color_read@RGBC+1)^0,w,c
  7038   003286  22DA               	addwfc	fsr2h,f,c
  7039   003288  C017  FFDE         	movff	??_color_read+5,postinc2
  7040   00328C  C018  FFDD         	movff	??_color_read+6,postdec2
  7041                           
  7042                           ;color.c: 110:  I2C_2_Master_Stop();
  7043   003290  EC4E  F022         	call	_I2C_2_Master_Stop	;wreg free
  7044   003294  0012               	return		;funcret
  7045   003296                     __end_of_color_read:
  7046                           	callstack 0
  7047                           
  7048 ;; *************** function _I2C_2_Master_Write *****************
  7049 ;; Defined at:
  7050 ;;		line 45 in file "i2c.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  data_byte       1    wreg     unsigned char 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  data_byte       1   12[COMRAM] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7068 ;;Total ram usage:        1 bytes
  7069 ;; Hardware stack levels used: 1
  7070 ;; Hardware stack levels required when called: 6
  7071 ;; This function calls:
  7072 ;;		_I2C_2_Master_Idle
  7073 ;; This function is called by:
  7074 ;;		_color_clear_init_interrupts
  7075 ;;		_color_writetoaddr
  7076 ;;		_color_read
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text19
  7081   00447A                     __ptext19:
  7082                           	callstack 0
  7083   00447A                     _I2C_2_Master_Write:
  7084                           	callstack 23
  7085                           
  7086                           ;incstack = 0
  7087                           ;I2C_2_Master_Write@data_byte stored from wreg
  7088   00447A  6E0D               	movwf	I2C_2_Master_Write@data_byte^0,c
  7089   00447C                     
  7090                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7091   00447C  EC5B  F021         	call	_I2C_2_Master_Idle	;wreg free
  7092   004480                     
  7093                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7094   004480  C00D  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7095   004484  0012               	return		;funcret
  7096   004486                     __end_of_I2C_2_Master_Write:
  7097                           	callstack 0
  7098                           
  7099 ;; *************** function _I2C_2_Master_Stop *****************
  7100 ;; Defined at:
  7101 ;;		line 39 in file "i2c.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      void 
  7108 ;; Registers used:
  7109 ;;		wreg, status,2, status,0, cstack
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7119 ;;Total ram usage:        0 bytes
  7120 ;; Hardware stack levels used: 1
  7121 ;; Hardware stack levels required when called: 6
  7122 ;; This function calls:
  7123 ;;		_I2C_2_Master_Idle
  7124 ;; This function is called by:
  7125 ;;		_color_clear_init_interrupts
  7126 ;;		_color_writetoaddr
  7127 ;;		_color_read
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           	psect	text20
  7132   00449C                     __ptext20:
  7133                           	callstack 0
  7134   00449C                     _I2C_2_Master_Stop:
  7135                           	callstack 23
  7136   00449C                     
  7137                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7138   00449C  EC5B  F021         	call	_I2C_2_Master_Idle	;wreg free
  7139   0044A0                     
  7140                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7141   0044A0  010E               	movlb	14	; () banked
  7142   0044A2  85DA               	bsf	218,2,b	;volatile
  7143   0044A4                     
  7144                           ; BSR set to: 14
  7145   0044A4  0012               	return		;funcret
  7146   0044A6                     __end_of_I2C_2_Master_Stop:
  7147                           	callstack 0
  7148                           
  7149 ;; *************** function _I2C_2_Master_Start *****************
  7150 ;; Defined at:
  7151 ;;		line 27 in file "i2c.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;		None
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;		None
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  1    wreg      void 
  7158 ;; Registers used:
  7159 ;;		wreg, status,2, status,0, cstack
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;Total ram usage:        0 bytes
  7170 ;; Hardware stack levels used: 1
  7171 ;; Hardware stack levels required when called: 6
  7172 ;; This function calls:
  7173 ;;		_I2C_2_Master_Idle
  7174 ;; This function is called by:
  7175 ;;		_color_clear_init_interrupts
  7176 ;;		_color_writetoaddr
  7177 ;;		_color_read
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           	psect	text21
  7182   0044A6                     __ptext21:
  7183                           	callstack 0
  7184   0044A6                     _I2C_2_Master_Start:
  7185                           	callstack 23
  7186   0044A6                     
  7187                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7188   0044A6  EC5B  F021         	call	_I2C_2_Master_Idle	;wreg free
  7189   0044AA                     
  7190                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7191   0044AA  010E               	movlb	14	; () banked
  7192   0044AC  81DA               	bsf	218,0,b	;volatile
  7193   0044AE                     
  7194                           ; BSR set to: 14
  7195   0044AE  0012               	return		;funcret
  7196   0044B0                     __end_of_I2C_2_Master_Start:
  7197                           	callstack 0
  7198                           
  7199 ;; *************** function _I2C_2_Master_RepStart *****************
  7200 ;; Defined at:
  7201 ;;		line 33 in file "i2c.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;		None
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;		None
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1    wreg      void 
  7208 ;; Registers used:
  7209 ;;		wreg, status,2, status,0, cstack
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7219 ;;Total ram usage:        0 bytes
  7220 ;; Hardware stack levels used: 1
  7221 ;; Hardware stack levels required when called: 6
  7222 ;; This function calls:
  7223 ;;		_I2C_2_Master_Idle
  7224 ;; This function is called by:
  7225 ;;		_color_read
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text22
  7230   0044B0                     __ptext22:
  7231                           	callstack 0
  7232   0044B0                     _I2C_2_Master_RepStart:
  7233                           	callstack 23
  7234   0044B0                     
  7235                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7236   0044B0  EC5B  F021         	call	_I2C_2_Master_Idle	;wreg free
  7237   0044B4                     
  7238                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7239   0044B4  010E               	movlb	14	; () banked
  7240   0044B6  83DA               	bsf	218,1,b	;volatile
  7241   0044B8                     
  7242                           ; BSR set to: 14
  7243   0044B8  0012               	return		;funcret
  7244   0044BA                     __end_of_I2C_2_Master_RepStart:
  7245                           	callstack 0
  7246                           
  7247 ;; *************** function _I2C_2_Master_Read *****************
  7248 ;; Defined at:
  7249 ;;		line 51 in file "i2c.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  ack             1    wreg     unsigned char 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  ack             1   13[COMRAM] unsigned char 
  7254 ;;  tmp             1   14[COMRAM] unsigned char 
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  1    wreg      unsigned char 
  7257 ;; Registers used:
  7258 ;;		wreg, status,2, status,0, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7267 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7268 ;;Total ram usage:        3 bytes
  7269 ;; Hardware stack levels used: 1
  7270 ;; Hardware stack levels required when called: 6
  7271 ;; This function calls:
  7272 ;;		_I2C_2_Master_Idle
  7273 ;; This function is called by:
  7274 ;;		_color_read
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text23
  7279   0041B4                     __ptext23:
  7280                           	callstack 0
  7281   0041B4                     _I2C_2_Master_Read:
  7282                           	callstack 23
  7283                           
  7284                           ; BSR set to: 14
  7285                           ;incstack = 0
  7286                           ;I2C_2_Master_Read@ack stored from wreg
  7287   0041B4  6E0E               	movwf	I2C_2_Master_Read@ack^0,c
  7288   0041B6                     
  7289                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7290   0041B6  EC5B  F021         	call	_I2C_2_Master_Idle	;wreg free
  7291   0041BA                     
  7292                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7293   0041BA  010E               	movlb	14	; () banked
  7294   0041BC  87DA               	bsf	218,3,b	;volatile
  7295                           
  7296                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7297   0041BE  EC5B  F021         	call	_I2C_2_Master_Idle	;wreg free
  7298   0041C2                     
  7299                           ;i2c.c: 57:   tmp = SSP2BUF;
  7300   0041C2  CED5 F00F          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7301                           
  7302                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7303   0041C6  EC5B  F021         	call	_I2C_2_Master_Idle	;wreg free
  7304   0041CA                     
  7305                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7306   0041CA  500E               	movf	I2C_2_Master_Read@ack^0,w,c
  7307   0041CC  B4D8               	btfsc	status,2,c
  7308   0041CE  EFEB  F020         	goto	u1611
  7309   0041D2  EFEF  F020         	goto	u1610
  7310   0041D6                     u1611:
  7311   0041D6  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  7312   0041D8  2A0D               	incf	??_I2C_2_Master_Read^0,f,c
  7313   0041DA  EFF0  F020         	goto	u1628
  7314   0041DE                     u1610:
  7315   0041DE  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  7316   0041E0                     u1628:
  7317   0041E0  3A0D               	swapf	??_I2C_2_Master_Read^0,f,c
  7318   0041E2  460D               	rlncf	??_I2C_2_Master_Read^0,f,c
  7319   0041E4  010E               	movlb	14	; () banked
  7320   0041E6  51DA               	movf	218,w,b	;volatile
  7321   0041E8  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  7322   0041EA  0BDF               	andlw	-33
  7323   0041EC  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  7324   0041EE  6FDA               	movwf	218,b	;volatile
  7325   0041F0                     
  7326                           ; BSR set to: 14
  7327                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7328   0041F0  89DA               	bsf	218,4,b	;volatile
  7329   0041F2                     
  7330                           ; BSR set to: 14
  7331                           ;i2c.c: 61:   return tmp;
  7332   0041F2  500F               	movf	I2C_2_Master_Read@tmp^0,w,c
  7333   0041F4                     
  7334                           ; BSR set to: 14
  7335   0041F4  0012               	return		;funcret
  7336   0041F6                     __end_of_I2C_2_Master_Read:
  7337                           	callstack 0
  7338                           
  7339 ;; *************** function _I2C_2_Master_Idle *****************
  7340 ;; Defined at:
  7341 ;;		line 22 in file "i2c.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;		None
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;		None
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  1    wreg      void 
  7348 ;; Registers used:
  7349 ;;		wreg, status,2, status,0
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7359 ;;Total ram usage:        1 bytes
  7360 ;; Hardware stack levels used: 1
  7361 ;; Hardware stack levels required when called: 5
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_I2C_2_Master_Start
  7366 ;;		_I2C_2_Master_RepStart
  7367 ;;		_I2C_2_Master_Stop
  7368 ;;		_I2C_2_Master_Write
  7369 ;;		_I2C_2_Master_Read
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           	psect	text24
  7374   0042B6                     __ptext24:
  7375                           	callstack 0
  7376   0042B6                     _I2C_2_Master_Idle:
  7377                           	callstack 23
  7378   0042B6                     l228:
  7379   0042B6  010E               	movlb	14	; () banked
  7380   0042B8  B5D8               	btfsc	216,2,b	;volatile
  7381   0042BA  EF61  F021         	goto	u1481
  7382   0042BE  EF63  F021         	goto	u1480
  7383   0042C2                     u1481:
  7384   0042C2  EF5B  F021         	goto	l228
  7385   0042C6                     u1480:
  7386   0042C6                     
  7387                           ; BSR set to: 14
  7388   0042C6  CEDA F00C          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7389   0042CA  0E1F               	movlw	31
  7390   0042CC  160C               	andwf	??_I2C_2_Master_Idle^0,f,c
  7391   0042CE  A4D8               	btfss	status,2,c
  7392   0042D0  EF6C  F021         	goto	u1491
  7393   0042D4  EF6E  F021         	goto	u1490
  7394   0042D8                     u1491:
  7395   0042D8  EF5B  F021         	goto	l228
  7396   0042DC                     u1490:
  7397   0042DC                     
  7398                           ; BSR set to: 14
  7399   0042DC  0012               	return		;funcret
  7400   0042DE                     __end_of_I2C_2_Master_Idle:
  7401                           	callstack 0
  7402                           
  7403 ;; *************** function _color_normalise *****************
  7404 ;; Defined at:
  7405 ;;		line 114 in file "color.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  RGBC            8   37[COMRAM] struct RGBC_val
  7408 ;;  RGBC_n          2   45[COMRAM] PTR struct RGBC_val
  7409 ;;		 -> main@RGBC_n(8), 
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;		None
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1    wreg      void 
  7414 ;; Registers used:
  7415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7421 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7425 ;;Total ram usage:       12 bytes
  7426 ;; Hardware stack levels used: 1
  7427 ;; Hardware stack levels required when called: 6
  7428 ;; This function calls:
  7429 ;;		___aldiv
  7430 ;;		___lmul
  7431 ;; This function is called by:
  7432 ;;		_main
  7433 ;;		_color_calibration
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text25
  7438   003990                     __ptext25:
  7439                           	callstack 0
  7440   003990                     _color_normalise:
  7441                           	callstack 24
  7442   003990                     
  7443                           ;color.c: 132:     RGBC_n->C = RGBC.C;
  7444   003990  EE20 F006          	lfsr	2,6
  7445   003994  502E               	movf	color_normalise@RGBC_n^0,w,c
  7446   003996  26D9               	addwf	fsr2l,f,c
  7447   003998  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  7448   00399A  22DA               	addwfc	fsr2h,f,c
  7449   00399C  C02C  FFDE         	movff	color_normalise@RGBC+6,postinc2
  7450   0039A0  C02D  FFDD         	movff	color_normalise@RGBC+7,postdec2
  7451   0039A4                     
  7452                           ;color.c: 133:     RGBC_n->R = 1000L*RGBC.R/(RGBC.R+RGBC.G+RGBC.B);
  7453   0039A4  C026  F00C         	movff	color_normalise@RGBC,___lmul@multiplier
  7454   0039A8  C027  F00D         	movff	color_normalise@RGBC+1,___lmul@multiplier+1
  7455   0039AC  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  7456   0039AE  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  7457   0039B0  0EE8               	movlw	232
  7458   0039B2  6E10               	movwf	___lmul@multiplicand^0,c
  7459   0039B4  0E03               	movlw	3
  7460   0039B6  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7461   0039B8  0E00               	movlw	0
  7462   0039BA  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7463   0039BC  0E00               	movlw	0
  7464   0039BE  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7465   0039C0  EC7E  F020         	call	___lmul	;wreg free
  7466   0039C4  C00C  F018         	movff	?___lmul,___aldiv@dividend
  7467   0039C8  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  7468   0039CC  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  7469   0039D0  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  7470   0039D4  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  7471   0039D6  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  7472   0039D8  6E30               	movwf	??_color_normalise^0,c
  7473   0039DA  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  7474   0039DC  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  7475   0039DE  6E31               	movwf	(??_color_normalise+1)^0,c
  7476   0039E0  5026               	movf	color_normalise@RGBC^0,w,c
  7477   0039E2  2630               	addwf	??_color_normalise^0,f,c
  7478   0039E4  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  7479   0039E6  2231               	addwfc	(??_color_normalise+1)^0,f,c
  7480   0039E8  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  7481   0039EC  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  7482   0039F0  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  7483   0039F2  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  7484   0039F4  EC6D  F01D         	call	___aldiv	;wreg free
  7485   0039F8  C02E  FFD9         	movff	color_normalise@RGBC_n,fsr2l
  7486   0039FC  C02F  FFDA         	movff	color_normalise@RGBC_n+1,fsr2h
  7487   003A00  C018  FFDE         	movff	?___aldiv,postinc2
  7488   003A04  C019  FFDD         	movff	?___aldiv+1,postdec2
  7489   003A08                     
  7490                           ;color.c: 134:     RGBC_n->G = 1000L*RGBC.G/(RGBC.R+RGBC.G+RGBC.B);
  7491   003A08  C028  F00C         	movff	color_normalise@RGBC+2,___lmul@multiplier
  7492   003A0C  C029  F00D         	movff	color_normalise@RGBC+3,___lmul@multiplier+1
  7493   003A10  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  7494   003A12  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  7495   003A14  0EE8               	movlw	232
  7496   003A16  6E10               	movwf	___lmul@multiplicand^0,c
  7497   003A18  0E03               	movlw	3
  7498   003A1A  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7499   003A1C  0E00               	movlw	0
  7500   003A1E  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7501   003A20  0E00               	movlw	0
  7502   003A22  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7503   003A24  EC7E  F020         	call	___lmul	;wreg free
  7504   003A28  C00C  F018         	movff	?___lmul,___aldiv@dividend
  7505   003A2C  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  7506   003A30  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  7507   003A34  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  7508   003A38  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  7509   003A3A  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  7510   003A3C  6E30               	movwf	??_color_normalise^0,c
  7511   003A3E  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  7512   003A40  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  7513   003A42  6E31               	movwf	(??_color_normalise+1)^0,c
  7514   003A44  5026               	movf	color_normalise@RGBC^0,w,c
  7515   003A46  2630               	addwf	??_color_normalise^0,f,c
  7516   003A48  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  7517   003A4A  2231               	addwfc	(??_color_normalise+1)^0,f,c
  7518   003A4C  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  7519   003A50  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  7520   003A54  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  7521   003A56  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  7522   003A58  EC6D  F01D         	call	___aldiv	;wreg free
  7523   003A5C  EE20 F002          	lfsr	2,2
  7524   003A60  502E               	movf	color_normalise@RGBC_n^0,w,c
  7525   003A62  26D9               	addwf	fsr2l,f,c
  7526   003A64  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  7527   003A66  22DA               	addwfc	fsr2h,f,c
  7528   003A68  C018  FFDE         	movff	?___aldiv,postinc2
  7529   003A6C  C019  FFDD         	movff	?___aldiv+1,postdec2
  7530   003A70                     
  7531                           ;color.c: 135:     RGBC_n->B = 1000L*RGBC.B/(RGBC.R+RGBC.G+RGBC.B);
  7532   003A70  C02A  F00C         	movff	color_normalise@RGBC+4,___lmul@multiplier
  7533   003A74  C02B  F00D         	movff	color_normalise@RGBC+5,___lmul@multiplier+1
  7534   003A78  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  7535   003A7A  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  7536   003A7C  0EE8               	movlw	232
  7537   003A7E  6E10               	movwf	___lmul@multiplicand^0,c
  7538   003A80  0E03               	movlw	3
  7539   003A82  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7540   003A84  0E00               	movlw	0
  7541   003A86  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7542   003A88  0E00               	movlw	0
  7543   003A8A  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7544   003A8C  EC7E  F020         	call	___lmul	;wreg free
  7545   003A90  C00C  F018         	movff	?___lmul,___aldiv@dividend
  7546   003A94  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  7547   003A98  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  7548   003A9C  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  7549   003AA0  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  7550   003AA2  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  7551   003AA4  6E30               	movwf	??_color_normalise^0,c
  7552   003AA6  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  7553   003AA8  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  7554   003AAA  6E31               	movwf	(??_color_normalise+1)^0,c
  7555   003AAC  5026               	movf	color_normalise@RGBC^0,w,c
  7556   003AAE  2630               	addwf	??_color_normalise^0,f,c
  7557   003AB0  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  7558   003AB2  2231               	addwfc	(??_color_normalise+1)^0,f,c
  7559   003AB4  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  7560   003AB8  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  7561   003ABC  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  7562   003ABE  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  7563   003AC0  EC6D  F01D         	call	___aldiv	;wreg free
  7564   003AC4  EE20 F004          	lfsr	2,4
  7565   003AC8  502E               	movf	color_normalise@RGBC_n^0,w,c
  7566   003ACA  26D9               	addwf	fsr2l,f,c
  7567   003ACC  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  7568   003ACE  22DA               	addwfc	fsr2h,f,c
  7569   003AD0  C018  FFDE         	movff	?___aldiv,postinc2
  7570   003AD4  C019  FFDD         	movff	?___aldiv+1,postdec2
  7571   003AD8  0012               	return		;funcret
  7572   003ADA                     __end_of_color_normalise:
  7573                           	callstack 0
  7574                           
  7575 ;; *************** function ___lmul *****************
  7576 ;; Defined at:
  7577 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  multiplier      4   11[COMRAM] unsigned long 
  7580 ;;  multiplicand    4   15[COMRAM] unsigned long 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;  product         4   19[COMRAM] unsigned long 
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  4   11[COMRAM] unsigned long 
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7592 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7593 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7595 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7596 ;;Total ram usage:       12 bytes
  7597 ;; Hardware stack levels used: 1
  7598 ;; Hardware stack levels required when called: 5
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_color_normalise
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text26
  7607   0040FC                     __ptext26:
  7608                           	callstack 0
  7609   0040FC                     ___lmul:
  7610                           	callstack 24
  7611   0040FC  0E00               	movlw	0
  7612   0040FE  6E14               	movwf	___lmul@product^0,c
  7613   004100  0E00               	movlw	0
  7614   004102  6E15               	movwf	(___lmul@product+1)^0,c
  7615   004104  0E00               	movlw	0
  7616   004106  6E16               	movwf	(___lmul@product+2)^0,c
  7617   004108  0E00               	movlw	0
  7618   00410A  6E17               	movwf	(___lmul@product+3)^0,c
  7619   00410C                     l2934:
  7620   00410C  A00C               	btfss	___lmul@multiplier^0,0,c
  7621   00410E  EF8B  F020         	goto	u1781
  7622   004112  EF8D  F020         	goto	u1780
  7623   004116                     u1781:
  7624   004116  EF95  F020         	goto	l2938
  7625   00411A                     u1780:
  7626   00411A  5010               	movf	___lmul@multiplicand^0,w,c
  7627   00411C  2614               	addwf	___lmul@product^0,f,c
  7628   00411E  5011               	movf	(___lmul@multiplicand+1)^0,w,c
  7629   004120  2215               	addwfc	(___lmul@product+1)^0,f,c
  7630   004122  5012               	movf	(___lmul@multiplicand+2)^0,w,c
  7631   004124  2216               	addwfc	(___lmul@product+2)^0,f,c
  7632   004126  5013               	movf	(___lmul@multiplicand+3)^0,w,c
  7633   004128  2217               	addwfc	(___lmul@product+3)^0,f,c
  7634   00412A                     l2938:
  7635   00412A  90D8               	bcf	status,0,c
  7636   00412C  3610               	rlcf	___lmul@multiplicand^0,f,c
  7637   00412E  3611               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7638   004130  3612               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7639   004132  3613               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7640   004134  90D8               	bcf	status,0,c
  7641   004136  320F               	rrcf	(___lmul@multiplier+3)^0,f,c
  7642   004138  320E               	rrcf	(___lmul@multiplier+2)^0,f,c
  7643   00413A  320D               	rrcf	(___lmul@multiplier+1)^0,f,c
  7644   00413C  320C               	rrcf	___lmul@multiplier^0,f,c
  7645   00413E  500C               	movf	___lmul@multiplier^0,w,c
  7646   004140  100D               	iorwf	(___lmul@multiplier+1)^0,w,c
  7647   004142  100E               	iorwf	(___lmul@multiplier+2)^0,w,c
  7648   004144  100F               	iorwf	(___lmul@multiplier+3)^0,w,c
  7649   004146  A4D8               	btfss	status,2,c
  7650   004148  EFA8  F020         	goto	u1791
  7651   00414C  EFAA  F020         	goto	u1790
  7652   004150                     u1791:
  7653   004150  EF86  F020         	goto	l2934
  7654   004154                     u1790:
  7655   004154  C014  F00C         	movff	___lmul@product,?___lmul
  7656   004158  C015  F00D         	movff	___lmul@product+1,?___lmul+1
  7657   00415C  C016  F00E         	movff	___lmul@product+2,?___lmul+2
  7658   004160  C017  F00F         	movff	___lmul@product+3,?___lmul+3
  7659   004164  0012               	return		;funcret
  7660   004166                     __end_of___lmul:
  7661                           	callstack 0
  7662                           
  7663 ;; *************** function ___aldiv *****************
  7664 ;; Defined at:
  7665 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  dividend        4   23[COMRAM] long 
  7668 ;;  divisor         4   27[COMRAM] long 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  quotient        4   33[COMRAM] long 
  7671 ;;  sign            1   32[COMRAM] unsigned char 
  7672 ;;  counter         1   31[COMRAM] unsigned char 
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  4   23[COMRAM] long 
  7675 ;; Registers used:
  7676 ;;		wreg, status,2, status,0
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7682 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7683 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7685 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7686 ;;Total ram usage:       14 bytes
  7687 ;; Hardware stack levels used: 1
  7688 ;; Hardware stack levels required when called: 5
  7689 ;; This function calls:
  7690 ;;		Nothing
  7691 ;; This function is called by:
  7692 ;;		_color_normalise
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text27
  7697   003ADA                     __ptext27:
  7698                           	callstack 0
  7699   003ADA                     ___aldiv:
  7700                           	callstack 24
  7701   003ADA  0E00               	movlw	0
  7702   003ADC  6E21               	movwf	___aldiv@sign^0,c
  7703   003ADE  BE1F               	btfsc	(___aldiv@divisor+3)^0,7,c
  7704   003AE0  EF76  F01D         	goto	u1800
  7705   003AE4  EF74  F01D         	goto	u1801
  7706   003AE8                     u1801:
  7707   003AE8  EF80  F01D         	goto	l2950
  7708   003AEC                     u1800:
  7709   003AEC  1E1F               	comf	(___aldiv@divisor+3)^0,f,c
  7710   003AEE  1E1E               	comf	(___aldiv@divisor+2)^0,f,c
  7711   003AF0  1E1D               	comf	(___aldiv@divisor+1)^0,f,c
  7712   003AF2  6C1C               	negf	___aldiv@divisor^0,c
  7713   003AF4  0E00               	movlw	0
  7714   003AF6  221D               	addwfc	(___aldiv@divisor+1)^0,f,c
  7715   003AF8  221E               	addwfc	(___aldiv@divisor+2)^0,f,c
  7716   003AFA  221F               	addwfc	(___aldiv@divisor+3)^0,f,c
  7717   003AFC  0E01               	movlw	1
  7718   003AFE  6E21               	movwf	___aldiv@sign^0,c
  7719   003B00                     l2950:
  7720   003B00  BE1B               	btfsc	(___aldiv@dividend+3)^0,7,c
  7721   003B02  EF87  F01D         	goto	u1810
  7722   003B06  EF85  F01D         	goto	u1811
  7723   003B0A                     u1811:
  7724   003B0A  EF91  F01D         	goto	l2956
  7725   003B0E                     u1810:
  7726   003B0E  1E1B               	comf	(___aldiv@dividend+3)^0,f,c
  7727   003B10  1E1A               	comf	(___aldiv@dividend+2)^0,f,c
  7728   003B12  1E19               	comf	(___aldiv@dividend+1)^0,f,c
  7729   003B14  6C18               	negf	___aldiv@dividend^0,c
  7730   003B16  0E00               	movlw	0
  7731   003B18  2219               	addwfc	(___aldiv@dividend+1)^0,f,c
  7732   003B1A  221A               	addwfc	(___aldiv@dividend+2)^0,f,c
  7733   003B1C  221B               	addwfc	(___aldiv@dividend+3)^0,f,c
  7734   003B1E  0E01               	movlw	1
  7735   003B20  1A21               	xorwf	___aldiv@sign^0,f,c
  7736   003B22                     l2956:
  7737   003B22  0E00               	movlw	0
  7738   003B24  6E22               	movwf	___aldiv@quotient^0,c
  7739   003B26  0E00               	movlw	0
  7740   003B28  6E23               	movwf	(___aldiv@quotient+1)^0,c
  7741   003B2A  0E00               	movlw	0
  7742   003B2C  6E24               	movwf	(___aldiv@quotient+2)^0,c
  7743   003B2E  0E00               	movlw	0
  7744   003B30  6E25               	movwf	(___aldiv@quotient+3)^0,c
  7745   003B32  501C               	movf	___aldiv@divisor^0,w,c
  7746   003B34  101D               	iorwf	(___aldiv@divisor+1)^0,w,c
  7747   003B36  101E               	iorwf	(___aldiv@divisor+2)^0,w,c
  7748   003B38  101F               	iorwf	(___aldiv@divisor+3)^0,w,c
  7749   003B3A  B4D8               	btfsc	status,2,c
  7750   003B3C  EFA2  F01D         	goto	u1821
  7751   003B40  EFA4  F01D         	goto	u1820
  7752   003B44                     u1821:
  7753   003B44  EFDA  F01D         	goto	l2978
  7754   003B48                     u1820:
  7755   003B48  0E01               	movlw	1
  7756   003B4A  6E20               	movwf	___aldiv@counter^0,c
  7757   003B4C  EFAE  F01D         	goto	l2964
  7758   003B50                     l2962:
  7759   003B50  90D8               	bcf	status,0,c
  7760   003B52  361C               	rlcf	___aldiv@divisor^0,f,c
  7761   003B54  361D               	rlcf	(___aldiv@divisor+1)^0,f,c
  7762   003B56  361E               	rlcf	(___aldiv@divisor+2)^0,f,c
  7763   003B58  361F               	rlcf	(___aldiv@divisor+3)^0,f,c
  7764   003B5A  2A20               	incf	___aldiv@counter^0,f,c
  7765   003B5C                     l2964:
  7766   003B5C  AE1F               	btfss	(___aldiv@divisor+3)^0,7,c
  7767   003B5E  EFB3  F01D         	goto	u1831
  7768   003B62  EFB5  F01D         	goto	u1830
  7769   003B66                     u1831:
  7770   003B66  EFA8  F01D         	goto	l2962
  7771   003B6A                     u1830:
  7772   003B6A                     l2966:
  7773   003B6A  90D8               	bcf	status,0,c
  7774   003B6C  3622               	rlcf	___aldiv@quotient^0,f,c
  7775   003B6E  3623               	rlcf	(___aldiv@quotient+1)^0,f,c
  7776   003B70  3624               	rlcf	(___aldiv@quotient+2)^0,f,c
  7777   003B72  3625               	rlcf	(___aldiv@quotient+3)^0,f,c
  7778   003B74  501C               	movf	___aldiv@divisor^0,w,c
  7779   003B76  5C18               	subwf	___aldiv@dividend^0,w,c
  7780   003B78  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7781   003B7A  5819               	subwfb	(___aldiv@dividend+1)^0,w,c
  7782   003B7C  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7783   003B7E  581A               	subwfb	(___aldiv@dividend+2)^0,w,c
  7784   003B80  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7785   003B82  581B               	subwfb	(___aldiv@dividend+3)^0,w,c
  7786   003B84  A0D8               	btfss	status,0,c
  7787   003B86  EFC7  F01D         	goto	u1841
  7788   003B8A  EFC9  F01D         	goto	u1840
  7789   003B8E                     u1841:
  7790   003B8E  EFD2  F01D         	goto	l2974
  7791   003B92                     u1840:
  7792   003B92  501C               	movf	___aldiv@divisor^0,w,c
  7793   003B94  5E18               	subwf	___aldiv@dividend^0,f,c
  7794   003B96  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7795   003B98  5A19               	subwfb	(___aldiv@dividend+1)^0,f,c
  7796   003B9A  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7797   003B9C  5A1A               	subwfb	(___aldiv@dividend+2)^0,f,c
  7798   003B9E  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7799   003BA0  5A1B               	subwfb	(___aldiv@dividend+3)^0,f,c
  7800   003BA2  8022               	bsf	___aldiv@quotient^0,0,c
  7801   003BA4                     l2974:
  7802   003BA4  90D8               	bcf	status,0,c
  7803   003BA6  321F               	rrcf	(___aldiv@divisor+3)^0,f,c
  7804   003BA8  321E               	rrcf	(___aldiv@divisor+2)^0,f,c
  7805   003BAA  321D               	rrcf	(___aldiv@divisor+1)^0,f,c
  7806   003BAC  321C               	rrcf	___aldiv@divisor^0,f,c
  7807   003BAE  2E20               	decfsz	___aldiv@counter^0,f,c
  7808   003BB0  EFB5  F01D         	goto	l2966
  7809   003BB4                     l2978:
  7810   003BB4  5021               	movf	___aldiv@sign^0,w,c
  7811   003BB6  B4D8               	btfsc	status,2,c
  7812   003BB8  EFE0  F01D         	goto	u1851
  7813   003BBC  EFE2  F01D         	goto	u1850
  7814   003BC0                     u1851:
  7815   003BC0  EFEA  F01D         	goto	l2982
  7816   003BC4                     u1850:
  7817   003BC4  1E25               	comf	(___aldiv@quotient+3)^0,f,c
  7818   003BC6  1E24               	comf	(___aldiv@quotient+2)^0,f,c
  7819   003BC8  1E23               	comf	(___aldiv@quotient+1)^0,f,c
  7820   003BCA  6C22               	negf	___aldiv@quotient^0,c
  7821   003BCC  0E00               	movlw	0
  7822   003BCE  2223               	addwfc	(___aldiv@quotient+1)^0,f,c
  7823   003BD0  2224               	addwfc	(___aldiv@quotient+2)^0,f,c
  7824   003BD2  2225               	addwfc	(___aldiv@quotient+3)^0,f,c
  7825   003BD4                     l2982:
  7826   003BD4  C022  F018         	movff	___aldiv@quotient,?___aldiv
  7827   003BD8  C023  F019         	movff	___aldiv@quotient+1,?___aldiv+1
  7828   003BDC  C024  F01A         	movff	___aldiv@quotient+2,?___aldiv+2
  7829   003BE0  C025  F01B         	movff	___aldiv@quotient+3,?___aldiv+3
  7830   003BE4  0012               	return		;funcret
  7831   003BE6                     __end_of___aldiv:
  7832                           	callstack 0
  7833                           
  7834 ;; *************** function _calibration *****************
  7835 ;; Defined at:
  7836 ;;		line 483 in file "dc_motor.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  7839 ;;		 -> main@motorL(10), 
  7840 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  7841 ;;		 -> main@motorR(10), 
  7842 ;;  turnSpeed       1   48[COMRAM] unsigned char 
  7843 ;;  turnDuration    2   49[COMRAM] PTR unsigned char 
  7844 ;;		 -> main@turnDuration(1), 
  7845 ;;  turnRamp        1   51[COMRAM] unsigned char 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;		None
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  1    wreg      void 
  7850 ;; Registers used:
  7851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7857 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7860 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7861 ;;Total ram usage:       10 bytes
  7862 ;; Hardware stack levels used: 1
  7863 ;; Hardware stack levels required when called: 8
  7864 ;; This function calls:
  7865 ;;		_turnLeft
  7866 ;;		_turnRight
  7867 ;; This function is called by:
  7868 ;;		_main
  7869 ;; This function uses a non-reentrant model
  7870 ;;
  7871                           
  7872                           	psect	text28
  7873   002BA2                     __ptext28:
  7874                           	callstack 0
  7875   002BA2                     _calibration:
  7876                           	callstack 22
  7877   002BA2                     
  7878                           ;dc_motor.c: 483: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 484: {;dc_motor.c: 486:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7879   002BA2  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7880   002BA6  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7881   002BAA  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7882   002BAE  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7883   002BB2  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7884   002BB6  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7885   002BBA  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7886   002BBE  50DF               	movf	indf2,w,c
  7887   002BC0  6E24               	movwf	turnLeft@turnDuration^0,c
  7888   002BC2  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7889   002BC6  EC28  F01B         	call	_turnLeft	;wreg free
  7890   002BCA                     
  7891                           ;dc_motor.c: 487:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7892   002BCA  0E05               	movlw	5
  7893   002BCC  6E36               	movwf	(??_calibration+1)^0,c
  7894   002BCE  0E0F               	movlw	15
  7895   002BD0  6E35               	movwf	??_calibration^0,c
  7896   002BD2  0EF1               	movlw	241
  7897   002BD4                     u4017:
  7898   002BD4  2EE8               	decfsz	wreg,f,c
  7899   002BD6  D7FE               	bra	u4017
  7900   002BD8  2E35               	decfsz	??_calibration^0,f,c
  7901   002BDA  D7FC               	bra	u4017
  7902   002BDC  2E36               	decfsz	(??_calibration+1)^0,f,c
  7903   002BDE  D7FA               	bra	u4017
  7904   002BE0  0000               	nop	
  7905   002BE2                     
  7906                           ;dc_motor.c: 488:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7907   002BE2  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7908   002BE6  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7909   002BEA  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7910   002BEE  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7911   002BF2  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7912   002BF6  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7913   002BFA  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7914   002BFE  50DF               	movf	indf2,w,c
  7915   002C00  6E24               	movwf	turnLeft@turnDuration^0,c
  7916   002C02  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7917   002C06  EC28  F01B         	call	_turnLeft	;wreg free
  7918                           
  7919                           ;dc_motor.c: 489:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7920   002C0A  0E05               	movlw	5
  7921   002C0C  6E36               	movwf	(??_calibration+1)^0,c
  7922   002C0E  0E0F               	movlw	15
  7923   002C10  6E35               	movwf	??_calibration^0,c
  7924   002C12  0EF1               	movlw	241
  7925   002C14                     u4027:
  7926   002C14  2EE8               	decfsz	wreg,f,c
  7927   002C16  D7FE               	bra	u4027
  7928   002C18  2E35               	decfsz	??_calibration^0,f,c
  7929   002C1A  D7FC               	bra	u4027
  7930   002C1C  2E36               	decfsz	(??_calibration+1)^0,f,c
  7931   002C1E  D7FA               	bra	u4027
  7932   002C20  0000               	nop	
  7933   002C22                     
  7934                           ;dc_motor.c: 490:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7935   002C22  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7936   002C26  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7937   002C2A  C02F  F021         	movff	calibration@mR,turnRight@mR
  7938   002C2E  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7939   002C32  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7940   002C36  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7941   002C3A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7942   002C3E  50DF               	movf	indf2,w,c
  7943   002C40  6E24               	movwf	turnRight@turnDuration^0,c
  7944   002C42  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7945   002C46  EC3E  F01A         	call	_turnRight	;wreg free
  7946   002C4A                     
  7947                           ;dc_motor.c: 491:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7948   002C4A  0E05               	movlw	5
  7949   002C4C  6E36               	movwf	(??_calibration+1)^0,c
  7950   002C4E  0E0F               	movlw	15
  7951   002C50  6E35               	movwf	??_calibration^0,c
  7952   002C52  0EF1               	movlw	241
  7953   002C54                     u4037:
  7954   002C54  2EE8               	decfsz	wreg,f,c
  7955   002C56  D7FE               	bra	u4037
  7956   002C58  2E35               	decfsz	??_calibration^0,f,c
  7957   002C5A  D7FC               	bra	u4037
  7958   002C5C  2E36               	decfsz	(??_calibration+1)^0,f,c
  7959   002C5E  D7FA               	bra	u4037
  7960   002C60  0000               	nop	
  7961                           
  7962                           ;dc_motor.c: 492:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7963   002C62  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7964   002C66  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7965   002C6A  C02F  F021         	movff	calibration@mR,turnRight@mR
  7966   002C6E  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7967   002C72  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7968   002C76  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7969   002C7A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7970   002C7E  50DF               	movf	indf2,w,c
  7971   002C80  6E24               	movwf	turnRight@turnDuration^0,c
  7972   002C82  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7973   002C86  EC3E  F01A         	call	_turnRight	;wreg free
  7974   002C8A                     l660:
  7975   002C8A  A48E               	btfss	142,2,c	;volatile
  7976   002C8C  EF4A  F016         	goto	u2221
  7977   002C90  EF4C  F016         	goto	u2220
  7978   002C94                     u2221:
  7979   002C94  EF53  F016         	goto	l664
  7980   002C98                     u2220:
  7981   002C98  B68E               	btfsc	142,3,c	;volatile
  7982   002C9A  EF51  F016         	goto	u2231
  7983   002C9E  EF53  F016         	goto	u2230
  7984   002CA2                     u2231:
  7985   002CA2  EF45  F016         	goto	l660
  7986   002CA6                     u2230:
  7987   002CA6                     l664:
  7988                           
  7989                           ;dc_motor.c: 497:         if (!PORTFbits.RF2 && *turnDuration>0) {
  7990   002CA6  B48E               	btfsc	142,2,c	;volatile
  7991   002CA8  EF58  F016         	goto	u2241
  7992   002CAC  EF5A  F016         	goto	u2240
  7993   002CB0                     u2241:
  7994   002CB0  EF6E  F016         	goto	l665
  7995   002CB4                     u2240:
  7996   002CB4  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7997   002CB8  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7998   002CBC  50DF               	movf	indf2,w,c
  7999   002CBE  B4D8               	btfsc	status,2,c
  8000   002CC0  EF64  F016         	goto	u2251
  8001   002CC4  EF66  F016         	goto	u2250
  8002   002CC8                     u2251:
  8003   002CC8  EF6E  F016         	goto	l665
  8004   002CCC                     u2250:
  8005   002CCC                     
  8006                           ;dc_motor.c: 498:             (*turnDuration)--;
  8007   002CCC  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8008   002CD0  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8009   002CD4  06DF               	decf	indf2,f,c
  8010   002CD6                     
  8011                           ;dc_motor.c: 499:             LATDbits.LATD7 = 1;
  8012   002CD6  8E7C               	bsf	124,7,c	;volatile
  8013                           
  8014                           ;dc_motor.c: 500:         }
  8015   002CD8  EF7B  F016         	goto	l3438
  8016   002CDC                     l665:
  8017   002CDC  B68E               	btfsc	142,3,c	;volatile
  8018   002CDE  EF73  F016         	goto	u2261
  8019   002CE2  EF75  F016         	goto	u2260
  8020   002CE6                     u2261:
  8021   002CE6  EF7B  F016         	goto	l3438
  8022   002CEA                     u2260:
  8023   002CEA                     
  8024                           ;dc_motor.c: 503:             (*turnDuration)++;
  8025   002CEA  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8026   002CEE  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8027   002CF2  2ADF               	incf	indf2,f,c
  8028   002CF4                     
  8029                           ;dc_motor.c: 504:             LATHbits.LATH3 = 1;
  8030   002CF4  8680               	bsf	128,3,c	;volatile
  8031   002CF6                     l3438:
  8032                           
  8033                           ;dc_motor.c: 507:         _delay((unsigned long)((500)*(64000000/4000.0)));
  8034   002CF6  0E29               	movlw	41
  8035   002CF8  6E36               	movwf	(??_calibration+1)^0,c
  8036   002CFA  0E96               	movlw	150
  8037   002CFC  6E35               	movwf	??_calibration^0,c
  8038   002CFE  0E7F               	movlw	127
  8039   002D00                     u4047:
  8040   002D00  2EE8               	decfsz	wreg,f,c
  8041   002D02  D7FE               	bra	u4047
  8042   002D04  2E35               	decfsz	??_calibration^0,f,c
  8043   002D06  D7FC               	bra	u4047
  8044   002D08  2E36               	decfsz	(??_calibration+1)^0,f,c
  8045   002D0A  D7FA               	bra	u4047
  8046   002D0C  0000               	nop	
  8047   002D0E                     
  8048                           ;dc_motor.c: 509:         if (!PORTFbits.RF3) {
  8049   002D0E  B68E               	btfsc	142,3,c	;volatile
  8050   002D10  EF8C  F016         	goto	u2271
  8051   002D14  EF8E  F016         	goto	u2270
  8052   002D18                     u2271:
  8053   002D18  EF95  F016         	goto	l668
  8054   002D1C                     u2270:
  8055   002D1C                     
  8056                           ;dc_motor.c: 510:             (*turnDuration)--;
  8057   002D1C  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8058   002D20  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8059   002D24  06DF               	decf	indf2,f,c
  8060                           
  8061                           ;dc_motor.c: 511:             break;
  8062   002D26  EF0D  F017         	goto	l669
  8063   002D2A                     l668:
  8064                           
  8065                           ;dc_motor.c: 514:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8066   002D2A  9680               	bcf	128,3,c	;volatile
  8067   002D2C  9E7C               	bcf	124,7,c	;volatile
  8068   002D2E                     
  8069                           ;dc_motor.c: 517:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8070   002D2E  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8071   002D32  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8072   002D36  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8073   002D3A  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8074   002D3E  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8075   002D42  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8076   002D46  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8077   002D4A  50DF               	movf	indf2,w,c
  8078   002D4C  6E24               	movwf	turnLeft@turnDuration^0,c
  8079   002D4E  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8080   002D52  EC28  F01B         	call	_turnLeft	;wreg free
  8081   002D56                     
  8082                           ;dc_motor.c: 518:         _delay((unsigned long)((50)*(64000000/4000.0)));
  8083   002D56  0E05               	movlw	5
  8084   002D58  6E36               	movwf	(??_calibration+1)^0,c
  8085   002D5A  0E0F               	movlw	15
  8086   002D5C  6E35               	movwf	??_calibration^0,c
  8087   002D5E  0EF1               	movlw	241
  8088   002D60                     u4057:
  8089   002D60  2EE8               	decfsz	wreg,f,c
  8090   002D62  D7FE               	bra	u4057
  8091   002D64  2E35               	decfsz	??_calibration^0,f,c
  8092   002D66  D7FC               	bra	u4057
  8093   002D68  2E36               	decfsz	(??_calibration+1)^0,f,c
  8094   002D6A  D7FA               	bra	u4057
  8095   002D6C  0000               	nop	
  8096   002D6E                     
  8097                           ;dc_motor.c: 519:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8098   002D6E  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8099   002D72  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8100   002D76  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8101   002D7A  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8102   002D7E  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8103   002D82  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8104   002D86  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8105   002D8A  50DF               	movf	indf2,w,c
  8106   002D8C  6E24               	movwf	turnLeft@turnDuration^0,c
  8107   002D8E  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8108   002D92  EC28  F01B         	call	_turnLeft	;wreg free
  8109                           
  8110                           ;dc_motor.c: 520:         _delay((unsigned long)((50)*(64000000/4000.0)));
  8111   002D96  0E05               	movlw	5
  8112   002D98  6E36               	movwf	(??_calibration+1)^0,c
  8113   002D9A  0E0F               	movlw	15
  8114   002D9C  6E35               	movwf	??_calibration^0,c
  8115   002D9E  0EF1               	movlw	241
  8116   002DA0                     u4067:
  8117   002DA0  2EE8               	decfsz	wreg,f,c
  8118   002DA2  D7FE               	bra	u4067
  8119   002DA4  2E35               	decfsz	??_calibration^0,f,c
  8120   002DA6  D7FC               	bra	u4067
  8121   002DA8  2E36               	decfsz	(??_calibration+1)^0,f,c
  8122   002DAA  D7FA               	bra	u4067
  8123   002DAC  0000               	nop	
  8124   002DAE                     
  8125                           ;dc_motor.c: 521:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8126   002DAE  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8127   002DB2  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8128   002DB6  C02F  F021         	movff	calibration@mR,turnRight@mR
  8129   002DBA  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8130   002DBE  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8131   002DC2  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8132   002DC6  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8133   002DCA  50DF               	movf	indf2,w,c
  8134   002DCC  6E24               	movwf	turnRight@turnDuration^0,c
  8135   002DCE  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8136   002DD2  EC3E  F01A         	call	_turnRight	;wreg free
  8137   002DD6                     
  8138                           ;dc_motor.c: 522:         _delay((unsigned long)((50)*(64000000/4000.0)));
  8139   002DD6  0E05               	movlw	5
  8140   002DD8  6E36               	movwf	(??_calibration+1)^0,c
  8141   002DDA  0E0F               	movlw	15
  8142   002DDC  6E35               	movwf	??_calibration^0,c
  8143   002DDE  0EF1               	movlw	241
  8144   002DE0                     u4077:
  8145   002DE0  2EE8               	decfsz	wreg,f,c
  8146   002DE2  D7FE               	bra	u4077
  8147   002DE4  2E35               	decfsz	??_calibration^0,f,c
  8148   002DE6  D7FC               	bra	u4077
  8149   002DE8  2E36               	decfsz	(??_calibration+1)^0,f,c
  8150   002DEA  D7FA               	bra	u4077
  8151   002DEC  0000               	nop	
  8152                           
  8153                           ;dc_motor.c: 523:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8154   002DEE  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8155   002DF2  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8156   002DF6  C02F  F021         	movff	calibration@mR,turnRight@mR
  8157   002DFA  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8158   002DFE  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8159   002E02  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8160   002E06  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8161   002E0A  50DF               	movf	indf2,w,c
  8162   002E0C  6E24               	movwf	turnRight@turnDuration^0,c
  8163   002E0E  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8164   002E12  EC3E  F01A         	call	_turnRight	;wreg free
  8165   002E16  EF45  F016         	goto	l660
  8166   002E1A                     l669:
  8167                           
  8168                           ;dc_motor.c: 528:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8169   002E1A  8680               	bsf	128,3,c	;volatile
  8170   002E1C  8E7C               	bsf	124,7,c	;volatile
  8171   002E1E                     
  8172                           ;dc_motor.c: 529:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8173   002E1E  0E09               	movlw	9
  8174   002E20  6E36               	movwf	(??_calibration+1)^0,c
  8175   002E22  0E1E               	movlw	30
  8176   002E24  6E35               	movwf	??_calibration^0,c
  8177   002E26  0EE4               	movlw	228
  8178   002E28                     u4087:
  8179   002E28  2EE8               	decfsz	wreg,f,c
  8180   002E2A  D7FE               	bra	u4087
  8181   002E2C  2E35               	decfsz	??_calibration^0,f,c
  8182   002E2E  D7FC               	bra	u4087
  8183   002E30  2E36               	decfsz	(??_calibration+1)^0,f,c
  8184   002E32  D7FA               	bra	u4087
  8185   002E34  D000               	nop2	
  8186   002E36                     
  8187                           ;dc_motor.c: 530:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8188   002E36  9680               	bcf	128,3,c	;volatile
  8189   002E38  9E7C               	bcf	124,7,c	;volatile
  8190   002E3A  0012               	return		;funcret
  8191   002E3C                     __end_of_calibration:
  8192                           	callstack 0
  8193                           
  8194 ;; *************** function _turnRight *****************
  8195 ;; Defined at:
  8196 ;;		line 401 in file "dc_motor.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8199 ;;		 -> main@motorL(10), 
  8200 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8201 ;;		 -> main@motorR(10), 
  8202 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  8203 ;;  turnDuration    1   35[COMRAM] unsigned char 
  8204 ;;  turnRamp        1   36[COMRAM] unsigned char 
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;  cur_power       2   42[COMRAM] int 
  8207 ;;  i               2   40[COMRAM] int 
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  1    wreg      void 
  8210 ;; Registers used:
  8211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8217 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8218 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8219 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8220 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8221 ;;Total ram usage:       14 bytes
  8222 ;; Hardware stack levels used: 1
  8223 ;; Hardware stack levels required when called: 7
  8224 ;; This function calls:
  8225 ;;		_setMotorPWM
  8226 ;; This function is called by:
  8227 ;;		_move
  8228 ;;		_returnHome
  8229 ;;		_lostReturnHome
  8230 ;;		_calibration
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           	psect	text29
  8235   00347C                     __ptext29:
  8236                           	callstack 0
  8237   00347C                     _turnRight:
  8238                           	callstack 22
  8239   00347C                     
  8240                           ;dc_motor.c: 401: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 402: {;dc_motor.c: 403:     mL->dir
      +                          ection = 1;
  8241   00347C  EE20 F001          	lfsr	2,1
  8242   003480  501F               	movf	turnRight@mL^0,w,c
  8243   003482  26D9               	addwf	fsr2l,f,c
  8244   003484  5020               	movf	(turnRight@mL+1)^0,w,c
  8245   003486  22DA               	addwfc	fsr2h,f,c
  8246   003488  0E01               	movlw	1
  8247   00348A  6EDF               	movwf	indf2,c
  8248                           
  8249                           ;dc_motor.c: 404:     mR->direction = 0;
  8250   00348C  EE20 F001          	lfsr	2,1
  8251   003490  5021               	movf	turnRight@mR^0,w,c
  8252   003492  26D9               	addwf	fsr2l,f,c
  8253   003494  5022               	movf	(turnRight@mR+1)^0,w,c
  8254   003496  22DA               	addwfc	fsr2h,f,c
  8255   003498  6ADF               	clrf	indf2,c
  8256   00349A                     
  8257                           ;dc_motor.c: 405:     int i;;dc_motor.c: 406:     int cur_power;;dc_motor.c: 407:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  8258   00349A  0E00               	movlw	0
  8259   00349C  6E2C               	movwf	(turnRight@cur_power+1)^0,c
  8260   00349E  0E01               	movlw	1
  8261   0034A0  6E2B               	movwf	turnRight@cur_power^0,c
  8262   0034A2  EF9C  F01A         	goto	l2810
  8263   0034A6                     l2796:
  8264                           
  8265                           ;dc_motor.c: 408:         mL->power = cur_power+mL->compensation;
  8266   0034A6  EE20 F009          	lfsr	2,9
  8267   0034AA  501F               	movf	turnRight@mL^0,w,c
  8268   0034AC  26D9               	addwf	fsr2l,f,c
  8269   0034AE  5020               	movf	(turnRight@mL+1)^0,w,c
  8270   0034B0  22DA               	addwfc	fsr2h,f,c
  8271   0034B2  50DF               	movf	indf2,w,c
  8272   0034B4  242B               	addwf	turnRight@cur_power^0,w,c
  8273   0034B6  C01F  FFD9         	movff	turnRight@mL,fsr2l
  8274   0034BA  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  8275   0034BE  6EDF               	movwf	indf2,c
  8276                           
  8277                           ;dc_motor.c: 409:         mR->power = cur_power+mR->compensation;
  8278   0034C0  EE20 F009          	lfsr	2,9
  8279   0034C4  5021               	movf	turnRight@mR^0,w,c
  8280   0034C6  26D9               	addwf	fsr2l,f,c
  8281   0034C8  5022               	movf	(turnRight@mR+1)^0,w,c
  8282   0034CA  22DA               	addwfc	fsr2h,f,c
  8283   0034CC  50DF               	movf	indf2,w,c
  8284   0034CE  242B               	addwf	turnRight@cur_power^0,w,c
  8285   0034D0  C021  FFD9         	movff	turnRight@mR,fsr2l
  8286   0034D4  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  8287   0034D8  6EDF               	movwf	indf2,c
  8288   0034DA                     
  8289                           ;dc_motor.c: 410:         setMotorPWM(mL);
  8290   0034DA  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  8291   0034DE  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  8292   0034E2  EC12  F01C         	call	_setMotorPWM	;wreg free
  8293   0034E6                     
  8294                           ;dc_motor.c: 411:         setMotorPWM(mR);
  8295   0034E6  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  8296   0034EA  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  8297   0034EE  EC12  F01C         	call	_setMotorPWM	;wreg free
  8298   0034F2                     
  8299                           ;dc_motor.c: 412:         for (i=0;i<turnRamp;i++) {
  8300   0034F2  0E00               	movlw	0
  8301   0034F4  6E2A               	movwf	(turnRight@i+1)^0,c
  8302   0034F6  0E00               	movlw	0
  8303   0034F8  6E29               	movwf	turnRight@i^0,c
  8304   0034FA  EF88  F01A         	goto	l618
  8305   0034FE                     l2804:
  8306                           
  8307                           ;dc_motor.c: 413:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8308   0034FE  0ED0               	movlw	208
  8309   003500  6E26               	movwf	??_turnRight^0,c
  8310   003502  0ECA               	movlw	202
  8311   003504                     u4097:
  8312   003504  2EE8               	decfsz	wreg,f,c
  8313   003506  D7FE               	bra	u4097
  8314   003508  2E26               	decfsz	??_turnRight^0,f,c
  8315   00350A  D7FC               	bra	u4097
  8316   00350C                     
  8317                           ;dc_motor.c: 414:         }
  8318   00350C  4A29               	infsnz	turnRight@i^0,f,c
  8319   00350E  2A2A               	incf	(turnRight@i+1)^0,f,c
  8320   003510                     l618:
  8321   003510  5025               	movf	turnRight@turnRamp^0,w,c
  8322   003512  6E26               	movwf	??_turnRight^0,c
  8323   003514  6A27               	clrf	(??_turnRight+1)^0,c
  8324   003516  5026               	movf	??_turnRight^0,w,c
  8325   003518  5C29               	subwf	turnRight@i^0,w,c
  8326   00351A  502A               	movf	(turnRight@i+1)^0,w,c
  8327   00351C  0A80               	xorlw	128
  8328   00351E  6E28               	movwf	(??_turnRight+2)^0,c
  8329   003520  5027               	movf	(??_turnRight+1)^0,w,c
  8330   003522  0A80               	xorlw	128
  8331   003524  5828               	subwfb	(??_turnRight+2)^0,w,c
  8332   003526  A0D8               	btfss	status,0,c
  8333   003528  EF98  F01A         	goto	u1631
  8334   00352C  EF9A  F01A         	goto	u1630
  8335   003530                     u1631:
  8336   003530  EF7F  F01A         	goto	l2804
  8337   003534                     u1630:
  8338   003534                     
  8339                           ;dc_motor.c: 415:     }
  8340   003534  4A2B               	infsnz	turnRight@cur_power^0,f,c
  8341   003536  2A2C               	incf	(turnRight@cur_power+1)^0,f,c
  8342   003538                     l2810:
  8343   003538  5023               	movf	turnRight@turnSpeed^0,w,c
  8344   00353A  6E26               	movwf	??_turnRight^0,c
  8345   00353C  6A27               	clrf	(??_turnRight+1)^0,c
  8346   00353E  502B               	movf	turnRight@cur_power^0,w,c
  8347   003540  5C26               	subwf	??_turnRight^0,w,c
  8348   003542  5027               	movf	(??_turnRight+1)^0,w,c
  8349   003544  0A80               	xorlw	128
  8350   003546  6E28               	movwf	(??_turnRight+2)^0,c
  8351   003548  502C               	movf	(turnRight@cur_power+1)^0,w,c
  8352   00354A  0A80               	xorlw	128
  8353   00354C  5828               	subwfb	(??_turnRight+2)^0,w,c
  8354   00354E  B0D8               	btfsc	status,0,c
  8355   003550  EFAC  F01A         	goto	u1641
  8356   003554  EFAE  F01A         	goto	u1640
  8357   003558                     u1641:
  8358   003558  EF53  F01A         	goto	l2796
  8359   00355C                     u1640:
  8360   00355C                     
  8361                           ;dc_motor.c: 417:     for (i=0;i<turnDuration;i++) {
  8362   00355C  0E00               	movlw	0
  8363   00355E  6E2A               	movwf	(turnRight@i+1)^0,c
  8364   003560  0E00               	movlw	0
  8365   003562  6E29               	movwf	turnRight@i^0,c
  8366   003564  EFBD  F01A         	goto	l622
  8367   003568                     l2814:
  8368                           
  8369                           ;dc_motor.c: 418:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8370   003568  0ED0               	movlw	208
  8371   00356A  6E26               	movwf	??_turnRight^0,c
  8372   00356C  0ECA               	movlw	202
  8373   00356E                     u4107:
  8374   00356E  2EE8               	decfsz	wreg,f,c
  8375   003570  D7FE               	bra	u4107
  8376   003572  2E26               	decfsz	??_turnRight^0,f,c
  8377   003574  D7FC               	bra	u4107
  8378   003576                     
  8379                           ;dc_motor.c: 419:         }
  8380   003576  4A29               	infsnz	turnRight@i^0,f,c
  8381   003578  2A2A               	incf	(turnRight@i+1)^0,f,c
  8382   00357A                     l622:
  8383   00357A  5024               	movf	turnRight@turnDuration^0,w,c
  8384   00357C  6E26               	movwf	??_turnRight^0,c
  8385   00357E  6A27               	clrf	(??_turnRight+1)^0,c
  8386   003580  5026               	movf	??_turnRight^0,w,c
  8387   003582  5C29               	subwf	turnRight@i^0,w,c
  8388   003584  502A               	movf	(turnRight@i+1)^0,w,c
  8389   003586  0A80               	xorlw	128
  8390   003588  6E28               	movwf	(??_turnRight+2)^0,c
  8391   00358A  5027               	movf	(??_turnRight+1)^0,w,c
  8392   00358C  0A80               	xorlw	128
  8393   00358E  5828               	subwfb	(??_turnRight+2)^0,w,c
  8394   003590  A0D8               	btfss	status,0,c
  8395   003592  EFCD  F01A         	goto	u1651
  8396   003596  EFCF  F01A         	goto	u1650
  8397   00359A                     u1651:
  8398   00359A  EFB4  F01A         	goto	l2814
  8399   00359E                     u1650:
  8400   00359E                     
  8401                           ;dc_motor.c: 421:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  8402   00359E  C023  F02B         	movff	turnRight@turnSpeed,turnRight@cur_power
  8403   0035A2  6A2C               	clrf	(turnRight@cur_power+1)^0,c
  8404   0035A4                     l2818:
  8405   0035A4  BE2C               	btfsc	(turnRight@cur_power+1)^0,7,c
  8406   0035A6  EFD9  F01A         	goto	u1660
  8407   0035AA  EFD7  F01A         	goto	u1661
  8408   0035AE                     u1661:
  8409   0035AE  EFDB  F01A         	goto	l2822
  8410   0035B2                     u1660:
  8411   0035B2  EF27  F01B         	goto	l630
  8412   0035B6                     l2822:
  8413                           
  8414                           ;dc_motor.c: 422:         mL->power = cur_power+mL->compensation;
  8415   0035B6  EE20 F009          	lfsr	2,9
  8416   0035BA  501F               	movf	turnRight@mL^0,w,c
  8417   0035BC  26D9               	addwf	fsr2l,f,c
  8418   0035BE  5020               	movf	(turnRight@mL+1)^0,w,c
  8419   0035C0  22DA               	addwfc	fsr2h,f,c
  8420   0035C2  50DF               	movf	indf2,w,c
  8421   0035C4  242B               	addwf	turnRight@cur_power^0,w,c
  8422   0035C6  C01F  FFD9         	movff	turnRight@mL,fsr2l
  8423   0035CA  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  8424   0035CE  6EDF               	movwf	indf2,c
  8425                           
  8426                           ;dc_motor.c: 423:         mR->power = cur_power+mR->compensation;
  8427   0035D0  EE20 F009          	lfsr	2,9
  8428   0035D4  5021               	movf	turnRight@mR^0,w,c
  8429   0035D6  26D9               	addwf	fsr2l,f,c
  8430   0035D8  5022               	movf	(turnRight@mR+1)^0,w,c
  8431   0035DA  22DA               	addwfc	fsr2h,f,c
  8432   0035DC  50DF               	movf	indf2,w,c
  8433   0035DE  242B               	addwf	turnRight@cur_power^0,w,c
  8434   0035E0  C021  FFD9         	movff	turnRight@mR,fsr2l
  8435   0035E4  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  8436   0035E8  6EDF               	movwf	indf2,c
  8437   0035EA                     
  8438                           ;dc_motor.c: 424:         setMotorPWM(mL);
  8439   0035EA  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  8440   0035EE  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  8441   0035F2  EC12  F01C         	call	_setMotorPWM	;wreg free
  8442   0035F6                     
  8443                           ;dc_motor.c: 425:         setMotorPWM(mR);
  8444   0035F6  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  8445   0035FA  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  8446   0035FE  EC12  F01C         	call	_setMotorPWM	;wreg free
  8447   003602                     
  8448                           ;dc_motor.c: 426:         for (i=0;i<turnRamp;i++) {
  8449   003602  0E00               	movlw	0
  8450   003604  6E2A               	movwf	(turnRight@i+1)^0,c
  8451   003606  0E00               	movlw	0
  8452   003608  6E29               	movwf	turnRight@i^0,c
  8453   00360A  EF10  F01B         	goto	l627
  8454   00360E                     l2830:
  8455                           
  8456                           ;dc_motor.c: 427:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8457   00360E  0ED0               	movlw	208
  8458   003610  6E26               	movwf	??_turnRight^0,c
  8459   003612  0ECA               	movlw	202
  8460   003614                     u4117:
  8461   003614  2EE8               	decfsz	wreg,f,c
  8462   003616  D7FE               	bra	u4117
  8463   003618  2E26               	decfsz	??_turnRight^0,f,c
  8464   00361A  D7FC               	bra	u4117
  8465   00361C                     
  8466                           ;dc_motor.c: 428:         }
  8467   00361C  4A29               	infsnz	turnRight@i^0,f,c
  8468   00361E  2A2A               	incf	(turnRight@i+1)^0,f,c
  8469   003620                     l627:
  8470   003620  5025               	movf	turnRight@turnRamp^0,w,c
  8471   003622  6E26               	movwf	??_turnRight^0,c
  8472   003624  6A27               	clrf	(??_turnRight+1)^0,c
  8473   003626  5026               	movf	??_turnRight^0,w,c
  8474   003628  5C29               	subwf	turnRight@i^0,w,c
  8475   00362A  502A               	movf	(turnRight@i+1)^0,w,c
  8476   00362C  0A80               	xorlw	128
  8477   00362E  6E28               	movwf	(??_turnRight+2)^0,c
  8478   003630  5027               	movf	(??_turnRight+1)^0,w,c
  8479   003632  0A80               	xorlw	128
  8480   003634  5828               	subwfb	(??_turnRight+2)^0,w,c
  8481   003636  A0D8               	btfss	status,0,c
  8482   003638  EF20  F01B         	goto	u1671
  8483   00363C  EF22  F01B         	goto	u1670
  8484   003640                     u1671:
  8485   003640  EF07  F01B         	goto	l2830
  8486   003644                     u1670:
  8487   003644                     
  8488                           ;dc_motor.c: 429:     }
  8489   003644  062B               	decf	turnRight@cur_power^0,f,c
  8490   003646  A0D8               	btfss	status,0,c
  8491   003648  062C               	decf	(turnRight@cur_power+1)^0,f,c
  8492   00364A  EFD2  F01A         	goto	l2818
  8493   00364E                     l630:
  8494   00364E  0012               	return		;funcret
  8495   003650                     __end_of_turnRight:
  8496                           	callstack 0
  8497                           
  8498 ;; *************** function _turnLeft *****************
  8499 ;; Defined at:
  8500 ;;		line 369 in file "dc_motor.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8503 ;;		 -> main@motorL(10), 
  8504 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8505 ;;		 -> main@motorR(10), 
  8506 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  8507 ;;  turnDuration    1   35[COMRAM] unsigned char 
  8508 ;;  turnRamp        1   36[COMRAM] unsigned char 
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;  cur_power       2   42[COMRAM] int 
  8511 ;;  i               2   40[COMRAM] int 
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1    wreg      void 
  8514 ;; Registers used:
  8515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8521 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8522 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8523 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8524 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8525 ;;Total ram usage:       14 bytes
  8526 ;; Hardware stack levels used: 1
  8527 ;; Hardware stack levels required when called: 7
  8528 ;; This function calls:
  8529 ;;		_setMotorPWM
  8530 ;; This function is called by:
  8531 ;;		_move
  8532 ;;		_returnHome
  8533 ;;		_lostReturnHome
  8534 ;;		_calibration
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text30
  8539   003650                     __ptext30:
  8540                           	callstack 0
  8541   003650                     _turnLeft:
  8542                           	callstack 22
  8543   003650                     
  8544                           ;dc_motor.c: 369: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 370: {;dc_motor.c: 371:     mL->dire
      +                          ction = 0;
  8545   003650  EE20 F001          	lfsr	2,1
  8546   003654  501F               	movf	turnLeft@mL^0,w,c
  8547   003656  26D9               	addwf	fsr2l,f,c
  8548   003658  5020               	movf	(turnLeft@mL+1)^0,w,c
  8549   00365A  22DA               	addwfc	fsr2h,f,c
  8550   00365C  6ADF               	clrf	indf2,c
  8551                           
  8552                           ;dc_motor.c: 372:     mR->direction = 1;
  8553   00365E  EE20 F001          	lfsr	2,1
  8554   003662  5021               	movf	turnLeft@mR^0,w,c
  8555   003664  26D9               	addwf	fsr2l,f,c
  8556   003666  5022               	movf	(turnLeft@mR+1)^0,w,c
  8557   003668  22DA               	addwfc	fsr2h,f,c
  8558   00366A  0E01               	movlw	1
  8559   00366C  6EDF               	movwf	indf2,c
  8560   00366E                     
  8561                           ;dc_motor.c: 373:     int i;;dc_motor.c: 374:     int cur_power;;dc_motor.c: 375:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  8562   00366E  0E00               	movlw	0
  8563   003670  6E2C               	movwf	(turnLeft@cur_power+1)^0,c
  8564   003672  0E01               	movlw	1
  8565   003674  6E2B               	movwf	turnLeft@cur_power^0,c
  8566   003676  EF86  F01B         	goto	l2856
  8567   00367A                     l2842:
  8568                           
  8569                           ;dc_motor.c: 376:         mL->power = cur_power+mL->compensation;
  8570   00367A  EE20 F009          	lfsr	2,9
  8571   00367E  501F               	movf	turnLeft@mL^0,w,c
  8572   003680  26D9               	addwf	fsr2l,f,c
  8573   003682  5020               	movf	(turnLeft@mL+1)^0,w,c
  8574   003684  22DA               	addwfc	fsr2h,f,c
  8575   003686  50DF               	movf	indf2,w,c
  8576   003688  242B               	addwf	turnLeft@cur_power^0,w,c
  8577   00368A  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  8578   00368E  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  8579   003692  6EDF               	movwf	indf2,c
  8580                           
  8581                           ;dc_motor.c: 377:         mR->power = cur_power+mR->compensation;
  8582   003694  EE20 F009          	lfsr	2,9
  8583   003698  5021               	movf	turnLeft@mR^0,w,c
  8584   00369A  26D9               	addwf	fsr2l,f,c
  8585   00369C  5022               	movf	(turnLeft@mR+1)^0,w,c
  8586   00369E  22DA               	addwfc	fsr2h,f,c
  8587   0036A0  50DF               	movf	indf2,w,c
  8588   0036A2  242B               	addwf	turnLeft@cur_power^0,w,c
  8589   0036A4  C021  FFD9         	movff	turnLeft@mR,fsr2l
  8590   0036A8  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  8591   0036AC  6EDF               	movwf	indf2,c
  8592   0036AE                     
  8593                           ;dc_motor.c: 378:         setMotorPWM(mL);
  8594   0036AE  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  8595   0036B2  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8596   0036B6  EC12  F01C         	call	_setMotorPWM	;wreg free
  8597   0036BA                     
  8598                           ;dc_motor.c: 379:         setMotorPWM(mR);
  8599   0036BA  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  8600   0036BE  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8601   0036C2  EC12  F01C         	call	_setMotorPWM	;wreg free
  8602   0036C6                     
  8603                           ;dc_motor.c: 380:         for (i=0;i<turnRamp;i++) {
  8604   0036C6  0E00               	movlw	0
  8605   0036C8  6E2A               	movwf	(turnLeft@i+1)^0,c
  8606   0036CA  0E00               	movlw	0
  8607   0036CC  6E29               	movwf	turnLeft@i^0,c
  8608   0036CE  EF72  F01B         	goto	l601
  8609   0036D2                     l2850:
  8610                           
  8611                           ;dc_motor.c: 381:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8612   0036D2  0ED0               	movlw	208
  8613   0036D4  6E26               	movwf	??_turnLeft^0,c
  8614   0036D6  0ECA               	movlw	202
  8615   0036D8                     u4127:
  8616   0036D8  2EE8               	decfsz	wreg,f,c
  8617   0036DA  D7FE               	bra	u4127
  8618   0036DC  2E26               	decfsz	??_turnLeft^0,f,c
  8619   0036DE  D7FC               	bra	u4127
  8620   0036E0                     
  8621                           ;dc_motor.c: 382:         }
  8622   0036E0  4A29               	infsnz	turnLeft@i^0,f,c
  8623   0036E2  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8624   0036E4                     l601:
  8625   0036E4  5025               	movf	turnLeft@turnRamp^0,w,c
  8626   0036E6  6E26               	movwf	??_turnLeft^0,c
  8627   0036E8  6A27               	clrf	(??_turnLeft+1)^0,c
  8628   0036EA  5026               	movf	??_turnLeft^0,w,c
  8629   0036EC  5C29               	subwf	turnLeft@i^0,w,c
  8630   0036EE  502A               	movf	(turnLeft@i+1)^0,w,c
  8631   0036F0  0A80               	xorlw	128
  8632   0036F2  6E28               	movwf	(??_turnLeft+2)^0,c
  8633   0036F4  5027               	movf	(??_turnLeft+1)^0,w,c
  8634   0036F6  0A80               	xorlw	128
  8635   0036F8  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8636   0036FA  A0D8               	btfss	status,0,c
  8637   0036FC  EF82  F01B         	goto	u1681
  8638   003700  EF84  F01B         	goto	u1680
  8639   003704                     u1681:
  8640   003704  EF69  F01B         	goto	l2850
  8641   003708                     u1680:
  8642   003708                     
  8643                           ;dc_motor.c: 383:     }
  8644   003708  4A2B               	infsnz	turnLeft@cur_power^0,f,c
  8645   00370A  2A2C               	incf	(turnLeft@cur_power+1)^0,f,c
  8646   00370C                     l2856:
  8647   00370C  5023               	movf	turnLeft@turnSpeed^0,w,c
  8648   00370E  6E26               	movwf	??_turnLeft^0,c
  8649   003710  6A27               	clrf	(??_turnLeft+1)^0,c
  8650   003712  502B               	movf	turnLeft@cur_power^0,w,c
  8651   003714  5C26               	subwf	??_turnLeft^0,w,c
  8652   003716  5027               	movf	(??_turnLeft+1)^0,w,c
  8653   003718  0A80               	xorlw	128
  8654   00371A  6E28               	movwf	(??_turnLeft+2)^0,c
  8655   00371C  502C               	movf	(turnLeft@cur_power+1)^0,w,c
  8656   00371E  0A80               	xorlw	128
  8657   003720  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8658   003722  B0D8               	btfsc	status,0,c
  8659   003724  EF96  F01B         	goto	u1691
  8660   003728  EF98  F01B         	goto	u1690
  8661   00372C                     u1691:
  8662   00372C  EF3D  F01B         	goto	l2842
  8663   003730                     u1690:
  8664   003730                     
  8665                           ;dc_motor.c: 385:     for (i=0;i<turnDuration;i++) {
  8666   003730  0E00               	movlw	0
  8667   003732  6E2A               	movwf	(turnLeft@i+1)^0,c
  8668   003734  0E00               	movlw	0
  8669   003736  6E29               	movwf	turnLeft@i^0,c
  8670   003738  EFA7  F01B         	goto	l605
  8671   00373C                     l2860:
  8672                           
  8673                           ;dc_motor.c: 386:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8674   00373C  0ED0               	movlw	208
  8675   00373E  6E26               	movwf	??_turnLeft^0,c
  8676   003740  0ECA               	movlw	202
  8677   003742                     u4137:
  8678   003742  2EE8               	decfsz	wreg,f,c
  8679   003744  D7FE               	bra	u4137
  8680   003746  2E26               	decfsz	??_turnLeft^0,f,c
  8681   003748  D7FC               	bra	u4137
  8682   00374A                     
  8683                           ;dc_motor.c: 387:         }
  8684   00374A  4A29               	infsnz	turnLeft@i^0,f,c
  8685   00374C  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8686   00374E                     l605:
  8687   00374E  5024               	movf	turnLeft@turnDuration^0,w,c
  8688   003750  6E26               	movwf	??_turnLeft^0,c
  8689   003752  6A27               	clrf	(??_turnLeft+1)^0,c
  8690   003754  5026               	movf	??_turnLeft^0,w,c
  8691   003756  5C29               	subwf	turnLeft@i^0,w,c
  8692   003758  502A               	movf	(turnLeft@i+1)^0,w,c
  8693   00375A  0A80               	xorlw	128
  8694   00375C  6E28               	movwf	(??_turnLeft+2)^0,c
  8695   00375E  5027               	movf	(??_turnLeft+1)^0,w,c
  8696   003760  0A80               	xorlw	128
  8697   003762  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8698   003764  A0D8               	btfss	status,0,c
  8699   003766  EFB7  F01B         	goto	u1701
  8700   00376A  EFB9  F01B         	goto	u1700
  8701   00376E                     u1701:
  8702   00376E  EF9E  F01B         	goto	l2860
  8703   003772                     u1700:
  8704   003772                     
  8705                           ;dc_motor.c: 389:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  8706   003772  C023  F02B         	movff	turnLeft@turnSpeed,turnLeft@cur_power
  8707   003776  6A2C               	clrf	(turnLeft@cur_power+1)^0,c
  8708   003778                     l2864:
  8709   003778  BE2C               	btfsc	(turnLeft@cur_power+1)^0,7,c
  8710   00377A  EFC3  F01B         	goto	u1710
  8711   00377E  EFC1  F01B         	goto	u1711
  8712   003782                     u1711:
  8713   003782  EFC5  F01B         	goto	l2868
  8714   003786                     u1710:
  8715   003786  EF11  F01C         	goto	l613
  8716   00378A                     l2868:
  8717                           
  8718                           ;dc_motor.c: 390:         mL->power = cur_power+mL->compensation;
  8719   00378A  EE20 F009          	lfsr	2,9
  8720   00378E  501F               	movf	turnLeft@mL^0,w,c
  8721   003790  26D9               	addwf	fsr2l,f,c
  8722   003792  5020               	movf	(turnLeft@mL+1)^0,w,c
  8723   003794  22DA               	addwfc	fsr2h,f,c
  8724   003796  50DF               	movf	indf2,w,c
  8725   003798  242B               	addwf	turnLeft@cur_power^0,w,c
  8726   00379A  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  8727   00379E  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  8728   0037A2  6EDF               	movwf	indf2,c
  8729                           
  8730                           ;dc_motor.c: 391:         mR->power = cur_power+mR->compensation;
  8731   0037A4  EE20 F009          	lfsr	2,9
  8732   0037A8  5021               	movf	turnLeft@mR^0,w,c
  8733   0037AA  26D9               	addwf	fsr2l,f,c
  8734   0037AC  5022               	movf	(turnLeft@mR+1)^0,w,c
  8735   0037AE  22DA               	addwfc	fsr2h,f,c
  8736   0037B0  50DF               	movf	indf2,w,c
  8737   0037B2  242B               	addwf	turnLeft@cur_power^0,w,c
  8738   0037B4  C021  FFD9         	movff	turnLeft@mR,fsr2l
  8739   0037B8  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  8740   0037BC  6EDF               	movwf	indf2,c
  8741   0037BE                     
  8742                           ;dc_motor.c: 392:         setMotorPWM(mL);
  8743   0037BE  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  8744   0037C2  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8745   0037C6  EC12  F01C         	call	_setMotorPWM	;wreg free
  8746   0037CA                     
  8747                           ;dc_motor.c: 393:         setMotorPWM(mR);
  8748   0037CA  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  8749   0037CE  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8750   0037D2  EC12  F01C         	call	_setMotorPWM	;wreg free
  8751   0037D6                     
  8752                           ;dc_motor.c: 394:         for (i=0;i<turnRamp;i++) {
  8753   0037D6  0E00               	movlw	0
  8754   0037D8  6E2A               	movwf	(turnLeft@i+1)^0,c
  8755   0037DA  0E00               	movlw	0
  8756   0037DC  6E29               	movwf	turnLeft@i^0,c
  8757   0037DE  EFFA  F01B         	goto	l610
  8758   0037E2                     l2876:
  8759                           
  8760                           ;dc_motor.c: 395:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8761   0037E2  0ED0               	movlw	208
  8762   0037E4  6E26               	movwf	??_turnLeft^0,c
  8763   0037E6  0ECA               	movlw	202
  8764   0037E8                     u4147:
  8765   0037E8  2EE8               	decfsz	wreg,f,c
  8766   0037EA  D7FE               	bra	u4147
  8767   0037EC  2E26               	decfsz	??_turnLeft^0,f,c
  8768   0037EE  D7FC               	bra	u4147
  8769   0037F0                     
  8770                           ;dc_motor.c: 396:         }
  8771   0037F0  4A29               	infsnz	turnLeft@i^0,f,c
  8772   0037F2  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8773   0037F4                     l610:
  8774   0037F4  5025               	movf	turnLeft@turnRamp^0,w,c
  8775   0037F6  6E26               	movwf	??_turnLeft^0,c
  8776   0037F8  6A27               	clrf	(??_turnLeft+1)^0,c
  8777   0037FA  5026               	movf	??_turnLeft^0,w,c
  8778   0037FC  5C29               	subwf	turnLeft@i^0,w,c
  8779   0037FE  502A               	movf	(turnLeft@i+1)^0,w,c
  8780   003800  0A80               	xorlw	128
  8781   003802  6E28               	movwf	(??_turnLeft+2)^0,c
  8782   003804  5027               	movf	(??_turnLeft+1)^0,w,c
  8783   003806  0A80               	xorlw	128
  8784   003808  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8785   00380A  A0D8               	btfss	status,0,c
  8786   00380C  EF0A  F01C         	goto	u1721
  8787   003810  EF0C  F01C         	goto	u1720
  8788   003814                     u1721:
  8789   003814  EFF1  F01B         	goto	l2876
  8790   003818                     u1720:
  8791   003818                     
  8792                           ;dc_motor.c: 397:     }
  8793   003818  062B               	decf	turnLeft@cur_power^0,f,c
  8794   00381A  A0D8               	btfss	status,0,c
  8795   00381C  062C               	decf	(turnLeft@cur_power+1)^0,f,c
  8796   00381E  EFBC  F01B         	goto	l2864
  8797   003822                     l613:
  8798   003822  0012               	return		;funcret
  8799   003824                     __end_of_turnLeft:
  8800                           	callstack 0
  8801                           
  8802 ;; *************** function _setMotorPWM *****************
  8803 ;; Defined at:
  8804 ;;		line 68 in file "dc_motor.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  m               2   24[COMRAM] PTR struct DC_motor
  8807 ;;		 -> main@motorR(10), main@motorL(10), 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  negDuty         1   29[COMRAM] unsigned char 
  8810 ;;  posDuty         1   28[COMRAM] unsigned char 
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  1    wreg      void 
  8813 ;; Registers used:
  8814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8824 ;;Total ram usage:        6 bytes
  8825 ;; Hardware stack levels used: 1
  8826 ;; Hardware stack levels required when called: 6
  8827 ;; This function calls:
  8828 ;;		___lwdiv
  8829 ;;		___wmul
  8830 ;; This function is called by:
  8831 ;;		_stop
  8832 ;;		_turnLeft
  8833 ;;		_turnRight
  8834 ;;		_fullSpeedAhead
  8835 ;;		_reverseOneSquare
  8836 ;; This function uses a non-reentrant model
  8837 ;;
  8838                           
  8839                           	psect	text31
  8840   003824                     __ptext31:
  8841                           	callstack 0
  8842   003824                     _setMotorPWM:
  8843                           	callstack 23
  8844   003824                     
  8845                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  8846   003824  EE20 F002          	lfsr	2,2
  8847   003828  5019               	movf	setMotorPWM@m^0,w,c
  8848   00382A  26D9               	addwf	fsr2l,f,c
  8849   00382C  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8850   00382E  22DA               	addwfc	fsr2h,f,c
  8851   003830  50DF               	movf	indf2,w,c
  8852   003832  B4D8               	btfsc	status,2,c
  8853   003834  EF1E  F01C         	goto	u1531
  8854   003838  EF20  F01C         	goto	u1530
  8855   00383C                     u1531:
  8856   00383C  EF54  F01C         	goto	l2704
  8857   003840                     u1530:
  8858   003840                     
  8859                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8860   003840  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  8861   003844  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8862   003848  50DF               	movf	indf2,w,c
  8863   00384A  6E1B               	movwf	??_setMotorPWM^0,c
  8864   00384C  501B               	movf	??_setMotorPWM^0,w,c
  8865   00384E  6E0C               	movwf	___wmul@multiplier^0,c
  8866   003850  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  8867   003852  EE20 F003          	lfsr	2,3
  8868   003856  5019               	movf	setMotorPWM@m^0,w,c
  8869   003858  26D9               	addwf	fsr2l,f,c
  8870   00385A  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8871   00385C  22DA               	addwfc	fsr2h,f,c
  8872   00385E  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  8873   003862  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  8874   003866  EC83  F021         	call	___wmul	;wreg free
  8875   00386A  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  8876   00386E  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  8877   003872  0E00               	movlw	0
  8878   003874  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  8879   003876  0E64               	movlw	100
  8880   003878  6E14               	movwf	___lwdiv@divisor^0,c
  8881   00387A  EC0D  F020         	call	___lwdiv	;wreg free
  8882   00387E  EE20 F003          	lfsr	2,3
  8883   003882  5019               	movf	setMotorPWM@m^0,w,c
  8884   003884  26D9               	addwf	fsr2l,f,c
  8885   003886  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8886   003888  22DA               	addwfc	fsr2h,f,c
  8887   00388A  50DF               	movf	indf2,w,c
  8888   00388C  6E1C               	movwf	(??_setMotorPWM+1)^0,c
  8889   00388E  5012               	movf	?___lwdiv^0,w,c
  8890   003890  5C1C               	subwf	(??_setMotorPWM+1)^0,w,c
  8891   003892  6E1D               	movwf	setMotorPWM@posDuty^0,c
  8892   003894                     
  8893                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  8894   003894  EE20 F003          	lfsr	2,3
  8895   003898  5019               	movf	setMotorPWM@m^0,w,c
  8896   00389A  26D9               	addwf	fsr2l,f,c
  8897   00389C  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8898   00389E  22DA               	addwfc	fsr2h,f,c
  8899   0038A0  50DF               	movf	indf2,w,c
  8900   0038A2  6E1E               	movwf	setMotorPWM@negDuty^0,c
  8901                           
  8902                           ;dc_motor.c: 75:     }
  8903   0038A4  EF77  F01C         	goto	l2708
  8904   0038A8                     l2704:
  8905                           
  8906                           ;dc_motor.c: 77:         posDuty=0;
  8907   0038A8  0E00               	movlw	0
  8908   0038AA  6E1D               	movwf	setMotorPWM@posDuty^0,c
  8909   0038AC                     
  8910                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8911   0038AC  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  8912   0038B0  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8913   0038B4  50DF               	movf	indf2,w,c
  8914   0038B6  6E1B               	movwf	??_setMotorPWM^0,c
  8915   0038B8  501B               	movf	??_setMotorPWM^0,w,c
  8916   0038BA  6E0C               	movwf	___wmul@multiplier^0,c
  8917   0038BC  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  8918   0038BE  EE20 F003          	lfsr	2,3
  8919   0038C2  5019               	movf	setMotorPWM@m^0,w,c
  8920   0038C4  26D9               	addwf	fsr2l,f,c
  8921   0038C6  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8922   0038C8  22DA               	addwfc	fsr2h,f,c
  8923   0038CA  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  8924   0038CE  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  8925   0038D2  EC83  F021         	call	___wmul	;wreg free
  8926   0038D6  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  8927   0038DA  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  8928   0038DE  0E00               	movlw	0
  8929   0038E0  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  8930   0038E2  0E64               	movlw	100
  8931   0038E4  6E14               	movwf	___lwdiv@divisor^0,c
  8932   0038E6  EC0D  F020         	call	___lwdiv	;wreg free
  8933   0038EA  5012               	movf	?___lwdiv^0,w,c
  8934   0038EC  6E1E               	movwf	setMotorPWM@negDuty^0,c
  8935   0038EE                     l2708:
  8936                           
  8937                           ;dc_motor.c: 81:     if (m->direction) {
  8938   0038EE  EE20 F001          	lfsr	2,1
  8939   0038F2  5019               	movf	setMotorPWM@m^0,w,c
  8940   0038F4  26D9               	addwf	fsr2l,f,c
  8941   0038F6  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8942   0038F8  22DA               	addwfc	fsr2h,f,c
  8943   0038FA  50DF               	movf	indf2,w,c
  8944   0038FC  B4D8               	btfsc	status,2,c
  8945   0038FE  EF83  F01C         	goto	u1541
  8946   003902  EF85  F01C         	goto	u1540
  8947   003906                     u1541:
  8948   003906  EFA7  F01C         	goto	l2712
  8949   00390A                     u1540:
  8950   00390A                     
  8951                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  8952   00390A  EE20 F005          	lfsr	2,5
  8953   00390E  5019               	movf	setMotorPWM@m^0,w,c
  8954   003910  26D9               	addwf	fsr2l,f,c
  8955   003912  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8956   003914  22DA               	addwfc	fsr2h,f,c
  8957   003916  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8958   00391A  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8959   00391E  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8960   003922  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8961   003926  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  8962                           
  8963                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  8964   00392A  EE20 F007          	lfsr	2,7
  8965   00392E  5019               	movf	setMotorPWM@m^0,w,c
  8966   003930  26D9               	addwf	fsr2l,f,c
  8967   003932  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8968   003934  22DA               	addwfc	fsr2h,f,c
  8969   003936  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8970   00393A  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8971   00393E  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8972   003942  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8973   003946  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  8974                           
  8975                           ;dc_motor.c: 84:     } else {
  8976   00394A  EFC7  F01C         	goto	l519
  8977   00394E                     l2712:
  8978                           
  8979                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  8980   00394E  EE20 F005          	lfsr	2,5
  8981   003952  5019               	movf	setMotorPWM@m^0,w,c
  8982   003954  26D9               	addwf	fsr2l,f,c
  8983   003956  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8984   003958  22DA               	addwfc	fsr2h,f,c
  8985   00395A  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8986   00395E  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8987   003962  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8988   003966  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8989   00396A  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  8990                           
  8991                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  8992   00396E  EE20 F007          	lfsr	2,7
  8993   003972  5019               	movf	setMotorPWM@m^0,w,c
  8994   003974  26D9               	addwf	fsr2l,f,c
  8995   003976  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8996   003978  22DA               	addwfc	fsr2h,f,c
  8997   00397A  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8998   00397E  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8999   003982  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9000   003986  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9001   00398A  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  9002   00398E                     l519:
  9003   00398E  0012               	return		;funcret
  9004   003990                     __end_of_setMotorPWM:
  9005                           	callstack 0
  9006                           
  9007 ;; *************** function ___wmul *****************
  9008 ;; Defined at:
  9009 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9010 ;; Parameters:    Size  Location     Type
  9011 ;;  multiplier      2   11[COMRAM] unsigned int 
  9012 ;;  multiplicand    2   13[COMRAM] unsigned int 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;  product         2   15[COMRAM] unsigned int 
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  2   11[COMRAM] unsigned int 
  9017 ;; Registers used:
  9018 ;;		wreg, status,2, status,0, prodl, prodh
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9028 ;;Total ram usage:        6 bytes
  9029 ;; Hardware stack levels used: 1
  9030 ;; Hardware stack levels required when called: 5
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_setMotorPWM
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           	psect	text32
  9039   004306                     __ptext32:
  9040                           	callstack 0
  9041   004306                     ___wmul:
  9042                           	callstack 23
  9043   004306  500C               	movf	___wmul@multiplier^0,w,c
  9044   004308  020E               	mulwf	___wmul@multiplicand^0,c
  9045   00430A  CFF3 F010          	movff	prodl,___wmul@product
  9046   00430E  CFF4 F011          	movff	prodh,___wmul@product+1
  9047   004312  500C               	movf	___wmul@multiplier^0,w,c
  9048   004314  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  9049   004316  50F3               	movf	243,w,c
  9050   004318  2611               	addwf	(___wmul@product+1)^0,f,c
  9051   00431A  500D               	movf	(___wmul@multiplier+1)^0,w,c
  9052   00431C  020E               	mulwf	___wmul@multiplicand^0,c
  9053   00431E  50F3               	movf	243,w,c
  9054   004320  2611               	addwf	(___wmul@product+1)^0,f,c
  9055   004322  C010  F00C         	movff	___wmul@product,?___wmul
  9056   004326  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  9057   00432A  0012               	return		;funcret
  9058   00432C                     __end_of___wmul:
  9059                           	callstack 0
  9060                           
  9061 ;; *************** function ___lwdiv *****************
  9062 ;; Defined at:
  9063 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  dividend        2   17[COMRAM] unsigned int 
  9066 ;;  divisor         2   19[COMRAM] unsigned int 
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;  quotient        2   21[COMRAM] unsigned int 
  9069 ;;  counter         1   23[COMRAM] unsigned char 
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  2   17[COMRAM] unsigned int 
  9072 ;; Registers used:
  9073 ;;		wreg, status,2, status,0
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9080 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9082 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9083 ;;Total ram usage:        7 bytes
  9084 ;; Hardware stack levels used: 1
  9085 ;; Hardware stack levels required when called: 5
  9086 ;; This function calls:
  9087 ;;		Nothing
  9088 ;; This function is called by:
  9089 ;;		_setMotorPWM
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           	psect	text33
  9094   00401A                     __ptext33:
  9095                           	callstack 0
  9096   00401A                     ___lwdiv:
  9097                           	callstack 23
  9098   00401A  0E00               	movlw	0
  9099   00401C  6E17               	movwf	(___lwdiv@quotient+1)^0,c
  9100   00401E  0E00               	movlw	0
  9101   004020  6E16               	movwf	___lwdiv@quotient^0,c
  9102   004022  5014               	movf	___lwdiv@divisor^0,w,c
  9103   004024  1015               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9104   004026  B4D8               	btfsc	status,2,c
  9105   004028  EF18  F020         	goto	u1501
  9106   00402C  EF1A  F020         	goto	u1500
  9107   004030                     u1501:
  9108   004030  EF42  F020         	goto	l1182
  9109   004034                     u1500:
  9110   004034  0E01               	movlw	1
  9111   004036  6E18               	movwf	___lwdiv@counter^0,c
  9112   004038  EF22  F020         	goto	l2672
  9113   00403C                     l2670:
  9114   00403C  90D8               	bcf	status,0,c
  9115   00403E  3614               	rlcf	___lwdiv@divisor^0,f,c
  9116   004040  3615               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9117   004042  2A18               	incf	___lwdiv@counter^0,f,c
  9118   004044                     l2672:
  9119   004044  AE15               	btfss	(___lwdiv@divisor+1)^0,7,c
  9120   004046  EF27  F020         	goto	u1511
  9121   00404A  EF29  F020         	goto	u1510
  9122   00404E                     u1511:
  9123   00404E  EF1E  F020         	goto	l2670
  9124   004052                     u1510:
  9125   004052                     l2674:
  9126   004052  90D8               	bcf	status,0,c
  9127   004054  3616               	rlcf	___lwdiv@quotient^0,f,c
  9128   004056  3617               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9129   004058  5014               	movf	___lwdiv@divisor^0,w,c
  9130   00405A  5C12               	subwf	___lwdiv@dividend^0,w,c
  9131   00405C  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  9132   00405E  5813               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9133   004060  A0D8               	btfss	status,0,c
  9134   004062  EF35  F020         	goto	u1521
  9135   004066  EF37  F020         	goto	u1520
  9136   00406A                     u1521:
  9137   00406A  EF3C  F020         	goto	l2682
  9138   00406E                     u1520:
  9139   00406E  5014               	movf	___lwdiv@divisor^0,w,c
  9140   004070  5E12               	subwf	___lwdiv@dividend^0,f,c
  9141   004072  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  9142   004074  5A13               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9143   004076  8016               	bsf	___lwdiv@quotient^0,0,c
  9144   004078                     l2682:
  9145   004078  90D8               	bcf	status,0,c
  9146   00407A  3215               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9147   00407C  3214               	rrcf	___lwdiv@divisor^0,f,c
  9148   00407E  2E18               	decfsz	___lwdiv@counter^0,f,c
  9149   004080  EF29  F020         	goto	l2674
  9150   004084                     l1182:
  9151   004084  C016  F012         	movff	___lwdiv@quotient,?___lwdiv
  9152   004088  C017  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9153   00408C  0012               	return		;funcret
  9154   00408E                     __end_of___lwdiv:
  9155                           	callstack 0
  9156                           
  9157 ;; *************** function _batteryLevel *****************
  9158 ;; Defined at:
  9159 ;;		line 6 in file "battery.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;  batteryQuart    1   20[COMRAM] unsigned char 
  9164 ;;  batteryVolta    1   19[COMRAM] unsigned char 
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  1    wreg      void 
  9167 ;; Registers used:
  9168 ;;		wreg, status,2, status,0, cstack
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9178 ;;Total ram usage:        2 bytes
  9179 ;; Hardware stack levels used: 1
  9180 ;; Hardware stack levels required when called: 6
  9181 ;; This function calls:
  9182 ;;		_ADC_getval
  9183 ;;		_ADC_init
  9184 ;;		___awdiv
  9185 ;; This function is called by:
  9186 ;;		_main
  9187 ;; This function uses a non-reentrant model
  9188 ;;
  9189                           
  9190                           	psect	text34
  9191   004166                     __ptext34:
  9192                           	callstack 0
  9193   004166                     _batteryLevel:
  9194                           	callstack 24
  9195   004166                     
  9196                           ;battery.c: 7:     ADC_init();
  9197   004166  EC0D  F022         	call	_ADC_init	;wreg free
  9198                           
  9199                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
  9200   00416A  EC1A  F022         	call	_ADC_getval	;wreg free
  9201   00416E  6E14               	movwf	batteryLevel@batteryVoltage^0,c
  9202   004170                     
  9203                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
  9204   004170  C014  F00C         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
  9205   004174  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  9206   004176  0E00               	movlw	0
  9207   004178  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  9208   00417A  0E18               	movlw	24
  9209   00417C  6E0E               	movwf	___awdiv@divisor^0,c
  9210   00417E  ECE9  F01E         	call	___awdiv	;wreg free
  9211   004182  500C               	movf	?___awdiv^0,w,c
  9212   004184  6E15               	movwf	batteryLevel@batteryQuarter^0,c
  9213   004186                     
  9214                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
  9215   004186  A215               	btfss	batteryLevel@batteryQuarter^0,1,c
  9216   004188  EFC8  F020         	goto	u2041
  9217   00418C  EFCA  F020         	goto	u2040
  9218   004190                     u2041:
  9219   004190  EFCD  F020         	goto	l433
  9220   004194                     u2040:
  9221   004194  8E7C               	bsf	124,7,c	;volatile
  9222   004196  EFCE  F020         	goto	l434
  9223   00419A                     l433:
  9224   00419A  9E7C               	bcf	124,7,c	;volatile
  9225   00419C                     l434:
  9226                           
  9227                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
  9228   00419C  A015               	btfss	batteryLevel@batteryQuarter^0,0,c
  9229   00419E  EFD3  F020         	goto	u2051
  9230   0041A2  EFD5  F020         	goto	u2050
  9231   0041A6                     u2051:
  9232   0041A6  EFD8  F020         	goto	l435
  9233   0041AA                     u2050:
  9234   0041AA  8680               	bsf	128,3,c	;volatile
  9235   0041AC  EFD9  F020         	goto	l437
  9236   0041B0                     l435:
  9237   0041B0  9680               	bcf	128,3,c	;volatile
  9238   0041B2                     l437:
  9239   0041B2  0012               	return		;funcret
  9240   0041B4                     __end_of_batteryLevel:
  9241                           	callstack 0
  9242                           
  9243 ;; *************** function ___awdiv *****************
  9244 ;; Defined at:
  9245 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;  dividend        2   11[COMRAM] int 
  9248 ;;  divisor         2   13[COMRAM] int 
  9249 ;; Auto vars:     Size  Location     Type
  9250 ;;  quotient        2   17[COMRAM] int 
  9251 ;;  sign            1   16[COMRAM] unsigned char 
  9252 ;;  counter         1   15[COMRAM] unsigned char 
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  2   11[COMRAM] int 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2, status,0
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9263 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9265 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9266 ;;Total ram usage:        8 bytes
  9267 ;; Hardware stack levels used: 1
  9268 ;; Hardware stack levels required when called: 5
  9269 ;; This function calls:
  9270 ;;		Nothing
  9271 ;; This function is called by:
  9272 ;;		_batteryLevel
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           	psect	text35
  9277   003DD2                     __ptext35:
  9278                           	callstack 0
  9279   003DD2                     ___awdiv:
  9280                           	callstack 24
  9281   003DD2  0E00               	movlw	0
  9282   003DD4  6E11               	movwf	___awdiv@sign^0,c
  9283   003DD6  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  9284   003DD8  EFF2  F01E         	goto	u1980
  9285   003DDC  EFF0  F01E         	goto	u1981
  9286   003DE0                     u1981:
  9287   003DE0  EFF8  F01E         	goto	l3192
  9288   003DE4                     u1980:
  9289   003DE4  6C0E               	negf	___awdiv@divisor^0,c
  9290   003DE6  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  9291   003DE8  B0D8               	btfsc	status,0,c
  9292   003DEA  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  9293   003DEC  0E01               	movlw	1
  9294   003DEE  6E11               	movwf	___awdiv@sign^0,c
  9295   003DF0                     l3192:
  9296   003DF0  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  9297   003DF2  EFFF  F01E         	goto	u1990
  9298   003DF6  EFFD  F01E         	goto	u1991
  9299   003DFA                     u1991:
  9300   003DFA  EF05  F01F         	goto	l3198
  9301   003DFE                     u1990:
  9302   003DFE  6C0C               	negf	___awdiv@dividend^0,c
  9303   003E00  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  9304   003E02  B0D8               	btfsc	status,0,c
  9305   003E04  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  9306   003E06  0E01               	movlw	1
  9307   003E08  1A11               	xorwf	___awdiv@sign^0,f,c
  9308   003E0A                     l3198:
  9309   003E0A  0E00               	movlw	0
  9310   003E0C  6E13               	movwf	(___awdiv@quotient+1)^0,c
  9311   003E0E  0E00               	movlw	0
  9312   003E10  6E12               	movwf	___awdiv@quotient^0,c
  9313   003E12  500E               	movf	___awdiv@divisor^0,w,c
  9314   003E14  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  9315   003E16  B4D8               	btfsc	status,2,c
  9316   003E18  EF10  F01F         	goto	u2001
  9317   003E1C  EF12  F01F         	goto	u2000
  9318   003E20                     u2001:
  9319   003E20  EF3A  F01F         	goto	l3220
  9320   003E24                     u2000:
  9321   003E24  0E01               	movlw	1
  9322   003E26  6E10               	movwf	___awdiv@counter^0,c
  9323   003E28  EF1A  F01F         	goto	l3206
  9324   003E2C                     l3204:
  9325   003E2C  90D8               	bcf	status,0,c
  9326   003E2E  360E               	rlcf	___awdiv@divisor^0,f,c
  9327   003E30  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  9328   003E32  2A10               	incf	___awdiv@counter^0,f,c
  9329   003E34                     l3206:
  9330   003E34  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  9331   003E36  EF1F  F01F         	goto	u2011
  9332   003E3A  EF21  F01F         	goto	u2010
  9333   003E3E                     u2011:
  9334   003E3E  EF16  F01F         	goto	l3204
  9335   003E42                     u2010:
  9336   003E42                     l3208:
  9337   003E42  90D8               	bcf	status,0,c
  9338   003E44  3612               	rlcf	___awdiv@quotient^0,f,c
  9339   003E46  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  9340   003E48  500E               	movf	___awdiv@divisor^0,w,c
  9341   003E4A  5C0C               	subwf	___awdiv@dividend^0,w,c
  9342   003E4C  500F               	movf	(___awdiv@divisor+1)^0,w,c
  9343   003E4E  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  9344   003E50  A0D8               	btfss	status,0,c
  9345   003E52  EF2D  F01F         	goto	u2021
  9346   003E56  EF2F  F01F         	goto	u2020
  9347   003E5A                     u2021:
  9348   003E5A  EF34  F01F         	goto	l3216
  9349   003E5E                     u2020:
  9350   003E5E  500E               	movf	___awdiv@divisor^0,w,c
  9351   003E60  5E0C               	subwf	___awdiv@dividend^0,f,c
  9352   003E62  500F               	movf	(___awdiv@divisor+1)^0,w,c
  9353   003E64  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  9354   003E66  8012               	bsf	___awdiv@quotient^0,0,c
  9355   003E68                     l3216:
  9356   003E68  90D8               	bcf	status,0,c
  9357   003E6A  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  9358   003E6C  320E               	rrcf	___awdiv@divisor^0,f,c
  9359   003E6E  2E10               	decfsz	___awdiv@counter^0,f,c
  9360   003E70  EF21  F01F         	goto	l3208
  9361   003E74                     l3220:
  9362   003E74  5011               	movf	___awdiv@sign^0,w,c
  9363   003E76  B4D8               	btfsc	status,2,c
  9364   003E78  EF40  F01F         	goto	u2031
  9365   003E7C  EF42  F01F         	goto	u2030
  9366   003E80                     u2031:
  9367   003E80  EF46  F01F         	goto	l3224
  9368   003E84                     u2030:
  9369   003E84  6C12               	negf	___awdiv@quotient^0,c
  9370   003E86  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  9371   003E88  B0D8               	btfsc	status,0,c
  9372   003E8A  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  9373   003E8C                     l3224:
  9374   003E8C  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  9375   003E90  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  9376   003E94  0012               	return		;funcret
  9377   003E96                     __end_of___awdiv:
  9378                           	callstack 0
  9379                           
  9380 ;; *************** function _ADC_init *****************
  9381 ;; Defined at:
  9382 ;;		line 9 in file "ADC.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;		None
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;		None
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  1    wreg      void 
  9389 ;; Registers used:
  9390 ;;		wreg, status,2
  9391 ;; Tracked objects:
  9392 ;;		On entry : 0/0
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9400 ;;Total ram usage:        0 bytes
  9401 ;; Hardware stack levels used: 1
  9402 ;; Hardware stack levels required when called: 5
  9403 ;; This function calls:
  9404 ;;		Nothing
  9405 ;; This function is called by:
  9406 ;;		_batteryLevel
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410                           	psect	text36
  9411   00441A                     __ptext36:
  9412                           	callstack 0
  9413   00441A                     _ADC_init:
  9414                           	callstack 24
  9415   00441A                     
  9416                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  9417   00441A  8C86               	bsf	134,6,c	;volatile
  9418                           
  9419                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  9420   00441C  010E               	movlb	14	; () banked
  9421   00441E  8DB4               	bsf	180,6,b	;volatile
  9422                           
  9423                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  9424   004420  010F               	movlb	15	; () banked
  9425   004422  9958               	bcf	88,4,b	;volatile
  9426   004424                     
  9427                           ; BSR set to: 15
  9428                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  9429   004424  0EFC               	movlw	-4
  9430   004426  1758               	andwf	88,f,b	;volatile
  9431                           
  9432                           ;ADC.c: 17:     ADPCH=0b101110;
  9433   004428  0E2E               	movlw	46
  9434   00442A  6F5F               	movwf	95,b	;volatile
  9435   00442C                     
  9436                           ; BSR set to: 15
  9437                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  9438   00442C  9460               	bcf	96,2,c	;volatile
  9439   00442E                     
  9440                           ; BSR set to: 15
  9441                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  9442   00442E  8860               	bsf	96,4,c	;volatile
  9443   004430                     
  9444                           ; BSR set to: 15
  9445                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  9446   004430  8E60               	bsf	96,7,c	;volatile
  9447   004432                     
  9448                           ; BSR set to: 15
  9449   004432  0012               	return		;funcret
  9450   004434                     __end_of_ADC_init:
  9451                           	callstack 0
  9452                           
  9453 ;; *************** function _ADC_getval *****************
  9454 ;; Defined at:
  9455 ;;		line 23 in file "ADC.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;		None
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;  tmpval          1   11[COMRAM] unsigned char 
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  1    wreg      unsigned char 
  9462 ;; Registers used:
  9463 ;;		wreg, status,2
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9472 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9473 ;;Total ram usage:        1 bytes
  9474 ;; Hardware stack levels used: 1
  9475 ;; Hardware stack levels required when called: 5
  9476 ;; This function calls:
  9477 ;;		Nothing
  9478 ;; This function is called by:
  9479 ;;		_batteryLevel
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           	psect	text37
  9484   004434                     __ptext37:
  9485                           	callstack 0
  9486   004434                     _ADC_getval:
  9487                           	callstack 24
  9488   004434                     
  9489                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  9490   004434  8060               	bsf	96,0,c	;volatile
  9491   004436                     l419:
  9492   004436  B060               	btfsc	96,0,c	;volatile
  9493   004438  EF20  F022         	goto	u1871
  9494   00443C  EF22  F022         	goto	u1870
  9495   004440                     u1871:
  9496   004440  EF1B  F022         	goto	l419
  9497   004444                     u1870:
  9498   004444                     
  9499                           ;ADC.c: 31:     tmpval = ADRESH;
  9500   004444  CF64 F00C          	movff	3940,ADC_getval@tmpval	;volatile
  9501   004448                     
  9502                           ;ADC.c: 35:     return tmpval;
  9503   004448  500C               	movf	ADC_getval@tmpval^0,w,c
  9504   00444A  0012               	return		;funcret
  9505   00444C                     __end_of_ADC_getval:
  9506                           	callstack 0
  9507                           
  9508 ;; *************** function _Timer0_init *****************
  9509 ;; Defined at:
  9510 ;;		line 7 in file "timers.c"
  9511 ;; Parameters:    Size  Location     Type
  9512 ;;		None
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;		None
  9515 ;; Return value:  Size  Location     Type
  9516 ;;                  1    wreg      void 
  9517 ;; Registers used:
  9518 ;;		wreg, status,2
  9519 ;; Tracked objects:
  9520 ;;		On entry : 0/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9528 ;;Total ram usage:        0 bytes
  9529 ;; Hardware stack levels used: 1
  9530 ;; Hardware stack levels required when called: 5
  9531 ;; This function calls:
  9532 ;;		Nothing
  9533 ;; This function is called by:
  9534 ;;		_main
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           	psect	text38
  9539   0043BC                     __ptext38:
  9540                           	callstack 0
  9541   0043BC                     _Timer0_init:
  9542                           	callstack 25
  9543   0043BC                     
  9544                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  9545   0043BC  50D6               	movf	214,w,c	;volatile
  9546   0043BE  0B1F               	andlw	-225
  9547   0043C0  0940               	iorlw	64
  9548   0043C2  6ED6               	movwf	214,c	;volatile
  9549   0043C4                     
  9550                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  9551   0043C4  88D6               	bsf	214,4,c	;volatile
  9552                           
  9553                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
  9554   0043C6  50D6               	movf	214,w,c	;volatile
  9555   0043C8  0BF0               	andlw	-16
  9556   0043CA  090B               	iorlw	11
  9557   0043CC  6ED6               	movwf	214,c	;volatile
  9558   0043CE                     
  9559                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  9560   0043CE  88D5               	bsf	213,4,c	;volatile
  9561                           
  9562                           ;timers.c: 15:     TMR0H=0;
  9563   0043D0  0E00               	movlw	0
  9564   0043D2  6ED4               	movwf	212,c	;volatile
  9565                           
  9566                           ;timers.c: 16:     TMR0L=0;
  9567   0043D4  0E00               	movlw	0
  9568   0043D6  6ED3               	movwf	211,c	;volatile
  9569   0043D8                     
  9570                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  9571   0043D8  8ED5               	bsf	213,7,c	;volatile
  9572   0043DA  0012               	return		;funcret
  9573   0043DC                     __end_of_Timer0_init:
  9574                           	callstack 0
  9575                           
  9576 ;; *************** function _Interrupts_init *****************
  9577 ;; Defined at:
  9578 ;;		line 11 in file "interrupts.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;		None
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;		None
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1    wreg      void 
  9585 ;; Registers used:
  9586 ;;		None
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9596 ;;Total ram usage:        0 bytes
  9597 ;; Hardware stack levels used: 1
  9598 ;; Hardware stack levels required when called: 5
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		_main
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           	psect	text39
  9607   004464                     __ptext39:
  9608                           	callstack 0
  9609   004464                     _Interrupts_init:
  9610                           	callstack 25
  9611   004464                     
  9612                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
  9613   004464  8082               	bsf	130,0,c	;volatile
  9614                           
  9615                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
  9616   004466  010E               	movlb	14	; () banked
  9617   004468  919A               	bcf	154,0,b	;volatile
  9618                           
  9619                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
  9620   00446A  8129               	bsf	41,0,b	;volatile
  9621                           
  9622                           ;interrupts.c: 17:     IPR0bits.INT0IP = 1;
  9623   00446C  811F               	bsf	31,0,b	;volatile
  9624                           
  9625                           ;interrupts.c: 18:     INTCONbits.INT0EDG = 0;
  9626   00446E  90F2               	bcf	242,0,c	;volatile
  9627                           
  9628                           ;interrupts.c: 22:     TMR0IE=1;
  9629   004470  8B29               	bsf	41,5,b	;volatile
  9630                           
  9631                           ;interrupts.c: 23:     PIE4bits.RC4IE=1;
  9632   004472  872D               	bsf	45,3,b	;volatile
  9633                           
  9634                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  9635   004474  8CF2               	bsf	242,6,c	;volatile
  9636                           
  9637                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  9638   004476  8EF2               	bsf	242,7,c	;volatile
  9639   004478                     
  9640                           ; BSR set to: 14
  9641   004478  0012               	return		;funcret
  9642   00447A                     __end_of_Interrupts_init:
  9643                           	callstack 0
  9644                           
  9645 ;; *************** function _Buggy_init *****************
  9646 ;; Defined at:
  9647 ;;		line 7 in file "buggysetup.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;		None
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      void 
  9654 ;; Registers used:
  9655 ;;		None
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9665 ;;Total ram usage:        0 bytes
  9666 ;; Hardware stack levels used: 1
  9667 ;; Hardware stack levels required when called: 5
  9668 ;; This function calls:
  9669 ;;		Nothing
  9670 ;; This function is called by:
  9671 ;;		_main
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text40
  9676   00422E                     __ptext40:
  9677                           	callstack 0
  9678   00422E                     _Buggy_init:
  9679                           	callstack 25
  9680   00422E                     
  9681                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
  9682   00422E  9E7C               	bcf	124,7,c	;volatile
  9683                           
  9684                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
  9685   004230  9E84               	bcf	132,7,c	;volatile
  9686                           
  9687                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
  9688   004232  9680               	bcf	128,3,c	;volatile
  9689                           
  9690                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
  9691   004234  9688               	bcf	136,3,c	;volatile
  9692                           
  9693                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
  9694   004236  8486               	bsf	134,2,c	;volatile
  9695                           
  9696                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
  9697   004238  010E               	movlb	14	; () banked
  9698   00423A  95B4               	bcf	180,2,b	;volatile
  9699                           
  9700                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
  9701   00423C  8686               	bsf	134,3,c	;volatile
  9702                           
  9703                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
  9704   00423E  97B4               	bcf	180,3,b	;volatile
  9705                           
  9706                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
  9707   004240  9280               	bcf	128,1,c	;volatile
  9708                           
  9709                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
  9710   004242  9288               	bcf	136,1,c	;volatile
  9711                           
  9712                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
  9713   004244  987C               	bcf	124,4,c	;volatile
  9714                           
  9715                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
  9716   004246  9884               	bcf	132,4,c	;volatile
  9717                           
  9718                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
  9719   004248  967C               	bcf	124,3,c	;volatile
  9720                           
  9721                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
  9722   00424A  9684               	bcf	132,3,c	;volatile
  9723                           
  9724                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
  9725   00424C  97A7               	bcf	167,3,b	;volatile
  9726                           
  9727                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
  9728   00424E  9080               	bcf	128,0,c	;volatile
  9729                           
  9730                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
  9731   004250  9088               	bcf	136,0,c	;volatile
  9732                           
  9733                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
  9734   004252  907E               	bcf	126,0,c	;volatile
  9735                           
  9736                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
  9737   004254  9086               	bcf	134,0,c	;volatile
  9738                           
  9739                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
  9740   004256  907F               	bcf	127,0,c	;volatile
  9741                           
  9742                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
  9743   004258  9087               	bcf	135,0,c	;volatile
  9744                           
  9745                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
  9746   00425A  9E7D               	bcf	125,7,c	;volatile
  9747                           
  9748                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
  9749   00425C  9E85               	bcf	133,7,c	;volatile
  9750                           
  9751                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
  9752   00425E  9679               	bcf	121,3,c	;volatile
  9753                           
  9754                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
  9755   004260  9681               	bcf	129,3,c	;volatile
  9756   004262                     
  9757                           ; BSR set to: 14
  9758   004262  0012               	return		;funcret
  9759   004264                     __end_of_Buggy_init:
  9760                           	callstack 0
  9761                           
  9762 ;; *************** function _HighISR *****************
  9763 ;; Defined at:
  9764 ;;		line 33 in file "interrupts.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;		None
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;		None
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1    wreg      void 
  9771 ;; Registers used:
  9772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9781 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9782 ;;Total ram usage:        2 bytes
  9783 ;; Hardware stack levels used: 1
  9784 ;; Hardware stack levels required when called: 4
  9785 ;; This function calls:
  9786 ;;		_getCharFromTxBuf
  9787 ;;		_isDataInTxBuf
  9788 ;;		_putCharToRxBuf
  9789 ;;		i2_color_clear_init_interrupts
  9790 ;; This function is called by:
  9791 ;;		Interrupt level 2
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795                           	psect	intcode
  9796   000008                     __pintcode:
  9797                           	callstack 0
  9798   000008                     _HighISR:
  9799                           	callstack 21
  9800                           
  9801                           ; BSR set to: 14
  9802                           ;incstack = 0
  9803   000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9804   00000A  CFD9 F00A          	movff	fsr2l,??_HighISR
  9805   00000E  CFDA F00B          	movff	fsr2h,??_HighISR+1
  9806   000012                     
  9807                           ;interrupts.c: 37:     if(PIR0bits.INT0IF){
  9808   000012  010E               	movlb	14	; () banked
  9809   000014  A133               	btfss	51,0,b	;volatile
  9810   000016  EF0F  F000         	goto	i2u287_41
  9811   00001A  EF11  F000         	goto	i2u287_40
  9812   00001E                     i2u287_41:
  9813   00001E  EF18  F000         	goto	i2l3902
  9814   000022                     i2u287_40:
  9815   000022                     
  9816                           ; BSR set to: 14
  9817                           ;interrupts.c: 38:         wall = 1;
  9818   000022  0E01               	movlw	1
  9819   000024  0100               	movlb	0	; () banked
  9820   000026  6FB1               	movwf	_wall& (0+255),b
  9821   000028                     
  9822                           ; BSR set to: 0
  9823                           ;interrupts.c: 39:         color_clear_init_interrupts();
  9824   000028  ECD0  F01F         	call	i2_color_clear_init_interrupts	;wreg free
  9825   00002C                     
  9826                           ;interrupts.c: 40:         PIR0bits.INT0IF = 0;
  9827   00002C  010E               	movlb	14	; () banked
  9828   00002E  9133               	bcf	51,0,b	;volatile
  9829   000030                     i2l3902:
  9830                           
  9831                           ; BSR set to: 14
  9832                           ;interrupts.c: 47:     if(TMR0IF){
  9833   000030  AB33               	btfss	51,5,b	;volatile
  9834   000032  EF1D  F000         	goto	i2u288_41
  9835   000036  EF1F  F000         	goto	i2u288_40
  9836   00003A                     i2u288_41:
  9837   00003A  EF24  F000         	goto	i2l3908
  9838   00003E                     i2u288_40:
  9839   00003E                     
  9840                           ; BSR set to: 14
  9841                           ;interrupts.c: 48:         lost = 1;
  9842   00003E  0E01               	movlw	1
  9843   000040  0100               	movlb	0	; () banked
  9844   000042  6FB0               	movwf	_lost& (0+255),b
  9845   000044                     
  9846                           ; BSR set to: 0
  9847                           ;interrupts.c: 49:         TMR0IF=0;
  9848   000044  010E               	movlb	14	; () banked
  9849   000046  9B33               	bcf	51,5,b	;volatile
  9850   000048                     i2l3908:
  9851                           
  9852                           ; BSR set to: 14
  9853                           ;interrupts.c: 56:     if(PIR4bits.RC4IF){
  9854   000048  A737               	btfss	55,3,b	;volatile
  9855   00004A  EF29  F000         	goto	i2u289_41
  9856   00004E  EF2B  F000         	goto	i2u289_40
  9857   000052                     i2u289_41:
  9858   000052  EF2E  F000         	goto	i2l3912
  9859   000056                     i2u289_40:
  9860   000056                     
  9861                           ; BSR set to: 14
  9862                           ;interrupts.c: 58:         putCharToRxBuf(RC4REG);
  9863   000056  51E3               	movf	227,w,b	;volatile
  9864   000058  EC96  F021         	call	_putCharToRxBuf
  9865   00005C                     i2l3912:
  9866                           
  9867                           ;interrupts.c: 62:     if(PIR4bits.TX4IF){
  9868   00005C  010E               	movlb	14	; () banked
  9869   00005E  A537               	btfss	55,2,b	;volatile
  9870   000060  EF34  F000         	goto	i2u290_41
  9871   000064  EF36  F000         	goto	i2u290_40
  9872   000068                     i2u290_41:
  9873   000068  EF46  F000         	goto	i2l338
  9874   00006C                     i2u290_40:
  9875   00006C                     
  9876                           ; BSR set to: 14
  9877                           ;interrupts.c: 64:         TX4REG = getCharFromTxBuf();
  9878   00006C  ECA9  F021         	call	_getCharFromTxBuf	;wreg free
  9879   000070  010E               	movlb	14	; () banked
  9880   000072  6FE4               	movwf	228,b	;volatile
  9881   000074                     
  9882                           ; BSR set to: 14
  9883                           ;interrupts.c: 65:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
  9884   000074  EC26  F022         	call	_isDataInTxBuf	;wreg free
  9885   000078  0900               	iorlw	0
  9886   00007A  A4D8               	btfss	status,2,c
  9887   00007C  EF42  F000         	goto	i2u291_41
  9888   000080  EF44  F000         	goto	i2u291_40
  9889   000084                     i2u291_41:
  9890   000084  EF46  F000         	goto	i2l338
  9891   000088                     i2u291_40:
  9892   000088  010E               	movlb	14	; () banked
  9893   00008A  952D               	bcf	45,2,b	;volatile
  9894   00008C                     i2l338:
  9895   00008C  C00B  FFDA         	movff	??_HighISR+1,fsr2h
  9896   000090  C00A  FFD9         	movff	??_HighISR,fsr2l
  9897   000094  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9898   000096  0011               	retfie		f
  9899   000098                     __end_of_HighISR:
  9900                           	callstack 0
  9901                           
  9902 ;; *************** function i2_color_clear_init_interrupts *****************
  9903 ;; Defined at:
  9904 ;;		line 27 in file "color.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;		None
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;  low_threshol    2    7[COMRAM] unsigned int 
  9909 ;;  high_thresho    2    5[COMRAM] unsigned int 
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  1    wreg      void 
  9912 ;; Registers used:
  9913 ;;		wreg, status,2, status,0, cstack
  9914 ;; Tracked objects:
  9915 ;;		On entry : 0/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9920 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9922 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9923 ;;Total ram usage:        5 bytes
  9924 ;; Hardware stack levels used: 1
  9925 ;; Hardware stack levels required when called: 3
  9926 ;; This function calls:
  9927 ;;		i2_I2C_2_Master_Start
  9928 ;;		i2_I2C_2_Master_Stop
  9929 ;;		i2_I2C_2_Master_Write
  9930 ;;		i2_color_writetoaddr
  9931 ;; This function is called by:
  9932 ;;		_HighISR
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text42
  9937   003FA0                     __ptext42:
  9938                           	callstack 0
  9939   003FA0                     i2_color_clear_init_interrupts:
  9940                           	callstack 21
  9941   003FA0                     
  9942                           ;color.c: 29:     I2C_2_Master_Start();
  9943   003FA0  EC62  F022         	call	i2_I2C_2_Master_Start	;wreg free
  9944                           
  9945                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  9946   003FA4  0E52               	movlw	82
  9947   003FA6  EC43  F022         	call	i2_I2C_2_Master_Write
  9948                           
  9949                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  9950   003FAA  0EE6               	movlw	230
  9951   003FAC  EC43  F022         	call	i2_I2C_2_Master_Write
  9952                           
  9953                           ;color.c: 32:     I2C_2_Master_Stop();
  9954   003FB0  EC5D  F022         	call	i2_I2C_2_Master_Stop	;wreg free
  9955   003FB4                     
  9956                           ;color.c: 35:     unsigned int high_threshold = ambient + 10;
  9957   003FB4  0E0A               	movlw	10
  9958   003FB6  244E               	addwf	_ambient^0,w,c
  9959   003FB8  6E06               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
  9960   003FBA  0E00               	movlw	0
  9961   003FBC  204F               	addwfc	(_ambient+1)^0,w,c
  9962   003FBE  6E07               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
  9963   003FC0                     
  9964                           ;color.c: 36:     unsigned int low_threshold = ambient - 35;
  9965   003FC0  0EDD               	movlw	221
  9966   003FC2  244E               	addwf	_ambient^0,w,c
  9967   003FC4  6E08               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
  9968   003FC6  0EFF               	movlw	255
  9969   003FC8  204F               	addwfc	(_ambient+1)^0,w,c
  9970   003FCA  6E09               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
  9971                           
  9972                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
  9973   003FCC  0E13               	movlw	19
  9974   003FCE  6E03               	movwf	i2color_writetoaddr@value^0,c
  9975   003FD0  0E00               	movlw	0
  9976   003FD2  ECEE  F021         	call	i2_color_writetoaddr
  9977   003FD6                     
  9978                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9979   003FD6  0E3F               	movlw	63
  9980   003FD8  6E05               	movwf	??i2_color_clear_init_interrupts^0,c
  9981   003FDA  0E55               	movlw	85
  9982   003FDC                     i2u415_47:
  9983   003FDC  2EE8               	decfsz	wreg,f,c
  9984   003FDE  D7FE               	bra	i2u415_47
  9985   003FE0  2E05               	decfsz	??i2_color_clear_init_interrupts^0,f,c
  9986   003FE2  D7FC               	bra	i2u415_47
  9987   003FE4  0000               	nop	
  9988   003FE6                     
  9989                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
  9990   003FE6  5007               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
  9991   003FE8  6E03               	movwf	i2color_writetoaddr@value^0,c
  9992   003FEA  0E07               	movlw	7
  9993   003FEC  ECEE  F021         	call	i2_color_writetoaddr
  9994   003FF0                     
  9995                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  9996   003FF0  C006  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
  9997   003FF4  0E06               	movlw	6
  9998   003FF6  ECEE  F021         	call	i2_color_writetoaddr
  9999   003FFA                     
 10000                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
 10001   003FFA  5009               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
 10002   003FFC  6E03               	movwf	i2color_writetoaddr@value^0,c
 10003   003FFE  0E05               	movlw	5
 10004   004000  ECEE  F021         	call	i2_color_writetoaddr
 10005   004004                     
 10006                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
 10007   004004  C008  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
 10008   004008  0E04               	movlw	4
 10009   00400A  ECEE  F021         	call	i2_color_writetoaddr
 10010   00400E                     
 10011                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
 10012   00400E  0E04               	movlw	4
 10013   004010  6E03               	movwf	i2color_writetoaddr@value^0,c
 10014   004012  0E0C               	movlw	12
 10015   004014  ECEE  F021         	call	i2_color_writetoaddr
 10016   004018  0012               	return		;funcret
 10017   00401A                     __end_ofi2_color_clear_init_interrupts:
 10018                           	callstack 0
 10019                           
 10020 ;; *************** function i2_color_writetoaddr *****************
 10021 ;; Defined at:
 10022 ;;		line 50 in file "color.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;  address         1    wreg     unsigned char 
 10025 ;;  value           1    2[COMRAM] unsigned char 
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;  address         1    3[COMRAM] unsigned char 
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  1    wreg      void 
 10030 ;; Registers used:
 10031 ;;		wreg, status,2, status,0, cstack
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10037 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10041 ;;Total ram usage:        2 bytes
 10042 ;; Hardware stack levels used: 1
 10043 ;; Hardware stack levels required when called: 2
 10044 ;; This function calls:
 10045 ;;		i2_I2C_2_Master_Start
 10046 ;;		i2_I2C_2_Master_Stop
 10047 ;;		i2_I2C_2_Master_Write
 10048 ;; This function is called by:
 10049 ;;		i2_color_clear_init_interrupts
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           	psect	text43
 10054   0043DC                     __ptext43:
 10055                           	callstack 0
 10056   0043DC                     i2_color_writetoaddr:
 10057                           	callstack 21
 10058                           
 10059                           ;incstack = 0
 10060                           ;i2color_writetoaddr@address stored from wreg
 10061   0043DC  6E04               	movwf	i2color_writetoaddr@address^0,c
 10062   0043DE                     
 10063                           ;color.c: 51:     I2C_2_Master_Start();
 10064   0043DE  EC62  F022         	call	i2_I2C_2_Master_Start	;wreg free
 10065                           
 10066                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
 10067   0043E2  0E52               	movlw	82
 10068   0043E4  EC43  F022         	call	i2_I2C_2_Master_Write
 10069                           
 10070                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
 10071   0043E8  5004               	movf	i2color_writetoaddr@address^0,w,c
 10072   0043EA  0980               	iorlw	128
 10073   0043EC  EC43  F022         	call	i2_I2C_2_Master_Write
 10074                           
 10075                           ;color.c: 54:     I2C_2_Master_Write(value);
 10076   0043F0  5003               	movf	i2color_writetoaddr@value^0,w,c
 10077   0043F2  EC43  F022         	call	i2_I2C_2_Master_Write
 10078                           
 10079                           ;color.c: 55:     I2C_2_Master_Stop();
 10080   0043F6  EC5D  F022         	call	i2_I2C_2_Master_Stop	;wreg free
 10081   0043FA  0012               	return		;funcret
 10082   0043FC                     __end_ofi2_color_writetoaddr:
 10083                           	callstack 0
 10084                           
 10085 ;; *************** function i2_I2C_2_Master_Write *****************
 10086 ;; Defined at:
 10087 ;;		line 45 in file "i2c.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;  data_byte       1    wreg     unsigned char 
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;  data_byte       1    1[COMRAM] unsigned char 
 10092 ;; Return value:  Size  Location     Type
 10093 ;;                  1    wreg      void 
 10094 ;; Registers used:
 10095 ;;		wreg, status,2, status,0, cstack
 10096 ;; Tracked objects:
 10097 ;;		On entry : 0/0
 10098 ;;		On exit  : 0/0
 10099 ;;		Unchanged: 0/0
 10100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10104 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10105 ;;Total ram usage:        1 bytes
 10106 ;; Hardware stack levels used: 1
 10107 ;; Hardware stack levels required when called: 1
 10108 ;; This function calls:
 10109 ;;		i2_I2C_2_Master_Idle
 10110 ;; This function is called by:
 10111 ;;		i2_color_clear_init_interrupts
 10112 ;;		i2_color_writetoaddr
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           
 10116                           	psect	text44
 10117   004486                     __ptext44:
 10118                           	callstack 0
 10119   004486                     i2_I2C_2_Master_Write:
 10120                           	callstack 21
 10121                           
 10122                           ;incstack = 0
 10123                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 10124   004486  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 10125   004488                     
 10126                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10127   004488  EC6F  F021         	call	i2_I2C_2_Master_Idle	;wreg free
 10128   00448C                     
 10129                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10130   00448C  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 10131   004490  0012               	return		;funcret
 10132   004492                     __end_ofi2_I2C_2_Master_Write:
 10133                           	callstack 0
 10134                           
 10135 ;; *************** function i2_I2C_2_Master_Stop *****************
 10136 ;; Defined at:
 10137 ;;		line 39 in file "i2c.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;		None
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;		None
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  1    wreg      void 
 10144 ;; Registers used:
 10145 ;;		wreg, status,2, status,0, cstack
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10155 ;;Total ram usage:        0 bytes
 10156 ;; Hardware stack levels used: 1
 10157 ;; Hardware stack levels required when called: 1
 10158 ;; This function calls:
 10159 ;;		i2_I2C_2_Master_Idle
 10160 ;; This function is called by:
 10161 ;;		i2_color_clear_init_interrupts
 10162 ;;		i2_color_writetoaddr
 10163 ;; This function uses a non-reentrant model
 10164 ;;
 10165                           
 10166                           	psect	text45
 10167   0044BA                     __ptext45:
 10168                           	callstack 0
 10169   0044BA                     i2_I2C_2_Master_Stop:
 10170                           	callstack 21
 10171   0044BA                     
 10172                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10173   0044BA  EC6F  F021         	call	i2_I2C_2_Master_Idle	;wreg free
 10174   0044BE                     
 10175                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10176   0044BE  010E               	movlb	14	; () banked
 10177   0044C0  85DA               	bsf	218,2,b	;volatile
 10178   0044C2                     
 10179                           ; BSR set to: 14
 10180   0044C2  0012               	return		;funcret
 10181   0044C4                     __end_ofi2_I2C_2_Master_Stop:
 10182                           	callstack 0
 10183                           
 10184 ;; *************** function i2_I2C_2_Master_Start *****************
 10185 ;; Defined at:
 10186 ;;		line 27 in file "i2c.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;		None
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;		None
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  1    wreg      void 
 10193 ;; Registers used:
 10194 ;;		wreg, status,2, status,0, cstack
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/0
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10204 ;;Total ram usage:        0 bytes
 10205 ;; Hardware stack levels used: 1
 10206 ;; Hardware stack levels required when called: 1
 10207 ;; This function calls:
 10208 ;;		i2_I2C_2_Master_Idle
 10209 ;; This function is called by:
 10210 ;;		i2_color_clear_init_interrupts
 10211 ;;		i2_color_writetoaddr
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           	psect	text46
 10216   0044C4                     __ptext46:
 10217                           	callstack 0
 10218   0044C4                     i2_I2C_2_Master_Start:
 10219                           	callstack 21
 10220   0044C4                     
 10221                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10222   0044C4  EC6F  F021         	call	i2_I2C_2_Master_Idle	;wreg free
 10223   0044C8                     
 10224                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10225   0044C8  010E               	movlb	14	; () banked
 10226   0044CA  81DA               	bsf	218,0,b	;volatile
 10227   0044CC                     
 10228                           ; BSR set to: 14
 10229   0044CC  0012               	return		;funcret
 10230   0044CE                     __end_ofi2_I2C_2_Master_Start:
 10231                           	callstack 0
 10232                           
 10233 ;; *************** function i2_I2C_2_Master_Idle *****************
 10234 ;; Defined at:
 10235 ;;		line 22 in file "i2c.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;		None
 10238 ;; Auto vars:     Size  Location     Type
 10239 ;;		None
 10240 ;; Return value:  Size  Location     Type
 10241 ;;                  1    wreg      void 
 10242 ;; Registers used:
 10243 ;;		wreg, status,2, status,0
 10244 ;; Tracked objects:
 10245 ;;		On entry : 0/0
 10246 ;;		On exit  : 0/0
 10247 ;;		Unchanged: 0/0
 10248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10253 ;;Total ram usage:        1 bytes
 10254 ;; Hardware stack levels used: 1
 10255 ;; This function calls:
 10256 ;;		Nothing
 10257 ;; This function is called by:
 10258 ;;		i2_I2C_2_Master_Start
 10259 ;;		i2_I2C_2_Master_Stop
 10260 ;;		i2_I2C_2_Master_Write
 10261 ;; This function uses a non-reentrant model
 10262 ;;
 10263                           
 10264                           	psect	text47
 10265   0042DE                     __ptext47:
 10266                           	callstack 0
 10267   0042DE                     i2_I2C_2_Master_Idle:
 10268                           	callstack 21
 10269   0042DE                     i2l228:
 10270   0042DE  010E               	movlb	14	; () banked
 10271   0042E0  B5D8               	btfsc	216,2,b	;volatile
 10272   0042E2  EF75  F021         	goto	i2u155_41
 10273   0042E6  EF77  F021         	goto	i2u155_40
 10274   0042EA                     i2u155_41:
 10275   0042EA  EF6F  F021         	goto	i2l228
 10276   0042EE                     i2u155_40:
 10277   0042EE                     
 10278                           ; BSR set to: 14
 10279   0042EE  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 10280   0042F2  0E1F               	movlw	31
 10281   0042F4  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 10282   0042F6  A4D8               	btfss	status,2,c
 10283   0042F8  EF80  F021         	goto	i2u156_41
 10284   0042FC  EF82  F021         	goto	i2u156_40
 10285   004300                     i2u156_41:
 10286   004300  EF6F  F021         	goto	i2l228
 10287   004304                     i2u156_40:
 10288   004304                     
 10289                           ; BSR set to: 14
 10290   004304  0012               	return		;funcret
 10291   004306                     __end_ofi2_I2C_2_Master_Idle:
 10292                           	callstack 0
 10293                           
 10294 ;; *************** function _putCharToRxBuf *****************
 10295 ;; Defined at:
 10296 ;;		line 33 in file "serial.c"
 10297 ;; Parameters:    Size  Location     Type
 10298 ;;  byte            1    wreg     unsigned char 
 10299 ;; Auto vars:     Size  Location     Type
 10300 ;;  byte            1    0[COMRAM] unsigned char 
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  1    wreg      void 
 10303 ;; Registers used:
 10304 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10305 ;; Tracked objects:
 10306 ;;		On entry : 0/0
 10307 ;;		On exit  : 0/0
 10308 ;;		Unchanged: 0/0
 10309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10313 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10314 ;;Total ram usage:        1 bytes
 10315 ;; Hardware stack levels used: 1
 10316 ;; This function calls:
 10317 ;;		Nothing
 10318 ;; This function is called by:
 10319 ;;		_HighISR
 10320 ;; This function uses a non-reentrant model
 10321 ;;
 10322                           
 10323                           	psect	text48
 10324   00432C                     __ptext48:
 10325                           	callstack 0
 10326   00432C                     _putCharToRxBuf:
 10327                           	callstack 24
 10328                           
 10329                           ; BSR set to: 14
 10330                           ;incstack = 0
 10331                           ;putCharToRxBuf@byte stored from wreg
 10332   00432C  6E01               	movwf	putCharToRxBuf@byte^0,c
 10333   00432E                     
 10334                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
 10335   00432E  0E13               	movlw	19
 10336   004330  644D               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
 10337   004332  EF9D  F021         	goto	i2u262_41
 10338   004336  EF9F  F021         	goto	i2u262_40
 10339   00433A                     i2u262_41:
 10340   00433A  EFA1  F021         	goto	i2l3722
 10341   00433E                     i2u262_40:
 10342   00433E  0E00               	movlw	0
 10343   004340  6E4D               	movwf	_RxBufWriteCnt^0,c	;volatile
 10344   004342                     i2l3722:
 10345                           
 10346                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
 10347   004342  504D               	movf	_RxBufWriteCnt^0,w,c
 10348   004344  0F9C               	addlw	low _EUSART4RXbuf
 10349   004346  6ED9               	movwf	fsr2l,c
 10350   004348  6ADA               	clrf	fsr2h,c
 10351   00434A  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
 10352   00434E  2A4D               	incf	_RxBufWriteCnt^0,f,c	;volatile
 10353   004350  0012               	return		;funcret
 10354   004352                     __end_of_putCharToRxBuf:
 10355                           	callstack 0
 10356                           
 10357 ;; *************** function _isDataInTxBuf *****************
 10358 ;; Defined at:
 10359 ;;		line 61 in file "serial.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;		None
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;		None
 10364 ;; Return value:  Size  Location     Type
 10365 ;;                  1    wreg      unsigned char 
 10366 ;; Registers used:
 10367 ;;		wreg, status,2, status,0
 10368 ;; Tracked objects:
 10369 ;;		On entry : 0/0
 10370 ;;		On exit  : 0/0
 10371 ;;		Unchanged: 0/0
 10372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;Total ram usage:        0 bytes
 10378 ;; Hardware stack levels used: 1
 10379 ;; This function calls:
 10380 ;;		Nothing
 10381 ;; This function is called by:
 10382 ;;		_HighISR
 10383 ;;		_sendTxBuf
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           	psect	text49
 10388   00444C                     __ptext49:
 10389                           	callstack 0
 10390   00444C                     _isDataInTxBuf:
 10391                           	callstack 24
 10392   00444C                     
 10393                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
 10394   00444C  504A               	movf	_TxBufReadCnt^0,w,c	;volatile
 10395   00444E  184B               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
 10396   004450  A4D8               	btfss	status,2,c
 10397   004452  EF2D  F022         	goto	i2u264_41
 10398   004456  EF30  F022         	goto	i2u264_40
 10399   00445A                     i2u264_41:
 10400   00445A  0E01               	movlw	1
 10401   00445C  EF31  F022         	goto	i2u265_40
 10402   004460                     i2u264_40:
 10403   004460  0E00               	movlw	0
 10404   004462                     i2u265_40:
 10405   004462  0012               	return		;funcret
 10406   004464                     __end_of_isDataInTxBuf:
 10407                           	callstack 0
 10408                           
 10409 ;; *************** function _getCharFromTxBuf *****************
 10410 ;; Defined at:
 10411 ;;		line 47 in file "serial.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;		None
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;		None
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  1    wreg      unsigned char 
 10418 ;; Registers used:
 10419 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10429 ;;Total ram usage:        1 bytes
 10430 ;; Hardware stack levels used: 1
 10431 ;; This function calls:
 10432 ;;		Nothing
 10433 ;; This function is called by:
 10434 ;;		_HighISR
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           	psect	text50
 10439   004352                     __ptext50:
 10440                           	callstack 0
 10441   004352                     _getCharFromTxBuf:
 10442                           	callstack 24
 10443   004352                     
 10444                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
 10445   004352  0E3B               	movlw	59
 10446   004354  644A               	cpfsgt	_TxBufReadCnt^0,c	;volatile
 10447   004356  EFAF  F021         	goto	i2u263_41
 10448   00435A  EFB1  F021         	goto	i2u263_40
 10449   00435E                     i2u263_41:
 10450   00435E  EFB3  F021         	goto	i2l3730
 10451   004362                     i2u263_40:
 10452   004362  0E00               	movlw	0
 10453   004364  6E4A               	movwf	_TxBufReadCnt^0,c	;volatile
 10454   004366                     i2l3730:
 10455                           
 10456                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
 10457   004366  2A4A               	incf	_TxBufReadCnt^0,f,c	;volatile
 10458   004368  044A               	decf	_TxBufReadCnt^0,w,c	;volatile
 10459   00436A  6E01               	movwf	??_getCharFromTxBuf^0,c
 10460   00436C  5001               	movf	??_getCharFromTxBuf^0,w,c
 10461   00436E  0F60               	addlw	low _EUSART4TXbuf
 10462   004370  6ED9               	movwf	fsr2l,c
 10463   004372  6ADA               	clrf	fsr2h,c
 10464   004374  50DF               	movf	indf2,w,c
 10465   004376  0012               	return		;funcret
 10466   004378                     __end_of_getCharFromTxBuf:
 10467                           	callstack 0
 10468                           
 10469                           	psect	smallconst
 10470   000E00                     __psmallconst:
 10471                           	callstack 0
 10472   000E00  00                 	db	0
 10473   000E01  00                 	db	0	; dummy byte at the end
 10474   000000                     
 10475                           	psect	rparam
 10476   000000                     
 10477                           	psect	temp
 10478   000050                     btemp:
 10479                           	callstack 0
 10480   000050                     	ds	1
 10481   000000                     int$flags	set	btemp
 10482   000000                     wtemp8	set	btemp+1
 10483   000000                     ttemp5	set	btemp+1
 10484   000000                     ttemp6	set	btemp+4
 10485   000000                     ttemp7	set	btemp+8
 10486                           
 10487                           	psect	config
 10488                           
 10489                           ;Config register CONFIG1L @ 0x300000
 10490                           ;	External Oscillator mode Selection bits
 10491                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10492                           ;	Power-up default value for COSC bits
 10493                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10494   300000                     	org	3145728
 10495   300000  AA                 	db	170
 10496                           
 10497                           ;Config register CONFIG1H @ 0x300001
 10498                           ;	unspecified, using default values
 10499                           ;	Clock Out Enable bit
 10500                           ;	CLKOUTEN = 0x1, unprogrammed default
 10501                           ;	Clock Switch Enable bit
 10502                           ;	CSWEN = 0x1, unprogrammed default
 10503                           ;	Fail-Safe Clock Monitor Enable bit
 10504                           ;	FCMEN = 0x1, unprogrammed default
 10505   300001                     	org	3145729
 10506   300001  FF                 	db	255
 10507                           
 10508                           ;Config register CONFIG3L @ 0x300004
 10509                           ;	WDT Period Select bits
 10510                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10511                           ;	WDT operating mode
 10512                           ;	WDTE = OFF, WDT Disabled
 10513   300004                     	org	3145732
 10514   300004  9F                 	db	159
 10515                           
 10516                           ;Config register CONFIG3H @ 0x300005
 10517                           ;	unspecified, using default values
 10518                           ;	WDT Window Select bits
 10519                           ;	WDTCWS = 0x7, unprogrammed default
 10520                           ;	WDT input clock selector
 10521                           ;	WDTCCS = 0x7, unprogrammed default
 10522   300005                     	org	3145733
 10523   300005  FF                 	db	255
 10524                           tosu	equ	0xFFF
 10525                           tosh	equ	0xFFE
 10526                           tosl	equ	0xFFD
 10527                           stkptr	equ	0xFFC
 10528                           pclatu	equ	0xFFB
 10529                           pclath	equ	0xFFA
 10530                           pcl	equ	0xFF9
 10531                           tblptru	equ	0xFF8
 10532                           tblptrh	equ	0xFF7
 10533                           tblptrl	equ	0xFF6
 10534                           tablat	equ	0xFF5
 10535                           prodh	equ	0xFF4
 10536                           prodl	equ	0xFF3
 10537                           indf0	equ	0xFEF
 10538                           postinc0	equ	0xFEE
 10539                           postdec0	equ	0xFED
 10540                           preinc0	equ	0xFEC
 10541                           plusw0	equ	0xFEB
 10542                           fsr0h	equ	0xFEA
 10543                           fsr0l	equ	0xFE9
 10544                           wreg	equ	0xFE8
 10545                           indf1	equ	0xFE7
 10546                           postinc1	equ	0xFE6
 10547                           postdec1	equ	0xFE5
 10548                           preinc1	equ	0xFE4
 10549                           plusw1	equ	0xFE3
 10550                           fsr1h	equ	0xFE2
 10551                           fsr1l	equ	0xFE1
 10552                           bsr	equ	0xFE0
 10553                           indf2	equ	0xFDF
 10554                           postinc2	equ	0xFDE
 10555                           postdec2	equ	0xFDD
 10556                           preinc2	equ	0xFDC
 10557                           plusw2	equ	0xFDB
 10558                           fsr2h	equ	0xFDA
 10559                           fsr2l	equ	0xFD9
 10560                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      79
    BANK0           160     60     146
    BANK1           256    214     254
    BANK2           256      0     122
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK1[1]), 

    color_calibration@blue	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@blue(BANK1[6]), 

    color_calibration@green	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@green(BANK1[6]), 

    color_calibration@lightblue	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@lightblue(BANK1[6]), 

    color_calibration@orange	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@orange(BANK1[6]), 

    color_calibration@pink	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@pink(BANK1[6]), 

    color_calibration@red	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@red(BANK1[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    color_calibration@RGBC_n	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC_n(BANK1[8]), 

    color_calibration@white	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@white(BANK1[6]), 

    color_calibration@yellow	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@yellow(BANK1[6]), 

    color_normalise@RGBC_n	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC_n(BANK1[8]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    S29DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S29DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), main@motorR(BANK1[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_calibration
    _move->_returnHome
    _returnHome->_reverseOneSquare
    _returnHome->_turnLeft
    _returnHome->_turnRight
    _lostReturnHome->_reverseOneSquare
    _lostReturnHome->_turnLeft
    _lostReturnHome->_turnRight
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_color_normalise
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___aldiv
    ___aldiv->___lmul
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_move

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               262   262      0  217863
                                             71 COMRAM     2     2      0
                                             16 BANK0     44    44      0
                                              0 BANK1    214   214      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
                   _color_click_init
                       _color_detect
                    _color_normalise
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                               _stop
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _move                                                18     2     16  103098
                                             64 COMRAM     2     2      0
                                              0 BANK0     16     0     16
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          20     5     15   53152
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      20     5     15   52272
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    4053
                                             30 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    14     7      7    5257
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2      69
                                             11 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    6245
                                             30 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        59     3     56    1442
                                             11 COMRAM    59     3     56
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    1612
                                             20 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0     862
                                             15 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             13 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20    6714
                                             49 COMRAM    22     2     20
                    _color_normalise
                         _color_read
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2    1167
                                             15 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                             12 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                     12     2     10    3181
                                             37 COMRAM    12     2     10
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             23 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   33814
                                             44 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   12433
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   20033
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2285
                                             24 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             17 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     543
                                             19 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0     356
                                              9 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (7) i2_color_clear_init_interrupts                        5     5      0     334
                                              4 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_normalise
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _white_Light
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_writetoaddr
   _color_detect
   _color_normalise
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _turnLeft
     _turnRight
   _resetTimer
   _stop
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      7A       9       47.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D6      FE       7       99.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3C      92       5       91.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      4F       1       84.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     259      66        0.0%
DATA                 0      0     259       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 18:18:38 2024

                                _white_Light 4378                      color_calibration@RGBC_n 0034  
                                         l91 283E                                           l89 2830  
                               ___awdiv@sign 0011                          ___wmul@multiplicand 000E  
                           main@turnDuration 01B1                            ??_Interrupts_init 000C  
                                        l100 2B9E                                          l141 43BA  
                                        l231 42DC                                          l135 422C  
                                        l152 3AD8                                          l240 44A4  
                                        l144 4394                                          l225 428C  
                                        l234 44AE                                          l146 439A  
                                        l138 3F9E                                          l243 4484  
                                        l171 30A6                                          l228 42B6  
                                        l180 232A                                          l156 30A4  
                                        l421 4444                                          l237 44B8  
                                        l149 3294                                          l422 444A  
                                        l246 41F4                                          l182 2338  
                                        l174 21C2                                          l191 2554  
                                        l183 23DE                                          l328 4478  
                                        l416 4432                                          l192 25FA  
                                        l176 21D0                                          l512 3F24  
                                        l433 419A                                          l601 36E4  
                                        l185 23EC                                          l177 2276  
                                        l434 419C                                          l610 37F4  
                                        l194 2608                                          l186 2492  
                                        l419 4436                                          l435 41B0  
                                        l195 26AE                                          l179 2284  
                                        l188 24A0                                          l277 4262  
                                        l437 41B2                                          l613 3822  
                                        l605 374E                                          l197 26BC  
                                        l189 2546                                          l630 364E  
                                        l622 357A                                          l702 4154  
                                        l198 2762                                          l519 398E  
                                        l607 3772                                          l703 4164  
                                        l624 359E                                          l369 4418  
                                        l553 1442                                          l618 3510  
                                        l650 33B6                                          l538 21B6  
                                        l627 3620                                          l635 3D84  
                                        l563 14BC                                          l547 1442  
                                        l660 2C8A                                          l644 3328  
                                        l572 1AE6                                          l653 3438  
                                        l671 2E3A                                          l639 3DD0  
                                        l664 2CA6                                          l656 347A  
                                        l648 3392                                          l665 2CDC  
                                        l593 3CAA                                          l682 43DA  
                                        l922 3E94                                          l770 3BE4  
                                        l578 1AE6                                          l691 432A  
                                        l668 2D2A                                          l596 3CEC  
                                        l588 1B60                                          l669 2E1A  
                                        l685 449A                                          l688 42B4  
                              ?_color_detect 000C                                          prod 0FF3  
                        i2_color_writetoaddr 43DC                                          wreg 0FE8  
                            color_detect@red 0014    color_clear_init_interrupts@high_threshold 0011  
i2color_clear_init_interrupts@high_threshold 0006                              _color_normalise 3990  
                                       l3000 438A                                         l3010 3152  
                                       l3002 30A8                                         l3020 3990  
                                       l3012 31B2                                         l3004 30C2  
                                       l3100 0F72                                         l1182 4084  
                                       l3022 39A4                                         l3014 31D0  
                                       l3006 30DC                                         l3030 426E  
                                       l3110 1024                                         l3102 0F92  
                                       l3200 3E12                                         l3024 3A08  
                                       l3016 3230                                         l3008 3134  
                                       l3032 4274                                         l3040 3F26  
                                       l3120 10CE                                         l3112 103C  
                                       l3104 0FAA                                         l4000 1F34  
                                       l3210 3E48                                         l3202 3E24  
                                       l3026 3A70                                         l3018 324E  
                                       l3034 4276                                         l3050 3F76  
                                       l3042 3F3A                                         l3130 1198  
                                       l3122 1106                                         l3114 1078  
                                       l3106 0FE6                                         l4010 1FEE  
                                       l4002 1F6C                                         l3060 4424  
                                       l3212 3E5E                                         l3204 3E2C  
                                       l3220 3E74                                         l3300 21B8  
                                       l3036 4278                                         l3028 4264  
                                       l3052 3F80                                         l3044 3F46  
                                       l3132 11B8                                         l3140 122C  
                                       l3124 1126                                         l3116 1096  
                                       l3108 1004                                         l4020 2090  
                                       l4012 200E                                         l4004 1F7E  
                                       l4100 28B2                                         l1189 408C  
                                       l3230 422E                                         l3070 4448  
                                       l3062 442C                                         l3222 3E84  
                                       l3214 3E66                                         l3206 3E34  
                                       l3310 221A                                         l3302 21BE  
                                       l3038 427A                                         l3054 3F8A  
                                       l3046 3F5C                                         l3142 124A  
                                       l3134 11D0                                         l3126 115E  
                                       l3118 10B6                                         l4030 2176  
                                       l4022 20C8                                         l4006 1F9E  
                                       l4014 2046                                         l4110 2908  
                                       l4102 28D6                                         l3064 442E  
                                       l3224 3E8C                                         l3216 3E68  
                                       l3208 3E42                                         l3400 26AA  
                                       l3320 2294                                         l3312 223A  
                                       l3304 21D4                                         l3056 3F94  
                                       l3048 3F6C                                         l3240 421E  
                                       l3232 41F6                                         l3160 136C  
                                       l3144 126A                                         l3152 12DE  
                                       l3136 1208                                         l3128 117A  
                                       l3080 0E72                                         l4024 20E8  
                                       l4016 2058                                         l4008 1FB6  
                                       l4120 294A                                         l4112 2920  
                                       l4104 28DC                                         l4040 2792  
                                       l4032 2764                                         l3250 43D8  
                                       l3066 4430                                         l3058 441A  
                                       l3218 3E6E                                         l3410 2726  
                                       l3402 26C0                                         l3330 2326  
                                       l3322 22B6                                         l3314 225A  
                                       l3306 21E0                                         l3242 4228  
                                       l3234 41FA                                         l3170 13E6  
                                       l3154 12FC                                         l3146 1282  
                                       l3090 0F02                                         l3082 0E92  
                                       l3074 0E02                                         l4018 2078  
                                       l4026 2120                                         l4130 29CC  
                                       l4122 295C                                         l4114 293C  
                                       l4106 28F4                                         l4050 27B2  
                                       l4042 27A2                                         l4034 2770  
                                       l3252 4464                                         l3244 43BC  
                                       l3068 4434                                         l2700 3840  
                                       l3420 2BE2                                         l3412 2746  
                                       l3404 26CC                                         l3340 23A2  
                                       l3332 233C                                         l3324 22CE  
                                       l3316 2272                                         l3308 2202  
                                       l3236 4204                                         l3500 302E  
                                       l3260 4412                                         l3180 1494  
                                       l3172 141E                                         l3156 131C  
                                       l3164 1390                                         l3148 12BA  
                                       l3092 0F34                                         l3084 0ECA  
                                       l3076 0E22                                         l4028 2132  
                                       l4140 2AE0                                         l4132 2A76  
                                       l4124 296C                                         l4116 2940  
                                       l4108 2900                                         l4060 27D0  
                                       l4052 27B6                                         l4044 27A6  
                                       l4036 2770                                         l3246 43C4  
                                       l3190 3DEC                                         l2710 390A  
                                       l2702 3894                                         l3430 2CCC  
                                       l3422 2C22                                         l3414 275E  
                                       l3406 26EE                                         l3350 241E  
                                       l3342 23C2                                         l3334 2348  
                                       l3326 22EE                                         l3318 2288  
                                       l3238 4214                                         l3510 30A0  
                                       l3502 3050                                         l3270 3ECC  
                                       l3262 4414                                         l3254 43FC  
                                       l3166 13AE                                         l3158 1334  
                                       l3182 14AC                                         l3094 0F4C  
                                       l3086 0EE2                                         l3078 0E3A  
                                       l4150 2B0E                                         l4142 2AE4  
                                       l4134 2A86                                         l4126 29A2  
                                       l4118 2946                                         l4070 27F0  
                                       l4062 27D8                                         l4054 27C2  
                                       l4046 27AA                                         l4038 278E  
                                       l3248 43CE                                         l3192 3DF0  
                                       l3184 3DD2                                         l2712 394E  
                                       l2704 38A8                                         l2800 34E6  
                                       l3440 2D0E                                         l3432 2CD6  
                                       l3424 2C4A                                         l3416 2BA2  
                                       l3408 2706                                         l3360 24A4  
                                       l3352 2436                                         l3344 23DA  
                                       l3336 236A                                         l3328 230E  
                                       l3504 3072                                         l3280 3F0A  
                                       l3272 3ED0                                         l3264 4416  
                                       l3256 4406                                         l2720 3D0E  
                                       l3176 145E                                         l3168 13CE  
                                       l3096 0F54                                         l3088 0EFE  
                                       l4160 2B8C                                         l4152 2B12  
                                       l4144 2AE8                                         l4136 2ACC  
                                       l4128 29AE                                         l4080 2810  
                                       l4072 27F4                                         l4064 27E0  
                                       l4056 27C8                                         l4048 27AE  
                                       l3194 3DFE                                         l3186 3DD6  
                                       l3290 4166                                         l2706 38AC  
                                       l2802 34F2                                         l2810 3538  
                                       l3450 2DAE                                         l3442 2D1C  
                                       l3434 2CEA                                         l3426 2C98  
                                       l3418 2BCA                                         l3370 252A  
                                       l3362 24B0                                         l3354 2456  
                                       l3346 23F0                                         l3338 2382  
                                       l3506 3094                                         l3282 3F0C  
                                       l3274 3EF4                                         l3266 3E96  
                                       l3258 4408                                         l2730 3D72  
                                       l2722 3D1A                                         l3610 14FA  
                                       l3178 1462                                         l3098 0F56  
                                       l4154 2B6A                                         l4146 2AF8  
                                       l4138 2AD8                                         l4090 2824  
                                       l4082 2814                                         l4074 27F8  
                                       l4066 27E8                                         l4058 27CC  
                                       l3196 3E06                                         l3188 3DE4  
                                       l3292 4170                                         l2660 4322  
                                       l2708 38EE                                         l2812 355C  
                                       l2804 34FE                                         l3452 2DD6  
                                       l3444 2D2E                                         l3436 2CF4  
                                       l3428 2CB4                                         l3380 259E  
                                       l3372 2542                                         l3364 24D2  
                                       l3356 2476                                         l3348 23FC  
                                       l3508 309C                                         l3460 2E3C  
                                       l3284 3F16                                         l3276 3EFE  
                                       l3268 3EA6                                         l2732 3D80  
                                       l2724 3D4E                                         l2740 428E  
                                       l2900 334C                                         l3700 1A52  
                                       l3620 15BE                                         l3612 1532  
                                       l3604 14BE                                         l4156 2B6E  
                                       l4148 2AFE                                         l4092 2828  
                                       l4084 2818                                         l4076 2800  
                                       l4068 27EC                                         l3198 3E0A  
                                       l3294 4186                                         l2670 403C  
                                       l2830 360E                                         l2822 35B6  
                                       l2814 3568                                         l2806 350C  
                                       l3454 2E1E                                         l3446 2D56  
                                       l3438 2CF6                                         l2654 42B6  
                                       l3390 2618                                         l3382 25BE  
                                       l3374 2558                                         l3366 24EA  
                                       l3358 248E                                         l3470 2EB2  
                                       l3462 2E5E                                         l3286 3F18  
                                       l3278 3F00                                         l2734 3DA8  
                                       l2726 3D5A                                         l2718 3CEE  
                                       l2742 429A                                         l2910 33BC  
                                       l2902 3350                                         l2750 3C2E  
                                       l3710 1B02                                         l3702 1A72  
                                       l3630 15F8                                         l3622 15C2  
                                       l3614 1552                                         l3606 14C2  
                                       l4158 2B78                                         l4094 282C  
                                       l4086 281C                                         l4078 2808  
                                       l3296 4194                                         l2680 4076  
                                       l2672 4044                                         l2664 401A  
                                       l2840 366E                                         l2832 361C  
                                       l2824 35EA                                         l2816 3576  
                                       l2808 3534                                         l3456 2E36  
                                       l3448 2D6E                                         l2656 42C6  
                                       l3392 263A                                         l3384 25DE  
                                       l3376 2564                                         l3368 250A  
                                       l3480 2F28                                         l3472 2ED4  
                                       l3464 2E66                                         l3288 3F22  
                                       l2728 3D66                                         l2736 3DAC  
                                       l2744 42AC                                         l2920 341A  
                                       l2904 3374                                         l2760 3C8C  
                                       l3712 1B06                                         l3704 1A8A  
                                       l3640 168A                                         l3632 15FA  
                                       l3624 15C8                                         l3616 158A  
                                       l3608 14E2                                         l4096 2846  
                                       l4088 2820                                         l3298 41AA  
                                       l2682 4078                                         l2674 4052  
                                       l2666 4022                                         l2658 4306  
                                       l2850 36D2                                         l2842 367A  
                                       l2834 3644                                         l2826 35F6  
                                       l2818 35A4                                         l2690 447C  
                                       l3394 2652                                         l3386 25F6  
                                       l3378 2586                                         l3490 2FB8  
                                       l3482 2F4A                                         l3474 2EDC  
                                       l3466 2E88                                         l3458 2E3C  
                                       l2738 4492                                         l2922 3426  
                                       l2930 3466                                         l2914 33CE  
                                       l2906 3380                                         l2762 3C98  
                                       l2770 3CD8                                         l2754 3C40  
                                       l3714 1B38                                         l3706 1AC2  
                                       l3650 173A                                         l3642 16A8  
                                       l3634 1616                                         l3626 15D8  
                                       l3618 15A2                                         l4098 285E  
                                       l2684 407E                                         l2676 4058  
                                       l2668 4034                                         l2860 373C  
                                       l2852 36E0                                         l2844 36AE  
                                       l2828 3602                                         l2940 4134  
                                       l2932 40FC                                         l2780 41BA  
                                       l2692 4480                                         l3396 2672  
                                       l3388 260C                                         l2772 439E  
                                       l3492 2FDA                                         l3484 2F6C  
                                       l3476 2EFE                                         l3468 2EAA  
                                       l2924 3434                                         l2916 3402  
                                       l2908 338E                                         l2764 3CA6  
                                       l2756 3C74                                         l2748 3BE6  
                                       l3660 1802                                         l3652 175A  
                                       l3644 16C8                                         l3636 1636  
                                       l3716 1B50                                         l3628 15F0  
                                       l2678 406E                                         l2870 37BE  
                                       l2862 374A                                         l2854 3708  
                                       l2846 36BA                                         l2838 3650  
                                       l2950 3B00                                         l2942 3ADA  
                                       l2934 410C                                         l2782 41C2  
                                       l2774 44B0                                         l2686 44A6  
                                       l2694 449C                                         l3398 2692  
                                       l3494 2FE2                                         l3486 2F74  
                                       l3478 2F20                                         l2926 345C  
                                       l2918 340E                                         l2766 3CCE  
                                       l2758 3C80                                         l3670 18AC  
                                       l3654 1772                                         l3662 181E  
                                       l3646 16E0                                         l3638 164E  
                                       l2880 3818                                         l2872 37CA  
                                       l2864 3778                                         l2848 36C6  
                                       l2856 370C                                         l2792 347C  
                                       l2960 3B48                                         l2952 3B0E  
                                       l2944 3ADE                                         l2936 411A  
                                       l2784 41CA                                         l2776 44B4  
                                       l2688 44AA                                         l2696 44A0  
                                       l3496 3004                                         l3488 2F96  
                                       l3680 1926                                         l3664 183C  
                                       l3656 17AA                                         l3648 171C  
                                       l2698 3824                                         l2874 37D6  
                                       l2858 3730                                         l2794 349A  
                                       l2970 3B92                                         l2962 3B50  
                                       l2954 3B1E                                         l2946 3AEC  
                                       l2938 412A                                         l2786 41F0  
                                       l2778 41B6                                         l3498 3026  
                                       l2890 32F2                                         l3690 19C0  
                                       l3682 195E                                         l3666 185C  
                                       l3674 18D0                                         l3658 17CA  
                                       l2876 37E2                                         l2868 378A  
                                       l2796 34A6                                         l2980 3BC4  
                                       l2972 3BA2                                         l2964 3B5C  
                                       l2956 3B22                                         l2948 3AFC  
                                       l2788 41F2                                         l2892 32FE  
                                       l2884 3296                                         l3692 19D8  
                                       l3676 18EE                                         l3668 1874  
                                       l2878 37F0                                         l2798 34DA  
                                       l2982 3BD4                                         l2974 3BA4  
                                       l2966 3B6A                                         l2958 3B32  
                                       l2894 330A                                         l2886 32B2  
                                       l3694 1A10                                         l3678 190E  
                                       l3686 1982                                         l3950 1BE4  
                                       l3942 1B62                                         l2976 3BAE  
                                       l2968 3B74                                         l2896 3316  
                                       l2888 32BE                                         l3688 19A0  
                                       l3960 1C86                                         l3944 1B74  
                                       l3952 1C04                                         l2978 3BB4  
                                       l2898 3324                                         l3698 1A34  
                                       l3970 1D28                                         l3954 1C16  
                                       l3962 1CA6                                         l3946 1B94  
                                main@curMove 01AF                                         l3980 1DCA  
                                       l3972 1D48                                         l3964 1CB8  
                                       l3956 1C36                                         l3948 1BAC  
                                       l2998 437A                                         l3982 1DEA  
                                       l3990 1E92                                         l3974 1D80  
                                       l3966 1CD8                                         l3958 1C4E  
                                       l3992 1EA4                                         l3984 1E02  
                                       l3976 1D98                                         l3968 1CF0  
                                       l3994 1EC4                                         l3986 1E3A  
                                       l3978 1DB8                                         l3996 1EDC  
                                       l3988 1E5A                                         l3998 1F14  
                                       u2000 3E24                                         u2001 3E20  
                                       u2010 3E42                                         u2011 3E3E  
                                       u2020 3E5E                                         u2100 2338  
                                       u2021 3E5A                                         u2101 2334  
                                       u2030 3E84                                         u2031 3E80  
                                       u2111 2356                                         u2040 4194  
                                       u2200 26BC                                         u2120 23EC  
                                       u3000 1F7E                                         u2041 4190  
                                       u2201 26B8                                         u2121 23E8  
                                       u3001 1F7A                                         u2050 41AA  
                                       u3010 2058                                         u2051 41A6  
                                       u2211 26DA                                         u2131 240A  
                                       u3011 2054                                         u1500 4034  
                                       u2220 2C98                                         u2140 24A0  
                                       u2060 21D0                                         u2300 2EAA  
                                       u3020 2132                                         u1501 4030  
                                       u2221 2C94                                         u2141 249C  
                                       u2061 21CC                                         u2301 2EA6  
                                       u3021 212E                                         u3101 29D6  
                                       u1510 4052                                         u2230 2CA6  
                                       u2310 2ED4                                         u1511 404E  
                                       u2231 2CA2                                         u2151 24BE  
                                       u2071 21EE                                         u2311 2ED0  
                                       u3111 29E8                                         u3031 276A  
                                       u1520 406E                                         u2240 2CB4  
                                       u2160 2554                                         u2080 2284  
                                       u2400 3026                                         u2320 2EFE  
                                       u1600 3CCE                                         u3200 2B0E  
                    color_calibration@orange 0040                                 _BAUD4CONbits 0EE9  
                                       u1521 406A                                         u2241 2CB0  
                                       u2161 2550                                         u2081 2280  
                                       u2401 3022                                         u2321 2EFA  
                                       u1601 3CCA                                         u3201 2B0A  
                                       u3121 29FA                                         u3041 277C  
                                       u1530 3840                                         u2250 2CCC  
                                       u1610 41DE                                         u2410 3050  
                                       u2330 2F20                                         u3210 2B8C  
                                       u1531 383C                                         u2251 2CC8  
                                       u1611 41D6                                         u2171 2572  
                                       u2091 22A2                                         u2411 304C  
                                       u2331 2F1C                                         u3211 2B88  
                                       u3131 2A0C                                         u3051 2788  
                                       u1540 390A                                         u1700 3772  
                                       u2260 2CEA                                         u2180 2608  
                                       u2420 3072                                         u2340 2F4A  
                                       u3220 2B9E                                         u3060 283E  
                                       u1541 3906                                         u1701 376E  
                                       u2261 2CE6                                         u2181 2604  
                                       u2421 306E                                         u2341 2F46  
                                       u3221 2B9A                                         u3141 2A1E  
                                       u3061 283A                                         u1710 3786  
                                       u1630 3534                                         u2270 2D1C  
                                       u2430 3094                                         u2350 2F6C  
                                       u3070 295C                                         u1711 3782  
                                       u1631 3530                                         u2271 2D18  
                                       u4007 2750                                         u2191 2626  
                                       u2431 3090                                         u2351 2F68  
                                       u3151 2A30                                         u3071 2958  
                                       u1720 3818                                         u1640 355C  
                                       u1800 3AEC                                         u1480 42C6  
                                       u2360 2F96                                         u2280 2E5E  
                                       u2600 1B38                                         u2520 15D8  
                                       u1721 3814                                         u1641 3558  
                                       u4017 2BD4                                         u1801 3AE8  
                                       u1481 42C2                                         u2361 2F92  
                                       u2281 2E5A                                         u2601 1B34  
                                       u2521 15D4                                         u3161 2A42  
                                       u1650 359E                                         u1810 3B0E  
                                       u1490 42DC                                         u2370 2FB8  
                                       u2290 2E88                                         u1570 3DA8  
                                       u1730 334C                                         u2610 1B60  
                                       u2530 1616                                         _T2PR 0FBC  
                                       u1651 359A                                         u4107 356E  
                                       u4027 2C14                                         u1811 3B0A  
                                       u1491 42D8                                         u2371 2FB4  
                                       u2291 2E84                                         u1571 3DA4  
                                       u1731 3348                                         u2611 1B5C  
                                       u2531 1612                                         u3307 1CE2  
                                       u3171 2A54                                         u3091 29B8  
                                       u1660 35B2                                         u1820 3B48  
                                       u1628 41E0                                         u2380 2FDA  
                                       u1580 3DD0                                         u1740 3374  
                                       u2540 16A8                                         u1900 1004  
                                       u4117 3614                                         u1661 35AE  
                                       u4037 2C54                                         u1821 3B44  
                                       u2381 2FD6                                         u1581 3DCC  
                                       u1741 3370                                         u2541 16A4  
                                       u1901 1000                                         u3317 1D1A  
                                       u3181 2A66                                         u3085 2968  
                                       u3237 2850                                         u1670 3644  
                                       u1830 3B6A                                         u2390 3004  
                                       u1750 33B6                                         u1590 3C3C  
                                       u2550 173A                                         u1910 1096  
                                       u4127 36D8                                         u1671 3640  
                                       u4047 2D00                                         u1831 3B66  
                                       u2391 3000                                         u1751 33B2  
                                       u1591 3C38                                         u2551 1736  
                                       u1911 1092                                         u3407 1FA8  
                                       u3327 1D52                                         u3087 296C  
                                       u3247 28E6                                         u1680 3708  
                                       u1840 3B92                                         u1760 33CA  
                                       u2560 183C                                         u1920 1198  
                                       u4137 3742                                         u1681 3704  
                                       u4057 2D60                                         u1841 3B8E  
                                       u1761 33C6                                         u2561 1838  
                                       u1921 1194                                         u3417 1FE0  
                                       u3337 1D8A                                         u3257 2912  
                                       u1690 3730                                         u1850 3BC4  
                                       u1770 345C                                         u2570 18EE  
                                       u1930 124A                                         u4147 37E8  
                                       u1691 372C                                         u4067 2DA0  
                                       u1851 3BC0                                         u1771 3458  
                                       u2571 18EA                                         u1931 1246  
                                       u3507 0F9C                                         u3427 2018  
                                       u3347 1DF4                                         u3267 1B9E  
                                       u3195 2AF4                                         u1780 411A  
                                       u1860 438A                                         u2580 19A0  
                                       u1940 12FC                                         u4077 2DE0  
                                       u1781 4116                                         u1861 4386  
                                       u2581 199C                                         u1941 12F8  
                                       u3517 0FD4                                         u3437 2082  
                                       u3357 1E2C                                         u3277 1BD6  
                                       u3197 2AF8                                         u1870 4444  
                                       u1790 4154                                         u2590 1A52  
                                       u1950 13AE                                         u1871 4440  
                                       u4087 2E28                                         u1791 4150  
                                       u2591 1A4E                                         u1951 13AA  
                                       u3607 1274                                         u3527 102E  
                                       u3447 20BA                                         u3367 1E64  
                                       u3287 1C40                                         u1960 1494  
                                       u1880 0F34                                         u4097 3504  
                                       u1961 1490                                         u3617 12AC  
                                       u3537 1066                                         u1881 0F30  
                                       u3457 20F2                                         u3377 1ECE  
                                       u3297 1C78                                         u1970 14BC  
                                       u1890 0F72                                         u3707 1640  
                                       u1971 14B8                                         u3627 1326  
                                       u3547 10C0                                         u1891 0F6E  
                                       u3467 0E2C                                         u3387 1F06  
                                       u1980 3DE4                                         u1981 3DE0  
                                       u3717 1678                                         u3637 135E  
                                       u3557 10F8                                         u3477 0E64  
                                       u3397 1F3E                                         u1990 3DFE  
                                       u2950 1B74                                         u1991 3DFA  
                                       u3807 1918                                         u3727 16D2  
                                       u3647 13D8                                         u3567 1130  
                                       u3487 0E9C                                         u2951 1B70  
                                       u2960 1C16                                         u3817 1950  
                                       u3737 170A                                         u3657 1410  
                                       u3577 1168                                         u3497 0ED4  
                                       u2961 1C12                                         u2970 1CB8  
                                       u3907 3D78                                         u3827 19CA  
                                       u3747 1764                                         u3667 14EC  
                                       u3587 11C2                                         u2971 1CB4  
                                       u2980 1DCA                                         u3917 420A  
                                       u3837 1A02                                         u3757 179C  
                                       u3677 1524                                         u3597 11FA  
                                       u2981 1DC6                                         u2990 1EA4  
                                       u3927 3F62                                         u3847 1A7C  
                                       u3767 17D4                                         u3687 155C  
                                       u2991 1EA0                                         u3937 2264  
                                       u3857 1AB4                                         u3777 180C  
                                       u3697 1594                                         u3947 2318  
                                       u3867 3C9E                                         u3787 1866  
                                       u3957 23CC                                         u3877 331C  
                                       u3797 189E                                         u3967 2480  
                                       u3887 3386                                         u3977 2534  
                                       u3897 342C                                         u3987 25E8  
                                       u3997 269C                      color_calibration@yellow 003C  
                lostReturnHome@straightSpeed 0036                                         _main 2764  
                                       _move 1B62                                         _lost 00B0  
                                       _wall 00B1                                         fsr1h 0FE2  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                                       btemp 0050                                         _stop 3BE6  
                                       prodh 0FF4                                         prodl 0FF3  
                                       start 0098                             color_detect@blue 0020  
                        main@reverseDuration 017A                             __end_of_ADC_init 4434  
                       ?i2_color_writetoaddr 0003                             color_detect@pink 002C  
                            __end_of_HighISR 0098                        lostReturnHome@curMove 0035  
                               ___param_bank 0000                         __end_of_batteryLevel 41B4  
                            __end_of___aldiv 3BE6                                        ?_main 0001  
                                      _ADPCH 0F5F                              __end_of___awdiv 3E96  
                                      ?_move 00B2                                        ?_stop 001F  
                            ___awdiv@divisor 000E                              __end_of___lwdiv 408E  
                                      i2l141 43FA                                        i2l231 4304  
                                      i2l240 44C2                                        i2l234 44CC  
                                      i2l138 4018                                        i2l243 4490  
                                      i2l228 42DE                                        i2l338 008C  
                                      i2l391 4462                                        i2l384 4376  
                                      i2l377 4350                              ___awdiv@counter 0010  
                             ??_color_detect 0044                                        _TMR0H 0FD4  
                                      _TMR0L 0FD3                          ___lmul@multiplicand 0010  
                 __end_of_I2C_2_Master_Start 44B0                   __end_of_I2C_2_Master_Write 4486  
                                 _Buggy_init 422E                   color_calibration@lightblue 0042  
                     returnHome@straightRamp 0038                       returnHome@straightTime 0033  
                                      tablat 0FF5                                        plusw0 0FEB  
                                      plusw2 0FDB                                        ttemp5 0051  
                                      ttemp6 0054                                        ttemp7 0058  
                                      stop@i 0027                                        status 0FD8  
                                      wtemp8 0051                            color_detect@color 0046  
                          color_detect@green 001A                            color_detect@white 003E  
                      ??i2_color_writetoaddr 0004                                 main@turnRamp 01AD  
                      _I2C_2_Master_RepStart 44B0                           putCharToRxBuf@byte 0001  
                            __initialization 408E                    get16bitTMR0val@timer_high 0012  
                               __end_of_main 2BA2                                 __end_of_move 21B8  
                               __end_of_stop 3CEE                          move@reverseDuration 00BD  
                            _get16bitTMR0val 428E                                       ??_main 0048  
                                     ??_move 0041                                       ??_stop 0024  
                              __activetblptr 0000                                calibration@mL 002D  
                              calibration@mR 002F                      __end_of_color_normalise 3ADA  
                     returnHome@turnDuration 003A                                 ?_setMotorPWM 0019  
                                     _ADRESH 0F64                                       _CCPR1H 0FAA  
                                     _CCPR2H 0FA6                                       _CCPR3H 0F25  
                                     _CCPR4H 0F21                             ___awdiv@dividend 000C  
                     lostReturnHome@turnRamp 003B                                       _RC0PPS 0E62  
                                     _RC4REG 0EE3                                       _RE2PPS 0E74  
                                     _RC7PPS 0E69                                       _RD5PPS 0E6F  
                                     _RE4PPS 0E76                                       _RD6PPS 0E70  
                                     i2l3228 43DE                                       i2l2714 42DE  
                                     i2l2716 42EE                                       i2l3720 433E  
                                     i2l3730 4366                                       i2l3722 4342  
                                     i2l3724 434E                                       i2l3900 002C  
                                     i2l3726 4352                                       i2l3734 444C  
                                     i2l3718 432E                                       i2l3750 3FC0  
                                     i2l3910 0056                                       i2l3902 0030  
                                     i2l3728 4362                                       i2l3760 4004  
                                     i2l3752 3FD6                                       i2l3912 005C  
                                     i2l3904 003E                                       i2l3762 400E  
                                     i2l3754 3FE6                                       i2l3746 3FA0  
                                     i2l3914 006C                                       i2l3906 0044  
                                     _RG6PPS 0E88                                       i2l3756 3FF0  
                                     i2l3748 3FB4                                       i2l3916 0074  
                                     i2l3908 0048                                       i2l2990 44BA  
                                     i2l3758 3FFA                                       i2l3918 0088  
                                     i2l2992 44BE                                       i2l2986 44C4  
                                     i2l2994 4488                                       i2l2988 44C8  
                                     i2l2996 448C                                       i2l3894 0012  
                                     i2l3896 0022                                       i2l3898 0028  
                                  ??_HighISR 000A                     __end_of_color_click_init 422E  
                                     _TMR0IE 714D                                       _TMR0IF 719D  
                                     _RX4PPS 0E15                                       _TX4REG 0EE4  
                              main@lightblue 019F                                 ??_ADC_getval 000C  
                              ??_Timer0_init 000C                          calibration@turnRamp 0034  
                    calibration@turnDuration 0032                                 _CCPTMRS0bits 0FAD  
                           _getCharFromTxBuf 4352                                       ___lmul 40FC  
                                  ??___aldiv 0020                                       ___wmul 4306  
                                  ??___awdiv 0010                                    ??___lwdiv 0016  
                         color_detect@RGBC_n 000C                                       clear_0 40CC  
                                     clear_1 40D8                                       clear_2 40E4  
                           ___awdiv@quotient 0012                                       isa$std 0001  
                    returnHome@straightSpeed 0036                                 __pdataCOMRAM 004E  
                                     move@mL 00B2                                       move@mR 00B4  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                  ?_ADC_init 0001                                       stop@mL 001F  
                                     stop@mR 0021                                  ?_Buggy_init 0001  
                          ??_initDCmotorsPWM 000E                           __end_of_ADC_getval 444C  
                 i2color_writetoaddr@address 0004                             __end_of_turnLeft 3824  
                         color_detect@orange 0032                   lostReturnHome@moveSequence 0031  
                      __end_of_isDataInTxBuf 4464                                   __accesstop 0060  
                    __end_of__initialization 40F2                           color_detect@yellow 0026  
                            fullSpeedAhead@i 0028                                main@turnSpeed 01AC  
                     ?_I2C_2_Master_RepStart 0001                                ___rparam_used 0001  
                       __end_of_color_detect 30A8                lostReturnHome@reverseDuration 0037  
                            _Interrupts_init 4464                               __pcstackCOMRAM 0001  
                    __end_of_get16bitTMR0val 42B6                                 ?_white_Light 0001  
                               __pidataBANK0 44CE                     get16bitTMR0val@timer_low 0010  
                   get16bitTMR0val@timer_val 0014                 ?_color_clear_init_interrupts 0001  
                           _reverseOneSquare 3296                          __end_of_Timer0_init 43DC  
                           ?_color_normalise 0026                                   ??_ADC_init 000C  
                               _batteryLevel 4166                                   __pbssBANK0 0060  
                                 __pbssBANK1 01D6                                   __pbssBANK2 0200  
                          _color_writetoaddr 439C                                 _T2CLKCONbits 0FBF  
                             _lostReturnHome 14BE                           ?_color_writetoaddr 000E  
                                    ?___lmul 000C                                      ?___wmul 000C  
                             ___lmul@product 0014                ??_color_clear_init_interrupts 0010  
                                move@curMove 00BB                      lostReturnHome@turnSpeed 0039  
                        ??_color_writetoaddr 000F                                      _SP4BRGH 0EE6  
                                    _SP4BRGL 0EE5                   fullSpeedAhead@straightRamp 0024  
                      turnRight@turnDuration 0024                                      _SSP2ADD 0ED6  
                                    _SSP2BUF 0ED5                                   _color_read 30A8  
                    __end_of_Interrupts_init 447A                       color_writetoaddr@value 000E  
                                    _HighISR 0008                    __end_of_color_writetoaddr 43BC  
                     __end_of_lostReturnHome 1B62                                    _ADREFbits 0F58  
                         _I2C_2_Master_Start 44A6                                   _initUSART4 43FC  
                        i2_I2C_2_Master_Idle 42DE                           _I2C_2_Master_Write 447A  
                                    __Hparam 0000                          i2_I2C_2_Master_Stop 44BA  
                                    __Lparam 0000                                  _Timer0_init 43BC  
                       calibration@turnSpeed 0031                             ?_get16bitTMR0val 000C  
                                    ___aldiv 3ADA                                      ___awdiv 3DD2  
                            lostReturnHome@i 0040                                ??_calibration 0035  
                        ?_I2C_2_Master_Start 0001                                      ___lwdiv 401A  
                        ?_I2C_2_Master_Write 0001                                 __psmallconst 0E00  
                                    _ambient 004E                                      __pcinit 408E  
                                    __ramtop 0E00                                    ?_turnLeft 001F  
                                    __ptext0 2764                                      __ptext1 1B62  
                                    __ptext2 0E02                                      __ptext3 14BE  
                                    __ptext4 3BE6                                      __ptext5 3296  
                                    __ptext6 4492                                      __ptext7 428E  
                                    __ptext8 3CEE                                      __ptext9 43FC  
                       ?i2_I2C_2_Master_Idle 0001                                    _T2CONbits 0FBD  
                       ?i2_I2C_2_Master_Stop 0001                             ___aldiv@dividend 0018  
                                  _T2HLTbits 0FBE                                _RxBufWriteCnt 004D  
                   __end_of_getCharFromTxBuf 4378                                      main@buf 00C2  
                                    main@red 017B                         ??_I2C_2_Master_Start 000D  
                       ??_I2C_2_Master_Write 000D                        color_normalise@RGBC_n 002E  
                       end_of_initialization 40F2              ??i2_color_clear_init_interrupts 0005  
                __end_ofi2_color_writetoaddr 43FC                             ADC_getval@tmpval 000C  
                          reverseOneSquare@i 0029                            ?_color_click_init 0001  
                            ?_lostReturnHome 002D                                   _resetTimer 4492  
                         ??_color_click_init 0015                             ___aldiv@quotient 0022  
                 batteryLevel@batteryQuarter 0015                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc1 0FE6                                      postinc2 0FDE  
                 batteryLevel@batteryVoltage 0014                                   main@F14630 0252  
                                 main@F14632 0200                                   main@F14626 01D6  
                                 main@F14635 00EE                                   _returnHome 0E02  
                            _initDCmotorsPWM 3E96                                   ??_turnLeft 0026  
                                  _PORTFbits 0F8E                           setMotorPWM@negDuty 001E  
                      ??i2_I2C_2_Master_Idle 0001                                move@turnSpeed 00BF  
                          __end_of_turnRight 3650                        ??i2_I2C_2_Master_Stop 0002  
                                 main@RGBC_n 01B2                          __end_of_calibration 2E3C  
                               _color_detect 2E3C                                  returnHome@i 0040  
                                  _TRISAbits 0F81                           setMotorPWM@posDuty 001D  
                                  _TRISBbits 0F82                                    _TRISCbits 0F83  
                                  _TRISDbits 0F84                                    _TRISEbits 0F85  
                                  _TRISFbits 0F86                                    _TRISGbits 0F87  
                                  _TRISHbits 0F88                             white_Light@state 000C  
                               ??_Buggy_init 000C                             fullSpeedAhead@mL 001F  
                           fullSpeedAhead@mR 0021                                  ?_color_read 0010  
                   color_writetoaddr@address 000F                      ??_I2C_2_Master_RepStart 000D  
                   __end_of_reverseOneSquare 347C                             ?_Interrupts_init 0001  
                              stop@cur_power 0029                                  _CCP1CONbits 0FAB  
                     color_calibration@green 0038                                 _EUSART4RXbuf 009C  
                        returnHome@turnSpeed 0039                                 _EUSART4TXbuf 0060  
                                _CCP2CONbits 0FA7                       color_calibration@white 0044  
                                _CCP3CONbits 0F26                   lostReturnHome@straightRamp 0038  
                 lostReturnHome@straightTime 0033                                  ?_initUSART4 0001  
                                 main@orange 0199                                  _CCP4CONbits 0F22  
                                 main@motorL 01CC                                   main@motorR 01C2  
                                 main@yellow 018D                               color_read@RGBC 0010  
                             _fullSpeedAhead 3CEE                               __end_of___lmul 4166  
                       turnLeft@turnDuration 0024                               __end_of___wmul 432C  
                         __end_of_Buggy_init 4264                                __pidataCOMRAM 44D2  
                        start_initialization 408E                                _TxBufWriteCnt 004B  
                 lostReturnHome@turnDuration 003A                             move@moveSequence 00B7  
      __end_ofi2_color_clear_init_interrupts 401A                i2_color_clear_init_interrupts 3FA0  
                                ?_resetTimer 0001                      __end_of_initDCmotorsPWM 3F26  
                     __end_of_fullSpeedAhead 3DD2                           turnRight@cur_power 002B  
                                   ??___lmul 0014                                     ??___wmul 0010  
                             _putCharToRxBuf 432C                          color_normalise@RGBC 0026  
                                __pdataBANK0 00EE                i2I2C_2_Master_Write@data_byte 0002  
                                _calibration 2BA2                                  ?_returnHome 002D  
               reverseOneSquare@straightRamp 0025                 __end_ofi2_I2C_2_Master_Start 44CE  
               __end_ofi2_I2C_2_Master_Write 4492                            turnLeft@cur_power 002B  
                                __pbssCOMRAM 004A                                __pcstackBANK0 00B2  
                              __pcstackBANK1 0100                                     ?_HighISR 0001  
                           stop@straightRamp 0023                             ___lwdiv@dividend 0012  
                               ?_Timer0_init 0001                       __end_of_putCharToRxBuf 4352  
                            ?_fullSpeedAhead 001F                                    __pintcode 0008  
                                   ?___aldiv 0018                           turnRight@turnSpeed 0023  
                                   ?___awdiv 000C                                     ?___lwdiv 0012  
                       I2C_2_Master_Read@ack 000E                         I2C_2_Master_Read@tmp 000F  
                                __smallconst 0E00                             main@moveSequence 0152  
                          _I2C_2_Master_Idle 42B6                            _I2C_2_Master_Init 4264  
                          _I2C_2_Master_Read 41B4                            turnLeft@turnSpeed 0023  
                          _I2C_2_Master_Stop 449C                                 _RxBufReadCnt 004C  
                                   _ADC_init 441A                           ?_I2C_2_Master_Idle 0001  
                         ?_I2C_2_Master_Init 0001                           ?_I2C_2_Master_Read 0001  
                              ??_setMotorPWM 001B                           ?_I2C_2_Master_Stop 0001  
                           ___lwdiv@quotient 0016                     initDCmotorsPWM@PWMperiod 000C  
                          ?_getCharFromTxBuf 0001                             ??_lostReturnHome 003C  
                         ??_getCharFromTxBuf 0001                            move@straightSpeed 00BC  
                            ___aldiv@divisor 001C                          ??_I2C_2_Master_Idle 000C  
                            ___aldiv@counter 0020                          ??_I2C_2_Master_Init 000C  
                        ??_I2C_2_Master_Read 000D                               ___wmul@product 0010  
                                   _LATAbits 0F79                          ??_I2C_2_Master_Stop 000D  
                                   _LATCbits 0F7B                                _isDataInTxBuf 444C  
                                   _LATDbits 0F7C                                     _LATEbits 0F7D  
                                   _LATFbits 0F7E                                     _LATGbits 0F7F  
                                   _LATHbits 0F80                                     _IPR0bits 0E1F  
                                   _PIE0bits 0E29                                     _PIE4bits 0E2D  
                                turnRight@mL 001F                                  turnRight@mR 0021  
                                   i2u155_40 42EE                                     i2u155_41 42EA  
                                   i2u156_40 4304                                     i2u156_41 4300  
                                   i2u262_40 433E                                     i2u262_41 433A  
                                   i2u263_40 4362                                     i2u263_41 435E  
                                   _PIR0bits 0E33                                     i2u415_47 3FDC  
                                   i2u264_40 4460                                     i2u264_41 445A  
                                   i2u265_40 4462                                     i2u290_40 006C  
                                   i2u290_41 0068                                     i2u291_40 0088  
                                   i2u291_41 0084                                     i2u287_40 0022  
                                   i2u287_41 001E                                     _PIR4bits 0E37  
                                   i2u288_40 003E                                     i2u288_41 003A  
                                   i2u289_40 0056                                     i2u289_41 0052  
                            ?_putCharToRxBuf 0001                             ?_initDCmotorsPWM 000C  
                fullSpeedAhead@straightSpeed 0023          __end_of_color_clear_init_interrupts 3FA0  
             ?i2_color_clear_init_interrupts 0001                  _color_clear_init_interrupts 3F26  
                                   _SSP2CON2 0EDA                                     _SSP2STAT 0ED8  
                               move@turnRamp 00C1                                   _ADCON0bits 0F60  
                  __end_of_I2C_2_Master_Idle 42DE                        color_calibration@RGBC 0032  
                  __end_of_I2C_2_Master_Init 428E                    __end_of_I2C_2_Master_Read 41F6  
                          ___wmul@multiplier 000C                    __end_of_I2C_2_Master_Stop 44A6  
   color_clear_init_interrupts@low_threshold 0013   i2color_clear_init_interrupts@low_threshold 0008  
                               setMotorPWM@m 0019                  I2C_2_Master_Write@data_byte 000D  
                      color_calibration@blue 003A                           returnHome@turnRamp 003B  
                                  main@color 01AE                        color_calibration@pink 003E  
                                  main@green 0181                                    main@white 01A5  
                               _TxBufReadCnt 004A                     i2color_writetoaddr@value 0003  
                                  _turnRight 347C                    returnHome@reverseDuration 0037  
                               ??_color_read 0012                            ___lmul@multiplier 000C  
                                  copy_data0 40A2                               ?_isDataInTxBuf 0001  
              __end_of_I2C_2_Master_RepStart 44BA                            ?_reverseOneSquare 001F  
                        __end_of_setMotorPWM 3990                                 ??_initUSART4 000C  
                       i2_I2C_2_Master_Start 44C4              reverseOneSquare@reverseDuration 0024  
                       i2_I2C_2_Master_Write 4486                           ??_reverseOneSquare 0026  
                                   __Hrparam 0000                            ??_color_normalise 0030  
                                 _ADC_getval 4434                             main@testSequence 00EA  
                                   __Lrparam 0000                                ??_white_Light 000C  
                __end_ofi2_I2C_2_Master_Idle 4306                  __end_ofi2_I2C_2_Master_Stop 44C4  
                           lostReturnHome@mL 002D                             lostReturnHome@mR 002F  
                         __end_of_color_read 3296                                   _ANSELBbits 0E9A  
                                 _ANSELDbits 0EA7                                   _ANSELFbits 0EB4  
                                 _T0CON0bits 0FD5                                   _T0CON1bits 0FD6  
                          _color_calibration 21B8                reverseOneSquare@straightSpeed 0023  
                            ___lwdiv@divisor 0014                       returnHome@moveSequence 0031  
                         __end_of_initUSART4 441A                              ___lwdiv@counter 0018  
                          turnRight@turnRamp 0025                                   ?_turnRight 001F  
                                   __ptext10 3E96                                     __ptext11 2E3C  
                                   __ptext20 449C                                     __ptext12 41F6  
                                   __ptext21 44A6                                     __ptext13 3F26  
                                   __ptext30 3650                                     __ptext22 44B0  
                                   __ptext14 439C                                     __ptext31 3824  
                                   __ptext23 41B4                                     __ptext15 4264  
                                   __ptext40 422E                                     __ptext32 4306  
                                   __ptext24 42B6                                     __ptext16 21B8  
                                   __ptext33 401A                                     __ptext25 3990  
                                   __ptext17 4378                                     __ptext50 4352  
                                   __ptext42 3FA0                                     __ptext34 4166  
                                   __ptext26 40FC                                     __ptext18 30A8  
                                   __ptext43 43DC                                     __ptext35 3DD2  
                                   __ptext27 3ADA                                     __ptext19 447A  
                                   __ptext44 4486                                     __ptext36 441A  
                                   __ptext28 2BA2                                     __ptext45 44BA  
                                   __ptext37 4434                                     __ptext29 347C  
                                   __ptext46 44C4                                     __ptext38 43BC  
                                   __ptext47 42DE                                     __ptext39 4464  
                                   __ptext48 432C                                     __ptext49 444C  
                                  move@color 00B6                           ?_color_calibration 0032  
                              ?_batteryLevel 0001                                 _SSP2CON1bits 0ED9  
                               _SSP2CON2bits 0EDA                             turnLeft@turnRamp 0025  
                                 turnLeft@mL 001F                                   turnLeft@mR 0021  
                        ??_color_calibration 0046                        ?i2_I2C_2_Master_Start 0001  
                           move@straightRamp 00BE                        ?i2_I2C_2_Master_Write 0001  
                           move@straightTime 00B9                            returnHome@curMove 0035  
                               ??_resetTimer 000C                                   turnRight@i 0029  
                                   isa$xinst 0000                                   _RC4STAbits 0EE7  
                                   main@RGBC 01BA                                     int$flags 0050  
                               ?_calibration 002D                                     main@blue 0187  
                       color_calibration@red 0036                                 ??_returnHome 003C  
                                   main@pink 0193                                     _turnLeft 3650  
                    fullSpeedAhead@cur_power 002A                          __end_of_white_Light 439C  
                  __end_of_color_calibration 2764                                   _INTCONbits 0FF2  
                  reverseOneSquare@cur_power 002B                           reverseOneSquare@mL 001F  
                         reverseOneSquare@mR 0021                           __end_of_resetTimer 449C  
                           move@turnDuration 00C0                               ??_batteryLevel 0014  
                                _setMotorPWM 3824                            ??_get16bitTMR0val 000E  
                            ??_isDataInTxBuf 0001                                     intlevel2 0000  
                           ??_fullSpeedAhead 0025                           __end_of_returnHome 14BE  
                                  turnLeft@i 0029                                  ?_ADC_getval 0001  
                          main@straightSpeed 01AB                        color_detect@lightBlue 0038  
                           _color_click_init 41F6                                   _SSP2DATPPS 0E1D  
                                 _SSP2CLKPPS 0E1C                                 ___aldiv@sign 0021  
                                ??_turnRight 0026                             main@straightRamp 01B0  
                           main@straightTime 0100                                   _TX4STAbits 0EE8  
                     ??i2_I2C_2_Master_Start 0002                       ??i2_I2C_2_Master_Write 0002  
                           ??_putCharToRxBuf 0001                                 returnHome@mL 002D  
                               returnHome@mR 002F  
