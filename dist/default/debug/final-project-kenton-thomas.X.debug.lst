

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 15:28:15 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 21/07/2023 GMT
    79                           ; 
    80                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F67K40 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	idataBANK0
   114   00533E                     __pidataBANK0:
   115                           	callstack 0
   116                           
   117                           ;initializer for main@F14661
   118   00533E  02                 	db	2
   119   00533F  01                 	db	1
   120   005340  01                 	db	1
   121   005341  08                 	db	8
   122                           
   123                           ;initializer for _ambient
   124   005342  01F4               	dw	500
   125   000000                     _TRISCbits	set	3971
   126   000000                     _RC4STAbits	set	3815
   127   000000                     _SP4BRGH	set	3814
   128   000000                     _SP4BRGL	set	3813
   129   000000                     _TX4STAbits	set	3816
   130   000000                     _BAUD4CONbits	set	3817
   131   000000                     _TX4REG	set	3812
   132   000000                     _TRISBbits	set	3970
   133   000000                     _TRISAbits	set	3969
   134   000000                     _TRISEbits	set	3973
   135   000000                     _TRISGbits	set	3975
   136   000000                     _LATFbits	set	3966
   137   000000                     _TRISFbits	set	3974
   138   000000                     _TRISHbits	set	3976
   139   000000                     _TRISDbits	set	3972
   140   000000                     _LATEbits	set	3965
   141   000000                     _LATGbits	set	3967
   142   000000                     _LATHbits	set	3968
   143   000000                     _SSP2CON2bits	set	3802
   144   000000                     _TMR0IF	set	29085
   145   000000                     _TMR0IE	set	29005
   146   000000                     _RX4PPS	set	3605
   147   000000                     _SSP2CLKPPS	set	3612
   148   000000                     _SSP2DATPPS	set	3613
   149   000000                     _PIE0bits	set	3625
   150   000000                     _CCPR4H	set	3873
   151   000000                     _CCPR3H	set	3877
   152   000000                     _CCPR2H	set	4006
   153   000000                     _CCPR1H	set	4010
   154   000000                     _CCP1CONbits	set	4011
   155   000000                     _CCPTMRS0bits	set	4013
   156   000000                     _T2PR	set	4028
   157   000000                     _T2CONbits	set	4029
   158   000000                     _INTCONbits	set	4082
   159   000000                     _CCP2CONbits	set	4007
   160   000000                     _CCP3CONbits	set	3878
   161   000000                     _ADREFbits	set	3928
   162   000000                     _LATAbits	set	3961
   163   000000                     _LATDbits	set	3964
   164   000000                     _PORTFbits	set	3982
   165   000000                     _CCP4CONbits	set	3874
   166   000000                     _PIE4bits	set	3629
   167   000000                     _RD5PPS	set	3695
   168   000000                     _ANSELDbits	set	3751
   169   000000                     _SSP2ADD	set	3798
   170   000000                     _SSP2CON1bits	set	3801
   171   000000                     _LATCbits	set	3963
   172   000000                     _RC4REG	set	3811
   173   000000                     _SSP2CON2	set	3802
   174   000000                     _SSP2STAT	set	3800
   175   000000                     _ANSELFbits	set	3764
   176   000000                     _SSP2BUF	set	3797
   177   000000                     _IPR0bits	set	3615
   178   000000                     _RE2PPS	set	3700
   179   000000                     _ANSELBbits	set	3738
   180   000000                     _RD6PPS	set	3696
   181   000000                     _PIR0bits	set	3635
   182   000000                     _PIR4bits	set	3639
   183   000000                     _RC0PPS	set	3682
   184   000000                     _RC7PPS	set	3689
   185   000000                     _ADPCH	set	3935
   186   000000                     _ADRESH	set	3940
   187   000000                     _ADCON0bits	set	3936
   188   000000                     _RE4PPS	set	3702
   189   000000                     _RG6PPS	set	3720
   190   000000                     _TMR0L	set	4051
   191   000000                     _TMR0H	set	4052
   192   000000                     _T0CON0bits	set	4053
   193   000000                     _T0CON1bits	set	4054
   194   000000                     _T2CLKCONbits	set	4031
   195   000000                     _T2HLTbits	set	4030
   196                           
   197                           ; #config settings
   198                           
   199                           	psect	cinit
   200   004F22                     __pcinit:
   201                           	callstack 0
   202   004F22                     start_initialization:
   203                           	callstack 0
   204   004F22                     __initialization:
   205                           	callstack 0
   206                           
   207                           ; Initialize objects allocated to BANK0 (6 bytes)
   208                           ; load TBLPTR registers with __pidataBANK0
   209   004F22  0E3E               	movlw	low __pidataBANK0
   210   004F24  6EF6               	movwf	tblptrl,c
   211   004F26  0E53               	movlw	high __pidataBANK0
   212   004F28  6EF7               	movwf	tblptrh,c
   213   004F2A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   214   004F2C  6EF8               	movwf	tblptru,c
   215   004F2E  EE00  F0F4         	lfsr	0,__pdataBANK0
   216   004F32  EE10 F006          	lfsr	1,6
   217   004F36                     copy_data0:
   218   004F36  0009               	tblrd		*+
   219   004F38  CFF5 FFEE          	movff	tablat,postinc0
   220   004F3C  50E5               	movf	postdec1,w,c
   221   004F3E  50E1               	movf	fsr1l,w,c
   222   004F40  E1FA               	bnz	copy_data0
   223                           
   224                           ; Clear objects allocated to BANK2 (142 bytes)
   225   004F42  EE02  F000         	lfsr	0,__pbssBANK2
   226   004F46  0E8E               	movlw	142
   227   004F48                     clear_0:
   228   004F48  6AEE               	clrf	postinc0,c
   229   004F4A  06E8               	decf	wreg,f,c
   230   004F4C  E1FD               	bnz	clear_0
   231                           
   232                           ; Clear objects allocated to BANK1 (40 bytes)
   233   004F4E  EE01  F0D7         	lfsr	0,__pbssBANK1
   234   004F52  0E28               	movlw	40
   235   004F54                     clear_1:
   236   004F54  6AEE               	clrf	postinc0,c
   237   004F56  06E8               	decf	wreg,f,c
   238   004F58  E1FD               	bnz	clear_1
   239                           
   240                           ; Clear objects allocated to BANK0 (62 bytes)
   241   004F5A  EE00  F0B6         	lfsr	0,__pbssBANK0
   242   004F5E  0E3E               	movlw	62
   243   004F60                     clear_2:
   244   004F60  6AEE               	clrf	postinc0,c
   245   004F62  06E8               	decf	wreg,f,c
   246   004F64  E1FD               	bnz	clear_2
   247                           
   248                           ; Clear objects allocated to COMRAM (4 bytes)
   249   004F66  6A4E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   250   004F68  6A4D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   251   004F6A  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   252   004F6C  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   253   004F6E                     end_of_initialization:
   254                           	callstack 0
   255   004F6E                     __end_of__initialization:
   256                           	callstack 0
   257   004F6E  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   258   004F70  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   259   004F72  0100               	movlb	0
   260   004F74  EFA4  F014         	goto	_main	;jump to C main() function
   261                           
   262                           	psect	bssCOMRAM
   263   00004B                     __pbssCOMRAM:
   264                           	callstack 0
   265   00004B                     _TxBufReadCnt:
   266                           	callstack 0
   267   00004B                     	ds	1
   268   00004C                     _TxBufWriteCnt:
   269                           	callstack 0
   270   00004C                     	ds	1
   271   00004D                     _RxBufReadCnt:
   272                           	callstack 0
   273   00004D                     	ds	1
   274   00004E                     _RxBufWriteCnt:
   275                           	callstack 0
   276   00004E                     	ds	1
   277                           
   278                           	psect	bssBANK0
   279   0000B6                     __pbssBANK0:
   280                           	callstack 0
   281   0000B6                     	ds	40
   282   0000DE                     _EUSART4RXbuf:
   283                           	callstack 0
   284   0000DE                     	ds	20
   285   0000F2                     _lost:
   286                           	callstack 0
   287   0000F2                     	ds	1
   288   0000F3                     _brightnessChange:
   289                           	callstack 0
   290   0000F3                     	ds	1
   291                           
   292                           	psect	dataBANK0
   293   0000F4                     __pdataBANK0:
   294                           	callstack 0
   295   0000F4                     main@F14661:
   296                           	callstack 0
   297   0000F4                     	ds	4
   298   0000F8                     _ambient:
   299                           	callstack 0
   300   0000F8                     	ds	2
   301                           
   302                           	psect	bssBANK1
   303   0001D7                     __pbssBANK1:
   304                           	callstack 0
   305   0001D7                     	ds	40
   306                           
   307                           	psect	bssBANK2
   308   000200                     __pbssBANK2:
   309                           	callstack 0
   310   000200                     	ds	82
   311   000252                     _EUSART4TXbuf:
   312                           	callstack 0
   313   000252                     	ds	60
   314                           
   315                           	psect	cstackBANK1
   316   000100                     __pcstackBANK1:
   317                           	callstack 0
   318   000100                     main@straightTime:
   319                           	callstack 0
   320                           
   321                           ; 82 bytes @ 0x0
   322   000100                     	ds	82
   323   000152                     main@moveSequence:
   324                           	callstack 0
   325                           
   326                           ; 40 bytes @ 0x52
   327   000152                     	ds	40
   328   00017A                     main@wall:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x7A
   332   00017A                     	ds	1
   333   00017B                     main@ambientNew:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x7B
   337   00017B                     	ds	2
   338   00017D                     main@reverseDuration:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x7D
   342   00017D                     	ds	1
   343   00017E                     main@turnSpeed:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x7E
   347   00017E                     	ds	1
   348   00017F                     main@turnRamp:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x7F
   352   00017F                     	ds	1
   353   000180                     main@straightSpeed:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x80
   357   000180                     	ds	1
   358   000181                     main@red:
   359                           	callstack 0
   360                           
   361                           ; 6 bytes @ 0x81
   362   000181                     	ds	6
   363   000187                     main@green:
   364                           	callstack 0
   365                           
   366                           ; 6 bytes @ 0x87
   367   000187                     	ds	6
   368   00018D                     main@blue:
   369                           	callstack 0
   370                           
   371                           ; 6 bytes @ 0x8D
   372   00018D                     	ds	6
   373   000193                     main@yellow:
   374                           	callstack 0
   375                           
   376                           ; 6 bytes @ 0x93
   377   000193                     	ds	6
   378   000199                     main@pink:
   379                           	callstack 0
   380                           
   381                           ; 6 bytes @ 0x99
   382   000199                     	ds	6
   383   00019F                     main@orange:
   384                           	callstack 0
   385                           
   386                           ; 6 bytes @ 0x9F
   387   00019F                     	ds	6
   388   0001A5                     main@lightblue:
   389                           	callstack 0
   390                           
   391                           ; 6 bytes @ 0xA5
   392   0001A5                     	ds	6
   393   0001AB                     main@white:
   394                           	callstack 0
   395                           
   396                           ; 6 bytes @ 0xAB
   397   0001AB                     	ds	6
   398   0001B1                     main@curMove:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0xB1
   402   0001B1                     	ds	1
   403   0001B2                     main@color:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0xB2
   407   0001B2                     	ds	1
   408   0001B3                     main@straightRamp:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0xB3
   412   0001B3                     	ds	1
   413   0001B4                     main@turnDuration:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0xB4
   417   0001B4                     	ds	1
   418   0001B5                     main@HSV:
   419                           	callstack 0
   420                           
   421                           ; 6 bytes @ 0xB5
   422   0001B5                     	ds	6
   423   0001BB                     main@RGBC:
   424                           	callstack 0
   425                           
   426                           ; 8 bytes @ 0xBB
   427   0001BB                     	ds	8
   428   0001C3                     main@motorR:
   429                           	callstack 0
   430                           
   431                           ; 10 bytes @ 0xC3
   432   0001C3                     	ds	10
   433   0001CD                     main@motorL:
   434                           	callstack 0
   435                           
   436                           ; 10 bytes @ 0xCD
   437   0001CD                     	ds	10
   438                           
   439                           	psect	cstackBANK0
   440   000060                     __pcstackBANK0:
   441                           	callstack 0
   442   000060                     move@mL:
   443                           	callstack 0
   444   000060                     _rgb_2_hsv$3627:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0x0
   448   000060                     	ds	2
   449   000062                     move@mR:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x2
   453   000062                     	ds	2
   454   000064                     move@color:
   455                           	callstack 0
   456   000064                     rgb_2_hsv@cmin:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x4
   460   000064                     	ds	1
   461   000065                     move@moveSequence:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x5
   465   000065                     	ds	1
   466   000066                     _rgb_2_hsv$3625:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x6
   470   000066                     	ds	1
   471   000067                     move@straightTime:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x7
   475   000067                     	ds	1
   476   000068                     _rgb_2_hsv$3626:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x8
   480   000068                     	ds	1
   481   000069                     move@curMove:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x9
   485   000069                     	ds	1
   486   00006A                     move@straightSpeed:
   487                           	callstack 0
   488   00006A                     rgb_2_hsv@r:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0xA
   492   00006A                     	ds	1
   493   00006B                     move@reverseDuration:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0xB
   497   00006B                     	ds	1
   498   00006C                     move@straightRamp:
   499                           	callstack 0
   500   00006C                     rgb_2_hsv@cmax:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0xC
   504   00006C                     	ds	1
   505   00006D                     move@turnSpeed:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0xD
   509   00006D                     	ds	1
   510   00006E                     move@turnDuration:
   511                           	callstack 0
   512   00006E                     rgb_2_hsv@diff:
   513                           	callstack 0
   514                           
   515                           ; 4 bytes @ 0xE
   516   00006E                     	ds	1
   517   00006F                     move@turnRamp:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0xF
   521   00006F                     	ds	3
   522   000072                     rgb_2_hsv@g:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x12
   526   000072                     	ds	2
   527   000074                     rgb_2_hsv@b:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x14
   531   000074                     	ds	2
   532   000076                     color_calibration@RGBC:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x16
   536   000076                     	ds	2
   537   000078                     color_calibration@HSV:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x18
   541   000078                     	ds	2
   542   00007A                     color_calibration@red:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x1A
   546   00007A                     	ds	2
   547   00007C                     color_calibration@green:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x1C
   551   00007C                     	ds	2
   552   00007E                     color_calibration@blue:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x1E
   556   00007E                     	ds	2
   557   000080                     color_calibration@yellow:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x20
   561   000080                     	ds	2
   562   000082                     color_calibration@pink:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x22
   566   000082                     	ds	2
   567   000084                     color_calibration@orange:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x24
   571   000084                     	ds	2
   572   000086                     color_calibration@lightblue:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x26
   576   000086                     	ds	2
   577   000088                     color_calibration@white:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x28
   581   000088                     	ds	2
   582   00008A                     main@buf:
   583                           	callstack 0
   584                           
   585                           ; 40 bytes @ 0x2A
   586   00008A                     	ds	40
   587   0000B2                     main@testSequence:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x52
   591   0000B2                     	ds	4
   592                           
   593                           	psect	cstackCOMRAM
   594   000001                     __pcstackCOMRAM:
   595                           	callstack 0
   596   000001                     ??_getCharFromTxBuf:
   597   000001                     ??i2_I2C_2_Master_Idle:
   598   000001                     ?i2___lwdiv:
   599                           	callstack 0
   600   000001                     putCharToRxBuf@byte:
   601                           	callstack 0
   602   000001                     i2___lwdiv@dividend:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x0
   606   000001                     	ds	1
   607   000002                     i2I2C_2_Master_Write@data_byte:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x1
   611   000002                     	ds	1
   612   000003                     i2color_writetoaddr@value:
   613                           	callstack 0
   614   000003                     i2___lwdiv@divisor:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x2
   618   000003                     	ds	1
   619   000004                     i2color_writetoaddr@address:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x3
   623   000004                     	ds	1
   624   000005                     i2___lwdiv@quotient:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x4
   628   000005                     	ds	2
   629   000007                     i2___lwdiv@counter:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x6
   633   000007                     	ds	1
   634   000008                     ??i2_color_clear_init_interrupts:
   635                           
   636                           ; 1 bytes @ 0x7
   637   000008                     	ds	1
   638   000009                     i2color_clear_init_interrupts@high_threshold:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x8
   642   000009                     	ds	2
   643   00000B                     i2color_clear_init_interrupts@low_threshold:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0xA
   647   00000B                     	ds	2
   648   00000D                     ??_HighISR:
   649                           
   650                           ; 1 bytes @ 0xC
   651   00000D                     	ds	3
   652   000010                     ??_I2C_2_Master_Idle:
   653   000010                     ?_get16bitTMR0val:
   654                           	callstack 0
   655   000010                     ?_max:
   656                           	callstack 0
   657   000010                     ?_min:
   658                           	callstack 0
   659   000010                     ?___wmul:
   660                           	callstack 0
   661   000010                     ?___awdiv:
   662                           	callstack 0
   663   000010                     ?___lmul:
   664                           	callstack 0
   665   000010                     white_Light@state:
   666                           	callstack 0
   667   000010                     ADC_getval@tmpval:
   668                           	callstack 0
   669   000010                     max@a:
   670                           	callstack 0
   671   000010                     min@a:
   672                           	callstack 0
   673   000010                     initDCmotorsPWM@PWMperiod:
   674                           	callstack 0
   675   000010                     ___wmul@multiplier:
   676                           	callstack 0
   677   000010                     ___awdiv@dividend:
   678                           	callstack 0
   679   000010                     ___lmul@multiplier:
   680                           	callstack 0
   681   000010                     color_detect@HSV:
   682                           	callstack 0
   683                           
   684                           ; 6 bytes @ 0xF
   685   000010                     	ds	1
   686   000011                     ??_I2C_2_Master_Read:
   687   000011                     I2C_2_Master_Write@data_byte:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x10
   691   000011                     	ds	1
   692   000012                     ??_get16bitTMR0val:
   693   000012                     color_writetoaddr@value:
   694                           	callstack 0
   695   000012                     I2C_2_Master_Read@ack:
   696                           	callstack 0
   697   000012                     max@b:
   698                           	callstack 0
   699   000012                     min@b:
   700                           	callstack 0
   701   000012                     ___wmul@multiplicand:
   702                           	callstack 0
   703   000012                     ___awdiv@divisor:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x11
   707   000012                     	ds	1
   708   000013                     color_writetoaddr@address:
   709                           	callstack 0
   710   000013                     I2C_2_Master_Read@tmp:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x12
   714   000013                     	ds	1
   715   000014                     ___awdiv@counter:
   716                           	callstack 0
   717   000014                     color_read@RGBC:
   718                           	callstack 0
   719   000014                     get16bitTMR0val@timer_low:
   720                           	callstack 0
   721   000014                     ___wmul@product:
   722                           	callstack 0
   723   000014                     ___lmul@multiplicand:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0x13
   727   000014                     	ds	1
   728   000015                     ___awdiv@sign:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x14
   732   000015                     	ds	1
   733   000016                     ??_color_read:
   734   000016                     ?___lwdiv:
   735                           	callstack 0
   736   000016                     get16bitTMR0val@timer_high:
   737                           	callstack 0
   738   000016                     ___awdiv@quotient:
   739                           	callstack 0
   740   000016                     ___lwdiv@dividend:
   741                           	callstack 0
   742   000016                     color_detect@red:
   743                           	callstack 0
   744                           
   745                           ; 6 bytes @ 0x15
   746   000016                     	ds	2
   747   000018                     batteryLevel@batteryVoltage:
   748                           	callstack 0
   749   000018                     get16bitTMR0val@timer_val:
   750                           	callstack 0
   751   000018                     ___lwdiv@divisor:
   752                           	callstack 0
   753   000018                     ___lmul@product:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x17
   757   000018                     	ds	1
   758   000019                     batteryLevel@batteryQuarter:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0x18
   762   000019                     	ds	1
   763   00001A                     ___lwdiv@counter:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x19
   767   00001A                     	ds	1
   768   00001B                     ___lwdiv@quotient:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x1A
   772   00001B                     	ds	1
   773   00001C                     ?___lldiv:
   774                           	callstack 0
   775   00001C                     ?___aldiv:
   776                           	callstack 0
   777   00001C                     ___lldiv@dividend:
   778                           	callstack 0
   779   00001C                     ___aldiv@dividend:
   780                           	callstack 0
   781   00001C                     color_detect@green:
   782                           	callstack 0
   783                           
   784                           ; 6 bytes @ 0x1B
   785   00001C                     	ds	1
   786   00001D                     ??_color_clear_init_interrupts:
   787   00001D                     setMotorPWM@m:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x1C
   791   00001D                     	ds	1
   792   00001E                     color_clear_init_interrupts@high_threshold:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x1D
   796   00001E                     	ds	1
   797   00001F                     ??_setMotorPWM:
   798                           
   799                           ; 1 bytes @ 0x1E
   800   00001F                     	ds	1
   801   000020                     color_clear_init_interrupts@low_threshold:
   802                           	callstack 0
   803   000020                     ___lldiv@divisor:
   804                           	callstack 0
   805   000020                     ___aldiv@divisor:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x1F
   809   000020                     	ds	1
   810   000021                     setMotorPWM@posDuty:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x20
   814   000021                     	ds	1
   815   000022                     ??_color_click_init:
   816   000022                     setMotorPWM@negDuty:
   817                           	callstack 0
   818   000022                     color_detect@blue:
   819                           	callstack 0
   820                           
   821                           ; 6 bytes @ 0x21
   822   000022                     	ds	1
   823   000023                     stop@mL:
   824                           	callstack 0
   825   000023                     turnLeft@mL:
   826                           	callstack 0
   827   000023                     turnRight@mL:
   828                           	callstack 0
   829   000023                     fullSpeedAhead@mL:
   830                           	callstack 0
   831   000023                     reverseOneSquare@mL:
   832                           	callstack 0
   833   000023                     wallAdjust@mL:
   834                           	callstack 0
   835   000023                     reverseShort@mL:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x22
   839   000023                     	ds	1
   840   000024                     ___aldiv@counter:
   841                           	callstack 0
   842   000024                     ___lldiv@quotient:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x23
   846   000024                     	ds	1
   847   000025                     ___aldiv@sign:
   848                           	callstack 0
   849   000025                     stop@mR:
   850                           	callstack 0
   851   000025                     turnLeft@mR:
   852                           	callstack 0
   853   000025                     turnRight@mR:
   854                           	callstack 0
   855   000025                     fullSpeedAhead@mR:
   856                           	callstack 0
   857   000025                     reverseOneSquare@mR:
   858                           	callstack 0
   859   000025                     wallAdjust@mR:
   860                           	callstack 0
   861   000025                     reverseShort@mR:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x24
   865   000025                     	ds	1
   866   000026                     ___aldiv@quotient:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x25
   870   000026                     	ds	1
   871   000027                     stop@straightRamp:
   872                           	callstack 0
   873   000027                     turnLeft@turnSpeed:
   874                           	callstack 0
   875   000027                     turnRight@turnSpeed:
   876                           	callstack 0
   877   000027                     fullSpeedAhead@straightSpeed:
   878                           	callstack 0
   879   000027                     reverseOneSquare@straightSpeed:
   880                           	callstack 0
   881   000027                     wallAdjust@straightSpeed:
   882                           	callstack 0
   883   000027                     reverseShort@straightSpeed:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x26
   887   000027                     	ds	1
   888   000028                     ??_stop:
   889   000028                     turnLeft@turnDuration:
   890                           	callstack 0
   891   000028                     turnRight@turnDuration:
   892                           	callstack 0
   893   000028                     fullSpeedAhead@straightRamp:
   894                           	callstack 0
   895   000028                     reverseOneSquare@reverseDuration:
   896                           	callstack 0
   897   000028                     wallAdjust@straightRamp:
   898                           	callstack 0
   899   000028                     reverseShort@straightRamp:
   900                           	callstack 0
   901   000028                     ___lldiv@counter:
   902                           	callstack 0
   903   000028                     color_detect@yellow:
   904                           	callstack 0
   905                           
   906                           ; 6 bytes @ 0x27
   907   000028                     	ds	1
   908   000029                     ??_fullSpeedAhead:
   909   000029                     ??_wallAdjust:
   910   000029                     ??_reverseShort:
   911   000029                     turnLeft@turnRamp:
   912                           	callstack 0
   913   000029                     turnRight@turnRamp:
   914                           	callstack 0
   915   000029                     reverseOneSquare@straightRamp:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x28
   919   000029                     	ds	1
   920   00002A                     ??_turnRight:
   921   00002A                     ??_turnLeft:
   922   00002A                     ??_reverseOneSquare:
   923   00002A                     rgb_2_hsv@RGBC:
   924                           	callstack 0
   925                           
   926                           ; 8 bytes @ 0x29
   927   00002A                     	ds	1
   928   00002B                     stop@i:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x2A
   932   00002B                     	ds	1
   933   00002C                     wallAdjust@adjustDuration:
   934                           	callstack 0
   935   00002C                     reverseShort@reverseDuration:
   936                           	callstack 0
   937   00002C                     fullSpeedAhead@i:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x2B
   941   00002C                     	ds	1
   942   00002D                     wallAdjust@wallReverseDuration:
   943                           	callstack 0
   944   00002D                     stop@cur_power:
   945                           	callstack 0
   946   00002D                     turnLeft@i:
   947                           	callstack 0
   948   00002D                     turnRight@i:
   949                           	callstack 0
   950   00002D                     reverseOneSquare@i:
   951                           	callstack 0
   952   00002D                     reverseShort@i:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x2C
   956   00002D                     	ds	1
   957   00002E                     fullSpeedAhead@cur_power:
   958                           	callstack 0
   959   00002E                     wallAdjust@i:
   960                           	callstack 0
   961   00002E                     color_detect@pink:
   962                           	callstack 0
   963                           
   964                           ; 6 bytes @ 0x2D
   965   00002E                     	ds	1
   966   00002F                     turnLeft@cur_power:
   967                           	callstack 0
   968   00002F                     turnRight@cur_power:
   969                           	callstack 0
   970   00002F                     reverseOneSquare@cur_power:
   971                           	callstack 0
   972   00002F                     reverseShort@cur_power:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x2E
   976   00002F                     	ds	1
   977   000030                     wallAdjust@cur_power:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x2F
   981   000030                     	ds	1
   982   000031                     returnHome@mL:
   983                           	callstack 0
   984   000031                     lostReturnHome@mL:
   985                           	callstack 0
   986   000031                     calibration@mL:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x30
   990   000031                     	ds	1
   991   000032                     rgb_2_hsv@HSV:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x31
   995   000032                     	ds	1
   996   000033                     returnHome@mR:
   997                           	callstack 0
   998   000033                     lostReturnHome@mR:
   999                           	callstack 0
  1000   000033                     calibration@mR:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x32
  1004   000033                     	ds	1
  1005   000034                     ??_rgb_2_hsv:
  1006   000034                     color_detect@orange:
  1007                           	callstack 0
  1008                           
  1009                           ; 6 bytes @ 0x33
  1010   000034                     	ds	1
  1011   000035                     calibration@turnSpeed:
  1012                           	callstack 0
  1013   000035                     returnHome@moveSequence:
  1014                           	callstack 0
  1015   000035                     lostReturnHome@moveSequence:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x34
  1019   000035                     	ds	1
  1020   000036                     calibration@turnDuration:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x35
  1024   000036                     	ds	1
  1025   000037                     returnHome@straightTime:
  1026                           	callstack 0
  1027   000037                     lostReturnHome@straightTime:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x36
  1031   000037                     	ds	1
  1032   000038                     calibration@turnRamp:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x37
  1036   000038                     	ds	1
  1037   000039                     ??_calibration:
  1038   000039                     returnHome@curMove:
  1039                           	callstack 0
  1040   000039                     lostReturnHome@curMove:
  1041                           	callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x38
  1044   000039                     	ds	1
  1045   00003A                     returnHome@straightSpeed:
  1046                           	callstack 0
  1047   00003A                     lostReturnHome@straightSpeed:
  1048                           	callstack 0
  1049   00003A                     color_detect@lightblue:
  1050                           	callstack 0
  1051                           
  1052                           ; 6 bytes @ 0x39
  1053   00003A                     	ds	1
  1054   00003B                     returnHome@reverseDuration:
  1055                           	callstack 0
  1056   00003B                     lostReturnHome@reverseDuration:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x3A
  1060   00003B                     	ds	1
  1061   00003C                     returnHome@straightRamp:
  1062                           	callstack 0
  1063   00003C                     lostReturnHome@straightRamp:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x3B
  1067   00003C                     	ds	1
  1068   00003D                     returnHome@turnSpeed:
  1069                           	callstack 0
  1070   00003D                     lostReturnHome@turnSpeed:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x3C
  1074   00003D                     	ds	1
  1075   00003E                     returnHome@turnDuration:
  1076                           	callstack 0
  1077   00003E                     lostReturnHome@turnDuration:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x3D
  1081   00003E                     	ds	1
  1082   00003F                     returnHome@turnRamp:
  1083                           	callstack 0
  1084   00003F                     lostReturnHome@turnRamp:
  1085                           	callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x3E
  1088   00003F                     	ds	1
  1089   000040                     ??_color_calibration:
  1090   000040                     ??_lostReturnHome:
  1091   000040                     ??_returnHome:
  1092   000040                     color_detect@white:
  1093                           	callstack 0
  1094                           
  1095                           ; 6 bytes @ 0x3F
  1096   000040                     	ds	4
  1097   000044                     returnHome@i:
  1098                           	callstack 0
  1099   000044                     lostReturnHome@i:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x43
  1103   000044                     	ds	1
  1104   000045                     ??_move:
  1105                           
  1106                           ; 1 bytes @ 0x44
  1107   000045                     	ds	1
  1108   000046                     ??_color_detect:
  1109                           
  1110                           ; 1 bytes @ 0x45
  1111   000046                     	ds	2
  1112   000048                     color_detect@color:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x47
  1116   000048                     	ds	1
  1117   000049                     ??_main:
  1118                           
  1119                           ; 1 bytes @ 0x48
  1120   000049                     	ds	2
  1121                           
  1122 ;;
  1123 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1124 ;;
  1125 ;; *************** function _main *****************
  1126 ;; Defined at:
  1127 ;;		line 28 in file "main.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  straightTime   82    0[BANK1 ] unsigned int [41]
  1132 ;;  moveSequence   40   82[BANK1 ] unsigned char [40]
  1133 ;;  buf            40   42[BANK0 ] unsigned char [40]
  1134 ;;  motorL         10  205[BANK1 ] struct DC_motor
  1135 ;;  motorR         10  195[BANK1 ] struct DC_motor
  1136 ;;  RGBC            8  187[BANK1 ] struct RGBC_val
  1137 ;;  RGBC_n          8    0        struct RGBC_val
  1138 ;;  HSV             6  181[BANK1 ] struct HSV_val
  1139 ;;  white           6  171[BANK1 ] struct HSV_calib
  1140 ;;  lightblue       6  165[BANK1 ] struct HSV_calib
  1141 ;;  orange          6  159[BANK1 ] struct HSV_calib
  1142 ;;  pink            6  153[BANK1 ] struct HSV_calib
  1143 ;;  yellow          6  147[BANK1 ] struct HSV_calib
  1144 ;;  blue            6  141[BANK1 ] struct HSV_calib
  1145 ;;  green           6  135[BANK1 ] struct HSV_calib
  1146 ;;  red             6  129[BANK1 ] struct HSV_calib
  1147 ;;  testSequence    4   82[BANK0 ] unsigned char [4]
  1148 ;;  PWMcycle        2    0        unsigned int 
  1149 ;;  ambientNew      2  123[BANK1 ] unsigned int 
  1150 ;;  turnDuration    1  180[BANK1 ] unsigned char 
  1151 ;;  straightRamp    1  179[BANK1 ] unsigned char 
  1152 ;;  color           1  178[BANK1 ] unsigned char 
  1153 ;;  curMove         1  177[BANK1 ] unsigned char 
  1154 ;;  straightSpee    1  128[BANK1 ] unsigned char 
  1155 ;;  turnRamp        1  127[BANK1 ] unsigned char 
  1156 ;;  turnSpeed       1  126[BANK1 ] unsigned char 
  1157 ;;  reverseDurat    1  125[BANK1 ] unsigned char 
  1158 ;;  wall            1  122[BANK1 ] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1169 ;;      Locals:         0      44     215       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1171 ;;      Totals:         2      44     215       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1172 ;;Total ram usage:      261 bytes
  1173 ;; Hardware stack levels required when called: 10
  1174 ;; This function calls:
  1175 ;;		_Buggy_init
  1176 ;;		_Interrupts_init
  1177 ;;		_Timer0_init
  1178 ;;		_batteryLevel
  1179 ;;		_calibration
  1180 ;;		_color_calibration
  1181 ;;		_color_clear_init_interrupts
  1182 ;;		_color_click_init
  1183 ;;		_color_detect
  1184 ;;		_color_read
  1185 ;;		_fullSpeedAhead
  1186 ;;		_get16bitTMR0val
  1187 ;;		_initDCmotorsPWM
  1188 ;;		_initUSART4
  1189 ;;		_lostReturnHome
  1190 ;;		_move
  1191 ;;		_resetTimer
  1192 ;;		_rgb_2_hsv
  1193 ;;		_stop
  1194 ;;		_wallAdjust
  1195 ;;		_white_Light
  1196 ;; This function is called by:
  1197 ;;		Startup code after reset
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text0
  1202   002948                     __ptext0:
  1203                           	callstack 0
  1204   002948                     _main:
  1205                           	callstack 21
  1206   002948                     
  1207                           ;main.c: 30:     char buf[40] = {0};
  1208   002948  EE20  F08A         	lfsr	2,main@buf
  1209   00294C  0E27               	movlw	39
  1210   00294E                     u5221:
  1211   00294E  6ADE               	clrf	postinc2,c
  1212   002950  06E8               	decf	wreg,f,c
  1213   002952  E2FD               	bc	u5221
  1214   002954                     
  1215                           ;main.c: 33:     unsigned int ambientNew;;main.c: 34:     char wall = 0;
  1216   002954  0E00               	movlw	0
  1217   002956  0101               	movlb	1	; () banked
  1218   002958  6F7A               	movwf	main@wall& (0+255),b
  1219   00295A                     
  1220                           ; BSR set to: 1
  1221                           ;main.c: 36:     unsigned char moveSequence[40] = {0};
  1222   00295A  EE21  F052         	lfsr	2,main@moveSequence
  1223   00295E  0E27               	movlw	39
  1224   002960                     u5231:
  1225   002960  6ADE               	clrf	postinc2,c
  1226   002962  06E8               	decf	wreg,f,c
  1227   002964  E2FD               	bc	u5231
  1228   002966                     
  1229                           ; BSR set to: 1
  1230                           ;main.c: 37:     unsigned int straightTime[41] = {0};
  1231   002966  EE21  F000         	lfsr	2,main@straightTime
  1232   00296A  0E51               	movlw	81
  1233   00296C                     u5241:
  1234   00296C  6ADE               	clrf	postinc2,c
  1235   00296E  06E8               	decf	wreg,f,c
  1236   002970  E2FD               	bc	u5241
  1237   002972                     
  1238                           ; BSR set to: 1
  1239                           ;main.c: 38:     char curMove = 0;
  1240   002972  0E00               	movlw	0
  1241   002974  6FB1               	movwf	main@curMove& (0+255),b
  1242   002976                     
  1243                           ; BSR set to: 1
  1244                           ;main.c: 40:     unsigned char testSequence[4] = {2,1,1,8};
  1245   002976  C0F4  F0B2         	movff	main@F14661,main@testSequence
  1246   00297A  C0F5  F0B3         	movff	main@F14661+1,main@testSequence+1
  1247   00297E  C0F6  F0B4         	movff	main@F14661+2,main@testSequence+2
  1248   002982  C0F7  F0B5         	movff	main@F14661+3,main@testSequence+3
  1249   002986                     
  1250                           ; BSR set to: 1
  1251                           ;main.c: 43:     struct RGBC_val RGBC, RGBC_n;;main.c: 44:     struct HSV_val HSV;;main.
      +                          c: 45:     struct DC_motor motorL, motorR;;main.c: 48:     Buggy_init();
  1252   002986  EC20  F028         	call	_Buggy_init	;wreg free
  1253   00298A                     
  1254                           ;main.c: 49:     color_click_init();
  1255   00298A  EC04  F028         	call	_color_click_init	;wreg free
  1256   00298E                     
  1257                           ;main.c: 50:     Timer0_init();
  1258   00298E  EC16  F029         	call	_Timer0_init	;wreg free
  1259   002992                     
  1260                           ;main.c: 51:     Interrupts_init();
  1261   002992  EC6A  F029         	call	_Interrupts_init	;wreg free
  1262   002996                     
  1263                           ;main.c: 52:     initUSART4();
  1264   002996  EC36  F029         	call	_initUSART4	;wreg free
  1265   00299A                     
  1266                           ;main.c: 53:     initDCmotorsPWM(PWMcycle);
  1267   00299A  0E00               	movlw	0
  1268   00299C  6E11               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1269   00299E  0EC7               	movlw	199
  1270   0029A0  6E10               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1271   0029A2  ECA0  F026         	call	_initDCmotorsPWM	;wreg free
  1272   0029A6                     
  1273                           ;main.c: 55:     motorL.power=0;
  1274   0029A6  0E00               	movlw	0
  1275   0029A8  0101               	movlb	1	; () banked
  1276   0029AA  6FCD               	movwf	main@motorL& (0+255),b
  1277   0029AC                     
  1278                           ; BSR set to: 1
  1279                           ;main.c: 56:     motorL.direction=1;
  1280   0029AC  0E01               	movlw	1
  1281   0029AE  6FCE               	movwf	(main@motorL+1)& (0+255),b
  1282   0029B0                     
  1283                           ; BSR set to: 1
  1284                           ;main.c: 57:     motorL.brakemode=1;
  1285   0029B0  0E01               	movlw	1
  1286   0029B2  6FCF               	movwf	(main@motorL+2)& (0+255),b
  1287   0029B4                     
  1288                           ; BSR set to: 1
  1289                           ;main.c: 58:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1290   0029B4  0EAA               	movlw	170
  1291   0029B6  6FD2               	movwf	(main@motorL+5)& (0+255),b
  1292   0029B8  0E0F               	movlw	15
  1293   0029BA  6FD3               	movwf	(main@motorL+6)& (0+255),b
  1294   0029BC                     
  1295                           ; BSR set to: 1
  1296                           ;main.c: 59:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1297   0029BC  0EA6               	movlw	166
  1298   0029BE  6FD4               	movwf	(main@motorL+7)& (0+255),b
  1299   0029C0  0E0F               	movlw	15
  1300   0029C2  6FD5               	movwf	(main@motorL+8)& (0+255),b
  1301   0029C4                     
  1302                           ; BSR set to: 1
  1303                           ;main.c: 60:     motorL.PWMperiod=PWMcycle;
  1304   0029C4  0E00               	movlw	0
  1305   0029C6  6FD1               	movwf	(main@motorL+4)& (0+255),b
  1306   0029C8  0EC7               	movlw	199
  1307   0029CA  6FD0               	movwf	(main@motorL+3)& (0+255),b
  1308   0029CC                     
  1309                           ; BSR set to: 1
  1310                           ;main.c: 61:     motorL.compensation=0;
  1311   0029CC  0E00               	movlw	0
  1312   0029CE  6FD6               	movwf	(main@motorL+9)& (0+255),b
  1313   0029D0                     
  1314                           ; BSR set to: 1
  1315                           ;main.c: 63:     motorR.power=0;
  1316   0029D0  0E00               	movlw	0
  1317   0029D2  6FC3               	movwf	main@motorR& (0+255),b
  1318   0029D4                     
  1319                           ; BSR set to: 1
  1320                           ;main.c: 64:     motorR.direction=1;
  1321   0029D4  0E01               	movlw	1
  1322   0029D6  6FC4               	movwf	(main@motorR+1)& (0+255),b
  1323   0029D8                     
  1324                           ; BSR set to: 1
  1325                           ;main.c: 65:     motorR.brakemode=1;
  1326   0029D8  0E01               	movlw	1
  1327   0029DA  6FC5               	movwf	(main@motorR+2)& (0+255),b
  1328   0029DC                     
  1329                           ; BSR set to: 1
  1330                           ;main.c: 66:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1331   0029DC  0E25               	movlw	37
  1332   0029DE  6FC8               	movwf	(main@motorR+5)& (0+255),b
  1333   0029E0  0E0F               	movlw	15
  1334   0029E2  6FC9               	movwf	(main@motorR+6)& (0+255),b
  1335   0029E4                     
  1336                           ; BSR set to: 1
  1337                           ;main.c: 67:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1338   0029E4  0E21               	movlw	33
  1339   0029E6  6FCA               	movwf	(main@motorR+7)& (0+255),b
  1340   0029E8  0E0F               	movlw	15
  1341   0029EA  6FCB               	movwf	(main@motorR+8)& (0+255),b
  1342   0029EC                     
  1343                           ; BSR set to: 1
  1344                           ;main.c: 68:     motorR.PWMperiod=PWMcycle;
  1345   0029EC  0E00               	movlw	0
  1346   0029EE  6FC7               	movwf	(main@motorR+4)& (0+255),b
  1347   0029F0  0EC7               	movlw	199
  1348   0029F2  6FC6               	movwf	(main@motorR+3)& (0+255),b
  1349   0029F4                     
  1350                           ; BSR set to: 1
  1351                           ;main.c: 69:     motorR.compensation=0;
  1352   0029F4  0E00               	movlw	0
  1353   0029F6  6FCC               	movwf	(main@motorR+9)& (0+255),b
  1354   0029F8                     
  1355                           ; BSR set to: 1
  1356                           ;main.c: 72:     char straightSpeed=20;
  1357   0029F8  0E14               	movlw	20
  1358   0029FA  6F80               	movwf	main@straightSpeed& (0+255),b
  1359   0029FC                     
  1360                           ; BSR set to: 1
  1361                           ;main.c: 73:     unsigned char straightRamp=2;
  1362   0029FC  0E02               	movlw	2
  1363   0029FE  6FB3               	movwf	main@straightRamp& (0+255),b
  1364   002A00                     
  1365                           ; BSR set to: 1
  1366                           ;main.c: 75:     unsigned char reverseDuration=400;
  1367   002A00  0E90               	movlw	144
  1368   002A02  6F7D               	movwf	main@reverseDuration& (0+255),b
  1369   002A04                     
  1370                           ; BSR set to: 1
  1371                           ;main.c: 77:     char turnSpeed=32;
  1372   002A04  0E20               	movlw	32
  1373   002A06  6F7E               	movwf	main@turnSpeed& (0+255),b
  1374   002A08                     
  1375                           ; BSR set to: 1
  1376                           ;main.c: 78:     unsigned char turnDuration=10;
  1377   002A08  0E0A               	movlw	10
  1378   002A0A  6FB4               	movwf	main@turnDuration& (0+255),b
  1379   002A0C                     
  1380                           ; BSR set to: 1
  1381                           ;main.c: 79:     unsigned char turnRamp=1;
  1382   002A0C  0E01               	movlw	1
  1383   002A0E  6F7F               	movwf	main@turnRamp& (0+255),b
  1384   002A10                     
  1385                           ; BSR set to: 1
  1386                           ;main.c: 82:     batteryLevel();
  1387   002A10  ECBC  F027         	call	_batteryLevel	;wreg free
  1388   002A14                     l93:
  1389   002A14  B48E               	btfsc	142,2,c	;volatile
  1390   002A16  EF0F  F015         	goto	u5251
  1391   002A1A  EF11  F015         	goto	u5250
  1392   002A1E                     u5251:
  1393   002A1E  EF0A  F015         	goto	l93
  1394   002A22                     u5250:
  1395   002A22                     
  1396                           ;main.c: 95:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1397   002A22  9680               	bcf	128,3,c	;volatile
  1398   002A24  9E7C               	bcf	124,7,c	;volatile
  1399                           
  1400                           ;main.c: 98:     LATHbits.LATH1=LATDbits.LATD3=1;
  1401   002A26  867C               	bsf	124,3,c	;volatile
  1402   002A28  8280               	bsf	128,1,c	;volatile
  1403   002A2A                     
  1404                           ;main.c: 99:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1405   002A2A  0E29               	movlw	41
  1406   002A2C  6E4A               	movwf	(??_main+1)^0,c
  1407   002A2E  0E96               	movlw	150
  1408   002A30  6E49               	movwf	??_main^0,c
  1409   002A32  0E7F               	movlw	127
  1410   002A34                     u5547:
  1411   002A34  2EE8               	decfsz	wreg,f,c
  1412   002A36  D7FE               	bra	u5547
  1413   002A38  2E49               	decfsz	??_main^0,f,c
  1414   002A3A  D7FC               	bra	u5547
  1415   002A3C  2E4A               	decfsz	(??_main+1)^0,f,c
  1416   002A3E  D7FA               	bra	u5547
  1417   002A40  0000               	nop	
  1418   002A42                     
  1419                           ;main.c: 102:     struct HSV_calib red, green, blue, yellow, pink, orange, lightblue, wh
      +                          ite;;main.c: 103:     color_calibration(&RGBC, &HSV, &red, &green, &blue, &yellow, &pink
      +                          , &orange, &lightblue, &white);
  1420   002A42  0EBB               	movlw	low main@RGBC
  1421   002A44  0100               	movlb	0	; () banked
  1422   002A46  6F76               	movwf	color_calibration@RGBC& (0+255),b
  1423   002A48  0E01               	movlw	high main@RGBC
  1424   002A4A  6F77               	movwf	(color_calibration@RGBC+1)& (0+255),b
  1425   002A4C  0EB5               	movlw	low main@HSV
  1426   002A4E  6F78               	movwf	color_calibration@HSV& (0+255),b
  1427   002A50  0E01               	movlw	high main@HSV
  1428   002A52  6F79               	movwf	(color_calibration@HSV+1)& (0+255),b
  1429   002A54  0E81               	movlw	low main@red
  1430   002A56  6F7A               	movwf	color_calibration@red& (0+255),b
  1431   002A58  0E01               	movlw	high main@red
  1432   002A5A  6F7B               	movwf	(color_calibration@red+1)& (0+255),b
  1433   002A5C  0E87               	movlw	low main@green
  1434   002A5E  6F7C               	movwf	color_calibration@green& (0+255),b
  1435   002A60  0E01               	movlw	high main@green
  1436   002A62  6F7D               	movwf	(color_calibration@green+1)& (0+255),b
  1437   002A64  0E8D               	movlw	low main@blue
  1438   002A66  6F7E               	movwf	color_calibration@blue& (0+255),b
  1439   002A68  0E01               	movlw	high main@blue
  1440   002A6A  6F7F               	movwf	(color_calibration@blue+1)& (0+255),b
  1441   002A6C  0E93               	movlw	low main@yellow
  1442   002A6E  6F80               	movwf	color_calibration@yellow& (0+255),b
  1443   002A70  0E01               	movlw	high main@yellow
  1444   002A72  6F81               	movwf	(color_calibration@yellow+1)& (0+255),b
  1445   002A74  0E99               	movlw	low main@pink
  1446   002A76  6F82               	movwf	color_calibration@pink& (0+255),b
  1447   002A78  0E01               	movlw	high main@pink
  1448   002A7A  6F83               	movwf	(color_calibration@pink+1)& (0+255),b
  1449   002A7C  0E9F               	movlw	low main@orange
  1450   002A7E  6F84               	movwf	color_calibration@orange& (0+255),b
  1451   002A80  0E01               	movlw	high main@orange
  1452   002A82  6F85               	movwf	(color_calibration@orange+1)& (0+255),b
  1453   002A84  0EA5               	movlw	low main@lightblue
  1454   002A86  6F86               	movwf	color_calibration@lightblue& (0+255),b
  1455   002A88  0E01               	movlw	high main@lightblue
  1456   002A8A  6F87               	movwf	(color_calibration@lightblue+1)& (0+255),b
  1457   002A8C  0EAB               	movlw	low main@white
  1458   002A8E  6F88               	movwf	color_calibration@white& (0+255),b
  1459   002A90  0E01               	movlw	high main@white
  1460   002A92  6F89               	movwf	(color_calibration@white+1)& (0+255),b
  1461   002A94  ECC6  F011         	call	_color_calibration	;wreg free
  1462   002A98                     
  1463                           ;main.c: 106:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1464   002A98  0ECD               	movlw	low main@motorL
  1465   002A9A  6E31               	movwf	calibration@mL^0,c
  1466   002A9C  0E01               	movlw	high main@motorL
  1467   002A9E  6E32               	movwf	(calibration@mL+1)^0,c
  1468   002AA0  0EC3               	movlw	low main@motorR
  1469   002AA2  6E33               	movwf	calibration@mR^0,c
  1470   002AA4  0E01               	movlw	high main@motorR
  1471   002AA6  6E34               	movwf	(calibration@mR+1)^0,c
  1472   002AA8  0E20               	movlw	32
  1473   002AAA  6E35               	movwf	calibration@turnSpeed^0,c
  1474   002AAC  0EB4               	movlw	low main@turnDuration
  1475   002AAE  6E36               	movwf	calibration@turnDuration^0,c
  1476   002AB0  0E01               	movlw	high main@turnDuration
  1477   002AB2  6E37               	movwf	(calibration@turnDuration+1)^0,c
  1478   002AB4  0E01               	movlw	1
  1479   002AB6  6E38               	movwf	calibration@turnRamp^0,c
  1480   002AB8  ECD3  F01B         	call	_calibration	;wreg free
  1481   002ABC                     
  1482                           ;main.c: 109:     color_read(&RGBC);
  1483   002ABC  0EBB               	movlw	low main@RGBC
  1484   002ABE  6E14               	movwf	color_read@RGBC^0,c
  1485   002AC0  0E01               	movlw	high main@RGBC
  1486   002AC2  6E15               	movwf	(color_read@RGBC+1)^0,c
  1487   002AC4  EC4C  F01F         	call	_color_read	;wreg free
  1488   002AC8                     
  1489                           ;main.c: 110:     rgb_2_hsv(RGBC, &HSV);
  1490   002AC8  EE21  F0BB         	lfsr	2,main@RGBC
  1491   002ACC  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  1492   002AD0  0E07               	movlw	7
  1493   002AD2                     u5261:
  1494   002AD2  CFDB FFEB          	movff	plusw2,plusw0
  1495   002AD6  06E8               	decf	wreg,f,c
  1496   002AD8  E2FC               	bc	u5261
  1497   002ADA  0EB5               	movlw	low main@HSV
  1498   002ADC  6E32               	movwf	rgb_2_hsv@HSV^0,c
  1499   002ADE  0E01               	movlw	high main@HSV
  1500   002AE0  6E33               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1501   002AE2  EC7E  F017         	call	_rgb_2_hsv	;wreg free
  1502   002AE6                     
  1503                           ;main.c: 111:     color = color_detect(HSV, red, green, blue, yellow, pink, orange, ligh
      +                          tblue, white);
  1504   002AE6  EE21  F0B5         	lfsr	2,main@HSV
  1505   002AEA  EE00  F010         	lfsr	0,color_detect@HSV
  1506   002AEE  0E05               	movlw	5
  1507   002AF0                     u5271:
  1508   002AF0  CFDB FFEB          	movff	plusw2,plusw0
  1509   002AF4  06E8               	decf	wreg,f,c
  1510   002AF6  E2FC               	bc	u5271
  1511   002AF8  EE21  F081         	lfsr	2,main@red
  1512   002AFC  EE00  F016         	lfsr	0,color_detect@red
  1513   002B00  0E05               	movlw	5
  1514   002B02                     u5281:
  1515   002B02  CFDB FFEB          	movff	plusw2,plusw0
  1516   002B06  06E8               	decf	wreg,f,c
  1517   002B08  E2FC               	bc	u5281
  1518   002B0A  EE21  F087         	lfsr	2,main@green
  1519   002B0E  EE00  F01C         	lfsr	0,color_detect@green
  1520   002B12  0E05               	movlw	5
  1521   002B14                     u5291:
  1522   002B14  CFDB FFEB          	movff	plusw2,plusw0
  1523   002B18  06E8               	decf	wreg,f,c
  1524   002B1A  E2FC               	bc	u5291
  1525   002B1C  EE21  F08D         	lfsr	2,main@blue
  1526   002B20  EE00  F022         	lfsr	0,color_detect@blue
  1527   002B24  0E05               	movlw	5
  1528   002B26                     u5301:
  1529   002B26  CFDB FFEB          	movff	plusw2,plusw0
  1530   002B2A  06E8               	decf	wreg,f,c
  1531   002B2C  E2FC               	bc	u5301
  1532   002B2E  EE21  F093         	lfsr	2,main@yellow
  1533   002B32  EE00  F028         	lfsr	0,color_detect@yellow
  1534   002B36  0E05               	movlw	5
  1535   002B38                     u5311:
  1536   002B38  CFDB FFEB          	movff	plusw2,plusw0
  1537   002B3C  06E8               	decf	wreg,f,c
  1538   002B3E  E2FC               	bc	u5311
  1539   002B40  EE21  F099         	lfsr	2,main@pink
  1540   002B44  EE00  F02E         	lfsr	0,color_detect@pink
  1541   002B48  0E05               	movlw	5
  1542   002B4A                     u5321:
  1543   002B4A  CFDB FFEB          	movff	plusw2,plusw0
  1544   002B4E  06E8               	decf	wreg,f,c
  1545   002B50  E2FC               	bc	u5321
  1546   002B52  EE21  F09F         	lfsr	2,main@orange
  1547   002B56  EE00  F034         	lfsr	0,color_detect@orange
  1548   002B5A  0E05               	movlw	5
  1549   002B5C                     u5331:
  1550   002B5C  CFDB FFEB          	movff	plusw2,plusw0
  1551   002B60  06E8               	decf	wreg,f,c
  1552   002B62  E2FC               	bc	u5331
  1553   002B64  EE21  F0A5         	lfsr	2,main@lightblue
  1554   002B68  EE00  F03A         	lfsr	0,color_detect@lightblue
  1555   002B6C  0E05               	movlw	5
  1556   002B6E                     u5341:
  1557   002B6E  CFDB FFEB          	movff	plusw2,plusw0
  1558   002B72  06E8               	decf	wreg,f,c
  1559   002B74  E2FC               	bc	u5341
  1560   002B76  EE21  F0AB         	lfsr	2,main@white
  1561   002B7A  EE00  F040         	lfsr	0,color_detect@white
  1562   002B7E  0E05               	movlw	5
  1563   002B80                     u5351:
  1564   002B80  CFDB FFEB          	movff	plusw2,plusw0
  1565   002B84  06E8               	decf	wreg,f,c
  1566   002B86  E2FC               	bc	u5351
  1567   002B88  EC20  F01D         	call	_color_detect	;wreg free
  1568   002B8C  0101               	movlb	1	; () banked
  1569   002B8E  6FB2               	movwf	main@color& (0+255),b
  1570   002B90                     
  1571                           ; BSR set to: 1
  1572                           ;main.c: 115:     white_Light(1);
  1573   002B90  0E01               	movlw	1
  1574   002B92  ECF4  F028         	call	_white_Light
  1575   002B96                     
  1576                           ;main.c: 116:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1577   002B96  0E52               	movlw	82
  1578   002B98  6E4A               	movwf	(??_main+1)^0,c
  1579   002B9A  0E2B               	movlw	43
  1580   002B9C  6E49               	movwf	??_main^0,c
  1581   002B9E  0E00               	movlw	0
  1582   002BA0                     u5557:
  1583   002BA0  2EE8               	decfsz	wreg,f,c
  1584   002BA2  D7FE               	bra	u5557
  1585   002BA4  2E49               	decfsz	??_main^0,f,c
  1586   002BA6  D7FC               	bra	u5557
  1587   002BA8  2E4A               	decfsz	(??_main+1)^0,f,c
  1588   002BAA  D7FA               	bra	u5557
  1589   002BAC  D000               	nop2	
  1590   002BAE                     
  1591                           ;main.c: 119:     color_read(&RGBC);
  1592   002BAE  0EBB               	movlw	low main@RGBC
  1593   002BB0  6E14               	movwf	color_read@RGBC^0,c
  1594   002BB2  0E01               	movlw	high main@RGBC
  1595   002BB4  6E15               	movwf	(color_read@RGBC+1)^0,c
  1596   002BB6  EC4C  F01F         	call	_color_read	;wreg free
  1597   002BBA                     
  1598                           ;main.c: 120:     ambient=RGBC.C;
  1599   002BBA  C1C1  F0F8         	movff	main@RGBC+6,_ambient
  1600   002BBE  C1C2  F0F9         	movff	main@RGBC+7,_ambient+1
  1601   002BC2                     
  1602                           ;main.c: 121:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1603   002BC2  0E09               	movlw	9
  1604   002BC4  6E4A               	movwf	(??_main+1)^0,c
  1605   002BC6  0E1E               	movlw	30
  1606   002BC8  6E49               	movwf	??_main^0,c
  1607   002BCA  0EE4               	movlw	228
  1608   002BCC                     u5567:
  1609   002BCC  2EE8               	decfsz	wreg,f,c
  1610   002BCE  D7FE               	bra	u5567
  1611   002BD0  2E49               	decfsz	??_main^0,f,c
  1612   002BD2  D7FC               	bra	u5567
  1613   002BD4  2E4A               	decfsz	(??_main+1)^0,f,c
  1614   002BD6  D7FA               	bra	u5567
  1615   002BD8  D000               	nop2	
  1616   002BDA                     
  1617                           ;main.c: 122:     color_clear_init_interrupts();
  1618   002BDA  ECA8  F025         	call	_color_clear_init_interrupts	;wreg free
  1619   002BDE                     
  1620                           ;main.c: 124:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1621   002BDE  0ECD               	movlw	low main@motorL
  1622   002BE0  6E23               	movwf	fullSpeedAhead@mL^0,c
  1623   002BE2  0E01               	movlw	high main@motorL
  1624   002BE4  6E24               	movwf	(fullSpeedAhead@mL+1)^0,c
  1625   002BE6  0EC3               	movlw	low main@motorR
  1626   002BE8  6E25               	movwf	fullSpeedAhead@mR^0,c
  1627   002BEA  0E01               	movlw	high main@motorR
  1628   002BEC  6E26               	movwf	(fullSpeedAhead@mR+1)^0,c
  1629   002BEE  0E14               	movlw	20
  1630   002BF0  6E27               	movwf	fullSpeedAhead@straightSpeed^0,c
  1631   002BF2  0E02               	movlw	2
  1632   002BF4  6E28               	movwf	fullSpeedAhead@straightRamp^0,c
  1633   002BF6  ECD3  F024         	call	_fullSpeedAhead	;wreg free
  1634   002BFA                     
  1635                           ;main.c: 125:     resetTimer();
  1636   002BFA  EC81  F029         	call	_resetTimer	;wreg free
  1637   002BFE                     
  1638                           ;main.c: 127:     brightnessChange=0;
  1639   002BFE  0E00               	movlw	0
  1640   002C00  0100               	movlb	0	; () banked
  1641   002C02  6FF3               	movwf	_brightnessChange& (0+255),b
  1642   002C04                     
  1643                           ; BSR set to: 0
  1644                           ;main.c: 128:     lost=0;
  1645   002C04  0E00               	movlw	0
  1646   002C06  6FF2               	movwf	_lost& (0+255),b
  1647   002C08                     l5979:
  1648                           
  1649                           ;main.c: 131:         if (brightnessChange == 1) {
  1650   002C08  0100               	movlb	0	; () banked
  1651   002C0A  05F3               	decf	_brightnessChange& (0+255),w,b
  1652   002C0C  A4D8               	btfss	status,2,c
  1653   002C0E  EF0B  F016         	goto	u5361
  1654   002C12  EF0D  F016         	goto	u5360
  1655   002C16                     u5361:
  1656   002C16  EF3E  F016         	goto	l5997
  1657   002C1A                     u5360:
  1658   002C1A                     
  1659                           ; BSR set to: 0
  1660                           ;main.c: 132:             color_read(&RGBC);
  1661   002C1A  0EBB               	movlw	low main@RGBC
  1662   002C1C  6E14               	movwf	color_read@RGBC^0,c
  1663   002C1E  0E01               	movlw	high main@RGBC
  1664   002C20  6E15               	movwf	(color_read@RGBC+1)^0,c
  1665   002C22  EC4C  F01F         	call	_color_read	;wreg free
  1666   002C26                     
  1667                           ;main.c: 133:             ambientNew=RGBC.C;
  1668   002C26  C1C1  F17B         	movff	main@RGBC+6,main@ambientNew
  1669   002C2A  C1C2  F17C         	movff	main@RGBC+7,main@ambientNew+1
  1670   002C2E                     
  1671                           ;main.c: 134:             if (ambientNew <= ambient) {
  1672   002C2E  0101               	movlb	1	; () banked
  1673   002C30  517B               	movf	main@ambientNew& (0+255),w,b
  1674   002C32  0100               	movlb	0	; () banked
  1675   002C34  5DF8               	subwf	_ambient& (0+255),w,b
  1676   002C36  0101               	movlb	1	; () banked
  1677   002C38  517C               	movf	(main@ambientNew+1)& (0+255),w,b
  1678   002C3A  0100               	movlb	0	; () banked
  1679   002C3C  59F9               	subwfb	(_ambient+1)& (0+255),w,b
  1680   002C3E  A0D8               	btfss	status,0,c
  1681   002C40  EF24  F016         	goto	u5371
  1682   002C44  EF26  F016         	goto	u5370
  1683   002C48                     u5371:
  1684   002C48  EF38  F016         	goto	l5995
  1685   002C4C                     u5370:
  1686   002C4C                     
  1687                           ; BSR set to: 0
  1688                           ;main.c: 135:                 ambient = ambientNew;
  1689   002C4C  C17B  F0F8         	movff	main@ambientNew,_ambient
  1690   002C50  C17C  F0F9         	movff	main@ambientNew+1,_ambient+1
  1691   002C54                     
  1692                           ; BSR set to: 0
  1693                           ;main.c: 136:                 color_clear_init_interrupts();
  1694   002C54  ECA8  F025         	call	_color_clear_init_interrupts	;wreg free
  1695   002C58                     
  1696                           ;main.c: 137:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  1697   002C58  0ED0               	movlw	208
  1698   002C5A  6E49               	movwf	??_main^0,c
  1699   002C5C  0ECA               	movlw	202
  1700   002C5E                     u5577:
  1701   002C5E  2EE8               	decfsz	wreg,f,c
  1702   002C60  D7FE               	bra	u5577
  1703   002C62  2E49               	decfsz	??_main^0,f,c
  1704   002C64  D7FC               	bra	u5577
  1705   002C66                     
  1706                           ;main.c: 138:                 brightnessChange = 0;
  1707   002C66  0E00               	movlw	0
  1708   002C68  0100               	movlb	0	; () banked
  1709   002C6A  6FF3               	movwf	_brightnessChange& (0+255),b
  1710                           
  1711                           ;main.c: 139:             }
  1712   002C6C  EF3E  F016         	goto	l5997
  1713   002C70                     l5995:
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;main.c: 142:                 wall = 1;
  1717   002C70  0E01               	movlw	1
  1718   002C72  0101               	movlb	1	; () banked
  1719   002C74  6F7A               	movwf	main@wall& (0+255),b
  1720                           
  1721                           ;main.c: 143:                 brightnessChange = 0;
  1722   002C76  0E00               	movlw	0
  1723   002C78  0100               	movlb	0	; () banked
  1724   002C7A  6FF3               	movwf	_brightnessChange& (0+255),b
  1725   002C7C                     l5997:
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;main.c: 147:         if (wall == 1) {
  1729   002C7C  0101               	movlb	1	; () banked
  1730   002C7E  057A               	decf	main@wall& (0+255),w,b
  1731   002C80  A4D8               	btfss	status,2,c
  1732   002C82  EF45  F016         	goto	u5381
  1733   002C86  EF47  F016         	goto	u5380
  1734   002C8A                     u5381:
  1735   002C8A  EF2B  F017         	goto	l6029
  1736   002C8E                     u5380:
  1737   002C8E                     
  1738                           ; BSR set to: 1
  1739                           ;main.c: 148:             PIE0bits.INT0IE=TMR0IE=0;
  1740   002C8E  010E               	movlb	14	; () banked
  1741   002C90  9B29               	bcf	41,5,b	;volatile
  1742   002C92  AB29               	btfss	41,5,b	;volatile
  1743   002C94  D002               	bra	u5395
  1744   002C96  8129               	bsf	41,0,b	;volatile
  1745   002C98  D002               	bra	u5397
  1746   002C9A                     u5395:
  1747   002C9A  010E               	movlb	14	; () banked
  1748   002C9C  9129               	bcf	41,0,b	;volatile
  1749   002C9E                     u5397:
  1750   002C9E                     
  1751                           ; BSR set to: 14
  1752                           ;main.c: 149:             straightTime[curMove] = get16bitTMR0val();
  1753   002C9E  EC92  F028         	call	_get16bitTMR0val	;wreg free
  1754   002CA2  0101               	movlb	1	; () banked
  1755   002CA4  51B1               	movf	main@curMove& (0+255),w,b
  1756   002CA6  0D02               	mullw	2
  1757   002CA8  0E00               	movlw	low main@straightTime
  1758   002CAA  24F3               	addwf	243,w,c
  1759   002CAC  6ED9               	movwf	fsr2l,c
  1760   002CAE  0E01               	movlw	high main@straightTime
  1761   002CB0  20F4               	addwfc	prodh,w,c
  1762   002CB2  6EDA               	movwf	fsr2h,c
  1763   002CB4  C010  FFDE         	movff	?_get16bitTMR0val,postinc2
  1764   002CB8  C011  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1765                           
  1766                           ;main.c: 152:             stop(&motorL, &motorR, straightRamp);
  1767   002CBC  0ECD               	movlw	low main@motorL
  1768   002CBE  6E23               	movwf	stop@mL^0,c
  1769   002CC0  0E01               	movlw	high main@motorL
  1770   002CC2  6E24               	movwf	(stop@mL+1)^0,c
  1771   002CC4  0EC3               	movlw	low main@motorR
  1772   002CC6  6E25               	movwf	stop@mR^0,c
  1773   002CC8  0E01               	movlw	high main@motorR
  1774   002CCA  6E26               	movwf	(stop@mR+1)^0,c
  1775   002CCC  C1B3  F027         	movff	main@straightRamp,stop@straightRamp
  1776   002CD0  EC4F  F024         	call	_stop	;wreg free
  1777                           
  1778                           ;main.c: 153:             wallAdjust(&motorL, &motorR, straightSpeed, straightRamp);
  1779   002CD4  0ECD               	movlw	low main@motorL
  1780   002CD6  6E23               	movwf	wallAdjust@mL^0,c
  1781   002CD8  0E01               	movlw	high main@motorL
  1782   002CDA  6E24               	movwf	(wallAdjust@mL+1)^0,c
  1783   002CDC  0EC3               	movlw	low main@motorR
  1784   002CDE  6E25               	movwf	wallAdjust@mR^0,c
  1785   002CE0  0E01               	movlw	high main@motorR
  1786   002CE2  6E26               	movwf	(wallAdjust@mR+1)^0,c
  1787   002CE4  C180  F027         	movff	main@straightSpeed,wallAdjust@straightSpeed
  1788   002CE8  C1B3  F028         	movff	main@straightRamp,wallAdjust@straightRamp
  1789   002CEC  ECEC  F019         	call	_wallAdjust	;wreg free
  1790   002CF0                     
  1791                           ;main.c: 154:             color_read(&RGBC);
  1792   002CF0  0EBB               	movlw	low main@RGBC
  1793   002CF2  6E14               	movwf	color_read@RGBC^0,c
  1794   002CF4  0E01               	movlw	high main@RGBC
  1795   002CF6  6E15               	movwf	(color_read@RGBC+1)^0,c
  1796   002CF8  EC4C  F01F         	call	_color_read	;wreg free
  1797   002CFC                     
  1798                           ;main.c: 156:             rgb_2_hsv(RGBC, &HSV);
  1799   002CFC  EE21  F0BB         	lfsr	2,main@RGBC
  1800   002D00  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  1801   002D04  0E07               	movlw	7
  1802   002D06                     u5401:
  1803   002D06  CFDB FFEB          	movff	plusw2,plusw0
  1804   002D0A  06E8               	decf	wreg,f,c
  1805   002D0C  E2FC               	bc	u5401
  1806   002D0E  0EB5               	movlw	low main@HSV
  1807   002D10  6E32               	movwf	rgb_2_hsv@HSV^0,c
  1808   002D12  0E01               	movlw	high main@HSV
  1809   002D14  6E33               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1810   002D16  EC7E  F017         	call	_rgb_2_hsv	;wreg free
  1811   002D1A                     
  1812                           ;main.c: 157:             color = color_detect(HSV, red, green, blue, yellow, pink, oran
      +                          ge, lightblue, white);
  1813   002D1A  EE21  F0B5         	lfsr	2,main@HSV
  1814   002D1E  EE00  F010         	lfsr	0,color_detect@HSV
  1815   002D22  0E05               	movlw	5
  1816   002D24                     u5411:
  1817   002D24  CFDB FFEB          	movff	plusw2,plusw0
  1818   002D28  06E8               	decf	wreg,f,c
  1819   002D2A  E2FC               	bc	u5411
  1820   002D2C  EE21  F081         	lfsr	2,main@red
  1821   002D30  EE00  F016         	lfsr	0,color_detect@red
  1822   002D34  0E05               	movlw	5
  1823   002D36                     u5421:
  1824   002D36  CFDB FFEB          	movff	plusw2,plusw0
  1825   002D3A  06E8               	decf	wreg,f,c
  1826   002D3C  E2FC               	bc	u5421
  1827   002D3E  EE21  F087         	lfsr	2,main@green
  1828   002D42  EE00  F01C         	lfsr	0,color_detect@green
  1829   002D46  0E05               	movlw	5
  1830   002D48                     u5431:
  1831   002D48  CFDB FFEB          	movff	plusw2,plusw0
  1832   002D4C  06E8               	decf	wreg,f,c
  1833   002D4E  E2FC               	bc	u5431
  1834   002D50  EE21  F08D         	lfsr	2,main@blue
  1835   002D54  EE00  F022         	lfsr	0,color_detect@blue
  1836   002D58  0E05               	movlw	5
  1837   002D5A                     u5441:
  1838   002D5A  CFDB FFEB          	movff	plusw2,plusw0
  1839   002D5E  06E8               	decf	wreg,f,c
  1840   002D60  E2FC               	bc	u5441
  1841   002D62  EE21  F093         	lfsr	2,main@yellow
  1842   002D66  EE00  F028         	lfsr	0,color_detect@yellow
  1843   002D6A  0E05               	movlw	5
  1844   002D6C                     u5451:
  1845   002D6C  CFDB FFEB          	movff	plusw2,plusw0
  1846   002D70  06E8               	decf	wreg,f,c
  1847   002D72  E2FC               	bc	u5451
  1848   002D74  EE21  F099         	lfsr	2,main@pink
  1849   002D78  EE00  F02E         	lfsr	0,color_detect@pink
  1850   002D7C  0E05               	movlw	5
  1851   002D7E                     u5461:
  1852   002D7E  CFDB FFEB          	movff	plusw2,plusw0
  1853   002D82  06E8               	decf	wreg,f,c
  1854   002D84  E2FC               	bc	u5461
  1855   002D86  EE21  F09F         	lfsr	2,main@orange
  1856   002D8A  EE00  F034         	lfsr	0,color_detect@orange
  1857   002D8E  0E05               	movlw	5
  1858   002D90                     u5471:
  1859   002D90  CFDB FFEB          	movff	plusw2,plusw0
  1860   002D94  06E8               	decf	wreg,f,c
  1861   002D96  E2FC               	bc	u5471
  1862   002D98  EE21  F0A5         	lfsr	2,main@lightblue
  1863   002D9C  EE00  F03A         	lfsr	0,color_detect@lightblue
  1864   002DA0  0E05               	movlw	5
  1865   002DA2                     u5481:
  1866   002DA2  CFDB FFEB          	movff	plusw2,plusw0
  1867   002DA6  06E8               	decf	wreg,f,c
  1868   002DA8  E2FC               	bc	u5481
  1869   002DAA  EE21  F0AB         	lfsr	2,main@white
  1870   002DAE  EE00  F040         	lfsr	0,color_detect@white
  1871   002DB2  0E05               	movlw	5
  1872   002DB4                     u5491:
  1873   002DB4  CFDB FFEB          	movff	plusw2,plusw0
  1874   002DB8  06E8               	decf	wreg,f,c
  1875   002DBA  E2FC               	bc	u5491
  1876   002DBC  EC20  F01D         	call	_color_detect	;wreg free
  1877   002DC0  0101               	movlb	1	; () banked
  1878   002DC2  6FB2               	movwf	main@color& (0+255),b
  1879   002DC4                     
  1880                           ; BSR set to: 1
  1881                           ;main.c: 159:             moveSequence[curMove] = color;
  1882   002DC4  0E52               	movlw	low main@moveSequence
  1883   002DC6  25B1               	addwf	main@curMove& (0+255),w,b
  1884   002DC8  6ED9               	movwf	fsr2l,c
  1885   002DCA  6ADA               	clrf	fsr2h,c
  1886   002DCC  0E01               	movlw	high main@moveSequence
  1887   002DCE  22DA               	addwfc	fsr2h,f,c
  1888   002DD0  C1B2  FFDF         	movff	main@color,indf2
  1889   002DD4                     
  1890                           ; BSR set to: 1
  1891                           ;main.c: 162:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1892   002DD4  0ECD               	movlw	low main@motorL
  1893   002DD6  0100               	movlb	0	; () banked
  1894   002DD8  6F60               	movwf	move@mL& (0+255),b
  1895   002DDA  0E01               	movlw	high main@motorL
  1896   002DDC  6F61               	movwf	(move@mL+1)& (0+255),b
  1897   002DDE  0EC3               	movlw	low main@motorR
  1898   002DE0  6F62               	movwf	move@mR& (0+255),b
  1899   002DE2  0E01               	movlw	high main@motorR
  1900   002DE4  6F63               	movwf	(move@mR+1)& (0+255),b
  1901   002DE6  C1B2  F064         	movff	main@color,move@color
  1902   002DEA  0E52               	movlw	low main@moveSequence
  1903   002DEC  6F65               	movwf	move@moveSequence& (0+255),b
  1904   002DEE  0E01               	movlw	high main@moveSequence
  1905   002DF0  6F66               	movwf	(move@moveSequence+1)& (0+255),b
  1906   002DF2  0E00               	movlw	low main@straightTime
  1907   002DF4  6F67               	movwf	move@straightTime& (0+255),b
  1908   002DF6  0E01               	movlw	high main@straightTime
  1909   002DF8  6F68               	movwf	(move@straightTime+1)& (0+255),b
  1910   002DFA  C1B1  F069         	movff	main@curMove,move@curMove
  1911   002DFE  C180  F06A         	movff	main@straightSpeed,move@straightSpeed
  1912   002E02  C17D  F06B         	movff	main@reverseDuration,move@reverseDuration
  1913   002E06  C1B3  F06C         	movff	main@straightRamp,move@straightRamp
  1914   002E0A  C17E  F06D         	movff	main@turnSpeed,move@turnSpeed
  1915   002E0E  C1B4  F06E         	movff	main@turnDuration,move@turnDuration
  1916   002E12  C17F  F06F         	movff	main@turnRamp,move@turnRamp
  1917   002E16  EC01  F007         	call	_move	;wreg free
  1918   002E1A                     
  1919                           ;main.c: 165:             color_read(&RGBC);
  1920   002E1A  0EBB               	movlw	low main@RGBC
  1921   002E1C  6E14               	movwf	color_read@RGBC^0,c
  1922   002E1E  0E01               	movlw	high main@RGBC
  1923   002E20  6E15               	movwf	(color_read@RGBC+1)^0,c
  1924   002E22  EC4C  F01F         	call	_color_read	;wreg free
  1925   002E26                     
  1926                           ;main.c: 166:             ambient=RGBC.C;
  1927   002E26  C1C1  F0F8         	movff	main@RGBC+6,_ambient
  1928   002E2A  C1C2  F0F9         	movff	main@RGBC+7,_ambient+1
  1929   002E2E                     
  1930                           ;main.c: 167:             color_clear_init_interrupts();
  1931   002E2E  ECA8  F025         	call	_color_clear_init_interrupts	;wreg free
  1932   002E32                     
  1933                           ;main.c: 168:             brightnessChange = 0;
  1934   002E32  0E00               	movlw	0
  1935   002E34  0100               	movlb	0	; () banked
  1936   002E36  6FF3               	movwf	_brightnessChange& (0+255),b
  1937   002E38                     
  1938                           ; BSR set to: 0
  1939                           ;main.c: 170:             curMove++;
  1940   002E38  0101               	movlb	1	; () banked
  1941   002E3A  2BB1               	incf	main@curMove& (0+255),f,b
  1942   002E3C                     
  1943                           ; BSR set to: 1
  1944                           ;main.c: 171:             resetTimer();
  1945   002E3C  EC81  F029         	call	_resetTimer	;wreg free
  1946   002E40                     
  1947                           ;main.c: 172:             PIE0bits.INT0IE=TMR0IE=1;
  1948   002E40  010E               	movlb	14	; () banked
  1949   002E42  8B29               	bsf	41,5,b	;volatile
  1950   002E44  AB29               	btfss	41,5,b	;volatile
  1951   002E46  D002               	bra	u5505
  1952   002E48  8129               	bsf	41,0,b	;volatile
  1953   002E4A  D002               	bra	u5507
  1954   002E4C                     u5505:
  1955   002E4C  010E               	movlb	14	; () banked
  1956   002E4E  9129               	bcf	41,0,b	;volatile
  1957   002E50                     u5507:
  1958   002E50                     
  1959                           ; BSR set to: 14
  1960                           ;main.c: 173:             wall = 0;
  1961   002E50  0E00               	movlw	0
  1962   002E52  0101               	movlb	1	; () banked
  1963   002E54  6F7A               	movwf	main@wall& (0+255),b
  1964   002E56                     l6029:
  1965                           
  1966                           ; BSR set to: 1
  1967                           ;main.c: 177:         if (lost == 1) {
  1968   002E56  0100               	movlb	0	; () banked
  1969   002E58  05F2               	decf	_lost& (0+255),w,b
  1970   002E5A  A4D8               	btfss	status,2,c
  1971   002E5C  EF32  F017         	goto	u5511
  1972   002E60  EF34  F017         	goto	u5510
  1973   002E64                     u5511:
  1974   002E64  EF69  F017         	goto	l6039
  1975   002E68                     u5510:
  1976   002E68                     
  1977                           ; BSR set to: 0
  1978                           ;main.c: 178:             PIE0bits.INT0IE=0;
  1979   002E68  010E               	movlb	14	; () banked
  1980   002E6A  9129               	bcf	41,0,b	;volatile
  1981   002E6C                     
  1982                           ; BSR set to: 14
  1983                           ;main.c: 179:             stop(&motorL, &motorR, straightRamp);
  1984   002E6C  0ECD               	movlw	low main@motorL
  1985   002E6E  6E23               	movwf	stop@mL^0,c
  1986   002E70  0E01               	movlw	high main@motorL
  1987   002E72  6E24               	movwf	(stop@mL+1)^0,c
  1988   002E74  0EC3               	movlw	low main@motorR
  1989   002E76  6E25               	movwf	stop@mR^0,c
  1990   002E78  0E01               	movlw	high main@motorR
  1991   002E7A  6E26               	movwf	(stop@mR+1)^0,c
  1992   002E7C  C1B3  F027         	movff	main@straightRamp,stop@straightRamp
  1993   002E80  EC4F  F024         	call	_stop	;wreg free
  1994                           
  1995                           ;main.c: 180:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1996   002E84  0ECD               	movlw	low main@motorL
  1997   002E86  6E31               	movwf	lostReturnHome@mL^0,c
  1998   002E88  0E01               	movlw	high main@motorL
  1999   002E8A  6E32               	movwf	(lostReturnHome@mL+1)^0,c
  2000   002E8C  0EC3               	movlw	low main@motorR
  2001   002E8E  6E33               	movwf	lostReturnHome@mR^0,c
  2002   002E90  0E01               	movlw	high main@motorR
  2003   002E92  6E34               	movwf	(lostReturnHome@mR+1)^0,c
  2004   002E94  0E52               	movlw	low main@moveSequence
  2005   002E96  6E35               	movwf	lostReturnHome@moveSequence^0,c
  2006   002E98  0E01               	movlw	high main@moveSequence
  2007   002E9A  6E36               	movwf	(lostReturnHome@moveSequence+1)^0,c
  2008   002E9C  0E00               	movlw	low main@straightTime
  2009   002E9E  6E37               	movwf	lostReturnHome@straightTime^0,c
  2010   002EA0  0E01               	movlw	high main@straightTime
  2011   002EA2  6E38               	movwf	(lostReturnHome@straightTime+1)^0,c
  2012   002EA4  C1B1  F039         	movff	main@curMove,lostReturnHome@curMove
  2013   002EA8  C180  F03A         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  2014   002EAC  C17D  F03B         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  2015   002EB0  C1B3  F03C         	movff	main@straightRamp,lostReturnHome@straightRamp
  2016   002EB4  C17E  F03D         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  2017   002EB8  C1B4  F03E         	movff	main@turnDuration,lostReturnHome@turnDuration
  2018   002EBC  C17F  F03F         	movff	main@turnRamp,lostReturnHome@turnRamp
  2019   002EC0  EC74  F00E         	call	_lostReturnHome	;wreg free
  2020   002EC4                     
  2021                           ;main.c: 181:             PIE0bits.INT0IE=1;
  2022   002EC4  010E               	movlb	14	; () banked
  2023   002EC6  8129               	bsf	41,0,b	;volatile
  2024   002EC8                     
  2025                           ; BSR set to: 14
  2026                           ;main.c: 182:             lost = 0;
  2027   002EC8  0E00               	movlw	0
  2028   002ECA  0100               	movlb	0	; () banked
  2029   002ECC  6FF2               	movwf	_lost& (0+255),b
  2030                           
  2031                           ;main.c: 183:             break;
  2032   002ECE  EF7C  F017         	goto	l107
  2033   002ED2                     l6039:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;main.c: 186:         if (color == 8 || color == 9) {break;}
  2037   002ED2  0E08               	movlw	8
  2038   002ED4  0101               	movlb	1	; () banked
  2039   002ED6  19B2               	xorwf	main@color& (0+255),w,b
  2040   002ED8  B4D8               	btfsc	status,2,c
  2041   002EDA  EF71  F017         	goto	u5521
  2042   002EDE  EF73  F017         	goto	u5520
  2043   002EE2                     u5521:
  2044   002EE2  EF7C  F017         	goto	l107
  2045   002EE6                     u5520:
  2046   002EE6                     
  2047                           ; BSR set to: 1
  2048   002EE6  0E09               	movlw	9
  2049   002EE8  19B2               	xorwf	main@color& (0+255),w,b
  2050   002EEA  A4D8               	btfss	status,2,c
  2051   002EEC  EF7A  F017         	goto	u5531
  2052   002EF0  EF7C  F017         	goto	u5530
  2053   002EF4                     u5531:
  2054   002EF4  EF04  F016         	goto	l5979
  2055   002EF8                     u5530:
  2056   002EF8                     l107:
  2057   002EF8  EF5F  F000         	goto	start
  2058   002EFC                     __end_of_main:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _wallAdjust *****************
  2062 ;; Defined at:
  2063 ;;		line 501 in file "dc_motor.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  2066 ;;		 -> main@motorL(10), 
  2067 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  2068 ;;		 -> main@motorR(10), 
  2069 ;;  straightSpee    1   38[COMRAM] unsigned char 
  2070 ;;  straightRamp    1   39[COMRAM] unsigned char 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  cur_power       2   47[COMRAM] int 
  2073 ;;  i               2   45[COMRAM] int 
  2074 ;;  wallReverseD    1   44[COMRAM] unsigned char 
  2075 ;;  adjustDurati    1   43[COMRAM] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2085 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;Total ram usage:       15 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 7
  2092 ;; This function calls:
  2093 ;;		_setMotorPWM
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text1
  2100   0033D8                     __ptext1:
  2101                           	callstack 0
  2102   0033D8                     _wallAdjust:
  2103                           	callstack 23
  2104   0033D8                     
  2105                           ;dc_motor.c: 501: void wallAdjust(DC_motor *mL, DC_motor *mR, char straightSpeed, unsign
      +                          ed char straightRamp);dc_motor.c: 502: {;dc_motor.c: 503:     unsigned char adjustDurati
      +                          on = 50;
  2106   0033D8  0E32               	movlw	50
  2107   0033DA  6E2C               	movwf	wallAdjust@adjustDuration^0,c
  2108                           
  2109                           ;dc_motor.c: 504:     unsigned char wallReverseDuration = 20;
  2110   0033DC  0E14               	movlw	20
  2111   0033DE  6E2D               	movwf	wallAdjust@wallReverseDuration^0,c
  2112   0033E0                     
  2113                           ;dc_motor.c: 506:     mL->direction = 1;
  2114   0033E0  EE20 F001          	lfsr	2,1
  2115   0033E4  5023               	movf	wallAdjust@mL^0,w,c
  2116   0033E6  26D9               	addwf	fsr2l,f,c
  2117   0033E8  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2118   0033EA  22DA               	addwfc	fsr2h,f,c
  2119   0033EC  0E01               	movlw	1
  2120   0033EE  6EDF               	movwf	indf2,c
  2121   0033F0                     
  2122                           ;dc_motor.c: 507:     mR->direction = 1;
  2123   0033F0  EE20 F001          	lfsr	2,1
  2124   0033F4  5025               	movf	wallAdjust@mR^0,w,c
  2125   0033F6  26D9               	addwf	fsr2l,f,c
  2126   0033F8  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2127   0033FA  22DA               	addwfc	fsr2h,f,c
  2128   0033FC  0E01               	movlw	1
  2129   0033FE  6EDF               	movwf	indf2,c
  2130                           
  2131                           ;dc_motor.c: 508:     int i;;dc_motor.c: 509:     int cur_power;;dc_motor.c: 510:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  2132   003400  0E00               	movlw	0
  2133   003402  6E31               	movwf	(wallAdjust@cur_power+1)^0,c
  2134   003404  0E01               	movlw	1
  2135   003406  6E30               	movwf	wallAdjust@cur_power^0,c
  2136   003408  EF50  F01A         	goto	l5567
  2137   00340C                     l5553:
  2138                           
  2139                           ;dc_motor.c: 511:         mL->power = cur_power+mL->compensation;
  2140   00340C  EE20 F009          	lfsr	2,9
  2141   003410  5023               	movf	wallAdjust@mL^0,w,c
  2142   003412  26D9               	addwf	fsr2l,f,c
  2143   003414  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2144   003416  22DA               	addwfc	fsr2h,f,c
  2145   003418  50DF               	movf	indf2,w,c
  2146   00341A  2430               	addwf	wallAdjust@cur_power^0,w,c
  2147   00341C  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2148   003420  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2149   003424  6EDF               	movwf	indf2,c
  2150                           
  2151                           ;dc_motor.c: 512:         mR->power = cur_power+mR->compensation;
  2152   003426  EE20 F009          	lfsr	2,9
  2153   00342A  5025               	movf	wallAdjust@mR^0,w,c
  2154   00342C  26D9               	addwf	fsr2l,f,c
  2155   00342E  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2156   003430  22DA               	addwfc	fsr2h,f,c
  2157   003432  50DF               	movf	indf2,w,c
  2158   003434  2430               	addwf	wallAdjust@cur_power^0,w,c
  2159   003436  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2160   00343A  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2161   00343E  6EDF               	movwf	indf2,c
  2162   003440                     
  2163                           ;dc_motor.c: 513:         setMotorPWM(mL);
  2164   003440  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2165   003444  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2166   003448  EC13  F023         	call	_setMotorPWM	;wreg free
  2167   00344C                     
  2168                           ;dc_motor.c: 514:         setMotorPWM(mR);
  2169   00344C  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2170   003450  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2171   003454  EC13  F023         	call	_setMotorPWM	;wreg free
  2172   003458                     
  2173                           ;dc_motor.c: 515:         for (i=0;i<straightRamp;i++) {
  2174   003458  0E00               	movlw	0
  2175   00345A  6E2F               	movwf	(wallAdjust@i+1)^0,c
  2176   00345C  0E00               	movlw	0
  2177   00345E  6E2E               	movwf	wallAdjust@i^0,c
  2178   003460  EF3C  F01A         	goto	l696
  2179   003464                     l5561:
  2180                           
  2181                           ;dc_motor.c: 516:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2182   003464  0E68               	movlw	104
  2183   003466  6E29               	movwf	??_wallAdjust^0,c
  2184   003468  0EE4               	movlw	228
  2185   00346A                     u5587:
  2186   00346A  2EE8               	decfsz	wreg,f,c
  2187   00346C  D7FE               	bra	u5587
  2188   00346E  2E29               	decfsz	??_wallAdjust^0,f,c
  2189   003470  D7FC               	bra	u5587
  2190   003472  D000               	nop2	
  2191   003474                     
  2192                           ;dc_motor.c: 517:         }
  2193   003474  4A2E               	infsnz	wallAdjust@i^0,f,c
  2194   003476  2A2F               	incf	(wallAdjust@i+1)^0,f,c
  2195   003478                     l696:
  2196   003478  5028               	movf	wallAdjust@straightRamp^0,w,c
  2197   00347A  6E29               	movwf	??_wallAdjust^0,c
  2198   00347C  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2199   00347E  5029               	movf	??_wallAdjust^0,w,c
  2200   003480  5C2E               	subwf	wallAdjust@i^0,w,c
  2201   003482  502F               	movf	(wallAdjust@i+1)^0,w,c
  2202   003484  0A80               	xorlw	128
  2203   003486  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2204   003488  502A               	movf	(??_wallAdjust+1)^0,w,c
  2205   00348A  0A80               	xorlw	128
  2206   00348C  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2207   00348E  A0D8               	btfss	status,0,c
  2208   003490  EF4C  F01A         	goto	u4941
  2209   003494  EF4E  F01A         	goto	u4940
  2210   003498                     u4941:
  2211   003498  EF32  F01A         	goto	l5561
  2212   00349C                     u4940:
  2213   00349C                     
  2214                           ;dc_motor.c: 518:     }
  2215   00349C  4A30               	infsnz	wallAdjust@cur_power^0,f,c
  2216   00349E  2A31               	incf	(wallAdjust@cur_power+1)^0,f,c
  2217   0034A0                     l5567:
  2218   0034A0  5027               	movf	wallAdjust@straightSpeed^0,w,c
  2219   0034A2  6E29               	movwf	??_wallAdjust^0,c
  2220   0034A4  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2221   0034A6  5030               	movf	wallAdjust@cur_power^0,w,c
  2222   0034A8  5C29               	subwf	??_wallAdjust^0,w,c
  2223   0034AA  502A               	movf	(??_wallAdjust+1)^0,w,c
  2224   0034AC  0A80               	xorlw	128
  2225   0034AE  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2226   0034B0  5031               	movf	(wallAdjust@cur_power+1)^0,w,c
  2227   0034B2  0A80               	xorlw	128
  2228   0034B4  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2229   0034B6  B0D8               	btfsc	status,0,c
  2230   0034B8  EF60  F01A         	goto	u4951
  2231   0034BC  EF62  F01A         	goto	u4950
  2232   0034C0                     u4951:
  2233   0034C0  EF06  F01A         	goto	l5553
  2234   0034C4                     u4950:
  2235   0034C4                     
  2236                           ;dc_motor.c: 520:     for (i=0;i<adjustDuration;i++) {
  2237   0034C4  0E00               	movlw	0
  2238   0034C6  6E2F               	movwf	(wallAdjust@i+1)^0,c
  2239   0034C8  0E00               	movlw	0
  2240   0034CA  6E2E               	movwf	wallAdjust@i^0,c
  2241   0034CC  EF72  F01A         	goto	l700
  2242   0034D0                     l5571:
  2243                           
  2244                           ;dc_motor.c: 521:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2245   0034D0  0E68               	movlw	104
  2246   0034D2  6E29               	movwf	??_wallAdjust^0,c
  2247   0034D4  0EE4               	movlw	228
  2248   0034D6                     u5597:
  2249   0034D6  2EE8               	decfsz	wreg,f,c
  2250   0034D8  D7FE               	bra	u5597
  2251   0034DA  2E29               	decfsz	??_wallAdjust^0,f,c
  2252   0034DC  D7FC               	bra	u5597
  2253   0034DE  D000               	nop2	
  2254   0034E0                     
  2255                           ;dc_motor.c: 522:         }
  2256   0034E0  4A2E               	infsnz	wallAdjust@i^0,f,c
  2257   0034E2  2A2F               	incf	(wallAdjust@i+1)^0,f,c
  2258   0034E4                     l700:
  2259   0034E4  502C               	movf	wallAdjust@adjustDuration^0,w,c
  2260   0034E6  6E29               	movwf	??_wallAdjust^0,c
  2261   0034E8  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2262   0034EA  5029               	movf	??_wallAdjust^0,w,c
  2263   0034EC  5C2E               	subwf	wallAdjust@i^0,w,c
  2264   0034EE  502F               	movf	(wallAdjust@i+1)^0,w,c
  2265   0034F0  0A80               	xorlw	128
  2266   0034F2  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2267   0034F4  502A               	movf	(??_wallAdjust+1)^0,w,c
  2268   0034F6  0A80               	xorlw	128
  2269   0034F8  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2270   0034FA  A0D8               	btfss	status,0,c
  2271   0034FC  EF82  F01A         	goto	u4961
  2272   003500  EF84  F01A         	goto	u4960
  2273   003504                     u4961:
  2274   003504  EF68  F01A         	goto	l5571
  2275   003508                     u4960:
  2276   003508                     
  2277                           ;dc_motor.c: 524:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  2278   003508  C027  F030         	movff	wallAdjust@straightSpeed,wallAdjust@cur_power
  2279   00350C  6A31               	clrf	(wallAdjust@cur_power+1)^0,c
  2280   00350E                     l5575:
  2281   00350E  BE31               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2282   003510  EF8E  F01A         	goto	u4970
  2283   003514  EF8C  F01A         	goto	u4971
  2284   003518                     u4971:
  2285   003518  EF90  F01A         	goto	l5579
  2286   00351C                     u4970:
  2287   00351C  EFDD  F01A         	goto	l5595
  2288   003520                     l5579:
  2289                           
  2290                           ;dc_motor.c: 525:         mL->power = cur_power+mL->compensation;
  2291   003520  EE20 F009          	lfsr	2,9
  2292   003524  5023               	movf	wallAdjust@mL^0,w,c
  2293   003526  26D9               	addwf	fsr2l,f,c
  2294   003528  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2295   00352A  22DA               	addwfc	fsr2h,f,c
  2296   00352C  50DF               	movf	indf2,w,c
  2297   00352E  2430               	addwf	wallAdjust@cur_power^0,w,c
  2298   003530  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2299   003534  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2300   003538  6EDF               	movwf	indf2,c
  2301                           
  2302                           ;dc_motor.c: 526:         mR->power = cur_power+mR->compensation;
  2303   00353A  EE20 F009          	lfsr	2,9
  2304   00353E  5025               	movf	wallAdjust@mR^0,w,c
  2305   003540  26D9               	addwf	fsr2l,f,c
  2306   003542  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2307   003544  22DA               	addwfc	fsr2h,f,c
  2308   003546  50DF               	movf	indf2,w,c
  2309   003548  2430               	addwf	wallAdjust@cur_power^0,w,c
  2310   00354A  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2311   00354E  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2312   003552  6EDF               	movwf	indf2,c
  2313   003554                     
  2314                           ;dc_motor.c: 527:         setMotorPWM(mL);
  2315   003554  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2316   003558  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2317   00355C  EC13  F023         	call	_setMotorPWM	;wreg free
  2318   003560                     
  2319                           ;dc_motor.c: 528:         setMotorPWM(mR);
  2320   003560  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2321   003564  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2322   003568  EC13  F023         	call	_setMotorPWM	;wreg free
  2323   00356C                     
  2324                           ;dc_motor.c: 529:         for (i=0;i<straightRamp;i++) {
  2325   00356C  0E00               	movlw	0
  2326   00356E  6E2F               	movwf	(wallAdjust@i+1)^0,c
  2327   003570  0E00               	movlw	0
  2328   003572  6E2E               	movwf	wallAdjust@i^0,c
  2329   003574  EFC6  F01A         	goto	l705
  2330   003578                     l5587:
  2331                           
  2332                           ;dc_motor.c: 530:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2333   003578  0E68               	movlw	104
  2334   00357A  6E29               	movwf	??_wallAdjust^0,c
  2335   00357C  0EE4               	movlw	228
  2336   00357E                     u5607:
  2337   00357E  2EE8               	decfsz	wreg,f,c
  2338   003580  D7FE               	bra	u5607
  2339   003582  2E29               	decfsz	??_wallAdjust^0,f,c
  2340   003584  D7FC               	bra	u5607
  2341   003586  D000               	nop2	
  2342   003588                     
  2343                           ;dc_motor.c: 531:         }
  2344   003588  4A2E               	infsnz	wallAdjust@i^0,f,c
  2345   00358A  2A2F               	incf	(wallAdjust@i+1)^0,f,c
  2346   00358C                     l705:
  2347   00358C  5028               	movf	wallAdjust@straightRamp^0,w,c
  2348   00358E  6E29               	movwf	??_wallAdjust^0,c
  2349   003590  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2350   003592  5029               	movf	??_wallAdjust^0,w,c
  2351   003594  5C2E               	subwf	wallAdjust@i^0,w,c
  2352   003596  502F               	movf	(wallAdjust@i+1)^0,w,c
  2353   003598  0A80               	xorlw	128
  2354   00359A  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2355   00359C  502A               	movf	(??_wallAdjust+1)^0,w,c
  2356   00359E  0A80               	xorlw	128
  2357   0035A0  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2358   0035A2  A0D8               	btfss	status,0,c
  2359   0035A4  EFD6  F01A         	goto	u4981
  2360   0035A8  EFD8  F01A         	goto	u4980
  2361   0035AC                     u4981:
  2362   0035AC  EFBC  F01A         	goto	l5587
  2363   0035B0                     u4980:
  2364   0035B0                     
  2365                           ;dc_motor.c: 532:     }
  2366   0035B0  0630               	decf	wallAdjust@cur_power^0,f,c
  2367   0035B2  A0D8               	btfss	status,0,c
  2368   0035B4  0631               	decf	(wallAdjust@cur_power+1)^0,f,c
  2369   0035B6  EF87  F01A         	goto	l5575
  2370   0035BA                     l5595:
  2371                           
  2372                           ;dc_motor.c: 534:     mL->direction = 0;
  2373   0035BA  EE20 F001          	lfsr	2,1
  2374   0035BE  5023               	movf	wallAdjust@mL^0,w,c
  2375   0035C0  26D9               	addwf	fsr2l,f,c
  2376   0035C2  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2377   0035C4  22DA               	addwfc	fsr2h,f,c
  2378   0035C6  6ADF               	clrf	indf2,c
  2379                           
  2380                           ;dc_motor.c: 535:     mR->direction = 0;
  2381   0035C8  EE20 F001          	lfsr	2,1
  2382   0035CC  5025               	movf	wallAdjust@mR^0,w,c
  2383   0035CE  26D9               	addwf	fsr2l,f,c
  2384   0035D0  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2385   0035D2  22DA               	addwfc	fsr2h,f,c
  2386   0035D4  6ADF               	clrf	indf2,c
  2387   0035D6                     
  2388                           ;dc_motor.c: 536:     for (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  2389   0035D6  0E00               	movlw	0
  2390   0035D8  6E31               	movwf	(wallAdjust@cur_power+1)^0,c
  2391   0035DA  0E01               	movlw	1
  2392   0035DC  6E30               	movwf	wallAdjust@cur_power^0,c
  2393   0035DE  EF3B  F01B         	goto	l5613
  2394   0035E2                     l5599:
  2395                           
  2396                           ;dc_motor.c: 537:         mL->power = cur_power+mL->compensation;
  2397   0035E2  EE20 F009          	lfsr	2,9
  2398   0035E6  5023               	movf	wallAdjust@mL^0,w,c
  2399   0035E8  26D9               	addwf	fsr2l,f,c
  2400   0035EA  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2401   0035EC  22DA               	addwfc	fsr2h,f,c
  2402   0035EE  50DF               	movf	indf2,w,c
  2403   0035F0  2430               	addwf	wallAdjust@cur_power^0,w,c
  2404   0035F2  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2405   0035F6  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2406   0035FA  6EDF               	movwf	indf2,c
  2407                           
  2408                           ;dc_motor.c: 538:         mR->power = cur_power+mR->compensation;
  2409   0035FC  EE20 F009          	lfsr	2,9
  2410   003600  5025               	movf	wallAdjust@mR^0,w,c
  2411   003602  26D9               	addwf	fsr2l,f,c
  2412   003604  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2413   003606  22DA               	addwfc	fsr2h,f,c
  2414   003608  50DF               	movf	indf2,w,c
  2415   00360A  2430               	addwf	wallAdjust@cur_power^0,w,c
  2416   00360C  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2417   003610  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2418   003614  6EDF               	movwf	indf2,c
  2419   003616                     
  2420                           ;dc_motor.c: 539:         setMotorPWM(mL);
  2421   003616  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2422   00361A  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2423   00361E  EC13  F023         	call	_setMotorPWM	;wreg free
  2424   003622                     
  2425                           ;dc_motor.c: 540:         setMotorPWM(mR);
  2426   003622  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2427   003626  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2428   00362A  EC13  F023         	call	_setMotorPWM	;wreg free
  2429   00362E                     
  2430                           ;dc_motor.c: 541:         for (i=0;i<straightRamp;i++) {
  2431   00362E  0E00               	movlw	0
  2432   003630  6E2F               	movwf	(wallAdjust@i+1)^0,c
  2433   003632  0E00               	movlw	0
  2434   003634  6E2E               	movwf	wallAdjust@i^0,c
  2435   003636  EF27  F01B         	goto	l710
  2436   00363A                     l5607:
  2437                           
  2438                           ;dc_motor.c: 542:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2439   00363A  0E68               	movlw	104
  2440   00363C  6E29               	movwf	??_wallAdjust^0,c
  2441   00363E  0EE4               	movlw	228
  2442   003640                     u5617:
  2443   003640  2EE8               	decfsz	wreg,f,c
  2444   003642  D7FE               	bra	u5617
  2445   003644  2E29               	decfsz	??_wallAdjust^0,f,c
  2446   003646  D7FC               	bra	u5617
  2447   003648  D000               	nop2	
  2448   00364A                     
  2449                           ;dc_motor.c: 543:         }
  2450   00364A  4A2E               	infsnz	wallAdjust@i^0,f,c
  2451   00364C  2A2F               	incf	(wallAdjust@i+1)^0,f,c
  2452   00364E                     l710:
  2453   00364E  5028               	movf	wallAdjust@straightRamp^0,w,c
  2454   003650  6E29               	movwf	??_wallAdjust^0,c
  2455   003652  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2456   003654  5029               	movf	??_wallAdjust^0,w,c
  2457   003656  5C2E               	subwf	wallAdjust@i^0,w,c
  2458   003658  502F               	movf	(wallAdjust@i+1)^0,w,c
  2459   00365A  0A80               	xorlw	128
  2460   00365C  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2461   00365E  502A               	movf	(??_wallAdjust+1)^0,w,c
  2462   003660  0A80               	xorlw	128
  2463   003662  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2464   003664  A0D8               	btfss	status,0,c
  2465   003666  EF37  F01B         	goto	u4991
  2466   00366A  EF39  F01B         	goto	u4990
  2467   00366E                     u4991:
  2468   00366E  EF1D  F01B         	goto	l5607
  2469   003672                     u4990:
  2470   003672                     
  2471                           ;dc_motor.c: 544:     }
  2472   003672  4A30               	infsnz	wallAdjust@cur_power^0,f,c
  2473   003674  2A31               	incf	(wallAdjust@cur_power+1)^0,f,c
  2474   003676                     l5613:
  2475   003676  5027               	movf	wallAdjust@straightSpeed^0,w,c
  2476   003678  6E29               	movwf	??_wallAdjust^0,c
  2477   00367A  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2478   00367C  5030               	movf	wallAdjust@cur_power^0,w,c
  2479   00367E  5C29               	subwf	??_wallAdjust^0,w,c
  2480   003680  502A               	movf	(??_wallAdjust+1)^0,w,c
  2481   003682  0A80               	xorlw	128
  2482   003684  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2483   003686  5031               	movf	(wallAdjust@cur_power+1)^0,w,c
  2484   003688  0A80               	xorlw	128
  2485   00368A  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2486   00368C  B0D8               	btfsc	status,0,c
  2487   00368E  EF4B  F01B         	goto	u5001
  2488   003692  EF4D  F01B         	goto	u5000
  2489   003696                     u5001:
  2490   003696  EFF1  F01A         	goto	l5599
  2491   00369A                     u5000:
  2492   00369A                     
  2493                           ;dc_motor.c: 546:     for (i=0;i<wallReverseDuration;i++) {
  2494   00369A  0E00               	movlw	0
  2495   00369C  6E2F               	movwf	(wallAdjust@i+1)^0,c
  2496   00369E  0E00               	movlw	0
  2497   0036A0  6E2E               	movwf	wallAdjust@i^0,c
  2498   0036A2  EF5D  F01B         	goto	l714
  2499   0036A6                     l5617:
  2500                           
  2501                           ;dc_motor.c: 547:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2502   0036A6  0E68               	movlw	104
  2503   0036A8  6E29               	movwf	??_wallAdjust^0,c
  2504   0036AA  0EE4               	movlw	228
  2505   0036AC                     u5627:
  2506   0036AC  2EE8               	decfsz	wreg,f,c
  2507   0036AE  D7FE               	bra	u5627
  2508   0036B0  2E29               	decfsz	??_wallAdjust^0,f,c
  2509   0036B2  D7FC               	bra	u5627
  2510   0036B4  D000               	nop2	
  2511   0036B6                     
  2512                           ;dc_motor.c: 548:         }
  2513   0036B6  4A2E               	infsnz	wallAdjust@i^0,f,c
  2514   0036B8  2A2F               	incf	(wallAdjust@i+1)^0,f,c
  2515   0036BA                     l714:
  2516   0036BA  502D               	movf	wallAdjust@wallReverseDuration^0,w,c
  2517   0036BC  6E29               	movwf	??_wallAdjust^0,c
  2518   0036BE  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2519   0036C0  5029               	movf	??_wallAdjust^0,w,c
  2520   0036C2  5C2E               	subwf	wallAdjust@i^0,w,c
  2521   0036C4  502F               	movf	(wallAdjust@i+1)^0,w,c
  2522   0036C6  0A80               	xorlw	128
  2523   0036C8  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2524   0036CA  502A               	movf	(??_wallAdjust+1)^0,w,c
  2525   0036CC  0A80               	xorlw	128
  2526   0036CE  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2527   0036D0  A0D8               	btfss	status,0,c
  2528   0036D2  EF6D  F01B         	goto	u5011
  2529   0036D6  EF6F  F01B         	goto	u5010
  2530   0036DA                     u5011:
  2531   0036DA  EF53  F01B         	goto	l5617
  2532   0036DE                     u5010:
  2533   0036DE                     
  2534                           ;dc_motor.c: 550:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  2535   0036DE  C027  F030         	movff	wallAdjust@straightSpeed,wallAdjust@cur_power
  2536   0036E2  6A31               	clrf	(wallAdjust@cur_power+1)^0,c
  2537   0036E4                     l5621:
  2538   0036E4  BE31               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2539   0036E6  EF79  F01B         	goto	u5020
  2540   0036EA  EF77  F01B         	goto	u5021
  2541   0036EE                     u5021:
  2542   0036EE  EF7B  F01B         	goto	l5625
  2543   0036F2                     u5020:
  2544   0036F2  EFC8  F01B         	goto	l5641
  2545   0036F6                     l5625:
  2546                           
  2547                           ;dc_motor.c: 551:         mL->power = cur_power+mL->compensation;
  2548   0036F6  EE20 F009          	lfsr	2,9
  2549   0036FA  5023               	movf	wallAdjust@mL^0,w,c
  2550   0036FC  26D9               	addwf	fsr2l,f,c
  2551   0036FE  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2552   003700  22DA               	addwfc	fsr2h,f,c
  2553   003702  50DF               	movf	indf2,w,c
  2554   003704  2430               	addwf	wallAdjust@cur_power^0,w,c
  2555   003706  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2556   00370A  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2557   00370E  6EDF               	movwf	indf2,c
  2558                           
  2559                           ;dc_motor.c: 552:         mR->power = cur_power+mR->compensation;
  2560   003710  EE20 F009          	lfsr	2,9
  2561   003714  5025               	movf	wallAdjust@mR^0,w,c
  2562   003716  26D9               	addwf	fsr2l,f,c
  2563   003718  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2564   00371A  22DA               	addwfc	fsr2h,f,c
  2565   00371C  50DF               	movf	indf2,w,c
  2566   00371E  2430               	addwf	wallAdjust@cur_power^0,w,c
  2567   003720  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2568   003724  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2569   003728  6EDF               	movwf	indf2,c
  2570   00372A                     
  2571                           ;dc_motor.c: 553:         setMotorPWM(mL);
  2572   00372A  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2573   00372E  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2574   003732  EC13  F023         	call	_setMotorPWM	;wreg free
  2575   003736                     
  2576                           ;dc_motor.c: 554:         setMotorPWM(mR);
  2577   003736  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2578   00373A  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2579   00373E  EC13  F023         	call	_setMotorPWM	;wreg free
  2580   003742                     
  2581                           ;dc_motor.c: 555:         for (i=0;i<straightRamp;i++) {
  2582   003742  0E00               	movlw	0
  2583   003744  6E2F               	movwf	(wallAdjust@i+1)^0,c
  2584   003746  0E00               	movlw	0
  2585   003748  6E2E               	movwf	wallAdjust@i^0,c
  2586   00374A  EFB1  F01B         	goto	l719
  2587   00374E                     l5633:
  2588                           
  2589                           ;dc_motor.c: 556:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2590   00374E  0E68               	movlw	104
  2591   003750  6E29               	movwf	??_wallAdjust^0,c
  2592   003752  0EE4               	movlw	228
  2593   003754                     u5637:
  2594   003754  2EE8               	decfsz	wreg,f,c
  2595   003756  D7FE               	bra	u5637
  2596   003758  2E29               	decfsz	??_wallAdjust^0,f,c
  2597   00375A  D7FC               	bra	u5637
  2598   00375C  D000               	nop2	
  2599   00375E                     
  2600                           ;dc_motor.c: 557:         }
  2601   00375E  4A2E               	infsnz	wallAdjust@i^0,f,c
  2602   003760  2A2F               	incf	(wallAdjust@i+1)^0,f,c
  2603   003762                     l719:
  2604   003762  5028               	movf	wallAdjust@straightRamp^0,w,c
  2605   003764  6E29               	movwf	??_wallAdjust^0,c
  2606   003766  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2607   003768  5029               	movf	??_wallAdjust^0,w,c
  2608   00376A  5C2E               	subwf	wallAdjust@i^0,w,c
  2609   00376C  502F               	movf	(wallAdjust@i+1)^0,w,c
  2610   00376E  0A80               	xorlw	128
  2611   003770  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2612   003772  502A               	movf	(??_wallAdjust+1)^0,w,c
  2613   003774  0A80               	xorlw	128
  2614   003776  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2615   003778  A0D8               	btfss	status,0,c
  2616   00377A  EFC1  F01B         	goto	u5031
  2617   00377E  EFC3  F01B         	goto	u5030
  2618   003782                     u5031:
  2619   003782  EFA7  F01B         	goto	l5633
  2620   003786                     u5030:
  2621   003786                     
  2622                           ;dc_motor.c: 558:     }
  2623   003786  0630               	decf	wallAdjust@cur_power^0,f,c
  2624   003788  A0D8               	btfss	status,0,c
  2625   00378A  0631               	decf	(wallAdjust@cur_power+1)^0,f,c
  2626   00378C  EF72  F01B         	goto	l5621
  2627   003790                     l5641:
  2628                           
  2629                           ;dc_motor.c: 559:     mL->power = 0;
  2630   003790  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2631   003794  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2632   003798  6ADF               	clrf	indf2,c
  2633                           
  2634                           ;dc_motor.c: 560:     mR->power = 0;
  2635   00379A  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2636   00379E  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2637   0037A2  6ADF               	clrf	indf2,c
  2638   0037A4  0012               	return		;funcret
  2639   0037A6                     __end_of_wallAdjust:
  2640                           	callstack 0
  2641                           
  2642 ;; *************** function _move *****************
  2643 ;; Defined at:
  2644 ;;		line 91 in file "dc_motor.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  2647 ;;		 -> main@motorL(10), 
  2648 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  2649 ;;		 -> main@motorR(10), 
  2650 ;;  color           1    4[BANK0 ] unsigned char 
  2651 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  2652 ;;		 -> main@moveSequence(40), 
  2653 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  2654 ;;		 -> main@straightTime(82), 
  2655 ;;  curMove         1    9[BANK0 ] unsigned char 
  2656 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  2657 ;;  reverseDurat    1   11[BANK0 ] unsigned char 
  2658 ;;  straightRamp    1   12[BANK0 ] unsigned char 
  2659 ;;  turnSpeed       1   13[BANK0 ] unsigned char 
  2660 ;;  turnDuration    1   14[BANK0 ] unsigned char 
  2661 ;;  turnRamp        1   15[BANK0 ] unsigned char 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2673 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2675 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2676 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;Total ram usage:       18 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 9
  2680 ;; This function calls:
  2681 ;;		_fullSpeedAhead
  2682 ;;		_returnHome
  2683 ;;		_reverseOneSquare
  2684 ;;		_reverseShort
  2685 ;;		_turnLeft
  2686 ;;		_turnRight
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text2
  2693   000E02                     __ptext2:
  2694                           	callstack 0
  2695   000E02                     _move:
  2696                           	callstack 21
  2697   000E02                     
  2698                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reve
      +                          rseDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, uns
      +                          igned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  2699   000E02  0100               	movlb	0	; () banked
  2700   000E04  0564               	decf	move@color& (0+255),w,b
  2701   000E06  A4D8               	btfss	status,2,c
  2702   000E08  EF08  F007         	goto	u5041
  2703   000E0C  EF0A  F007         	goto	u5040
  2704   000E10                     u5041:
  2705   000E10  EF6C  F007         	goto	l5655
  2706   000E14                     u5040:
  2707   000E14                     
  2708                           ; BSR set to: 0
  2709                           ;dc_motor.c: 94:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2710   000E14  C060  F023         	movff	move@mL,reverseShort@mL
  2711   000E18  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2712   000E1C  C062  F025         	movff	move@mR,reverseShort@mR
  2713   000E20  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2714   000E24  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2715   000E28  C06C  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2716   000E2C  EC54  F01E         	call	_reverseShort	;wreg free
  2717   000E30                     
  2718                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2719   000E30  0E05               	movlw	5
  2720   000E32  6E46               	movwf	(??_move+1)^0,c
  2721   000E34  0E0F               	movlw	15
  2722   000E36  6E45               	movwf	??_move^0,c
  2723   000E38  0EF1               	movlw	241
  2724   000E3A                     u5647:
  2725   000E3A  2EE8               	decfsz	wreg,f,c
  2726   000E3C  D7FE               	bra	u5647
  2727   000E3E  2E45               	decfsz	??_move^0,f,c
  2728   000E40  D7FC               	bra	u5647
  2729   000E42  2E46               	decfsz	(??_move+1)^0,f,c
  2730   000E44  D7FA               	bra	u5647
  2731   000E46  0000               	nop	
  2732   000E48                     
  2733                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2734   000E48  C060  F023         	movff	move@mL,turnRight@mL
  2735   000E4C  C061  F024         	movff	move@mL+1,turnRight@mL+1
  2736   000E50  C062  F025         	movff	move@mR,turnRight@mR
  2737   000E54  C063  F026         	movff	move@mR+1,turnRight@mR+1
  2738   000E58  C06D  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  2739   000E5C  C06E  F028         	movff	move@turnDuration,turnRight@turnDuration
  2740   000E60  C06F  F029         	movff	move@turnRamp,turnRight@turnRamp
  2741   000E64  EC39  F021         	call	_turnRight	;wreg free
  2742                           
  2743                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2744   000E68  0E05               	movlw	5
  2745   000E6A  6E46               	movwf	(??_move+1)^0,c
  2746   000E6C  0E0F               	movlw	15
  2747   000E6E  6E45               	movwf	??_move^0,c
  2748   000E70  0EF1               	movlw	241
  2749   000E72                     u5657:
  2750   000E72  2EE8               	decfsz	wreg,f,c
  2751   000E74  D7FE               	bra	u5657
  2752   000E76  2E45               	decfsz	??_move^0,f,c
  2753   000E78  D7FC               	bra	u5657
  2754   000E7A  2E46               	decfsz	(??_move+1)^0,f,c
  2755   000E7C  D7FA               	bra	u5657
  2756   000E7E  0000               	nop	
  2757   000E80                     
  2758                           ;dc_motor.c: 98:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2759   000E80  C060  F023         	movff	move@mL,turnRight@mL
  2760   000E84  C061  F024         	movff	move@mL+1,turnRight@mL+1
  2761   000E88  C062  F025         	movff	move@mR,turnRight@mR
  2762   000E8C  C063  F026         	movff	move@mR+1,turnRight@mR+1
  2763   000E90  C06D  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  2764   000E94  C06E  F028         	movff	move@turnDuration,turnRight@turnDuration
  2765   000E98  C06F  F029         	movff	move@turnRamp,turnRight@turnRamp
  2766   000E9C  EC39  F021         	call	_turnRight	;wreg free
  2767   000EA0                     
  2768                           ;dc_motor.c: 99:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2769   000EA0  0E05               	movlw	5
  2770   000EA2  6E46               	movwf	(??_move+1)^0,c
  2771   000EA4  0E0F               	movlw	15
  2772   000EA6  6E45               	movwf	??_move^0,c
  2773   000EA8  0EF1               	movlw	241
  2774   000EAA                     u5667:
  2775   000EAA  2EE8               	decfsz	wreg,f,c
  2776   000EAC  D7FE               	bra	u5667
  2777   000EAE  2E45               	decfsz	??_move^0,f,c
  2778   000EB0  D7FC               	bra	u5667
  2779   000EB2  2E46               	decfsz	(??_move+1)^0,f,c
  2780   000EB4  D7FA               	bra	u5667
  2781   000EB6  0000               	nop	
  2782                           
  2783                           ;dc_motor.c: 100:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2784   000EB8  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  2785   000EBC  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  2786   000EC0  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  2787   000EC4  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  2788   000EC8  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2789   000ECC  C06C  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2790   000ED0  ECD3  F024         	call	_fullSpeedAhead	;wreg free
  2791                           
  2792                           ;dc_motor.c: 101:     }
  2793   000ED4  EF15  F00B         	goto	l573
  2794   000ED8                     l5655:
  2795                           
  2796                           ; BSR set to: 0
  2797   000ED8  0E02               	movlw	2
  2798   000EDA  1964               	xorwf	move@color& (0+255),w,b
  2799   000EDC  A4D8               	btfss	status,2,c
  2800   000EDE  EF73  F007         	goto	u5051
  2801   000EE2  EF75  F007         	goto	u5050
  2802   000EE6                     u5051:
  2803   000EE6  EFD7  F007         	goto	l5667
  2804   000EEA                     u5050:
  2805   000EEA                     
  2806                           ; BSR set to: 0
  2807                           ;dc_motor.c: 104:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2808   000EEA  C060  F023         	movff	move@mL,reverseShort@mL
  2809   000EEE  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2810   000EF2  C062  F025         	movff	move@mR,reverseShort@mR
  2811   000EF6  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2812   000EFA  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2813   000EFE  C06C  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2814   000F02  EC54  F01E         	call	_reverseShort	;wreg free
  2815   000F06                     
  2816                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2817   000F06  0E05               	movlw	5
  2818   000F08  6E46               	movwf	(??_move+1)^0,c
  2819   000F0A  0E0F               	movlw	15
  2820   000F0C  6E45               	movwf	??_move^0,c
  2821   000F0E  0EF1               	movlw	241
  2822   000F10                     u5677:
  2823   000F10  2EE8               	decfsz	wreg,f,c
  2824   000F12  D7FE               	bra	u5677
  2825   000F14  2E45               	decfsz	??_move^0,f,c
  2826   000F16  D7FC               	bra	u5677
  2827   000F18  2E46               	decfsz	(??_move+1)^0,f,c
  2828   000F1A  D7FA               	bra	u5677
  2829   000F1C  0000               	nop	
  2830   000F1E                     
  2831                           ;dc_motor.c: 106:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2832   000F1E  C060  F023         	movff	move@mL,turnLeft@mL
  2833   000F22  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2834   000F26  C062  F025         	movff	move@mR,turnLeft@mR
  2835   000F2A  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2836   000F2E  C06D  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2837   000F32  C06E  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2838   000F36  C06F  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2839   000F3A  EC26  F022         	call	_turnLeft	;wreg free
  2840                           
  2841                           ;dc_motor.c: 107:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2842   000F3E  0E05               	movlw	5
  2843   000F40  6E46               	movwf	(??_move+1)^0,c
  2844   000F42  0E0F               	movlw	15
  2845   000F44  6E45               	movwf	??_move^0,c
  2846   000F46  0EF1               	movlw	241
  2847   000F48                     u5687:
  2848   000F48  2EE8               	decfsz	wreg,f,c
  2849   000F4A  D7FE               	bra	u5687
  2850   000F4C  2E45               	decfsz	??_move^0,f,c
  2851   000F4E  D7FC               	bra	u5687
  2852   000F50  2E46               	decfsz	(??_move+1)^0,f,c
  2853   000F52  D7FA               	bra	u5687
  2854   000F54  0000               	nop	
  2855   000F56                     
  2856                           ;dc_motor.c: 108:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2857   000F56  C060  F023         	movff	move@mL,turnLeft@mL
  2858   000F5A  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2859   000F5E  C062  F025         	movff	move@mR,turnLeft@mR
  2860   000F62  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2861   000F66  C06D  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2862   000F6A  C06E  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2863   000F6E  C06F  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2864   000F72  EC26  F022         	call	_turnLeft	;wreg free
  2865   000F76                     
  2866                           ;dc_motor.c: 109:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2867   000F76  0E05               	movlw	5
  2868   000F78  6E46               	movwf	(??_move+1)^0,c
  2869   000F7A  0E0F               	movlw	15
  2870   000F7C  6E45               	movwf	??_move^0,c
  2871   000F7E  0EF1               	movlw	241
  2872   000F80                     u5697:
  2873   000F80  2EE8               	decfsz	wreg,f,c
  2874   000F82  D7FE               	bra	u5697
  2875   000F84  2E45               	decfsz	??_move^0,f,c
  2876   000F86  D7FC               	bra	u5697
  2877   000F88  2E46               	decfsz	(??_move+1)^0,f,c
  2878   000F8A  D7FA               	bra	u5697
  2879   000F8C  0000               	nop	
  2880                           
  2881                           ;dc_motor.c: 110:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2882   000F8E  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  2883   000F92  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  2884   000F96  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  2885   000F9A  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  2886   000F9E  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2887   000FA2  C06C  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2888   000FA6  ECD3  F024         	call	_fullSpeedAhead	;wreg free
  2889                           
  2890                           ;dc_motor.c: 111:     }
  2891   000FAA  EF15  F00B         	goto	l573
  2892   000FAE                     l5667:
  2893                           
  2894                           ; BSR set to: 0
  2895   000FAE  0E03               	movlw	3
  2896   000FB0  1964               	xorwf	move@color& (0+255),w,b
  2897   000FB2  A4D8               	btfss	status,2,c
  2898   000FB4  EFDE  F007         	goto	u5061
  2899   000FB8  EFE0  F007         	goto	u5060
  2900   000FBC                     u5061:
  2901   000FBC  EF7A  F008         	goto	l5685
  2902   000FC0                     u5060:
  2903   000FC0                     
  2904                           ; BSR set to: 0
  2905                           ;dc_motor.c: 114:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2906   000FC0  C060  F023         	movff	move@mL,reverseShort@mL
  2907   000FC4  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2908   000FC8  C062  F025         	movff	move@mR,reverseShort@mR
  2909   000FCC  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2910   000FD0  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2911   000FD4  C06C  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2912   000FD8  EC54  F01E         	call	_reverseShort	;wreg free
  2913   000FDC                     
  2914                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2915   000FDC  0E05               	movlw	5
  2916   000FDE  6E46               	movwf	(??_move+1)^0,c
  2917   000FE0  0E0F               	movlw	15
  2918   000FE2  6E45               	movwf	??_move^0,c
  2919   000FE4  0EF1               	movlw	241
  2920   000FE6                     u5707:
  2921   000FE6  2EE8               	decfsz	wreg,f,c
  2922   000FE8  D7FE               	bra	u5707
  2923   000FEA  2E45               	decfsz	??_move^0,f,c
  2924   000FEC  D7FC               	bra	u5707
  2925   000FEE  2E46               	decfsz	(??_move+1)^0,f,c
  2926   000FF0  D7FA               	bra	u5707
  2927   000FF2  0000               	nop	
  2928   000FF4                     
  2929                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2930   000FF4  C060  F023         	movff	move@mL,turnLeft@mL
  2931   000FF8  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2932   000FFC  C062  F025         	movff	move@mR,turnLeft@mR
  2933   001000  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2934   001004  C06D  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2935   001008  C06E  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2936   00100C  C06F  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2937   001010  EC26  F022         	call	_turnLeft	;wreg free
  2938                           
  2939                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2940   001014  0E05               	movlw	5
  2941   001016  6E46               	movwf	(??_move+1)^0,c
  2942   001018  0E0F               	movlw	15
  2943   00101A  6E45               	movwf	??_move^0,c
  2944   00101C  0EF1               	movlw	241
  2945   00101E                     u5717:
  2946   00101E  2EE8               	decfsz	wreg,f,c
  2947   001020  D7FE               	bra	u5717
  2948   001022  2E45               	decfsz	??_move^0,f,c
  2949   001024  D7FC               	bra	u5717
  2950   001026  2E46               	decfsz	(??_move+1)^0,f,c
  2951   001028  D7FA               	bra	u5717
  2952   00102A  0000               	nop	
  2953   00102C                     
  2954                           ;dc_motor.c: 118:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2955   00102C  C060  F023         	movff	move@mL,turnLeft@mL
  2956   001030  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2957   001034  C062  F025         	movff	move@mR,turnLeft@mR
  2958   001038  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2959   00103C  C06D  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2960   001040  C06E  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2961   001044  C06F  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2962   001048  EC26  F022         	call	_turnLeft	;wreg free
  2963   00104C                     
  2964                           ;dc_motor.c: 119:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2965   00104C  0E05               	movlw	5
  2966   00104E  6E46               	movwf	(??_move+1)^0,c
  2967   001050  0E0F               	movlw	15
  2968   001052  6E45               	movwf	??_move^0,c
  2969   001054  0EF1               	movlw	241
  2970   001056                     u5727:
  2971   001056  2EE8               	decfsz	wreg,f,c
  2972   001058  D7FE               	bra	u5727
  2973   00105A  2E45               	decfsz	??_move^0,f,c
  2974   00105C  D7FC               	bra	u5727
  2975   00105E  2E46               	decfsz	(??_move+1)^0,f,c
  2976   001060  D7FA               	bra	u5727
  2977   001062  0000               	nop	
  2978                           
  2979                           ;dc_motor.c: 120:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2980   001064  C060  F023         	movff	move@mL,turnLeft@mL
  2981   001068  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2982   00106C  C062  F025         	movff	move@mR,turnLeft@mR
  2983   001070  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2984   001074  C06D  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2985   001078  C06E  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2986   00107C  C06F  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2987   001080  EC26  F022         	call	_turnLeft	;wreg free
  2988   001084                     
  2989                           ;dc_motor.c: 121:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2990   001084  0E05               	movlw	5
  2991   001086  6E46               	movwf	(??_move+1)^0,c
  2992   001088  0E0F               	movlw	15
  2993   00108A  6E45               	movwf	??_move^0,c
  2994   00108C  0EF1               	movlw	241
  2995   00108E                     u5737:
  2996   00108E  2EE8               	decfsz	wreg,f,c
  2997   001090  D7FE               	bra	u5737
  2998   001092  2E45               	decfsz	??_move^0,f,c
  2999   001094  D7FC               	bra	u5737
  3000   001096  2E46               	decfsz	(??_move+1)^0,f,c
  3001   001098  D7FA               	bra	u5737
  3002   00109A  0000               	nop	
  3003   00109C                     
  3004                           ;dc_motor.c: 122:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3005   00109C  C060  F023         	movff	move@mL,turnLeft@mL
  3006   0010A0  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3007   0010A4  C062  F025         	movff	move@mR,turnLeft@mR
  3008   0010A8  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3009   0010AC  C06D  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3010   0010B0  C06E  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3011   0010B4  C06F  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3012   0010B8  EC26  F022         	call	_turnLeft	;wreg free
  3013                           
  3014                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3015   0010BC  0E05               	movlw	5
  3016   0010BE  6E46               	movwf	(??_move+1)^0,c
  3017   0010C0  0E0F               	movlw	15
  3018   0010C2  6E45               	movwf	??_move^0,c
  3019   0010C4  0EF1               	movlw	241
  3020   0010C6                     u5747:
  3021   0010C6  2EE8               	decfsz	wreg,f,c
  3022   0010C8  D7FE               	bra	u5747
  3023   0010CA  2E45               	decfsz	??_move^0,f,c
  3024   0010CC  D7FC               	bra	u5747
  3025   0010CE  2E46               	decfsz	(??_move+1)^0,f,c
  3026   0010D0  D7FA               	bra	u5747
  3027   0010D2  0000               	nop	
  3028   0010D4                     
  3029                           ;dc_motor.c: 124:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3030   0010D4  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3031   0010D8  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3032   0010DC  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3033   0010E0  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3034   0010E4  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3035   0010E8  C06C  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3036   0010EC  ECD3  F024         	call	_fullSpeedAhead	;wreg free
  3037                           
  3038                           ;dc_motor.c: 125:     }
  3039   0010F0  EF15  F00B         	goto	l573
  3040   0010F4                     l5685:
  3041                           
  3042                           ; BSR set to: 0
  3043   0010F4  0E04               	movlw	4
  3044   0010F6  1964               	xorwf	move@color& (0+255),w,b
  3045   0010F8  A4D8               	btfss	status,2,c
  3046   0010FA  EF81  F008         	goto	u5071
  3047   0010FE  EF83  F008         	goto	u5070
  3048   001102                     u5071:
  3049   001102  EF01  F009         	goto	l5701
  3050   001106                     u5070:
  3051   001106                     
  3052                           ; BSR set to: 0
  3053                           ;dc_motor.c: 128:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3054   001106  C060  F023         	movff	move@mL,reverseShort@mL
  3055   00110A  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3056   00110E  C062  F025         	movff	move@mR,reverseShort@mR
  3057   001112  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3058   001116  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3059   00111A  C06C  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3060   00111E  EC54  F01E         	call	_reverseShort	;wreg free
  3061   001122                     
  3062                           ;dc_motor.c: 129:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3063   001122  0E05               	movlw	5
  3064   001124  6E46               	movwf	(??_move+1)^0,c
  3065   001126  0E0F               	movlw	15
  3066   001128  6E45               	movwf	??_move^0,c
  3067   00112A  0EF1               	movlw	241
  3068   00112C                     u5757:
  3069   00112C  2EE8               	decfsz	wreg,f,c
  3070   00112E  D7FE               	bra	u5757
  3071   001130  2E45               	decfsz	??_move^0,f,c
  3072   001132  D7FC               	bra	u5757
  3073   001134  2E46               	decfsz	(??_move+1)^0,f,c
  3074   001136  D7FA               	bra	u5757
  3075   001138  0000               	nop	
  3076   00113A                     
  3077                           ;dc_motor.c: 130:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  3078   00113A  C060  F023         	movff	move@mL,reverseOneSquare@mL
  3079   00113E  C061  F024         	movff	move@mL+1,reverseOneSquare@mL+1
  3080   001142  C062  F025         	movff	move@mR,reverseOneSquare@mR
  3081   001146  C063  F026         	movff	move@mR+1,reverseOneSquare@mR+1
  3082   00114A  C06A  F027         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  3083   00114E  C06B  F028         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  3084   001152  C06C  F029         	movff	move@straightRamp,reverseOneSquare@straightRamp
  3085   001156  EC43  F020         	call	_reverseOneSquare	;wreg free
  3086                           
  3087                           ;dc_motor.c: 131:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3088   00115A  0E05               	movlw	5
  3089   00115C  6E46               	movwf	(??_move+1)^0,c
  3090   00115E  0E0F               	movlw	15
  3091   001160  6E45               	movwf	??_move^0,c
  3092   001162  0EF1               	movlw	241
  3093   001164                     u5767:
  3094   001164  2EE8               	decfsz	wreg,f,c
  3095   001166  D7FE               	bra	u5767
  3096   001168  2E45               	decfsz	??_move^0,f,c
  3097   00116A  D7FC               	bra	u5767
  3098   00116C  2E46               	decfsz	(??_move+1)^0,f,c
  3099   00116E  D7FA               	bra	u5767
  3100   001170  0000               	nop	
  3101   001172                     
  3102                           ;dc_motor.c: 132:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3103   001172  C060  F023         	movff	move@mL,turnRight@mL
  3104   001176  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3105   00117A  C062  F025         	movff	move@mR,turnRight@mR
  3106   00117E  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3107   001182  C06D  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3108   001186  C06E  F028         	movff	move@turnDuration,turnRight@turnDuration
  3109   00118A  C06F  F029         	movff	move@turnRamp,turnRight@turnRamp
  3110   00118E  EC39  F021         	call	_turnRight	;wreg free
  3111   001192                     
  3112                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3113   001192  0E05               	movlw	5
  3114   001194  6E46               	movwf	(??_move+1)^0,c
  3115   001196  0E0F               	movlw	15
  3116   001198  6E45               	movwf	??_move^0,c
  3117   00119A  0EF1               	movlw	241
  3118   00119C                     u5777:
  3119   00119C  2EE8               	decfsz	wreg,f,c
  3120   00119E  D7FE               	bra	u5777
  3121   0011A0  2E45               	decfsz	??_move^0,f,c
  3122   0011A2  D7FC               	bra	u5777
  3123   0011A4  2E46               	decfsz	(??_move+1)^0,f,c
  3124   0011A6  D7FA               	bra	u5777
  3125   0011A8  0000               	nop	
  3126                           
  3127                           ;dc_motor.c: 134:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3128   0011AA  C060  F023         	movff	move@mL,turnRight@mL
  3129   0011AE  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3130   0011B2  C062  F025         	movff	move@mR,turnRight@mR
  3131   0011B6  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3132   0011BA  C06D  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3133   0011BE  C06E  F028         	movff	move@turnDuration,turnRight@turnDuration
  3134   0011C2  C06F  F029         	movff	move@turnRamp,turnRight@turnRamp
  3135   0011C6  EC39  F021         	call	_turnRight	;wreg free
  3136   0011CA                     
  3137                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3138   0011CA  0E05               	movlw	5
  3139   0011CC  6E46               	movwf	(??_move+1)^0,c
  3140   0011CE  0E0F               	movlw	15
  3141   0011D0  6E45               	movwf	??_move^0,c
  3142   0011D2  0EF1               	movlw	241
  3143   0011D4                     u5787:
  3144   0011D4  2EE8               	decfsz	wreg,f,c
  3145   0011D6  D7FE               	bra	u5787
  3146   0011D8  2E45               	decfsz	??_move^0,f,c
  3147   0011DA  D7FC               	bra	u5787
  3148   0011DC  2E46               	decfsz	(??_move+1)^0,f,c
  3149   0011DE  D7FA               	bra	u5787
  3150   0011E0  0000               	nop	
  3151   0011E2                     
  3152                           ;dc_motor.c: 136:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3153   0011E2  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3154   0011E6  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3155   0011EA  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3156   0011EE  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3157   0011F2  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3158   0011F6  C06C  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3159   0011FA  ECD3  F024         	call	_fullSpeedAhead	;wreg free
  3160                           
  3161                           ;dc_motor.c: 137:     }
  3162   0011FE  EF15  F00B         	goto	l573
  3163   001202                     l5701:
  3164                           
  3165                           ; BSR set to: 0
  3166   001202  0E05               	movlw	5
  3167   001204  1964               	xorwf	move@color& (0+255),w,b
  3168   001206  A4D8               	btfss	status,2,c
  3169   001208  EF08  F009         	goto	u5081
  3170   00120C  EF0A  F009         	goto	u5080
  3171   001210                     u5081:
  3172   001210  EF88  F009         	goto	l5717
  3173   001214                     u5080:
  3174   001214                     
  3175                           ; BSR set to: 0
  3176                           ;dc_motor.c: 140:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3177   001214  C060  F023         	movff	move@mL,reverseShort@mL
  3178   001218  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3179   00121C  C062  F025         	movff	move@mR,reverseShort@mR
  3180   001220  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3181   001224  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3182   001228  C06C  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3183   00122C  EC54  F01E         	call	_reverseShort	;wreg free
  3184   001230                     
  3185                           ;dc_motor.c: 141:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3186   001230  0E05               	movlw	5
  3187   001232  6E46               	movwf	(??_move+1)^0,c
  3188   001234  0E0F               	movlw	15
  3189   001236  6E45               	movwf	??_move^0,c
  3190   001238  0EF1               	movlw	241
  3191   00123A                     u5797:
  3192   00123A  2EE8               	decfsz	wreg,f,c
  3193   00123C  D7FE               	bra	u5797
  3194   00123E  2E45               	decfsz	??_move^0,f,c
  3195   001240  D7FC               	bra	u5797
  3196   001242  2E46               	decfsz	(??_move+1)^0,f,c
  3197   001244  D7FA               	bra	u5797
  3198   001246  0000               	nop	
  3199   001248                     
  3200                           ;dc_motor.c: 142:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  3201   001248  C060  F023         	movff	move@mL,reverseOneSquare@mL
  3202   00124C  C061  F024         	movff	move@mL+1,reverseOneSquare@mL+1
  3203   001250  C062  F025         	movff	move@mR,reverseOneSquare@mR
  3204   001254  C063  F026         	movff	move@mR+1,reverseOneSquare@mR+1
  3205   001258  C06A  F027         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  3206   00125C  C06B  F028         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  3207   001260  C06C  F029         	movff	move@straightRamp,reverseOneSquare@straightRamp
  3208   001264  EC43  F020         	call	_reverseOneSquare	;wreg free
  3209                           
  3210                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3211   001268  0E05               	movlw	5
  3212   00126A  6E46               	movwf	(??_move+1)^0,c
  3213   00126C  0E0F               	movlw	15
  3214   00126E  6E45               	movwf	??_move^0,c
  3215   001270  0EF1               	movlw	241
  3216   001272                     u5807:
  3217   001272  2EE8               	decfsz	wreg,f,c
  3218   001274  D7FE               	bra	u5807
  3219   001276  2E45               	decfsz	??_move^0,f,c
  3220   001278  D7FC               	bra	u5807
  3221   00127A  2E46               	decfsz	(??_move+1)^0,f,c
  3222   00127C  D7FA               	bra	u5807
  3223   00127E  0000               	nop	
  3224   001280                     
  3225                           ;dc_motor.c: 144:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3226   001280  C060  F023         	movff	move@mL,turnLeft@mL
  3227   001284  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3228   001288  C062  F025         	movff	move@mR,turnLeft@mR
  3229   00128C  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3230   001290  C06D  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3231   001294  C06E  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3232   001298  C06F  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3233   00129C  EC26  F022         	call	_turnLeft	;wreg free
  3234   0012A0                     
  3235                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3236   0012A0  0E05               	movlw	5
  3237   0012A2  6E46               	movwf	(??_move+1)^0,c
  3238   0012A4  0E0F               	movlw	15
  3239   0012A6  6E45               	movwf	??_move^0,c
  3240   0012A8  0EF1               	movlw	241
  3241   0012AA                     u5817:
  3242   0012AA  2EE8               	decfsz	wreg,f,c
  3243   0012AC  D7FE               	bra	u5817
  3244   0012AE  2E45               	decfsz	??_move^0,f,c
  3245   0012B0  D7FC               	bra	u5817
  3246   0012B2  2E46               	decfsz	(??_move+1)^0,f,c
  3247   0012B4  D7FA               	bra	u5817
  3248   0012B6  0000               	nop	
  3249                           
  3250                           ;dc_motor.c: 146:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3251   0012B8  C060  F023         	movff	move@mL,turnLeft@mL
  3252   0012BC  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3253   0012C0  C062  F025         	movff	move@mR,turnLeft@mR
  3254   0012C4  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3255   0012C8  C06D  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3256   0012CC  C06E  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3257   0012D0  C06F  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3258   0012D4  EC26  F022         	call	_turnLeft	;wreg free
  3259   0012D8                     
  3260                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3261   0012D8  0E05               	movlw	5
  3262   0012DA  6E46               	movwf	(??_move+1)^0,c
  3263   0012DC  0E0F               	movlw	15
  3264   0012DE  6E45               	movwf	??_move^0,c
  3265   0012E0  0EF1               	movlw	241
  3266   0012E2                     u5827:
  3267   0012E2  2EE8               	decfsz	wreg,f,c
  3268   0012E4  D7FE               	bra	u5827
  3269   0012E6  2E45               	decfsz	??_move^0,f,c
  3270   0012E8  D7FC               	bra	u5827
  3271   0012EA  2E46               	decfsz	(??_move+1)^0,f,c
  3272   0012EC  D7FA               	bra	u5827
  3273   0012EE  0000               	nop	
  3274   0012F0                     
  3275                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3276   0012F0  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3277   0012F4  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3278   0012F8  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3279   0012FC  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3280   001300  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3281   001304  C06C  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3282   001308  ECD3  F024         	call	_fullSpeedAhead	;wreg free
  3283                           
  3284                           ;dc_motor.c: 149:     }
  3285   00130C  EF15  F00B         	goto	l573
  3286   001310                     l5717:
  3287                           
  3288                           ; BSR set to: 0
  3289   001310  0E06               	movlw	6
  3290   001312  1964               	xorwf	move@color& (0+255),w,b
  3291   001314  A4D8               	btfss	status,2,c
  3292   001316  EF8F  F009         	goto	u5091
  3293   00131A  EF91  F009         	goto	u5090
  3294   00131E                     u5091:
  3295   00131E  EF0F  F00A         	goto	l5733
  3296   001322                     u5090:
  3297   001322                     
  3298                           ; BSR set to: 0
  3299                           ;dc_motor.c: 152:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3300   001322  C060  F023         	movff	move@mL,reverseShort@mL
  3301   001326  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3302   00132A  C062  F025         	movff	move@mR,reverseShort@mR
  3303   00132E  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3304   001332  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3305   001336  C06C  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3306   00133A  EC54  F01E         	call	_reverseShort	;wreg free
  3307   00133E                     
  3308                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3309   00133E  0E05               	movlw	5
  3310   001340  6E46               	movwf	(??_move+1)^0,c
  3311   001342  0E0F               	movlw	15
  3312   001344  6E45               	movwf	??_move^0,c
  3313   001346  0EF1               	movlw	241
  3314   001348                     u5837:
  3315   001348  2EE8               	decfsz	wreg,f,c
  3316   00134A  D7FE               	bra	u5837
  3317   00134C  2E45               	decfsz	??_move^0,f,c
  3318   00134E  D7FC               	bra	u5837
  3319   001350  2E46               	decfsz	(??_move+1)^0,f,c
  3320   001352  D7FA               	bra	u5837
  3321   001354  0000               	nop	
  3322   001356                     
  3323                           ;dc_motor.c: 154:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3324   001356  C060  F023         	movff	move@mL,turnRight@mL
  3325   00135A  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3326   00135E  C062  F025         	movff	move@mR,turnRight@mR
  3327   001362  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3328   001366  C06D  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3329   00136A  C06E  F028         	movff	move@turnDuration,turnRight@turnDuration
  3330   00136E  C06F  F029         	movff	move@turnRamp,turnRight@turnRamp
  3331   001372  EC39  F021         	call	_turnRight	;wreg free
  3332                           
  3333                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3334   001376  0E05               	movlw	5
  3335   001378  6E46               	movwf	(??_move+1)^0,c
  3336   00137A  0E0F               	movlw	15
  3337   00137C  6E45               	movwf	??_move^0,c
  3338   00137E  0EF1               	movlw	241
  3339   001380                     u5847:
  3340   001380  2EE8               	decfsz	wreg,f,c
  3341   001382  D7FE               	bra	u5847
  3342   001384  2E45               	decfsz	??_move^0,f,c
  3343   001386  D7FC               	bra	u5847
  3344   001388  2E46               	decfsz	(??_move+1)^0,f,c
  3345   00138A  D7FA               	bra	u5847
  3346   00138C  0000               	nop	
  3347   00138E                     
  3348                           ;dc_motor.c: 156:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3349   00138E  C060  F023         	movff	move@mL,turnRight@mL
  3350   001392  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3351   001396  C062  F025         	movff	move@mR,turnRight@mR
  3352   00139A  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3353   00139E  C06D  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3354   0013A2  C06E  F028         	movff	move@turnDuration,turnRight@turnDuration
  3355   0013A6  C06F  F029         	movff	move@turnRamp,turnRight@turnRamp
  3356   0013AA  EC39  F021         	call	_turnRight	;wreg free
  3357   0013AE                     
  3358                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3359   0013AE  0E05               	movlw	5
  3360   0013B0  6E46               	movwf	(??_move+1)^0,c
  3361   0013B2  0E0F               	movlw	15
  3362   0013B4  6E45               	movwf	??_move^0,c
  3363   0013B6  0EF1               	movlw	241
  3364   0013B8                     u5857:
  3365   0013B8  2EE8               	decfsz	wreg,f,c
  3366   0013BA  D7FE               	bra	u5857
  3367   0013BC  2E45               	decfsz	??_move^0,f,c
  3368   0013BE  D7FC               	bra	u5857
  3369   0013C0  2E46               	decfsz	(??_move+1)^0,f,c
  3370   0013C2  D7FA               	bra	u5857
  3371   0013C4  0000               	nop	
  3372                           
  3373                           ;dc_motor.c: 158:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3374   0013C6  C060  F023         	movff	move@mL,turnRight@mL
  3375   0013CA  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3376   0013CE  C062  F025         	movff	move@mR,turnRight@mR
  3377   0013D2  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3378   0013D6  C06D  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3379   0013DA  C06E  F028         	movff	move@turnDuration,turnRight@turnDuration
  3380   0013DE  C06F  F029         	movff	move@turnRamp,turnRight@turnRamp
  3381   0013E2  EC39  F021         	call	_turnRight	;wreg free
  3382   0013E6                     
  3383                           ;dc_motor.c: 159:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3384   0013E6  0E05               	movlw	5
  3385   0013E8  6E46               	movwf	(??_move+1)^0,c
  3386   0013EA  0E0F               	movlw	15
  3387   0013EC  6E45               	movwf	??_move^0,c
  3388   0013EE  0EF1               	movlw	241
  3389   0013F0                     u5867:
  3390   0013F0  2EE8               	decfsz	wreg,f,c
  3391   0013F2  D7FE               	bra	u5867
  3392   0013F4  2E45               	decfsz	??_move^0,f,c
  3393   0013F6  D7FC               	bra	u5867
  3394   0013F8  2E46               	decfsz	(??_move+1)^0,f,c
  3395   0013FA  D7FA               	bra	u5867
  3396   0013FC  0000               	nop	
  3397   0013FE                     
  3398                           ;dc_motor.c: 160:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3399   0013FE  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3400   001402  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3401   001406  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3402   00140A  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3403   00140E  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3404   001412  C06C  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3405   001416  ECD3  F024         	call	_fullSpeedAhead	;wreg free
  3406                           
  3407                           ;dc_motor.c: 161:     }
  3408   00141A  EF15  F00B         	goto	l573
  3409   00141E                     l5733:
  3410                           
  3411                           ; BSR set to: 0
  3412   00141E  0E07               	movlw	7
  3413   001420  1964               	xorwf	move@color& (0+255),w,b
  3414   001422  A4D8               	btfss	status,2,c
  3415   001424  EF16  F00A         	goto	u5101
  3416   001428  EF18  F00A         	goto	u5100
  3417   00142C                     u5101:
  3418   00142C  EF96  F00A         	goto	l5749
  3419   001430                     u5100:
  3420   001430                     
  3421                           ; BSR set to: 0
  3422                           ;dc_motor.c: 164:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3423   001430  C060  F023         	movff	move@mL,reverseShort@mL
  3424   001434  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3425   001438  C062  F025         	movff	move@mR,reverseShort@mR
  3426   00143C  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3427   001440  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3428   001444  C06C  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3429   001448  EC54  F01E         	call	_reverseShort	;wreg free
  3430   00144C                     
  3431                           ;dc_motor.c: 165:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3432   00144C  0E05               	movlw	5
  3433   00144E  6E46               	movwf	(??_move+1)^0,c
  3434   001450  0E0F               	movlw	15
  3435   001452  6E45               	movwf	??_move^0,c
  3436   001454  0EF1               	movlw	241
  3437   001456                     u5877:
  3438   001456  2EE8               	decfsz	wreg,f,c
  3439   001458  D7FE               	bra	u5877
  3440   00145A  2E45               	decfsz	??_move^0,f,c
  3441   00145C  D7FC               	bra	u5877
  3442   00145E  2E46               	decfsz	(??_move+1)^0,f,c
  3443   001460  D7FA               	bra	u5877
  3444   001462  0000               	nop	
  3445   001464                     
  3446                           ;dc_motor.c: 166:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3447   001464  C060  F023         	movff	move@mL,turnLeft@mL
  3448   001468  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3449   00146C  C062  F025         	movff	move@mR,turnLeft@mR
  3450   001470  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3451   001474  C06D  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3452   001478  C06E  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3453   00147C  C06F  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3454   001480  EC26  F022         	call	_turnLeft	;wreg free
  3455                           
  3456                           ;dc_motor.c: 167:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3457   001484  0E05               	movlw	5
  3458   001486  6E46               	movwf	(??_move+1)^0,c
  3459   001488  0E0F               	movlw	15
  3460   00148A  6E45               	movwf	??_move^0,c
  3461   00148C  0EF1               	movlw	241
  3462   00148E                     u5887:
  3463   00148E  2EE8               	decfsz	wreg,f,c
  3464   001490  D7FE               	bra	u5887
  3465   001492  2E45               	decfsz	??_move^0,f,c
  3466   001494  D7FC               	bra	u5887
  3467   001496  2E46               	decfsz	(??_move+1)^0,f,c
  3468   001498  D7FA               	bra	u5887
  3469   00149A  0000               	nop	
  3470   00149C                     
  3471                           ;dc_motor.c: 168:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3472   00149C  C060  F023         	movff	move@mL,turnLeft@mL
  3473   0014A0  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3474   0014A4  C062  F025         	movff	move@mR,turnLeft@mR
  3475   0014A8  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3476   0014AC  C06D  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3477   0014B0  C06E  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3478   0014B4  C06F  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3479   0014B8  EC26  F022         	call	_turnLeft	;wreg free
  3480   0014BC                     
  3481                           ;dc_motor.c: 169:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3482   0014BC  0E05               	movlw	5
  3483   0014BE  6E46               	movwf	(??_move+1)^0,c
  3484   0014C0  0E0F               	movlw	15
  3485   0014C2  6E45               	movwf	??_move^0,c
  3486   0014C4  0EF1               	movlw	241
  3487   0014C6                     u5897:
  3488   0014C6  2EE8               	decfsz	wreg,f,c
  3489   0014C8  D7FE               	bra	u5897
  3490   0014CA  2E45               	decfsz	??_move^0,f,c
  3491   0014CC  D7FC               	bra	u5897
  3492   0014CE  2E46               	decfsz	(??_move+1)^0,f,c
  3493   0014D0  D7FA               	bra	u5897
  3494   0014D2  0000               	nop	
  3495                           
  3496                           ;dc_motor.c: 170:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3497   0014D4  C060  F023         	movff	move@mL,turnLeft@mL
  3498   0014D8  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3499   0014DC  C062  F025         	movff	move@mR,turnLeft@mR
  3500   0014E0  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3501   0014E4  C06D  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3502   0014E8  C06E  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3503   0014EC  C06F  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3504   0014F0  EC26  F022         	call	_turnLeft	;wreg free
  3505   0014F4                     
  3506                           ;dc_motor.c: 171:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3507   0014F4  0E05               	movlw	5
  3508   0014F6  6E46               	movwf	(??_move+1)^0,c
  3509   0014F8  0E0F               	movlw	15
  3510   0014FA  6E45               	movwf	??_move^0,c
  3511   0014FC  0EF1               	movlw	241
  3512   0014FE                     u5907:
  3513   0014FE  2EE8               	decfsz	wreg,f,c
  3514   001500  D7FE               	bra	u5907
  3515   001502  2E45               	decfsz	??_move^0,f,c
  3516   001504  D7FC               	bra	u5907
  3517   001506  2E46               	decfsz	(??_move+1)^0,f,c
  3518   001508  D7FA               	bra	u5907
  3519   00150A  0000               	nop	
  3520   00150C                     
  3521                           ;dc_motor.c: 172:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3522   00150C  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3523   001510  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3524   001514  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3525   001518  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3526   00151C  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3527   001520  C06C  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3528   001524  ECD3  F024         	call	_fullSpeedAhead	;wreg free
  3529                           
  3530                           ;dc_motor.c: 173:     }
  3531   001528  EF15  F00B         	goto	l573
  3532   00152C                     l5749:
  3533                           
  3534                           ; BSR set to: 0
  3535   00152C  0E08               	movlw	8
  3536   00152E  1964               	xorwf	move@color& (0+255),w,b
  3537   001530  A4D8               	btfss	status,2,c
  3538   001532  EF9D  F00A         	goto	u5111
  3539   001536  EF9F  F00A         	goto	u5110
  3540   00153A                     u5111:
  3541   00153A  EFDB  F00A         	goto	l5757
  3542   00153E                     u5110:
  3543   00153E                     
  3544                           ; BSR set to: 0
  3545                           ;dc_motor.c: 176:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3546   00153E  C060  F023         	movff	move@mL,reverseShort@mL
  3547   001542  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3548   001546  C062  F025         	movff	move@mR,reverseShort@mR
  3549   00154A  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3550   00154E  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3551   001552  C06C  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3552   001556  EC54  F01E         	call	_reverseShort	;wreg free
  3553   00155A                     
  3554                           ;dc_motor.c: 177:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3555   00155A  0E05               	movlw	5
  3556   00155C  6E46               	movwf	(??_move+1)^0,c
  3557   00155E  0E0F               	movlw	15
  3558   001560  6E45               	movwf	??_move^0,c
  3559   001562  0EF1               	movlw	241
  3560   001564                     u5917:
  3561   001564  2EE8               	decfsz	wreg,f,c
  3562   001566  D7FE               	bra	u5917
  3563   001568  2E45               	decfsz	??_move^0,f,c
  3564   00156A  D7FC               	bra	u5917
  3565   00156C  2E46               	decfsz	(??_move+1)^0,f,c
  3566   00156E  D7FA               	bra	u5917
  3567   001570  0000               	nop	
  3568   001572                     
  3569                           ;dc_motor.c: 178:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3570   001572  C060  F031         	movff	move@mL,returnHome@mL
  3571   001576  C061  F032         	movff	move@mL+1,returnHome@mL+1
  3572   00157A  C062  F033         	movff	move@mR,returnHome@mR
  3573   00157E  C063  F034         	movff	move@mR+1,returnHome@mR+1
  3574   001582  C065  F035         	movff	move@moveSequence,returnHome@moveSequence
  3575   001586  C066  F036         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3576   00158A  C067  F037         	movff	move@straightTime,returnHome@straightTime
  3577   00158E  C068  F038         	movff	move@straightTime+1,returnHome@straightTime+1
  3578   001592  C069  F039         	movff	move@curMove,returnHome@curMove
  3579   001596  C06A  F03A         	movff	move@straightSpeed,returnHome@straightSpeed
  3580   00159A  C06B  F03B         	movff	move@reverseDuration,returnHome@reverseDuration
  3581   00159E  C06C  F03C         	movff	move@straightRamp,returnHome@straightRamp
  3582   0015A2  C06D  F03D         	movff	move@turnSpeed,returnHome@turnSpeed
  3583   0015A6  C06E  F03E         	movff	move@turnDuration,returnHome@turnDuration
  3584   0015AA  C06F  F03F         	movff	move@turnRamp,returnHome@turnRamp
  3585   0015AE  EC16  F00B         	call	_returnHome	;wreg free
  3586                           
  3587                           ;dc_motor.c: 179:     }
  3588   0015B2  EF15  F00B         	goto	l573
  3589   0015B6                     l5757:
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;dc_motor.c: 182:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3593   0015B6  C060  F023         	movff	move@mL,reverseShort@mL
  3594   0015BA  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3595   0015BE  C062  F025         	movff	move@mR,reverseShort@mR
  3596   0015C2  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3597   0015C6  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3598   0015CA  C06C  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3599   0015CE  EC54  F01E         	call	_reverseShort	;wreg free
  3600   0015D2                     
  3601                           ;dc_motor.c: 183:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3602   0015D2  0E05               	movlw	5
  3603   0015D4  6E46               	movwf	(??_move+1)^0,c
  3604   0015D6  0E0F               	movlw	15
  3605   0015D8  6E45               	movwf	??_move^0,c
  3606   0015DA  0EF1               	movlw	241
  3607   0015DC                     u5927:
  3608   0015DC  2EE8               	decfsz	wreg,f,c
  3609   0015DE  D7FE               	bra	u5927
  3610   0015E0  2E45               	decfsz	??_move^0,f,c
  3611   0015E2  D7FC               	bra	u5927
  3612   0015E4  2E46               	decfsz	(??_move+1)^0,f,c
  3613   0015E6  D7FA               	bra	u5927
  3614   0015E8  0000               	nop	
  3615   0015EA                     
  3616                           ;dc_motor.c: 184:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3617   0015EA  C060  F031         	movff	move@mL,returnHome@mL
  3618   0015EE  C061  F032         	movff	move@mL+1,returnHome@mL+1
  3619   0015F2  C062  F033         	movff	move@mR,returnHome@mR
  3620   0015F6  C063  F034         	movff	move@mR+1,returnHome@mR+1
  3621   0015FA  C065  F035         	movff	move@moveSequence,returnHome@moveSequence
  3622   0015FE  C066  F036         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3623   001602  C067  F037         	movff	move@straightTime,returnHome@straightTime
  3624   001606  C068  F038         	movff	move@straightTime+1,returnHome@straightTime+1
  3625   00160A  C069  F039         	movff	move@curMove,returnHome@curMove
  3626   00160E  C06A  F03A         	movff	move@straightSpeed,returnHome@straightSpeed
  3627   001612  C06B  F03B         	movff	move@reverseDuration,returnHome@reverseDuration
  3628   001616  C06C  F03C         	movff	move@straightRamp,returnHome@straightRamp
  3629   00161A  C06D  F03D         	movff	move@turnSpeed,returnHome@turnSpeed
  3630   00161E  C06E  F03E         	movff	move@turnDuration,returnHome@turnDuration
  3631   001622  C06F  F03F         	movff	move@turnRamp,returnHome@turnRamp
  3632   001626  EC16  F00B         	call	_returnHome	;wreg free
  3633   00162A                     l573:
  3634   00162A  0012               	return		;funcret
  3635   00162C                     __end_of_move:
  3636                           	callstack 0
  3637                           
  3638 ;; *************** function _reverseShort *****************
  3639 ;; Defined at:
  3640 ;;		line 563 in file "dc_motor.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  3643 ;;		 -> main@motorL(10), 
  3644 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  3645 ;;		 -> main@motorR(10), 
  3646 ;;  straightSpee    1   38[COMRAM] unsigned char 
  3647 ;;  straightRamp    1   39[COMRAM] unsigned char 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  cur_power       2   46[COMRAM] int 
  3650 ;;  i               2   44[COMRAM] int 
  3651 ;;  reverseDurat    1   43[COMRAM] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3661 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;Total ram usage:       14 bytes
  3666 ;; Hardware stack levels used: 1
  3667 ;; Hardware stack levels required when called: 7
  3668 ;; This function calls:
  3669 ;;		_setMotorPWM
  3670 ;; This function is called by:
  3671 ;;		_move
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text3
  3676   003CA8                     __ptext3:
  3677                           	callstack 0
  3678   003CA8                     _reverseShort:
  3679                           	callstack 22
  3680   003CA8                     
  3681                           ;dc_motor.c: 563: void reverseShort(DC_motor *mL, DC_motor *mR, char straightSpeed, unsi
      +                          gned char straightRamp);dc_motor.c: 564: {;dc_motor.c: 565:     unsigned char reverseDur
      +                          ation = 30;
  3682   003CA8  0E1E               	movlw	30
  3683   003CAA  6E2C               	movwf	reverseShort@reverseDuration^0,c
  3684   003CAC                     
  3685                           ;dc_motor.c: 567:     mL->direction = 0;
  3686   003CAC  EE20 F001          	lfsr	2,1
  3687   003CB0  5023               	movf	reverseShort@mL^0,w,c
  3688   003CB2  26D9               	addwf	fsr2l,f,c
  3689   003CB4  5024               	movf	(reverseShort@mL+1)^0,w,c
  3690   003CB6  22DA               	addwfc	fsr2h,f,c
  3691   003CB8  6ADF               	clrf	indf2,c
  3692   003CBA                     
  3693                           ;dc_motor.c: 568:     mR->direction = 0;
  3694   003CBA  EE20 F001          	lfsr	2,1
  3695   003CBE  5025               	movf	reverseShort@mR^0,w,c
  3696   003CC0  26D9               	addwf	fsr2l,f,c
  3697   003CC2  5026               	movf	(reverseShort@mR+1)^0,w,c
  3698   003CC4  22DA               	addwfc	fsr2h,f,c
  3699   003CC6  6ADF               	clrf	indf2,c
  3700                           
  3701                           ;dc_motor.c: 569:     int i;;dc_motor.c: 570:     int cur_power;;dc_motor.c: 571:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  3702   003CC8  0E00               	movlw	0
  3703   003CCA  6E30               	movwf	(reverseShort@cur_power+1)^0,c
  3704   003CCC  0E01               	movlw	1
  3705   003CCE  6E2F               	movwf	reverseShort@cur_power^0,c
  3706   003CD0  EFB4  F01E         	goto	l5081
  3707   003CD4                     l5067:
  3708                           
  3709                           ;dc_motor.c: 572:         mL->power = cur_power+mL->compensation;
  3710   003CD4  EE20 F009          	lfsr	2,9
  3711   003CD8  5023               	movf	reverseShort@mL^0,w,c
  3712   003CDA  26D9               	addwf	fsr2l,f,c
  3713   003CDC  5024               	movf	(reverseShort@mL+1)^0,w,c
  3714   003CDE  22DA               	addwfc	fsr2h,f,c
  3715   003CE0  50DF               	movf	indf2,w,c
  3716   003CE2  242F               	addwf	reverseShort@cur_power^0,w,c
  3717   003CE4  C023  FFD9         	movff	reverseShort@mL,fsr2l
  3718   003CE8  C024  FFDA         	movff	reverseShort@mL+1,fsr2h
  3719   003CEC  6EDF               	movwf	indf2,c
  3720                           
  3721                           ;dc_motor.c: 573:         mR->power = cur_power+mR->compensation;
  3722   003CEE  EE20 F009          	lfsr	2,9
  3723   003CF2  5025               	movf	reverseShort@mR^0,w,c
  3724   003CF4  26D9               	addwf	fsr2l,f,c
  3725   003CF6  5026               	movf	(reverseShort@mR+1)^0,w,c
  3726   003CF8  22DA               	addwfc	fsr2h,f,c
  3727   003CFA  50DF               	movf	indf2,w,c
  3728   003CFC  242F               	addwf	reverseShort@cur_power^0,w,c
  3729   003CFE  C025  FFD9         	movff	reverseShort@mR,fsr2l
  3730   003D02  C026  FFDA         	movff	reverseShort@mR+1,fsr2h
  3731   003D06  6EDF               	movwf	indf2,c
  3732   003D08                     
  3733                           ;dc_motor.c: 574:         setMotorPWM(mL);
  3734   003D08  C023  F01D         	movff	reverseShort@mL,setMotorPWM@m
  3735   003D0C  C024  F01E         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3736   003D10  EC13  F023         	call	_setMotorPWM	;wreg free
  3737   003D14                     
  3738                           ;dc_motor.c: 575:         setMotorPWM(mR);
  3739   003D14  C025  F01D         	movff	reverseShort@mR,setMotorPWM@m
  3740   003D18  C026  F01E         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3741   003D1C  EC13  F023         	call	_setMotorPWM	;wreg free
  3742   003D20                     
  3743                           ;dc_motor.c: 576:         for (i=0;i<straightRamp;i++) {
  3744   003D20  0E00               	movlw	0
  3745   003D22  6E2E               	movwf	(reverseShort@i+1)^0,c
  3746   003D24  0E00               	movlw	0
  3747   003D26  6E2D               	movwf	reverseShort@i^0,c
  3748   003D28  EFA0  F01E         	goto	l727
  3749   003D2C                     l5075:
  3750                           
  3751                           ;dc_motor.c: 577:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3752   003D2C  0E68               	movlw	104
  3753   003D2E  6E29               	movwf	??_reverseShort^0,c
  3754   003D30  0EE4               	movlw	228
  3755   003D32                     u5937:
  3756   003D32  2EE8               	decfsz	wreg,f,c
  3757   003D34  D7FE               	bra	u5937
  3758   003D36  2E29               	decfsz	??_reverseShort^0,f,c
  3759   003D38  D7FC               	bra	u5937
  3760   003D3A  D000               	nop2	
  3761   003D3C                     
  3762                           ;dc_motor.c: 578:         }
  3763   003D3C  4A2D               	infsnz	reverseShort@i^0,f,c
  3764   003D3E  2A2E               	incf	(reverseShort@i+1)^0,f,c
  3765   003D40                     l727:
  3766   003D40  5028               	movf	reverseShort@straightRamp^0,w,c
  3767   003D42  6E29               	movwf	??_reverseShort^0,c
  3768   003D44  6A2A               	clrf	(??_reverseShort+1)^0,c
  3769   003D46  5029               	movf	??_reverseShort^0,w,c
  3770   003D48  5C2D               	subwf	reverseShort@i^0,w,c
  3771   003D4A  502E               	movf	(reverseShort@i+1)^0,w,c
  3772   003D4C  0A80               	xorlw	128
  3773   003D4E  6E2B               	movwf	(??_reverseShort+2)^0,c
  3774   003D50  502A               	movf	(??_reverseShort+1)^0,w,c
  3775   003D52  0A80               	xorlw	128
  3776   003D54  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3777   003D56  A0D8               	btfss	status,0,c
  3778   003D58  EFB0  F01E         	goto	u4331
  3779   003D5C  EFB2  F01E         	goto	u4330
  3780   003D60                     u4331:
  3781   003D60  EF96  F01E         	goto	l5075
  3782   003D64                     u4330:
  3783   003D64                     
  3784                           ;dc_motor.c: 579:     }
  3785   003D64  4A2F               	infsnz	reverseShort@cur_power^0,f,c
  3786   003D66  2A30               	incf	(reverseShort@cur_power+1)^0,f,c
  3787   003D68                     l5081:
  3788   003D68  5027               	movf	reverseShort@straightSpeed^0,w,c
  3789   003D6A  6E29               	movwf	??_reverseShort^0,c
  3790   003D6C  6A2A               	clrf	(??_reverseShort+1)^0,c
  3791   003D6E  502F               	movf	reverseShort@cur_power^0,w,c
  3792   003D70  5C29               	subwf	??_reverseShort^0,w,c
  3793   003D72  502A               	movf	(??_reverseShort+1)^0,w,c
  3794   003D74  0A80               	xorlw	128
  3795   003D76  6E2B               	movwf	(??_reverseShort+2)^0,c
  3796   003D78  5030               	movf	(reverseShort@cur_power+1)^0,w,c
  3797   003D7A  0A80               	xorlw	128
  3798   003D7C  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3799   003D7E  B0D8               	btfsc	status,0,c
  3800   003D80  EFC4  F01E         	goto	u4341
  3801   003D84  EFC6  F01E         	goto	u4340
  3802   003D88                     u4341:
  3803   003D88  EF6A  F01E         	goto	l5067
  3804   003D8C                     u4340:
  3805   003D8C                     
  3806                           ;dc_motor.c: 581:     for (i=0;i<reverseDuration;i++) {
  3807   003D8C  0E00               	movlw	0
  3808   003D8E  6E2E               	movwf	(reverseShort@i+1)^0,c
  3809   003D90  0E00               	movlw	0
  3810   003D92  6E2D               	movwf	reverseShort@i^0,c
  3811   003D94  EFD6  F01E         	goto	l731
  3812   003D98                     l5085:
  3813                           
  3814                           ;dc_motor.c: 582:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3815   003D98  0E68               	movlw	104
  3816   003D9A  6E29               	movwf	??_reverseShort^0,c
  3817   003D9C  0EE4               	movlw	228
  3818   003D9E                     u5947:
  3819   003D9E  2EE8               	decfsz	wreg,f,c
  3820   003DA0  D7FE               	bra	u5947
  3821   003DA2  2E29               	decfsz	??_reverseShort^0,f,c
  3822   003DA4  D7FC               	bra	u5947
  3823   003DA6  D000               	nop2	
  3824   003DA8                     
  3825                           ;dc_motor.c: 583:         }
  3826   003DA8  4A2D               	infsnz	reverseShort@i^0,f,c
  3827   003DAA  2A2E               	incf	(reverseShort@i+1)^0,f,c
  3828   003DAC                     l731:
  3829   003DAC  502C               	movf	reverseShort@reverseDuration^0,w,c
  3830   003DAE  6E29               	movwf	??_reverseShort^0,c
  3831   003DB0  6A2A               	clrf	(??_reverseShort+1)^0,c
  3832   003DB2  5029               	movf	??_reverseShort^0,w,c
  3833   003DB4  5C2D               	subwf	reverseShort@i^0,w,c
  3834   003DB6  502E               	movf	(reverseShort@i+1)^0,w,c
  3835   003DB8  0A80               	xorlw	128
  3836   003DBA  6E2B               	movwf	(??_reverseShort+2)^0,c
  3837   003DBC  502A               	movf	(??_reverseShort+1)^0,w,c
  3838   003DBE  0A80               	xorlw	128
  3839   003DC0  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3840   003DC2  A0D8               	btfss	status,0,c
  3841   003DC4  EFE6  F01E         	goto	u4351
  3842   003DC8  EFE8  F01E         	goto	u4350
  3843   003DCC                     u4351:
  3844   003DCC  EFCC  F01E         	goto	l5085
  3845   003DD0                     u4350:
  3846   003DD0                     
  3847                           ;dc_motor.c: 585:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  3848   003DD0  C027  F02F         	movff	reverseShort@straightSpeed,reverseShort@cur_power
  3849   003DD4  6A30               	clrf	(reverseShort@cur_power+1)^0,c
  3850   003DD6                     l5089:
  3851   003DD6  BE30               	btfsc	(reverseShort@cur_power+1)^0,7,c
  3852   003DD8  EFF2  F01E         	goto	u4360
  3853   003DDC  EFF0  F01E         	goto	u4361
  3854   003DE0                     u4361:
  3855   003DE0  EFF4  F01E         	goto	l5093
  3856   003DE4                     u4360:
  3857   003DE4  EF41  F01F         	goto	l5109
  3858   003DE8                     l5093:
  3859                           
  3860                           ;dc_motor.c: 586:         mL->power = cur_power+mL->compensation;
  3861   003DE8  EE20 F009          	lfsr	2,9
  3862   003DEC  5023               	movf	reverseShort@mL^0,w,c
  3863   003DEE  26D9               	addwf	fsr2l,f,c
  3864   003DF0  5024               	movf	(reverseShort@mL+1)^0,w,c
  3865   003DF2  22DA               	addwfc	fsr2h,f,c
  3866   003DF4  50DF               	movf	indf2,w,c
  3867   003DF6  242F               	addwf	reverseShort@cur_power^0,w,c
  3868   003DF8  C023  FFD9         	movff	reverseShort@mL,fsr2l
  3869   003DFC  C024  FFDA         	movff	reverseShort@mL+1,fsr2h
  3870   003E00  6EDF               	movwf	indf2,c
  3871                           
  3872                           ;dc_motor.c: 587:         mR->power = cur_power+mR->compensation;
  3873   003E02  EE20 F009          	lfsr	2,9
  3874   003E06  5025               	movf	reverseShort@mR^0,w,c
  3875   003E08  26D9               	addwf	fsr2l,f,c
  3876   003E0A  5026               	movf	(reverseShort@mR+1)^0,w,c
  3877   003E0C  22DA               	addwfc	fsr2h,f,c
  3878   003E0E  50DF               	movf	indf2,w,c
  3879   003E10  242F               	addwf	reverseShort@cur_power^0,w,c
  3880   003E12  C025  FFD9         	movff	reverseShort@mR,fsr2l
  3881   003E16  C026  FFDA         	movff	reverseShort@mR+1,fsr2h
  3882   003E1A  6EDF               	movwf	indf2,c
  3883   003E1C                     
  3884                           ;dc_motor.c: 588:         setMotorPWM(mL);
  3885   003E1C  C023  F01D         	movff	reverseShort@mL,setMotorPWM@m
  3886   003E20  C024  F01E         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3887   003E24  EC13  F023         	call	_setMotorPWM	;wreg free
  3888   003E28                     
  3889                           ;dc_motor.c: 589:         setMotorPWM(mR);
  3890   003E28  C025  F01D         	movff	reverseShort@mR,setMotorPWM@m
  3891   003E2C  C026  F01E         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3892   003E30  EC13  F023         	call	_setMotorPWM	;wreg free
  3893   003E34                     
  3894                           ;dc_motor.c: 590:         for (i=0;i<straightRamp;i++) {
  3895   003E34  0E00               	movlw	0
  3896   003E36  6E2E               	movwf	(reverseShort@i+1)^0,c
  3897   003E38  0E00               	movlw	0
  3898   003E3A  6E2D               	movwf	reverseShort@i^0,c
  3899   003E3C  EF2A  F01F         	goto	l736
  3900   003E40                     l5101:
  3901                           
  3902                           ;dc_motor.c: 591:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3903   003E40  0E68               	movlw	104
  3904   003E42  6E29               	movwf	??_reverseShort^0,c
  3905   003E44  0EE4               	movlw	228
  3906   003E46                     u5957:
  3907   003E46  2EE8               	decfsz	wreg,f,c
  3908   003E48  D7FE               	bra	u5957
  3909   003E4A  2E29               	decfsz	??_reverseShort^0,f,c
  3910   003E4C  D7FC               	bra	u5957
  3911   003E4E  D000               	nop2	
  3912   003E50                     
  3913                           ;dc_motor.c: 592:         }
  3914   003E50  4A2D               	infsnz	reverseShort@i^0,f,c
  3915   003E52  2A2E               	incf	(reverseShort@i+1)^0,f,c
  3916   003E54                     l736:
  3917   003E54  5028               	movf	reverseShort@straightRamp^0,w,c
  3918   003E56  6E29               	movwf	??_reverseShort^0,c
  3919   003E58  6A2A               	clrf	(??_reverseShort+1)^0,c
  3920   003E5A  5029               	movf	??_reverseShort^0,w,c
  3921   003E5C  5C2D               	subwf	reverseShort@i^0,w,c
  3922   003E5E  502E               	movf	(reverseShort@i+1)^0,w,c
  3923   003E60  0A80               	xorlw	128
  3924   003E62  6E2B               	movwf	(??_reverseShort+2)^0,c
  3925   003E64  502A               	movf	(??_reverseShort+1)^0,w,c
  3926   003E66  0A80               	xorlw	128
  3927   003E68  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3928   003E6A  A0D8               	btfss	status,0,c
  3929   003E6C  EF3A  F01F         	goto	u4371
  3930   003E70  EF3C  F01F         	goto	u4370
  3931   003E74                     u4371:
  3932   003E74  EF20  F01F         	goto	l5101
  3933   003E78                     u4370:
  3934   003E78                     
  3935                           ;dc_motor.c: 593:     }
  3936   003E78  062F               	decf	reverseShort@cur_power^0,f,c
  3937   003E7A  A0D8               	btfss	status,0,c
  3938   003E7C  0630               	decf	(reverseShort@cur_power+1)^0,f,c
  3939   003E7E  EFEB  F01E         	goto	l5089
  3940   003E82                     l5109:
  3941                           
  3942                           ;dc_motor.c: 594:     mL->power = 0;
  3943   003E82  C023  FFD9         	movff	reverseShort@mL,fsr2l
  3944   003E86  C024  FFDA         	movff	reverseShort@mL+1,fsr2h
  3945   003E8A  6ADF               	clrf	indf2,c
  3946                           
  3947                           ;dc_motor.c: 595:     mR->power = 0;
  3948   003E8C  C025  FFD9         	movff	reverseShort@mR,fsr2l
  3949   003E90  C026  FFDA         	movff	reverseShort@mR+1,fsr2h
  3950   003E94  6ADF               	clrf	indf2,c
  3951   003E96  0012               	return		;funcret
  3952   003E98                     __end_of_reverseShort:
  3953                           	callstack 0
  3954                           
  3955 ;; *************** function _returnHome *****************
  3956 ;; Defined at:
  3957 ;;		line 189 in file "dc_motor.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  mL              2   48[COMRAM] PTR struct DC_motor
  3960 ;;		 -> main@motorL(10), 
  3961 ;;  mR              2   50[COMRAM] PTR struct DC_motor
  3962 ;;		 -> main@motorR(10), 
  3963 ;;  moveSequence    2   52[COMRAM] PTR unsigned char 
  3964 ;;		 -> main@moveSequence(40), 
  3965 ;;  straightTime    2   54[COMRAM] PTR unsigned int 
  3966 ;;		 -> main@straightTime(82), 
  3967 ;;  curMove         1   56[COMRAM] unsigned char 
  3968 ;;  straightSpee    1   57[COMRAM] unsigned char 
  3969 ;;  reverseDurat    1   58[COMRAM] unsigned char 
  3970 ;;  straightRamp    1   59[COMRAM] unsigned char 
  3971 ;;  turnSpeed       1   60[COMRAM] unsigned char 
  3972 ;;  turnDuration    1   61[COMRAM] unsigned char 
  3973 ;;  turnRamp        1   62[COMRAM] unsigned char 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  i               1   67[COMRAM] unsigned char 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3985 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3987 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3988 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3989 ;;Total ram usage:       20 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; Hardware stack levels required when called: 8
  3992 ;; This function calls:
  3993 ;;		_fullSpeedAhead
  3994 ;;		_get16bitTMR0val
  3995 ;;		_resetTimer
  3996 ;;		_reverseOneSquare
  3997 ;;		_stop
  3998 ;;		_turnLeft
  3999 ;;		_turnRight
  4000 ;; This function is called by:
  4001 ;;		_move
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text4
  4006   00162C                     __ptext4:
  4007                           	callstack 0
  4008   00162C                     _returnHome:
  4009                           	callstack 21
  4010   00162C                     
  4011                           ;dc_motor.c: 189: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reverseDu
      +                          ration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned
      +                           char turnRamp);dc_motor.c: 190: {;dc_motor.c: 191:     turnLeft(mL, mR, turnSpeed, turn
      +                          Duration, turnRamp);
  4012   00162C  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4013   001630  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4014   001634  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4015   001638  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4016   00163C  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4017   001640  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4018   001644  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4019   001648  EC26  F022         	call	_turnLeft	;wreg free
  4020   00164C                     
  4021                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4022   00164C  0E05               	movlw	5
  4023   00164E  6E41               	movwf	(??_returnHome+1)^0,c
  4024   001650  0E0F               	movlw	15
  4025   001652  6E40               	movwf	??_returnHome^0,c
  4026   001654  0EF1               	movlw	241
  4027   001656                     u5967:
  4028   001656  2EE8               	decfsz	wreg,f,c
  4029   001658  D7FE               	bra	u5967
  4030   00165A  2E40               	decfsz	??_returnHome^0,f,c
  4031   00165C  D7FC               	bra	u5967
  4032   00165E  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4033   001660  D7FA               	bra	u5967
  4034   001662  0000               	nop	
  4035   001664                     
  4036                           ;dc_motor.c: 193:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4037   001664  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4038   001668  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4039   00166C  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4040   001670  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4041   001674  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4042   001678  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4043   00167C  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4044   001680  EC26  F022         	call	_turnLeft	;wreg free
  4045                           
  4046                           ;dc_motor.c: 194:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4047   001684  0E05               	movlw	5
  4048   001686  6E41               	movwf	(??_returnHome+1)^0,c
  4049   001688  0E0F               	movlw	15
  4050   00168A  6E40               	movwf	??_returnHome^0,c
  4051   00168C  0EF1               	movlw	241
  4052   00168E                     u5977:
  4053   00168E  2EE8               	decfsz	wreg,f,c
  4054   001690  D7FE               	bra	u5977
  4055   001692  2E40               	decfsz	??_returnHome^0,f,c
  4056   001694  D7FC               	bra	u5977
  4057   001696  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4058   001698  D7FA               	bra	u5977
  4059   00169A  0000               	nop	
  4060   00169C                     
  4061                           ;dc_motor.c: 195:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4062   00169C  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4063   0016A0  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4064   0016A4  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4065   0016A8  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4066   0016AC  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4067   0016B0  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4068   0016B4  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4069   0016B8  EC26  F022         	call	_turnLeft	;wreg free
  4070   0016BC                     
  4071                           ;dc_motor.c: 196:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4072   0016BC  0E05               	movlw	5
  4073   0016BE  6E41               	movwf	(??_returnHome+1)^0,c
  4074   0016C0  0E0F               	movlw	15
  4075   0016C2  6E40               	movwf	??_returnHome^0,c
  4076   0016C4  0EF1               	movlw	241
  4077   0016C6                     u5987:
  4078   0016C6  2EE8               	decfsz	wreg,f,c
  4079   0016C8  D7FE               	bra	u5987
  4080   0016CA  2E40               	decfsz	??_returnHome^0,f,c
  4081   0016CC  D7FC               	bra	u5987
  4082   0016CE  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4083   0016D0  D7FA               	bra	u5987
  4084   0016D2  0000               	nop	
  4085                           
  4086                           ;dc_motor.c: 197:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4087   0016D4  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4088   0016D8  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4089   0016DC  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4090   0016E0  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4091   0016E4  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4092   0016E8  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4093   0016EC  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4094   0016F0  EC26  F022         	call	_turnLeft	;wreg free
  4095   0016F4                     
  4096                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4097   0016F4  0E05               	movlw	5
  4098   0016F6  6E41               	movwf	(??_returnHome+1)^0,c
  4099   0016F8  0E0F               	movlw	15
  4100   0016FA  6E40               	movwf	??_returnHome^0,c
  4101   0016FC  0EF1               	movlw	241
  4102   0016FE                     u5997:
  4103   0016FE  2EE8               	decfsz	wreg,f,c
  4104   001700  D7FE               	bra	u5997
  4105   001702  2E40               	decfsz	??_returnHome^0,f,c
  4106   001704  D7FC               	bra	u5997
  4107   001706  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4108   001708  D7FA               	bra	u5997
  4109   00170A  0000               	nop	
  4110   00170C                     
  4111                           ;dc_motor.c: 199:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4112   00170C  C031  F023         	movff	returnHome@mL,fullSpeedAhead@mL
  4113   001710  C032  F024         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4114   001714  C033  F025         	movff	returnHome@mR,fullSpeedAhead@mR
  4115   001718  C034  F026         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4116   00171C  C03A  F027         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4117   001720  C03C  F028         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4118   001724  ECD3  F024         	call	_fullSpeedAhead	;wreg free
  4119   001728                     
  4120                           ;dc_motor.c: 200:     resetTimer();
  4121   001728  EC81  F029         	call	_resetTimer	;wreg free
  4122   00172C                     l5127:
  4123   00172C  5039               	movf	returnHome@curMove^0,w,c
  4124   00172E  0D02               	mullw	2
  4125   001730  CFF3 F040          	movff	prodl,??_returnHome
  4126   001734  CFF4 F041          	movff	prodh,??_returnHome+1
  4127   001738  5040               	movf	??_returnHome^0,w,c
  4128   00173A  2437               	addwf	returnHome@straightTime^0,w,c
  4129   00173C  6ED9               	movwf	fsr2l,c
  4130   00173E  5041               	movf	(??_returnHome+1)^0,w,c
  4131   001740  2038               	addwfc	(returnHome@straightTime+1)^0,w,c
  4132   001742  6EDA               	movwf	fsr2h,c
  4133   001744  EC92  F028         	call	_get16bitTMR0val	;wreg free
  4134   001748  50DE               	movf	postinc2,w,c
  4135   00174A  5C10               	subwf	?_get16bitTMR0val^0,w,c
  4136   00174C  50DE               	movf	postinc2,w,c
  4137   00174E  5811               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4138   001750  A0D8               	btfss	status,0,c
  4139   001752  EFAD  F00B         	goto	u4381
  4140   001756  EFAF  F00B         	goto	u4380
  4141   00175A                     u4381:
  4142   00175A  EF96  F00B         	goto	l5127
  4143   00175E                     u4380:
  4144   00175E                     
  4145                           ;dc_motor.c: 202:     stop(mL, mR, straightRamp);
  4146   00175E  C031  F023         	movff	returnHome@mL,stop@mL
  4147   001762  C032  F024         	movff	returnHome@mL+1,stop@mL+1
  4148   001766  C033  F025         	movff	returnHome@mR,stop@mR
  4149   00176A  C034  F026         	movff	returnHome@mR+1,stop@mR+1
  4150   00176E  C03C  F027         	movff	returnHome@straightRamp,stop@straightRamp
  4151   001772  EC4F  F024         	call	_stop	;wreg free
  4152   001776                     
  4153                           ;dc_motor.c: 204:     char i=curMove;
  4154   001776  C039  F044         	movff	returnHome@curMove,returnHome@i
  4155                           
  4156                           ;dc_motor.c: 205:     while (i>0) {
  4157   00177A  EF6B  F00E         	goto	l5219
  4158   00177E                     l5133:
  4159                           
  4160                           ;dc_motor.c: 206:         i--;
  4161   00177E  0644               	decf	returnHome@i^0,f,c
  4162   001780                     
  4163                           ;dc_motor.c: 208:         if (moveSequence[i] == 1) {
  4164   001780  5044               	movf	returnHome@i^0,w,c
  4165   001782  2435               	addwf	returnHome@moveSequence^0,w,c
  4166   001784  6ED9               	movwf	fsr2l,c
  4167   001786  0E00               	movlw	0
  4168   001788  2036               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4169   00178A  6EDA               	movwf	fsr2h,c
  4170   00178C  04DE               	decf	postinc2,w,c
  4171   00178E  A4D8               	btfss	status,2,c
  4172   001790  EFCC  F00B         	goto	u4391
  4173   001794  EFCE  F00B         	goto	u4390
  4174   001798                     u4391:
  4175   001798  EF08  F00C         	goto	l5143
  4176   00179C                     u4390:
  4177   00179C                     
  4178                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4179   00179C  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4180   0017A0  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4181   0017A4  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4182   0017A8  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4183   0017AC  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4184   0017B0  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4185   0017B4  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4186   0017B8  EC26  F022         	call	_turnLeft	;wreg free
  4187   0017BC                     
  4188                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4189   0017BC  0E05               	movlw	5
  4190   0017BE  6E41               	movwf	(??_returnHome+1)^0,c
  4191   0017C0  0E0F               	movlw	15
  4192   0017C2  6E40               	movwf	??_returnHome^0,c
  4193   0017C4  0EF1               	movlw	241
  4194   0017C6                     u6007:
  4195   0017C6  2EE8               	decfsz	wreg,f,c
  4196   0017C8  D7FE               	bra	u6007
  4197   0017CA  2E40               	decfsz	??_returnHome^0,f,c
  4198   0017CC  D7FC               	bra	u6007
  4199   0017CE  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4200   0017D0  D7FA               	bra	u6007
  4201   0017D2  0000               	nop	
  4202   0017D4                     
  4203                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4204   0017D4  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4205   0017D8  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4206   0017DC  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4207   0017E0  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4208   0017E4  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4209   0017E8  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4210   0017EC  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4211   0017F0  EC26  F022         	call	_turnLeft	;wreg free
  4212                           
  4213                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4214   0017F4  0E05               	movlw	5
  4215   0017F6  6E41               	movwf	(??_returnHome+1)^0,c
  4216   0017F8  0E0F               	movlw	15
  4217   0017FA  6E40               	movwf	??_returnHome^0,c
  4218   0017FC  0EF1               	movlw	241
  4219   0017FE                     u6017:
  4220   0017FE  2EE8               	decfsz	wreg,f,c
  4221   001800  D7FE               	bra	u6017
  4222   001802  2E40               	decfsz	??_returnHome^0,f,c
  4223   001804  D7FC               	bra	u6017
  4224   001806  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4225   001808  D7FA               	bra	u6017
  4226   00180A  0000               	nop	
  4227                           
  4228                           ;dc_motor.c: 213:         }
  4229   00180C  EF36  F00E         	goto	l582
  4230   001810                     l5143:
  4231   001810  5044               	movf	returnHome@i^0,w,c
  4232   001812  2435               	addwf	returnHome@moveSequence^0,w,c
  4233   001814  6ED9               	movwf	fsr2l,c
  4234   001816  0E00               	movlw	0
  4235   001818  2036               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4236   00181A  6EDA               	movwf	fsr2h,c
  4237   00181C  0E02               	movlw	2
  4238   00181E  18DE               	xorwf	postinc2,w,c
  4239   001820  A4D8               	btfss	status,2,c
  4240   001822  EF15  F00C         	goto	u4401
  4241   001826  EF17  F00C         	goto	u4400
  4242   00182A                     u4401:
  4243   00182A  EF51  F00C         	goto	l5151
  4244   00182E                     u4400:
  4245   00182E                     
  4246                           ;dc_motor.c: 216:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4247   00182E  C031  F023         	movff	returnHome@mL,turnRight@mL
  4248   001832  C032  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4249   001836  C033  F025         	movff	returnHome@mR,turnRight@mR
  4250   00183A  C034  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4251   00183E  C03D  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4252   001842  C03E  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4253   001846  C03F  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4254   00184A  EC39  F021         	call	_turnRight	;wreg free
  4255   00184E                     
  4256                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4257   00184E  0E05               	movlw	5
  4258   001850  6E41               	movwf	(??_returnHome+1)^0,c
  4259   001852  0E0F               	movlw	15
  4260   001854  6E40               	movwf	??_returnHome^0,c
  4261   001856  0EF1               	movlw	241
  4262   001858                     u6027:
  4263   001858  2EE8               	decfsz	wreg,f,c
  4264   00185A  D7FE               	bra	u6027
  4265   00185C  2E40               	decfsz	??_returnHome^0,f,c
  4266   00185E  D7FC               	bra	u6027
  4267   001860  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4268   001862  D7FA               	bra	u6027
  4269   001864  0000               	nop	
  4270   001866                     
  4271                           ;dc_motor.c: 218:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4272   001866  C031  F023         	movff	returnHome@mL,turnRight@mL
  4273   00186A  C032  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4274   00186E  C033  F025         	movff	returnHome@mR,turnRight@mR
  4275   001872  C034  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4276   001876  C03D  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4277   00187A  C03E  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4278   00187E  C03F  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4279   001882  EC39  F021         	call	_turnRight	;wreg free
  4280                           
  4281                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4282   001886  0E05               	movlw	5
  4283   001888  6E41               	movwf	(??_returnHome+1)^0,c
  4284   00188A  0E0F               	movlw	15
  4285   00188C  6E40               	movwf	??_returnHome^0,c
  4286   00188E  0EF1               	movlw	241
  4287   001890                     u6037:
  4288   001890  2EE8               	decfsz	wreg,f,c
  4289   001892  D7FE               	bra	u6037
  4290   001894  2E40               	decfsz	??_returnHome^0,f,c
  4291   001896  D7FC               	bra	u6037
  4292   001898  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4293   00189A  D7FA               	bra	u6037
  4294   00189C  0000               	nop	
  4295                           
  4296                           ;dc_motor.c: 220:         }
  4297   00189E  EF36  F00E         	goto	l582
  4298   0018A2                     l5151:
  4299   0018A2  5044               	movf	returnHome@i^0,w,c
  4300   0018A4  2435               	addwf	returnHome@moveSequence^0,w,c
  4301   0018A6  6ED9               	movwf	fsr2l,c
  4302   0018A8  0E00               	movlw	0
  4303   0018AA  2036               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4304   0018AC  6EDA               	movwf	fsr2h,c
  4305   0018AE  0E03               	movlw	3
  4306   0018B0  18DE               	xorwf	postinc2,w,c
  4307   0018B2  A4D8               	btfss	status,2,c
  4308   0018B4  EF5E  F00C         	goto	u4411
  4309   0018B8  EF60  F00C         	goto	u4410
  4310   0018BC                     u4411:
  4311   0018BC  EFD2  F00C         	goto	l5165
  4312   0018C0                     u4410:
  4313   0018C0                     
  4314                           ;dc_motor.c: 223:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4315   0018C0  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4316   0018C4  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4317   0018C8  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4318   0018CC  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4319   0018D0  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4320   0018D4  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4321   0018D8  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4322   0018DC  EC26  F022         	call	_turnLeft	;wreg free
  4323   0018E0                     
  4324                           ;dc_motor.c: 224:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4325   0018E0  0E05               	movlw	5
  4326   0018E2  6E41               	movwf	(??_returnHome+1)^0,c
  4327   0018E4  0E0F               	movlw	15
  4328   0018E6  6E40               	movwf	??_returnHome^0,c
  4329   0018E8  0EF1               	movlw	241
  4330   0018EA                     u6047:
  4331   0018EA  2EE8               	decfsz	wreg,f,c
  4332   0018EC  D7FE               	bra	u6047
  4333   0018EE  2E40               	decfsz	??_returnHome^0,f,c
  4334   0018F0  D7FC               	bra	u6047
  4335   0018F2  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4336   0018F4  D7FA               	bra	u6047
  4337   0018F6  0000               	nop	
  4338   0018F8                     
  4339                           ;dc_motor.c: 225:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4340   0018F8  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4341   0018FC  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4342   001900  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4343   001904  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4344   001908  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4345   00190C  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4346   001910  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4347   001914  EC26  F022         	call	_turnLeft	;wreg free
  4348                           
  4349                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4350   001918  0E05               	movlw	5
  4351   00191A  6E41               	movwf	(??_returnHome+1)^0,c
  4352   00191C  0E0F               	movlw	15
  4353   00191E  6E40               	movwf	??_returnHome^0,c
  4354   001920  0EF1               	movlw	241
  4355   001922                     u6057:
  4356   001922  2EE8               	decfsz	wreg,f,c
  4357   001924  D7FE               	bra	u6057
  4358   001926  2E40               	decfsz	??_returnHome^0,f,c
  4359   001928  D7FC               	bra	u6057
  4360   00192A  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4361   00192C  D7FA               	bra	u6057
  4362   00192E  0000               	nop	
  4363   001930                     
  4364                           ;dc_motor.c: 227:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4365   001930  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4366   001934  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4367   001938  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4368   00193C  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4369   001940  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4370   001944  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4371   001948  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4372   00194C  EC26  F022         	call	_turnLeft	;wreg free
  4373   001950                     
  4374                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4375   001950  0E05               	movlw	5
  4376   001952  6E41               	movwf	(??_returnHome+1)^0,c
  4377   001954  0E0F               	movlw	15
  4378   001956  6E40               	movwf	??_returnHome^0,c
  4379   001958  0EF1               	movlw	241
  4380   00195A                     u6067:
  4381   00195A  2EE8               	decfsz	wreg,f,c
  4382   00195C  D7FE               	bra	u6067
  4383   00195E  2E40               	decfsz	??_returnHome^0,f,c
  4384   001960  D7FC               	bra	u6067
  4385   001962  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4386   001964  D7FA               	bra	u6067
  4387   001966  0000               	nop	
  4388                           
  4389                           ;dc_motor.c: 229:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4390   001968  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4391   00196C  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4392   001970  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4393   001974  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4394   001978  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4395   00197C  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4396   001980  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4397   001984  EC26  F022         	call	_turnLeft	;wreg free
  4398   001988                     l5163:
  4399                           
  4400                           ;dc_motor.c: 230:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4401   001988  0E05               	movlw	5
  4402   00198A  6E41               	movwf	(??_returnHome+1)^0,c
  4403   00198C  0E0F               	movlw	15
  4404   00198E  6E40               	movwf	??_returnHome^0,c
  4405   001990  0EF1               	movlw	241
  4406   001992                     u6077:
  4407   001992  2EE8               	decfsz	wreg,f,c
  4408   001994  D7FE               	bra	u6077
  4409   001996  2E40               	decfsz	??_returnHome^0,f,c
  4410   001998  D7FC               	bra	u6077
  4411   00199A  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4412   00199C  D7FA               	bra	u6077
  4413   00199E  0000               	nop	
  4414                           
  4415                           ;dc_motor.c: 231:         }
  4416   0019A0  EF36  F00E         	goto	l582
  4417   0019A4                     l5165:
  4418   0019A4  5044               	movf	returnHome@i^0,w,c
  4419   0019A6  2435               	addwf	returnHome@moveSequence^0,w,c
  4420   0019A8  6ED9               	movwf	fsr2l,c
  4421   0019AA  0E00               	movlw	0
  4422   0019AC  2036               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4423   0019AE  6EDA               	movwf	fsr2h,c
  4424   0019B0  0E04               	movlw	4
  4425   0019B2  18DE               	xorwf	postinc2,w,c
  4426   0019B4  A4D8               	btfss	status,2,c
  4427   0019B6  EFDF  F00C         	goto	u4421
  4428   0019BA  EFE1  F00C         	goto	u4420
  4429   0019BE                     u4421:
  4430   0019BE  EF2B  F00D         	goto	l5177
  4431   0019C2                     u4420:
  4432   0019C2                     
  4433                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4434   0019C2  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4435   0019C6  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4436   0019CA  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4437   0019CE  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4438   0019D2  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4439   0019D6  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4440   0019DA  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4441   0019DE  EC26  F022         	call	_turnLeft	;wreg free
  4442   0019E2                     
  4443                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4444   0019E2  0E05               	movlw	5
  4445   0019E4  6E41               	movwf	(??_returnHome+1)^0,c
  4446   0019E6  0E0F               	movlw	15
  4447   0019E8  6E40               	movwf	??_returnHome^0,c
  4448   0019EA  0EF1               	movlw	241
  4449   0019EC                     u6087:
  4450   0019EC  2EE8               	decfsz	wreg,f,c
  4451   0019EE  D7FE               	bra	u6087
  4452   0019F0  2E40               	decfsz	??_returnHome^0,f,c
  4453   0019F2  D7FC               	bra	u6087
  4454   0019F4  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4455   0019F6  D7FA               	bra	u6087
  4456   0019F8  0000               	nop	
  4457   0019FA                     
  4458                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4459   0019FA  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4460   0019FE  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4461   001A02  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4462   001A06  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4463   001A0A  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4464   001A0E  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4465   001A12  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4466   001A16  EC26  F022         	call	_turnLeft	;wreg free
  4467                           
  4468                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4469   001A1A  0E05               	movlw	5
  4470   001A1C  6E41               	movwf	(??_returnHome+1)^0,c
  4471   001A1E  0E0F               	movlw	15
  4472   001A20  6E40               	movwf	??_returnHome^0,c
  4473   001A22  0EF1               	movlw	241
  4474   001A24                     u6097:
  4475   001A24  2EE8               	decfsz	wreg,f,c
  4476   001A26  D7FE               	bra	u6097
  4477   001A28  2E40               	decfsz	??_returnHome^0,f,c
  4478   001A2A  D7FC               	bra	u6097
  4479   001A2C  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4480   001A2E  D7FA               	bra	u6097
  4481   001A30  0000               	nop	
  4482   001A32                     
  4483                           ;dc_motor.c: 238:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4484   001A32  C031  F023         	movff	returnHome@mL,reverseOneSquare@mL
  4485   001A36  C032  F024         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4486   001A3A  C033  F025         	movff	returnHome@mR,reverseOneSquare@mR
  4487   001A3E  C034  F026         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4488   001A42  C03A  F027         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4489   001A46  C03B  F028         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4490   001A4A  C03C  F029         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4491   001A4E  EC43  F020         	call	_reverseOneSquare	;wreg free
  4492   001A52  EFC4  F00C         	goto	l5163
  4493   001A56                     l5177:
  4494   001A56  5044               	movf	returnHome@i^0,w,c
  4495   001A58  2435               	addwf	returnHome@moveSequence^0,w,c
  4496   001A5A  6ED9               	movwf	fsr2l,c
  4497   001A5C  0E00               	movlw	0
  4498   001A5E  2036               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4499   001A60  6EDA               	movwf	fsr2h,c
  4500   001A62  0E05               	movlw	5
  4501   001A64  18DE               	xorwf	postinc2,w,c
  4502   001A66  A4D8               	btfss	status,2,c
  4503   001A68  EF38  F00D         	goto	u4431
  4504   001A6C  EF3A  F00D         	goto	u4430
  4505   001A70                     u4431:
  4506   001A70  EF84  F00D         	goto	l5189
  4507   001A74                     u4430:
  4508   001A74                     
  4509                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4510   001A74  C031  F023         	movff	returnHome@mL,turnRight@mL
  4511   001A78  C032  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4512   001A7C  C033  F025         	movff	returnHome@mR,turnRight@mR
  4513   001A80  C034  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4514   001A84  C03D  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4515   001A88  C03E  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4516   001A8C  C03F  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4517   001A90  EC39  F021         	call	_turnRight	;wreg free
  4518   001A94                     
  4519                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4520   001A94  0E05               	movlw	5
  4521   001A96  6E41               	movwf	(??_returnHome+1)^0,c
  4522   001A98  0E0F               	movlw	15
  4523   001A9A  6E40               	movwf	??_returnHome^0,c
  4524   001A9C  0EF1               	movlw	241
  4525   001A9E                     u6107:
  4526   001A9E  2EE8               	decfsz	wreg,f,c
  4527   001AA0  D7FE               	bra	u6107
  4528   001AA2  2E40               	decfsz	??_returnHome^0,f,c
  4529   001AA4  D7FC               	bra	u6107
  4530   001AA6  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4531   001AA8  D7FA               	bra	u6107
  4532   001AAA  0000               	nop	
  4533   001AAC                     
  4534                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4535   001AAC  C031  F023         	movff	returnHome@mL,turnRight@mL
  4536   001AB0  C032  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4537   001AB4  C033  F025         	movff	returnHome@mR,turnRight@mR
  4538   001AB8  C034  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4539   001ABC  C03D  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4540   001AC0  C03E  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4541   001AC4  C03F  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4542   001AC8  EC39  F021         	call	_turnRight	;wreg free
  4543                           
  4544                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4545   001ACC  0E05               	movlw	5
  4546   001ACE  6E41               	movwf	(??_returnHome+1)^0,c
  4547   001AD0  0E0F               	movlw	15
  4548   001AD2  6E40               	movwf	??_returnHome^0,c
  4549   001AD4  0EF1               	movlw	241
  4550   001AD6                     u6117:
  4551   001AD6  2EE8               	decfsz	wreg,f,c
  4552   001AD8  D7FE               	bra	u6117
  4553   001ADA  2E40               	decfsz	??_returnHome^0,f,c
  4554   001ADC  D7FC               	bra	u6117
  4555   001ADE  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4556   001AE0  D7FA               	bra	u6117
  4557   001AE2  0000               	nop	
  4558   001AE4                     
  4559                           ;dc_motor.c: 247:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4560   001AE4  C031  F023         	movff	returnHome@mL,reverseOneSquare@mL
  4561   001AE8  C032  F024         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4562   001AEC  C033  F025         	movff	returnHome@mR,reverseOneSquare@mR
  4563   001AF0  C034  F026         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4564   001AF4  C03A  F027         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4565   001AF8  C03B  F028         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4566   001AFC  C03C  F029         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4567   001B00  EC43  F020         	call	_reverseOneSquare	;wreg free
  4568   001B04  EFC4  F00C         	goto	l5163
  4569   001B08                     l5189:
  4570   001B08  5044               	movf	returnHome@i^0,w,c
  4571   001B0A  2435               	addwf	returnHome@moveSequence^0,w,c
  4572   001B0C  6ED9               	movwf	fsr2l,c
  4573   001B0E  0E00               	movlw	0
  4574   001B10  2036               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4575   001B12  6EDA               	movwf	fsr2h,c
  4576   001B14  0E06               	movlw	6
  4577   001B16  18DE               	xorwf	postinc2,w,c
  4578   001B18  A4D8               	btfss	status,2,c
  4579   001B1A  EF91  F00D         	goto	u4441
  4580   001B1E  EF93  F00D         	goto	u4440
  4581   001B22                     u4441:
  4582   001B22  EFDD  F00D         	goto	l5201
  4583   001B26                     u4440:
  4584   001B26                     
  4585                           ;dc_motor.c: 252:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4586   001B26  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4587   001B2A  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4588   001B2E  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4589   001B32  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4590   001B36  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4591   001B3A  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4592   001B3E  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4593   001B42  EC26  F022         	call	_turnLeft	;wreg free
  4594   001B46                     
  4595                           ;dc_motor.c: 253:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4596   001B46  0E05               	movlw	5
  4597   001B48  6E41               	movwf	(??_returnHome+1)^0,c
  4598   001B4A  0E0F               	movlw	15
  4599   001B4C  6E40               	movwf	??_returnHome^0,c
  4600   001B4E  0EF1               	movlw	241
  4601   001B50                     u6127:
  4602   001B50  2EE8               	decfsz	wreg,f,c
  4603   001B52  D7FE               	bra	u6127
  4604   001B54  2E40               	decfsz	??_returnHome^0,f,c
  4605   001B56  D7FC               	bra	u6127
  4606   001B58  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4607   001B5A  D7FA               	bra	u6127
  4608   001B5C  0000               	nop	
  4609   001B5E                     
  4610                           ;dc_motor.c: 254:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4611   001B5E  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4612   001B62  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4613   001B66  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4614   001B6A  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4615   001B6E  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4616   001B72  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4617   001B76  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4618   001B7A  EC26  F022         	call	_turnLeft	;wreg free
  4619                           
  4620                           ;dc_motor.c: 255:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4621   001B7E  0E05               	movlw	5
  4622   001B80  6E41               	movwf	(??_returnHome+1)^0,c
  4623   001B82  0E0F               	movlw	15
  4624   001B84  6E40               	movwf	??_returnHome^0,c
  4625   001B86  0EF1               	movlw	241
  4626   001B88                     u6137:
  4627   001B88  2EE8               	decfsz	wreg,f,c
  4628   001B8A  D7FE               	bra	u6137
  4629   001B8C  2E40               	decfsz	??_returnHome^0,f,c
  4630   001B8E  D7FC               	bra	u6137
  4631   001B90  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4632   001B92  D7FA               	bra	u6137
  4633   001B94  0000               	nop	
  4634   001B96                     
  4635                           ;dc_motor.c: 256:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4636   001B96  C031  F023         	movff	returnHome@mL,turnLeft@mL
  4637   001B9A  C032  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4638   001B9E  C033  F025         	movff	returnHome@mR,turnLeft@mR
  4639   001BA2  C034  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4640   001BA6  C03D  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4641   001BAA  C03E  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4642   001BAE  C03F  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4643   001BB2  EC26  F022         	call	_turnLeft	;wreg free
  4644   001BB6  EFC4  F00C         	goto	l5163
  4645   001BBA                     l5201:
  4646   001BBA  5044               	movf	returnHome@i^0,w,c
  4647   001BBC  2435               	addwf	returnHome@moveSequence^0,w,c
  4648   001BBE  6ED9               	movwf	fsr2l,c
  4649   001BC0  0E00               	movlw	0
  4650   001BC2  2036               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4651   001BC4  6EDA               	movwf	fsr2h,c
  4652   001BC6  0E07               	movlw	7
  4653   001BC8  18DE               	xorwf	postinc2,w,c
  4654   001BCA  A4D8               	btfss	status,2,c
  4655   001BCC  EFEA  F00D         	goto	u4451
  4656   001BD0  EFEC  F00D         	goto	u4450
  4657   001BD4                     u4451:
  4658   001BD4  EF36  F00E         	goto	l588
  4659   001BD8                     u4450:
  4660   001BD8                     
  4661                           ;dc_motor.c: 261:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4662   001BD8  C031  F023         	movff	returnHome@mL,turnRight@mL
  4663   001BDC  C032  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4664   001BE0  C033  F025         	movff	returnHome@mR,turnRight@mR
  4665   001BE4  C034  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4666   001BE8  C03D  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4667   001BEC  C03E  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4668   001BF0  C03F  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4669   001BF4  EC39  F021         	call	_turnRight	;wreg free
  4670   001BF8                     
  4671                           ;dc_motor.c: 262:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4672   001BF8  0E05               	movlw	5
  4673   001BFA  6E41               	movwf	(??_returnHome+1)^0,c
  4674   001BFC  0E0F               	movlw	15
  4675   001BFE  6E40               	movwf	??_returnHome^0,c
  4676   001C00  0EF1               	movlw	241
  4677   001C02                     u6147:
  4678   001C02  2EE8               	decfsz	wreg,f,c
  4679   001C04  D7FE               	bra	u6147
  4680   001C06  2E40               	decfsz	??_returnHome^0,f,c
  4681   001C08  D7FC               	bra	u6147
  4682   001C0A  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4683   001C0C  D7FA               	bra	u6147
  4684   001C0E  0000               	nop	
  4685   001C10                     
  4686                           ;dc_motor.c: 263:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4687   001C10  C031  F023         	movff	returnHome@mL,turnRight@mL
  4688   001C14  C032  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4689   001C18  C033  F025         	movff	returnHome@mR,turnRight@mR
  4690   001C1C  C034  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4691   001C20  C03D  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4692   001C24  C03E  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4693   001C28  C03F  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4694   001C2C  EC39  F021         	call	_turnRight	;wreg free
  4695                           
  4696                           ;dc_motor.c: 264:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4697   001C30  0E05               	movlw	5
  4698   001C32  6E41               	movwf	(??_returnHome+1)^0,c
  4699   001C34  0E0F               	movlw	15
  4700   001C36  6E40               	movwf	??_returnHome^0,c
  4701   001C38  0EF1               	movlw	241
  4702   001C3A                     u6157:
  4703   001C3A  2EE8               	decfsz	wreg,f,c
  4704   001C3C  D7FE               	bra	u6157
  4705   001C3E  2E40               	decfsz	??_returnHome^0,f,c
  4706   001C40  D7FC               	bra	u6157
  4707   001C42  2E41               	decfsz	(??_returnHome+1)^0,f,c
  4708   001C44  D7FA               	bra	u6157
  4709   001C46  0000               	nop	
  4710   001C48                     
  4711                           ;dc_motor.c: 265:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4712   001C48  C031  F023         	movff	returnHome@mL,turnRight@mL
  4713   001C4C  C032  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4714   001C50  C033  F025         	movff	returnHome@mR,turnRight@mR
  4715   001C54  C034  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4716   001C58  C03D  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4717   001C5C  C03E  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4718   001C60  C03F  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4719   001C64  EC39  F021         	call	_turnRight	;wreg free
  4720   001C68  EFC4  F00C         	goto	l5163
  4721   001C6C                     l588:
  4722   001C6C                     l582:
  4723                           
  4724                           ;dc_motor.c: 269:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4725   001C6C  C031  F023         	movff	returnHome@mL,fullSpeedAhead@mL
  4726   001C70  C032  F024         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4727   001C74  C033  F025         	movff	returnHome@mR,fullSpeedAhead@mR
  4728   001C78  C034  F026         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4729   001C7C  C03A  F027         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4730   001C80  C03C  F028         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4731   001C84  ECD3  F024         	call	_fullSpeedAhead	;wreg free
  4732   001C88                     
  4733                           ;dc_motor.c: 270:         resetTimer();
  4734   001C88  EC81  F029         	call	_resetTimer	;wreg free
  4735   001C8C                     l5215:
  4736   001C8C  5044               	movf	returnHome@i^0,w,c
  4737   001C8E  0D02               	mullw	2
  4738   001C90  CFF3 F040          	movff	prodl,??_returnHome
  4739   001C94  CFF4 F041          	movff	prodh,??_returnHome+1
  4740   001C98  5040               	movf	??_returnHome^0,w,c
  4741   001C9A  2437               	addwf	returnHome@straightTime^0,w,c
  4742   001C9C  6ED9               	movwf	fsr2l,c
  4743   001C9E  5041               	movf	(??_returnHome+1)^0,w,c
  4744   001CA0  2038               	addwfc	(returnHome@straightTime+1)^0,w,c
  4745   001CA2  6EDA               	movwf	fsr2h,c
  4746   001CA4  EC92  F028         	call	_get16bitTMR0val	;wreg free
  4747   001CA8  50DE               	movf	postinc2,w,c
  4748   001CAA  5C10               	subwf	?_get16bitTMR0val^0,w,c
  4749   001CAC  50DE               	movf	postinc2,w,c
  4750   001CAE  5811               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4751   001CB0  A0D8               	btfss	status,0,c
  4752   001CB2  EF5D  F00E         	goto	u4461
  4753   001CB6  EF5F  F00E         	goto	u4460
  4754   001CBA                     u4461:
  4755   001CBA  EF46  F00E         	goto	l5215
  4756   001CBE                     u4460:
  4757   001CBE                     
  4758                           ;dc_motor.c: 272:         stop(mL, mR, straightRamp);
  4759   001CBE  C031  F023         	movff	returnHome@mL,stop@mL
  4760   001CC2  C032  F024         	movff	returnHome@mL+1,stop@mL+1
  4761   001CC6  C033  F025         	movff	returnHome@mR,stop@mR
  4762   001CCA  C034  F026         	movff	returnHome@mR+1,stop@mR+1
  4763   001CCE  C03C  F027         	movff	returnHome@straightRamp,stop@straightRamp
  4764   001CD2  EC4F  F024         	call	_stop	;wreg free
  4765   001CD6                     l5219:
  4766                           
  4767                           ;dc_motor.c: 205:     while (i>0) {
  4768   001CD6  5044               	movf	returnHome@i^0,w,c
  4769   001CD8  A4D8               	btfss	status,2,c
  4770   001CDA  EF71  F00E         	goto	u4471
  4771   001CDE  EF73  F00E         	goto	u4470
  4772   001CE2                     u4471:
  4773   001CE2  EFBF  F00B         	goto	l5133
  4774   001CE6                     u4470:
  4775   001CE6  0012               	return		;funcret
  4776   001CE8                     __end_of_returnHome:
  4777                           	callstack 0
  4778                           
  4779 ;; *************** function _lostReturnHome *****************
  4780 ;; Defined at:
  4781 ;;		line 277 in file "dc_motor.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  mL              2   48[COMRAM] PTR struct DC_motor
  4784 ;;		 -> main@motorL(10), 
  4785 ;;  mR              2   50[COMRAM] PTR struct DC_motor
  4786 ;;		 -> main@motorR(10), 
  4787 ;;  moveSequence    2   52[COMRAM] PTR unsigned char 
  4788 ;;		 -> main@moveSequence(40), 
  4789 ;;  straightTime    2   54[COMRAM] PTR unsigned int 
  4790 ;;		 -> main@straightTime(82), 
  4791 ;;  curMove         1   56[COMRAM] unsigned char 
  4792 ;;  straightSpee    1   57[COMRAM] unsigned char 
  4793 ;;  reverseDurat    1   58[COMRAM] unsigned char 
  4794 ;;  straightRamp    1   59[COMRAM] unsigned char 
  4795 ;;  turnSpeed       1   60[COMRAM] unsigned char 
  4796 ;;  turnDuration    1   61[COMRAM] unsigned char 
  4797 ;;  turnRamp        1   62[COMRAM] unsigned char 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  i               1   67[COMRAM] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4809 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4811 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4812 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;Total ram usage:       20 bytes
  4814 ;; Hardware stack levels used: 1
  4815 ;; Hardware stack levels required when called: 8
  4816 ;; This function calls:
  4817 ;;		_fullSpeedAhead
  4818 ;;		_get16bitTMR0val
  4819 ;;		_resetTimer
  4820 ;;		_reverseOneSquare
  4821 ;;		_stop
  4822 ;;		_turnLeft
  4823 ;;		_turnRight
  4824 ;; This function is called by:
  4825 ;;		_main
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           	psect	text5
  4830   001CE8                     __ptext5:
  4831                           	callstack 0
  4832   001CE8                     _lostReturnHome:
  4833                           	callstack 22
  4834   001CE8                     
  4835                           ;dc_motor.c: 277: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 278: {;dc_motor.c: 279:     LATDbits.LATD7 = LATHbits.LA
      +                          TH3 = 1;
  4836   001CE8  8680               	bsf	128,3,c	;volatile
  4837   001CEA  8E7C               	bsf	124,7,c	;volatile
  4838   001CEC                     
  4839                           ;dc_motor.c: 280:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4840   001CEC  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  4841   001CF0  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4842   001CF4  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  4843   001CF8  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4844   001CFC  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4845   001D00  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4846   001D04  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4847   001D08  EC26  F022         	call	_turnLeft	;wreg free
  4848   001D0C                     
  4849                           ;dc_motor.c: 281:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4850   001D0C  0E05               	movlw	5
  4851   001D0E  6E41               	movwf	(??_lostReturnHome+1)^0,c
  4852   001D10  0E0F               	movlw	15
  4853   001D12  6E40               	movwf	??_lostReturnHome^0,c
  4854   001D14  0EF1               	movlw	241
  4855   001D16                     u6167:
  4856   001D16  2EE8               	decfsz	wreg,f,c
  4857   001D18  D7FE               	bra	u6167
  4858   001D1A  2E40               	decfsz	??_lostReturnHome^0,f,c
  4859   001D1C  D7FC               	bra	u6167
  4860   001D1E  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  4861   001D20  D7FA               	bra	u6167
  4862   001D22  0000               	nop	
  4863   001D24                     
  4864                           ;dc_motor.c: 282:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4865   001D24  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  4866   001D28  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4867   001D2C  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  4868   001D30  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4869   001D34  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4870   001D38  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4871   001D3C  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4872   001D40  EC26  F022         	call	_turnLeft	;wreg free
  4873                           
  4874                           ;dc_motor.c: 283:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4875   001D44  0E05               	movlw	5
  4876   001D46  6E41               	movwf	(??_lostReturnHome+1)^0,c
  4877   001D48  0E0F               	movlw	15
  4878   001D4A  6E40               	movwf	??_lostReturnHome^0,c
  4879   001D4C  0EF1               	movlw	241
  4880   001D4E                     u6177:
  4881   001D4E  2EE8               	decfsz	wreg,f,c
  4882   001D50  D7FE               	bra	u6177
  4883   001D52  2E40               	decfsz	??_lostReturnHome^0,f,c
  4884   001D54  D7FC               	bra	u6177
  4885   001D56  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  4886   001D58  D7FA               	bra	u6177
  4887   001D5A  0000               	nop	
  4888   001D5C                     
  4889                           ;dc_motor.c: 284:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4890   001D5C  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  4891   001D60  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4892   001D64  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  4893   001D68  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4894   001D6C  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4895   001D70  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4896   001D74  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4897   001D78  EC26  F022         	call	_turnLeft	;wreg free
  4898   001D7C                     
  4899                           ;dc_motor.c: 285:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4900   001D7C  0E05               	movlw	5
  4901   001D7E  6E41               	movwf	(??_lostReturnHome+1)^0,c
  4902   001D80  0E0F               	movlw	15
  4903   001D82  6E40               	movwf	??_lostReturnHome^0,c
  4904   001D84  0EF1               	movlw	241
  4905   001D86                     u6187:
  4906   001D86  2EE8               	decfsz	wreg,f,c
  4907   001D88  D7FE               	bra	u6187
  4908   001D8A  2E40               	decfsz	??_lostReturnHome^0,f,c
  4909   001D8C  D7FC               	bra	u6187
  4910   001D8E  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  4911   001D90  D7FA               	bra	u6187
  4912   001D92  0000               	nop	
  4913                           
  4914                           ;dc_motor.c: 286:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4915   001D94  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  4916   001D98  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4917   001D9C  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  4918   001DA0  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4919   001DA4  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4920   001DA8  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4921   001DAC  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4922   001DB0  EC26  F022         	call	_turnLeft	;wreg free
  4923   001DB4                     
  4924                           ;dc_motor.c: 287:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4925   001DB4  0E05               	movlw	5
  4926   001DB6  6E41               	movwf	(??_lostReturnHome+1)^0,c
  4927   001DB8  0E0F               	movlw	15
  4928   001DBA  6E40               	movwf	??_lostReturnHome^0,c
  4929   001DBC  0EF1               	movlw	241
  4930   001DBE                     u6197:
  4931   001DBE  2EE8               	decfsz	wreg,f,c
  4932   001DC0  D7FE               	bra	u6197
  4933   001DC2  2E40               	decfsz	??_lostReturnHome^0,f,c
  4934   001DC4  D7FC               	bra	u6197
  4935   001DC6  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  4936   001DC8  D7FA               	bra	u6197
  4937   001DCA  0000               	nop	
  4938   001DCC                     
  4939                           ;dc_motor.c: 288:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4940   001DCC  C031  F023         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4941   001DD0  C032  F024         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4942   001DD4  C033  F025         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4943   001DD8  C034  F026         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4944   001DDC  C03A  F027         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4945   001DE0  C03C  F028         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4946   001DE4  ECD3  F024         	call	_fullSpeedAhead	;wreg free
  4947   001DE8                     
  4948                           ;dc_motor.c: 289:     resetTimer();
  4949   001DE8  EC81  F029         	call	_resetTimer	;wreg free
  4950   001DEC                     
  4951                           ;dc_motor.c: 290:     lost = 0;
  4952   001DEC  0E00               	movlw	0
  4953   001DEE  0100               	movlb	0	; () banked
  4954   001DF0  6FF2               	movwf	_lost& (0+255),b
  4955   001DF2                     l5783:
  4956                           
  4957                           ; BSR set to: 0
  4958   001DF2  51F2               	movf	_lost& (0+255),w,b
  4959   001DF4  B4D8               	btfsc	status,2,c
  4960   001DF6  EFFF  F00E         	goto	u5121
  4961   001DFA  EF01  F00F         	goto	u5120
  4962   001DFE                     u5121:
  4963   001DFE  EFF9  F00E         	goto	l5783
  4964   001E02                     u5120:
  4965   001E02                     
  4966                           ; BSR set to: 0
  4967                           ;dc_motor.c: 292:     stop(mL, mR, straightRamp);
  4968   001E02  C031  F023         	movff	lostReturnHome@mL,stop@mL
  4969   001E06  C032  F024         	movff	lostReturnHome@mL+1,stop@mL+1
  4970   001E0A  C033  F025         	movff	lostReturnHome@mR,stop@mR
  4971   001E0E  C034  F026         	movff	lostReturnHome@mR+1,stop@mR+1
  4972   001E12  C03C  F027         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4973   001E16  EC4F  F024         	call	_stop	;wreg free
  4974   001E1A                     
  4975                           ;dc_motor.c: 294:     char i=curMove;
  4976   001E1A  C039  F044         	movff	lostReturnHome@curMove,lostReturnHome@i
  4977                           
  4978                           ;dc_motor.c: 295:     while (i>0) {
  4979   001E1E  EFBD  F011         	goto	l5875
  4980   001E22                     l5789:
  4981                           
  4982                           ;dc_motor.c: 296:         i--;
  4983   001E22  0644               	decf	lostReturnHome@i^0,f,c
  4984   001E24                     
  4985                           ;dc_motor.c: 298:         if (moveSequence[i] == 1) {
  4986   001E24  5044               	movf	lostReturnHome@i^0,w,c
  4987   001E26  2435               	addwf	lostReturnHome@moveSequence^0,w,c
  4988   001E28  6ED9               	movwf	fsr2l,c
  4989   001E2A  0E00               	movlw	0
  4990   001E2C  2036               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4991   001E2E  6EDA               	movwf	fsr2h,c
  4992   001E30  04DE               	decf	postinc2,w,c
  4993   001E32  A4D8               	btfss	status,2,c
  4994   001E34  EF1E  F00F         	goto	u5131
  4995   001E38  EF20  F00F         	goto	u5130
  4996   001E3C                     u5131:
  4997   001E3C  EF5A  F00F         	goto	l5799
  4998   001E40                     u5130:
  4999   001E40                     
  5000                           ;dc_motor.c: 299:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5001   001E40  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5002   001E44  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5003   001E48  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5004   001E4C  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5005   001E50  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5006   001E54  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5007   001E58  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5008   001E5C  EC26  F022         	call	_turnLeft	;wreg free
  5009   001E60                     
  5010                           ;dc_motor.c: 300:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5011   001E60  0E05               	movlw	5
  5012   001E62  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5013   001E64  0E0F               	movlw	15
  5014   001E66  6E40               	movwf	??_lostReturnHome^0,c
  5015   001E68  0EF1               	movlw	241
  5016   001E6A                     u6207:
  5017   001E6A  2EE8               	decfsz	wreg,f,c
  5018   001E6C  D7FE               	bra	u6207
  5019   001E6E  2E40               	decfsz	??_lostReturnHome^0,f,c
  5020   001E70  D7FC               	bra	u6207
  5021   001E72  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5022   001E74  D7FA               	bra	u6207
  5023   001E76  0000               	nop	
  5024   001E78                     
  5025                           ;dc_motor.c: 301:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5026   001E78  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5027   001E7C  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5028   001E80  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5029   001E84  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5030   001E88  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5031   001E8C  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5032   001E90  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5033   001E94  EC26  F022         	call	_turnLeft	;wreg free
  5034                           
  5035                           ;dc_motor.c: 302:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5036   001E98  0E05               	movlw	5
  5037   001E9A  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5038   001E9C  0E0F               	movlw	15
  5039   001E9E  6E40               	movwf	??_lostReturnHome^0,c
  5040   001EA0  0EF1               	movlw	241
  5041   001EA2                     u6217:
  5042   001EA2  2EE8               	decfsz	wreg,f,c
  5043   001EA4  D7FE               	bra	u6217
  5044   001EA6  2E40               	decfsz	??_lostReturnHome^0,f,c
  5045   001EA8  D7FC               	bra	u6217
  5046   001EAA  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5047   001EAC  D7FA               	bra	u6217
  5048   001EAE  0000               	nop	
  5049                           
  5050                           ;dc_motor.c: 303:         }
  5051   001EB0  EF88  F011         	goto	l607
  5052   001EB4                     l5799:
  5053   001EB4  5044               	movf	lostReturnHome@i^0,w,c
  5054   001EB6  2435               	addwf	lostReturnHome@moveSequence^0,w,c
  5055   001EB8  6ED9               	movwf	fsr2l,c
  5056   001EBA  0E00               	movlw	0
  5057   001EBC  2036               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5058   001EBE  6EDA               	movwf	fsr2h,c
  5059   001EC0  0E02               	movlw	2
  5060   001EC2  18DE               	xorwf	postinc2,w,c
  5061   001EC4  A4D8               	btfss	status,2,c
  5062   001EC6  EF67  F00F         	goto	u5141
  5063   001ECA  EF69  F00F         	goto	u5140
  5064   001ECE                     u5141:
  5065   001ECE  EFA3  F00F         	goto	l5807
  5066   001ED2                     u5140:
  5067   001ED2                     
  5068                           ;dc_motor.c: 306:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5069   001ED2  C031  F023         	movff	lostReturnHome@mL,turnRight@mL
  5070   001ED6  C032  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5071   001EDA  C033  F025         	movff	lostReturnHome@mR,turnRight@mR
  5072   001EDE  C034  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5073   001EE2  C03D  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5074   001EE6  C03E  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5075   001EEA  C03F  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5076   001EEE  EC39  F021         	call	_turnRight	;wreg free
  5077   001EF2                     
  5078                           ;dc_motor.c: 307:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5079   001EF2  0E05               	movlw	5
  5080   001EF4  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5081   001EF6  0E0F               	movlw	15
  5082   001EF8  6E40               	movwf	??_lostReturnHome^0,c
  5083   001EFA  0EF1               	movlw	241
  5084   001EFC                     u6227:
  5085   001EFC  2EE8               	decfsz	wreg,f,c
  5086   001EFE  D7FE               	bra	u6227
  5087   001F00  2E40               	decfsz	??_lostReturnHome^0,f,c
  5088   001F02  D7FC               	bra	u6227
  5089   001F04  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5090   001F06  D7FA               	bra	u6227
  5091   001F08  0000               	nop	
  5092   001F0A                     
  5093                           ;dc_motor.c: 308:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5094   001F0A  C031  F023         	movff	lostReturnHome@mL,turnRight@mL
  5095   001F0E  C032  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5096   001F12  C033  F025         	movff	lostReturnHome@mR,turnRight@mR
  5097   001F16  C034  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5098   001F1A  C03D  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5099   001F1E  C03E  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5100   001F22  C03F  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5101   001F26  EC39  F021         	call	_turnRight	;wreg free
  5102                           
  5103                           ;dc_motor.c: 309:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5104   001F2A  0E05               	movlw	5
  5105   001F2C  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5106   001F2E  0E0F               	movlw	15
  5107   001F30  6E40               	movwf	??_lostReturnHome^0,c
  5108   001F32  0EF1               	movlw	241
  5109   001F34                     u6237:
  5110   001F34  2EE8               	decfsz	wreg,f,c
  5111   001F36  D7FE               	bra	u6237
  5112   001F38  2E40               	decfsz	??_lostReturnHome^0,f,c
  5113   001F3A  D7FC               	bra	u6237
  5114   001F3C  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5115   001F3E  D7FA               	bra	u6237
  5116   001F40  0000               	nop	
  5117                           
  5118                           ;dc_motor.c: 310:         }
  5119   001F42  EF88  F011         	goto	l607
  5120   001F46                     l5807:
  5121   001F46  5044               	movf	lostReturnHome@i^0,w,c
  5122   001F48  2435               	addwf	lostReturnHome@moveSequence^0,w,c
  5123   001F4A  6ED9               	movwf	fsr2l,c
  5124   001F4C  0E00               	movlw	0
  5125   001F4E  2036               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5126   001F50  6EDA               	movwf	fsr2h,c
  5127   001F52  0E03               	movlw	3
  5128   001F54  18DE               	xorwf	postinc2,w,c
  5129   001F56  A4D8               	btfss	status,2,c
  5130   001F58  EFB0  F00F         	goto	u5151
  5131   001F5C  EFB2  F00F         	goto	u5150
  5132   001F60                     u5151:
  5133   001F60  EF24  F010         	goto	l5821
  5134   001F64                     u5150:
  5135   001F64                     
  5136                           ;dc_motor.c: 313:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5137   001F64  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5138   001F68  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5139   001F6C  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5140   001F70  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5141   001F74  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5142   001F78  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5143   001F7C  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5144   001F80  EC26  F022         	call	_turnLeft	;wreg free
  5145   001F84                     
  5146                           ;dc_motor.c: 314:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5147   001F84  0E05               	movlw	5
  5148   001F86  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5149   001F88  0E0F               	movlw	15
  5150   001F8A  6E40               	movwf	??_lostReturnHome^0,c
  5151   001F8C  0EF1               	movlw	241
  5152   001F8E                     u6247:
  5153   001F8E  2EE8               	decfsz	wreg,f,c
  5154   001F90  D7FE               	bra	u6247
  5155   001F92  2E40               	decfsz	??_lostReturnHome^0,f,c
  5156   001F94  D7FC               	bra	u6247
  5157   001F96  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5158   001F98  D7FA               	bra	u6247
  5159   001F9A  0000               	nop	
  5160   001F9C                     
  5161                           ;dc_motor.c: 315:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5162   001F9C  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5163   001FA0  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5164   001FA4  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5165   001FA8  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5166   001FAC  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5167   001FB0  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5168   001FB4  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5169   001FB8  EC26  F022         	call	_turnLeft	;wreg free
  5170                           
  5171                           ;dc_motor.c: 316:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5172   001FBC  0E05               	movlw	5
  5173   001FBE  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5174   001FC0  0E0F               	movlw	15
  5175   001FC2  6E40               	movwf	??_lostReturnHome^0,c
  5176   001FC4  0EF1               	movlw	241
  5177   001FC6                     u6257:
  5178   001FC6  2EE8               	decfsz	wreg,f,c
  5179   001FC8  D7FE               	bra	u6257
  5180   001FCA  2E40               	decfsz	??_lostReturnHome^0,f,c
  5181   001FCC  D7FC               	bra	u6257
  5182   001FCE  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5183   001FD0  D7FA               	bra	u6257
  5184   001FD2  0000               	nop	
  5185   001FD4                     
  5186                           ;dc_motor.c: 317:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5187   001FD4  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5188   001FD8  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5189   001FDC  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5190   001FE0  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5191   001FE4  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5192   001FE8  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5193   001FEC  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5194   001FF0  EC26  F022         	call	_turnLeft	;wreg free
  5195   001FF4                     
  5196                           ;dc_motor.c: 318:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5197   001FF4  0E05               	movlw	5
  5198   001FF6  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5199   001FF8  0E0F               	movlw	15
  5200   001FFA  6E40               	movwf	??_lostReturnHome^0,c
  5201   001FFC  0EF1               	movlw	241
  5202   001FFE                     u6267:
  5203   001FFE  2EE8               	decfsz	wreg,f,c
  5204   002000  D7FE               	bra	u6267
  5205   002002  2E40               	decfsz	??_lostReturnHome^0,f,c
  5206   002004  D7FC               	bra	u6267
  5207   002006  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5208   002008  D7FA               	bra	u6267
  5209   00200A  0000               	nop	
  5210                           
  5211                           ;dc_motor.c: 319:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5212   00200C  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5213   002010  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5214   002014  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5215   002018  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5216   00201C  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5217   002020  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5218   002024  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5219   002028  EC26  F022         	call	_turnLeft	;wreg free
  5220   00202C                     l5819:
  5221                           
  5222                           ;dc_motor.c: 320:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5223   00202C  0E05               	movlw	5
  5224   00202E  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5225   002030  0E0F               	movlw	15
  5226   002032  6E40               	movwf	??_lostReturnHome^0,c
  5227   002034  0EF1               	movlw	241
  5228   002036                     u6277:
  5229   002036  2EE8               	decfsz	wreg,f,c
  5230   002038  D7FE               	bra	u6277
  5231   00203A  2E40               	decfsz	??_lostReturnHome^0,f,c
  5232   00203C  D7FC               	bra	u6277
  5233   00203E  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5234   002040  D7FA               	bra	u6277
  5235   002042  0000               	nop	
  5236                           
  5237                           ;dc_motor.c: 321:         }
  5238   002044  EF88  F011         	goto	l607
  5239   002048                     l5821:
  5240   002048  5044               	movf	lostReturnHome@i^0,w,c
  5241   00204A  2435               	addwf	lostReturnHome@moveSequence^0,w,c
  5242   00204C  6ED9               	movwf	fsr2l,c
  5243   00204E  0E00               	movlw	0
  5244   002050  2036               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5245   002052  6EDA               	movwf	fsr2h,c
  5246   002054  0E04               	movlw	4
  5247   002056  18DE               	xorwf	postinc2,w,c
  5248   002058  A4D8               	btfss	status,2,c
  5249   00205A  EF31  F010         	goto	u5161
  5250   00205E  EF33  F010         	goto	u5160
  5251   002062                     u5161:
  5252   002062  EF7D  F010         	goto	l5833
  5253   002066                     u5160:
  5254   002066                     
  5255                           ;dc_motor.c: 324:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5256   002066  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5257   00206A  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5258   00206E  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5259   002072  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5260   002076  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5261   00207A  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5262   00207E  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5263   002082  EC26  F022         	call	_turnLeft	;wreg free
  5264   002086                     
  5265                           ;dc_motor.c: 325:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5266   002086  0E05               	movlw	5
  5267   002088  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5268   00208A  0E0F               	movlw	15
  5269   00208C  6E40               	movwf	??_lostReturnHome^0,c
  5270   00208E  0EF1               	movlw	241
  5271   002090                     u6287:
  5272   002090  2EE8               	decfsz	wreg,f,c
  5273   002092  D7FE               	bra	u6287
  5274   002094  2E40               	decfsz	??_lostReturnHome^0,f,c
  5275   002096  D7FC               	bra	u6287
  5276   002098  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5277   00209A  D7FA               	bra	u6287
  5278   00209C  0000               	nop	
  5279   00209E                     
  5280                           ;dc_motor.c: 326:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5281   00209E  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5282   0020A2  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5283   0020A6  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5284   0020AA  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5285   0020AE  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5286   0020B2  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5287   0020B6  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5288   0020BA  EC26  F022         	call	_turnLeft	;wreg free
  5289                           
  5290                           ;dc_motor.c: 327:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5291   0020BE  0E05               	movlw	5
  5292   0020C0  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5293   0020C2  0E0F               	movlw	15
  5294   0020C4  6E40               	movwf	??_lostReturnHome^0,c
  5295   0020C6  0EF1               	movlw	241
  5296   0020C8                     u6297:
  5297   0020C8  2EE8               	decfsz	wreg,f,c
  5298   0020CA  D7FE               	bra	u6297
  5299   0020CC  2E40               	decfsz	??_lostReturnHome^0,f,c
  5300   0020CE  D7FC               	bra	u6297
  5301   0020D0  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5302   0020D2  D7FA               	bra	u6297
  5303   0020D4  0000               	nop	
  5304   0020D6                     
  5305                           ;dc_motor.c: 328:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5306   0020D6  C031  F023         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5307   0020DA  C032  F024         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5308   0020DE  C033  F025         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5309   0020E2  C034  F026         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5310   0020E6  C03A  F027         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5311   0020EA  C03B  F028         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5312   0020EE  C03C  F029         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5313   0020F2  EC43  F020         	call	_reverseOneSquare	;wreg free
  5314   0020F6  EF16  F010         	goto	l5819
  5315   0020FA                     l5833:
  5316   0020FA  5044               	movf	lostReturnHome@i^0,w,c
  5317   0020FC  2435               	addwf	lostReturnHome@moveSequence^0,w,c
  5318   0020FE  6ED9               	movwf	fsr2l,c
  5319   002100  0E00               	movlw	0
  5320   002102  2036               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5321   002104  6EDA               	movwf	fsr2h,c
  5322   002106  0E05               	movlw	5
  5323   002108  18DE               	xorwf	postinc2,w,c
  5324   00210A  A4D8               	btfss	status,2,c
  5325   00210C  EF8A  F010         	goto	u5171
  5326   002110  EF8C  F010         	goto	u5170
  5327   002114                     u5171:
  5328   002114  EFD6  F010         	goto	l5845
  5329   002118                     u5170:
  5330   002118                     
  5331                           ;dc_motor.c: 333:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5332   002118  C031  F023         	movff	lostReturnHome@mL,turnRight@mL
  5333   00211C  C032  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5334   002120  C033  F025         	movff	lostReturnHome@mR,turnRight@mR
  5335   002124  C034  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5336   002128  C03D  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5337   00212C  C03E  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5338   002130  C03F  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5339   002134  EC39  F021         	call	_turnRight	;wreg free
  5340   002138                     
  5341                           ;dc_motor.c: 334:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5342   002138  0E05               	movlw	5
  5343   00213A  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5344   00213C  0E0F               	movlw	15
  5345   00213E  6E40               	movwf	??_lostReturnHome^0,c
  5346   002140  0EF1               	movlw	241
  5347   002142                     u6307:
  5348   002142  2EE8               	decfsz	wreg,f,c
  5349   002144  D7FE               	bra	u6307
  5350   002146  2E40               	decfsz	??_lostReturnHome^0,f,c
  5351   002148  D7FC               	bra	u6307
  5352   00214A  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5353   00214C  D7FA               	bra	u6307
  5354   00214E  0000               	nop	
  5355   002150                     
  5356                           ;dc_motor.c: 335:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5357   002150  C031  F023         	movff	lostReturnHome@mL,turnRight@mL
  5358   002154  C032  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5359   002158  C033  F025         	movff	lostReturnHome@mR,turnRight@mR
  5360   00215C  C034  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5361   002160  C03D  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5362   002164  C03E  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5363   002168  C03F  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5364   00216C  EC39  F021         	call	_turnRight	;wreg free
  5365                           
  5366                           ;dc_motor.c: 336:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5367   002170  0E05               	movlw	5
  5368   002172  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5369   002174  0E0F               	movlw	15
  5370   002176  6E40               	movwf	??_lostReturnHome^0,c
  5371   002178  0EF1               	movlw	241
  5372   00217A                     u6317:
  5373   00217A  2EE8               	decfsz	wreg,f,c
  5374   00217C  D7FE               	bra	u6317
  5375   00217E  2E40               	decfsz	??_lostReturnHome^0,f,c
  5376   002180  D7FC               	bra	u6317
  5377   002182  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5378   002184  D7FA               	bra	u6317
  5379   002186  0000               	nop	
  5380   002188                     
  5381                           ;dc_motor.c: 337:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5382   002188  C031  F023         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5383   00218C  C032  F024         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5384   002190  C033  F025         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5385   002194  C034  F026         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5386   002198  C03A  F027         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5387   00219C  C03B  F028         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5388   0021A0  C03C  F029         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5389   0021A4  EC43  F020         	call	_reverseOneSquare	;wreg free
  5390   0021A8  EF16  F010         	goto	l5819
  5391   0021AC                     l5845:
  5392   0021AC  5044               	movf	lostReturnHome@i^0,w,c
  5393   0021AE  2435               	addwf	lostReturnHome@moveSequence^0,w,c
  5394   0021B0  6ED9               	movwf	fsr2l,c
  5395   0021B2  0E00               	movlw	0
  5396   0021B4  2036               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5397   0021B6  6EDA               	movwf	fsr2h,c
  5398   0021B8  0E06               	movlw	6
  5399   0021BA  18DE               	xorwf	postinc2,w,c
  5400   0021BC  A4D8               	btfss	status,2,c
  5401   0021BE  EFE3  F010         	goto	u5181
  5402   0021C2  EFE5  F010         	goto	u5180
  5403   0021C6                     u5181:
  5404   0021C6  EF2F  F011         	goto	l5857
  5405   0021CA                     u5180:
  5406   0021CA                     
  5407                           ;dc_motor.c: 342:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5408   0021CA  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5409   0021CE  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5410   0021D2  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5411   0021D6  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5412   0021DA  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5413   0021DE  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5414   0021E2  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5415   0021E6  EC26  F022         	call	_turnLeft	;wreg free
  5416   0021EA                     
  5417                           ;dc_motor.c: 343:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5418   0021EA  0E05               	movlw	5
  5419   0021EC  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5420   0021EE  0E0F               	movlw	15
  5421   0021F0  6E40               	movwf	??_lostReturnHome^0,c
  5422   0021F2  0EF1               	movlw	241
  5423   0021F4                     u6327:
  5424   0021F4  2EE8               	decfsz	wreg,f,c
  5425   0021F6  D7FE               	bra	u6327
  5426   0021F8  2E40               	decfsz	??_lostReturnHome^0,f,c
  5427   0021FA  D7FC               	bra	u6327
  5428   0021FC  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5429   0021FE  D7FA               	bra	u6327
  5430   002200  0000               	nop	
  5431   002202                     
  5432                           ;dc_motor.c: 344:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5433   002202  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5434   002206  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5435   00220A  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5436   00220E  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5437   002212  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5438   002216  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5439   00221A  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5440   00221E  EC26  F022         	call	_turnLeft	;wreg free
  5441                           
  5442                           ;dc_motor.c: 345:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5443   002222  0E05               	movlw	5
  5444   002224  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5445   002226  0E0F               	movlw	15
  5446   002228  6E40               	movwf	??_lostReturnHome^0,c
  5447   00222A  0EF1               	movlw	241
  5448   00222C                     u6337:
  5449   00222C  2EE8               	decfsz	wreg,f,c
  5450   00222E  D7FE               	bra	u6337
  5451   002230  2E40               	decfsz	??_lostReturnHome^0,f,c
  5452   002232  D7FC               	bra	u6337
  5453   002234  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5454   002236  D7FA               	bra	u6337
  5455   002238  0000               	nop	
  5456   00223A                     
  5457                           ;dc_motor.c: 346:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5458   00223A  C031  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5459   00223E  C032  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5460   002242  C033  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5461   002246  C034  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5462   00224A  C03D  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5463   00224E  C03E  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5464   002252  C03F  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5465   002256  EC26  F022         	call	_turnLeft	;wreg free
  5466   00225A  EF16  F010         	goto	l5819
  5467   00225E                     l5857:
  5468   00225E  5044               	movf	lostReturnHome@i^0,w,c
  5469   002260  2435               	addwf	lostReturnHome@moveSequence^0,w,c
  5470   002262  6ED9               	movwf	fsr2l,c
  5471   002264  0E00               	movlw	0
  5472   002266  2036               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5473   002268  6EDA               	movwf	fsr2h,c
  5474   00226A  0E07               	movlw	7
  5475   00226C  18DE               	xorwf	postinc2,w,c
  5476   00226E  A4D8               	btfss	status,2,c
  5477   002270  EF3C  F011         	goto	u5191
  5478   002274  EF3E  F011         	goto	u5190
  5479   002278                     u5191:
  5480   002278  EF88  F011         	goto	l613
  5481   00227C                     u5190:
  5482   00227C                     
  5483                           ;dc_motor.c: 351:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5484   00227C  C031  F023         	movff	lostReturnHome@mL,turnRight@mL
  5485   002280  C032  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5486   002284  C033  F025         	movff	lostReturnHome@mR,turnRight@mR
  5487   002288  C034  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5488   00228C  C03D  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5489   002290  C03E  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5490   002294  C03F  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5491   002298  EC39  F021         	call	_turnRight	;wreg free
  5492   00229C                     
  5493                           ;dc_motor.c: 352:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5494   00229C  0E05               	movlw	5
  5495   00229E  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5496   0022A0  0E0F               	movlw	15
  5497   0022A2  6E40               	movwf	??_lostReturnHome^0,c
  5498   0022A4  0EF1               	movlw	241
  5499   0022A6                     u6347:
  5500   0022A6  2EE8               	decfsz	wreg,f,c
  5501   0022A8  D7FE               	bra	u6347
  5502   0022AA  2E40               	decfsz	??_lostReturnHome^0,f,c
  5503   0022AC  D7FC               	bra	u6347
  5504   0022AE  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5505   0022B0  D7FA               	bra	u6347
  5506   0022B2  0000               	nop	
  5507   0022B4                     
  5508                           ;dc_motor.c: 353:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5509   0022B4  C031  F023         	movff	lostReturnHome@mL,turnRight@mL
  5510   0022B8  C032  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5511   0022BC  C033  F025         	movff	lostReturnHome@mR,turnRight@mR
  5512   0022C0  C034  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5513   0022C4  C03D  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5514   0022C8  C03E  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5515   0022CC  C03F  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5516   0022D0  EC39  F021         	call	_turnRight	;wreg free
  5517                           
  5518                           ;dc_motor.c: 354:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5519   0022D4  0E05               	movlw	5
  5520   0022D6  6E41               	movwf	(??_lostReturnHome+1)^0,c
  5521   0022D8  0E0F               	movlw	15
  5522   0022DA  6E40               	movwf	??_lostReturnHome^0,c
  5523   0022DC  0EF1               	movlw	241
  5524   0022DE                     u6357:
  5525   0022DE  2EE8               	decfsz	wreg,f,c
  5526   0022E0  D7FE               	bra	u6357
  5527   0022E2  2E40               	decfsz	??_lostReturnHome^0,f,c
  5528   0022E4  D7FC               	bra	u6357
  5529   0022E6  2E41               	decfsz	(??_lostReturnHome+1)^0,f,c
  5530   0022E8  D7FA               	bra	u6357
  5531   0022EA  0000               	nop	
  5532   0022EC                     
  5533                           ;dc_motor.c: 355:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5534   0022EC  C031  F023         	movff	lostReturnHome@mL,turnRight@mL
  5535   0022F0  C032  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5536   0022F4  C033  F025         	movff	lostReturnHome@mR,turnRight@mR
  5537   0022F8  C034  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5538   0022FC  C03D  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5539   002300  C03E  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5540   002304  C03F  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5541   002308  EC39  F021         	call	_turnRight	;wreg free
  5542   00230C  EF16  F010         	goto	l5819
  5543   002310                     l613:
  5544   002310                     l607:
  5545                           
  5546                           ;dc_motor.c: 359:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  5547   002310  C031  F023         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  5548   002314  C032  F024         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  5549   002318  C033  F025         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  5550   00231C  C034  F026         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  5551   002320  C03A  F027         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  5552   002324  C03C  F028         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  5553   002328  ECD3  F024         	call	_fullSpeedAhead	;wreg free
  5554   00232C                     
  5555                           ;dc_motor.c: 360:         resetTimer();
  5556   00232C  EC81  F029         	call	_resetTimer	;wreg free
  5557   002330                     l5871:
  5558   002330  5044               	movf	lostReturnHome@i^0,w,c
  5559   002332  0D02               	mullw	2
  5560   002334  CFF3 F040          	movff	prodl,??_lostReturnHome
  5561   002338  CFF4 F041          	movff	prodh,??_lostReturnHome+1
  5562   00233C  5040               	movf	??_lostReturnHome^0,w,c
  5563   00233E  2437               	addwf	lostReturnHome@straightTime^0,w,c
  5564   002340  6ED9               	movwf	fsr2l,c
  5565   002342  5041               	movf	(??_lostReturnHome+1)^0,w,c
  5566   002344  2038               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  5567   002346  6EDA               	movwf	fsr2h,c
  5568   002348  EC92  F028         	call	_get16bitTMR0val	;wreg free
  5569   00234C  50DE               	movf	postinc2,w,c
  5570   00234E  5C10               	subwf	?_get16bitTMR0val^0,w,c
  5571   002350  50DE               	movf	postinc2,w,c
  5572   002352  5811               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  5573   002354  A0D8               	btfss	status,0,c
  5574   002356  EFAF  F011         	goto	u5201
  5575   00235A  EFB1  F011         	goto	u5200
  5576   00235E                     u5201:
  5577   00235E  EF98  F011         	goto	l5871
  5578   002362                     u5200:
  5579   002362                     
  5580                           ;dc_motor.c: 362:         stop(mL, mR, straightRamp);
  5581   002362  C031  F023         	movff	lostReturnHome@mL,stop@mL
  5582   002366  C032  F024         	movff	lostReturnHome@mL+1,stop@mL+1
  5583   00236A  C033  F025         	movff	lostReturnHome@mR,stop@mR
  5584   00236E  C034  F026         	movff	lostReturnHome@mR+1,stop@mR+1
  5585   002372  C03C  F027         	movff	lostReturnHome@straightRamp,stop@straightRamp
  5586   002376  EC4F  F024         	call	_stop	;wreg free
  5587   00237A                     l5875:
  5588                           
  5589                           ;dc_motor.c: 295:     while (i>0) {
  5590   00237A  5044               	movf	lostReturnHome@i^0,w,c
  5591   00237C  A4D8               	btfss	status,2,c
  5592   00237E  EFC3  F011         	goto	u5211
  5593   002382  EFC5  F011         	goto	u5210
  5594   002386                     u5211:
  5595   002386  EF11  F00F         	goto	l5789
  5596   00238A                     u5210:
  5597   00238A  0012               	return		;funcret
  5598   00238C                     __end_of_lostReturnHome:
  5599                           	callstack 0
  5600                           
  5601 ;; *************** function _stop *****************
  5602 ;; Defined at:
  5603 ;;		line 367 in file "dc_motor.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  5606 ;;		 -> main@motorL(10), 
  5607 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  5608 ;;		 -> main@motorR(10), 
  5609 ;;  straightRamp    1   38[COMRAM] unsigned char 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  cur_power       2   44[COMRAM] int 
  5612 ;;  i               2   42[COMRAM] int 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5622 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5623 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5624 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5625 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5626 ;;Total ram usage:       12 bytes
  5627 ;; Hardware stack levels used: 1
  5628 ;; Hardware stack levels required when called: 7
  5629 ;; This function calls:
  5630 ;;		_setMotorPWM
  5631 ;; This function is called by:
  5632 ;;		_main
  5633 ;;		_returnHome
  5634 ;;		_lostReturnHome
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text6
  5639   00489E                     __ptext6:
  5640                           	callstack 0
  5641   00489E                     _stop:
  5642                           	callstack 23
  5643   00489E                     
  5644                           ;dc_motor.c: 367: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 368: {;dc_motor.c: 369:     mL->direction = 1;
  5645   00489E  EE20 F001          	lfsr	2,1
  5646   0048A2  5023               	movf	stop@mL^0,w,c
  5647   0048A4  26D9               	addwf	fsr2l,f,c
  5648   0048A6  5024               	movf	(stop@mL+1)^0,w,c
  5649   0048A8  22DA               	addwfc	fsr2h,f,c
  5650   0048AA  0E01               	movlw	1
  5651   0048AC  6EDF               	movwf	indf2,c
  5652                           
  5653                           ;dc_motor.c: 370:     mR->direction = 1;
  5654   0048AE  EE20 F001          	lfsr	2,1
  5655   0048B2  5025               	movf	stop@mR^0,w,c
  5656   0048B4  26D9               	addwf	fsr2l,f,c
  5657   0048B6  5026               	movf	(stop@mR+1)^0,w,c
  5658   0048B8  22DA               	addwfc	fsr2h,f,c
  5659   0048BA  0E01               	movlw	1
  5660   0048BC  6EDF               	movwf	indf2,c
  5661                           
  5662                           ;dc_motor.c: 371:     int i;;dc_motor.c: 372:     int cur_power;;dc_motor.c: 373:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  5663   0048BE  C023  FFD9         	movff	stop@mL,fsr2l
  5664   0048C2  C024  FFDA         	movff	stop@mL+1,fsr2h
  5665   0048C6  50DF               	movf	indf2,w,c
  5666   0048C8  6E28               	movwf	??_stop^0,c
  5667   0048CA  EE20 F009          	lfsr	2,9
  5668   0048CE  5023               	movf	stop@mL^0,w,c
  5669   0048D0  26D9               	addwf	fsr2l,f,c
  5670   0048D2  5024               	movf	(stop@mL+1)^0,w,c
  5671   0048D4  22DA               	addwfc	fsr2h,f,c
  5672   0048D6  50DF               	movf	indf2,w,c
  5673   0048D8  6E29               	movwf	(??_stop+1)^0,c
  5674   0048DA  5029               	movf	(??_stop+1)^0,w,c
  5675   0048DC  5C28               	subwf	??_stop^0,w,c
  5676   0048DE  6E2D               	movwf	stop@cur_power^0,c
  5677   0048E0  6A2E               	clrf	(stop@cur_power+1)^0,c
  5678   0048E2  A0D8               	btfss	status,0,c
  5679   0048E4  062E               	decf	(stop@cur_power+1)^0,f,c
  5680   0048E6                     l4697:
  5681   0048E6  BE2E               	btfsc	(stop@cur_power+1)^0,7,c
  5682   0048E8  EF7A  F024         	goto	u3920
  5683   0048EC  EF78  F024         	goto	u3921
  5684   0048F0                     u3921:
  5685   0048F0  EF7C  F024         	goto	l4701
  5686   0048F4                     u3920:
  5687   0048F4  EFC8  F024         	goto	l4717
  5688   0048F8                     l4701:
  5689                           
  5690                           ;dc_motor.c: 374:         mL->power = cur_power+mL->compensation;
  5691   0048F8  EE20 F009          	lfsr	2,9
  5692   0048FC  5023               	movf	stop@mL^0,w,c
  5693   0048FE  26D9               	addwf	fsr2l,f,c
  5694   004900  5024               	movf	(stop@mL+1)^0,w,c
  5695   004902  22DA               	addwfc	fsr2h,f,c
  5696   004904  50DF               	movf	indf2,w,c
  5697   004906  242D               	addwf	stop@cur_power^0,w,c
  5698   004908  C023  FFD9         	movff	stop@mL,fsr2l
  5699   00490C  C024  FFDA         	movff	stop@mL+1,fsr2h
  5700   004910  6EDF               	movwf	indf2,c
  5701                           
  5702                           ;dc_motor.c: 375:         mR->power = cur_power+mR->compensation;
  5703   004912  EE20 F009          	lfsr	2,9
  5704   004916  5025               	movf	stop@mR^0,w,c
  5705   004918  26D9               	addwf	fsr2l,f,c
  5706   00491A  5026               	movf	(stop@mR+1)^0,w,c
  5707   00491C  22DA               	addwfc	fsr2h,f,c
  5708   00491E  50DF               	movf	indf2,w,c
  5709   004920  242D               	addwf	stop@cur_power^0,w,c
  5710   004922  C025  FFD9         	movff	stop@mR,fsr2l
  5711   004926  C026  FFDA         	movff	stop@mR+1,fsr2h
  5712   00492A  6EDF               	movwf	indf2,c
  5713   00492C                     
  5714                           ;dc_motor.c: 376:         setMotorPWM(mL);
  5715   00492C  C023  F01D         	movff	stop@mL,setMotorPWM@m
  5716   004930  C024  F01E         	movff	stop@mL+1,setMotorPWM@m+1
  5717   004934  EC13  F023         	call	_setMotorPWM	;wreg free
  5718   004938                     
  5719                           ;dc_motor.c: 377:         setMotorPWM(mR);
  5720   004938  C025  F01D         	movff	stop@mR,setMotorPWM@m
  5721   00493C  C026  F01E         	movff	stop@mR+1,setMotorPWM@m+1
  5722   004940  EC13  F023         	call	_setMotorPWM	;wreg free
  5723   004944                     
  5724                           ;dc_motor.c: 378:         for (i=0;i<straightRamp;i++) {
  5725   004944  0E00               	movlw	0
  5726   004946  6E2C               	movwf	(stop@i+1)^0,c
  5727   004948  0E00               	movlw	0
  5728   00494A  6E2B               	movwf	stop@i^0,c
  5729   00494C  EFB1  F024         	goto	l628
  5730   004950                     l4709:
  5731                           
  5732                           ;dc_motor.c: 379:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5733   004950  0ED0               	movlw	208
  5734   004952  6E28               	movwf	??_stop^0,c
  5735   004954  0ECA               	movlw	202
  5736   004956                     u6367:
  5737   004956  2EE8               	decfsz	wreg,f,c
  5738   004958  D7FE               	bra	u6367
  5739   00495A  2E28               	decfsz	??_stop^0,f,c
  5740   00495C  D7FC               	bra	u6367
  5741   00495E                     
  5742                           ;dc_motor.c: 380:         }
  5743   00495E  4A2B               	infsnz	stop@i^0,f,c
  5744   004960  2A2C               	incf	(stop@i+1)^0,f,c
  5745   004962                     l628:
  5746   004962  5027               	movf	stop@straightRamp^0,w,c
  5747   004964  6E28               	movwf	??_stop^0,c
  5748   004966  6A29               	clrf	(??_stop+1)^0,c
  5749   004968  5028               	movf	??_stop^0,w,c
  5750   00496A  5C2B               	subwf	stop@i^0,w,c
  5751   00496C  502C               	movf	(stop@i+1)^0,w,c
  5752   00496E  0A80               	xorlw	128
  5753   004970  6E2A               	movwf	(??_stop+2)^0,c
  5754   004972  5029               	movf	(??_stop+1)^0,w,c
  5755   004974  0A80               	xorlw	128
  5756   004976  582A               	subwfb	(??_stop+2)^0,w,c
  5757   004978  A0D8               	btfss	status,0,c
  5758   00497A  EFC1  F024         	goto	u3931
  5759   00497E  EFC3  F024         	goto	u3930
  5760   004982                     u3931:
  5761   004982  EFA8  F024         	goto	l4709
  5762   004986                     u3930:
  5763   004986                     
  5764                           ;dc_motor.c: 381:     }
  5765   004986  062D               	decf	stop@cur_power^0,f,c
  5766   004988  A0D8               	btfss	status,0,c
  5767   00498A  062E               	decf	(stop@cur_power+1)^0,f,c
  5768   00498C  EF73  F024         	goto	l4697
  5769   004990                     l4717:
  5770                           
  5771                           ;dc_motor.c: 382:     mL->power = 0;
  5772   004990  C023  FFD9         	movff	stop@mL,fsr2l
  5773   004994  C024  FFDA         	movff	stop@mL+1,fsr2h
  5774   004998  6ADF               	clrf	indf2,c
  5775                           
  5776                           ;dc_motor.c: 383:     mR->power = 0;
  5777   00499A  C025  FFD9         	movff	stop@mR,fsr2l
  5778   00499E  C026  FFDA         	movff	stop@mR+1,fsr2h
  5779   0049A2  6ADF               	clrf	indf2,c
  5780   0049A4  0012               	return		;funcret
  5781   0049A6                     __end_of_stop:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function _reverseOneSquare *****************
  5785 ;; Defined at:
  5786 ;;		line 468 in file "dc_motor.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  5789 ;;		 -> main@motorL(10), 
  5790 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  5791 ;;		 -> main@motorR(10), 
  5792 ;;  straightSpee    1   38[COMRAM] unsigned char 
  5793 ;;  reverseDurat    1   39[COMRAM] unsigned char 
  5794 ;;  straightRamp    1   40[COMRAM] unsigned char 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  cur_power       2   46[COMRAM] int 
  5797 ;;  i               2   44[COMRAM] int 
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      void 
  5800 ;; Registers used:
  5801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5807 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5808 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5809 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5810 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5811 ;;Total ram usage:       14 bytes
  5812 ;; Hardware stack levels used: 1
  5813 ;; Hardware stack levels required when called: 7
  5814 ;; This function calls:
  5815 ;;		_setMotorPWM
  5816 ;; This function is called by:
  5817 ;;		_move
  5818 ;;		_returnHome
  5819 ;;		_lostReturnHome
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text7
  5824   004086                     __ptext7:
  5825                           	callstack 0
  5826   004086                     _reverseOneSquare:
  5827                           	callstack 22
  5828   004086                     
  5829                           ;dc_motor.c: 468: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned char reverseDuration, unsigned char straightRamp);dc_motor.c: 469: {;dc_motor.c
      +                          : 470:     mL->direction = 0;
  5830   004086  EE20 F001          	lfsr	2,1
  5831   00408A  5023               	movf	reverseOneSquare@mL^0,w,c
  5832   00408C  26D9               	addwf	fsr2l,f,c
  5833   00408E  5024               	movf	(reverseOneSquare@mL+1)^0,w,c
  5834   004090  22DA               	addwfc	fsr2h,f,c
  5835   004092  6ADF               	clrf	indf2,c
  5836                           
  5837                           ;dc_motor.c: 471:     mR->direction = 0;
  5838   004094  EE20 F001          	lfsr	2,1
  5839   004098  5025               	movf	reverseOneSquare@mR^0,w,c
  5840   00409A  26D9               	addwf	fsr2l,f,c
  5841   00409C  5026               	movf	(reverseOneSquare@mR+1)^0,w,c
  5842   00409E  22DA               	addwfc	fsr2h,f,c
  5843   0040A0  6ADF               	clrf	indf2,c
  5844   0040A2                     
  5845                           ;dc_motor.c: 472:     int i;;dc_motor.c: 473:     int cur_power;;dc_motor.c: 474:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  5846   0040A2  0E00               	movlw	0
  5847   0040A4  6E30               	movwf	(reverseOneSquare@cur_power+1)^0,c
  5848   0040A6  0E01               	movlw	1
  5849   0040A8  6E2F               	movwf	reverseOneSquare@cur_power^0,c
  5850   0040AA  EFA1  F020         	goto	l4861
  5851   0040AE                     l4847:
  5852                           
  5853                           ;dc_motor.c: 475:         mL->power = cur_power+mL->compensation;
  5854   0040AE  EE20 F009          	lfsr	2,9
  5855   0040B2  5023               	movf	reverseOneSquare@mL^0,w,c
  5856   0040B4  26D9               	addwf	fsr2l,f,c
  5857   0040B6  5024               	movf	(reverseOneSquare@mL+1)^0,w,c
  5858   0040B8  22DA               	addwfc	fsr2h,f,c
  5859   0040BA  50DF               	movf	indf2,w,c
  5860   0040BC  242F               	addwf	reverseOneSquare@cur_power^0,w,c
  5861   0040BE  C023  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5862   0040C2  C024  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5863   0040C6  6EDF               	movwf	indf2,c
  5864                           
  5865                           ;dc_motor.c: 476:         mR->power = cur_power+mR->compensation;
  5866   0040C8  EE20 F009          	lfsr	2,9
  5867   0040CC  5025               	movf	reverseOneSquare@mR^0,w,c
  5868   0040CE  26D9               	addwf	fsr2l,f,c
  5869   0040D0  5026               	movf	(reverseOneSquare@mR+1)^0,w,c
  5870   0040D2  22DA               	addwfc	fsr2h,f,c
  5871   0040D4  50DF               	movf	indf2,w,c
  5872   0040D6  242F               	addwf	reverseOneSquare@cur_power^0,w,c
  5873   0040D8  C025  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5874   0040DC  C026  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5875   0040E0  6EDF               	movwf	indf2,c
  5876   0040E2                     
  5877                           ;dc_motor.c: 477:         setMotorPWM(mL);
  5878   0040E2  C023  F01D         	movff	reverseOneSquare@mL,setMotorPWM@m
  5879   0040E6  C024  F01E         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  5880   0040EA  EC13  F023         	call	_setMotorPWM	;wreg free
  5881   0040EE                     
  5882                           ;dc_motor.c: 478:         setMotorPWM(mR);
  5883   0040EE  C025  F01D         	movff	reverseOneSquare@mR,setMotorPWM@m
  5884   0040F2  C026  F01E         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  5885   0040F6  EC13  F023         	call	_setMotorPWM	;wreg free
  5886   0040FA                     
  5887                           ;dc_motor.c: 479:         for (i=0;i<straightRamp;i++) {
  5888   0040FA  0E00               	movlw	0
  5889   0040FC  6E2E               	movwf	(reverseOneSquare@i+1)^0,c
  5890   0040FE  0E00               	movlw	0
  5891   004100  6E2D               	movwf	reverseOneSquare@i^0,c
  5892   004102  EF8D  F020         	goto	l679
  5893   004106                     l4855:
  5894                           
  5895                           ;dc_motor.c: 480:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5896   004106  0E68               	movlw	104
  5897   004108  6E2A               	movwf	??_reverseOneSquare^0,c
  5898   00410A  0EE4               	movlw	228
  5899   00410C                     u6377:
  5900   00410C  2EE8               	decfsz	wreg,f,c
  5901   00410E  D7FE               	bra	u6377
  5902   004110  2E2A               	decfsz	??_reverseOneSquare^0,f,c
  5903   004112  D7FC               	bra	u6377
  5904   004114  D000               	nop2	
  5905   004116                     
  5906                           ;dc_motor.c: 481:         }
  5907   004116  4A2D               	infsnz	reverseOneSquare@i^0,f,c
  5908   004118  2A2E               	incf	(reverseOneSquare@i+1)^0,f,c
  5909   00411A                     l679:
  5910   00411A  5029               	movf	reverseOneSquare@straightRamp^0,w,c
  5911   00411C  6E2A               	movwf	??_reverseOneSquare^0,c
  5912   00411E  6A2B               	clrf	(??_reverseOneSquare+1)^0,c
  5913   004120  502A               	movf	??_reverseOneSquare^0,w,c
  5914   004122  5C2D               	subwf	reverseOneSquare@i^0,w,c
  5915   004124  502E               	movf	(reverseOneSquare@i+1)^0,w,c
  5916   004126  0A80               	xorlw	128
  5917   004128  6E2C               	movwf	(??_reverseOneSquare+2)^0,c
  5918   00412A  502B               	movf	(??_reverseOneSquare+1)^0,w,c
  5919   00412C  0A80               	xorlw	128
  5920   00412E  582C               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5921   004130  A0D8               	btfss	status,0,c
  5922   004132  EF9D  F020         	goto	u4081
  5923   004136  EF9F  F020         	goto	u4080
  5924   00413A                     u4081:
  5925   00413A  EF83  F020         	goto	l4855
  5926   00413E                     u4080:
  5927   00413E                     
  5928                           ;dc_motor.c: 482:     }
  5929   00413E  4A2F               	infsnz	reverseOneSquare@cur_power^0,f,c
  5930   004140  2A30               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  5931   004142                     l4861:
  5932   004142  5027               	movf	reverseOneSquare@straightSpeed^0,w,c
  5933   004144  6E2A               	movwf	??_reverseOneSquare^0,c
  5934   004146  6A2B               	clrf	(??_reverseOneSquare+1)^0,c
  5935   004148  502F               	movf	reverseOneSquare@cur_power^0,w,c
  5936   00414A  5C2A               	subwf	??_reverseOneSquare^0,w,c
  5937   00414C  502B               	movf	(??_reverseOneSquare+1)^0,w,c
  5938   00414E  0A80               	xorlw	128
  5939   004150  6E2C               	movwf	(??_reverseOneSquare+2)^0,c
  5940   004152  5030               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  5941   004154  0A80               	xorlw	128
  5942   004156  582C               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5943   004158  B0D8               	btfsc	status,0,c
  5944   00415A  EFB1  F020         	goto	u4091
  5945   00415E  EFB3  F020         	goto	u4090
  5946   004162                     u4091:
  5947   004162  EF57  F020         	goto	l4847
  5948   004166                     u4090:
  5949   004166                     
  5950                           ;dc_motor.c: 484:     for (i=0;i<reverseDuration;i++) {
  5951   004166  0E00               	movlw	0
  5952   004168  6E2E               	movwf	(reverseOneSquare@i+1)^0,c
  5953   00416A  0E00               	movlw	0
  5954   00416C  6E2D               	movwf	reverseOneSquare@i^0,c
  5955   00416E  EFC3  F020         	goto	l683
  5956   004172                     l4865:
  5957                           
  5958                           ;dc_motor.c: 485:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5959   004172  0E68               	movlw	104
  5960   004174  6E2A               	movwf	??_reverseOneSquare^0,c
  5961   004176  0EE4               	movlw	228
  5962   004178                     u6387:
  5963   004178  2EE8               	decfsz	wreg,f,c
  5964   00417A  D7FE               	bra	u6387
  5965   00417C  2E2A               	decfsz	??_reverseOneSquare^0,f,c
  5966   00417E  D7FC               	bra	u6387
  5967   004180  D000               	nop2	
  5968   004182                     
  5969                           ;dc_motor.c: 486:         }
  5970   004182  4A2D               	infsnz	reverseOneSquare@i^0,f,c
  5971   004184  2A2E               	incf	(reverseOneSquare@i+1)^0,f,c
  5972   004186                     l683:
  5973   004186  5028               	movf	reverseOneSquare@reverseDuration^0,w,c
  5974   004188  6E2A               	movwf	??_reverseOneSquare^0,c
  5975   00418A  6A2B               	clrf	(??_reverseOneSquare+1)^0,c
  5976   00418C  502A               	movf	??_reverseOneSquare^0,w,c
  5977   00418E  5C2D               	subwf	reverseOneSquare@i^0,w,c
  5978   004190  502E               	movf	(reverseOneSquare@i+1)^0,w,c
  5979   004192  0A80               	xorlw	128
  5980   004194  6E2C               	movwf	(??_reverseOneSquare+2)^0,c
  5981   004196  502B               	movf	(??_reverseOneSquare+1)^0,w,c
  5982   004198  0A80               	xorlw	128
  5983   00419A  582C               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5984   00419C  A0D8               	btfss	status,0,c
  5985   00419E  EFD3  F020         	goto	u4101
  5986   0041A2  EFD5  F020         	goto	u4100
  5987   0041A6                     u4101:
  5988   0041A6  EFB9  F020         	goto	l4865
  5989   0041AA                     u4100:
  5990   0041AA                     
  5991                           ;dc_motor.c: 488:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  5992   0041AA  C027  F02F         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  5993   0041AE  6A30               	clrf	(reverseOneSquare@cur_power+1)^0,c
  5994   0041B0                     l4869:
  5995   0041B0  BE30               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  5996   0041B2  EFDF  F020         	goto	u4110
  5997   0041B6  EFDD  F020         	goto	u4111
  5998   0041BA                     u4111:
  5999   0041BA  EFE1  F020         	goto	l4873
  6000   0041BE                     u4110:
  6001   0041BE  EF2E  F021         	goto	l4889
  6002   0041C2                     l4873:
  6003                           
  6004                           ;dc_motor.c: 489:         mL->power = cur_power+mL->compensation;
  6005   0041C2  EE20 F009          	lfsr	2,9
  6006   0041C6  5023               	movf	reverseOneSquare@mL^0,w,c
  6007   0041C8  26D9               	addwf	fsr2l,f,c
  6008   0041CA  5024               	movf	(reverseOneSquare@mL+1)^0,w,c
  6009   0041CC  22DA               	addwfc	fsr2h,f,c
  6010   0041CE  50DF               	movf	indf2,w,c
  6011   0041D0  242F               	addwf	reverseOneSquare@cur_power^0,w,c
  6012   0041D2  C023  FFD9         	movff	reverseOneSquare@mL,fsr2l
  6013   0041D6  C024  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  6014   0041DA  6EDF               	movwf	indf2,c
  6015                           
  6016                           ;dc_motor.c: 490:         mR->power = cur_power+mR->compensation;
  6017   0041DC  EE20 F009          	lfsr	2,9
  6018   0041E0  5025               	movf	reverseOneSquare@mR^0,w,c
  6019   0041E2  26D9               	addwf	fsr2l,f,c
  6020   0041E4  5026               	movf	(reverseOneSquare@mR+1)^0,w,c
  6021   0041E6  22DA               	addwfc	fsr2h,f,c
  6022   0041E8  50DF               	movf	indf2,w,c
  6023   0041EA  242F               	addwf	reverseOneSquare@cur_power^0,w,c
  6024   0041EC  C025  FFD9         	movff	reverseOneSquare@mR,fsr2l
  6025   0041F0  C026  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  6026   0041F4  6EDF               	movwf	indf2,c
  6027   0041F6                     
  6028                           ;dc_motor.c: 491:         setMotorPWM(mL);
  6029   0041F6  C023  F01D         	movff	reverseOneSquare@mL,setMotorPWM@m
  6030   0041FA  C024  F01E         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  6031   0041FE  EC13  F023         	call	_setMotorPWM	;wreg free
  6032   004202                     
  6033                           ;dc_motor.c: 492:         setMotorPWM(mR);
  6034   004202  C025  F01D         	movff	reverseOneSquare@mR,setMotorPWM@m
  6035   004206  C026  F01E         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  6036   00420A  EC13  F023         	call	_setMotorPWM	;wreg free
  6037   00420E                     
  6038                           ;dc_motor.c: 493:         for (i=0;i<straightRamp;i++) {
  6039   00420E  0E00               	movlw	0
  6040   004210  6E2E               	movwf	(reverseOneSquare@i+1)^0,c
  6041   004212  0E00               	movlw	0
  6042   004214  6E2D               	movwf	reverseOneSquare@i^0,c
  6043   004216  EF17  F021         	goto	l688
  6044   00421A                     l4881:
  6045                           
  6046                           ;dc_motor.c: 494:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6047   00421A  0E68               	movlw	104
  6048   00421C  6E2A               	movwf	??_reverseOneSquare^0,c
  6049   00421E  0EE4               	movlw	228
  6050   004220                     u6397:
  6051   004220  2EE8               	decfsz	wreg,f,c
  6052   004222  D7FE               	bra	u6397
  6053   004224  2E2A               	decfsz	??_reverseOneSquare^0,f,c
  6054   004226  D7FC               	bra	u6397
  6055   004228  D000               	nop2	
  6056   00422A                     
  6057                           ;dc_motor.c: 495:         }
  6058   00422A  4A2D               	infsnz	reverseOneSquare@i^0,f,c
  6059   00422C  2A2E               	incf	(reverseOneSquare@i+1)^0,f,c
  6060   00422E                     l688:
  6061   00422E  5029               	movf	reverseOneSquare@straightRamp^0,w,c
  6062   004230  6E2A               	movwf	??_reverseOneSquare^0,c
  6063   004232  6A2B               	clrf	(??_reverseOneSquare+1)^0,c
  6064   004234  502A               	movf	??_reverseOneSquare^0,w,c
  6065   004236  5C2D               	subwf	reverseOneSquare@i^0,w,c
  6066   004238  502E               	movf	(reverseOneSquare@i+1)^0,w,c
  6067   00423A  0A80               	xorlw	128
  6068   00423C  6E2C               	movwf	(??_reverseOneSquare+2)^0,c
  6069   00423E  502B               	movf	(??_reverseOneSquare+1)^0,w,c
  6070   004240  0A80               	xorlw	128
  6071   004242  582C               	subwfb	(??_reverseOneSquare+2)^0,w,c
  6072   004244  A0D8               	btfss	status,0,c
  6073   004246  EF27  F021         	goto	u4121
  6074   00424A  EF29  F021         	goto	u4120
  6075   00424E                     u4121:
  6076   00424E  EF0D  F021         	goto	l4881
  6077   004252                     u4120:
  6078   004252                     
  6079                           ;dc_motor.c: 496:     }
  6080   004252  062F               	decf	reverseOneSquare@cur_power^0,f,c
  6081   004254  A0D8               	btfss	status,0,c
  6082   004256  0630               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  6083   004258  EFD8  F020         	goto	l4869
  6084   00425C                     l4889:
  6085                           
  6086                           ;dc_motor.c: 497:     mL->power = 0;
  6087   00425C  C023  FFD9         	movff	reverseOneSquare@mL,fsr2l
  6088   004260  C024  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  6089   004264  6ADF               	clrf	indf2,c
  6090                           
  6091                           ;dc_motor.c: 498:     mR->power = 0;
  6092   004266  C025  FFD9         	movff	reverseOneSquare@mR,fsr2l
  6093   00426A  C026  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  6094   00426E  6ADF               	clrf	indf2,c
  6095   004270  0012               	return		;funcret
  6096   004272                     __end_of_reverseOneSquare:
  6097                           	callstack 0
  6098                           
  6099 ;; *************** function _resetTimer *****************
  6100 ;; Defined at:
  6101 ;;		line 23 in file "timers.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;		None
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		wreg, status,2
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6119 ;;Total ram usage:        0 bytes
  6120 ;; Hardware stack levels used: 1
  6121 ;; Hardware stack levels required when called: 5
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_main
  6126 ;;		_returnHome
  6127 ;;		_lostReturnHome
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text8
  6132   005302                     __ptext8:
  6133                           	callstack 0
  6134   005302                     _resetTimer:
  6135                           	callstack 25
  6136   005302                     
  6137                           ;timers.c: 25:     TMR0H=0;
  6138   005302  0E00               	movlw	0
  6139   005304  6ED4               	movwf	212,c	;volatile
  6140                           
  6141                           ;timers.c: 26:     TMR0L=0;
  6142   005306  0E00               	movlw	0
  6143   005308  6ED3               	movwf	211,c	;volatile
  6144   00530A  0012               	return		;funcret
  6145   00530C                     __end_of_resetTimer:
  6146                           	callstack 0
  6147                           
  6148 ;; *************** function _get16bitTMR0val *****************
  6149 ;; Defined at:
  6150 ;;		line 33 in file "timers.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;		None
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  timer_val       2   23[COMRAM] unsigned int 
  6155 ;;  timer_high      2   21[COMRAM] unsigned int 
  6156 ;;  timer_low       2   19[COMRAM] unsigned int 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  2   15[COMRAM] unsigned int 
  6159 ;; Registers used:
  6160 ;;		wreg, status,2, status,0
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6167 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6169 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6170 ;;Total ram usage:       10 bytes
  6171 ;; Hardware stack levels used: 1
  6172 ;; Hardware stack levels required when called: 5
  6173 ;; This function calls:
  6174 ;;		Nothing
  6175 ;; This function is called by:
  6176 ;;		_main
  6177 ;;		_returnHome
  6178 ;;		_lostReturnHome
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text9
  6183   005124                     __ptext9:
  6184                           	callstack 0
  6185   005124                     _get16bitTMR0val:
  6186                           	callstack 23
  6187   005124                     
  6188                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  6189   005124  CFD3 F014          	movff	4051,get16bitTMR0val@timer_low	;volatile
  6190   005128  6A15               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  6191                           
  6192                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  6193   00512A  CFD4 F016          	movff	4052,get16bitTMR0val@timer_high	;volatile
  6194   00512E  6A17               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  6195   005130                     
  6196                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  6197   005130  5016               	movf	get16bitTMR0val@timer_high^0,w,c
  6198   005132  6E13               	movwf	(??_get16bitTMR0val+1)^0,c
  6199   005134  6A12               	clrf	??_get16bitTMR0val^0,c
  6200   005136  5014               	movf	get16bitTMR0val@timer_low^0,w,c
  6201   005138  1012               	iorwf	??_get16bitTMR0val^0,w,c
  6202   00513A  6E18               	movwf	get16bitTMR0val@timer_val^0,c
  6203   00513C  5015               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  6204   00513E  1013               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  6205   005140  6E19               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  6206   005142                     
  6207                           ;timers.c: 39:     return timer_val;
  6208   005142  C018  F010         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  6209   005146  C019  F011         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  6210   00514A  0012               	return		;funcret
  6211   00514C                     __end_of_get16bitTMR0val:
  6212                           	callstack 0
  6213                           
  6214 ;; *************** function _fullSpeedAhead *****************
  6215 ;; Defined at:
  6216 ;;		line 451 in file "dc_motor.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  6219 ;;		 -> main@motorL(10), 
  6220 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  6221 ;;		 -> main@motorR(10), 
  6222 ;;  straightSpee    1   38[COMRAM] unsigned char 
  6223 ;;  straightRamp    1   39[COMRAM] unsigned char 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  cur_power       2   45[COMRAM] int 
  6226 ;;  i               2   43[COMRAM] int 
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      void 
  6229 ;; Registers used:
  6230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6236 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6237 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6238 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6239 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6240 ;;Total ram usage:       13 bytes
  6241 ;; Hardware stack levels used: 1
  6242 ;; Hardware stack levels required when called: 7
  6243 ;; This function calls:
  6244 ;;		_setMotorPWM
  6245 ;; This function is called by:
  6246 ;;		_main
  6247 ;;		_move
  6248 ;;		_returnHome
  6249 ;;		_lostReturnHome
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text10
  6254   0049A6                     __ptext10:
  6255                           	callstack 0
  6256   0049A6                     _fullSpeedAhead:
  6257                           	callstack 21
  6258   0049A6                     
  6259                           ;dc_motor.c: 451: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 452: {;dc_motor.c: 453:     mL->direction = 1;
  6260   0049A6  EE20 F001          	lfsr	2,1
  6261   0049AA  5023               	movf	fullSpeedAhead@mL^0,w,c
  6262   0049AC  26D9               	addwf	fsr2l,f,c
  6263   0049AE  5024               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6264   0049B0  22DA               	addwfc	fsr2h,f,c
  6265   0049B2  0E01               	movlw	1
  6266   0049B4  6EDF               	movwf	indf2,c
  6267                           
  6268                           ;dc_motor.c: 454:     mR->direction = 1;
  6269   0049B6  EE20 F001          	lfsr	2,1
  6270   0049BA  5025               	movf	fullSpeedAhead@mR^0,w,c
  6271   0049BC  26D9               	addwf	fsr2l,f,c
  6272   0049BE  5026               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6273   0049C0  22DA               	addwfc	fsr2h,f,c
  6274   0049C2  0E01               	movlw	1
  6275   0049C4  6EDF               	movwf	indf2,c
  6276   0049C6                     
  6277                           ;dc_motor.c: 455:     int i;;dc_motor.c: 456:     int cur_power;;dc_motor.c: 457:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  6278   0049C6  0E00               	movlw	0
  6279   0049C8  6E2F               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  6280   0049CA  0E01               	movlw	1
  6281   0049CC  6E2E               	movwf	fullSpeedAhead@cur_power^0,c
  6282   0049CE  EF33  F025         	goto	l4683
  6283   0049D2                     l4669:
  6284                           
  6285                           ;dc_motor.c: 458:         mL->power = cur_power+mL->compensation;
  6286   0049D2  EE20 F009          	lfsr	2,9
  6287   0049D6  5023               	movf	fullSpeedAhead@mL^0,w,c
  6288   0049D8  26D9               	addwf	fsr2l,f,c
  6289   0049DA  5024               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6290   0049DC  22DA               	addwfc	fsr2h,f,c
  6291   0049DE  50DF               	movf	indf2,w,c
  6292   0049E0  242E               	addwf	fullSpeedAhead@cur_power^0,w,c
  6293   0049E2  C023  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6294   0049E6  C024  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6295   0049EA  6EDF               	movwf	indf2,c
  6296                           
  6297                           ;dc_motor.c: 459:         mR->power = cur_power+mR->compensation;
  6298   0049EC  EE20 F009          	lfsr	2,9
  6299   0049F0  5025               	movf	fullSpeedAhead@mR^0,w,c
  6300   0049F2  26D9               	addwf	fsr2l,f,c
  6301   0049F4  5026               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6302   0049F6  22DA               	addwfc	fsr2h,f,c
  6303   0049F8  50DF               	movf	indf2,w,c
  6304   0049FA  242E               	addwf	fullSpeedAhead@cur_power^0,w,c
  6305   0049FC  C025  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6306   004A00  C026  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6307   004A04  6EDF               	movwf	indf2,c
  6308   004A06                     
  6309                           ;dc_motor.c: 460:         setMotorPWM(mL);
  6310   004A06  C023  F01D         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6311   004A0A  C024  F01E         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6312   004A0E  EC13  F023         	call	_setMotorPWM	;wreg free
  6313   004A12                     
  6314                           ;dc_motor.c: 461:         setMotorPWM(mR);
  6315   004A12  C025  F01D         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6316   004A16  C026  F01E         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6317   004A1A  EC13  F023         	call	_setMotorPWM	;wreg free
  6318   004A1E                     
  6319                           ;dc_motor.c: 462:         for (i=0;i<straightRamp;i++) {
  6320   004A1E  0E00               	movlw	0
  6321   004A20  6E2D               	movwf	(fullSpeedAhead@i+1)^0,c
  6322   004A22  0E00               	movlw	0
  6323   004A24  6E2C               	movwf	fullSpeedAhead@i^0,c
  6324   004A26  EF1F  F025         	goto	l670
  6325   004A2A                     l4677:
  6326                           
  6327                           ;dc_motor.c: 463:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6328   004A2A  0E68               	movlw	104
  6329   004A2C  6E29               	movwf	??_fullSpeedAhead^0,c
  6330   004A2E  0EE4               	movlw	228
  6331   004A30                     u6407:
  6332   004A30  2EE8               	decfsz	wreg,f,c
  6333   004A32  D7FE               	bra	u6407
  6334   004A34  2E29               	decfsz	??_fullSpeedAhead^0,f,c
  6335   004A36  D7FC               	bra	u6407
  6336   004A38  D000               	nop2	
  6337   004A3A                     
  6338                           ;dc_motor.c: 464:         }
  6339   004A3A  4A2C               	infsnz	fullSpeedAhead@i^0,f,c
  6340   004A3C  2A2D               	incf	(fullSpeedAhead@i+1)^0,f,c
  6341   004A3E                     l670:
  6342   004A3E  5028               	movf	fullSpeedAhead@straightRamp^0,w,c
  6343   004A40  6E29               	movwf	??_fullSpeedAhead^0,c
  6344   004A42  6A2A               	clrf	(??_fullSpeedAhead+1)^0,c
  6345   004A44  5029               	movf	??_fullSpeedAhead^0,w,c
  6346   004A46  5C2C               	subwf	fullSpeedAhead@i^0,w,c
  6347   004A48  502D               	movf	(fullSpeedAhead@i+1)^0,w,c
  6348   004A4A  0A80               	xorlw	128
  6349   004A4C  6E2B               	movwf	(??_fullSpeedAhead+2)^0,c
  6350   004A4E  502A               	movf	(??_fullSpeedAhead+1)^0,w,c
  6351   004A50  0A80               	xorlw	128
  6352   004A52  582B               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6353   004A54  A0D8               	btfss	status,0,c
  6354   004A56  EF2F  F025         	goto	u3901
  6355   004A5A  EF31  F025         	goto	u3900
  6356   004A5E                     u3901:
  6357   004A5E  EF15  F025         	goto	l4677
  6358   004A62                     u3900:
  6359   004A62                     
  6360                           ;dc_motor.c: 465:     }
  6361   004A62  4A2E               	infsnz	fullSpeedAhead@cur_power^0,f,c
  6362   004A64  2A2F               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  6363   004A66                     l4683:
  6364   004A66  5027               	movf	fullSpeedAhead@straightSpeed^0,w,c
  6365   004A68  6E29               	movwf	??_fullSpeedAhead^0,c
  6366   004A6A  6A2A               	clrf	(??_fullSpeedAhead+1)^0,c
  6367   004A6C  502E               	movf	fullSpeedAhead@cur_power^0,w,c
  6368   004A6E  5C29               	subwf	??_fullSpeedAhead^0,w,c
  6369   004A70  502A               	movf	(??_fullSpeedAhead+1)^0,w,c
  6370   004A72  0A80               	xorlw	128
  6371   004A74  6E2B               	movwf	(??_fullSpeedAhead+2)^0,c
  6372   004A76  502F               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  6373   004A78  0A80               	xorlw	128
  6374   004A7A  582B               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6375   004A7C  B0D8               	btfsc	status,0,c
  6376   004A7E  EF43  F025         	goto	u3911
  6377   004A82  EF45  F025         	goto	u3910
  6378   004A86                     u3911:
  6379   004A86  EFE9  F024         	goto	l4669
  6380   004A8A                     u3910:
  6381   004A8A  0012               	return		;funcret
  6382   004A8C                     __end_of_fullSpeedAhead:
  6383                           	callstack 0
  6384                           
  6385 ;; *************** function _initUSART4 *****************
  6386 ;; Defined at:
  6387 ;;		line 4 in file "serial.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		wreg, status,2
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6405 ;;Total ram usage:        0 bytes
  6406 ;; Hardware stack levels used: 1
  6407 ;; Hardware stack levels required when called: 5
  6408 ;; This function calls:
  6409 ;;		Nothing
  6410 ;; This function is called by:
  6411 ;;		_main
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text11
  6416   00526C                     __ptext11:
  6417                           	callstack 0
  6418   00526C                     _initUSART4:
  6419                           	callstack 25
  6420   00526C                     
  6421                           ;serial.c: 7:     RC0PPS = 0x12;
  6422   00526C  0E12               	movlw	18
  6423   00526E  010E               	movlb	14	; () banked
  6424   005270  6F62               	movwf	98,b	;volatile
  6425                           
  6426                           ;serial.c: 8:     RX4PPS = 0x11;
  6427   005272  0E11               	movlw	17
  6428   005274  6F15               	movwf	21,b	;volatile
  6429   005276                     
  6430                           ; BSR set to: 14
  6431                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  6432   005276  97E9               	bcf	233,3,b	;volatile
  6433   005278                     
  6434                           ; BSR set to: 14
  6435                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  6436   005278  95E8               	bcf	232,2,b	;volatile
  6437                           
  6438                           ;serial.c: 13:     SP4BRGL = 51;
  6439   00527A  0E33               	movlw	51
  6440   00527C  6FE5               	movwf	229,b	;volatile
  6441                           
  6442                           ;serial.c: 14:     SP4BRGH = 0;
  6443   00527E  0E00               	movlw	0
  6444   005280  6FE6               	movwf	230,b	;volatile
  6445   005282                     
  6446                           ; BSR set to: 14
  6447                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  6448   005282  89E7               	bsf	231,4,b	;volatile
  6449   005284                     
  6450                           ; BSR set to: 14
  6451                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  6452   005284  8BE8               	bsf	232,5,b	;volatile
  6453   005286                     
  6454                           ; BSR set to: 14
  6455                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  6456   005286  8FE7               	bsf	231,7,b	;volatile
  6457   005288                     
  6458                           ; BSR set to: 14
  6459   005288  0012               	return		;funcret
  6460   00528A                     __end_of_initUSART4:
  6461                           	callstack 0
  6462                           
  6463 ;; *************** function _initDCmotorsPWM *****************
  6464 ;; Defined at:
  6465 ;;		line 8 in file "dc_motor.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  PWMperiod       2   15[COMRAM] unsigned int 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1    wreg      void 
  6472 ;; Registers used:
  6473 ;;		wreg, status,2
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6482 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6483 ;;Total ram usage:        2 bytes
  6484 ;; Hardware stack levels used: 1
  6485 ;; Hardware stack levels required when called: 5
  6486 ;; This function calls:
  6487 ;;		Nothing
  6488 ;; This function is called by:
  6489 ;;		_main
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           	psect	text12
  6494   004D40                     __ptext12:
  6495                           	callstack 0
  6496   004D40                     _initDCmotorsPWM:
  6497                           	callstack 25
  6498   004D40                     
  6499                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  6500   004D40  947D               	bcf	125,2,c	;volatile
  6501                           
  6502                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  6503   004D42  9485               	bcf	133,2,c	;volatile
  6504                           
  6505                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  6506   004D44  987D               	bcf	125,4,c	;volatile
  6507                           
  6508                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  6509   004D46  9885               	bcf	133,4,c	;volatile
  6510                           
  6511                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  6512   004D48  9E7B               	bcf	123,7,c	;volatile
  6513                           
  6514                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  6515   004D4A  9E83               	bcf	131,7,c	;volatile
  6516                           
  6517                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  6518   004D4C  9C7F               	bcf	127,6,c	;volatile
  6519                           
  6520                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  6521   004D4E  9C87               	bcf	135,6,c	;volatile
  6522   004D50                     
  6523                           ;dc_motor.c: 21:     RE2PPS=0x05;
  6524   004D50  0E05               	movlw	5
  6525   004D52  010E               	movlb	14	; () banked
  6526   004D54  6F74               	movwf	116,b	;volatile
  6527                           
  6528                           ;dc_motor.c: 22:     RE4PPS=0x06;
  6529   004D56  0E06               	movlw	6
  6530   004D58  6F76               	movwf	118,b	;volatile
  6531                           
  6532                           ;dc_motor.c: 23:     RC7PPS=0x07;
  6533   004D5A  0E07               	movlw	7
  6534   004D5C  6F69               	movwf	105,b	;volatile
  6535                           
  6536                           ;dc_motor.c: 24:     RG6PPS=0x08;
  6537   004D5E  0E08               	movlw	8
  6538   004D60  6F88               	movwf	136,b	;volatile
  6539                           
  6540                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  6541   004D62  50BD               	movf	189,w,c	;volatile
  6542   004D64  0B8F               	andlw	-113
  6543   004D66  0930               	iorlw	48
  6544   004D68  6EBD               	movwf	189,c	;volatile
  6545                           
  6546                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  6547   004D6A  0EE0               	movlw	-32
  6548   004D6C  16BE               	andwf	190,f,c	;volatile
  6549                           
  6550                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  6551   004D6E  50BF               	movf	191,w,c	;volatile
  6552   004D70  0BF0               	andlw	-16
  6553   004D72  0901               	iorlw	1
  6554   004D74  6EBF               	movwf	191,c	;volatile
  6555   004D76                     
  6556                           ; BSR set to: 14
  6557                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  6558   004D76  C010  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  6559   004D7A                     
  6560                           ; BSR set to: 14
  6561                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  6562   004D7A  8EBD               	bsf	189,7,c	;volatile
  6563                           
  6564                           ;dc_motor.c: 38:     CCPR1H=0;
  6565   004D7C  0E00               	movlw	0
  6566   004D7E  6EAA               	movwf	170,c	;volatile
  6567                           
  6568                           ;dc_motor.c: 39:     CCPR2H=0;
  6569   004D80  0E00               	movlw	0
  6570   004D82  6EA6               	movwf	166,c	;volatile
  6571                           
  6572                           ;dc_motor.c: 40:     CCPR3H=0;
  6573   004D84  0E00               	movlw	0
  6574   004D86  010F               	movlb	15	; () banked
  6575   004D88  6F25               	movwf	37,b	;volatile
  6576                           
  6577                           ;dc_motor.c: 41:     CCPR4H=0;
  6578   004D8A  0E00               	movlw	0
  6579   004D8C  6F21               	movwf	33,b	;volatile
  6580                           
  6581                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  6582   004D8E  0EFC               	movlw	-4
  6583   004D90  16AD               	andwf	173,f,c	;volatile
  6584                           
  6585                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  6586   004D92  0EF3               	movlw	-13
  6587   004D94  16AD               	andwf	173,f,c	;volatile
  6588                           
  6589                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  6590   004D96  0ECF               	movlw	-49
  6591   004D98  16AD               	andwf	173,f,c	;volatile
  6592                           
  6593                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  6594   004D9A  0E3F               	movlw	-193
  6595   004D9C  16AD               	andwf	173,f,c	;volatile
  6596   004D9E                     
  6597                           ; BSR set to: 15
  6598                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  6599   004D9E  88AB               	bsf	171,4,c	;volatile
  6600                           
  6601                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  6602   004DA0  50AB               	movf	171,w,c	;volatile
  6603   004DA2  0BF0               	andlw	-16
  6604   004DA4  090C               	iorlw	12
  6605   004DA6  6EAB               	movwf	171,c	;volatile
  6606   004DA8                     
  6607                           ; BSR set to: 15
  6608                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  6609   004DA8  8EAB               	bsf	171,7,c	;volatile
  6610   004DAA                     
  6611                           ; BSR set to: 15
  6612                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  6613   004DAA  88A7               	bsf	167,4,c	;volatile
  6614                           
  6615                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  6616   004DAC  50A7               	movf	167,w,c	;volatile
  6617   004DAE  0BF0               	andlw	-16
  6618   004DB0  090C               	iorlw	12
  6619   004DB2  6EA7               	movwf	167,c	;volatile
  6620   004DB4                     
  6621                           ; BSR set to: 15
  6622                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  6623   004DB4  8EA7               	bsf	167,7,c	;volatile
  6624   004DB6                     
  6625                           ; BSR set to: 15
  6626                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  6627   004DB6  8926               	bsf	38,4,b	;volatile
  6628                           
  6629                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  6630   004DB8  5126               	movf	38,w,b	;volatile
  6631   004DBA  0BF0               	andlw	-16
  6632   004DBC  090C               	iorlw	12
  6633   004DBE  6F26               	movwf	38,b	;volatile
  6634   004DC0                     
  6635                           ; BSR set to: 15
  6636                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  6637   004DC0  8F26               	bsf	38,7,b	;volatile
  6638   004DC2                     
  6639                           ; BSR set to: 15
  6640                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  6641   004DC2  8922               	bsf	34,4,b	;volatile
  6642                           
  6643                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  6644   004DC4  5122               	movf	34,w,b	;volatile
  6645   004DC6  0BF0               	andlw	-16
  6646   004DC8  090C               	iorlw	12
  6647   004DCA  6F22               	movwf	34,b	;volatile
  6648   004DCC                     
  6649                           ; BSR set to: 15
  6650                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  6651   004DCC  8F22               	bsf	34,7,b	;volatile
  6652   004DCE                     
  6653                           ; BSR set to: 15
  6654   004DCE  0012               	return		;funcret
  6655   004DD0                     __end_of_initDCmotorsPWM:
  6656                           	callstack 0
  6657                           
  6658 ;; *************** function _color_detect *****************
  6659 ;; Defined at:
  6660 ;;		line 141 in file "color.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;  HSV             6   15[COMRAM] struct HSV_val
  6663 ;;  red             6   21[COMRAM] struct HSV_calib
  6664 ;;  green           6   27[COMRAM] struct HSV_calib
  6665 ;;  blue            6   33[COMRAM] struct HSV_calib
  6666 ;;  yellow          6   39[COMRAM] struct HSV_calib
  6667 ;;  pink            6   45[COMRAM] struct HSV_calib
  6668 ;;  orange          6   51[COMRAM] struct HSV_calib
  6669 ;;  lightblue       6   57[COMRAM] struct HSV_calib
  6670 ;;  white           6   63[COMRAM] struct HSV_calib
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;  color           1   71[COMRAM] unsigned char 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  1    wreg      unsigned char 
  6675 ;; Registers used:
  6676 ;;		wreg, status,2, status,0
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6682 ;;      Params:        54       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6685 ;;      Totals:        57       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6686 ;;Total ram usage:       57 bytes
  6687 ;; Hardware stack levels used: 1
  6688 ;; Hardware stack levels required when called: 5
  6689 ;; This function calls:
  6690 ;;		Nothing
  6691 ;; This function is called by:
  6692 ;;		_main
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text13
  6697   003A40                     __ptext13:
  6698                           	callstack 0
  6699   003A40                     _color_detect:
  6700                           	callstack 25
  6701   003A40                     
  6702                           ;color.c: 146:     if ((red.H)-1000 < HSV.H && HSV.H < (red.H)+1000) {color = 1;}
  6703   003A40  0E18               	movlw	24
  6704   003A42  2416               	addwf	color_detect@red^0,w,c
  6705   003A44  6E46               	movwf	??_color_detect^0,c
  6706   003A46  0EFC               	movlw	252
  6707   003A48  2017               	addwfc	(color_detect@red+1)^0,w,c
  6708   003A4A  6E47               	movwf	(??_color_detect+1)^0,c
  6709   003A4C  5010               	movf	color_detect@HSV^0,w,c
  6710   003A4E  5C46               	subwf	??_color_detect^0,w,c
  6711   003A50  5011               	movf	(color_detect@HSV+1)^0,w,c
  6712   003A52  5847               	subwfb	(??_color_detect+1)^0,w,c
  6713   003A54  B0D8               	btfsc	status,0,c
  6714   003A56  EF2F  F01D         	goto	u4781
  6715   003A5A  EF31  F01D         	goto	u4780
  6716   003A5E                     u4781:
  6717   003A5E  EF46  F01D         	goto	l5501
  6718   003A62                     u4780:
  6719   003A62  0EE8               	movlw	232
  6720   003A64  2416               	addwf	color_detect@red^0,w,c
  6721   003A66  6E46               	movwf	??_color_detect^0,c
  6722   003A68  0E03               	movlw	3
  6723   003A6A  2017               	addwfc	(color_detect@red+1)^0,w,c
  6724   003A6C  6E47               	movwf	(??_color_detect+1)^0,c
  6725   003A6E  5046               	movf	??_color_detect^0,w,c
  6726   003A70  5C10               	subwf	color_detect@HSV^0,w,c
  6727   003A72  5047               	movf	(??_color_detect+1)^0,w,c
  6728   003A74  5811               	subwfb	(color_detect@HSV+1)^0,w,c
  6729   003A76  B0D8               	btfsc	status,0,c
  6730   003A78  EF40  F01D         	goto	u4791
  6731   003A7C  EF42  F01D         	goto	u4790
  6732   003A80                     u4791:
  6733   003A80  EF46  F01D         	goto	l5501
  6734   003A84                     u4790:
  6735   003A84  0E01               	movlw	1
  6736   003A86  6E48               	movwf	color_detect@color^0,c
  6737   003A88  EF52  F01E         	goto	l165
  6738   003A8C                     l5501:
  6739   003A8C  0E18               	movlw	24
  6740   003A8E  241C               	addwf	color_detect@green^0,w,c
  6741   003A90  6E46               	movwf	??_color_detect^0,c
  6742   003A92  0EFC               	movlw	252
  6743   003A94  201D               	addwfc	(color_detect@green+1)^0,w,c
  6744   003A96  6E47               	movwf	(??_color_detect+1)^0,c
  6745   003A98  5010               	movf	color_detect@HSV^0,w,c
  6746   003A9A  5C46               	subwf	??_color_detect^0,w,c
  6747   003A9C  5011               	movf	(color_detect@HSV+1)^0,w,c
  6748   003A9E  5847               	subwfb	(??_color_detect+1)^0,w,c
  6749   003AA0  B0D8               	btfsc	status,0,c
  6750   003AA2  EF55  F01D         	goto	u4801
  6751   003AA6  EF57  F01D         	goto	u4800
  6752   003AAA                     u4801:
  6753   003AAA  EF6C  F01D         	goto	l5507
  6754   003AAE                     u4800:
  6755   003AAE  0EE8               	movlw	232
  6756   003AB0  241C               	addwf	color_detect@green^0,w,c
  6757   003AB2  6E46               	movwf	??_color_detect^0,c
  6758   003AB4  0E03               	movlw	3
  6759   003AB6  201D               	addwfc	(color_detect@green+1)^0,w,c
  6760   003AB8  6E47               	movwf	(??_color_detect+1)^0,c
  6761   003ABA  5046               	movf	??_color_detect^0,w,c
  6762   003ABC  5C10               	subwf	color_detect@HSV^0,w,c
  6763   003ABE  5047               	movf	(??_color_detect+1)^0,w,c
  6764   003AC0  5811               	subwfb	(color_detect@HSV+1)^0,w,c
  6765   003AC2  B0D8               	btfsc	status,0,c
  6766   003AC4  EF66  F01D         	goto	u4811
  6767   003AC8  EF68  F01D         	goto	u4810
  6768   003ACC                     u4811:
  6769   003ACC  EF6C  F01D         	goto	l5507
  6770   003AD0                     u4810:
  6771   003AD0  0E02               	movlw	2
  6772   003AD2  6E48               	movwf	color_detect@color^0,c
  6773   003AD4  EF52  F01E         	goto	l165
  6774   003AD8                     l5507:
  6775   003AD8  0E18               	movlw	24
  6776   003ADA  2422               	addwf	color_detect@blue^0,w,c
  6777   003ADC  6E46               	movwf	??_color_detect^0,c
  6778   003ADE  0EFC               	movlw	252
  6779   003AE0  2023               	addwfc	(color_detect@blue+1)^0,w,c
  6780   003AE2  6E47               	movwf	(??_color_detect+1)^0,c
  6781   003AE4  5010               	movf	color_detect@HSV^0,w,c
  6782   003AE6  5C46               	subwf	??_color_detect^0,w,c
  6783   003AE8  5011               	movf	(color_detect@HSV+1)^0,w,c
  6784   003AEA  5847               	subwfb	(??_color_detect+1)^0,w,c
  6785   003AEC  B0D8               	btfsc	status,0,c
  6786   003AEE  EF7B  F01D         	goto	u4821
  6787   003AF2  EF7D  F01D         	goto	u4820
  6788   003AF6                     u4821:
  6789   003AF6  EF92  F01D         	goto	l5513
  6790   003AFA                     u4820:
  6791   003AFA  0EE8               	movlw	232
  6792   003AFC  2422               	addwf	color_detect@blue^0,w,c
  6793   003AFE  6E46               	movwf	??_color_detect^0,c
  6794   003B00  0E03               	movlw	3
  6795   003B02  2023               	addwfc	(color_detect@blue+1)^0,w,c
  6796   003B04  6E47               	movwf	(??_color_detect+1)^0,c
  6797   003B06  5046               	movf	??_color_detect^0,w,c
  6798   003B08  5C10               	subwf	color_detect@HSV^0,w,c
  6799   003B0A  5047               	movf	(??_color_detect+1)^0,w,c
  6800   003B0C  5811               	subwfb	(color_detect@HSV+1)^0,w,c
  6801   003B0E  B0D8               	btfsc	status,0,c
  6802   003B10  EF8C  F01D         	goto	u4831
  6803   003B14  EF8E  F01D         	goto	u4830
  6804   003B18                     u4831:
  6805   003B18  EF92  F01D         	goto	l5513
  6806   003B1C                     u4830:
  6807   003B1C  0E03               	movlw	3
  6808   003B1E  6E48               	movwf	color_detect@color^0,c
  6809   003B20  EF52  F01E         	goto	l165
  6810   003B24                     l5513:
  6811   003B24  0E18               	movlw	24
  6812   003B26  2428               	addwf	color_detect@yellow^0,w,c
  6813   003B28  6E46               	movwf	??_color_detect^0,c
  6814   003B2A  0EFC               	movlw	252
  6815   003B2C  2029               	addwfc	(color_detect@yellow+1)^0,w,c
  6816   003B2E  6E47               	movwf	(??_color_detect+1)^0,c
  6817   003B30  5010               	movf	color_detect@HSV^0,w,c
  6818   003B32  5C46               	subwf	??_color_detect^0,w,c
  6819   003B34  5011               	movf	(color_detect@HSV+1)^0,w,c
  6820   003B36  5847               	subwfb	(??_color_detect+1)^0,w,c
  6821   003B38  B0D8               	btfsc	status,0,c
  6822   003B3A  EFA1  F01D         	goto	u4841
  6823   003B3E  EFA3  F01D         	goto	u4840
  6824   003B42                     u4841:
  6825   003B42  EFB8  F01D         	goto	l5519
  6826   003B46                     u4840:
  6827   003B46  0EE8               	movlw	232
  6828   003B48  2428               	addwf	color_detect@yellow^0,w,c
  6829   003B4A  6E46               	movwf	??_color_detect^0,c
  6830   003B4C  0E03               	movlw	3
  6831   003B4E  2029               	addwfc	(color_detect@yellow+1)^0,w,c
  6832   003B50  6E47               	movwf	(??_color_detect+1)^0,c
  6833   003B52  5046               	movf	??_color_detect^0,w,c
  6834   003B54  5C10               	subwf	color_detect@HSV^0,w,c
  6835   003B56  5047               	movf	(??_color_detect+1)^0,w,c
  6836   003B58  5811               	subwfb	(color_detect@HSV+1)^0,w,c
  6837   003B5A  B0D8               	btfsc	status,0,c
  6838   003B5C  EFB2  F01D         	goto	u4851
  6839   003B60  EFB4  F01D         	goto	u4850
  6840   003B64                     u4851:
  6841   003B64  EFB8  F01D         	goto	l5519
  6842   003B68                     u4850:
  6843   003B68  0E04               	movlw	4
  6844   003B6A  6E48               	movwf	color_detect@color^0,c
  6845   003B6C  EF52  F01E         	goto	l165
  6846   003B70                     l5519:
  6847   003B70  0E18               	movlw	24
  6848   003B72  242E               	addwf	color_detect@pink^0,w,c
  6849   003B74  6E46               	movwf	??_color_detect^0,c
  6850   003B76  0EFC               	movlw	252
  6851   003B78  202F               	addwfc	(color_detect@pink+1)^0,w,c
  6852   003B7A  6E47               	movwf	(??_color_detect+1)^0,c
  6853   003B7C  5010               	movf	color_detect@HSV^0,w,c
  6854   003B7E  5C46               	subwf	??_color_detect^0,w,c
  6855   003B80  5011               	movf	(color_detect@HSV+1)^0,w,c
  6856   003B82  5847               	subwfb	(??_color_detect+1)^0,w,c
  6857   003B84  B0D8               	btfsc	status,0,c
  6858   003B86  EFC7  F01D         	goto	u4861
  6859   003B8A  EFC9  F01D         	goto	u4860
  6860   003B8E                     u4861:
  6861   003B8E  EFDE  F01D         	goto	l5525
  6862   003B92                     u4860:
  6863   003B92  0EE8               	movlw	232
  6864   003B94  242E               	addwf	color_detect@pink^0,w,c
  6865   003B96  6E46               	movwf	??_color_detect^0,c
  6866   003B98  0E03               	movlw	3
  6867   003B9A  202F               	addwfc	(color_detect@pink+1)^0,w,c
  6868   003B9C  6E47               	movwf	(??_color_detect+1)^0,c
  6869   003B9E  5046               	movf	??_color_detect^0,w,c
  6870   003BA0  5C10               	subwf	color_detect@HSV^0,w,c
  6871   003BA2  5047               	movf	(??_color_detect+1)^0,w,c
  6872   003BA4  5811               	subwfb	(color_detect@HSV+1)^0,w,c
  6873   003BA6  B0D8               	btfsc	status,0,c
  6874   003BA8  EFD8  F01D         	goto	u4871
  6875   003BAC  EFDA  F01D         	goto	u4870
  6876   003BB0                     u4871:
  6877   003BB0  EFDE  F01D         	goto	l5525
  6878   003BB4                     u4870:
  6879   003BB4  0E05               	movlw	5
  6880   003BB6  6E48               	movwf	color_detect@color^0,c
  6881   003BB8  EF52  F01E         	goto	l165
  6882   003BBC                     l5525:
  6883   003BBC  0E18               	movlw	24
  6884   003BBE  2434               	addwf	color_detect@orange^0,w,c
  6885   003BC0  6E46               	movwf	??_color_detect^0,c
  6886   003BC2  0EFC               	movlw	252
  6887   003BC4  2035               	addwfc	(color_detect@orange+1)^0,w,c
  6888   003BC6  6E47               	movwf	(??_color_detect+1)^0,c
  6889   003BC8  5010               	movf	color_detect@HSV^0,w,c
  6890   003BCA  5C46               	subwf	??_color_detect^0,w,c
  6891   003BCC  5011               	movf	(color_detect@HSV+1)^0,w,c
  6892   003BCE  5847               	subwfb	(??_color_detect+1)^0,w,c
  6893   003BD0  B0D8               	btfsc	status,0,c
  6894   003BD2  EFED  F01D         	goto	u4881
  6895   003BD6  EFEF  F01D         	goto	u4880
  6896   003BDA                     u4881:
  6897   003BDA  EF04  F01E         	goto	l5531
  6898   003BDE                     u4880:
  6899   003BDE  0EE8               	movlw	232
  6900   003BE0  2434               	addwf	color_detect@orange^0,w,c
  6901   003BE2  6E46               	movwf	??_color_detect^0,c
  6902   003BE4  0E03               	movlw	3
  6903   003BE6  2035               	addwfc	(color_detect@orange+1)^0,w,c
  6904   003BE8  6E47               	movwf	(??_color_detect+1)^0,c
  6905   003BEA  5046               	movf	??_color_detect^0,w,c
  6906   003BEC  5C10               	subwf	color_detect@HSV^0,w,c
  6907   003BEE  5047               	movf	(??_color_detect+1)^0,w,c
  6908   003BF0  5811               	subwfb	(color_detect@HSV+1)^0,w,c
  6909   003BF2  B0D8               	btfsc	status,0,c
  6910   003BF4  EFFE  F01D         	goto	u4891
  6911   003BF8  EF00  F01E         	goto	u4890
  6912   003BFC                     u4891:
  6913   003BFC  EF04  F01E         	goto	l5531
  6914   003C00                     u4890:
  6915   003C00  0E06               	movlw	6
  6916   003C02  6E48               	movwf	color_detect@color^0,c
  6917   003C04  EF52  F01E         	goto	l165
  6918   003C08                     l5531:
  6919   003C08  0E18               	movlw	24
  6920   003C0A  243A               	addwf	color_detect@lightblue^0,w,c
  6921   003C0C  6E46               	movwf	??_color_detect^0,c
  6922   003C0E  0EFC               	movlw	252
  6923   003C10  203B               	addwfc	(color_detect@lightblue+1)^0,w,c
  6924   003C12  6E47               	movwf	(??_color_detect+1)^0,c
  6925   003C14  5010               	movf	color_detect@HSV^0,w,c
  6926   003C16  5C46               	subwf	??_color_detect^0,w,c
  6927   003C18  5011               	movf	(color_detect@HSV+1)^0,w,c
  6928   003C1A  5847               	subwfb	(??_color_detect+1)^0,w,c
  6929   003C1C  B0D8               	btfsc	status,0,c
  6930   003C1E  EF13  F01E         	goto	u4901
  6931   003C22  EF15  F01E         	goto	u4900
  6932   003C26                     u4901:
  6933   003C26  EF2A  F01E         	goto	l5537
  6934   003C2A                     u4900:
  6935   003C2A  0EE8               	movlw	232
  6936   003C2C  243A               	addwf	color_detect@lightblue^0,w,c
  6937   003C2E  6E46               	movwf	??_color_detect^0,c
  6938   003C30  0E03               	movlw	3
  6939   003C32  203B               	addwfc	(color_detect@lightblue+1)^0,w,c
  6940   003C34  6E47               	movwf	(??_color_detect+1)^0,c
  6941   003C36  5046               	movf	??_color_detect^0,w,c
  6942   003C38  5C10               	subwf	color_detect@HSV^0,w,c
  6943   003C3A  5047               	movf	(??_color_detect+1)^0,w,c
  6944   003C3C  5811               	subwfb	(color_detect@HSV+1)^0,w,c
  6945   003C3E  B0D8               	btfsc	status,0,c
  6946   003C40  EF24  F01E         	goto	u4911
  6947   003C44  EF26  F01E         	goto	u4910
  6948   003C48                     u4911:
  6949   003C48  EF2A  F01E         	goto	l5537
  6950   003C4C                     u4910:
  6951   003C4C  0E07               	movlw	7
  6952   003C4E  6E48               	movwf	color_detect@color^0,c
  6953   003C50  EF52  F01E         	goto	l165
  6954   003C54                     l5537:
  6955   003C54  0E18               	movlw	24
  6956   003C56  2440               	addwf	color_detect@white^0,w,c
  6957   003C58  6E46               	movwf	??_color_detect^0,c
  6958   003C5A  0EFC               	movlw	252
  6959   003C5C  2041               	addwfc	(color_detect@white+1)^0,w,c
  6960   003C5E  6E47               	movwf	(??_color_detect+1)^0,c
  6961   003C60  5010               	movf	color_detect@HSV^0,w,c
  6962   003C62  5C46               	subwf	??_color_detect^0,w,c
  6963   003C64  5011               	movf	(color_detect@HSV+1)^0,w,c
  6964   003C66  5847               	subwfb	(??_color_detect+1)^0,w,c
  6965   003C68  B0D8               	btfsc	status,0,c
  6966   003C6A  EF39  F01E         	goto	u4921
  6967   003C6E  EF3B  F01E         	goto	u4920
  6968   003C72                     u4921:
  6969   003C72  EF50  F01E         	goto	l5543
  6970   003C76                     u4920:
  6971   003C76  0EE8               	movlw	232
  6972   003C78  2440               	addwf	color_detect@white^0,w,c
  6973   003C7A  6E46               	movwf	??_color_detect^0,c
  6974   003C7C  0E03               	movlw	3
  6975   003C7E  2041               	addwfc	(color_detect@white+1)^0,w,c
  6976   003C80  6E47               	movwf	(??_color_detect+1)^0,c
  6977   003C82  5046               	movf	??_color_detect^0,w,c
  6978   003C84  5C10               	subwf	color_detect@HSV^0,w,c
  6979   003C86  5047               	movf	(??_color_detect+1)^0,w,c
  6980   003C88  5811               	subwfb	(color_detect@HSV+1)^0,w,c
  6981   003C8A  B0D8               	btfsc	status,0,c
  6982   003C8C  EF4A  F01E         	goto	u4931
  6983   003C90  EF4C  F01E         	goto	u4930
  6984   003C94                     u4931:
  6985   003C94  EF50  F01E         	goto	l5543
  6986   003C98                     u4930:
  6987   003C98  0E08               	movlw	8
  6988   003C9A  6E48               	movwf	color_detect@color^0,c
  6989   003C9C  EF52  F01E         	goto	l165
  6990   003CA0                     l5543:
  6991   003CA0  0E09               	movlw	9
  6992   003CA2  6E48               	movwf	color_detect@color^0,c
  6993   003CA4                     l165:
  6994                           
  6995                           ;color.c: 171:     return color;
  6996   003CA4  5048               	movf	color_detect@color^0,w,c
  6997   003CA6  0012               	return		;funcret
  6998   003CA8                     __end_of_color_detect:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _color_click_init *****************
  7002 ;; Defined at:
  7003 ;;		line 7 in file "color.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;		None
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;		None
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      void 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7020 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7021 ;;Total ram usage:        1 bytes
  7022 ;; Hardware stack levels used: 1
  7023 ;; Hardware stack levels required when called: 9
  7024 ;; This function calls:
  7025 ;;		_I2C_2_Master_Init
  7026 ;;		_color_clear_init_interrupts
  7027 ;;		_color_writetoaddr
  7028 ;; This function is called by:
  7029 ;;		_main
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           	psect	text14
  7034   005008                     __ptext14:
  7035                           	callstack 0
  7036   005008                     _color_click_init:
  7037                           	callstack 21
  7038   005008                     
  7039                           ;color.c: 10:     I2C_2_Master_Init();
  7040   005008  EC7D  F028         	call	_I2C_2_Master_Init	;wreg free
  7041   00500C                     
  7042                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  7043   00500C  0E01               	movlw	1
  7044   00500E  6E12               	movwf	color_writetoaddr@value^0,c
  7045   005010  0E00               	movlw	0
  7046   005012  EC06  F029         	call	_color_writetoaddr
  7047   005016                     
  7048                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7049   005016  0E3F               	movlw	63
  7050   005018  6E22               	movwf	??_color_click_init^0,c
  7051   00501A  0E55               	movlw	85
  7052   00501C                     u6417:
  7053   00501C  2EE8               	decfsz	wreg,f,c
  7054   00501E  D7FE               	bra	u6417
  7055   005020  2E22               	decfsz	??_color_click_init^0,f,c
  7056   005022  D7FC               	bra	u6417
  7057   005024  0000               	nop	
  7058   005026                     
  7059                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  7060   005026  0E03               	movlw	3
  7061   005028  6E12               	movwf	color_writetoaddr@value^0,c
  7062   00502A  0E00               	movlw	0
  7063   00502C  EC06  F029         	call	_color_writetoaddr
  7064   005030                     
  7065                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  7066   005030  0ED5               	movlw	213
  7067   005032  6E12               	movwf	color_writetoaddr@value^0,c
  7068   005034  0E01               	movlw	1
  7069   005036  EC06  F029         	call	_color_writetoaddr
  7070   00503A                     
  7071                           ;color.c: 23:     color_clear_init_interrupts();
  7072   00503A  ECA8  F025         	call	_color_clear_init_interrupts	;wreg free
  7073   00503E  0012               	return		;funcret
  7074   005040                     __end_of_color_click_init:
  7075                           	callstack 0
  7076                           
  7077 ;; *************** function _color_clear_init_interrupts *****************
  7078 ;; Defined at:
  7079 ;;		line 27 in file "color.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;		None
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;  low_threshol    2   31[COMRAM] unsigned int 
  7084 ;;  high_thresho    2   29[COMRAM] unsigned int 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7095 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7097 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7098 ;;Total ram usage:        5 bytes
  7099 ;; Hardware stack levels used: 1
  7100 ;; Hardware stack levels required when called: 8
  7101 ;; This function calls:
  7102 ;;		_I2C_2_Master_Start
  7103 ;;		_I2C_2_Master_Stop
  7104 ;;		_I2C_2_Master_Write
  7105 ;;		___lwdiv
  7106 ;;		_color_writetoaddr
  7107 ;; This function is called by:
  7108 ;;		_main
  7109 ;;		_color_click_init
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           	psect	text15
  7114   004B50                     __ptext15:
  7115                           	callstack 0
  7116   004B50                     _color_clear_init_interrupts:
  7117                           	callstack 21
  7118   004B50                     
  7119                           ;color.c: 29:     I2C_2_Master_Start();
  7120   004B50  EC8B  F029         	call	_I2C_2_Master_Start	;wreg free
  7121                           
  7122                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  7123   004B54  0E52               	movlw	82
  7124   004B56  EC75  F029         	call	_I2C_2_Master_Write
  7125                           
  7126                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  7127   004B5A  0EE6               	movlw	230
  7128   004B5C  EC75  F029         	call	_I2C_2_Master_Write
  7129                           
  7130                           ;color.c: 32:     I2C_2_Master_Stop();
  7131   004B60  EC86  F029         	call	_I2C_2_Master_Stop	;wreg free
  7132                           
  7133                           ;color.c: 38:     unsigned int high_threshold = ambient + (ambient/3);
  7134   004B64  C0F8  F016         	movff	_ambient,___lwdiv@dividend
  7135   004B68  C0F9  F017         	movff	_ambient+1,___lwdiv@dividend+1
  7136   004B6C  0E00               	movlw	0
  7137   004B6E  6E19               	movwf	(___lwdiv@divisor+1)^0,c
  7138   004B70  0E03               	movlw	3
  7139   004B72  6E18               	movwf	___lwdiv@divisor^0,c
  7140   004B74  ECE8  F026         	call	___lwdiv	;wreg free
  7141   004B78  0100               	movlb	0	; () banked
  7142   004B7A  51F8               	movf	_ambient& (0+255),w,b
  7143   004B7C  2416               	addwf	?___lwdiv^0,w,c
  7144   004B7E  6E1E               	movwf	color_clear_init_interrupts@high_threshold^0,c
  7145   004B80  51F9               	movf	(_ambient+1)& (0+255),w,b
  7146   004B82  2017               	addwfc	(?___lwdiv+1)^0,w,c
  7147   004B84  6E1F               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  7148                           
  7149                           ;color.c: 39:     unsigned int low_threshold = ambient - (ambient/20);
  7150   004B86  C0F8  F016         	movff	_ambient,___lwdiv@dividend
  7151   004B8A  C0F9  F017         	movff	_ambient+1,___lwdiv@dividend+1
  7152   004B8E  0E00               	movlw	0
  7153   004B90  6E19               	movwf	(___lwdiv@divisor+1)^0,c
  7154   004B92  0E14               	movlw	20
  7155   004B94  6E18               	movwf	___lwdiv@divisor^0,c
  7156   004B96  ECE8  F026         	call	___lwdiv	;wreg free
  7157   004B9A  5016               	movf	?___lwdiv^0,w,c
  7158   004B9C  0100               	movlb	0	; () banked
  7159   004B9E  5DF8               	subwf	_ambient& (0+255),w,b
  7160   004BA0  6E20               	movwf	color_clear_init_interrupts@low_threshold^0,c
  7161   004BA2  5017               	movf	(?___lwdiv+1)^0,w,c
  7162   004BA4  59F9               	subwfb	(_ambient+1)& (0+255),w,b
  7163   004BA6  6E21               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  7164                           
  7165                           ;color.c: 42:  color_writetoaddr(0x00, 0x13);
  7166   004BA8  0E13               	movlw	19
  7167   004BAA  6E12               	movwf	color_writetoaddr@value^0,c
  7168   004BAC  0E00               	movlw	0
  7169   004BAE  EC06  F029         	call	_color_writetoaddr
  7170   004BB2                     
  7171                           ;color.c: 43:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7172   004BB2  0E3F               	movlw	63
  7173   004BB4  6E1D               	movwf	??_color_clear_init_interrupts^0,c
  7174   004BB6  0E55               	movlw	85
  7175   004BB8                     u6427:
  7176   004BB8  2EE8               	decfsz	wreg,f,c
  7177   004BBA  D7FE               	bra	u6427
  7178   004BBC  2E1D               	decfsz	??_color_clear_init_interrupts^0,f,c
  7179   004BBE  D7FC               	bra	u6427
  7180   004BC0  0000               	nop	
  7181   004BC2                     
  7182                           ;color.c: 44:     color_writetoaddr(0x07, (high_threshold >> 8));
  7183   004BC2  501F               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  7184   004BC4  6E12               	movwf	color_writetoaddr@value^0,c
  7185   004BC6  0E07               	movlw	7
  7186   004BC8  EC06  F029         	call	_color_writetoaddr
  7187   004BCC                     
  7188                           ;color.c: 45:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  7189   004BCC  C01E  F012         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  7190   004BD0  0E06               	movlw	6
  7191   004BD2  EC06  F029         	call	_color_writetoaddr
  7192   004BD6                     
  7193                           ;color.c: 46:     color_writetoaddr(0x05, (low_threshold >> 8));
  7194   004BD6  5021               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  7195   004BD8  6E12               	movwf	color_writetoaddr@value^0,c
  7196   004BDA  0E05               	movlw	5
  7197   004BDC  EC06  F029         	call	_color_writetoaddr
  7198   004BE0                     
  7199                           ;color.c: 47:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  7200   004BE0  C020  F012         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  7201   004BE4  0E04               	movlw	4
  7202   004BE6  EC06  F029         	call	_color_writetoaddr
  7203   004BEA                     
  7204                           ;color.c: 48:     color_writetoaddr(0x0C, 0b0100);
  7205   004BEA  0E04               	movlw	4
  7206   004BEC  6E12               	movwf	color_writetoaddr@value^0,c
  7207   004BEE  0E0C               	movlw	12
  7208   004BF0  EC06  F029         	call	_color_writetoaddr
  7209   004BF4  0012               	return		;funcret
  7210   004BF6                     __end_of_color_clear_init_interrupts:
  7211                           	callstack 0
  7212                           
  7213 ;; *************** function _color_writetoaddr *****************
  7214 ;; Defined at:
  7215 ;;		line 53 in file "color.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  address         1    wreg     unsigned char 
  7218 ;;  value           1   17[COMRAM] unsigned char 
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;  address         1   18[COMRAM] unsigned char 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7230 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7234 ;;Total ram usage:        2 bytes
  7235 ;; Hardware stack levels used: 1
  7236 ;; Hardware stack levels required when called: 7
  7237 ;; This function calls:
  7238 ;;		_I2C_2_Master_Start
  7239 ;;		_I2C_2_Master_Stop
  7240 ;;		_I2C_2_Master_Write
  7241 ;; This function is called by:
  7242 ;;		_color_click_init
  7243 ;;		_color_clear_init_interrupts
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text16
  7248   00520C                     __ptext16:
  7249                           	callstack 0
  7250   00520C                     _color_writetoaddr:
  7251                           	callstack 22
  7252                           
  7253                           ;incstack = 0
  7254                           ;color_writetoaddr@address stored from wreg
  7255   00520C  6E13               	movwf	color_writetoaddr@address^0,c
  7256   00520E                     
  7257                           ;color.c: 54:     I2C_2_Master_Start();
  7258   00520E  EC8B  F029         	call	_I2C_2_Master_Start	;wreg free
  7259                           
  7260                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  7261   005212  0E52               	movlw	82
  7262   005214  EC75  F029         	call	_I2C_2_Master_Write
  7263                           
  7264                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
  7265   005218  5013               	movf	color_writetoaddr@address^0,w,c
  7266   00521A  0980               	iorlw	128
  7267   00521C  EC75  F029         	call	_I2C_2_Master_Write
  7268                           
  7269                           ;color.c: 57:     I2C_2_Master_Write(value);
  7270   005220  5012               	movf	color_writetoaddr@value^0,w,c
  7271   005222  EC75  F029         	call	_I2C_2_Master_Write
  7272                           
  7273                           ;color.c: 58:     I2C_2_Master_Stop();
  7274   005226  EC86  F029         	call	_I2C_2_Master_Stop	;wreg free
  7275   00522A  0012               	return		;funcret
  7276   00522C                     __end_of_color_writetoaddr:
  7277                           	callstack 0
  7278                           
  7279 ;; *************** function _I2C_2_Master_Init *****************
  7280 ;; Defined at:
  7281 ;;		line 4 in file "i2c.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;		None
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;		None
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  1    wreg      void 
  7288 ;; Registers used:
  7289 ;;		wreg, status,2
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 0/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7299 ;;Total ram usage:        0 bytes
  7300 ;; Hardware stack levels used: 1
  7301 ;; Hardware stack levels required when called: 5
  7302 ;; This function calls:
  7303 ;;		Nothing
  7304 ;; This function is called by:
  7305 ;;		_color_click_init
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text17
  7310   0050FA                     __ptext17:
  7311                           	callstack 0
  7312   0050FA                     _I2C_2_Master_Init:
  7313                           	callstack 24
  7314   0050FA                     
  7315                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7316   0050FA  010E               	movlb	14	; () banked
  7317   0050FC  51D9               	movf	217,w,b	;volatile
  7318   0050FE  0BF0               	andlw	-16
  7319   005100  0908               	iorlw	8
  7320   005102  6FD9               	movwf	217,b	;volatile
  7321   005104                     
  7322                           ; BSR set to: 14
  7323                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7324   005104  8BD9               	bsf	217,5,b	;volatile
  7325                           
  7326                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7327   005106  0E9F               	movlw	159
  7328   005108  6FD6               	movwf	214,b	;volatile
  7329   00510A                     
  7330                           ; BSR set to: 14
  7331                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7332   00510A  8A84               	bsf	132,5,c	;volatile
  7333   00510C                     
  7334                           ; BSR set to: 14
  7335                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7336   00510C  8C84               	bsf	132,6,c	;volatile
  7337   00510E                     
  7338                           ; BSR set to: 14
  7339                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7340   00510E  9BA7               	bcf	167,5,b	;volatile
  7341   005110                     
  7342                           ; BSR set to: 14
  7343                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7344   005110  9DA7               	bcf	167,6,b	;volatile
  7345                           
  7346                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7347   005112  0E1D               	movlw	29
  7348   005114  6F1D               	movwf	29,b	;volatile
  7349                           
  7350                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7351   005116  0E1E               	movlw	30
  7352   005118  6F1C               	movwf	28,b	;volatile
  7353                           
  7354                           ;i2c.c: 18:   RD5PPS=0x1C;
  7355   00511A  0E1C               	movlw	28
  7356   00511C  6F6F               	movwf	111,b	;volatile
  7357                           
  7358                           ;i2c.c: 19:   RD6PPS=0x1B;
  7359   00511E  0E1B               	movlw	27
  7360   005120  6F70               	movwf	112,b	;volatile
  7361   005122                     
  7362                           ; BSR set to: 14
  7363   005122  0012               	return		;funcret
  7364   005124                     __end_of_I2C_2_Master_Init:
  7365                           	callstack 0
  7366                           
  7367 ;; *************** function _color_calibration *****************
  7368 ;; Defined at:
  7369 ;;		line 174 in file "color.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  RGBC            2   22[BANK0 ] PTR struct RGBC_val
  7372 ;;		 -> main@RGBC(8), 
  7373 ;;  HSV             2   24[BANK0 ] PTR struct HSV_val
  7374 ;;		 -> main@HSV(6), 
  7375 ;;  red             2   26[BANK0 ] PTR struct HSV_calib
  7376 ;;		 -> main@red(6), 
  7377 ;;  green           2   28[BANK0 ] PTR struct HSV_calib
  7378 ;;		 -> main@green(6), 
  7379 ;;  blue            2   30[BANK0 ] PTR struct HSV_calib
  7380 ;;		 -> main@blue(6), 
  7381 ;;  yellow          2   32[BANK0 ] PTR struct HSV_calib
  7382 ;;		 -> main@yellow(6), 
  7383 ;;  pink            2   34[BANK0 ] PTR struct HSV_calib
  7384 ;;		 -> main@pink(6), 
  7385 ;;  orange          2   36[BANK0 ] PTR struct HSV_calib
  7386 ;;		 -> main@orange(6), 
  7387 ;;  lightblue       2   38[BANK0 ] PTR struct HSV_calib
  7388 ;;		 -> main@lightblue(6), 
  7389 ;;  white           2   40[BANK0 ] PTR struct HSV_calib
  7390 ;;		 -> main@white(6), 
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      void 
  7395 ;; Registers used:
  7396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7402 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7405 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7406 ;;Total ram usage:       22 bytes
  7407 ;; Hardware stack levels used: 1
  7408 ;; Hardware stack levels required when called: 8
  7409 ;; This function calls:
  7410 ;;		_color_read
  7411 ;;		_rgb_2_hsv
  7412 ;;		_white_Light
  7413 ;; This function is called by:
  7414 ;;		_main
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text18
  7419   00238C                     __ptext18:
  7420                           	callstack 0
  7421   00238C                     _color_calibration:
  7422                           	callstack 22
  7423   00238C                     
  7424                           ;color.c: 174: void color_calibration(RGBC_val *RGBC, HSV_val *HSV, HSV_calib *red, HSV_
      +                          calib *green, HSV_calib *blue, HSV_calib *yellow, HSV_calib *pink, HSV_calib *orange, HS
      +                          V_calib *lightblue, HSV_calib *white);color.c: 175: {;color.c: 176:     white_Light(1);
  7425   00238C  0E01               	movlw	1
  7426   00238E  ECF4  F028         	call	_white_Light
  7427   002392                     
  7428                           ;color.c: 177:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7429   002392  8680               	bsf	128,3,c	;volatile
  7430   002394  8E7C               	bsf	124,7,c	;volatile
  7431   002396                     l183:
  7432   002396  B48E               	btfsc	142,2,c	;volatile
  7433   002398  EFD0  F011         	goto	u4561
  7434   00239C  EFD2  F011         	goto	u4560
  7435   0023A0                     u4561:
  7436   0023A0  EFCB  F011         	goto	l183
  7437   0023A4                     u4560:
  7438   0023A4                     
  7439                           ;color.c: 180:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7440   0023A4  9680               	bcf	128,3,c	;volatile
  7441   0023A6  9E7C               	bcf	124,7,c	;volatile
  7442   0023A8                     
  7443                           ;color.c: 181:     color_read(RGBC);
  7444   0023A8  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7445   0023AC  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7446   0023B0  EC4C  F01F         	call	_color_read	;wreg free
  7447   0023B4                     
  7448                           ;color.c: 182:     rgb_2_hsv(*RGBC, HSV);
  7449   0023B4  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7450   0023B8  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7451   0023BC  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7452   0023C0  0E07               	movlw	7
  7453   0023C2                     u4571:
  7454   0023C2  CFDB FFEB          	movff	plusw2,plusw0
  7455   0023C6  06E8               	decf	wreg,f,c
  7456   0023C8  E2FC               	bc	u4571
  7457   0023CA  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7458   0023CE  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7459   0023D2  EC7E  F017         	call	_rgb_2_hsv	;wreg free
  7460   0023D6                     
  7461                           ;color.c: 183:     red->H = HSV->H;
  7462   0023D6  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7463   0023DA  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7464   0023DE  C07A  FFE1         	movff	color_calibration@red,fsr1l
  7465   0023E2  C07B  FFE2         	movff	color_calibration@red+1,fsr1h
  7466   0023E6  CFDE FFE6          	movff	postinc2,postinc1
  7467   0023EA  CFDD FFE5          	movff	postdec2,postdec1
  7468   0023EE                     
  7469                           ;color.c: 184:     red->S = HSV->S;
  7470   0023EE  0100               	movlb	0	; () banked
  7471   0023F0  EE20 F002          	lfsr	2,2
  7472   0023F4  5178               	movf	color_calibration@HSV& (0+255),w,b
  7473   0023F6  26D9               	addwf	fsr2l,f,c
  7474   0023F8  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7475   0023FA  22DA               	addwfc	fsr2h,f,c
  7476   0023FC  EE10 F002          	lfsr	1,2
  7477   002400  517A               	movf	color_calibration@red& (0+255),w,b
  7478   002402  26E1               	addwf	fsr1l,f,c
  7479   002404  517B               	movf	(color_calibration@red+1)& (0+255),w,b
  7480   002406  22E2               	addwfc	fsr1h,f,c
  7481   002408  CFDE FFE6          	movff	postinc2,postinc1
  7482   00240C  CFDD FFE5          	movff	postdec2,postdec1
  7483   002410                     
  7484                           ; BSR set to: 0
  7485                           ;color.c: 185:     red->V = HSV->V;
  7486   002410  EE20 F004          	lfsr	2,4
  7487   002414  5178               	movf	color_calibration@HSV& (0+255),w,b
  7488   002416  26D9               	addwf	fsr2l,f,c
  7489   002418  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7490   00241A  22DA               	addwfc	fsr2h,f,c
  7491   00241C  EE10 F004          	lfsr	1,4
  7492   002420  517A               	movf	color_calibration@red& (0+255),w,b
  7493   002422  26E1               	addwf	fsr1l,f,c
  7494   002424  517B               	movf	(color_calibration@red+1)& (0+255),w,b
  7495   002426  22E2               	addwfc	fsr1h,f,c
  7496   002428  CFDE FFE6          	movff	postinc2,postinc1
  7497   00242C  CFDD FFE5          	movff	postdec2,postdec1
  7498   002430                     
  7499                           ; BSR set to: 0
  7500                           ;color.c: 187:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7501   002430  0E29               	movlw	41
  7502   002432  6E41               	movwf	(??_color_calibration+1)^0,c
  7503   002434  0E96               	movlw	150
  7504   002436  6E40               	movwf	??_color_calibration^0,c
  7505   002438  0E7F               	movlw	127
  7506   00243A                     u6437:
  7507   00243A  2EE8               	decfsz	wreg,f,c
  7508   00243C  D7FE               	bra	u6437
  7509   00243E  2E40               	decfsz	??_color_calibration^0,f,c
  7510   002440  D7FC               	bra	u6437
  7511   002442  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  7512   002444  D7FA               	bra	u6437
  7513   002446  0000               	nop	
  7514   002448                     
  7515                           ;color.c: 188:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7516   002448  8680               	bsf	128,3,c	;volatile
  7517   00244A  8E7C               	bsf	124,7,c	;volatile
  7518   00244C                     l186:
  7519   00244C  B48E               	btfsc	142,2,c	;volatile
  7520   00244E  EF2B  F012         	goto	u4581
  7521   002452  EF2D  F012         	goto	u4580
  7522   002456                     u4581:
  7523   002456  EF26  F012         	goto	l186
  7524   00245A                     u4580:
  7525   00245A                     
  7526                           ;color.c: 191:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7527   00245A  9680               	bcf	128,3,c	;volatile
  7528   00245C  9E7C               	bcf	124,7,c	;volatile
  7529   00245E                     
  7530                           ;color.c: 192:     color_read(RGBC);
  7531   00245E  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7532   002462  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7533   002466  EC4C  F01F         	call	_color_read	;wreg free
  7534   00246A                     
  7535                           ;color.c: 193:     rgb_2_hsv(*RGBC, HSV);
  7536   00246A  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7537   00246E  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7538   002472  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7539   002476  0E07               	movlw	7
  7540   002478                     u4591:
  7541   002478  CFDB FFEB          	movff	plusw2,plusw0
  7542   00247C  06E8               	decf	wreg,f,c
  7543   00247E  E2FC               	bc	u4591
  7544   002480  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7545   002484  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7546   002488  EC7E  F017         	call	_rgb_2_hsv	;wreg free
  7547   00248C                     
  7548                           ;color.c: 194:     green->H = HSV->H;
  7549   00248C  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7550   002490  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7551   002494  C07C  FFE1         	movff	color_calibration@green,fsr1l
  7552   002498  C07D  FFE2         	movff	color_calibration@green+1,fsr1h
  7553   00249C  CFDE FFE6          	movff	postinc2,postinc1
  7554   0024A0  CFDD FFE5          	movff	postdec2,postdec1
  7555   0024A4                     
  7556                           ;color.c: 195:     green->S = HSV->S;
  7557   0024A4  0100               	movlb	0	; () banked
  7558   0024A6  EE20 F002          	lfsr	2,2
  7559   0024AA  5178               	movf	color_calibration@HSV& (0+255),w,b
  7560   0024AC  26D9               	addwf	fsr2l,f,c
  7561   0024AE  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7562   0024B0  22DA               	addwfc	fsr2h,f,c
  7563   0024B2  EE10 F002          	lfsr	1,2
  7564   0024B6  517C               	movf	color_calibration@green& (0+255),w,b
  7565   0024B8  26E1               	addwf	fsr1l,f,c
  7566   0024BA  517D               	movf	(color_calibration@green+1)& (0+255),w,b
  7567   0024BC  22E2               	addwfc	fsr1h,f,c
  7568   0024BE  CFDE FFE6          	movff	postinc2,postinc1
  7569   0024C2  CFDD FFE5          	movff	postdec2,postdec1
  7570   0024C6                     
  7571                           ; BSR set to: 0
  7572                           ;color.c: 196:     green->V = HSV->V;
  7573   0024C6  EE20 F004          	lfsr	2,4
  7574   0024CA  5178               	movf	color_calibration@HSV& (0+255),w,b
  7575   0024CC  26D9               	addwf	fsr2l,f,c
  7576   0024CE  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7577   0024D0  22DA               	addwfc	fsr2h,f,c
  7578   0024D2  EE10 F004          	lfsr	1,4
  7579   0024D6  517C               	movf	color_calibration@green& (0+255),w,b
  7580   0024D8  26E1               	addwf	fsr1l,f,c
  7581   0024DA  517D               	movf	(color_calibration@green+1)& (0+255),w,b
  7582   0024DC  22E2               	addwfc	fsr1h,f,c
  7583   0024DE  CFDE FFE6          	movff	postinc2,postinc1
  7584   0024E2  CFDD FFE5          	movff	postdec2,postdec1
  7585   0024E6                     
  7586                           ; BSR set to: 0
  7587                           ;color.c: 198:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7588   0024E6  0E29               	movlw	41
  7589   0024E8  6E41               	movwf	(??_color_calibration+1)^0,c
  7590   0024EA  0E96               	movlw	150
  7591   0024EC  6E40               	movwf	??_color_calibration^0,c
  7592   0024EE  0E7F               	movlw	127
  7593   0024F0                     u6447:
  7594   0024F0  2EE8               	decfsz	wreg,f,c
  7595   0024F2  D7FE               	bra	u6447
  7596   0024F4  2E40               	decfsz	??_color_calibration^0,f,c
  7597   0024F6  D7FC               	bra	u6447
  7598   0024F8  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  7599   0024FA  D7FA               	bra	u6447
  7600   0024FC  0000               	nop	
  7601   0024FE                     
  7602                           ;color.c: 199:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7603   0024FE  8680               	bsf	128,3,c	;volatile
  7604   002500  8E7C               	bsf	124,7,c	;volatile
  7605   002502                     l189:
  7606   002502  B48E               	btfsc	142,2,c	;volatile
  7607   002504  EF86  F012         	goto	u4601
  7608   002508  EF88  F012         	goto	u4600
  7609   00250C                     u4601:
  7610   00250C  EF81  F012         	goto	l189
  7611   002510                     u4600:
  7612   002510                     
  7613                           ;color.c: 202:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7614   002510  9680               	bcf	128,3,c	;volatile
  7615   002512  9E7C               	bcf	124,7,c	;volatile
  7616   002514                     
  7617                           ;color.c: 203:     color_read(RGBC);
  7618   002514  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7619   002518  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7620   00251C  EC4C  F01F         	call	_color_read	;wreg free
  7621   002520                     
  7622                           ;color.c: 204:     rgb_2_hsv(*RGBC, HSV);
  7623   002520  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7624   002524  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7625   002528  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7626   00252C  0E07               	movlw	7
  7627   00252E                     u4611:
  7628   00252E  CFDB FFEB          	movff	plusw2,plusw0
  7629   002532  06E8               	decf	wreg,f,c
  7630   002534  E2FC               	bc	u4611
  7631   002536  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7632   00253A  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7633   00253E  EC7E  F017         	call	_rgb_2_hsv	;wreg free
  7634   002542                     
  7635                           ;color.c: 205:     blue->H = HSV->H;
  7636   002542  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7637   002546  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7638   00254A  C07E  FFE1         	movff	color_calibration@blue,fsr1l
  7639   00254E  C07F  FFE2         	movff	color_calibration@blue+1,fsr1h
  7640   002552  CFDE FFE6          	movff	postinc2,postinc1
  7641   002556  CFDD FFE5          	movff	postdec2,postdec1
  7642   00255A                     
  7643                           ;color.c: 206:     blue->S = HSV->S;
  7644   00255A  0100               	movlb	0	; () banked
  7645   00255C  EE20 F002          	lfsr	2,2
  7646   002560  5178               	movf	color_calibration@HSV& (0+255),w,b
  7647   002562  26D9               	addwf	fsr2l,f,c
  7648   002564  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7649   002566  22DA               	addwfc	fsr2h,f,c
  7650   002568  EE10 F002          	lfsr	1,2
  7651   00256C  517E               	movf	color_calibration@blue& (0+255),w,b
  7652   00256E  26E1               	addwf	fsr1l,f,c
  7653   002570  517F               	movf	(color_calibration@blue+1)& (0+255),w,b
  7654   002572  22E2               	addwfc	fsr1h,f,c
  7655   002574  CFDE FFE6          	movff	postinc2,postinc1
  7656   002578  CFDD FFE5          	movff	postdec2,postdec1
  7657   00257C                     
  7658                           ; BSR set to: 0
  7659                           ;color.c: 207:     blue->V = HSV->V;
  7660   00257C  EE20 F004          	lfsr	2,4
  7661   002580  5178               	movf	color_calibration@HSV& (0+255),w,b
  7662   002582  26D9               	addwf	fsr2l,f,c
  7663   002584  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7664   002586  22DA               	addwfc	fsr2h,f,c
  7665   002588  EE10 F004          	lfsr	1,4
  7666   00258C  517E               	movf	color_calibration@blue& (0+255),w,b
  7667   00258E  26E1               	addwf	fsr1l,f,c
  7668   002590  517F               	movf	(color_calibration@blue+1)& (0+255),w,b
  7669   002592  22E2               	addwfc	fsr1h,f,c
  7670   002594  CFDE FFE6          	movff	postinc2,postinc1
  7671   002598  CFDD FFE5          	movff	postdec2,postdec1
  7672   00259C                     
  7673                           ; BSR set to: 0
  7674                           ;color.c: 209:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7675   00259C  0E29               	movlw	41
  7676   00259E  6E41               	movwf	(??_color_calibration+1)^0,c
  7677   0025A0  0E96               	movlw	150
  7678   0025A2  6E40               	movwf	??_color_calibration^0,c
  7679   0025A4  0E7F               	movlw	127
  7680   0025A6                     u6457:
  7681   0025A6  2EE8               	decfsz	wreg,f,c
  7682   0025A8  D7FE               	bra	u6457
  7683   0025AA  2E40               	decfsz	??_color_calibration^0,f,c
  7684   0025AC  D7FC               	bra	u6457
  7685   0025AE  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  7686   0025B0  D7FA               	bra	u6457
  7687   0025B2  0000               	nop	
  7688   0025B4                     
  7689                           ;color.c: 210:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7690   0025B4  8680               	bsf	128,3,c	;volatile
  7691   0025B6  8E7C               	bsf	124,7,c	;volatile
  7692   0025B8                     l192:
  7693   0025B8  B48E               	btfsc	142,2,c	;volatile
  7694   0025BA  EFE1  F012         	goto	u4621
  7695   0025BE  EFE3  F012         	goto	u4620
  7696   0025C2                     u4621:
  7697   0025C2  EFDC  F012         	goto	l192
  7698   0025C6                     u4620:
  7699   0025C6                     
  7700                           ;color.c: 213:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7701   0025C6  9680               	bcf	128,3,c	;volatile
  7702   0025C8  9E7C               	bcf	124,7,c	;volatile
  7703   0025CA                     
  7704                           ;color.c: 214:     color_read(RGBC);
  7705   0025CA  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7706   0025CE  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7707   0025D2  EC4C  F01F         	call	_color_read	;wreg free
  7708   0025D6                     
  7709                           ;color.c: 215:     rgb_2_hsv(*RGBC, HSV);
  7710   0025D6  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7711   0025DA  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7712   0025DE  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7713   0025E2  0E07               	movlw	7
  7714   0025E4                     u4631:
  7715   0025E4  CFDB FFEB          	movff	plusw2,plusw0
  7716   0025E8  06E8               	decf	wreg,f,c
  7717   0025EA  E2FC               	bc	u4631
  7718   0025EC  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7719   0025F0  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7720   0025F4  EC7E  F017         	call	_rgb_2_hsv	;wreg free
  7721   0025F8                     
  7722                           ;color.c: 216:     yellow->H = HSV->H;
  7723   0025F8  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7724   0025FC  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7725   002600  C080  FFE1         	movff	color_calibration@yellow,fsr1l
  7726   002604  C081  FFE2         	movff	color_calibration@yellow+1,fsr1h
  7727   002608  CFDE FFE6          	movff	postinc2,postinc1
  7728   00260C  CFDD FFE5          	movff	postdec2,postdec1
  7729   002610                     
  7730                           ;color.c: 217:     yellow->S = HSV->S;
  7731   002610  0100               	movlb	0	; () banked
  7732   002612  EE20 F002          	lfsr	2,2
  7733   002616  5178               	movf	color_calibration@HSV& (0+255),w,b
  7734   002618  26D9               	addwf	fsr2l,f,c
  7735   00261A  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7736   00261C  22DA               	addwfc	fsr2h,f,c
  7737   00261E  EE10 F002          	lfsr	1,2
  7738   002622  5180               	movf	color_calibration@yellow& (0+255),w,b
  7739   002624  26E1               	addwf	fsr1l,f,c
  7740   002626  5181               	movf	(color_calibration@yellow+1)& (0+255),w,b
  7741   002628  22E2               	addwfc	fsr1h,f,c
  7742   00262A  CFDE FFE6          	movff	postinc2,postinc1
  7743   00262E  CFDD FFE5          	movff	postdec2,postdec1
  7744   002632                     
  7745                           ; BSR set to: 0
  7746                           ;color.c: 218:     yellow->V = HSV->V;
  7747   002632  EE20 F004          	lfsr	2,4
  7748   002636  5178               	movf	color_calibration@HSV& (0+255),w,b
  7749   002638  26D9               	addwf	fsr2l,f,c
  7750   00263A  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7751   00263C  22DA               	addwfc	fsr2h,f,c
  7752   00263E  EE10 F004          	lfsr	1,4
  7753   002642  5180               	movf	color_calibration@yellow& (0+255),w,b
  7754   002644  26E1               	addwf	fsr1l,f,c
  7755   002646  5181               	movf	(color_calibration@yellow+1)& (0+255),w,b
  7756   002648  22E2               	addwfc	fsr1h,f,c
  7757   00264A  CFDE FFE6          	movff	postinc2,postinc1
  7758   00264E  CFDD FFE5          	movff	postdec2,postdec1
  7759   002652                     
  7760                           ; BSR set to: 0
  7761                           ;color.c: 220:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7762   002652  0E29               	movlw	41
  7763   002654  6E41               	movwf	(??_color_calibration+1)^0,c
  7764   002656  0E96               	movlw	150
  7765   002658  6E40               	movwf	??_color_calibration^0,c
  7766   00265A  0E7F               	movlw	127
  7767   00265C                     u6467:
  7768   00265C  2EE8               	decfsz	wreg,f,c
  7769   00265E  D7FE               	bra	u6467
  7770   002660  2E40               	decfsz	??_color_calibration^0,f,c
  7771   002662  D7FC               	bra	u6467
  7772   002664  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  7773   002666  D7FA               	bra	u6467
  7774   002668  0000               	nop	
  7775   00266A                     
  7776                           ;color.c: 221:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7777   00266A  8680               	bsf	128,3,c	;volatile
  7778   00266C  8E7C               	bsf	124,7,c	;volatile
  7779   00266E                     l195:
  7780   00266E  B48E               	btfsc	142,2,c	;volatile
  7781   002670  EF3C  F013         	goto	u4641
  7782   002674  EF3E  F013         	goto	u4640
  7783   002678                     u4641:
  7784   002678  EF37  F013         	goto	l195
  7785   00267C                     u4640:
  7786   00267C                     
  7787                           ;color.c: 224:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7788   00267C  9680               	bcf	128,3,c	;volatile
  7789   00267E  9E7C               	bcf	124,7,c	;volatile
  7790   002680                     
  7791                           ;color.c: 225:     color_read(RGBC);
  7792   002680  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7793   002684  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7794   002688  EC4C  F01F         	call	_color_read	;wreg free
  7795   00268C                     
  7796                           ;color.c: 226:     rgb_2_hsv(*RGBC, HSV);
  7797   00268C  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7798   002690  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7799   002694  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7800   002698  0E07               	movlw	7
  7801   00269A                     u4651:
  7802   00269A  CFDB FFEB          	movff	plusw2,plusw0
  7803   00269E  06E8               	decf	wreg,f,c
  7804   0026A0  E2FC               	bc	u4651
  7805   0026A2  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7806   0026A6  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7807   0026AA  EC7E  F017         	call	_rgb_2_hsv	;wreg free
  7808   0026AE                     
  7809                           ;color.c: 227:     pink->H = HSV->H;
  7810   0026AE  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7811   0026B2  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7812   0026B6  C082  FFE1         	movff	color_calibration@pink,fsr1l
  7813   0026BA  C083  FFE2         	movff	color_calibration@pink+1,fsr1h
  7814   0026BE  CFDE FFE6          	movff	postinc2,postinc1
  7815   0026C2  CFDD FFE5          	movff	postdec2,postdec1
  7816   0026C6                     
  7817                           ;color.c: 228:     pink->S = HSV->S;
  7818   0026C6  0100               	movlb	0	; () banked
  7819   0026C8  EE20 F002          	lfsr	2,2
  7820   0026CC  5178               	movf	color_calibration@HSV& (0+255),w,b
  7821   0026CE  26D9               	addwf	fsr2l,f,c
  7822   0026D0  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7823   0026D2  22DA               	addwfc	fsr2h,f,c
  7824   0026D4  EE10 F002          	lfsr	1,2
  7825   0026D8  5182               	movf	color_calibration@pink& (0+255),w,b
  7826   0026DA  26E1               	addwf	fsr1l,f,c
  7827   0026DC  5183               	movf	(color_calibration@pink+1)& (0+255),w,b
  7828   0026DE  22E2               	addwfc	fsr1h,f,c
  7829   0026E0  CFDE FFE6          	movff	postinc2,postinc1
  7830   0026E4  CFDD FFE5          	movff	postdec2,postdec1
  7831   0026E8                     
  7832                           ; BSR set to: 0
  7833                           ;color.c: 229:     pink->V = HSV->V;
  7834   0026E8  EE20 F004          	lfsr	2,4
  7835   0026EC  5178               	movf	color_calibration@HSV& (0+255),w,b
  7836   0026EE  26D9               	addwf	fsr2l,f,c
  7837   0026F0  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7838   0026F2  22DA               	addwfc	fsr2h,f,c
  7839   0026F4  EE10 F004          	lfsr	1,4
  7840   0026F8  5182               	movf	color_calibration@pink& (0+255),w,b
  7841   0026FA  26E1               	addwf	fsr1l,f,c
  7842   0026FC  5183               	movf	(color_calibration@pink+1)& (0+255),w,b
  7843   0026FE  22E2               	addwfc	fsr1h,f,c
  7844   002700  CFDE FFE6          	movff	postinc2,postinc1
  7845   002704  CFDD FFE5          	movff	postdec2,postdec1
  7846   002708                     
  7847                           ; BSR set to: 0
  7848                           ;color.c: 231:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7849   002708  0E29               	movlw	41
  7850   00270A  6E41               	movwf	(??_color_calibration+1)^0,c
  7851   00270C  0E96               	movlw	150
  7852   00270E  6E40               	movwf	??_color_calibration^0,c
  7853   002710  0E7F               	movlw	127
  7854   002712                     u6477:
  7855   002712  2EE8               	decfsz	wreg,f,c
  7856   002714  D7FE               	bra	u6477
  7857   002716  2E40               	decfsz	??_color_calibration^0,f,c
  7858   002718  D7FC               	bra	u6477
  7859   00271A  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  7860   00271C  D7FA               	bra	u6477
  7861   00271E  0000               	nop	
  7862   002720                     
  7863                           ;color.c: 232:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7864   002720  8680               	bsf	128,3,c	;volatile
  7865   002722  8E7C               	bsf	124,7,c	;volatile
  7866   002724                     l198:
  7867   002724  B48E               	btfsc	142,2,c	;volatile
  7868   002726  EF97  F013         	goto	u4661
  7869   00272A  EF99  F013         	goto	u4660
  7870   00272E                     u4661:
  7871   00272E  EF92  F013         	goto	l198
  7872   002732                     u4660:
  7873   002732                     
  7874                           ;color.c: 235:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7875   002732  9680               	bcf	128,3,c	;volatile
  7876   002734  9E7C               	bcf	124,7,c	;volatile
  7877   002736                     
  7878                           ;color.c: 236:     color_read(RGBC);
  7879   002736  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7880   00273A  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7881   00273E  EC4C  F01F         	call	_color_read	;wreg free
  7882   002742                     
  7883                           ;color.c: 237:     rgb_2_hsv(*RGBC, HSV);
  7884   002742  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7885   002746  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7886   00274A  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7887   00274E  0E07               	movlw	7
  7888   002750                     u4671:
  7889   002750  CFDB FFEB          	movff	plusw2,plusw0
  7890   002754  06E8               	decf	wreg,f,c
  7891   002756  E2FC               	bc	u4671
  7892   002758  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7893   00275C  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7894   002760  EC7E  F017         	call	_rgb_2_hsv	;wreg free
  7895   002764                     
  7896                           ;color.c: 238:     orange->H = HSV->H;
  7897   002764  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7898   002768  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7899   00276C  C084  FFE1         	movff	color_calibration@orange,fsr1l
  7900   002770  C085  FFE2         	movff	color_calibration@orange+1,fsr1h
  7901   002774  CFDE FFE6          	movff	postinc2,postinc1
  7902   002778  CFDD FFE5          	movff	postdec2,postdec1
  7903   00277C                     
  7904                           ;color.c: 239:     orange->S = HSV->S;
  7905   00277C  0100               	movlb	0	; () banked
  7906   00277E  EE20 F002          	lfsr	2,2
  7907   002782  5178               	movf	color_calibration@HSV& (0+255),w,b
  7908   002784  26D9               	addwf	fsr2l,f,c
  7909   002786  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7910   002788  22DA               	addwfc	fsr2h,f,c
  7911   00278A  EE10 F002          	lfsr	1,2
  7912   00278E  5184               	movf	color_calibration@orange& (0+255),w,b
  7913   002790  26E1               	addwf	fsr1l,f,c
  7914   002792  5185               	movf	(color_calibration@orange+1)& (0+255),w,b
  7915   002794  22E2               	addwfc	fsr1h,f,c
  7916   002796  CFDE FFE6          	movff	postinc2,postinc1
  7917   00279A  CFDD FFE5          	movff	postdec2,postdec1
  7918   00279E                     
  7919                           ; BSR set to: 0
  7920                           ;color.c: 240:     orange->V = HSV->V;
  7921   00279E  EE20 F004          	lfsr	2,4
  7922   0027A2  5178               	movf	color_calibration@HSV& (0+255),w,b
  7923   0027A4  26D9               	addwf	fsr2l,f,c
  7924   0027A6  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7925   0027A8  22DA               	addwfc	fsr2h,f,c
  7926   0027AA  EE10 F004          	lfsr	1,4
  7927   0027AE  5184               	movf	color_calibration@orange& (0+255),w,b
  7928   0027B0  26E1               	addwf	fsr1l,f,c
  7929   0027B2  5185               	movf	(color_calibration@orange+1)& (0+255),w,b
  7930   0027B4  22E2               	addwfc	fsr1h,f,c
  7931   0027B6  CFDE FFE6          	movff	postinc2,postinc1
  7932   0027BA  CFDD FFE5          	movff	postdec2,postdec1
  7933   0027BE                     
  7934                           ; BSR set to: 0
  7935                           ;color.c: 242:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7936   0027BE  0E29               	movlw	41
  7937   0027C0  6E41               	movwf	(??_color_calibration+1)^0,c
  7938   0027C2  0E96               	movlw	150
  7939   0027C4  6E40               	movwf	??_color_calibration^0,c
  7940   0027C6  0E7F               	movlw	127
  7941   0027C8                     u6487:
  7942   0027C8  2EE8               	decfsz	wreg,f,c
  7943   0027CA  D7FE               	bra	u6487
  7944   0027CC  2E40               	decfsz	??_color_calibration^0,f,c
  7945   0027CE  D7FC               	bra	u6487
  7946   0027D0  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  7947   0027D2  D7FA               	bra	u6487
  7948   0027D4  0000               	nop	
  7949   0027D6                     
  7950                           ;color.c: 243:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7951   0027D6  8680               	bsf	128,3,c	;volatile
  7952   0027D8  8E7C               	bsf	124,7,c	;volatile
  7953   0027DA                     l201:
  7954   0027DA  B48E               	btfsc	142,2,c	;volatile
  7955   0027DC  EFF2  F013         	goto	u4681
  7956   0027E0  EFF4  F013         	goto	u4680
  7957   0027E4                     u4681:
  7958   0027E4  EFED  F013         	goto	l201
  7959   0027E8                     u4680:
  7960   0027E8                     
  7961                           ;color.c: 246:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7962   0027E8  9680               	bcf	128,3,c	;volatile
  7963   0027EA  9E7C               	bcf	124,7,c	;volatile
  7964   0027EC                     
  7965                           ;color.c: 247:     color_read(RGBC);
  7966   0027EC  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7967   0027F0  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7968   0027F4  EC4C  F01F         	call	_color_read	;wreg free
  7969   0027F8                     
  7970                           ;color.c: 248:     rgb_2_hsv(*RGBC, HSV);
  7971   0027F8  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7972   0027FC  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7973   002800  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7974   002804  0E07               	movlw	7
  7975   002806                     u4691:
  7976   002806  CFDB FFEB          	movff	plusw2,plusw0
  7977   00280A  06E8               	decf	wreg,f,c
  7978   00280C  E2FC               	bc	u4691
  7979   00280E  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7980   002812  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7981   002816  EC7E  F017         	call	_rgb_2_hsv	;wreg free
  7982   00281A                     
  7983                           ;color.c: 249:     lightblue->H = HSV->H;
  7984   00281A  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7985   00281E  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7986   002822  C086  FFE1         	movff	color_calibration@lightblue,fsr1l
  7987   002826  C087  FFE2         	movff	color_calibration@lightblue+1,fsr1h
  7988   00282A  CFDE FFE6          	movff	postinc2,postinc1
  7989   00282E  CFDD FFE5          	movff	postdec2,postdec1
  7990   002832                     
  7991                           ;color.c: 250:     lightblue->S = HSV->S;
  7992   002832  0100               	movlb	0	; () banked
  7993   002834  EE20 F002          	lfsr	2,2
  7994   002838  5178               	movf	color_calibration@HSV& (0+255),w,b
  7995   00283A  26D9               	addwf	fsr2l,f,c
  7996   00283C  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7997   00283E  22DA               	addwfc	fsr2h,f,c
  7998   002840  EE10 F002          	lfsr	1,2
  7999   002844  5186               	movf	color_calibration@lightblue& (0+255),w,b
  8000   002846  26E1               	addwf	fsr1l,f,c
  8001   002848  5187               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  8002   00284A  22E2               	addwfc	fsr1h,f,c
  8003   00284C  CFDE FFE6          	movff	postinc2,postinc1
  8004   002850  CFDD FFE5          	movff	postdec2,postdec1
  8005   002854                     
  8006                           ; BSR set to: 0
  8007                           ;color.c: 251:     lightblue->V = HSV->V;
  8008   002854  EE20 F004          	lfsr	2,4
  8009   002858  5178               	movf	color_calibration@HSV& (0+255),w,b
  8010   00285A  26D9               	addwf	fsr2l,f,c
  8011   00285C  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8012   00285E  22DA               	addwfc	fsr2h,f,c
  8013   002860  EE10 F004          	lfsr	1,4
  8014   002864  5186               	movf	color_calibration@lightblue& (0+255),w,b
  8015   002866  26E1               	addwf	fsr1l,f,c
  8016   002868  5187               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  8017   00286A  22E2               	addwfc	fsr1h,f,c
  8018   00286C  CFDE FFE6          	movff	postinc2,postinc1
  8019   002870  CFDD FFE5          	movff	postdec2,postdec1
  8020   002874                     
  8021                           ; BSR set to: 0
  8022                           ;color.c: 253:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8023   002874  0E29               	movlw	41
  8024   002876  6E41               	movwf	(??_color_calibration+1)^0,c
  8025   002878  0E96               	movlw	150
  8026   00287A  6E40               	movwf	??_color_calibration^0,c
  8027   00287C  0E7F               	movlw	127
  8028   00287E                     u6497:
  8029   00287E  2EE8               	decfsz	wreg,f,c
  8030   002880  D7FE               	bra	u6497
  8031   002882  2E40               	decfsz	??_color_calibration^0,f,c
  8032   002884  D7FC               	bra	u6497
  8033   002886  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8034   002888  D7FA               	bra	u6497
  8035   00288A  0000               	nop	
  8036   00288C                     
  8037                           ;color.c: 254:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8038   00288C  8680               	bsf	128,3,c	;volatile
  8039   00288E  8E7C               	bsf	124,7,c	;volatile
  8040   002890                     l204:
  8041   002890  B48E               	btfsc	142,2,c	;volatile
  8042   002892  EF4D  F014         	goto	u4701
  8043   002896  EF4F  F014         	goto	u4700
  8044   00289A                     u4701:
  8045   00289A  EF48  F014         	goto	l204
  8046   00289E                     u4700:
  8047   00289E                     
  8048                           ;color.c: 257:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8049   00289E  9680               	bcf	128,3,c	;volatile
  8050   0028A0  9E7C               	bcf	124,7,c	;volatile
  8051   0028A2                     
  8052                           ;color.c: 258:     color_read(RGBC);
  8053   0028A2  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8054   0028A6  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8055   0028AA  EC4C  F01F         	call	_color_read	;wreg free
  8056   0028AE                     
  8057                           ;color.c: 259:     rgb_2_hsv(*RGBC, HSV);
  8058   0028AE  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8059   0028B2  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8060   0028B6  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8061   0028BA  0E07               	movlw	7
  8062   0028BC                     u4711:
  8063   0028BC  CFDB FFEB          	movff	plusw2,plusw0
  8064   0028C0  06E8               	decf	wreg,f,c
  8065   0028C2  E2FC               	bc	u4711
  8066   0028C4  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8067   0028C8  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8068   0028CC  EC7E  F017         	call	_rgb_2_hsv	;wreg free
  8069   0028D0                     
  8070                           ;color.c: 260:     white->H = HSV->H;
  8071   0028D0  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8072   0028D4  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8073   0028D8  C088  FFE1         	movff	color_calibration@white,fsr1l
  8074   0028DC  C089  FFE2         	movff	color_calibration@white+1,fsr1h
  8075   0028E0  CFDE FFE6          	movff	postinc2,postinc1
  8076   0028E4  CFDD FFE5          	movff	postdec2,postdec1
  8077   0028E8                     
  8078                           ;color.c: 261:     white->S = HSV->S;
  8079   0028E8  0100               	movlb	0	; () banked
  8080   0028EA  EE20 F002          	lfsr	2,2
  8081   0028EE  5178               	movf	color_calibration@HSV& (0+255),w,b
  8082   0028F0  26D9               	addwf	fsr2l,f,c
  8083   0028F2  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8084   0028F4  22DA               	addwfc	fsr2h,f,c
  8085   0028F6  EE10 F002          	lfsr	1,2
  8086   0028FA  5188               	movf	color_calibration@white& (0+255),w,b
  8087   0028FC  26E1               	addwf	fsr1l,f,c
  8088   0028FE  5189               	movf	(color_calibration@white+1)& (0+255),w,b
  8089   002900  22E2               	addwfc	fsr1h,f,c
  8090   002902  CFDE FFE6          	movff	postinc2,postinc1
  8091   002906  CFDD FFE5          	movff	postdec2,postdec1
  8092   00290A                     
  8093                           ; BSR set to: 0
  8094                           ;color.c: 262:     white->V = HSV->V;
  8095   00290A  EE20 F004          	lfsr	2,4
  8096   00290E  5178               	movf	color_calibration@HSV& (0+255),w,b
  8097   002910  26D9               	addwf	fsr2l,f,c
  8098   002912  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8099   002914  22DA               	addwfc	fsr2h,f,c
  8100   002916  EE10 F004          	lfsr	1,4
  8101   00291A  5188               	movf	color_calibration@white& (0+255),w,b
  8102   00291C  26E1               	addwf	fsr1l,f,c
  8103   00291E  5189               	movf	(color_calibration@white+1)& (0+255),w,b
  8104   002920  22E2               	addwfc	fsr1h,f,c
  8105   002922  CFDE FFE6          	movff	postinc2,postinc1
  8106   002926  CFDD FFE5          	movff	postdec2,postdec1
  8107   00292A                     
  8108                           ; BSR set to: 0
  8109                           ;color.c: 264:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8110   00292A  0E29               	movlw	41
  8111   00292C  6E41               	movwf	(??_color_calibration+1)^0,c
  8112   00292E  0E96               	movlw	150
  8113   002930  6E40               	movwf	??_color_calibration^0,c
  8114   002932  0E7F               	movlw	127
  8115   002934                     u6507:
  8116   002934  2EE8               	decfsz	wreg,f,c
  8117   002936  D7FE               	bra	u6507
  8118   002938  2E40               	decfsz	??_color_calibration^0,f,c
  8119   00293A  D7FC               	bra	u6507
  8120   00293C  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8121   00293E  D7FA               	bra	u6507
  8122   002940  0000               	nop	
  8123   002942                     
  8124                           ;color.c: 265:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8125   002942  8680               	bsf	128,3,c	;volatile
  8126   002944  8E7C               	bsf	124,7,c	;volatile
  8127   002946  0012               	return		;funcret
  8128   002948                     __end_of_color_calibration:
  8129                           	callstack 0
  8130                           
  8131 ;; *************** function _white_Light *****************
  8132 ;; Defined at:
  8133 ;;		line 62 in file "color.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;  state           1    wreg     unsigned char 
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;  state           1   15[COMRAM] unsigned char 
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  1    wreg      void 
  8140 ;; Registers used:
  8141 ;;		wreg, status,2
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8151 ;;Total ram usage:        1 bytes
  8152 ;; Hardware stack levels used: 1
  8153 ;; Hardware stack levels required when called: 5
  8154 ;; This function calls:
  8155 ;;		Nothing
  8156 ;; This function is called by:
  8157 ;;		_main
  8158 ;;		_color_calibration
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           	psect	text19
  8163   0051E8                     __ptext19:
  8164                           	callstack 0
  8165   0051E8                     _white_Light:
  8166                           	callstack 25
  8167                           
  8168                           ;incstack = 0
  8169                           ;white_Light@state stored from wreg
  8170   0051E8  6E10               	movwf	white_Light@state^0,c
  8171   0051EA                     
  8172                           ;color.c: 62: void white_Light(char state);color.c: 63: {;color.c: 64:     if (state){
  8173   0051EA  5010               	movf	white_Light@state^0,w,c
  8174   0051EC  B4D8               	btfsc	status,2,c
  8175   0051EE  EFFB  F028         	goto	u4311
  8176   0051F2  EFFD  F028         	goto	u4310
  8177   0051F6                     u4311:
  8178   0051F6  EF02  F029         	goto	l153
  8179   0051FA                     u4310:
  8180   0051FA                     
  8181                           ;color.c: 65:         LATGbits.LATG0 = 1;
  8182   0051FA  807F               	bsf	127,0,c	;volatile
  8183                           
  8184                           ;color.c: 66:         LATEbits.LATE7 = 1;
  8185   0051FC  8E7D               	bsf	125,7,c	;volatile
  8186                           
  8187                           ;color.c: 67:         LATAbits.LATA3 = 1;
  8188   0051FE  8679               	bsf	121,3,c	;volatile
  8189                           
  8190                           ;color.c: 68:     }
  8191   005200  EF05  F029         	goto	l155
  8192   005204                     l153:
  8193                           
  8194                           ;color.c: 70:         LATGbits.LATG0 = 0;
  8195   005204  907F               	bcf	127,0,c	;volatile
  8196                           
  8197                           ;color.c: 71:         LATEbits.LATE7 = 0;
  8198   005206  9E7D               	bcf	125,7,c	;volatile
  8199                           
  8200                           ;color.c: 72:         LATAbits.LATA3 = 0;
  8201   005208  9679               	bcf	121,3,c	;volatile
  8202   00520A                     l155:
  8203   00520A  0012               	return		;funcret
  8204   00520C                     __end_of_white_Light:
  8205                           	callstack 0
  8206                           
  8207 ;; *************** function _rgb_2_hsv *****************
  8208 ;; Defined at:
  8209 ;;		line 279 in file "color.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;  RGBC            8   41[COMRAM] struct RGBC_val
  8212 ;;  HSV             2   49[COMRAM] PTR struct HSV_val
  8213 ;;		 -> main@HSV(6), 
  8214 ;; Auto vars:     Size  Location     Type
  8215 ;;  diff            4   14[BANK0 ] unsigned long 
  8216 ;;  b               2   20[BANK0 ] unsigned int 
  8217 ;;  g               2   18[BANK0 ] unsigned int 
  8218 ;;  cmax            2   12[BANK0 ] unsigned int 
  8219 ;;  r               2   10[BANK0 ] unsigned int 
  8220 ;;  cmin            2    4[BANK0 ] unsigned int 
  8221 ;; Return value:  Size  Location     Type
  8222 ;;                  1    wreg      void 
  8223 ;; Registers used:
  8224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/0
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8230 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8231 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8232 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8233 ;;      Totals:        22      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8234 ;;Total ram usage:       44 bytes
  8235 ;; Hardware stack levels used: 1
  8236 ;; Hardware stack levels required when called: 6
  8237 ;; This function calls:
  8238 ;;		___aldiv
  8239 ;;		___lldiv
  8240 ;;		___lmul
  8241 ;;		_max
  8242 ;;		_min
  8243 ;; This function is called by:
  8244 ;;		_main
  8245 ;;		_color_calibration
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           
  8249                           	psect	text20
  8250   002EFC                     __ptext20:
  8251                           	callstack 0
  8252   002EFC                     _rgb_2_hsv:
  8253                           	callstack 24
  8254   002EFC                     
  8255                           ;color.c: 282:     unsigned int r = (unsigned int)(RGBC.R*10000L/255);
  8256   002EFC  C02A  F010         	movff	rgb_2_hsv@RGBC,___lmul@multiplier
  8257   002F00  C02B  F011         	movff	rgb_2_hsv@RGBC+1,___lmul@multiplier+1
  8258   002F04  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8259   002F06  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8260   002F08  0E10               	movlw	16
  8261   002F0A  6E14               	movwf	___lmul@multiplicand^0,c
  8262   002F0C  0E27               	movlw	39
  8263   002F0E  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8264   002F10  0E00               	movlw	0
  8265   002F12  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8266   002F14  0E00               	movlw	0
  8267   002F16  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8268   002F18  EC5C  F027         	call	___lmul	;wreg free
  8269   002F1C  C010  F01C         	movff	?___lmul,___aldiv@dividend
  8270   002F20  C011  F01D         	movff	?___lmul+1,___aldiv@dividend+1
  8271   002F24  C012  F01E         	movff	?___lmul+2,___aldiv@dividend+2
  8272   002F28  C013  F01F         	movff	?___lmul+3,___aldiv@dividend+3
  8273   002F2C  0EFF               	movlw	255
  8274   002F2E  6E20               	movwf	___aldiv@divisor^0,c
  8275   002F30  0E00               	movlw	0
  8276   002F32  6E21               	movwf	(___aldiv@divisor+1)^0,c
  8277   002F34  0E00               	movlw	0
  8278   002F36  6E22               	movwf	(___aldiv@divisor+2)^0,c
  8279   002F38  0E00               	movlw	0
  8280   002F3A  6E23               	movwf	(___aldiv@divisor+3)^0,c
  8281   002F3C  ECC9  F023         	call	___aldiv	;wreg free
  8282   002F40  C01C  F06A         	movff	?___aldiv,rgb_2_hsv@r
  8283   002F44  C01D  F06B         	movff	?___aldiv+1,rgb_2_hsv@r+1
  8284                           
  8285                           ;color.c: 283:     unsigned int g = (unsigned int)(RGBC.G*10000L/255);
  8286   002F48  C02C  F010         	movff	rgb_2_hsv@RGBC+2,___lmul@multiplier
  8287   002F4C  C02D  F011         	movff	rgb_2_hsv@RGBC+3,___lmul@multiplier+1
  8288   002F50  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8289   002F52  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8290   002F54  0E10               	movlw	16
  8291   002F56  6E14               	movwf	___lmul@multiplicand^0,c
  8292   002F58  0E27               	movlw	39
  8293   002F5A  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8294   002F5C  0E00               	movlw	0
  8295   002F5E  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8296   002F60  0E00               	movlw	0
  8297   002F62  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8298   002F64  EC5C  F027         	call	___lmul	;wreg free
  8299   002F68  C010  F01C         	movff	?___lmul,___aldiv@dividend
  8300   002F6C  C011  F01D         	movff	?___lmul+1,___aldiv@dividend+1
  8301   002F70  C012  F01E         	movff	?___lmul+2,___aldiv@dividend+2
  8302   002F74  C013  F01F         	movff	?___lmul+3,___aldiv@dividend+3
  8303   002F78  0EFF               	movlw	255
  8304   002F7A  6E20               	movwf	___aldiv@divisor^0,c
  8305   002F7C  0E00               	movlw	0
  8306   002F7E  6E21               	movwf	(___aldiv@divisor+1)^0,c
  8307   002F80  0E00               	movlw	0
  8308   002F82  6E22               	movwf	(___aldiv@divisor+2)^0,c
  8309   002F84  0E00               	movlw	0
  8310   002F86  6E23               	movwf	(___aldiv@divisor+3)^0,c
  8311   002F88  ECC9  F023         	call	___aldiv	;wreg free
  8312   002F8C  C01C  F072         	movff	?___aldiv,rgb_2_hsv@g
  8313   002F90  C01D  F073         	movff	?___aldiv+1,rgb_2_hsv@g+1
  8314                           
  8315                           ;color.c: 284:     unsigned int b = (unsigned int)(RGBC.B*10000L/255);
  8316   002F94  C02E  F010         	movff	rgb_2_hsv@RGBC+4,___lmul@multiplier
  8317   002F98  C02F  F011         	movff	rgb_2_hsv@RGBC+5,___lmul@multiplier+1
  8318   002F9C  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8319   002F9E  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8320   002FA0  0E10               	movlw	16
  8321   002FA2  6E14               	movwf	___lmul@multiplicand^0,c
  8322   002FA4  0E27               	movlw	39
  8323   002FA6  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8324   002FA8  0E00               	movlw	0
  8325   002FAA  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8326   002FAC  0E00               	movlw	0
  8327   002FAE  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8328   002FB0  EC5C  F027         	call	___lmul	;wreg free
  8329   002FB4  C010  F01C         	movff	?___lmul,___aldiv@dividend
  8330   002FB8  C011  F01D         	movff	?___lmul+1,___aldiv@dividend+1
  8331   002FBC  C012  F01E         	movff	?___lmul+2,___aldiv@dividend+2
  8332   002FC0  C013  F01F         	movff	?___lmul+3,___aldiv@dividend+3
  8333   002FC4  0EFF               	movlw	255
  8334   002FC6  6E20               	movwf	___aldiv@divisor^0,c
  8335   002FC8  0E00               	movlw	0
  8336   002FCA  6E21               	movwf	(___aldiv@divisor+1)^0,c
  8337   002FCC  0E00               	movlw	0
  8338   002FCE  6E22               	movwf	(___aldiv@divisor+2)^0,c
  8339   002FD0  0E00               	movlw	0
  8340   002FD2  6E23               	movwf	(___aldiv@divisor+3)^0,c
  8341   002FD4  ECC9  F023         	call	___aldiv	;wreg free
  8342   002FD8  C01C  F074         	movff	?___aldiv,rgb_2_hsv@b
  8343   002FDC  C01D  F075         	movff	?___aldiv+1,rgb_2_hsv@b+1
  8344                           
  8345                           ;color.c: 287:     unsigned int cmax = max(r, max(g, b));
  8346   002FE0  C072  F010         	movff	rgb_2_hsv@g,max@a
  8347   002FE4  C073  F011         	movff	rgb_2_hsv@g+1,max@a+1
  8348   002FE8  C074  F012         	movff	rgb_2_hsv@b,max@b
  8349   002FEC  C075  F013         	movff	rgb_2_hsv@b+1,max@b+1
  8350   002FF0  EC51  F028         	call	_max	;wreg free
  8351   002FF4  C010  F066         	movff	?_max,_rgb_2_hsv$3625
  8352   002FF8  C011  F067         	movff	?_max+1,_rgb_2_hsv$3625+1
  8353                           
  8354                           ;color.c: 287:     unsigned int cmax = max(r, max(g, b));
  8355   002FFC  C06A  F010         	movff	rgb_2_hsv@r,max@a
  8356   003000  C06B  F011         	movff	rgb_2_hsv@r+1,max@a+1
  8357   003004  C066  F012         	movff	_rgb_2_hsv$3625,max@b
  8358   003008  C067  F013         	movff	_rgb_2_hsv$3625+1,max@b+1
  8359   00300C  EC51  F028         	call	_max	;wreg free
  8360   003010  C010  F06C         	movff	?_max,rgb_2_hsv@cmax
  8361   003014  C011  F06D         	movff	?_max+1,rgb_2_hsv@cmax+1
  8362                           
  8363                           ;color.c: 288:     unsigned int cmin = min(r, min(g, b));
  8364   003018  C072  F010         	movff	rgb_2_hsv@g,min@a
  8365   00301C  C073  F011         	movff	rgb_2_hsv@g+1,min@a+1
  8366   003020  C074  F012         	movff	rgb_2_hsv@b,min@b
  8367   003024  C075  F013         	movff	rgb_2_hsv@b+1,min@b+1
  8368   003028  EC3B  F028         	call	_min	;wreg free
  8369   00302C  C010  F068         	movff	?_min,_rgb_2_hsv$3626
  8370   003030  C011  F069         	movff	?_min+1,_rgb_2_hsv$3626+1
  8371                           
  8372                           ;color.c: 288:     unsigned int cmin = min(r, min(g, b));
  8373   003034  C06A  F010         	movff	rgb_2_hsv@r,min@a
  8374   003038  C06B  F011         	movff	rgb_2_hsv@r+1,min@a+1
  8375   00303C  C068  F012         	movff	_rgb_2_hsv$3626,min@b
  8376   003040  C069  F013         	movff	_rgb_2_hsv$3626+1,min@b+1
  8377   003044  EC3B  F028         	call	_min	;wreg free
  8378   003048  C010  F064         	movff	?_min,rgb_2_hsv@cmin
  8379   00304C  C011  F065         	movff	?_min+1,rgb_2_hsv@cmin+1
  8380   003050                     
  8381                           ;color.c: 289:     unsigned long diff = cmax - cmin;
  8382   003050  0100               	movlb	0	; () banked
  8383   003052  5164               	movf	rgb_2_hsv@cmin& (0+255),w,b
  8384   003054  5D6C               	subwf	rgb_2_hsv@cmax& (0+255),w,b
  8385   003056  6E34               	movwf	??_rgb_2_hsv^0,c
  8386   003058  5165               	movf	(rgb_2_hsv@cmin+1)& (0+255),w,b
  8387   00305A  596D               	subwfb	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8388   00305C  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8389   00305E  C034  F06E         	movff	??_rgb_2_hsv,rgb_2_hsv@diff
  8390   003062  C035  F06F         	movff	??_rgb_2_hsv+1,rgb_2_hsv@diff+1
  8391   003066  6B70               	clrf	(rgb_2_hsv@diff+2)& (0+255),b
  8392   003068  6B71               	clrf	(rgb_2_hsv@diff+3)& (0+255),b
  8393   00306A                     
  8394                           ; BSR set to: 0
  8395                           ;color.c: 292:     if (cmax == r){
  8396   00306A  516A               	movf	rgb_2_hsv@r& (0+255),w,b
  8397   00306C  196C               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8398   00306E  E107               	bnz	u4241
  8399   003070  516B               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8400   003072  196D               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8401   003074  A4D8               	btfss	status,2,c
  8402   003076  EF3F  F018         	goto	u4241
  8403   00307A  EF41  F018         	goto	u4240
  8404   00307E                     u4241:
  8405   00307E  EFE8  F018         	goto	l5001
  8406   003082                     u4240:
  8407   003082                     
  8408                           ; BSR set to: 0
  8409                           ;color.c: 293:         if (g > b){HSV->H = (unsigned int)((g-b)*6000L/diff);}
  8410   003082  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  8411   003084  5D74               	subwf	rgb_2_hsv@b& (0+255),w,b
  8412   003086  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8413   003088  5975               	subwfb	(rgb_2_hsv@b+1)& (0+255),w,b
  8414   00308A  B0D8               	btfsc	status,0,c
  8415   00308C  EF4A  F018         	goto	u4251
  8416   003090  EF4C  F018         	goto	u4250
  8417   003094                     u4251:
  8418   003094  EF7E  F018         	goto	l4995
  8419   003098                     u4250:
  8420   003098                     
  8421                           ; BSR set to: 0
  8422   003098  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8423   00309A  5D72               	subwf	rgb_2_hsv@g& (0+255),w,b
  8424   00309C  6E34               	movwf	??_rgb_2_hsv^0,c
  8425   00309E  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8426   0030A0  5973               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8427   0030A2  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8428   0030A4  C034  F010         	movff	??_rgb_2_hsv,___lmul@multiplier
  8429   0030A8  C035  F011         	movff	??_rgb_2_hsv+1,___lmul@multiplier+1
  8430   0030AC  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8431   0030AE  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8432   0030B0  0E70               	movlw	112
  8433   0030B2  6E14               	movwf	___lmul@multiplicand^0,c
  8434   0030B4  0E17               	movlw	23
  8435   0030B6  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8436   0030B8  0E00               	movlw	0
  8437   0030BA  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8438   0030BC  0E00               	movlw	0
  8439   0030BE  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8440   0030C0  EC5C  F027         	call	___lmul	;wreg free
  8441   0030C4  C010  F01C         	movff	?___lmul,___lldiv@dividend
  8442   0030C8  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  8443   0030CC  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  8444   0030D0  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  8445   0030D4  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8446   0030D8  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8447   0030DC  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8448   0030E0  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8449   0030E4  EC4E  F026         	call	___lldiv	;wreg free
  8450   0030E8  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8451   0030EC  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8452   0030F0  C01C  FFDE         	movff	?___lldiv,postinc2
  8453   0030F4  C01D  FFDD         	movff	?___lldiv+1,postdec2
  8454   0030F8  EFA0  F019         	goto	l224
  8455   0030FC                     l4995:
  8456                           
  8457                           ; BSR set to: 0
  8458   0030FC  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8459   0030FE  5D72               	subwf	rgb_2_hsv@g& (0+255),w,b
  8460   003100  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8461   003102  5973               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8462   003104  B0D8               	btfsc	status,0,c
  8463   003106  EF87  F018         	goto	u4261
  8464   00310A  EF89  F018         	goto	u4260
  8465   00310E                     u4261:
  8466   00310E  EFA0  F019         	goto	l224
  8467   003112                     u4260:
  8468   003112                     
  8469                           ; BSR set to: 0
  8470   003112  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8471   003114  6E34               	movwf	??_rgb_2_hsv^0,c
  8472   003116  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8473   003118  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8474   00311A  6A36               	clrf	(??_rgb_2_hsv+2)^0,c
  8475   00311C  6A37               	clrf	(??_rgb_2_hsv+3)^0,c
  8476   00311E  C06E  F010         	movff	rgb_2_hsv@diff,___lmul@multiplier
  8477   003122  C06F  F011         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  8478   003126  C070  F012         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  8479   00312A  C071  F013         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  8480   00312E  0E06               	movlw	6
  8481   003130  6E14               	movwf	___lmul@multiplicand^0,c
  8482   003132  0E00               	movlw	0
  8483   003134  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8484   003136  0E00               	movlw	0
  8485   003138  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8486   00313A  0E00               	movlw	0
  8487   00313C  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8488   00313E  EC5C  F027         	call	___lmul	;wreg free
  8489   003142  0100               	movlb	0	; () banked
  8490   003144  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  8491   003146  2410               	addwf	?___lmul^0,w,c
  8492   003148  6E38               	movwf	(??_rgb_2_hsv+4)^0,c
  8493   00314A  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8494   00314C  2011               	addwfc	(?___lmul+1)^0,w,c
  8495   00314E  6E39               	movwf	(??_rgb_2_hsv+5)^0,c
  8496   003150  0E00               	movlw	0
  8497   003152  2012               	addwfc	(?___lmul+2)^0,w,c
  8498   003154  6E3A               	movwf	(??_rgb_2_hsv+6)^0,c
  8499   003156  0E00               	movlw	0
  8500   003158  2013               	addwfc	(?___lmul+3)^0,w,c
  8501   00315A  6E3B               	movwf	(??_rgb_2_hsv+7)^0,c
  8502   00315C  5034               	movf	??_rgb_2_hsv^0,w,c
  8503   00315E  5C38               	subwf	(??_rgb_2_hsv+4)^0,w,c
  8504   003160  6F60               	movwf	_rgb_2_hsv$3627& (0+255),b
  8505   003162  5035               	movf	(??_rgb_2_hsv+1)^0,w,c
  8506   003164  5839               	subwfb	(??_rgb_2_hsv+5)^0,w,c
  8507   003166  6F61               	movwf	(_rgb_2_hsv$3627+1)& (0+255),b
  8508   003168  5036               	movf	(??_rgb_2_hsv+2)^0,w,c
  8509   00316A  583A               	subwfb	(??_rgb_2_hsv+6)^0,w,c
  8510   00316C  6F62               	movwf	(_rgb_2_hsv$3627+2)& (0+255),b
  8511   00316E  5037               	movf	(??_rgb_2_hsv+3)^0,w,c
  8512   003170  583B               	subwfb	(??_rgb_2_hsv+7)^0,w,c
  8513   003172  6F63               	movwf	(_rgb_2_hsv$3627+3)& (0+255),b
  8514   003174                     
  8515                           ; BSR set to: 0
  8516   003174  C060  F010         	movff	_rgb_2_hsv$3627,___lmul@multiplier
  8517   003178  C061  F011         	movff	_rgb_2_hsv$3627+1,___lmul@multiplier+1
  8518   00317C  C062  F012         	movff	_rgb_2_hsv$3627+2,___lmul@multiplier+2
  8519   003180  C063  F013         	movff	_rgb_2_hsv$3627+3,___lmul@multiplier+3
  8520   003184  0E70               	movlw	112
  8521   003186  6E14               	movwf	___lmul@multiplicand^0,c
  8522   003188  0E17               	movlw	23
  8523   00318A  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8524   00318C  0E00               	movlw	0
  8525   00318E  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8526   003190  0E00               	movlw	0
  8527   003192  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8528   003194  EC5C  F027         	call	___lmul	;wreg free
  8529   003198  C010  F01C         	movff	?___lmul,___lldiv@dividend
  8530   00319C  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  8531   0031A0  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  8532   0031A4  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  8533   0031A8  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8534   0031AC  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8535   0031B0  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8536   0031B4  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8537   0031B8  EC4E  F026         	call	___lldiv	;wreg free
  8538   0031BC  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8539   0031C0  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8540   0031C4  C01C  FFDE         	movff	?___lldiv,postinc2
  8541   0031C8  C01D  FFDD         	movff	?___lldiv+1,postdec2
  8542   0031CC  EFA0  F019         	goto	l224
  8543   0031D0                     l5001:
  8544                           
  8545                           ; BSR set to: 0
  8546   0031D0  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  8547   0031D2  196C               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8548   0031D4  E107               	bnz	u4271
  8549   0031D6  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8550   0031D8  196D               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8551   0031DA  A4D8               	btfss	status,2,c
  8552   0031DC  EFF2  F018         	goto	u4271
  8553   0031E0  EFF4  F018         	goto	u4270
  8554   0031E4                     u4271:
  8555   0031E4  EF41  F019         	goto	l5005
  8556   0031E8                     u4270:
  8557   0031E8                     
  8558                           ; BSR set to: 0
  8559   0031E8  516A               	movf	rgb_2_hsv@r& (0+255),w,b
  8560   0031EA  6E34               	movwf	??_rgb_2_hsv^0,c
  8561   0031EC  516B               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8562   0031EE  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8563   0031F0  6A36               	clrf	(??_rgb_2_hsv+2)^0,c
  8564   0031F2  6A37               	clrf	(??_rgb_2_hsv+3)^0,c
  8565   0031F4  90D8               	bcf	status,0,c
  8566   0031F6  356E               	rlcf	rgb_2_hsv@diff& (0+255),w,b
  8567   0031F8  6E38               	movwf	(??_rgb_2_hsv+4)^0,c
  8568   0031FA  356F               	rlcf	(rgb_2_hsv@diff+1)& (0+255),w,b
  8569   0031FC  6E39               	movwf	(??_rgb_2_hsv+5)^0,c
  8570   0031FE  3570               	rlcf	(rgb_2_hsv@diff+2)& (0+255),w,b
  8571   003200  6E3A               	movwf	(??_rgb_2_hsv+6)^0,c
  8572   003202  3571               	rlcf	(rgb_2_hsv@diff+3)& (0+255),w,b
  8573   003204  6E3B               	movwf	(??_rgb_2_hsv+7)^0,c
  8574   003206  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8575   003208  2438               	addwf	(??_rgb_2_hsv+4)^0,w,c
  8576   00320A  6E3C               	movwf	(??_rgb_2_hsv+8)^0,c
  8577   00320C  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8578   00320E  2039               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  8579   003210  6E3D               	movwf	(??_rgb_2_hsv+9)^0,c
  8580   003212  0E00               	movlw	0
  8581   003214  203A               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  8582   003216  6E3E               	movwf	(??_rgb_2_hsv+10)^0,c
  8583   003218  0E00               	movlw	0
  8584   00321A  203B               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  8585   00321C  6E3F               	movwf	(??_rgb_2_hsv+11)^0,c
  8586   00321E  5034               	movf	??_rgb_2_hsv^0,w,c
  8587   003220  5C3C               	subwf	(??_rgb_2_hsv+8)^0,w,c
  8588   003222  6E10               	movwf	___lmul@multiplier^0,c
  8589   003224  5035               	movf	(??_rgb_2_hsv+1)^0,w,c
  8590   003226  583D               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  8591   003228  6E11               	movwf	(___lmul@multiplier+1)^0,c
  8592   00322A  5036               	movf	(??_rgb_2_hsv+2)^0,w,c
  8593   00322C  583E               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  8594   00322E  6E12               	movwf	(___lmul@multiplier+2)^0,c
  8595   003230  5037               	movf	(??_rgb_2_hsv+3)^0,w,c
  8596   003232  583F               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  8597   003234  6E13               	movwf	(___lmul@multiplier+3)^0,c
  8598   003236  0E70               	movlw	112
  8599   003238  6E14               	movwf	___lmul@multiplicand^0,c
  8600   00323A  0E17               	movlw	23
  8601   00323C  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8602   00323E  0E00               	movlw	0
  8603   003240  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8604   003242  0E00               	movlw	0
  8605   003244  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8606   003246  EC5C  F027         	call	___lmul	;wreg free
  8607   00324A  C010  F01C         	movff	?___lmul,___lldiv@dividend
  8608   00324E  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  8609   003252  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  8610   003256  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  8611   00325A  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8612   00325E  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8613   003262  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8614   003266  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8615   00326A  EC4E  F026         	call	___lldiv	;wreg free
  8616   00326E  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8617   003272  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8618   003276  C01C  FFDE         	movff	?___lldiv,postinc2
  8619   00327A  C01D  FFDD         	movff	?___lldiv+1,postdec2
  8620   00327E  EFA0  F019         	goto	l224
  8621   003282                     l5005:
  8622                           
  8623                           ; BSR set to: 0
  8624   003282  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8625   003284  196C               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8626   003286  E107               	bnz	u4281
  8627   003288  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8628   00328A  196D               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8629   00328C  A4D8               	btfss	status,2,c
  8630   00328E  EF4B  F019         	goto	u4281
  8631   003292  EF4D  F019         	goto	u4280
  8632   003296                     u4281:
  8633   003296  EFA0  F019         	goto	l224
  8634   00329A                     u4280:
  8635   00329A                     
  8636                           ; BSR set to: 0
  8637   00329A  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  8638   00329C  6E34               	movwf	??_rgb_2_hsv^0,c
  8639   00329E  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8640   0032A0  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8641   0032A2  6A36               	clrf	(??_rgb_2_hsv+2)^0,c
  8642   0032A4  6A37               	clrf	(??_rgb_2_hsv+3)^0,c
  8643   0032A6  C06E  F038         	movff	rgb_2_hsv@diff,??_rgb_2_hsv+4
  8644   0032AA  C06F  F039         	movff	rgb_2_hsv@diff+1,??_rgb_2_hsv+5
  8645   0032AE  C070  F03A         	movff	rgb_2_hsv@diff+2,??_rgb_2_hsv+6
  8646   0032B2  C071  F03B         	movff	rgb_2_hsv@diff+3,??_rgb_2_hsv+7
  8647   0032B6  0E02               	movlw	2
  8648   0032B8                     u4295:
  8649   0032B8  90D8               	bcf	status,0,c
  8650   0032BA  3638               	rlcf	(??_rgb_2_hsv+4)^0,f,c
  8651   0032BC  3639               	rlcf	(??_rgb_2_hsv+5)^0,f,c
  8652   0032BE  363A               	rlcf	(??_rgb_2_hsv+6)^0,f,c
  8653   0032C0  363B               	rlcf	(??_rgb_2_hsv+7)^0,f,c
  8654   0032C2  2EE8               	decfsz	wreg,f,c
  8655   0032C4  EF5C  F019         	goto	u4295
  8656   0032C8  516A               	movf	rgb_2_hsv@r& (0+255),w,b
  8657   0032CA  2438               	addwf	(??_rgb_2_hsv+4)^0,w,c
  8658   0032CC  6E3C               	movwf	(??_rgb_2_hsv+8)^0,c
  8659   0032CE  516B               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8660   0032D0  2039               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  8661   0032D2  6E3D               	movwf	(??_rgb_2_hsv+9)^0,c
  8662   0032D4  0E00               	movlw	0
  8663   0032D6  203A               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  8664   0032D8  6E3E               	movwf	(??_rgb_2_hsv+10)^0,c
  8665   0032DA  0E00               	movlw	0
  8666   0032DC  203B               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  8667   0032DE  6E3F               	movwf	(??_rgb_2_hsv+11)^0,c
  8668   0032E0  5034               	movf	??_rgb_2_hsv^0,w,c
  8669   0032E2  5C3C               	subwf	(??_rgb_2_hsv+8)^0,w,c
  8670   0032E4  6E10               	movwf	___lmul@multiplier^0,c
  8671   0032E6  5035               	movf	(??_rgb_2_hsv+1)^0,w,c
  8672   0032E8  583D               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  8673   0032EA  6E11               	movwf	(___lmul@multiplier+1)^0,c
  8674   0032EC  5036               	movf	(??_rgb_2_hsv+2)^0,w,c
  8675   0032EE  583E               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  8676   0032F0  6E12               	movwf	(___lmul@multiplier+2)^0,c
  8677   0032F2  5037               	movf	(??_rgb_2_hsv+3)^0,w,c
  8678   0032F4  583F               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  8679   0032F6  6E13               	movwf	(___lmul@multiplier+3)^0,c
  8680   0032F8  0E70               	movlw	112
  8681   0032FA  6E14               	movwf	___lmul@multiplicand^0,c
  8682   0032FC  0E17               	movlw	23
  8683   0032FE  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8684   003300  0E00               	movlw	0
  8685   003302  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8686   003304  0E00               	movlw	0
  8687   003306  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8688   003308  EC5C  F027         	call	___lmul	;wreg free
  8689   00330C  C010  F01C         	movff	?___lmul,___lldiv@dividend
  8690   003310  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  8691   003314  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  8692   003318  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  8693   00331C  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8694   003320  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8695   003324  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8696   003328  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8697   00332C  EC4E  F026         	call	___lldiv	;wreg free
  8698   003330  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8699   003334  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8700   003338  C01C  FFDE         	movff	?___lldiv,postinc2
  8701   00333C  C01D  FFDD         	movff	?___lldiv+1,postdec2
  8702   003340                     l224:
  8703                           
  8704                           ;color.c: 301:     HSV->S = (unsigned int)((diff * 10000)/cmax);
  8705   003340  C06E  F010         	movff	rgb_2_hsv@diff,___lmul@multiplier
  8706   003344  C06F  F011         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  8707   003348  C070  F012         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  8708   00334C  C071  F013         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  8709   003350  0E10               	movlw	16
  8710   003352  6E14               	movwf	___lmul@multiplicand^0,c
  8711   003354  0E27               	movlw	39
  8712   003356  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8713   003358  0E00               	movlw	0
  8714   00335A  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8715   00335C  0E00               	movlw	0
  8716   00335E  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8717   003360  EC5C  F027         	call	___lmul	;wreg free
  8718   003364  C010  F01C         	movff	?___lmul,___lldiv@dividend
  8719   003368  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  8720   00336C  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  8721   003370  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  8722   003374  C06C  F020         	movff	rgb_2_hsv@cmax,___lldiv@divisor
  8723   003378  C06D  F021         	movff	rgb_2_hsv@cmax+1,___lldiv@divisor+1
  8724   00337C  6A22               	clrf	(___lldiv@divisor+2)^0,c
  8725   00337E  6A23               	clrf	(___lldiv@divisor+3)^0,c
  8726   003380  EC4E  F026         	call	___lldiv	;wreg free
  8727   003384  EE20 F002          	lfsr	2,2
  8728   003388  5032               	movf	rgb_2_hsv@HSV^0,w,c
  8729   00338A  26D9               	addwf	fsr2l,f,c
  8730   00338C  5033               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8731   00338E  22DA               	addwfc	fsr2h,f,c
  8732   003390  C01C  FFDE         	movff	?___lldiv,postinc2
  8733   003394  C01D  FFDD         	movff	?___lldiv+1,postdec2
  8734   003398                     
  8735                           ;color.c: 303:     if (HSV->S == 0){HSV->H = 0;}
  8736   003398  EE20 F002          	lfsr	2,2
  8737   00339C  5032               	movf	rgb_2_hsv@HSV^0,w,c
  8738   00339E  26D9               	addwf	fsr2l,f,c
  8739   0033A0  5033               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8740   0033A2  22DA               	addwfc	fsr2h,f,c
  8741   0033A4  50DE               	movf	postinc2,w,c
  8742   0033A6  10DE               	iorwf	postinc2,w,c
  8743   0033A8  A4D8               	btfss	status,2,c
  8744   0033AA  EFD9  F019         	goto	u4301
  8745   0033AE  EFDB  F019         	goto	u4300
  8746   0033B2                     u4301:
  8747   0033B2  EFE1  F019         	goto	l5013
  8748   0033B6                     u4300:
  8749   0033B6  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8750   0033BA  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8751   0033BE  6ADE               	clrf	postinc2,c
  8752   0033C0  6ADD               	clrf	postdec2,c
  8753   0033C2                     l5013:
  8754                           
  8755                           ;color.c: 306:     HSV->V = cmax;
  8756   0033C2  EE20 F004          	lfsr	2,4
  8757   0033C6  5032               	movf	rgb_2_hsv@HSV^0,w,c
  8758   0033C8  26D9               	addwf	fsr2l,f,c
  8759   0033CA  5033               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8760   0033CC  22DA               	addwfc	fsr2h,f,c
  8761   0033CE  C06C  FFDE         	movff	rgb_2_hsv@cmax,postinc2
  8762   0033D2  C06D  FFDD         	movff	rgb_2_hsv@cmax+1,postdec2
  8763   0033D6  0012               	return		;funcret
  8764   0033D8                     __end_of_rgb_2_hsv:
  8765                           	callstack 0
  8766                           
  8767 ;; *************** function _min *****************
  8768 ;; Defined at:
  8769 ;;		line 274 in file "color.c"
  8770 ;; Parameters:    Size  Location     Type
  8771 ;;  a               2   15[COMRAM] unsigned int 
  8772 ;;  b               2   17[COMRAM] unsigned int 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;		None
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  2   15[COMRAM] unsigned int 
  8777 ;; Registers used:
  8778 ;;		wreg, status,2, status,0
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8784 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8787 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8788 ;;Total ram usage:        4 bytes
  8789 ;; Hardware stack levels used: 1
  8790 ;; Hardware stack levels required when called: 5
  8791 ;; This function calls:
  8792 ;;		Nothing
  8793 ;; This function is called by:
  8794 ;;		_rgb_2_hsv
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           	psect	text21
  8799   005076                     __ptext21:
  8800                           	callstack 0
  8801   005076                     _min:
  8802                           	callstack 24
  8803   005076                     
  8804                           ;color.c: 275:     if (a < b){return a;}
  8805   005076  5012               	movf	min@b^0,w,c
  8806   005078  5C10               	subwf	min@a^0,w,c
  8807   00507A  5013               	movf	(min@b+1)^0,w,c
  8808   00507C  5811               	subwfb	(min@a+1)^0,w,c
  8809   00507E  B0D8               	btfsc	status,0,c
  8810   005080  EF44  F028         	goto	u3971
  8811   005084  EF46  F028         	goto	u3970
  8812   005088                     u3971:
  8813   005088  EF4C  F028         	goto	l215
  8814   00508C                     u3970:
  8815   00508C  C010  F010         	movff	min@a,?_min
  8816   005090  C011  F011         	movff	min@a+1,?_min+1
  8817   005094  EF50  F028         	goto	l216
  8818   005098                     l215:
  8819   005098  C012  F010         	movff	min@b,?_min
  8820   00509C  C013  F011         	movff	min@b+1,?_min+1
  8821   0050A0                     l216:
  8822   0050A0  0012               	return		;funcret
  8823   0050A2                     __end_of_min:
  8824                           	callstack 0
  8825                           
  8826 ;; *************** function _max *****************
  8827 ;; Defined at:
  8828 ;;		line 269 in file "color.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  a               2   15[COMRAM] unsigned int 
  8831 ;;  b               2   17[COMRAM] unsigned int 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;		None
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  2   15[COMRAM] unsigned int 
  8836 ;; Registers used:
  8837 ;;		wreg, status,2, status,0
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8846 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8847 ;;Total ram usage:        4 bytes
  8848 ;; Hardware stack levels used: 1
  8849 ;; Hardware stack levels required when called: 5
  8850 ;; This function calls:
  8851 ;;		Nothing
  8852 ;; This function is called by:
  8853 ;;		_rgb_2_hsv
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           	psect	text22
  8858   0050A2                     __ptext22:
  8859                           	callstack 0
  8860   0050A2                     _max:
  8861                           	callstack 24
  8862   0050A2                     
  8863                           ;color.c: 270:     if (a > b){return a;}
  8864   0050A2  5010               	movf	max@a^0,w,c
  8865   0050A4  5C12               	subwf	max@b^0,w,c
  8866   0050A6  5011               	movf	(max@a+1)^0,w,c
  8867   0050A8  5813               	subwfb	(max@b+1)^0,w,c
  8868   0050AA  B0D8               	btfsc	status,0,c
  8869   0050AC  EF5A  F028         	goto	u3961
  8870   0050B0  EF5C  F028         	goto	u3960
  8871   0050B4                     u3961:
  8872   0050B4  EF62  F028         	goto	l210
  8873   0050B8                     u3960:
  8874   0050B8  C010  F010         	movff	max@a,?_max
  8875   0050BC  C011  F011         	movff	max@a+1,?_max+1
  8876   0050C0  EF66  F028         	goto	l211
  8877   0050C4                     l210:
  8878   0050C4  C012  F010         	movff	max@b,?_max
  8879   0050C8  C013  F011         	movff	max@b+1,?_max+1
  8880   0050CC                     l211:
  8881   0050CC  0012               	return		;funcret
  8882   0050CE                     __end_of_max:
  8883                           	callstack 0
  8884                           
  8885 ;; *************** function ___lmul *****************
  8886 ;; Defined at:
  8887 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  multiplier      4   15[COMRAM] unsigned long 
  8890 ;;  multiplicand    4   19[COMRAM] unsigned long 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;  product         4   23[COMRAM] unsigned long 
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  4   15[COMRAM] unsigned long 
  8895 ;; Registers used:
  8896 ;;		wreg, status,2, status,0
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8902 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8903 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8905 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8906 ;;Total ram usage:       12 bytes
  8907 ;; Hardware stack levels used: 1
  8908 ;; Hardware stack levels required when called: 5
  8909 ;; This function calls:
  8910 ;;		Nothing
  8911 ;; This function is called by:
  8912 ;;		_rgb_2_hsv
  8913 ;;		_color_normalise
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917                           	psect	text23
  8918   004EB8                     __ptext23:
  8919                           	callstack 0
  8920   004EB8                     ___lmul:
  8921                           	callstack 24
  8922   004EB8  0E00               	movlw	0
  8923   004EBA  6E18               	movwf	___lmul@product^0,c
  8924   004EBC  0E00               	movlw	0
  8925   004EBE  6E19               	movwf	(___lmul@product+1)^0,c
  8926   004EC0  0E00               	movlw	0
  8927   004EC2  6E1A               	movwf	(___lmul@product+2)^0,c
  8928   004EC4  0E00               	movlw	0
  8929   004EC6  6E1B               	movwf	(___lmul@product+3)^0,c
  8930   004EC8                     l4893:
  8931   004EC8  A010               	btfss	___lmul@multiplier^0,0,c
  8932   004ECA  EF69  F027         	goto	u4131
  8933   004ECE  EF6B  F027         	goto	u4130
  8934   004ED2                     u4131:
  8935   004ED2  EF73  F027         	goto	l4897
  8936   004ED6                     u4130:
  8937   004ED6  5014               	movf	___lmul@multiplicand^0,w,c
  8938   004ED8  2618               	addwf	___lmul@product^0,f,c
  8939   004EDA  5015               	movf	(___lmul@multiplicand+1)^0,w,c
  8940   004EDC  2219               	addwfc	(___lmul@product+1)^0,f,c
  8941   004EDE  5016               	movf	(___lmul@multiplicand+2)^0,w,c
  8942   004EE0  221A               	addwfc	(___lmul@product+2)^0,f,c
  8943   004EE2  5017               	movf	(___lmul@multiplicand+3)^0,w,c
  8944   004EE4  221B               	addwfc	(___lmul@product+3)^0,f,c
  8945   004EE6                     l4897:
  8946   004EE6  90D8               	bcf	status,0,c
  8947   004EE8  3614               	rlcf	___lmul@multiplicand^0,f,c
  8948   004EEA  3615               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8949   004EEC  3616               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8950   004EEE  3617               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8951   004EF0  90D8               	bcf	status,0,c
  8952   004EF2  3213               	rrcf	(___lmul@multiplier+3)^0,f,c
  8953   004EF4  3212               	rrcf	(___lmul@multiplier+2)^0,f,c
  8954   004EF6  3211               	rrcf	(___lmul@multiplier+1)^0,f,c
  8955   004EF8  3210               	rrcf	___lmul@multiplier^0,f,c
  8956   004EFA  5010               	movf	___lmul@multiplier^0,w,c
  8957   004EFC  1011               	iorwf	(___lmul@multiplier+1)^0,w,c
  8958   004EFE  1012               	iorwf	(___lmul@multiplier+2)^0,w,c
  8959   004F00  1013               	iorwf	(___lmul@multiplier+3)^0,w,c
  8960   004F02  A4D8               	btfss	status,2,c
  8961   004F04  EF86  F027         	goto	u4141
  8962   004F08  EF88  F027         	goto	u4140
  8963   004F0C                     u4141:
  8964   004F0C  EF64  F027         	goto	l4893
  8965   004F10                     u4140:
  8966   004F10  C018  F010         	movff	___lmul@product,?___lmul
  8967   004F14  C019  F011         	movff	___lmul@product+1,?___lmul+1
  8968   004F18  C01A  F012         	movff	___lmul@product+2,?___lmul+2
  8969   004F1C  C01B  F013         	movff	___lmul@product+3,?___lmul+3
  8970   004F20  0012               	return		;funcret
  8971   004F22                     __end_of___lmul:
  8972                           	callstack 0
  8973                           
  8974 ;; *************** function ___lldiv *****************
  8975 ;; Defined at:
  8976 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  dividend        4   27[COMRAM] unsigned long 
  8979 ;;  divisor         4   31[COMRAM] unsigned long 
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;  quotient        4   35[COMRAM] unsigned long 
  8982 ;;  counter         1   39[COMRAM] unsigned char 
  8983 ;; Return value:  Size  Location     Type
  8984 ;;                  4   27[COMRAM] unsigned long 
  8985 ;; Registers used:
  8986 ;;		wreg, status,2, status,0
  8987 ;; Tracked objects:
  8988 ;;		On entry : 0/0
  8989 ;;		On exit  : 0/0
  8990 ;;		Unchanged: 0/0
  8991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8992 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8993 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8995 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8996 ;;Total ram usage:       13 bytes
  8997 ;; Hardware stack levels used: 1
  8998 ;; Hardware stack levels required when called: 5
  8999 ;; This function calls:
  9000 ;;		Nothing
  9001 ;; This function is called by:
  9002 ;;		_rgb_2_hsv
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006                           	psect	text24
  9007   004C9C                     __ptext24:
  9008                           	callstack 0
  9009   004C9C                     ___lldiv:
  9010                           	callstack 24
  9011   004C9C  0E00               	movlw	0
  9012   004C9E  6E24               	movwf	___lldiv@quotient^0,c
  9013   004CA0  0E00               	movlw	0
  9014   004CA2  6E25               	movwf	(___lldiv@quotient+1)^0,c
  9015   004CA4  0E00               	movlw	0
  9016   004CA6  6E26               	movwf	(___lldiv@quotient+2)^0,c
  9017   004CA8  0E00               	movlw	0
  9018   004CAA  6E27               	movwf	(___lldiv@quotient+3)^0,c
  9019   004CAC  5020               	movf	___lldiv@divisor^0,w,c
  9020   004CAE  1021               	iorwf	(___lldiv@divisor+1)^0,w,c
  9021   004CB0  1022               	iorwf	(___lldiv@divisor+2)^0,w,c
  9022   004CB2  1023               	iorwf	(___lldiv@divisor+3)^0,w,c
  9023   004CB4  B4D8               	btfsc	status,2,c
  9024   004CB6  EF5F  F026         	goto	u4151
  9025   004CBA  EF61  F026         	goto	u4150
  9026   004CBE                     u4151:
  9027   004CBE  EF97  F026         	goto	l801
  9028   004CC2                     u4150:
  9029   004CC2  0E01               	movlw	1
  9030   004CC4  6E28               	movwf	___lldiv@counter^0,c
  9031   004CC6  EF6B  F026         	goto	l4909
  9032   004CCA                     l4907:
  9033   004CCA  90D8               	bcf	status,0,c
  9034   004CCC  3620               	rlcf	___lldiv@divisor^0,f,c
  9035   004CCE  3621               	rlcf	(___lldiv@divisor+1)^0,f,c
  9036   004CD0  3622               	rlcf	(___lldiv@divisor+2)^0,f,c
  9037   004CD2  3623               	rlcf	(___lldiv@divisor+3)^0,f,c
  9038   004CD4  2A28               	incf	___lldiv@counter^0,f,c
  9039   004CD6                     l4909:
  9040   004CD6  AE23               	btfss	(___lldiv@divisor+3)^0,7,c
  9041   004CD8  EF70  F026         	goto	u4161
  9042   004CDC  EF72  F026         	goto	u4160
  9043   004CE0                     u4161:
  9044   004CE0  EF65  F026         	goto	l4907
  9045   004CE4                     u4160:
  9046   004CE4                     l4911:
  9047   004CE4  90D8               	bcf	status,0,c
  9048   004CE6  3624               	rlcf	___lldiv@quotient^0,f,c
  9049   004CE8  3625               	rlcf	(___lldiv@quotient+1)^0,f,c
  9050   004CEA  3626               	rlcf	(___lldiv@quotient+2)^0,f,c
  9051   004CEC  3627               	rlcf	(___lldiv@quotient+3)^0,f,c
  9052   004CEE  5020               	movf	___lldiv@divisor^0,w,c
  9053   004CF0  5C1C               	subwf	___lldiv@dividend^0,w,c
  9054   004CF2  5021               	movf	(___lldiv@divisor+1)^0,w,c
  9055   004CF4  581D               	subwfb	(___lldiv@dividend+1)^0,w,c
  9056   004CF6  5022               	movf	(___lldiv@divisor+2)^0,w,c
  9057   004CF8  581E               	subwfb	(___lldiv@dividend+2)^0,w,c
  9058   004CFA  5023               	movf	(___lldiv@divisor+3)^0,w,c
  9059   004CFC  581F               	subwfb	(___lldiv@dividend+3)^0,w,c
  9060   004CFE  A0D8               	btfss	status,0,c
  9061   004D00  EF84  F026         	goto	u4171
  9062   004D04  EF86  F026         	goto	u4170
  9063   004D08                     u4171:
  9064   004D08  EF8F  F026         	goto	l4919
  9065   004D0C                     u4170:
  9066   004D0C  5020               	movf	___lldiv@divisor^0,w,c
  9067   004D0E  5E1C               	subwf	___lldiv@dividend^0,f,c
  9068   004D10  5021               	movf	(___lldiv@divisor+1)^0,w,c
  9069   004D12  5A1D               	subwfb	(___lldiv@dividend+1)^0,f,c
  9070   004D14  5022               	movf	(___lldiv@divisor+2)^0,w,c
  9071   004D16  5A1E               	subwfb	(___lldiv@dividend+2)^0,f,c
  9072   004D18  5023               	movf	(___lldiv@divisor+3)^0,w,c
  9073   004D1A  5A1F               	subwfb	(___lldiv@dividend+3)^0,f,c
  9074   004D1C  8024               	bsf	___lldiv@quotient^0,0,c
  9075   004D1E                     l4919:
  9076   004D1E  90D8               	bcf	status,0,c
  9077   004D20  3223               	rrcf	(___lldiv@divisor+3)^0,f,c
  9078   004D22  3222               	rrcf	(___lldiv@divisor+2)^0,f,c
  9079   004D24  3221               	rrcf	(___lldiv@divisor+1)^0,f,c
  9080   004D26  3220               	rrcf	___lldiv@divisor^0,f,c
  9081   004D28  2E28               	decfsz	___lldiv@counter^0,f,c
  9082   004D2A  EF72  F026         	goto	l4911
  9083   004D2E                     l801:
  9084   004D2E  C024  F01C         	movff	___lldiv@quotient,?___lldiv
  9085   004D32  C025  F01D         	movff	___lldiv@quotient+1,?___lldiv+1
  9086   004D36  C026  F01E         	movff	___lldiv@quotient+2,?___lldiv+2
  9087   004D3A  C027  F01F         	movff	___lldiv@quotient+3,?___lldiv+3
  9088   004D3E  0012               	return		;funcret
  9089   004D40                     __end_of___lldiv:
  9090                           	callstack 0
  9091                           
  9092 ;; *************** function ___aldiv *****************
  9093 ;; Defined at:
  9094 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;  dividend        4   27[COMRAM] long 
  9097 ;;  divisor         4   31[COMRAM] long 
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;  quotient        4   37[COMRAM] long 
  9100 ;;  sign            1   36[COMRAM] unsigned char 
  9101 ;;  counter         1   35[COMRAM] unsigned char 
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  4   27[COMRAM] long 
  9104 ;; Registers used:
  9105 ;;		wreg, status,2, status,0
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9111 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9112 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9114 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9115 ;;Total ram usage:       14 bytes
  9116 ;; Hardware stack levels used: 1
  9117 ;; Hardware stack levels required when called: 5
  9118 ;; This function calls:
  9119 ;;		Nothing
  9120 ;; This function is called by:
  9121 ;;		_rgb_2_hsv
  9122 ;;		_color_normalise
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           	psect	text25
  9127   004792                     __ptext25:
  9128                           	callstack 0
  9129   004792                     ___aldiv:
  9130                           	callstack 24
  9131   004792  0E00               	movlw	0
  9132   004794  6E25               	movwf	___aldiv@sign^0,c
  9133   004796  BE23               	btfsc	(___aldiv@divisor+3)^0,7,c
  9134   004798  EFD2  F023         	goto	u4180
  9135   00479C  EFD0  F023         	goto	u4181
  9136   0047A0                     u4181:
  9137   0047A0  EFDC  F023         	goto	l4931
  9138   0047A4                     u4180:
  9139   0047A4  1E23               	comf	(___aldiv@divisor+3)^0,f,c
  9140   0047A6  1E22               	comf	(___aldiv@divisor+2)^0,f,c
  9141   0047A8  1E21               	comf	(___aldiv@divisor+1)^0,f,c
  9142   0047AA  6C20               	negf	___aldiv@divisor^0,c
  9143   0047AC  0E00               	movlw	0
  9144   0047AE  2221               	addwfc	(___aldiv@divisor+1)^0,f,c
  9145   0047B0  2222               	addwfc	(___aldiv@divisor+2)^0,f,c
  9146   0047B2  2223               	addwfc	(___aldiv@divisor+3)^0,f,c
  9147   0047B4  0E01               	movlw	1
  9148   0047B6  6E25               	movwf	___aldiv@sign^0,c
  9149   0047B8                     l4931:
  9150   0047B8  BE1F               	btfsc	(___aldiv@dividend+3)^0,7,c
  9151   0047BA  EFE3  F023         	goto	u4190
  9152   0047BE  EFE1  F023         	goto	u4191
  9153   0047C2                     u4191:
  9154   0047C2  EFED  F023         	goto	l4937
  9155   0047C6                     u4190:
  9156   0047C6  1E1F               	comf	(___aldiv@dividend+3)^0,f,c
  9157   0047C8  1E1E               	comf	(___aldiv@dividend+2)^0,f,c
  9158   0047CA  1E1D               	comf	(___aldiv@dividend+1)^0,f,c
  9159   0047CC  6C1C               	negf	___aldiv@dividend^0,c
  9160   0047CE  0E00               	movlw	0
  9161   0047D0  221D               	addwfc	(___aldiv@dividend+1)^0,f,c
  9162   0047D2  221E               	addwfc	(___aldiv@dividend+2)^0,f,c
  9163   0047D4  221F               	addwfc	(___aldiv@dividend+3)^0,f,c
  9164   0047D6  0E01               	movlw	1
  9165   0047D8  1A25               	xorwf	___aldiv@sign^0,f,c
  9166   0047DA                     l4937:
  9167   0047DA  0E00               	movlw	0
  9168   0047DC  6E26               	movwf	___aldiv@quotient^0,c
  9169   0047DE  0E00               	movlw	0
  9170   0047E0  6E27               	movwf	(___aldiv@quotient+1)^0,c
  9171   0047E2  0E00               	movlw	0
  9172   0047E4  6E28               	movwf	(___aldiv@quotient+2)^0,c
  9173   0047E6  0E00               	movlw	0
  9174   0047E8  6E29               	movwf	(___aldiv@quotient+3)^0,c
  9175   0047EA  5020               	movf	___aldiv@divisor^0,w,c
  9176   0047EC  1021               	iorwf	(___aldiv@divisor+1)^0,w,c
  9177   0047EE  1022               	iorwf	(___aldiv@divisor+2)^0,w,c
  9178   0047F0  1023               	iorwf	(___aldiv@divisor+3)^0,w,c
  9179   0047F2  B4D8               	btfsc	status,2,c
  9180   0047F4  EFFE  F023         	goto	u4201
  9181   0047F8  EF00  F024         	goto	u4200
  9182   0047FC                     u4201:
  9183   0047FC  EF36  F024         	goto	l4959
  9184   004800                     u4200:
  9185   004800  0E01               	movlw	1
  9186   004802  6E24               	movwf	___aldiv@counter^0,c
  9187   004804  EF0A  F024         	goto	l4945
  9188   004808                     l4943:
  9189   004808  90D8               	bcf	status,0,c
  9190   00480A  3620               	rlcf	___aldiv@divisor^0,f,c
  9191   00480C  3621               	rlcf	(___aldiv@divisor+1)^0,f,c
  9192   00480E  3622               	rlcf	(___aldiv@divisor+2)^0,f,c
  9193   004810  3623               	rlcf	(___aldiv@divisor+3)^0,f,c
  9194   004812  2A24               	incf	___aldiv@counter^0,f,c
  9195   004814                     l4945:
  9196   004814  AE23               	btfss	(___aldiv@divisor+3)^0,7,c
  9197   004816  EF0F  F024         	goto	u4211
  9198   00481A  EF11  F024         	goto	u4210
  9199   00481E                     u4211:
  9200   00481E  EF04  F024         	goto	l4943
  9201   004822                     u4210:
  9202   004822                     l4947:
  9203   004822  90D8               	bcf	status,0,c
  9204   004824  3626               	rlcf	___aldiv@quotient^0,f,c
  9205   004826  3627               	rlcf	(___aldiv@quotient+1)^0,f,c
  9206   004828  3628               	rlcf	(___aldiv@quotient+2)^0,f,c
  9207   00482A  3629               	rlcf	(___aldiv@quotient+3)^0,f,c
  9208   00482C  5020               	movf	___aldiv@divisor^0,w,c
  9209   00482E  5C1C               	subwf	___aldiv@dividend^0,w,c
  9210   004830  5021               	movf	(___aldiv@divisor+1)^0,w,c
  9211   004832  581D               	subwfb	(___aldiv@dividend+1)^0,w,c
  9212   004834  5022               	movf	(___aldiv@divisor+2)^0,w,c
  9213   004836  581E               	subwfb	(___aldiv@dividend+2)^0,w,c
  9214   004838  5023               	movf	(___aldiv@divisor+3)^0,w,c
  9215   00483A  581F               	subwfb	(___aldiv@dividend+3)^0,w,c
  9216   00483C  A0D8               	btfss	status,0,c
  9217   00483E  EF23  F024         	goto	u4221
  9218   004842  EF25  F024         	goto	u4220
  9219   004846                     u4221:
  9220   004846  EF2E  F024         	goto	l4955
  9221   00484A                     u4220:
  9222   00484A  5020               	movf	___aldiv@divisor^0,w,c
  9223   00484C  5E1C               	subwf	___aldiv@dividend^0,f,c
  9224   00484E  5021               	movf	(___aldiv@divisor+1)^0,w,c
  9225   004850  5A1D               	subwfb	(___aldiv@dividend+1)^0,f,c
  9226   004852  5022               	movf	(___aldiv@divisor+2)^0,w,c
  9227   004854  5A1E               	subwfb	(___aldiv@dividend+2)^0,f,c
  9228   004856  5023               	movf	(___aldiv@divisor+3)^0,w,c
  9229   004858  5A1F               	subwfb	(___aldiv@dividend+3)^0,f,c
  9230   00485A  8026               	bsf	___aldiv@quotient^0,0,c
  9231   00485C                     l4955:
  9232   00485C  90D8               	bcf	status,0,c
  9233   00485E  3223               	rrcf	(___aldiv@divisor+3)^0,f,c
  9234   004860  3222               	rrcf	(___aldiv@divisor+2)^0,f,c
  9235   004862  3221               	rrcf	(___aldiv@divisor+1)^0,f,c
  9236   004864  3220               	rrcf	___aldiv@divisor^0,f,c
  9237   004866  2E24               	decfsz	___aldiv@counter^0,f,c
  9238   004868  EF11  F024         	goto	l4947
  9239   00486C                     l4959:
  9240   00486C  5025               	movf	___aldiv@sign^0,w,c
  9241   00486E  B4D8               	btfsc	status,2,c
  9242   004870  EF3C  F024         	goto	u4231
  9243   004874  EF3E  F024         	goto	u4230
  9244   004878                     u4231:
  9245   004878  EF46  F024         	goto	l4963
  9246   00487C                     u4230:
  9247   00487C  1E29               	comf	(___aldiv@quotient+3)^0,f,c
  9248   00487E  1E28               	comf	(___aldiv@quotient+2)^0,f,c
  9249   004880  1E27               	comf	(___aldiv@quotient+1)^0,f,c
  9250   004882  6C26               	negf	___aldiv@quotient^0,c
  9251   004884  0E00               	movlw	0
  9252   004886  2227               	addwfc	(___aldiv@quotient+1)^0,f,c
  9253   004888  2228               	addwfc	(___aldiv@quotient+2)^0,f,c
  9254   00488A  2229               	addwfc	(___aldiv@quotient+3)^0,f,c
  9255   00488C                     l4963:
  9256   00488C  C026  F01C         	movff	___aldiv@quotient,?___aldiv
  9257   004890  C027  F01D         	movff	___aldiv@quotient+1,?___aldiv+1
  9258   004894  C028  F01E         	movff	___aldiv@quotient+2,?___aldiv+2
  9259   004898  C029  F01F         	movff	___aldiv@quotient+3,?___aldiv+3
  9260   00489C  0012               	return		;funcret
  9261   00489E                     __end_of___aldiv:
  9262                           	callstack 0
  9263                           
  9264 ;; *************** function _color_read *****************
  9265 ;; Defined at:
  9266 ;;		line 77 in file "color.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;  RGBC            2   19[COMRAM] PTR struct RGBC_val
  9269 ;;		 -> main@RGBC(8), 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;		None
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  1    wreg      void 
  9274 ;; Registers used:
  9275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9283 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9284 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9285 ;;Total ram usage:        9 bytes
  9286 ;; Hardware stack levels used: 1
  9287 ;; Hardware stack levels required when called: 7
  9288 ;; This function calls:
  9289 ;;		_I2C_2_Master_Read
  9290 ;;		_I2C_2_Master_RepStart
  9291 ;;		_I2C_2_Master_Start
  9292 ;;		_I2C_2_Master_Stop
  9293 ;;		_I2C_2_Master_Write
  9294 ;; This function is called by:
  9295 ;;		_main
  9296 ;;		_color_calibration
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text26
  9301   003E98                     __ptext26:
  9302                           	callstack 0
  9303   003E98                     _color_read:
  9304                           	callstack 23
  9305   003E98                     
  9306                           ;color.c: 77: void color_read(RGBC_val *RGBC);color.c: 78: {;color.c: 79:  I2C_2_Master_
      +                          Start();
  9307   003E98  EC8B  F029         	call	_I2C_2_Master_Start	;wreg free
  9308                           
  9309                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  9310   003E9C  0E52               	movlw	82
  9311   003E9E  EC75  F029         	call	_I2C_2_Master_Write
  9312                           
  9313                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x16);
  9314   003EA2  0EB6               	movlw	182
  9315   003EA4  EC75  F029         	call	_I2C_2_Master_Write
  9316                           
  9317                           ;color.c: 82:  I2C_2_Master_RepStart();
  9318   003EA8  EC90  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9319                           
  9320                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  9321   003EAC  0E53               	movlw	83
  9322   003EAE  EC75  F029         	call	_I2C_2_Master_Write
  9323   003EB2                     
  9324                           ;color.c: 84:  RGBC->R=I2C_2_Master_Read(1);
  9325   003EB2  0E01               	movlw	1
  9326   003EB4  ECE3  F027         	call	_I2C_2_Master_Read
  9327   003EB8  6E16               	movwf	??_color_read^0,c
  9328   003EBA  6A17               	clrf	(??_color_read+1)^0,c
  9329   003EBC  C014  FFD9         	movff	color_read@RGBC,fsr2l
  9330   003EC0  C015  FFDA         	movff	color_read@RGBC+1,fsr2h
  9331   003EC4  C016  FFDE         	movff	??_color_read,postinc2
  9332   003EC8  C017  FFDD         	movff	??_color_read+1,postdec2
  9333   003ECC                     
  9334                           ;color.c: 85:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  9335   003ECC  C014  FFD9         	movff	color_read@RGBC,fsr2l
  9336   003ED0  C015  FFDA         	movff	color_read@RGBC+1,fsr2h
  9337   003ED4  CFDE F016          	movff	postinc2,??_color_read
  9338   003ED8  CFDD F017          	movff	postdec2,??_color_read+1
  9339   003EDC  0E00               	movlw	0
  9340   003EDE  ECE3  F027         	call	_I2C_2_Master_Read
  9341   003EE2  6E18               	movwf	(??_color_read+2)^0,c
  9342   003EE4  5018               	movf	(??_color_read+2)^0,w,c
  9343   003EE6  6E1A               	movwf	(??_color_read+4)^0,c
  9344   003EE8  6A19               	clrf	(??_color_read+3)^0,c
  9345   003EEA  5016               	movf	??_color_read^0,w,c
  9346   003EEC  1019               	iorwf	(??_color_read+3)^0,w,c
  9347   003EEE  6E1B               	movwf	(??_color_read+5)^0,c
  9348   003EF0  5017               	movf	(??_color_read+1)^0,w,c
  9349   003EF2  101A               	iorwf	(??_color_read+4)^0,w,c
  9350   003EF4  6E1C               	movwf	(??_color_read+6)^0,c
  9351   003EF6  C014  FFD9         	movff	color_read@RGBC,fsr2l
  9352   003EFA  C015  FFDA         	movff	color_read@RGBC+1,fsr2h
  9353   003EFE  C01B  FFDE         	movff	??_color_read+5,postinc2
  9354   003F02  C01C  FFDD         	movff	??_color_read+6,postdec2
  9355                           
  9356                           ;color.c: 86:  I2C_2_Master_Stop();
  9357   003F06  EC86  F029         	call	_I2C_2_Master_Stop	;wreg free
  9358                           
  9359                           ;color.c: 88:     I2C_2_Master_Start();
  9360   003F0A  EC8B  F029         	call	_I2C_2_Master_Start	;wreg free
  9361                           
  9362                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x00);
  9363   003F0E  0E52               	movlw	82
  9364   003F10  EC75  F029         	call	_I2C_2_Master_Write
  9365                           
  9366                           ;color.c: 90:  I2C_2_Master_Write(0xA0 | 0x18);
  9367   003F14  0EB8               	movlw	184
  9368   003F16  EC75  F029         	call	_I2C_2_Master_Write
  9369                           
  9370                           ;color.c: 91:  I2C_2_Master_RepStart();
  9371   003F1A  EC90  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9372                           
  9373                           ;color.c: 92:  I2C_2_Master_Write(0x52 | 0x01);
  9374   003F1E  0E53               	movlw	83
  9375   003F20  EC75  F029         	call	_I2C_2_Master_Write
  9376   003F24                     
  9377                           ;color.c: 93:  RGBC->G=I2C_2_Master_Read(1);
  9378   003F24  0E01               	movlw	1
  9379   003F26  ECE3  F027         	call	_I2C_2_Master_Read
  9380   003F2A  6E16               	movwf	??_color_read^0,c
  9381   003F2C  6A17               	clrf	(??_color_read+1)^0,c
  9382   003F2E  EE20 F002          	lfsr	2,2
  9383   003F32  5014               	movf	color_read@RGBC^0,w,c
  9384   003F34  26D9               	addwf	fsr2l,f,c
  9385   003F36  5015               	movf	(color_read@RGBC+1)^0,w,c
  9386   003F38  22DA               	addwfc	fsr2h,f,c
  9387   003F3A  C016  FFDE         	movff	??_color_read,postinc2
  9388   003F3E  C017  FFDD         	movff	??_color_read+1,postdec2
  9389   003F42                     
  9390                           ;color.c: 94:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  9391   003F42  EE20 F002          	lfsr	2,2
  9392   003F46  5014               	movf	color_read@RGBC^0,w,c
  9393   003F48  26D9               	addwf	fsr2l,f,c
  9394   003F4A  5015               	movf	(color_read@RGBC+1)^0,w,c
  9395   003F4C  22DA               	addwfc	fsr2h,f,c
  9396   003F4E  CFDE F016          	movff	postinc2,??_color_read
  9397   003F52  CFDD F017          	movff	postdec2,??_color_read+1
  9398   003F56  0E00               	movlw	0
  9399   003F58  ECE3  F027         	call	_I2C_2_Master_Read
  9400   003F5C  6E18               	movwf	(??_color_read+2)^0,c
  9401   003F5E  5018               	movf	(??_color_read+2)^0,w,c
  9402   003F60  6E1A               	movwf	(??_color_read+4)^0,c
  9403   003F62  6A19               	clrf	(??_color_read+3)^0,c
  9404   003F64  5016               	movf	??_color_read^0,w,c
  9405   003F66  1019               	iorwf	(??_color_read+3)^0,w,c
  9406   003F68  6E1B               	movwf	(??_color_read+5)^0,c
  9407   003F6A  5017               	movf	(??_color_read+1)^0,w,c
  9408   003F6C  101A               	iorwf	(??_color_read+4)^0,w,c
  9409   003F6E  6E1C               	movwf	(??_color_read+6)^0,c
  9410   003F70  EE20 F002          	lfsr	2,2
  9411   003F74  5014               	movf	color_read@RGBC^0,w,c
  9412   003F76  26D9               	addwf	fsr2l,f,c
  9413   003F78  5015               	movf	(color_read@RGBC+1)^0,w,c
  9414   003F7A  22DA               	addwfc	fsr2h,f,c
  9415   003F7C  C01B  FFDE         	movff	??_color_read+5,postinc2
  9416   003F80  C01C  FFDD         	movff	??_color_read+6,postdec2
  9417                           
  9418                           ;color.c: 95:  I2C_2_Master_Stop();
  9419   003F84  EC86  F029         	call	_I2C_2_Master_Stop	;wreg free
  9420                           
  9421                           ;color.c: 97:     I2C_2_Master_Start();
  9422   003F88  EC8B  F029         	call	_I2C_2_Master_Start	;wreg free
  9423                           
  9424                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  9425   003F8C  0E52               	movlw	82
  9426   003F8E  EC75  F029         	call	_I2C_2_Master_Write
  9427                           
  9428                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x1A);
  9429   003F92  0EBA               	movlw	186
  9430   003F94  EC75  F029         	call	_I2C_2_Master_Write
  9431                           
  9432                           ;color.c: 100:  I2C_2_Master_RepStart();
  9433   003F98  EC90  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9434                           
  9435                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  9436   003F9C  0E53               	movlw	83
  9437   003F9E  EC75  F029         	call	_I2C_2_Master_Write
  9438   003FA2                     
  9439                           ;color.c: 102:  RGBC->B=I2C_2_Master_Read(1);
  9440   003FA2  0E01               	movlw	1
  9441   003FA4  ECE3  F027         	call	_I2C_2_Master_Read
  9442   003FA8  6E16               	movwf	??_color_read^0,c
  9443   003FAA  6A17               	clrf	(??_color_read+1)^0,c
  9444   003FAC  EE20 F004          	lfsr	2,4
  9445   003FB0  5014               	movf	color_read@RGBC^0,w,c
  9446   003FB2  26D9               	addwf	fsr2l,f,c
  9447   003FB4  5015               	movf	(color_read@RGBC+1)^0,w,c
  9448   003FB6  22DA               	addwfc	fsr2h,f,c
  9449   003FB8  C016  FFDE         	movff	??_color_read,postinc2
  9450   003FBC  C017  FFDD         	movff	??_color_read+1,postdec2
  9451   003FC0                     
  9452                           ;color.c: 103:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  9453   003FC0  EE20 F004          	lfsr	2,4
  9454   003FC4  5014               	movf	color_read@RGBC^0,w,c
  9455   003FC6  26D9               	addwf	fsr2l,f,c
  9456   003FC8  5015               	movf	(color_read@RGBC+1)^0,w,c
  9457   003FCA  22DA               	addwfc	fsr2h,f,c
  9458   003FCC  CFDE F016          	movff	postinc2,??_color_read
  9459   003FD0  CFDD F017          	movff	postdec2,??_color_read+1
  9460   003FD4  0E00               	movlw	0
  9461   003FD6  ECE3  F027         	call	_I2C_2_Master_Read
  9462   003FDA  6E18               	movwf	(??_color_read+2)^0,c
  9463   003FDC  5018               	movf	(??_color_read+2)^0,w,c
  9464   003FDE  6E1A               	movwf	(??_color_read+4)^0,c
  9465   003FE0  6A19               	clrf	(??_color_read+3)^0,c
  9466   003FE2  5016               	movf	??_color_read^0,w,c
  9467   003FE4  1019               	iorwf	(??_color_read+3)^0,w,c
  9468   003FE6  6E1B               	movwf	(??_color_read+5)^0,c
  9469   003FE8  5017               	movf	(??_color_read+1)^0,w,c
  9470   003FEA  101A               	iorwf	(??_color_read+4)^0,w,c
  9471   003FEC  6E1C               	movwf	(??_color_read+6)^0,c
  9472   003FEE  EE20 F004          	lfsr	2,4
  9473   003FF2  5014               	movf	color_read@RGBC^0,w,c
  9474   003FF4  26D9               	addwf	fsr2l,f,c
  9475   003FF6  5015               	movf	(color_read@RGBC+1)^0,w,c
  9476   003FF8  22DA               	addwfc	fsr2h,f,c
  9477   003FFA  C01B  FFDE         	movff	??_color_read+5,postinc2
  9478   003FFE  C01C  FFDD         	movff	??_color_read+6,postdec2
  9479                           
  9480                           ;color.c: 104:  I2C_2_Master_Stop();
  9481   004002  EC86  F029         	call	_I2C_2_Master_Stop	;wreg free
  9482                           
  9483                           ;color.c: 106:     I2C_2_Master_Start();
  9484   004006  EC8B  F029         	call	_I2C_2_Master_Start	;wreg free
  9485                           
  9486                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x00);
  9487   00400A  0E52               	movlw	82
  9488   00400C  EC75  F029         	call	_I2C_2_Master_Write
  9489                           
  9490                           ;color.c: 108:  I2C_2_Master_Write(0xA0 | 0x14);
  9491   004010  0EB4               	movlw	180
  9492   004012  EC75  F029         	call	_I2C_2_Master_Write
  9493                           
  9494                           ;color.c: 109:  I2C_2_Master_RepStart();
  9495   004016  EC90  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9496                           
  9497                           ;color.c: 110:  I2C_2_Master_Write(0x52 | 0x01);
  9498   00401A  0E53               	movlw	83
  9499   00401C  EC75  F029         	call	_I2C_2_Master_Write
  9500   004020                     
  9501                           ;color.c: 111:  RGBC->C=I2C_2_Master_Read(1);
  9502   004020  0E01               	movlw	1
  9503   004022  ECE3  F027         	call	_I2C_2_Master_Read
  9504   004026  6E16               	movwf	??_color_read^0,c
  9505   004028  6A17               	clrf	(??_color_read+1)^0,c
  9506   00402A  EE20 F006          	lfsr	2,6
  9507   00402E  5014               	movf	color_read@RGBC^0,w,c
  9508   004030  26D9               	addwf	fsr2l,f,c
  9509   004032  5015               	movf	(color_read@RGBC+1)^0,w,c
  9510   004034  22DA               	addwfc	fsr2h,f,c
  9511   004036  C016  FFDE         	movff	??_color_read,postinc2
  9512   00403A  C017  FFDD         	movff	??_color_read+1,postdec2
  9513   00403E                     
  9514                           ;color.c: 112:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  9515   00403E  EE20 F006          	lfsr	2,6
  9516   004042  5014               	movf	color_read@RGBC^0,w,c
  9517   004044  26D9               	addwf	fsr2l,f,c
  9518   004046  5015               	movf	(color_read@RGBC+1)^0,w,c
  9519   004048  22DA               	addwfc	fsr2h,f,c
  9520   00404A  CFDE F016          	movff	postinc2,??_color_read
  9521   00404E  CFDD F017          	movff	postdec2,??_color_read+1
  9522   004052  0E00               	movlw	0
  9523   004054  ECE3  F027         	call	_I2C_2_Master_Read
  9524   004058  6E18               	movwf	(??_color_read+2)^0,c
  9525   00405A  5018               	movf	(??_color_read+2)^0,w,c
  9526   00405C  6E1A               	movwf	(??_color_read+4)^0,c
  9527   00405E  6A19               	clrf	(??_color_read+3)^0,c
  9528   004060  5016               	movf	??_color_read^0,w,c
  9529   004062  1019               	iorwf	(??_color_read+3)^0,w,c
  9530   004064  6E1B               	movwf	(??_color_read+5)^0,c
  9531   004066  5017               	movf	(??_color_read+1)^0,w,c
  9532   004068  101A               	iorwf	(??_color_read+4)^0,w,c
  9533   00406A  6E1C               	movwf	(??_color_read+6)^0,c
  9534   00406C  EE20 F006          	lfsr	2,6
  9535   004070  5014               	movf	color_read@RGBC^0,w,c
  9536   004072  26D9               	addwf	fsr2l,f,c
  9537   004074  5015               	movf	(color_read@RGBC+1)^0,w,c
  9538   004076  22DA               	addwfc	fsr2h,f,c
  9539   004078  C01B  FFDE         	movff	??_color_read+5,postinc2
  9540   00407C  C01C  FFDD         	movff	??_color_read+6,postdec2
  9541                           
  9542                           ;color.c: 113:  I2C_2_Master_Stop();
  9543   004080  EC86  F029         	call	_I2C_2_Master_Stop	;wreg free
  9544   004084  0012               	return		;funcret
  9545   004086                     __end_of_color_read:
  9546                           	callstack 0
  9547                           
  9548 ;; *************** function _I2C_2_Master_Write *****************
  9549 ;; Defined at:
  9550 ;;		line 45 in file "i2c.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;  data_byte       1    wreg     unsigned char 
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;  data_byte       1   16[COMRAM] unsigned char 
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  1    wreg      void 
  9557 ;; Registers used:
  9558 ;;		wreg, status,2, status,0, cstack
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9568 ;;Total ram usage:        1 bytes
  9569 ;; Hardware stack levels used: 1
  9570 ;; Hardware stack levels required when called: 6
  9571 ;; This function calls:
  9572 ;;		_I2C_2_Master_Idle
  9573 ;; This function is called by:
  9574 ;;		_color_clear_init_interrupts
  9575 ;;		_color_writetoaddr
  9576 ;;		_color_read
  9577 ;; This function uses a non-reentrant model
  9578 ;;
  9579                           
  9580                           	psect	text27
  9581   0052EA                     __ptext27:
  9582                           	callstack 0
  9583   0052EA                     _I2C_2_Master_Write:
  9584                           	callstack 23
  9585                           
  9586                           ;incstack = 0
  9587                           ;I2C_2_Master_Write@data_byte stored from wreg
  9588   0052EA  6E11               	movwf	I2C_2_Master_Write@data_byte^0,c
  9589   0052EC                     
  9590                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9591   0052EC  ECA6  F028         	call	_I2C_2_Master_Idle	;wreg free
  9592   0052F0                     
  9593                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9594   0052F0  C011  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9595   0052F4  0012               	return		;funcret
  9596   0052F6                     __end_of_I2C_2_Master_Write:
  9597                           	callstack 0
  9598                           
  9599 ;; *************** function _I2C_2_Master_Stop *****************
  9600 ;; Defined at:
  9601 ;;		line 39 in file "i2c.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;		None
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;		None
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1    wreg      void 
  9608 ;; Registers used:
  9609 ;;		wreg, status,2, status,0, cstack
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9619 ;;Total ram usage:        0 bytes
  9620 ;; Hardware stack levels used: 1
  9621 ;; Hardware stack levels required when called: 6
  9622 ;; This function calls:
  9623 ;;		_I2C_2_Master_Idle
  9624 ;; This function is called by:
  9625 ;;		_color_clear_init_interrupts
  9626 ;;		_color_writetoaddr
  9627 ;;		_color_read
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           	psect	text28
  9632   00530C                     __ptext28:
  9633                           	callstack 0
  9634   00530C                     _I2C_2_Master_Stop:
  9635                           	callstack 23
  9636   00530C                     
  9637                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9638   00530C  ECA6  F028         	call	_I2C_2_Master_Idle	;wreg free
  9639   005310                     
  9640                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9641   005310  010E               	movlb	14	; () banked
  9642   005312  85DA               	bsf	218,2,b	;volatile
  9643   005314                     
  9644                           ; BSR set to: 14
  9645   005314  0012               	return		;funcret
  9646   005316                     __end_of_I2C_2_Master_Stop:
  9647                           	callstack 0
  9648                           
  9649 ;; *************** function _I2C_2_Master_Start *****************
  9650 ;; Defined at:
  9651 ;;		line 27 in file "i2c.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;		None
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;		None
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  1    wreg      void 
  9658 ;; Registers used:
  9659 ;;		wreg, status,2, status,0, cstack
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9669 ;;Total ram usage:        0 bytes
  9670 ;; Hardware stack levels used: 1
  9671 ;; Hardware stack levels required when called: 6
  9672 ;; This function calls:
  9673 ;;		_I2C_2_Master_Idle
  9674 ;; This function is called by:
  9675 ;;		_color_clear_init_interrupts
  9676 ;;		_color_writetoaddr
  9677 ;;		_color_read
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           	psect	text29
  9682   005316                     __ptext29:
  9683                           	callstack 0
  9684   005316                     _I2C_2_Master_Start:
  9685                           	callstack 23
  9686   005316                     
  9687                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9688   005316  ECA6  F028         	call	_I2C_2_Master_Idle	;wreg free
  9689   00531A                     
  9690                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9691   00531A  010E               	movlb	14	; () banked
  9692   00531C  81DA               	bsf	218,0,b	;volatile
  9693   00531E                     
  9694                           ; BSR set to: 14
  9695   00531E  0012               	return		;funcret
  9696   005320                     __end_of_I2C_2_Master_Start:
  9697                           	callstack 0
  9698                           
  9699 ;; *************** function _I2C_2_Master_RepStart *****************
  9700 ;; Defined at:
  9701 ;;		line 33 in file "i2c.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;		None
  9704 ;; Auto vars:     Size  Location     Type
  9705 ;;		None
  9706 ;; Return value:  Size  Location     Type
  9707 ;;                  1    wreg      void 
  9708 ;; Registers used:
  9709 ;;		wreg, status,2, status,0, cstack
  9710 ;; Tracked objects:
  9711 ;;		On entry : 0/0
  9712 ;;		On exit  : 0/0
  9713 ;;		Unchanged: 0/0
  9714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9719 ;;Total ram usage:        0 bytes
  9720 ;; Hardware stack levels used: 1
  9721 ;; Hardware stack levels required when called: 6
  9722 ;; This function calls:
  9723 ;;		_I2C_2_Master_Idle
  9724 ;; This function is called by:
  9725 ;;		_color_read
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729                           	psect	text30
  9730   005320                     __ptext30:
  9731                           	callstack 0
  9732   005320                     _I2C_2_Master_RepStart:
  9733                           	callstack 23
  9734   005320                     
  9735                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9736   005320  ECA6  F028         	call	_I2C_2_Master_Idle	;wreg free
  9737   005324                     
  9738                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9739   005324  010E               	movlb	14	; () banked
  9740   005326  83DA               	bsf	218,1,b	;volatile
  9741   005328                     
  9742                           ; BSR set to: 14
  9743   005328  0012               	return		;funcret
  9744   00532A                     __end_of_I2C_2_Master_RepStart:
  9745                           	callstack 0
  9746                           
  9747 ;; *************** function _I2C_2_Master_Read *****************
  9748 ;; Defined at:
  9749 ;;		line 51 in file "i2c.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  ack             1    wreg     unsigned char 
  9752 ;; Auto vars:     Size  Location     Type
  9753 ;;  ack             1   17[COMRAM] unsigned char 
  9754 ;;  tmp             1   18[COMRAM] unsigned char 
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  1    wreg      unsigned char 
  9757 ;; Registers used:
  9758 ;;		wreg, status,2, status,0, cstack
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9767 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9768 ;;Total ram usage:        3 bytes
  9769 ;; Hardware stack levels used: 1
  9770 ;; Hardware stack levels required when called: 6
  9771 ;; This function calls:
  9772 ;;		_I2C_2_Master_Idle
  9773 ;; This function is called by:
  9774 ;;		_color_read
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           	psect	text31
  9779   004FC6                     __ptext31:
  9780                           	callstack 0
  9781   004FC6                     _I2C_2_Master_Read:
  9782                           	callstack 23
  9783                           
  9784                           ; BSR set to: 14
  9785                           ;incstack = 0
  9786                           ;I2C_2_Master_Read@ack stored from wreg
  9787   004FC6  6E12               	movwf	I2C_2_Master_Read@ack^0,c
  9788   004FC8                     
  9789                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9790   004FC8  ECA6  F028         	call	_I2C_2_Master_Idle	;wreg free
  9791   004FCC                     
  9792                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9793   004FCC  010E               	movlb	14	; () banked
  9794   004FCE  87DA               	bsf	218,3,b	;volatile
  9795                           
  9796                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9797   004FD0  ECA6  F028         	call	_I2C_2_Master_Idle	;wreg free
  9798   004FD4                     
  9799                           ;i2c.c: 57:   tmp = SSP2BUF;
  9800   004FD4  CED5 F013          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9801                           
  9802                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9803   004FD8  ECA6  F028         	call	_I2C_2_Master_Idle	;wreg free
  9804   004FDC                     
  9805                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9806   004FDC  5012               	movf	I2C_2_Master_Read@ack^0,w,c
  9807   004FDE  B4D8               	btfsc	status,2,c
  9808   004FE0  EFF4  F027         	goto	u3941
  9809   004FE4  EFF8  F027         	goto	u3940
  9810   004FE8                     u3941:
  9811   004FE8  6A11               	clrf	??_I2C_2_Master_Read^0,c
  9812   004FEA  2A11               	incf	??_I2C_2_Master_Read^0,f,c
  9813   004FEC  EFF9  F027         	goto	u3958
  9814   004FF0                     u3940:
  9815   004FF0  6A11               	clrf	??_I2C_2_Master_Read^0,c
  9816   004FF2                     u3958:
  9817   004FF2  3A11               	swapf	??_I2C_2_Master_Read^0,f,c
  9818   004FF4  4611               	rlncf	??_I2C_2_Master_Read^0,f,c
  9819   004FF6  010E               	movlb	14	; () banked
  9820   004FF8  51DA               	movf	218,w,b	;volatile
  9821   004FFA  1811               	xorwf	??_I2C_2_Master_Read^0,w,c
  9822   004FFC  0BDF               	andlw	-33
  9823   004FFE  1811               	xorwf	??_I2C_2_Master_Read^0,w,c
  9824   005000  6FDA               	movwf	218,b	;volatile
  9825   005002                     
  9826                           ; BSR set to: 14
  9827                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9828   005002  89DA               	bsf	218,4,b	;volatile
  9829   005004                     
  9830                           ; BSR set to: 14
  9831                           ;i2c.c: 61:   return tmp;
  9832   005004  5013               	movf	I2C_2_Master_Read@tmp^0,w,c
  9833   005006                     
  9834                           ; BSR set to: 14
  9835   005006  0012               	return		;funcret
  9836   005008                     __end_of_I2C_2_Master_Read:
  9837                           	callstack 0
  9838                           
  9839 ;; *************** function _I2C_2_Master_Idle *****************
  9840 ;; Defined at:
  9841 ;;		line 22 in file "i2c.c"
  9842 ;; Parameters:    Size  Location     Type
  9843 ;;		None
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;		None
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  1    wreg      void 
  9848 ;; Registers used:
  9849 ;;		wreg, status,2, status,0
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9859 ;;Total ram usage:        1 bytes
  9860 ;; Hardware stack levels used: 1
  9861 ;; Hardware stack levels required when called: 5
  9862 ;; This function calls:
  9863 ;;		Nothing
  9864 ;; This function is called by:
  9865 ;;		_I2C_2_Master_Start
  9866 ;;		_I2C_2_Master_RepStart
  9867 ;;		_I2C_2_Master_Stop
  9868 ;;		_I2C_2_Master_Write
  9869 ;;		_I2C_2_Master_Read
  9870 ;; This function uses a non-reentrant model
  9871 ;;
  9872                           
  9873                           	psect	text32
  9874   00514C                     __ptext32:
  9875                           	callstack 0
  9876   00514C                     _I2C_2_Master_Idle:
  9877                           	callstack 23
  9878   00514C                     l259:
  9879   00514C  010E               	movlb	14	; () banked
  9880   00514E  B5D8               	btfsc	216,2,b	;volatile
  9881   005150  EFAC  F028         	goto	u3831
  9882   005154  EFAE  F028         	goto	u3830
  9883   005158                     u3831:
  9884   005158  EFA6  F028         	goto	l259
  9885   00515C                     u3830:
  9886   00515C                     
  9887                           ; BSR set to: 14
  9888   00515C  CEDA F010          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9889   005160  0E1F               	movlw	31
  9890   005162  1610               	andwf	??_I2C_2_Master_Idle^0,f,c
  9891   005164  A4D8               	btfss	status,2,c
  9892   005166  EFB7  F028         	goto	u3841
  9893   00516A  EFB9  F028         	goto	u3840
  9894   00516E                     u3841:
  9895   00516E  EFA6  F028         	goto	l259
  9896   005172                     u3840:
  9897   005172                     
  9898                           ; BSR set to: 14
  9899   005172  0012               	return		;funcret
  9900   005174                     __end_of_I2C_2_Master_Idle:
  9901                           	callstack 0
  9902                           
  9903 ;; *************** function _calibration *****************
  9904 ;; Defined at:
  9905 ;;		line 598 in file "dc_motor.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;  mL              2   48[COMRAM] PTR struct DC_motor
  9908 ;;		 -> main@motorL(10), 
  9909 ;;  mR              2   50[COMRAM] PTR struct DC_motor
  9910 ;;		 -> main@motorR(10), 
  9911 ;;  turnSpeed       1   52[COMRAM] unsigned char 
  9912 ;;  turnDuration    2   53[COMRAM] PTR unsigned char 
  9913 ;;		 -> main@turnDuration(1), 
  9914 ;;  turnRamp        1   55[COMRAM] unsigned char 
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;		None
  9917 ;; Return value:  Size  Location     Type
  9918 ;;                  1    wreg      void 
  9919 ;; Registers used:
  9920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/0
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9926 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9928 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9929 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9930 ;;Total ram usage:       10 bytes
  9931 ;; Hardware stack levels used: 1
  9932 ;; Hardware stack levels required when called: 8
  9933 ;; This function calls:
  9934 ;;		_turnLeft
  9935 ;;		_turnRight
  9936 ;; This function is called by:
  9937 ;;		_main
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	text33
  9942   0037A6                     __ptext33:
  9943                           	callstack 0
  9944   0037A6                     _calibration:
  9945                           	callstack 22
  9946   0037A6                     
  9947                           ;dc_motor.c: 598: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 599: {;dc_motor.c: 601:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
  9948   0037A6  C031  F023         	movff	calibration@mL,turnLeft@mL
  9949   0037AA  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
  9950   0037AE  C033  F025         	movff	calibration@mR,turnLeft@mR
  9951   0037B2  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
  9952   0037B6  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  9953   0037BA  C036  FFD9         	movff	calibration@turnDuration,fsr2l
  9954   0037BE  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9955   0037C2  50DF               	movf	indf2,w,c
  9956   0037C4  6E28               	movwf	turnLeft@turnDuration^0,c
  9957   0037C6  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
  9958   0037CA  EC26  F022         	call	_turnLeft	;wreg free
  9959   0037CE                     
  9960                           ;dc_motor.c: 602:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9961   0037CE  0E05               	movlw	5
  9962   0037D0  6E3A               	movwf	(??_calibration+1)^0,c
  9963   0037D2  0E0F               	movlw	15
  9964   0037D4  6E39               	movwf	??_calibration^0,c
  9965   0037D6  0EF1               	movlw	241
  9966   0037D8                     u6517:
  9967   0037D8  2EE8               	decfsz	wreg,f,c
  9968   0037DA  D7FE               	bra	u6517
  9969   0037DC  2E39               	decfsz	??_calibration^0,f,c
  9970   0037DE  D7FC               	bra	u6517
  9971   0037E0  2E3A               	decfsz	(??_calibration+1)^0,f,c
  9972   0037E2  D7FA               	bra	u6517
  9973   0037E4  0000               	nop	
  9974   0037E6                     
  9975                           ;dc_motor.c: 603:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  9976   0037E6  C031  F023         	movff	calibration@mL,turnLeft@mL
  9977   0037EA  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
  9978   0037EE  C033  F025         	movff	calibration@mR,turnLeft@mR
  9979   0037F2  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
  9980   0037F6  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  9981   0037FA  C036  FFD9         	movff	calibration@turnDuration,fsr2l
  9982   0037FE  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
  9983   003802  50DF               	movf	indf2,w,c
  9984   003804  6E28               	movwf	turnLeft@turnDuration^0,c
  9985   003806  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
  9986   00380A  EC26  F022         	call	_turnLeft	;wreg free
  9987                           
  9988                           ;dc_motor.c: 604:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9989   00380E  0E05               	movlw	5
  9990   003810  6E3A               	movwf	(??_calibration+1)^0,c
  9991   003812  0E0F               	movlw	15
  9992   003814  6E39               	movwf	??_calibration^0,c
  9993   003816  0EF1               	movlw	241
  9994   003818                     u6527:
  9995   003818  2EE8               	decfsz	wreg,f,c
  9996   00381A  D7FE               	bra	u6527
  9997   00381C  2E39               	decfsz	??_calibration^0,f,c
  9998   00381E  D7FC               	bra	u6527
  9999   003820  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10000   003822  D7FA               	bra	u6527
 10001   003824  0000               	nop	
 10002   003826                     
 10003                           ;dc_motor.c: 605:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10004   003826  C031  F023         	movff	calibration@mL,turnRight@mL
 10005   00382A  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10006   00382E  C033  F025         	movff	calibration@mR,turnRight@mR
 10007   003832  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10008   003836  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10009   00383A  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10010   00383E  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10011   003842  50DF               	movf	indf2,w,c
 10012   003844  6E28               	movwf	turnRight@turnDuration^0,c
 10013   003846  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10014   00384A  EC39  F021         	call	_turnRight	;wreg free
 10015   00384E                     
 10016                           ;dc_motor.c: 606:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10017   00384E  0E05               	movlw	5
 10018   003850  6E3A               	movwf	(??_calibration+1)^0,c
 10019   003852  0E0F               	movlw	15
 10020   003854  6E39               	movwf	??_calibration^0,c
 10021   003856  0EF1               	movlw	241
 10022   003858                     u6537:
 10023   003858  2EE8               	decfsz	wreg,f,c
 10024   00385A  D7FE               	bra	u6537
 10025   00385C  2E39               	decfsz	??_calibration^0,f,c
 10026   00385E  D7FC               	bra	u6537
 10027   003860  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10028   003862  D7FA               	bra	u6537
 10029   003864  0000               	nop	
 10030                           
 10031                           ;dc_motor.c: 607:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10032   003866  C031  F023         	movff	calibration@mL,turnRight@mL
 10033   00386A  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10034   00386E  C033  F025         	movff	calibration@mR,turnRight@mR
 10035   003872  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10036   003876  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10037   00387A  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10038   00387E  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10039   003882  50DF               	movf	indf2,w,c
 10040   003884  6E28               	movwf	turnRight@turnDuration^0,c
 10041   003886  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10042   00388A  EC39  F021         	call	_turnRight	;wreg free
 10043   00388E                     l743:
 10044   00388E  A48E               	btfss	142,2,c	;volatile
 10045   003890  EF4C  F01C         	goto	u4721
 10046   003894  EF4E  F01C         	goto	u4720
 10047   003898                     u4721:
 10048   003898  EF55  F01C         	goto	l747
 10049   00389C                     u4720:
 10050   00389C  B68E               	btfsc	142,3,c	;volatile
 10051   00389E  EF53  F01C         	goto	u4731
 10052   0038A2  EF55  F01C         	goto	u4730
 10053   0038A6                     u4731:
 10054   0038A6  EF47  F01C         	goto	l743
 10055   0038AA                     u4730:
 10056   0038AA                     l747:
 10057                           
 10058                           ;dc_motor.c: 612:         if (!PORTFbits.RF2 && *turnDuration>0) {
 10059   0038AA  B48E               	btfsc	142,2,c	;volatile
 10060   0038AC  EF5A  F01C         	goto	u4741
 10061   0038B0  EF5C  F01C         	goto	u4740
 10062   0038B4                     u4741:
 10063   0038B4  EF70  F01C         	goto	l748
 10064   0038B8                     u4740:
 10065   0038B8  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10066   0038BC  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10067   0038C0  50DF               	movf	indf2,w,c
 10068   0038C2  B4D8               	btfsc	status,2,c
 10069   0038C4  EF66  F01C         	goto	u4751
 10070   0038C8  EF68  F01C         	goto	u4750
 10071   0038CC                     u4751:
 10072   0038CC  EF70  F01C         	goto	l748
 10073   0038D0                     u4750:
 10074   0038D0                     
 10075                           ;dc_motor.c: 613:             (*turnDuration)--;
 10076   0038D0  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10077   0038D4  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10078   0038D8  06DF               	decf	indf2,f,c
 10079   0038DA                     
 10080                           ;dc_motor.c: 614:             LATDbits.LATD7 = 1;
 10081   0038DA  8E7C               	bsf	124,7,c	;volatile
 10082                           
 10083                           ;dc_motor.c: 615:         }
 10084   0038DC  EF7D  F01C         	goto	l5473
 10085   0038E0                     l748:
 10086   0038E0  B68E               	btfsc	142,3,c	;volatile
 10087   0038E2  EF75  F01C         	goto	u4761
 10088   0038E6  EF77  F01C         	goto	u4760
 10089   0038EA                     u4761:
 10090   0038EA  EF7D  F01C         	goto	l5473
 10091   0038EE                     u4760:
 10092   0038EE                     
 10093                           ;dc_motor.c: 618:             (*turnDuration)++;
 10094   0038EE  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10095   0038F2  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10096   0038F6  2ADF               	incf	indf2,f,c
 10097   0038F8                     
 10098                           ;dc_motor.c: 619:             LATHbits.LATH3 = 1;
 10099   0038F8  8680               	bsf	128,3,c	;volatile
 10100   0038FA                     l5473:
 10101                           
 10102                           ;dc_motor.c: 622:         _delay((unsigned long)((500)*(64000000/4000.0)));
 10103   0038FA  0E29               	movlw	41
 10104   0038FC  6E3A               	movwf	(??_calibration+1)^0,c
 10105   0038FE  0E96               	movlw	150
 10106   003900  6E39               	movwf	??_calibration^0,c
 10107   003902  0E7F               	movlw	127
 10108   003904                     u6547:
 10109   003904  2EE8               	decfsz	wreg,f,c
 10110   003906  D7FE               	bra	u6547
 10111   003908  2E39               	decfsz	??_calibration^0,f,c
 10112   00390A  D7FC               	bra	u6547
 10113   00390C  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10114   00390E  D7FA               	bra	u6547
 10115   003910  0000               	nop	
 10116   003912                     
 10117                           ;dc_motor.c: 624:         if (!PORTFbits.RF3) {
 10118   003912  B68E               	btfsc	142,3,c	;volatile
 10119   003914  EF8E  F01C         	goto	u4771
 10120   003918  EF90  F01C         	goto	u4770
 10121   00391C                     u4771:
 10122   00391C  EF97  F01C         	goto	l751
 10123   003920                     u4770:
 10124   003920                     
 10125                           ;dc_motor.c: 625:             (*turnDuration)--;
 10126   003920  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10127   003924  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10128   003928  06DF               	decf	indf2,f,c
 10129                           
 10130                           ;dc_motor.c: 626:             break;
 10131   00392A  EF0F  F01D         	goto	l752
 10132   00392E                     l751:
 10133                           
 10134                           ;dc_motor.c: 629:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10135   00392E  9680               	bcf	128,3,c	;volatile
 10136   003930  9E7C               	bcf	124,7,c	;volatile
 10137   003932                     
 10138                           ;dc_motor.c: 632:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10139   003932  C031  F023         	movff	calibration@mL,turnLeft@mL
 10140   003936  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10141   00393A  C033  F025         	movff	calibration@mR,turnLeft@mR
 10142   00393E  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10143   003942  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10144   003946  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10145   00394A  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10146   00394E  50DF               	movf	indf2,w,c
 10147   003950  6E28               	movwf	turnLeft@turnDuration^0,c
 10148   003952  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10149   003956  EC26  F022         	call	_turnLeft	;wreg free
 10150   00395A                     
 10151                           ;dc_motor.c: 633:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10152   00395A  0E05               	movlw	5
 10153   00395C  6E3A               	movwf	(??_calibration+1)^0,c
 10154   00395E  0E0F               	movlw	15
 10155   003960  6E39               	movwf	??_calibration^0,c
 10156   003962  0EF1               	movlw	241
 10157   003964                     u6557:
 10158   003964  2EE8               	decfsz	wreg,f,c
 10159   003966  D7FE               	bra	u6557
 10160   003968  2E39               	decfsz	??_calibration^0,f,c
 10161   00396A  D7FC               	bra	u6557
 10162   00396C  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10163   00396E  D7FA               	bra	u6557
 10164   003970  0000               	nop	
 10165   003972                     
 10166                           ;dc_motor.c: 634:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10167   003972  C031  F023         	movff	calibration@mL,turnLeft@mL
 10168   003976  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10169   00397A  C033  F025         	movff	calibration@mR,turnLeft@mR
 10170   00397E  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10171   003982  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10172   003986  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10173   00398A  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10174   00398E  50DF               	movf	indf2,w,c
 10175   003990  6E28               	movwf	turnLeft@turnDuration^0,c
 10176   003992  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10177   003996  EC26  F022         	call	_turnLeft	;wreg free
 10178                           
 10179                           ;dc_motor.c: 635:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10180   00399A  0E05               	movlw	5
 10181   00399C  6E3A               	movwf	(??_calibration+1)^0,c
 10182   00399E  0E0F               	movlw	15
 10183   0039A0  6E39               	movwf	??_calibration^0,c
 10184   0039A2  0EF1               	movlw	241
 10185   0039A4                     u6567:
 10186   0039A4  2EE8               	decfsz	wreg,f,c
 10187   0039A6  D7FE               	bra	u6567
 10188   0039A8  2E39               	decfsz	??_calibration^0,f,c
 10189   0039AA  D7FC               	bra	u6567
 10190   0039AC  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10191   0039AE  D7FA               	bra	u6567
 10192   0039B0  0000               	nop	
 10193   0039B2                     
 10194                           ;dc_motor.c: 636:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10195   0039B2  C031  F023         	movff	calibration@mL,turnRight@mL
 10196   0039B6  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10197   0039BA  C033  F025         	movff	calibration@mR,turnRight@mR
 10198   0039BE  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10199   0039C2  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10200   0039C6  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10201   0039CA  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10202   0039CE  50DF               	movf	indf2,w,c
 10203   0039D0  6E28               	movwf	turnRight@turnDuration^0,c
 10204   0039D2  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10205   0039D6  EC39  F021         	call	_turnRight	;wreg free
 10206   0039DA                     
 10207                           ;dc_motor.c: 637:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10208   0039DA  0E05               	movlw	5
 10209   0039DC  6E3A               	movwf	(??_calibration+1)^0,c
 10210   0039DE  0E0F               	movlw	15
 10211   0039E0  6E39               	movwf	??_calibration^0,c
 10212   0039E2  0EF1               	movlw	241
 10213   0039E4                     u6577:
 10214   0039E4  2EE8               	decfsz	wreg,f,c
 10215   0039E6  D7FE               	bra	u6577
 10216   0039E8  2E39               	decfsz	??_calibration^0,f,c
 10217   0039EA  D7FC               	bra	u6577
 10218   0039EC  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10219   0039EE  D7FA               	bra	u6577
 10220   0039F0  0000               	nop	
 10221                           
 10222                           ;dc_motor.c: 638:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10223   0039F2  C031  F023         	movff	calibration@mL,turnRight@mL
 10224   0039F6  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10225   0039FA  C033  F025         	movff	calibration@mR,turnRight@mR
 10226   0039FE  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10227   003A02  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10228   003A06  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10229   003A0A  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10230   003A0E  50DF               	movf	indf2,w,c
 10231   003A10  6E28               	movwf	turnRight@turnDuration^0,c
 10232   003A12  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10233   003A16  EC39  F021         	call	_turnRight	;wreg free
 10234   003A1A  EF47  F01C         	goto	l743
 10235   003A1E                     l752:
 10236                           
 10237                           ;dc_motor.c: 643:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
 10238   003A1E  8680               	bsf	128,3,c	;volatile
 10239   003A20  8E7C               	bsf	124,7,c	;volatile
 10240   003A22                     
 10241                           ;dc_motor.c: 644:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10242   003A22  0E09               	movlw	9
 10243   003A24  6E3A               	movwf	(??_calibration+1)^0,c
 10244   003A26  0E1E               	movlw	30
 10245   003A28  6E39               	movwf	??_calibration^0,c
 10246   003A2A  0EE4               	movlw	228
 10247   003A2C                     u6587:
 10248   003A2C  2EE8               	decfsz	wreg,f,c
 10249   003A2E  D7FE               	bra	u6587
 10250   003A30  2E39               	decfsz	??_calibration^0,f,c
 10251   003A32  D7FC               	bra	u6587
 10252   003A34  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10253   003A36  D7FA               	bra	u6587
 10254   003A38  D000               	nop2	
 10255   003A3A                     
 10256                           ;dc_motor.c: 645:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10257   003A3A  9680               	bcf	128,3,c	;volatile
 10258   003A3C  9E7C               	bcf	124,7,c	;volatile
 10259   003A3E  0012               	return		;funcret
 10260   003A40                     __end_of_calibration:
 10261                           	callstack 0
 10262                           
 10263 ;; *************** function _turnRight *****************
 10264 ;; Defined at:
 10265 ;;		line 419 in file "dc_motor.c"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;  mL              2   34[COMRAM] PTR struct DC_motor
 10268 ;;		 -> main@motorL(10), 
 10269 ;;  mR              2   36[COMRAM] PTR struct DC_motor
 10270 ;;		 -> main@motorR(10), 
 10271 ;;  turnSpeed       1   38[COMRAM] unsigned char 
 10272 ;;  turnDuration    1   39[COMRAM] unsigned char 
 10273 ;;  turnRamp        1   40[COMRAM] unsigned char 
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;  cur_power       2   46[COMRAM] int 
 10276 ;;  i               2   44[COMRAM] int 
 10277 ;; Return value:  Size  Location     Type
 10278 ;;                  1    wreg      void 
 10279 ;; Registers used:
 10280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10286 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10287 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10288 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10289 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10290 ;;Total ram usage:       14 bytes
 10291 ;; Hardware stack levels used: 1
 10292 ;; Hardware stack levels required when called: 7
 10293 ;; This function calls:
 10294 ;;		_setMotorPWM
 10295 ;; This function is called by:
 10296 ;;		_move
 10297 ;;		_returnHome
 10298 ;;		_lostReturnHome
 10299 ;;		_calibration
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text34
 10304   004272                     __ptext34:
 10305                           	callstack 0
 10306   004272                     _turnRight:
 10307                           	callstack 22
 10308   004272                     
 10309                           ;dc_motor.c: 419: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 420: {;dc_motor.c: 421:     mL->dir
      +                          ection = 1;
 10310   004272  EE20 F001          	lfsr	2,1
 10311   004276  5023               	movf	turnRight@mL^0,w,c
 10312   004278  26D9               	addwf	fsr2l,f,c
 10313   00427A  5024               	movf	(turnRight@mL+1)^0,w,c
 10314   00427C  22DA               	addwfc	fsr2h,f,c
 10315   00427E  0E01               	movlw	1
 10316   004280  6EDF               	movwf	indf2,c
 10317                           
 10318                           ;dc_motor.c: 422:     mR->direction = 0;
 10319   004282  EE20 F001          	lfsr	2,1
 10320   004286  5025               	movf	turnRight@mR^0,w,c
 10321   004288  26D9               	addwf	fsr2l,f,c
 10322   00428A  5026               	movf	(turnRight@mR+1)^0,w,c
 10323   00428C  22DA               	addwfc	fsr2h,f,c
 10324   00428E  6ADF               	clrf	indf2,c
 10325   004290                     
 10326                           ;dc_motor.c: 423:     int i;;dc_motor.c: 424:     int cur_power;;dc_motor.c: 425:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 10327   004290  0E00               	movlw	0
 10328   004292  6E30               	movwf	(turnRight@cur_power+1)^0,c
 10329   004294  0E01               	movlw	1
 10330   004296  6E2F               	movwf	turnRight@cur_power^0,c
 10331   004298  EF98  F021         	goto	l4769
 10332   00429C                     l4755:
 10333                           
 10334                           ;dc_motor.c: 426:         mL->power = cur_power+mL->compensation;
 10335   00429C  EE20 F009          	lfsr	2,9
 10336   0042A0  5023               	movf	turnRight@mL^0,w,c
 10337   0042A2  26D9               	addwf	fsr2l,f,c
 10338   0042A4  5024               	movf	(turnRight@mL+1)^0,w,c
 10339   0042A6  22DA               	addwfc	fsr2h,f,c
 10340   0042A8  50DF               	movf	indf2,w,c
 10341   0042AA  242F               	addwf	turnRight@cur_power^0,w,c
 10342   0042AC  C023  FFD9         	movff	turnRight@mL,fsr2l
 10343   0042B0  C024  FFDA         	movff	turnRight@mL+1,fsr2h
 10344   0042B4  6EDF               	movwf	indf2,c
 10345                           
 10346                           ;dc_motor.c: 427:         mR->power = cur_power+mR->compensation;
 10347   0042B6  EE20 F009          	lfsr	2,9
 10348   0042BA  5025               	movf	turnRight@mR^0,w,c
 10349   0042BC  26D9               	addwf	fsr2l,f,c
 10350   0042BE  5026               	movf	(turnRight@mR+1)^0,w,c
 10351   0042C0  22DA               	addwfc	fsr2h,f,c
 10352   0042C2  50DF               	movf	indf2,w,c
 10353   0042C4  242F               	addwf	turnRight@cur_power^0,w,c
 10354   0042C6  C025  FFD9         	movff	turnRight@mR,fsr2l
 10355   0042CA  C026  FFDA         	movff	turnRight@mR+1,fsr2h
 10356   0042CE  6EDF               	movwf	indf2,c
 10357   0042D0                     
 10358                           ;dc_motor.c: 428:         setMotorPWM(mL);
 10359   0042D0  C023  F01D         	movff	turnRight@mL,setMotorPWM@m
 10360   0042D4  C024  F01E         	movff	turnRight@mL+1,setMotorPWM@m+1
 10361   0042D8  EC13  F023         	call	_setMotorPWM	;wreg free
 10362   0042DC                     
 10363                           ;dc_motor.c: 429:         setMotorPWM(mR);
 10364   0042DC  C025  F01D         	movff	turnRight@mR,setMotorPWM@m
 10365   0042E0  C026  F01E         	movff	turnRight@mR+1,setMotorPWM@m+1
 10366   0042E4  EC13  F023         	call	_setMotorPWM	;wreg free
 10367   0042E8                     
 10368                           ;dc_motor.c: 430:         for (i=0;i<turnRamp;i++) {
 10369   0042E8  0E00               	movlw	0
 10370   0042EA  6E2E               	movwf	(turnRight@i+1)^0,c
 10371   0042EC  0E00               	movlw	0
 10372   0042EE  6E2D               	movwf	turnRight@i^0,c
 10373   0042F0  EF84  F021         	goto	l653
 10374   0042F4                     l4763:
 10375                           
 10376                           ;dc_motor.c: 431:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10377   0042F4  0E68               	movlw	104
 10378   0042F6  6E2A               	movwf	??_turnRight^0,c
 10379   0042F8  0EE4               	movlw	228
 10380   0042FA                     u6597:
 10381   0042FA  2EE8               	decfsz	wreg,f,c
 10382   0042FC  D7FE               	bra	u6597
 10383   0042FE  2E2A               	decfsz	??_turnRight^0,f,c
 10384   004300  D7FC               	bra	u6597
 10385   004302  D000               	nop2	
 10386   004304                     
 10387                           ;dc_motor.c: 432:         }
 10388   004304  4A2D               	infsnz	turnRight@i^0,f,c
 10389   004306  2A2E               	incf	(turnRight@i+1)^0,f,c
 10390   004308                     l653:
 10391   004308  5029               	movf	turnRight@turnRamp^0,w,c
 10392   00430A  6E2A               	movwf	??_turnRight^0,c
 10393   00430C  6A2B               	clrf	(??_turnRight+1)^0,c
 10394   00430E  502A               	movf	??_turnRight^0,w,c
 10395   004310  5C2D               	subwf	turnRight@i^0,w,c
 10396   004312  502E               	movf	(turnRight@i+1)^0,w,c
 10397   004314  0A80               	xorlw	128
 10398   004316  6E2C               	movwf	(??_turnRight+2)^0,c
 10399   004318  502B               	movf	(??_turnRight+1)^0,w,c
 10400   00431A  0A80               	xorlw	128
 10401   00431C  582C               	subwfb	(??_turnRight+2)^0,w,c
 10402   00431E  A0D8               	btfss	status,0,c
 10403   004320  EF94  F021         	goto	u3981
 10404   004324  EF96  F021         	goto	u3980
 10405   004328                     u3981:
 10406   004328  EF7A  F021         	goto	l4763
 10407   00432C                     u3980:
 10408   00432C                     
 10409                           ;dc_motor.c: 433:     }
 10410   00432C  4A2F               	infsnz	turnRight@cur_power^0,f,c
 10411   00432E  2A30               	incf	(turnRight@cur_power+1)^0,f,c
 10412   004330                     l4769:
 10413   004330  5027               	movf	turnRight@turnSpeed^0,w,c
 10414   004332  6E2A               	movwf	??_turnRight^0,c
 10415   004334  6A2B               	clrf	(??_turnRight+1)^0,c
 10416   004336  502F               	movf	turnRight@cur_power^0,w,c
 10417   004338  5C2A               	subwf	??_turnRight^0,w,c
 10418   00433A  502B               	movf	(??_turnRight+1)^0,w,c
 10419   00433C  0A80               	xorlw	128
 10420   00433E  6E2C               	movwf	(??_turnRight+2)^0,c
 10421   004340  5030               	movf	(turnRight@cur_power+1)^0,w,c
 10422   004342  0A80               	xorlw	128
 10423   004344  582C               	subwfb	(??_turnRight+2)^0,w,c
 10424   004346  B0D8               	btfsc	status,0,c
 10425   004348  EFA8  F021         	goto	u3991
 10426   00434C  EFAA  F021         	goto	u3990
 10427   004350                     u3991:
 10428   004350  EF4E  F021         	goto	l4755
 10429   004354                     u3990:
 10430   004354                     
 10431                           ;dc_motor.c: 435:     for (i=0;i<turnDuration;i++) {
 10432   004354  0E00               	movlw	0
 10433   004356  6E2E               	movwf	(turnRight@i+1)^0,c
 10434   004358  0E00               	movlw	0
 10435   00435A  6E2D               	movwf	turnRight@i^0,c
 10436   00435C  EFBA  F021         	goto	l657
 10437   004360                     l4773:
 10438                           
 10439                           ;dc_motor.c: 436:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10440   004360  0E68               	movlw	104
 10441   004362  6E2A               	movwf	??_turnRight^0,c
 10442   004364  0EE4               	movlw	228
 10443   004366                     u6607:
 10444   004366  2EE8               	decfsz	wreg,f,c
 10445   004368  D7FE               	bra	u6607
 10446   00436A  2E2A               	decfsz	??_turnRight^0,f,c
 10447   00436C  D7FC               	bra	u6607
 10448   00436E  D000               	nop2	
 10449   004370                     
 10450                           ;dc_motor.c: 437:         }
 10451   004370  4A2D               	infsnz	turnRight@i^0,f,c
 10452   004372  2A2E               	incf	(turnRight@i+1)^0,f,c
 10453   004374                     l657:
 10454   004374  5028               	movf	turnRight@turnDuration^0,w,c
 10455   004376  6E2A               	movwf	??_turnRight^0,c
 10456   004378  6A2B               	clrf	(??_turnRight+1)^0,c
 10457   00437A  502A               	movf	??_turnRight^0,w,c
 10458   00437C  5C2D               	subwf	turnRight@i^0,w,c
 10459   00437E  502E               	movf	(turnRight@i+1)^0,w,c
 10460   004380  0A80               	xorlw	128
 10461   004382  6E2C               	movwf	(??_turnRight+2)^0,c
 10462   004384  502B               	movf	(??_turnRight+1)^0,w,c
 10463   004386  0A80               	xorlw	128
 10464   004388  582C               	subwfb	(??_turnRight+2)^0,w,c
 10465   00438A  A0D8               	btfss	status,0,c
 10466   00438C  EFCA  F021         	goto	u4001
 10467   004390  EFCC  F021         	goto	u4000
 10468   004394                     u4001:
 10469   004394  EFB0  F021         	goto	l4773
 10470   004398                     u4000:
 10471   004398                     
 10472                           ;dc_motor.c: 439:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 10473   004398  C027  F02F         	movff	turnRight@turnSpeed,turnRight@cur_power
 10474   00439C  6A30               	clrf	(turnRight@cur_power+1)^0,c
 10475   00439E                     l4777:
 10476   00439E  BE30               	btfsc	(turnRight@cur_power+1)^0,7,c
 10477   0043A0  EFD6  F021         	goto	u4010
 10478   0043A4  EFD4  F021         	goto	u4011
 10479   0043A8                     u4011:
 10480   0043A8  EFD8  F021         	goto	l4781
 10481   0043AC                     u4010:
 10482   0043AC  EF25  F022         	goto	l665
 10483   0043B0                     l4781:
 10484                           
 10485                           ;dc_motor.c: 440:         mL->power = cur_power+mL->compensation;
 10486   0043B0  EE20 F009          	lfsr	2,9
 10487   0043B4  5023               	movf	turnRight@mL^0,w,c
 10488   0043B6  26D9               	addwf	fsr2l,f,c
 10489   0043B8  5024               	movf	(turnRight@mL+1)^0,w,c
 10490   0043BA  22DA               	addwfc	fsr2h,f,c
 10491   0043BC  50DF               	movf	indf2,w,c
 10492   0043BE  242F               	addwf	turnRight@cur_power^0,w,c
 10493   0043C0  C023  FFD9         	movff	turnRight@mL,fsr2l
 10494   0043C4  C024  FFDA         	movff	turnRight@mL+1,fsr2h
 10495   0043C8  6EDF               	movwf	indf2,c
 10496                           
 10497                           ;dc_motor.c: 441:         mR->power = cur_power+mR->compensation;
 10498   0043CA  EE20 F009          	lfsr	2,9
 10499   0043CE  5025               	movf	turnRight@mR^0,w,c
 10500   0043D0  26D9               	addwf	fsr2l,f,c
 10501   0043D2  5026               	movf	(turnRight@mR+1)^0,w,c
 10502   0043D4  22DA               	addwfc	fsr2h,f,c
 10503   0043D6  50DF               	movf	indf2,w,c
 10504   0043D8  242F               	addwf	turnRight@cur_power^0,w,c
 10505   0043DA  C025  FFD9         	movff	turnRight@mR,fsr2l
 10506   0043DE  C026  FFDA         	movff	turnRight@mR+1,fsr2h
 10507   0043E2  6EDF               	movwf	indf2,c
 10508   0043E4                     
 10509                           ;dc_motor.c: 442:         setMotorPWM(mL);
 10510   0043E4  C023  F01D         	movff	turnRight@mL,setMotorPWM@m
 10511   0043E8  C024  F01E         	movff	turnRight@mL+1,setMotorPWM@m+1
 10512   0043EC  EC13  F023         	call	_setMotorPWM	;wreg free
 10513   0043F0                     
 10514                           ;dc_motor.c: 443:         setMotorPWM(mR);
 10515   0043F0  C025  F01D         	movff	turnRight@mR,setMotorPWM@m
 10516   0043F4  C026  F01E         	movff	turnRight@mR+1,setMotorPWM@m+1
 10517   0043F8  EC13  F023         	call	_setMotorPWM	;wreg free
 10518   0043FC                     
 10519                           ;dc_motor.c: 444:         for (i=0;i<turnRamp;i++) {
 10520   0043FC  0E00               	movlw	0
 10521   0043FE  6E2E               	movwf	(turnRight@i+1)^0,c
 10522   004400  0E00               	movlw	0
 10523   004402  6E2D               	movwf	turnRight@i^0,c
 10524   004404  EF0E  F022         	goto	l662
 10525   004408                     l4789:
 10526                           
 10527                           ;dc_motor.c: 445:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10528   004408  0E68               	movlw	104
 10529   00440A  6E2A               	movwf	??_turnRight^0,c
 10530   00440C  0EE4               	movlw	228
 10531   00440E                     u6617:
 10532   00440E  2EE8               	decfsz	wreg,f,c
 10533   004410  D7FE               	bra	u6617
 10534   004412  2E2A               	decfsz	??_turnRight^0,f,c
 10535   004414  D7FC               	bra	u6617
 10536   004416  D000               	nop2	
 10537   004418                     
 10538                           ;dc_motor.c: 446:         }
 10539   004418  4A2D               	infsnz	turnRight@i^0,f,c
 10540   00441A  2A2E               	incf	(turnRight@i+1)^0,f,c
 10541   00441C                     l662:
 10542   00441C  5029               	movf	turnRight@turnRamp^0,w,c
 10543   00441E  6E2A               	movwf	??_turnRight^0,c
 10544   004420  6A2B               	clrf	(??_turnRight+1)^0,c
 10545   004422  502A               	movf	??_turnRight^0,w,c
 10546   004424  5C2D               	subwf	turnRight@i^0,w,c
 10547   004426  502E               	movf	(turnRight@i+1)^0,w,c
 10548   004428  0A80               	xorlw	128
 10549   00442A  6E2C               	movwf	(??_turnRight+2)^0,c
 10550   00442C  502B               	movf	(??_turnRight+1)^0,w,c
 10551   00442E  0A80               	xorlw	128
 10552   004430  582C               	subwfb	(??_turnRight+2)^0,w,c
 10553   004432  A0D8               	btfss	status,0,c
 10554   004434  EF1E  F022         	goto	u4021
 10555   004438  EF20  F022         	goto	u4020
 10556   00443C                     u4021:
 10557   00443C  EF04  F022         	goto	l4789
 10558   004440                     u4020:
 10559   004440                     
 10560                           ;dc_motor.c: 447:     }
 10561   004440  062F               	decf	turnRight@cur_power^0,f,c
 10562   004442  A0D8               	btfss	status,0,c
 10563   004444  0630               	decf	(turnRight@cur_power+1)^0,f,c
 10564   004446  EFCF  F021         	goto	l4777
 10565   00444A                     l665:
 10566   00444A  0012               	return		;funcret
 10567   00444C                     __end_of_turnRight:
 10568                           	callstack 0
 10569                           
 10570 ;; *************** function _turnLeft *****************
 10571 ;; Defined at:
 10572 ;;		line 387 in file "dc_motor.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;  mL              2   34[COMRAM] PTR struct DC_motor
 10575 ;;		 -> main@motorL(10), 
 10576 ;;  mR              2   36[COMRAM] PTR struct DC_motor
 10577 ;;		 -> main@motorR(10), 
 10578 ;;  turnSpeed       1   38[COMRAM] unsigned char 
 10579 ;;  turnDuration    1   39[COMRAM] unsigned char 
 10580 ;;  turnRamp        1   40[COMRAM] unsigned char 
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;  cur_power       2   46[COMRAM] int 
 10583 ;;  i               2   44[COMRAM] int 
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  1    wreg      void 
 10586 ;; Registers used:
 10587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10593 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10594 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10595 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10596 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10597 ;;Total ram usage:       14 bytes
 10598 ;; Hardware stack levels used: 1
 10599 ;; Hardware stack levels required when called: 7
 10600 ;; This function calls:
 10601 ;;		_setMotorPWM
 10602 ;; This function is called by:
 10603 ;;		_move
 10604 ;;		_returnHome
 10605 ;;		_lostReturnHome
 10606 ;;		_calibration
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610                           	psect	text35
 10611   00444C                     __ptext35:
 10612                           	callstack 0
 10613   00444C                     _turnLeft:
 10614                           	callstack 22
 10615   00444C                     
 10616                           ;dc_motor.c: 387: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 388: {;dc_motor.c: 389:     mL->dire
      +                          ction = 0;
 10617   00444C  EE20 F001          	lfsr	2,1
 10618   004450  5023               	movf	turnLeft@mL^0,w,c
 10619   004452  26D9               	addwf	fsr2l,f,c
 10620   004454  5024               	movf	(turnLeft@mL+1)^0,w,c
 10621   004456  22DA               	addwfc	fsr2h,f,c
 10622   004458  6ADF               	clrf	indf2,c
 10623                           
 10624                           ;dc_motor.c: 390:     mR->direction = 1;
 10625   00445A  EE20 F001          	lfsr	2,1
 10626   00445E  5025               	movf	turnLeft@mR^0,w,c
 10627   004460  26D9               	addwf	fsr2l,f,c
 10628   004462  5026               	movf	(turnLeft@mR+1)^0,w,c
 10629   004464  22DA               	addwfc	fsr2h,f,c
 10630   004466  0E01               	movlw	1
 10631   004468  6EDF               	movwf	indf2,c
 10632   00446A                     
 10633                           ;dc_motor.c: 391:     int i;;dc_motor.c: 392:     int cur_power;;dc_motor.c: 393:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 10634   00446A  0E00               	movlw	0
 10635   00446C  6E30               	movwf	(turnLeft@cur_power+1)^0,c
 10636   00446E  0E01               	movlw	1
 10637   004470  6E2F               	movwf	turnLeft@cur_power^0,c
 10638   004472  EF85  F022         	goto	l4815
 10639   004476                     l4801:
 10640                           
 10641                           ;dc_motor.c: 394:         mL->power = cur_power+mL->compensation;
 10642   004476  EE20 F009          	lfsr	2,9
 10643   00447A  5023               	movf	turnLeft@mL^0,w,c
 10644   00447C  26D9               	addwf	fsr2l,f,c
 10645   00447E  5024               	movf	(turnLeft@mL+1)^0,w,c
 10646   004480  22DA               	addwfc	fsr2h,f,c
 10647   004482  50DF               	movf	indf2,w,c
 10648   004484  242F               	addwf	turnLeft@cur_power^0,w,c
 10649   004486  C023  FFD9         	movff	turnLeft@mL,fsr2l
 10650   00448A  C024  FFDA         	movff	turnLeft@mL+1,fsr2h
 10651   00448E  6EDF               	movwf	indf2,c
 10652                           
 10653                           ;dc_motor.c: 395:         mR->power = cur_power+mR->compensation;
 10654   004490  EE20 F009          	lfsr	2,9
 10655   004494  5025               	movf	turnLeft@mR^0,w,c
 10656   004496  26D9               	addwf	fsr2l,f,c
 10657   004498  5026               	movf	(turnLeft@mR+1)^0,w,c
 10658   00449A  22DA               	addwfc	fsr2h,f,c
 10659   00449C  50DF               	movf	indf2,w,c
 10660   00449E  242F               	addwf	turnLeft@cur_power^0,w,c
 10661   0044A0  C025  FFD9         	movff	turnLeft@mR,fsr2l
 10662   0044A4  C026  FFDA         	movff	turnLeft@mR+1,fsr2h
 10663   0044A8  6EDF               	movwf	indf2,c
 10664   0044AA                     
 10665                           ;dc_motor.c: 396:         setMotorPWM(mL);
 10666   0044AA  C023  F01D         	movff	turnLeft@mL,setMotorPWM@m
 10667   0044AE  C024  F01E         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10668   0044B2  EC13  F023         	call	_setMotorPWM	;wreg free
 10669   0044B6                     
 10670                           ;dc_motor.c: 397:         setMotorPWM(mR);
 10671   0044B6  C025  F01D         	movff	turnLeft@mR,setMotorPWM@m
 10672   0044BA  C026  F01E         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10673   0044BE  EC13  F023         	call	_setMotorPWM	;wreg free
 10674   0044C2                     
 10675                           ;dc_motor.c: 398:         for (i=0;i<turnRamp;i++) {
 10676   0044C2  0E00               	movlw	0
 10677   0044C4  6E2E               	movwf	(turnLeft@i+1)^0,c
 10678   0044C6  0E00               	movlw	0
 10679   0044C8  6E2D               	movwf	turnLeft@i^0,c
 10680   0044CA  EF71  F022         	goto	l636
 10681   0044CE                     l4809:
 10682                           
 10683                           ;dc_motor.c: 399:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10684   0044CE  0E68               	movlw	104
 10685   0044D0  6E2A               	movwf	??_turnLeft^0,c
 10686   0044D2  0EE4               	movlw	228
 10687   0044D4                     u6627:
 10688   0044D4  2EE8               	decfsz	wreg,f,c
 10689   0044D6  D7FE               	bra	u6627
 10690   0044D8  2E2A               	decfsz	??_turnLeft^0,f,c
 10691   0044DA  D7FC               	bra	u6627
 10692   0044DC  D000               	nop2	
 10693   0044DE                     
 10694                           ;dc_motor.c: 400:         }
 10695   0044DE  4A2D               	infsnz	turnLeft@i^0,f,c
 10696   0044E0  2A2E               	incf	(turnLeft@i+1)^0,f,c
 10697   0044E2                     l636:
 10698   0044E2  5029               	movf	turnLeft@turnRamp^0,w,c
 10699   0044E4  6E2A               	movwf	??_turnLeft^0,c
 10700   0044E6  6A2B               	clrf	(??_turnLeft+1)^0,c
 10701   0044E8  502A               	movf	??_turnLeft^0,w,c
 10702   0044EA  5C2D               	subwf	turnLeft@i^0,w,c
 10703   0044EC  502E               	movf	(turnLeft@i+1)^0,w,c
 10704   0044EE  0A80               	xorlw	128
 10705   0044F0  6E2C               	movwf	(??_turnLeft+2)^0,c
 10706   0044F2  502B               	movf	(??_turnLeft+1)^0,w,c
 10707   0044F4  0A80               	xorlw	128
 10708   0044F6  582C               	subwfb	(??_turnLeft+2)^0,w,c
 10709   0044F8  A0D8               	btfss	status,0,c
 10710   0044FA  EF81  F022         	goto	u4031
 10711   0044FE  EF83  F022         	goto	u4030
 10712   004502                     u4031:
 10713   004502  EF67  F022         	goto	l4809
 10714   004506                     u4030:
 10715   004506                     
 10716                           ;dc_motor.c: 401:     }
 10717   004506  4A2F               	infsnz	turnLeft@cur_power^0,f,c
 10718   004508  2A30               	incf	(turnLeft@cur_power+1)^0,f,c
 10719   00450A                     l4815:
 10720   00450A  5027               	movf	turnLeft@turnSpeed^0,w,c
 10721   00450C  6E2A               	movwf	??_turnLeft^0,c
 10722   00450E  6A2B               	clrf	(??_turnLeft+1)^0,c
 10723   004510  502F               	movf	turnLeft@cur_power^0,w,c
 10724   004512  5C2A               	subwf	??_turnLeft^0,w,c
 10725   004514  502B               	movf	(??_turnLeft+1)^0,w,c
 10726   004516  0A80               	xorlw	128
 10727   004518  6E2C               	movwf	(??_turnLeft+2)^0,c
 10728   00451A  5030               	movf	(turnLeft@cur_power+1)^0,w,c
 10729   00451C  0A80               	xorlw	128
 10730   00451E  582C               	subwfb	(??_turnLeft+2)^0,w,c
 10731   004520  B0D8               	btfsc	status,0,c
 10732   004522  EF95  F022         	goto	u4041
 10733   004526  EF97  F022         	goto	u4040
 10734   00452A                     u4041:
 10735   00452A  EF3B  F022         	goto	l4801
 10736   00452E                     u4040:
 10737   00452E                     
 10738                           ;dc_motor.c: 403:     for (i=0;i<turnDuration;i++) {
 10739   00452E  0E00               	movlw	0
 10740   004530  6E2E               	movwf	(turnLeft@i+1)^0,c
 10741   004532  0E00               	movlw	0
 10742   004534  6E2D               	movwf	turnLeft@i^0,c
 10743   004536  EFA7  F022         	goto	l640
 10744   00453A                     l4819:
 10745                           
 10746                           ;dc_motor.c: 404:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10747   00453A  0E68               	movlw	104
 10748   00453C  6E2A               	movwf	??_turnLeft^0,c
 10749   00453E  0EE4               	movlw	228
 10750   004540                     u6637:
 10751   004540  2EE8               	decfsz	wreg,f,c
 10752   004542  D7FE               	bra	u6637
 10753   004544  2E2A               	decfsz	??_turnLeft^0,f,c
 10754   004546  D7FC               	bra	u6637
 10755   004548  D000               	nop2	
 10756   00454A                     
 10757                           ;dc_motor.c: 405:         }
 10758   00454A  4A2D               	infsnz	turnLeft@i^0,f,c
 10759   00454C  2A2E               	incf	(turnLeft@i+1)^0,f,c
 10760   00454E                     l640:
 10761   00454E  5028               	movf	turnLeft@turnDuration^0,w,c
 10762   004550  6E2A               	movwf	??_turnLeft^0,c
 10763   004552  6A2B               	clrf	(??_turnLeft+1)^0,c
 10764   004554  502A               	movf	??_turnLeft^0,w,c
 10765   004556  5C2D               	subwf	turnLeft@i^0,w,c
 10766   004558  502E               	movf	(turnLeft@i+1)^0,w,c
 10767   00455A  0A80               	xorlw	128
 10768   00455C  6E2C               	movwf	(??_turnLeft+2)^0,c
 10769   00455E  502B               	movf	(??_turnLeft+1)^0,w,c
 10770   004560  0A80               	xorlw	128
 10771   004562  582C               	subwfb	(??_turnLeft+2)^0,w,c
 10772   004564  A0D8               	btfss	status,0,c
 10773   004566  EFB7  F022         	goto	u4051
 10774   00456A  EFB9  F022         	goto	u4050
 10775   00456E                     u4051:
 10776   00456E  EF9D  F022         	goto	l4819
 10777   004572                     u4050:
 10778   004572                     
 10779                           ;dc_motor.c: 407:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 10780   004572  C027  F02F         	movff	turnLeft@turnSpeed,turnLeft@cur_power
 10781   004576  6A30               	clrf	(turnLeft@cur_power+1)^0,c
 10782   004578                     l4823:
 10783   004578  BE30               	btfsc	(turnLeft@cur_power+1)^0,7,c
 10784   00457A  EFC3  F022         	goto	u4060
 10785   00457E  EFC1  F022         	goto	u4061
 10786   004582                     u4061:
 10787   004582  EFC5  F022         	goto	l4827
 10788   004586                     u4060:
 10789   004586  EF12  F023         	goto	l648
 10790   00458A                     l4827:
 10791                           
 10792                           ;dc_motor.c: 408:         mL->power = cur_power+mL->compensation;
 10793   00458A  EE20 F009          	lfsr	2,9
 10794   00458E  5023               	movf	turnLeft@mL^0,w,c
 10795   004590  26D9               	addwf	fsr2l,f,c
 10796   004592  5024               	movf	(turnLeft@mL+1)^0,w,c
 10797   004594  22DA               	addwfc	fsr2h,f,c
 10798   004596  50DF               	movf	indf2,w,c
 10799   004598  242F               	addwf	turnLeft@cur_power^0,w,c
 10800   00459A  C023  FFD9         	movff	turnLeft@mL,fsr2l
 10801   00459E  C024  FFDA         	movff	turnLeft@mL+1,fsr2h
 10802   0045A2  6EDF               	movwf	indf2,c
 10803                           
 10804                           ;dc_motor.c: 409:         mR->power = cur_power+mR->compensation;
 10805   0045A4  EE20 F009          	lfsr	2,9
 10806   0045A8  5025               	movf	turnLeft@mR^0,w,c
 10807   0045AA  26D9               	addwf	fsr2l,f,c
 10808   0045AC  5026               	movf	(turnLeft@mR+1)^0,w,c
 10809   0045AE  22DA               	addwfc	fsr2h,f,c
 10810   0045B0  50DF               	movf	indf2,w,c
 10811   0045B2  242F               	addwf	turnLeft@cur_power^0,w,c
 10812   0045B4  C025  FFD9         	movff	turnLeft@mR,fsr2l
 10813   0045B8  C026  FFDA         	movff	turnLeft@mR+1,fsr2h
 10814   0045BC  6EDF               	movwf	indf2,c
 10815   0045BE                     
 10816                           ;dc_motor.c: 410:         setMotorPWM(mL);
 10817   0045BE  C023  F01D         	movff	turnLeft@mL,setMotorPWM@m
 10818   0045C2  C024  F01E         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10819   0045C6  EC13  F023         	call	_setMotorPWM	;wreg free
 10820   0045CA                     
 10821                           ;dc_motor.c: 411:         setMotorPWM(mR);
 10822   0045CA  C025  F01D         	movff	turnLeft@mR,setMotorPWM@m
 10823   0045CE  C026  F01E         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10824   0045D2  EC13  F023         	call	_setMotorPWM	;wreg free
 10825   0045D6                     
 10826                           ;dc_motor.c: 412:         for (i=0;i<turnRamp;i++) {
 10827   0045D6  0E00               	movlw	0
 10828   0045D8  6E2E               	movwf	(turnLeft@i+1)^0,c
 10829   0045DA  0E00               	movlw	0
 10830   0045DC  6E2D               	movwf	turnLeft@i^0,c
 10831   0045DE  EFFB  F022         	goto	l645
 10832   0045E2                     l4835:
 10833                           
 10834                           ;dc_motor.c: 413:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10835   0045E2  0E68               	movlw	104
 10836   0045E4  6E2A               	movwf	??_turnLeft^0,c
 10837   0045E6  0EE4               	movlw	228
 10838   0045E8                     u6647:
 10839   0045E8  2EE8               	decfsz	wreg,f,c
 10840   0045EA  D7FE               	bra	u6647
 10841   0045EC  2E2A               	decfsz	??_turnLeft^0,f,c
 10842   0045EE  D7FC               	bra	u6647
 10843   0045F0  D000               	nop2	
 10844   0045F2                     
 10845                           ;dc_motor.c: 414:         }
 10846   0045F2  4A2D               	infsnz	turnLeft@i^0,f,c
 10847   0045F4  2A2E               	incf	(turnLeft@i+1)^0,f,c
 10848   0045F6                     l645:
 10849   0045F6  5029               	movf	turnLeft@turnRamp^0,w,c
 10850   0045F8  6E2A               	movwf	??_turnLeft^0,c
 10851   0045FA  6A2B               	clrf	(??_turnLeft+1)^0,c
 10852   0045FC  502A               	movf	??_turnLeft^0,w,c
 10853   0045FE  5C2D               	subwf	turnLeft@i^0,w,c
 10854   004600  502E               	movf	(turnLeft@i+1)^0,w,c
 10855   004602  0A80               	xorlw	128
 10856   004604  6E2C               	movwf	(??_turnLeft+2)^0,c
 10857   004606  502B               	movf	(??_turnLeft+1)^0,w,c
 10858   004608  0A80               	xorlw	128
 10859   00460A  582C               	subwfb	(??_turnLeft+2)^0,w,c
 10860   00460C  A0D8               	btfss	status,0,c
 10861   00460E  EF0B  F023         	goto	u4071
 10862   004612  EF0D  F023         	goto	u4070
 10863   004616                     u4071:
 10864   004616  EFF1  F022         	goto	l4835
 10865   00461A                     u4070:
 10866   00461A                     
 10867                           ;dc_motor.c: 415:     }
 10868   00461A  062F               	decf	turnLeft@cur_power^0,f,c
 10869   00461C  A0D8               	btfss	status,0,c
 10870   00461E  0630               	decf	(turnLeft@cur_power+1)^0,f,c
 10871   004620  EFBC  F022         	goto	l4823
 10872   004624                     l648:
 10873   004624  0012               	return		;funcret
 10874   004626                     __end_of_turnLeft:
 10875                           	callstack 0
 10876                           
 10877 ;; *************** function _setMotorPWM *****************
 10878 ;; Defined at:
 10879 ;;		line 68 in file "dc_motor.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;  m               2   28[COMRAM] PTR struct DC_motor
 10882 ;;		 -> main@motorR(10), main@motorL(10), 
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;  negDuty         1   33[COMRAM] unsigned char 
 10885 ;;  posDuty         1   32[COMRAM] unsigned char 
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  1    wreg      void 
 10888 ;; Registers used:
 10889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10896 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10898 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10899 ;;Total ram usage:        6 bytes
 10900 ;; Hardware stack levels used: 1
 10901 ;; Hardware stack levels required when called: 6
 10902 ;; This function calls:
 10903 ;;		___lwdiv
 10904 ;;		___wmul
 10905 ;; This function is called by:
 10906 ;;		_stop
 10907 ;;		_turnLeft
 10908 ;;		_turnRight
 10909 ;;		_fullSpeedAhead
 10910 ;;		_reverseOneSquare
 10911 ;;		_wallAdjust
 10912 ;;		_reverseShort
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           
 10916                           	psect	text36
 10917   004626                     __ptext36:
 10918                           	callstack 0
 10919   004626                     _setMotorPWM:
 10920                           	callstack 23
 10921   004626                     
 10922                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 10923   004626  EE20 F002          	lfsr	2,2
 10924   00462A  501D               	movf	setMotorPWM@m^0,w,c
 10925   00462C  26D9               	addwf	fsr2l,f,c
 10926   00462E  501E               	movf	(setMotorPWM@m+1)^0,w,c
 10927   004630  22DA               	addwfc	fsr2h,f,c
 10928   004632  50DF               	movf	indf2,w,c
 10929   004634  B4D8               	btfsc	status,2,c
 10930   004636  EF1F  F023         	goto	u3881
 10931   00463A  EF21  F023         	goto	u3880
 10932   00463E                     u3881:
 10933   00463E  EF55  F023         	goto	l4655
 10934   004642                     u3880:
 10935   004642                     
 10936                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 10937   004642  C01D  FFD9         	movff	setMotorPWM@m,fsr2l
 10938   004646  C01E  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10939   00464A  50DF               	movf	indf2,w,c
 10940   00464C  6E1F               	movwf	??_setMotorPWM^0,c
 10941   00464E  501F               	movf	??_setMotorPWM^0,w,c
 10942   004650  6E10               	movwf	___wmul@multiplier^0,c
 10943   004652  6A11               	clrf	(___wmul@multiplier+1)^0,c
 10944   004654  EE20 F003          	lfsr	2,3
 10945   004658  501D               	movf	setMotorPWM@m^0,w,c
 10946   00465A  26D9               	addwf	fsr2l,f,c
 10947   00465C  501E               	movf	(setMotorPWM@m+1)^0,w,c
 10948   00465E  22DA               	addwfc	fsr2h,f,c
 10949   004660  CFDE F012          	movff	postinc2,___wmul@multiplicand
 10950   004664  CFDD F013          	movff	postdec2,___wmul@multiplicand+1
 10951   004668  ECCE  F028         	call	___wmul	;wreg free
 10952   00466C  C010  F016         	movff	?___wmul,___lwdiv@dividend
 10953   004670  C011  F017         	movff	?___wmul+1,___lwdiv@dividend+1
 10954   004674  0E00               	movlw	0
 10955   004676  6E19               	movwf	(___lwdiv@divisor+1)^0,c
 10956   004678  0E64               	movlw	100
 10957   00467A  6E18               	movwf	___lwdiv@divisor^0,c
 10958   00467C  ECE8  F026         	call	___lwdiv	;wreg free
 10959   004680  EE20 F003          	lfsr	2,3
 10960   004684  501D               	movf	setMotorPWM@m^0,w,c
 10961   004686  26D9               	addwf	fsr2l,f,c
 10962   004688  501E               	movf	(setMotorPWM@m+1)^0,w,c
 10963   00468A  22DA               	addwfc	fsr2h,f,c
 10964   00468C  50DF               	movf	indf2,w,c
 10965   00468E  6E20               	movwf	(??_setMotorPWM+1)^0,c
 10966   004690  5016               	movf	?___lwdiv^0,w,c
 10967   004692  5C20               	subwf	(??_setMotorPWM+1)^0,w,c
 10968   004694  6E21               	movwf	setMotorPWM@posDuty^0,c
 10969   004696                     
 10970                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 10971   004696  EE20 F003          	lfsr	2,3
 10972   00469A  501D               	movf	setMotorPWM@m^0,w,c
 10973   00469C  26D9               	addwf	fsr2l,f,c
 10974   00469E  501E               	movf	(setMotorPWM@m+1)^0,w,c
 10975   0046A0  22DA               	addwfc	fsr2h,f,c
 10976   0046A2  50DF               	movf	indf2,w,c
 10977   0046A4  6E22               	movwf	setMotorPWM@negDuty^0,c
 10978                           
 10979                           ;dc_motor.c: 75:     }
 10980   0046A6  EF78  F023         	goto	l4659
 10981   0046AA                     l4655:
 10982                           
 10983                           ;dc_motor.c: 77:         posDuty=0;
 10984   0046AA  0E00               	movlw	0
 10985   0046AC  6E21               	movwf	setMotorPWM@posDuty^0,c
 10986   0046AE                     
 10987                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 10988   0046AE  C01D  FFD9         	movff	setMotorPWM@m,fsr2l
 10989   0046B2  C01E  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10990   0046B6  50DF               	movf	indf2,w,c
 10991   0046B8  6E1F               	movwf	??_setMotorPWM^0,c
 10992   0046BA  501F               	movf	??_setMotorPWM^0,w,c
 10993   0046BC  6E10               	movwf	___wmul@multiplier^0,c
 10994   0046BE  6A11               	clrf	(___wmul@multiplier+1)^0,c
 10995   0046C0  EE20 F003          	lfsr	2,3
 10996   0046C4  501D               	movf	setMotorPWM@m^0,w,c
 10997   0046C6  26D9               	addwf	fsr2l,f,c
 10998   0046C8  501E               	movf	(setMotorPWM@m+1)^0,w,c
 10999   0046CA  22DA               	addwfc	fsr2h,f,c
 11000   0046CC  CFDE F012          	movff	postinc2,___wmul@multiplicand
 11001   0046D0  CFDD F013          	movff	postdec2,___wmul@multiplicand+1
 11002   0046D4  ECCE  F028         	call	___wmul	;wreg free
 11003   0046D8  C010  F016         	movff	?___wmul,___lwdiv@dividend
 11004   0046DC  C011  F017         	movff	?___wmul+1,___lwdiv@dividend+1
 11005   0046E0  0E00               	movlw	0
 11006   0046E2  6E19               	movwf	(___lwdiv@divisor+1)^0,c
 11007   0046E4  0E64               	movlw	100
 11008   0046E6  6E18               	movwf	___lwdiv@divisor^0,c
 11009   0046E8  ECE8  F026         	call	___lwdiv	;wreg free
 11010   0046EC  5016               	movf	?___lwdiv^0,w,c
 11011   0046EE  6E22               	movwf	setMotorPWM@negDuty^0,c
 11012   0046F0                     l4659:
 11013                           
 11014                           ;dc_motor.c: 81:     if (m->direction) {
 11015   0046F0  EE20 F001          	lfsr	2,1
 11016   0046F4  501D               	movf	setMotorPWM@m^0,w,c
 11017   0046F6  26D9               	addwf	fsr2l,f,c
 11018   0046F8  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11019   0046FA  22DA               	addwfc	fsr2h,f,c
 11020   0046FC  50DF               	movf	indf2,w,c
 11021   0046FE  B4D8               	btfsc	status,2,c
 11022   004700  EF84  F023         	goto	u3891
 11023   004704  EF86  F023         	goto	u3890
 11024   004708                     u3891:
 11025   004708  EFA8  F023         	goto	l4663
 11026   00470C                     u3890:
 11027   00470C                     
 11028                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 11029   00470C  EE20 F005          	lfsr	2,5
 11030   004710  501D               	movf	setMotorPWM@m^0,w,c
 11031   004712  26D9               	addwf	fsr2l,f,c
 11032   004714  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11033   004716  22DA               	addwfc	fsr2h,f,c
 11034   004718  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11035   00471C  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11036   004720  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11037   004724  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11038   004728  C021  FFDF         	movff	setMotorPWM@posDuty,indf2
 11039                           
 11040                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 11041   00472C  EE20 F007          	lfsr	2,7
 11042   004730  501D               	movf	setMotorPWM@m^0,w,c
 11043   004732  26D9               	addwf	fsr2l,f,c
 11044   004734  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11045   004736  22DA               	addwfc	fsr2h,f,c
 11046   004738  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11047   00473C  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11048   004740  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11049   004744  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11050   004748  C022  FFDF         	movff	setMotorPWM@negDuty,indf2
 11051                           
 11052                           ;dc_motor.c: 84:     } else {
 11053   00474C  EFC8  F023         	goto	l554
 11054   004750                     l4663:
 11055                           
 11056                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
 11057   004750  EE20 F005          	lfsr	2,5
 11058   004754  501D               	movf	setMotorPWM@m^0,w,c
 11059   004756  26D9               	addwf	fsr2l,f,c
 11060   004758  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11061   00475A  22DA               	addwfc	fsr2h,f,c
 11062   00475C  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11063   004760  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11064   004764  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11065   004768  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11066   00476C  C022  FFDF         	movff	setMotorPWM@negDuty,indf2
 11067                           
 11068                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
 11069   004770  EE20 F007          	lfsr	2,7
 11070   004774  501D               	movf	setMotorPWM@m^0,w,c
 11071   004776  26D9               	addwf	fsr2l,f,c
 11072   004778  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11073   00477A  22DA               	addwfc	fsr2h,f,c
 11074   00477C  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11075   004780  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11076   004784  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11077   004788  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11078   00478C  C021  FFDF         	movff	setMotorPWM@posDuty,indf2
 11079   004790                     l554:
 11080   004790  0012               	return		;funcret
 11081   004792                     __end_of_setMotorPWM:
 11082                           	callstack 0
 11083                           
 11084 ;; *************** function ___wmul *****************
 11085 ;; Defined at:
 11086 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;  multiplier      2   15[COMRAM] unsigned int 
 11089 ;;  multiplicand    2   17[COMRAM] unsigned int 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;  product         2   19[COMRAM] unsigned int 
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  2   15[COMRAM] unsigned int 
 11094 ;; Registers used:
 11095 ;;		wreg, status,2, status,0, prodl, prodh
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11102 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11104 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11105 ;;Total ram usage:        6 bytes
 11106 ;; Hardware stack levels used: 1
 11107 ;; Hardware stack levels required when called: 5
 11108 ;; This function calls:
 11109 ;;		Nothing
 11110 ;; This function is called by:
 11111 ;;		_setMotorPWM
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           	psect	text37
 11116   00519C                     __ptext37:
 11117                           	callstack 0
 11118   00519C                     ___wmul:
 11119                           	callstack 23
 11120   00519C  5010               	movf	___wmul@multiplier^0,w,c
 11121   00519E  0212               	mulwf	___wmul@multiplicand^0,c
 11122   0051A0  CFF3 F014          	movff	prodl,___wmul@product
 11123   0051A4  CFF4 F015          	movff	prodh,___wmul@product+1
 11124   0051A8  5010               	movf	___wmul@multiplier^0,w,c
 11125   0051AA  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 11126   0051AC  50F3               	movf	243,w,c
 11127   0051AE  2615               	addwf	(___wmul@product+1)^0,f,c
 11128   0051B0  5011               	movf	(___wmul@multiplier+1)^0,w,c
 11129   0051B2  0212               	mulwf	___wmul@multiplicand^0,c
 11130   0051B4  50F3               	movf	243,w,c
 11131   0051B6  2615               	addwf	(___wmul@product+1)^0,f,c
 11132   0051B8  C014  F010         	movff	___wmul@product,?___wmul
 11133   0051BC  C015  F011         	movff	___wmul@product+1,?___wmul+1
 11134   0051C0  0012               	return		;funcret
 11135   0051C2                     __end_of___wmul:
 11136                           	callstack 0
 11137                           
 11138 ;; *************** function ___lwdiv *****************
 11139 ;; Defined at:
 11140 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 11141 ;; Parameters:    Size  Location     Type
 11142 ;;  dividend        2   21[COMRAM] unsigned int 
 11143 ;;  divisor         2   23[COMRAM] unsigned int 
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;  quotient        2   26[COMRAM] unsigned int 
 11146 ;;  counter         1   25[COMRAM] unsigned char 
 11147 ;; Return value:  Size  Location     Type
 11148 ;;                  2   21[COMRAM] unsigned int 
 11149 ;; Registers used:
 11150 ;;		wreg, status,2, status,0
 11151 ;; Tracked objects:
 11152 ;;		On entry : 0/0
 11153 ;;		On exit  : 0/0
 11154 ;;		Unchanged: 0/0
 11155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11157 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11159 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11160 ;;Total ram usage:        7 bytes
 11161 ;; Hardware stack levels used: 1
 11162 ;; Hardware stack levels required when called: 5
 11163 ;; This function calls:
 11164 ;;		Nothing
 11165 ;; This function is called by:
 11166 ;;		_color_clear_init_interrupts
 11167 ;;		_setMotorPWM
 11168 ;; This function uses a non-reentrant model
 11169 ;;
 11170                           
 11171                           	psect	text38
 11172   004DD0                     __ptext38:
 11173                           	callstack 0
 11174   004DD0                     ___lwdiv:
 11175                           	callstack 23
 11176   004DD0  0E00               	movlw	0
 11177   004DD2  6E1C               	movwf	(___lwdiv@quotient+1)^0,c
 11178   004DD4  0E00               	movlw	0
 11179   004DD6  6E1B               	movwf	___lwdiv@quotient^0,c
 11180   004DD8  5018               	movf	___lwdiv@divisor^0,w,c
 11181   004DDA  1019               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11182   004DDC  B4D8               	btfsc	status,2,c
 11183   004DDE  EFF3  F026         	goto	u3851
 11184   004DE2  EFF5  F026         	goto	u3850
 11185   004DE6                     u3851:
 11186   004DE6  EF1D  F027         	goto	l1265
 11187   004DEA                     u3850:
 11188   004DEA  0E01               	movlw	1
 11189   004DEC  6E1A               	movwf	___lwdiv@counter^0,c
 11190   004DEE  EFFD  F026         	goto	l4623
 11191   004DF2                     l4621:
 11192   004DF2  90D8               	bcf	status,0,c
 11193   004DF4  3618               	rlcf	___lwdiv@divisor^0,f,c
 11194   004DF6  3619               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11195   004DF8  2A1A               	incf	___lwdiv@counter^0,f,c
 11196   004DFA                     l4623:
 11197   004DFA  AE19               	btfss	(___lwdiv@divisor+1)^0,7,c
 11198   004DFC  EF02  F027         	goto	u3861
 11199   004E00  EF04  F027         	goto	u3860
 11200   004E04                     u3861:
 11201   004E04  EFF9  F026         	goto	l4621
 11202   004E08                     u3860:
 11203   004E08                     l4625:
 11204   004E08  90D8               	bcf	status,0,c
 11205   004E0A  361B               	rlcf	___lwdiv@quotient^0,f,c
 11206   004E0C  361C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11207   004E0E  5018               	movf	___lwdiv@divisor^0,w,c
 11208   004E10  5C16               	subwf	___lwdiv@dividend^0,w,c
 11209   004E12  5019               	movf	(___lwdiv@divisor+1)^0,w,c
 11210   004E14  5817               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11211   004E16  A0D8               	btfss	status,0,c
 11212   004E18  EF10  F027         	goto	u3871
 11213   004E1C  EF12  F027         	goto	u3870
 11214   004E20                     u3871:
 11215   004E20  EF17  F027         	goto	l4633
 11216   004E24                     u3870:
 11217   004E24  5018               	movf	___lwdiv@divisor^0,w,c
 11218   004E26  5E16               	subwf	___lwdiv@dividend^0,f,c
 11219   004E28  5019               	movf	(___lwdiv@divisor+1)^0,w,c
 11220   004E2A  5A17               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11221   004E2C  801B               	bsf	___lwdiv@quotient^0,0,c
 11222   004E2E                     l4633:
 11223   004E2E  90D8               	bcf	status,0,c
 11224   004E30  3219               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11225   004E32  3218               	rrcf	___lwdiv@divisor^0,f,c
 11226   004E34  2E1A               	decfsz	___lwdiv@counter^0,f,c
 11227   004E36  EF04  F027         	goto	l4625
 11228   004E3A                     l1265:
 11229   004E3A  C01B  F016         	movff	___lwdiv@quotient,?___lwdiv
 11230   004E3E  C01C  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11231   004E42  0012               	return		;funcret
 11232   004E44                     __end_of___lwdiv:
 11233                           	callstack 0
 11234                           
 11235 ;; *************** function _batteryLevel *****************
 11236 ;; Defined at:
 11237 ;;		line 6 in file "battery.c"
 11238 ;; Parameters:    Size  Location     Type
 11239 ;;		None
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;  batteryQuart    1   24[COMRAM] unsigned char 
 11242 ;;  batteryVolta    1   23[COMRAM] unsigned char 
 11243 ;; Return value:  Size  Location     Type
 11244 ;;                  1    wreg      void 
 11245 ;; Registers used:
 11246 ;;		wreg, status,2, status,0, cstack
 11247 ;; Tracked objects:
 11248 ;;		On entry : 0/0
 11249 ;;		On exit  : 0/0
 11250 ;;		Unchanged: 0/0
 11251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11253 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11256 ;;Total ram usage:        2 bytes
 11257 ;; Hardware stack levels used: 1
 11258 ;; Hardware stack levels required when called: 6
 11259 ;; This function calls:
 11260 ;;		_ADC_getval
 11261 ;;		_ADC_init
 11262 ;;		___awdiv
 11263 ;; This function is called by:
 11264 ;;		_main
 11265 ;; This function uses a non-reentrant model
 11266 ;;
 11267                           
 11268                           	psect	text39
 11269   004F78                     __ptext39:
 11270                           	callstack 0
 11271   004F78                     _batteryLevel:
 11272                           	callstack 24
 11273   004F78                     
 11274                           ;battery.c: 7:     ADC_init();
 11275   004F78  EC45  F029         	call	_ADC_init	;wreg free
 11276                           
 11277                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
 11278   004F7C  EC52  F029         	call	_ADC_getval	;wreg free
 11279   004F80  6E18               	movwf	batteryLevel@batteryVoltage^0,c
 11280   004F82                     
 11281                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
 11282   004F82  C018  F010         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
 11283   004F86  6A11               	clrf	(___awdiv@dividend+1)^0,c
 11284   004F88  0E00               	movlw	0
 11285   004F8A  6E13               	movwf	(___awdiv@divisor+1)^0,c
 11286   004F8C  0E18               	movlw	24
 11287   004F8E  6E12               	movwf	___awdiv@divisor^0,c
 11288   004F90  EC46  F025         	call	___awdiv	;wreg free
 11289   004F94  5010               	movf	?___awdiv^0,w,c
 11290   004F96  6E19               	movwf	batteryLevel@batteryQuarter^0,c
 11291   004F98                     
 11292                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
 11293   004F98  A219               	btfss	batteryLevel@batteryQuarter^0,1,c
 11294   004F9A  EFD1  F027         	goto	u4541
 11295   004F9E  EFD3  F027         	goto	u4540
 11296   004FA2                     u4541:
 11297   004FA2  EFD6  F027         	goto	l466
 11298   004FA6                     u4540:
 11299   004FA6  8E7C               	bsf	124,7,c	;volatile
 11300   004FA8  EFD7  F027         	goto	l467
 11301   004FAC                     l466:
 11302   004FAC  9E7C               	bcf	124,7,c	;volatile
 11303   004FAE                     l467:
 11304                           
 11305                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
 11306   004FAE  A019               	btfss	batteryLevel@batteryQuarter^0,0,c
 11307   004FB0  EFDC  F027         	goto	u4551
 11308   004FB4  EFDE  F027         	goto	u4550
 11309   004FB8                     u4551:
 11310   004FB8  EFE1  F027         	goto	l468
 11311   004FBC                     u4550:
 11312   004FBC  8680               	bsf	128,3,c	;volatile
 11313   004FBE  EFE2  F027         	goto	l470
 11314   004FC2                     l468:
 11315   004FC2  9680               	bcf	128,3,c	;volatile
 11316   004FC4                     l470:
 11317   004FC4  0012               	return		;funcret
 11318   004FC6                     __end_of_batteryLevel:
 11319                           	callstack 0
 11320                           
 11321 ;; *************** function ___awdiv *****************
 11322 ;; Defined at:
 11323 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 11324 ;; Parameters:    Size  Location     Type
 11325 ;;  dividend        2   15[COMRAM] int 
 11326 ;;  divisor         2   17[COMRAM] int 
 11327 ;; Auto vars:     Size  Location     Type
 11328 ;;  quotient        2   21[COMRAM] int 
 11329 ;;  sign            1   20[COMRAM] unsigned char 
 11330 ;;  counter         1   19[COMRAM] unsigned char 
 11331 ;; Return value:  Size  Location     Type
 11332 ;;                  2   15[COMRAM] int 
 11333 ;; Registers used:
 11334 ;;		wreg, status,2, status,0
 11335 ;; Tracked objects:
 11336 ;;		On entry : 0/0
 11337 ;;		On exit  : 0/0
 11338 ;;		Unchanged: 0/0
 11339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11341 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11343 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11344 ;;Total ram usage:        8 bytes
 11345 ;; Hardware stack levels used: 1
 11346 ;; Hardware stack levels required when called: 5
 11347 ;; This function calls:
 11348 ;;		Nothing
 11349 ;; This function is called by:
 11350 ;;		_batteryLevel
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           	psect	text40
 11355   004A8C                     __ptext40:
 11356                           	callstack 0
 11357   004A8C                     ___awdiv:
 11358                           	callstack 24
 11359   004A8C  0E00               	movlw	0
 11360   004A8E  6E15               	movwf	___awdiv@sign^0,c
 11361   004A90  BE13               	btfsc	(___awdiv@divisor+1)^0,7,c
 11362   004A92  EF4F  F025         	goto	u4480
 11363   004A96  EF4D  F025         	goto	u4481
 11364   004A9A                     u4481:
 11365   004A9A  EF55  F025         	goto	l5229
 11366   004A9E                     u4480:
 11367   004A9E  6C12               	negf	___awdiv@divisor^0,c
 11368   004AA0  1E13               	comf	(___awdiv@divisor+1)^0,f,c
 11369   004AA2  B0D8               	btfsc	status,0,c
 11370   004AA4  2A13               	incf	(___awdiv@divisor+1)^0,f,c
 11371   004AA6  0E01               	movlw	1
 11372   004AA8  6E15               	movwf	___awdiv@sign^0,c
 11373   004AAA                     l5229:
 11374   004AAA  BE11               	btfsc	(___awdiv@dividend+1)^0,7,c
 11375   004AAC  EF5C  F025         	goto	u4490
 11376   004AB0  EF5A  F025         	goto	u4491
 11377   004AB4                     u4491:
 11378   004AB4  EF62  F025         	goto	l5235
 11379   004AB8                     u4490:
 11380   004AB8  6C10               	negf	___awdiv@dividend^0,c
 11381   004ABA  1E11               	comf	(___awdiv@dividend+1)^0,f,c
 11382   004ABC  B0D8               	btfsc	status,0,c
 11383   004ABE  2A11               	incf	(___awdiv@dividend+1)^0,f,c
 11384   004AC0  0E01               	movlw	1
 11385   004AC2  1A15               	xorwf	___awdiv@sign^0,f,c
 11386   004AC4                     l5235:
 11387   004AC4  0E00               	movlw	0
 11388   004AC6  6E17               	movwf	(___awdiv@quotient+1)^0,c
 11389   004AC8  0E00               	movlw	0
 11390   004ACA  6E16               	movwf	___awdiv@quotient^0,c
 11391   004ACC  5012               	movf	___awdiv@divisor^0,w,c
 11392   004ACE  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
 11393   004AD0  B4D8               	btfsc	status,2,c
 11394   004AD2  EF6D  F025         	goto	u4501
 11395   004AD6  EF6F  F025         	goto	u4500
 11396   004ADA                     u4501:
 11397   004ADA  EF97  F025         	goto	l5257
 11398   004ADE                     u4500:
 11399   004ADE  0E01               	movlw	1
 11400   004AE0  6E14               	movwf	___awdiv@counter^0,c
 11401   004AE2  EF77  F025         	goto	l5243
 11402   004AE6                     l5241:
 11403   004AE6  90D8               	bcf	status,0,c
 11404   004AE8  3612               	rlcf	___awdiv@divisor^0,f,c
 11405   004AEA  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
 11406   004AEC  2A14               	incf	___awdiv@counter^0,f,c
 11407   004AEE                     l5243:
 11408   004AEE  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
 11409   004AF0  EF7C  F025         	goto	u4511
 11410   004AF4  EF7E  F025         	goto	u4510
 11411   004AF8                     u4511:
 11412   004AF8  EF73  F025         	goto	l5241
 11413   004AFC                     u4510:
 11414   004AFC                     l5245:
 11415   004AFC  90D8               	bcf	status,0,c
 11416   004AFE  3616               	rlcf	___awdiv@quotient^0,f,c
 11417   004B00  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
 11418   004B02  5012               	movf	___awdiv@divisor^0,w,c
 11419   004B04  5C10               	subwf	___awdiv@dividend^0,w,c
 11420   004B06  5013               	movf	(___awdiv@divisor+1)^0,w,c
 11421   004B08  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
 11422   004B0A  A0D8               	btfss	status,0,c
 11423   004B0C  EF8A  F025         	goto	u4521
 11424   004B10  EF8C  F025         	goto	u4520
 11425   004B14                     u4521:
 11426   004B14  EF91  F025         	goto	l5253
 11427   004B18                     u4520:
 11428   004B18  5012               	movf	___awdiv@divisor^0,w,c
 11429   004B1A  5E10               	subwf	___awdiv@dividend^0,f,c
 11430   004B1C  5013               	movf	(___awdiv@divisor+1)^0,w,c
 11431   004B1E  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
 11432   004B20  8016               	bsf	___awdiv@quotient^0,0,c
 11433   004B22                     l5253:
 11434   004B22  90D8               	bcf	status,0,c
 11435   004B24  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
 11436   004B26  3212               	rrcf	___awdiv@divisor^0,f,c
 11437   004B28  2E14               	decfsz	___awdiv@counter^0,f,c
 11438   004B2A  EF7E  F025         	goto	l5245
 11439   004B2E                     l5257:
 11440   004B2E  5015               	movf	___awdiv@sign^0,w,c
 11441   004B30  B4D8               	btfsc	status,2,c
 11442   004B32  EF9D  F025         	goto	u4531
 11443   004B36  EF9F  F025         	goto	u4530
 11444   004B3A                     u4531:
 11445   004B3A  EFA3  F025         	goto	l5261
 11446   004B3E                     u4530:
 11447   004B3E  6C16               	negf	___awdiv@quotient^0,c
 11448   004B40  1E17               	comf	(___awdiv@quotient+1)^0,f,c
 11449   004B42  B0D8               	btfsc	status,0,c
 11450   004B44  2A17               	incf	(___awdiv@quotient+1)^0,f,c
 11451   004B46                     l5261:
 11452   004B46  C016  F010         	movff	___awdiv@quotient,?___awdiv
 11453   004B4A  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
 11454   004B4E  0012               	return		;funcret
 11455   004B50                     __end_of___awdiv:
 11456                           	callstack 0
 11457                           
 11458 ;; *************** function _ADC_init *****************
 11459 ;; Defined at:
 11460 ;;		line 9 in file "ADC.c"
 11461 ;; Parameters:    Size  Location     Type
 11462 ;;		None
 11463 ;; Auto vars:     Size  Location     Type
 11464 ;;		None
 11465 ;; Return value:  Size  Location     Type
 11466 ;;                  1    wreg      void 
 11467 ;; Registers used:
 11468 ;;		wreg, status,2
 11469 ;; Tracked objects:
 11470 ;;		On entry : 0/0
 11471 ;;		On exit  : 0/0
 11472 ;;		Unchanged: 0/0
 11473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11478 ;;Total ram usage:        0 bytes
 11479 ;; Hardware stack levels used: 1
 11480 ;; Hardware stack levels required when called: 5
 11481 ;; This function calls:
 11482 ;;		Nothing
 11483 ;; This function is called by:
 11484 ;;		_batteryLevel
 11485 ;; This function uses a non-reentrant model
 11486 ;;
 11487                           
 11488                           	psect	text41
 11489   00528A                     __ptext41:
 11490                           	callstack 0
 11491   00528A                     _ADC_init:
 11492                           	callstack 24
 11493   00528A                     
 11494                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 11495   00528A  8C86               	bsf	134,6,c	;volatile
 11496                           
 11497                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 11498   00528C  010E               	movlb	14	; () banked
 11499   00528E  8DB4               	bsf	180,6,b	;volatile
 11500                           
 11501                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 11502   005290  010F               	movlb	15	; () banked
 11503   005292  9958               	bcf	88,4,b	;volatile
 11504   005294                     
 11505                           ; BSR set to: 15
 11506                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 11507   005294  0EFC               	movlw	-4
 11508   005296  1758               	andwf	88,f,b	;volatile
 11509                           
 11510                           ;ADC.c: 17:     ADPCH=0b101110;
 11511   005298  0E2E               	movlw	46
 11512   00529A  6F5F               	movwf	95,b	;volatile
 11513   00529C                     
 11514                           ; BSR set to: 15
 11515                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 11516   00529C  9460               	bcf	96,2,c	;volatile
 11517   00529E                     
 11518                           ; BSR set to: 15
 11519                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 11520   00529E  8860               	bsf	96,4,c	;volatile
 11521   0052A0                     
 11522                           ; BSR set to: 15
 11523                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 11524   0052A0  8E60               	bsf	96,7,c	;volatile
 11525   0052A2                     
 11526                           ; BSR set to: 15
 11527   0052A2  0012               	return		;funcret
 11528   0052A4                     __end_of_ADC_init:
 11529                           	callstack 0
 11530                           
 11531 ;; *************** function _ADC_getval *****************
 11532 ;; Defined at:
 11533 ;;		line 23 in file "ADC.c"
 11534 ;; Parameters:    Size  Location     Type
 11535 ;;		None
 11536 ;; Auto vars:     Size  Location     Type
 11537 ;;  tmpval          1   15[COMRAM] unsigned char 
 11538 ;; Return value:  Size  Location     Type
 11539 ;;                  1    wreg      unsigned char 
 11540 ;; Registers used:
 11541 ;;		wreg, status,2
 11542 ;; Tracked objects:
 11543 ;;		On entry : 0/0
 11544 ;;		On exit  : 0/0
 11545 ;;		Unchanged: 0/0
 11546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11551 ;;Total ram usage:        1 bytes
 11552 ;; Hardware stack levels used: 1
 11553 ;; Hardware stack levels required when called: 5
 11554 ;; This function calls:
 11555 ;;		Nothing
 11556 ;; This function is called by:
 11557 ;;		_batteryLevel
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           	psect	text42
 11562   0052A4                     __ptext42:
 11563                           	callstack 0
 11564   0052A4                     _ADC_getval:
 11565                           	callstack 24
 11566   0052A4                     
 11567                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
 11568   0052A4  8060               	bsf	96,0,c	;volatile
 11569   0052A6                     l452:
 11570   0052A6  B060               	btfsc	96,0,c	;volatile
 11571   0052A8  EF58  F029         	goto	u4321
 11572   0052AC  EF5A  F029         	goto	u4320
 11573   0052B0                     u4321:
 11574   0052B0  EF53  F029         	goto	l452
 11575   0052B4                     u4320:
 11576   0052B4                     
 11577                           ;ADC.c: 31:     tmpval = ADRESH;
 11578   0052B4  CF64 F010          	movff	3940,ADC_getval@tmpval	;volatile
 11579   0052B8                     
 11580                           ;ADC.c: 35:     return tmpval;
 11581   0052B8  5010               	movf	ADC_getval@tmpval^0,w,c
 11582   0052BA  0012               	return		;funcret
 11583   0052BC                     __end_of_ADC_getval:
 11584                           	callstack 0
 11585                           
 11586 ;; *************** function _Timer0_init *****************
 11587 ;; Defined at:
 11588 ;;		line 7 in file "timers.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;		None
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;		None
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  1    wreg      void 
 11595 ;; Registers used:
 11596 ;;		wreg, status,2
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11606 ;;Total ram usage:        0 bytes
 11607 ;; Hardware stack levels used: 1
 11608 ;; Hardware stack levels required when called: 5
 11609 ;; This function calls:
 11610 ;;		Nothing
 11611 ;; This function is called by:
 11612 ;;		_main
 11613 ;; This function uses a non-reentrant model
 11614 ;;
 11615                           
 11616                           	psect	text43
 11617   00522C                     __ptext43:
 11618                           	callstack 0
 11619   00522C                     _Timer0_init:
 11620                           	callstack 25
 11621   00522C                     
 11622                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 11623   00522C  50D6               	movf	214,w,c	;volatile
 11624   00522E  0B1F               	andlw	-225
 11625   005230  0940               	iorlw	64
 11626   005232  6ED6               	movwf	214,c	;volatile
 11627   005234                     
 11628                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 11629   005234  88D6               	bsf	214,4,c	;volatile
 11630                           
 11631                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
 11632   005236  50D6               	movf	214,w,c	;volatile
 11633   005238  0BF0               	andlw	-16
 11634   00523A  090B               	iorlw	11
 11635   00523C  6ED6               	movwf	214,c	;volatile
 11636   00523E                     
 11637                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 11638   00523E  88D5               	bsf	213,4,c	;volatile
 11639                           
 11640                           ;timers.c: 15:     TMR0H=0;
 11641   005240  0E00               	movlw	0
 11642   005242  6ED4               	movwf	212,c	;volatile
 11643                           
 11644                           ;timers.c: 16:     TMR0L=0;
 11645   005244  0E00               	movlw	0
 11646   005246  6ED3               	movwf	211,c	;volatile
 11647   005248                     
 11648                           ;timers.c: 17:     T0CON0bits.T0EN=1;
 11649   005248  8ED5               	bsf	213,7,c	;volatile
 11650   00524A  0012               	return		;funcret
 11651   00524C                     __end_of_Timer0_init:
 11652                           	callstack 0
 11653                           
 11654 ;; *************** function _Interrupts_init *****************
 11655 ;; Defined at:
 11656 ;;		line 11 in file "interrupts.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;		None
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;		None
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1    wreg      void 
 11663 ;; Registers used:
 11664 ;;		None
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11674 ;;Total ram usage:        0 bytes
 11675 ;; Hardware stack levels used: 1
 11676 ;; Hardware stack levels required when called: 5
 11677 ;; This function calls:
 11678 ;;		Nothing
 11679 ;; This function is called by:
 11680 ;;		_main
 11681 ;; This function uses a non-reentrant model
 11682 ;;
 11683                           
 11684                           	psect	text44
 11685   0052D4                     __ptext44:
 11686                           	callstack 0
 11687   0052D4                     _Interrupts_init:
 11688                           	callstack 25
 11689   0052D4                     
 11690                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
 11691   0052D4  8082               	bsf	130,0,c	;volatile
 11692                           
 11693                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
 11694   0052D6  010E               	movlb	14	; () banked
 11695   0052D8  919A               	bcf	154,0,b	;volatile
 11696                           
 11697                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
 11698   0052DA  8129               	bsf	41,0,b	;volatile
 11699                           
 11700                           ;interrupts.c: 17:     IPR0bits.INT0IP = 1;
 11701   0052DC  811F               	bsf	31,0,b	;volatile
 11702                           
 11703                           ;interrupts.c: 18:     INTCONbits.INT0EDG = 0;
 11704   0052DE  90F2               	bcf	242,0,c	;volatile
 11705                           
 11706                           ;interrupts.c: 22:     TMR0IE=1;
 11707   0052E0  8B29               	bsf	41,5,b	;volatile
 11708                           
 11709                           ;interrupts.c: 23:     PIE4bits.RC4IE=1;
 11710   0052E2  872D               	bsf	45,3,b	;volatile
 11711                           
 11712                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
 11713   0052E4  8CF2               	bsf	242,6,c	;volatile
 11714                           
 11715                           ;interrupts.c: 25:     INTCONbits.GIE=1;
 11716   0052E6  8EF2               	bsf	242,7,c	;volatile
 11717   0052E8                     
 11718                           ; BSR set to: 14
 11719   0052E8  0012               	return		;funcret
 11720   0052EA                     __end_of_Interrupts_init:
 11721                           	callstack 0
 11722                           
 11723 ;; *************** function _Buggy_init *****************
 11724 ;; Defined at:
 11725 ;;		line 7 in file "buggysetup.c"
 11726 ;; Parameters:    Size  Location     Type
 11727 ;;		None
 11728 ;; Auto vars:     Size  Location     Type
 11729 ;;		None
 11730 ;; Return value:  Size  Location     Type
 11731 ;;                  1    wreg      void 
 11732 ;; Registers used:
 11733 ;;		None
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 0/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11743 ;;Total ram usage:        0 bytes
 11744 ;; Hardware stack levels used: 1
 11745 ;; Hardware stack levels required when called: 5
 11746 ;; This function calls:
 11747 ;;		Nothing
 11748 ;; This function is called by:
 11749 ;;		_main
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           	psect	text45
 11754   005040                     __ptext45:
 11755                           	callstack 0
 11756   005040                     _Buggy_init:
 11757                           	callstack 25
 11758   005040                     
 11759                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
 11760   005040  9E7C               	bcf	124,7,c	;volatile
 11761                           
 11762                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
 11763   005042  9E84               	bcf	132,7,c	;volatile
 11764                           
 11765                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
 11766   005044  9680               	bcf	128,3,c	;volatile
 11767                           
 11768                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
 11769   005046  9688               	bcf	136,3,c	;volatile
 11770                           
 11771                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
 11772   005048  8486               	bsf	134,2,c	;volatile
 11773                           
 11774                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
 11775   00504A  010E               	movlb	14	; () banked
 11776   00504C  95B4               	bcf	180,2,b	;volatile
 11777                           
 11778                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
 11779   00504E  8686               	bsf	134,3,c	;volatile
 11780                           
 11781                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
 11782   005050  97B4               	bcf	180,3,b	;volatile
 11783                           
 11784                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
 11785   005052  9280               	bcf	128,1,c	;volatile
 11786                           
 11787                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
 11788   005054  9288               	bcf	136,1,c	;volatile
 11789                           
 11790                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
 11791   005056  987C               	bcf	124,4,c	;volatile
 11792                           
 11793                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
 11794   005058  9884               	bcf	132,4,c	;volatile
 11795                           
 11796                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
 11797   00505A  967C               	bcf	124,3,c	;volatile
 11798                           
 11799                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
 11800   00505C  9684               	bcf	132,3,c	;volatile
 11801                           
 11802                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
 11803   00505E  97A7               	bcf	167,3,b	;volatile
 11804                           
 11805                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
 11806   005060  9080               	bcf	128,0,c	;volatile
 11807                           
 11808                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
 11809   005062  9088               	bcf	136,0,c	;volatile
 11810                           
 11811                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
 11812   005064  907E               	bcf	126,0,c	;volatile
 11813                           
 11814                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
 11815   005066  9086               	bcf	134,0,c	;volatile
 11816                           
 11817                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
 11818   005068  907F               	bcf	127,0,c	;volatile
 11819                           
 11820                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
 11821   00506A  9087               	bcf	135,0,c	;volatile
 11822                           
 11823                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
 11824   00506C  9E7D               	bcf	125,7,c	;volatile
 11825                           
 11826                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
 11827   00506E  9E85               	bcf	133,7,c	;volatile
 11828                           
 11829                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
 11830   005070  9679               	bcf	121,3,c	;volatile
 11831                           
 11832                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
 11833   005072  9681               	bcf	129,3,c	;volatile
 11834   005074                     
 11835                           ; BSR set to: 14
 11836   005074  0012               	return		;funcret
 11837   005076                     __end_of_Buggy_init:
 11838                           	callstack 0
 11839                           
 11840 ;; *************** function _HighISR *****************
 11841 ;; Defined at:
 11842 ;;		line 33 in file "interrupts.c"
 11843 ;; Parameters:    Size  Location     Type
 11844 ;;		None
 11845 ;; Auto vars:     Size  Location     Type
 11846 ;;		None
 11847 ;; Return value:  Size  Location     Type
 11848 ;;                  1    wreg      void 
 11849 ;; Registers used:
 11850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11851 ;; Tracked objects:
 11852 ;;		On entry : 0/0
 11853 ;;		On exit  : 0/0
 11854 ;;		Unchanged: 0/0
 11855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11858 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11859 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11860 ;;Total ram usage:        3 bytes
 11861 ;; Hardware stack levels used: 1
 11862 ;; Hardware stack levels required when called: 4
 11863 ;; This function calls:
 11864 ;;		_getCharFromTxBuf
 11865 ;;		_isDataInTxBuf
 11866 ;;		_putCharToRxBuf
 11867 ;;		i2_color_clear_init_interrupts
 11868 ;; This function is called by:
 11869 ;;		Interrupt level 2
 11870 ;; This function uses a non-reentrant model
 11871 ;;
 11872                           
 11873                           	psect	intcode
 11874   000008                     __pintcode:
 11875                           	callstack 0
 11876   000008                     _HighISR:
 11877                           	callstack 21
 11878                           
 11879                           ; BSR set to: 14
 11880                           ;incstack = 0
 11881   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11882   00000A  CFD9 F00E          	movff	fsr2l,??_HighISR+1
 11883   00000E  CFDA F00F          	movff	fsr2h,??_HighISR+2
 11884   000012                     
 11885                           ;interrupts.c: 37:     if(PIR0bits.INT0IF){
 11886   000012  010E               	movlb	14	; () banked
 11887   000014  A133               	btfss	51,0,b	;volatile
 11888   000016  EF0F  F000         	goto	i2u373_41
 11889   00001A  EF11  F000         	goto	i2u373_40
 11890   00001E                     i2u373_41:
 11891   00001E  EF2A  F000         	goto	i2l4565
 11892   000022                     i2u373_40:
 11893   000022                     
 11894                           ; BSR set to: 14
 11895                           ;interrupts.c: 38:         brightnessChange = 1;
 11896   000022  0E01               	movlw	1
 11897   000024  0100               	movlb	0	; () banked
 11898   000026  6FF3               	movwf	_brightnessChange& (0+255),b
 11899   000028                     
 11900                           ; BSR set to: 0
 11901                           ;interrupts.c: 39:         color_clear_init_interrupts();
 11902   000028  ECFB  F025         	call	i2_color_clear_init_interrupts	;wreg free
 11903   00002C                     
 11904                           ;interrupts.c: 40:         PIR0bits.INT0IF = 0;
 11905   00002C  010E               	movlb	14	; () banked
 11906   00002E  9133               	bcf	51,0,b	;volatile
 11907   000030                     
 11908                           ; BSR set to: 14
 11909                           ;interrupts.c: 42:         LATHbits.LATH3 = !LATHbits.LATH3;
 11910   000030  A680               	btfss	128,3,c	;volatile
 11911   000032  EF1D  F000         	goto	i2u374_41
 11912   000036  EF21  F000         	goto	i2u374_40
 11913   00003A                     i2u374_41:
 11914   00003A  6A0D               	clrf	??_HighISR^0,c
 11915   00003C  2A0D               	incf	??_HighISR^0,f,c
 11916   00003E  EF22  F000         	goto	i2u375_48
 11917   000042                     i2u374_40:
 11918   000042  6A0D               	clrf	??_HighISR^0,c
 11919   000044                     i2u375_48:
 11920   000044  460D               	rlncf	??_HighISR^0,f,c
 11921   000046  460D               	rlncf	??_HighISR^0,f,c
 11922   000048  460D               	rlncf	??_HighISR^0,f,c
 11923   00004A  5080               	movf	128,w,c	;volatile
 11924   00004C  180D               	xorwf	??_HighISR^0,w,c
 11925   00004E  0BF7               	andlw	-9
 11926   000050  180D               	xorwf	??_HighISR^0,w,c
 11927   000052  6E80               	movwf	128,c	;volatile
 11928   000054                     i2l4565:
 11929                           
 11930                           ;interrupts.c: 47:     if(TMR0IF){
 11931   000054  010E               	movlb	14	; () banked
 11932   000056  AB33               	btfss	51,5,b	;volatile
 11933   000058  EF30  F000         	goto	i2u376_41
 11934   00005C  EF32  F000         	goto	i2u376_40
 11935   000060                     i2u376_41:
 11936   000060  EF37  F000         	goto	i2l4571
 11937   000064                     i2u376_40:
 11938   000064                     
 11939                           ; BSR set to: 14
 11940                           ;interrupts.c: 48:         lost = 1;
 11941   000064  0E01               	movlw	1
 11942   000066  0100               	movlb	0	; () banked
 11943   000068  6FF2               	movwf	_lost& (0+255),b
 11944   00006A                     
 11945                           ; BSR set to: 0
 11946                           ;interrupts.c: 49:         TMR0IF=0;
 11947   00006A  010E               	movlb	14	; () banked
 11948   00006C  9B33               	bcf	51,5,b	;volatile
 11949   00006E                     i2l4571:
 11950                           
 11951                           ; BSR set to: 14
 11952                           ;interrupts.c: 56:     if(PIR4bits.RC4IF){
 11953   00006E  A737               	btfss	55,3,b	;volatile
 11954   000070  EF3C  F000         	goto	i2u377_41
 11955   000074  EF3E  F000         	goto	i2u377_40
 11956   000078                     i2u377_41:
 11957   000078  EF41  F000         	goto	i2l4575
 11958   00007C                     i2u377_40:
 11959   00007C                     
 11960                           ; BSR set to: 14
 11961                           ;interrupts.c: 58:         putCharToRxBuf(RC4REG);
 11962   00007C  51E3               	movf	227,w,b	;volatile
 11963   00007E  ECE1  F028         	call	_putCharToRxBuf
 11964   000082                     i2l4575:
 11965                           
 11966                           ;interrupts.c: 62:     if(PIR4bits.TX4IF){
 11967   000082  010E               	movlb	14	; () banked
 11968   000084  A537               	btfss	55,2,b	;volatile
 11969   000086  EF47  F000         	goto	i2u378_41
 11970   00008A  EF49  F000         	goto	i2u378_40
 11971   00008E                     i2u378_41:
 11972   00008E  EF59  F000         	goto	i2l371
 11973   000092                     i2u378_40:
 11974   000092                     
 11975                           ; BSR set to: 14
 11976                           ;interrupts.c: 64:         TX4REG = getCharFromTxBuf();
 11977   000092  EC67  F028         	call	_getCharFromTxBuf	;wreg free
 11978   000096  010E               	movlb	14	; () banked
 11979   000098  6FE4               	movwf	228,b	;volatile
 11980   00009A                     
 11981                           ; BSR set to: 14
 11982                           ;interrupts.c: 65:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
 11983   00009A  EC5E  F029         	call	_isDataInTxBuf	;wreg free
 11984   00009E  0900               	iorlw	0
 11985   0000A0  A4D8               	btfss	status,2,c
 11986   0000A2  EF55  F000         	goto	i2u379_41
 11987   0000A6  EF57  F000         	goto	i2u379_40
 11988   0000AA                     i2u379_41:
 11989   0000AA  EF59  F000         	goto	i2l371
 11990   0000AE                     i2u379_40:
 11991   0000AE  010E               	movlb	14	; () banked
 11992   0000B0  952D               	bcf	45,2,b	;volatile
 11993   0000B2                     i2l371:
 11994   0000B2  C00F  FFDA         	movff	??_HighISR+2,fsr2h
 11995   0000B6  C00E  FFD9         	movff	??_HighISR+1,fsr2l
 11996   0000BA  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11997   0000BC  0011               	retfie		f
 11998   0000BE                     __end_of_HighISR:
 11999                           	callstack 0
 12000                           
 12001 ;; *************** function i2_color_clear_init_interrupts *****************
 12002 ;; Defined at:
 12003 ;;		line 27 in file "color.c"
 12004 ;; Parameters:    Size  Location     Type
 12005 ;;		None
 12006 ;; Auto vars:     Size  Location     Type
 12007 ;;  low_threshol    2   10[COMRAM] unsigned int 
 12008 ;;  high_thresho    2    8[COMRAM] unsigned int 
 12009 ;; Return value:  Size  Location     Type
 12010 ;;                  1    wreg      void 
 12011 ;; Registers used:
 12012 ;;		wreg, status,2, status,0, cstack
 12013 ;; Tracked objects:
 12014 ;;		On entry : 0/0
 12015 ;;		On exit  : 0/0
 12016 ;;		Unchanged: 0/0
 12017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12019 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12020 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12021 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12022 ;;Total ram usage:        5 bytes
 12023 ;; Hardware stack levels used: 1
 12024 ;; Hardware stack levels required when called: 3
 12025 ;; This function calls:
 12026 ;;		i2_I2C_2_Master_Start
 12027 ;;		i2_I2C_2_Master_Stop
 12028 ;;		i2_I2C_2_Master_Write
 12029 ;;		i2___lwdiv
 12030 ;;		i2_color_writetoaddr
 12031 ;; This function is called by:
 12032 ;;		_HighISR
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036                           	psect	text47
 12037   004BF6                     __ptext47:
 12038                           	callstack 0
 12039   004BF6                     i2_color_clear_init_interrupts:
 12040                           	callstack 21
 12041   004BF6                     
 12042                           ;color.c: 29:     I2C_2_Master_Start();
 12043   004BF6  EC9A  F029         	call	i2_I2C_2_Master_Start	;wreg free
 12044                           
 12045                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
 12046   004BFA  0E52               	movlw	82
 12047   004BFC  EC7B  F029         	call	i2_I2C_2_Master_Write
 12048                           
 12049                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
 12050   004C00  0EE6               	movlw	230
 12051   004C02  EC7B  F029         	call	i2_I2C_2_Master_Write
 12052                           
 12053                           ;color.c: 32:     I2C_2_Master_Stop();
 12054   004C06  EC95  F029         	call	i2_I2C_2_Master_Stop	;wreg free
 12055                           
 12056                           ;color.c: 38:     unsigned int high_threshold = ambient + (ambient/3);
 12057   004C0A  C0F8  F001         	movff	_ambient,i2___lwdiv@dividend
 12058   004C0E  C0F9  F002         	movff	_ambient+1,i2___lwdiv@dividend+1
 12059   004C12  0E00               	movlw	0
 12060   004C14  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 12061   004C16  0E03               	movlw	3
 12062   004C18  6E03               	movwf	i2___lwdiv@divisor^0,c
 12063   004C1A  EC22  F027         	call	i2___lwdiv	;wreg free
 12064   004C1E  0100               	movlb	0	; () banked
 12065   004C20  51F8               	movf	_ambient& (0+255),w,b
 12066   004C22  2401               	addwf	?i2___lwdiv^0,w,c
 12067   004C24  6E09               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
 12068   004C26  51F9               	movf	(_ambient+1)& (0+255),w,b
 12069   004C28  2002               	addwfc	(?i2___lwdiv+1)^0,w,c
 12070   004C2A  6E0A               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
 12071                           
 12072                           ;color.c: 39:     unsigned int low_threshold = ambient - (ambient/20);
 12073   004C2C  C0F8  F001         	movff	_ambient,i2___lwdiv@dividend
 12074   004C30  C0F9  F002         	movff	_ambient+1,i2___lwdiv@dividend+1
 12075   004C34  0E00               	movlw	0
 12076   004C36  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 12077   004C38  0E14               	movlw	20
 12078   004C3A  6E03               	movwf	i2___lwdiv@divisor^0,c
 12079   004C3C  EC22  F027         	call	i2___lwdiv	;wreg free
 12080   004C40  5001               	movf	?i2___lwdiv^0,w,c
 12081   004C42  0100               	movlb	0	; () banked
 12082   004C44  5DF8               	subwf	_ambient& (0+255),w,b
 12083   004C46  6E0B               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
 12084   004C48  5002               	movf	(?i2___lwdiv+1)^0,w,c
 12085   004C4A  59F9               	subwfb	(_ambient+1)& (0+255),w,b
 12086   004C4C  6E0C               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
 12087                           
 12088                           ;color.c: 42:  color_writetoaddr(0x00, 0x13);
 12089   004C4E  0E13               	movlw	19
 12090   004C50  6E03               	movwf	i2color_writetoaddr@value^0,c
 12091   004C52  0E00               	movlw	0
 12092   004C54  EC26  F029         	call	i2_color_writetoaddr
 12093   004C58                     
 12094                           ;color.c: 43:     _delay((unsigned long)((3)*(64000000/4000.0)));
 12095   004C58  0E3F               	movlw	63
 12096   004C5A  6E08               	movwf	??i2_color_clear_init_interrupts^0,c
 12097   004C5C  0E55               	movlw	85
 12098   004C5E                     i2u665_47:
 12099   004C5E  2EE8               	decfsz	wreg,f,c
 12100   004C60  D7FE               	bra	i2u665_47
 12101   004C62  2E08               	decfsz	??i2_color_clear_init_interrupts^0,f,c
 12102   004C64  D7FC               	bra	i2u665_47
 12103   004C66  0000               	nop	
 12104   004C68                     
 12105                           ;color.c: 44:     color_writetoaddr(0x07, (high_threshold >> 8));
 12106   004C68  500A               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
 12107   004C6A  6E03               	movwf	i2color_writetoaddr@value^0,c
 12108   004C6C  0E07               	movlw	7
 12109   004C6E  EC26  F029         	call	i2_color_writetoaddr
 12110   004C72                     
 12111                           ;color.c: 45:     color_writetoaddr(0x06, (high_threshold & 0xFF));
 12112   004C72  C009  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
 12113   004C76  0E06               	movlw	6
 12114   004C78  EC26  F029         	call	i2_color_writetoaddr
 12115   004C7C                     
 12116                           ;color.c: 46:     color_writetoaddr(0x05, (low_threshold >> 8));
 12117   004C7C  500C               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
 12118   004C7E  6E03               	movwf	i2color_writetoaddr@value^0,c
 12119   004C80  0E05               	movlw	5
 12120   004C82  EC26  F029         	call	i2_color_writetoaddr
 12121   004C86                     
 12122                           ;color.c: 47:     color_writetoaddr(0x04, (low_threshold & 0xFF));
 12123   004C86  C00B  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
 12124   004C8A  0E04               	movlw	4
 12125   004C8C  EC26  F029         	call	i2_color_writetoaddr
 12126   004C90                     
 12127                           ;color.c: 48:     color_writetoaddr(0x0C, 0b0100);
 12128   004C90  0E04               	movlw	4
 12129   004C92  6E03               	movwf	i2color_writetoaddr@value^0,c
 12130   004C94  0E0C               	movlw	12
 12131   004C96  EC26  F029         	call	i2_color_writetoaddr
 12132   004C9A  0012               	return		;funcret
 12133   004C9C                     __end_ofi2_color_clear_init_interrupts:
 12134                           	callstack 0
 12135                           
 12136 ;; *************** function i2_color_writetoaddr *****************
 12137 ;; Defined at:
 12138 ;;		line 53 in file "color.c"
 12139 ;; Parameters:    Size  Location     Type
 12140 ;;  address         1    wreg     unsigned char 
 12141 ;;  value           1    2[COMRAM] unsigned char 
 12142 ;; Auto vars:     Size  Location     Type
 12143 ;;  address         1    3[COMRAM] unsigned char 
 12144 ;; Return value:  Size  Location     Type
 12145 ;;                  1    wreg      void 
 12146 ;; Registers used:
 12147 ;;		wreg, status,2, status,0, cstack
 12148 ;; Tracked objects:
 12149 ;;		On entry : 0/0
 12150 ;;		On exit  : 0/0
 12151 ;;		Unchanged: 0/0
 12152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12153 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12157 ;;Total ram usage:        2 bytes
 12158 ;; Hardware stack levels used: 1
 12159 ;; Hardware stack levels required when called: 2
 12160 ;; This function calls:
 12161 ;;		i2_I2C_2_Master_Start
 12162 ;;		i2_I2C_2_Master_Stop
 12163 ;;		i2_I2C_2_Master_Write
 12164 ;; This function is called by:
 12165 ;;		i2_color_clear_init_interrupts
 12166 ;; This function uses a non-reentrant model
 12167 ;;
 12168                           
 12169                           	psect	text48
 12170   00524C                     __ptext48:
 12171                           	callstack 0
 12172   00524C                     i2_color_writetoaddr:
 12173                           	callstack 21
 12174                           
 12175                           ;incstack = 0
 12176                           ;i2color_writetoaddr@address stored from wreg
 12177   00524C  6E04               	movwf	i2color_writetoaddr@address^0,c
 12178   00524E                     
 12179                           ;color.c: 54:     I2C_2_Master_Start();
 12180   00524E  EC9A  F029         	call	i2_I2C_2_Master_Start	;wreg free
 12181                           
 12182                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
 12183   005252  0E52               	movlw	82
 12184   005254  EC7B  F029         	call	i2_I2C_2_Master_Write
 12185                           
 12186                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
 12187   005258  5004               	movf	i2color_writetoaddr@address^0,w,c
 12188   00525A  0980               	iorlw	128
 12189   00525C  EC7B  F029         	call	i2_I2C_2_Master_Write
 12190                           
 12191                           ;color.c: 57:     I2C_2_Master_Write(value);
 12192   005260  5003               	movf	i2color_writetoaddr@value^0,w,c
 12193   005262  EC7B  F029         	call	i2_I2C_2_Master_Write
 12194                           
 12195                           ;color.c: 58:     I2C_2_Master_Stop();
 12196   005266  EC95  F029         	call	i2_I2C_2_Master_Stop	;wreg free
 12197   00526A  0012               	return		;funcret
 12198   00526C                     __end_ofi2_color_writetoaddr:
 12199                           	callstack 0
 12200                           
 12201 ;; *************** function i2_I2C_2_Master_Write *****************
 12202 ;; Defined at:
 12203 ;;		line 45 in file "i2c.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;  data_byte       1    wreg     unsigned char 
 12206 ;; Auto vars:     Size  Location     Type
 12207 ;;  data_byte       1    1[COMRAM] unsigned char 
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  1    wreg      void 
 12210 ;; Registers used:
 12211 ;;		wreg, status,2, status,0, cstack
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12221 ;;Total ram usage:        1 bytes
 12222 ;; Hardware stack levels used: 1
 12223 ;; Hardware stack levels required when called: 1
 12224 ;; This function calls:
 12225 ;;		i2_I2C_2_Master_Idle
 12226 ;; This function is called by:
 12227 ;;		i2_color_clear_init_interrupts
 12228 ;;		i2_color_writetoaddr
 12229 ;; This function uses a non-reentrant model
 12230 ;;
 12231                           
 12232                           	psect	text49
 12233   0052F6                     __ptext49:
 12234                           	callstack 0
 12235   0052F6                     i2_I2C_2_Master_Write:
 12236                           	callstack 21
 12237                           
 12238                           ;incstack = 0
 12239                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 12240   0052F6  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 12241   0052F8                     
 12242                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 12243   0052F8  ECBA  F028         	call	i2_I2C_2_Master_Idle	;wreg free
 12244   0052FC                     
 12245                           ;i2c.c: 48:   SSP2BUF = data_byte;
 12246   0052FC  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 12247   005300  0012               	return		;funcret
 12248   005302                     __end_ofi2_I2C_2_Master_Write:
 12249                           	callstack 0
 12250                           
 12251 ;; *************** function i2_I2C_2_Master_Stop *****************
 12252 ;; Defined at:
 12253 ;;		line 39 in file "i2c.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;		None
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;		None
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  1    wreg      void 
 12260 ;; Registers used:
 12261 ;;		wreg, status,2, status,0, cstack
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12271 ;;Total ram usage:        0 bytes
 12272 ;; Hardware stack levels used: 1
 12273 ;; Hardware stack levels required when called: 1
 12274 ;; This function calls:
 12275 ;;		i2_I2C_2_Master_Idle
 12276 ;; This function is called by:
 12277 ;;		i2_color_clear_init_interrupts
 12278 ;;		i2_color_writetoaddr
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           	psect	text50
 12283   00532A                     __ptext50:
 12284                           	callstack 0
 12285   00532A                     i2_I2C_2_Master_Stop:
 12286                           	callstack 21
 12287   00532A                     
 12288                           ;i2c.c: 41:   I2C_2_Master_Idle();
 12289   00532A  ECBA  F028         	call	i2_I2C_2_Master_Idle	;wreg free
 12290   00532E                     
 12291                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 12292   00532E  010E               	movlb	14	; () banked
 12293   005330  85DA               	bsf	218,2,b	;volatile
 12294   005332                     
 12295                           ; BSR set to: 14
 12296   005332  0012               	return		;funcret
 12297   005334                     __end_ofi2_I2C_2_Master_Stop:
 12298                           	callstack 0
 12299                           
 12300 ;; *************** function i2_I2C_2_Master_Start *****************
 12301 ;; Defined at:
 12302 ;;		line 27 in file "i2c.c"
 12303 ;; Parameters:    Size  Location     Type
 12304 ;;		None
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;		None
 12307 ;; Return value:  Size  Location     Type
 12308 ;;                  1    wreg      void 
 12309 ;; Registers used:
 12310 ;;		wreg, status,2, status,0, cstack
 12311 ;; Tracked objects:
 12312 ;;		On entry : 0/0
 12313 ;;		On exit  : 0/0
 12314 ;;		Unchanged: 0/0
 12315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12320 ;;Total ram usage:        0 bytes
 12321 ;; Hardware stack levels used: 1
 12322 ;; Hardware stack levels required when called: 1
 12323 ;; This function calls:
 12324 ;;		i2_I2C_2_Master_Idle
 12325 ;; This function is called by:
 12326 ;;		i2_color_clear_init_interrupts
 12327 ;;		i2_color_writetoaddr
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           	psect	text51
 12332   005334                     __ptext51:
 12333                           	callstack 0
 12334   005334                     i2_I2C_2_Master_Start:
 12335                           	callstack 21
 12336   005334                     
 12337                           ;i2c.c: 29:   I2C_2_Master_Idle();
 12338   005334  ECBA  F028         	call	i2_I2C_2_Master_Idle	;wreg free
 12339   005338                     
 12340                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 12341   005338  010E               	movlb	14	; () banked
 12342   00533A  81DA               	bsf	218,0,b	;volatile
 12343   00533C                     
 12344                           ; BSR set to: 14
 12345   00533C  0012               	return		;funcret
 12346   00533E                     __end_ofi2_I2C_2_Master_Start:
 12347                           	callstack 0
 12348                           
 12349 ;; *************** function i2_I2C_2_Master_Idle *****************
 12350 ;; Defined at:
 12351 ;;		line 22 in file "i2c.c"
 12352 ;; Parameters:    Size  Location     Type
 12353 ;;		None
 12354 ;; Auto vars:     Size  Location     Type
 12355 ;;		None
 12356 ;; Return value:  Size  Location     Type
 12357 ;;                  1    wreg      void 
 12358 ;; Registers used:
 12359 ;;		wreg, status,2, status,0
 12360 ;; Tracked objects:
 12361 ;;		On entry : 0/0
 12362 ;;		On exit  : 0/0
 12363 ;;		Unchanged: 0/0
 12364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12369 ;;Total ram usage:        1 bytes
 12370 ;; Hardware stack levels used: 1
 12371 ;; This function calls:
 12372 ;;		Nothing
 12373 ;; This function is called by:
 12374 ;;		i2_I2C_2_Master_Start
 12375 ;;		i2_I2C_2_Master_Stop
 12376 ;;		i2_I2C_2_Master_Write
 12377 ;; This function uses a non-reentrant model
 12378 ;;
 12379                           
 12380                           	psect	text52
 12381   005174                     __ptext52:
 12382                           	callstack 0
 12383   005174                     i2_I2C_2_Master_Idle:
 12384                           	callstack 21
 12385   005174                     i2l259:
 12386   005174  010E               	movlb	14	; () banked
 12387   005176  B5D8               	btfsc	216,2,b	;volatile
 12388   005178  EFC0  F028         	goto	i2u199_41
 12389   00517C  EFC2  F028         	goto	i2u199_40
 12390   005180                     i2u199_41:
 12391   005180  EFBA  F028         	goto	i2l259
 12392   005184                     i2u199_40:
 12393   005184                     
 12394                           ; BSR set to: 14
 12395   005184  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 12396   005188  0E1F               	movlw	31
 12397   00518A  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 12398   00518C  A4D8               	btfss	status,2,c
 12399   00518E  EFCB  F028         	goto	i2u200_41
 12400   005192  EFCD  F028         	goto	i2u200_40
 12401   005196                     i2u200_41:
 12402   005196  EFBA  F028         	goto	i2l259
 12403   00519A                     i2u200_40:
 12404   00519A                     
 12405                           ; BSR set to: 14
 12406   00519A  0012               	return		;funcret
 12407   00519C                     __end_ofi2_I2C_2_Master_Idle:
 12408                           	callstack 0
 12409                           
 12410 ;; *************** function i2___lwdiv *****************
 12411 ;; Defined at:
 12412 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 12413 ;; Parameters:    Size  Location     Type
 12414 ;;  dividend        2    0[COMRAM] unsigned int 
 12415 ;;  divisor         2    2[COMRAM] unsigned int 
 12416 ;; Auto vars:     Size  Location     Type
 12417 ;;  quotient        2    4[COMRAM] unsigned int 
 12418 ;;  counter         1    6[COMRAM] unsigned char 
 12419 ;; Return value:  Size  Location     Type
 12420 ;;                  2    0[COMRAM] unsigned int 
 12421 ;; Registers used:
 12422 ;;		wreg, status,2, status,0
 12423 ;; Tracked objects:
 12424 ;;		On entry : 0/0
 12425 ;;		On exit  : 0/0
 12426 ;;		Unchanged: 0/0
 12427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12428 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12429 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12431 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12432 ;;Total ram usage:        7 bytes
 12433 ;; Hardware stack levels used: 1
 12434 ;; This function calls:
 12435 ;;		Nothing
 12436 ;; This function is called by:
 12437 ;;		i2_color_clear_init_interrupts
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441                           	psect	text53
 12442   004E44                     __ptext53:
 12443                           	callstack 0
 12444   004E44                     i2___lwdiv:
 12445                           	callstack 23
 12446   004E44  0E00               	movlw	0
 12447   004E46  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
 12448   004E48  0E00               	movlw	0
 12449   004E4A  6E05               	movwf	i2___lwdiv@quotient^0,c
 12450   004E4C  5003               	movf	i2___lwdiv@divisor^0,w,c
 12451   004E4E  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 12452   004E50  B4D8               	btfsc	status,2,c
 12453   004E52  EF2D  F027         	goto	i2u265_41
 12454   004E56  EF2F  F027         	goto	i2u265_40
 12455   004E5A                     i2u265_41:
 12456   004E5A  EF57  F027         	goto	i2l1265
 12457   004E5E                     i2u265_40:
 12458   004E5E  0E01               	movlw	1
 12459   004E60  6E07               	movwf	i2___lwdiv@counter^0,c
 12460   004E62  EF37  F027         	goto	i2l3713
 12461   004E66                     i2l3711:
 12462   004E66  90D8               	bcf	status,0,c
 12463   004E68  3603               	rlcf	i2___lwdiv@divisor^0,f,c
 12464   004E6A  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 12465   004E6C  2A07               	incf	i2___lwdiv@counter^0,f,c
 12466   004E6E                     i2l3713:
 12467   004E6E  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 12468   004E70  EF3C  F027         	goto	i2u266_41
 12469   004E74  EF3E  F027         	goto	i2u266_40
 12470   004E78                     i2u266_41:
 12471   004E78  EF33  F027         	goto	i2l3711
 12472   004E7C                     i2u266_40:
 12473   004E7C                     i2l3715:
 12474   004E7C  90D8               	bcf	status,0,c
 12475   004E7E  3605               	rlcf	i2___lwdiv@quotient^0,f,c
 12476   004E80  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 12477   004E82  5003               	movf	i2___lwdiv@divisor^0,w,c
 12478   004E84  5C01               	subwf	i2___lwdiv@dividend^0,w,c
 12479   004E86  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 12480   004E88  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 12481   004E8A  A0D8               	btfss	status,0,c
 12482   004E8C  EF4A  F027         	goto	i2u267_41
 12483   004E90  EF4C  F027         	goto	i2u267_40
 12484   004E94                     i2u267_41:
 12485   004E94  EF51  F027         	goto	i2l3723
 12486   004E98                     i2u267_40:
 12487   004E98  5003               	movf	i2___lwdiv@divisor^0,w,c
 12488   004E9A  5E01               	subwf	i2___lwdiv@dividend^0,f,c
 12489   004E9C  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 12490   004E9E  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 12491   004EA0  8005               	bsf	i2___lwdiv@quotient^0,0,c
 12492   004EA2                     i2l3723:
 12493   004EA2  90D8               	bcf	status,0,c
 12494   004EA4  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 12495   004EA6  3203               	rrcf	i2___lwdiv@divisor^0,f,c
 12496   004EA8  2E07               	decfsz	i2___lwdiv@counter^0,f,c
 12497   004EAA  EF3E  F027         	goto	i2l3715
 12498   004EAE                     i2l1265:
 12499   004EAE  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 12500   004EB2  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 12501   004EB6  0012               	return		;funcret
 12502   004EB8                     __end_ofi2___lwdiv:
 12503                           	callstack 0
 12504                           
 12505 ;; *************** function _putCharToRxBuf *****************
 12506 ;; Defined at:
 12507 ;;		line 33 in file "serial.c"
 12508 ;; Parameters:    Size  Location     Type
 12509 ;;  byte            1    wreg     unsigned char 
 12510 ;; Auto vars:     Size  Location     Type
 12511 ;;  byte            1    0[COMRAM] unsigned char 
 12512 ;; Return value:  Size  Location     Type
 12513 ;;                  1    wreg      void 
 12514 ;; Registers used:
 12515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12516 ;; Tracked objects:
 12517 ;;		On entry : 0/0
 12518 ;;		On exit  : 0/0
 12519 ;;		Unchanged: 0/0
 12520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12525 ;;Total ram usage:        1 bytes
 12526 ;; Hardware stack levels used: 1
 12527 ;; This function calls:
 12528 ;;		Nothing
 12529 ;; This function is called by:
 12530 ;;		_HighISR
 12531 ;; This function uses a non-reentrant model
 12532 ;;
 12533                           
 12534                           	psect	text54
 12535   0051C2                     __ptext54:
 12536                           	callstack 0
 12537   0051C2                     _putCharToRxBuf:
 12538                           	callstack 24
 12539                           
 12540                           ;incstack = 0
 12541                           ;putCharToRxBuf@byte stored from wreg
 12542   0051C2  6E01               	movwf	putCharToRxBuf@byte^0,c
 12543   0051C4                     
 12544                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
 12545   0051C4  0E13               	movlw	19
 12546   0051C6  644E               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
 12547   0051C8  EFE8  F028         	goto	i2u336_41
 12548   0051CC  EFEA  F028         	goto	i2u336_40
 12549   0051D0                     i2u336_41:
 12550   0051D0  EFEC  F028         	goto	i2l4343
 12551   0051D4                     i2u336_40:
 12552   0051D4  0E00               	movlw	0
 12553   0051D6  6E4E               	movwf	_RxBufWriteCnt^0,c	;volatile
 12554   0051D8                     i2l4343:
 12555                           
 12556                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
 12557   0051D8  504E               	movf	_RxBufWriteCnt^0,w,c
 12558   0051DA  0FDE               	addlw	low _EUSART4RXbuf
 12559   0051DC  6ED9               	movwf	fsr2l,c
 12560   0051DE  6ADA               	clrf	fsr2h,c
 12561   0051E0  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
 12562   0051E4  2A4E               	incf	_RxBufWriteCnt^0,f,c	;volatile
 12563   0051E6  0012               	return		;funcret
 12564   0051E8                     __end_of_putCharToRxBuf:
 12565                           	callstack 0
 12566                           
 12567 ;; *************** function _isDataInTxBuf *****************
 12568 ;; Defined at:
 12569 ;;		line 61 in file "serial.c"
 12570 ;; Parameters:    Size  Location     Type
 12571 ;;		None
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;		None
 12574 ;; Return value:  Size  Location     Type
 12575 ;;                  1    wreg      unsigned char 
 12576 ;; Registers used:
 12577 ;;		wreg, status,2, status,0
 12578 ;; Tracked objects:
 12579 ;;		On entry : 0/0
 12580 ;;		On exit  : 0/0
 12581 ;;		Unchanged: 0/0
 12582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12587 ;;Total ram usage:        0 bytes
 12588 ;; Hardware stack levels used: 1
 12589 ;; This function calls:
 12590 ;;		Nothing
 12591 ;; This function is called by:
 12592 ;;		_HighISR
 12593 ;;		_sendTxBuf
 12594 ;; This function uses a non-reentrant model
 12595 ;;
 12596                           
 12597                           	psect	text55
 12598   0052BC                     __ptext55:
 12599                           	callstack 0
 12600   0052BC                     _isDataInTxBuf:
 12601                           	callstack 24
 12602   0052BC                     
 12603                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
 12604   0052BC  504B               	movf	_TxBufReadCnt^0,w,c	;volatile
 12605   0052BE  184C               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
 12606   0052C0  A4D8               	btfss	status,2,c
 12607   0052C2  EF65  F029         	goto	i2u338_41
 12608   0052C6  EF68  F029         	goto	i2u338_40
 12609   0052CA                     i2u338_41:
 12610   0052CA  0E01               	movlw	1
 12611   0052CC  EF69  F029         	goto	i2u339_40
 12612   0052D0                     i2u338_40:
 12613   0052D0  0E00               	movlw	0
 12614   0052D2                     i2u339_40:
 12615   0052D2  0012               	return		;funcret
 12616   0052D4                     __end_of_isDataInTxBuf:
 12617                           	callstack 0
 12618                           
 12619 ;; *************** function _getCharFromTxBuf *****************
 12620 ;; Defined at:
 12621 ;;		line 47 in file "serial.c"
 12622 ;; Parameters:    Size  Location     Type
 12623 ;;		None
 12624 ;; Auto vars:     Size  Location     Type
 12625 ;;		None
 12626 ;; Return value:  Size  Location     Type
 12627 ;;                  1    wreg      unsigned char 
 12628 ;; Registers used:
 12629 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12630 ;; Tracked objects:
 12631 ;;		On entry : 0/0
 12632 ;;		On exit  : 0/0
 12633 ;;		Unchanged: 0/0
 12634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12637 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12639 ;;Total ram usage:        2 bytes
 12640 ;; Hardware stack levels used: 1
 12641 ;; This function calls:
 12642 ;;		Nothing
 12643 ;; This function is called by:
 12644 ;;		_HighISR
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648                           	psect	text56
 12649   0050CE                     __ptext56:
 12650                           	callstack 0
 12651   0050CE                     _getCharFromTxBuf:
 12652                           	callstack 24
 12653   0050CE                     
 12654                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
 12655   0050CE  0E3B               	movlw	59
 12656   0050D0  644B               	cpfsgt	_TxBufReadCnt^0,c	;volatile
 12657   0050D2  EF6D  F028         	goto	i2u337_41
 12658   0050D6  EF6F  F028         	goto	i2u337_40
 12659   0050DA                     i2u337_41:
 12660   0050DA  EF71  F028         	goto	i2l4351
 12661   0050DE                     i2u337_40:
 12662   0050DE  0E00               	movlw	0
 12663   0050E0  6E4B               	movwf	_TxBufReadCnt^0,c	;volatile
 12664   0050E2                     i2l4351:
 12665                           
 12666                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
 12667   0050E2  2A4B               	incf	_TxBufReadCnt^0,f,c	;volatile
 12668   0050E4  044B               	decf	_TxBufReadCnt^0,w,c	;volatile
 12669   0050E6  6E01               	movwf	??_getCharFromTxBuf^0,c
 12670   0050E8  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
 12671   0050EA  0E52               	movlw	low _EUSART4TXbuf
 12672   0050EC  2401               	addwf	??_getCharFromTxBuf^0,w,c
 12673   0050EE  6ED9               	movwf	fsr2l,c
 12674   0050F0  0E02               	movlw	high _EUSART4TXbuf
 12675   0050F2  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
 12676   0050F4  6EDA               	movwf	fsr2h,c
 12677   0050F6  50DF               	movf	indf2,w,c
 12678   0050F8  0012               	return		;funcret
 12679   0050FA                     __end_of_getCharFromTxBuf:
 12680                           	callstack 0
 12681                           
 12682                           	psect	smallconst
 12683   000E00                     __psmallconst:
 12684                           	callstack 0
 12685   000E00  00                 	db	0
 12686   000E01  00                 	db	0	; dummy byte at the end
 12687   000000                     
 12688                           	psect	rparam
 12689   000000                     
 12690                           	psect	temp
 12691   00004F                     btemp:
 12692                           	callstack 0
 12693   00004F                     	ds	1
 12694   000000                     int$flags	set	btemp
 12695   000000                     wtemp8	set	btemp+1
 12696   000000                     ttemp5	set	btemp+1
 12697   000000                     ttemp6	set	btemp+4
 12698   000000                     ttemp7	set	btemp+8
 12699                           
 12700                           	psect	config
 12701                           
 12702                           ;Config register CONFIG1L @ 0x300000
 12703                           ;	External Oscillator mode Selection bits
 12704                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12705                           ;	Power-up default value for COSC bits
 12706                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12707   300000                     	org	3145728
 12708   300000  AA                 	db	170
 12709                           
 12710                           ;Config register CONFIG1H @ 0x300001
 12711                           ;	unspecified, using default values
 12712                           ;	Clock Out Enable bit
 12713                           ;	CLKOUTEN = 0x1, unprogrammed default
 12714                           ;	Clock Switch Enable bit
 12715                           ;	CSWEN = 0x1, unprogrammed default
 12716                           ;	Fail-Safe Clock Monitor Enable bit
 12717                           ;	FCMEN = 0x1, unprogrammed default
 12718   300001                     	org	3145729
 12719   300001  FF                 	db	255
 12720                           
 12721                           ;Config register CONFIG3L @ 0x300004
 12722                           ;	WDT Period Select bits
 12723                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12724                           ;	WDT operating mode
 12725                           ;	WDTE = OFF, WDT Disabled
 12726   300004                     	org	3145732
 12727   300004  9F                 	db	159
 12728                           
 12729                           ;Config register CONFIG3H @ 0x300005
 12730                           ;	unspecified, using default values
 12731                           ;	WDT Window Select bits
 12732                           ;	WDTCWS = 0x7, unprogrammed default
 12733                           ;	WDT input clock selector
 12734                           ;	WDTCCS = 0x7, unprogrammed default
 12735   300005                     	org	3145733
 12736   300005  FF                 	db	255
 12737                           tosu	equ	0xFFF
 12738                           tosh	equ	0xFFE
 12739                           tosl	equ	0xFFD
 12740                           stkptr	equ	0xFFC
 12741                           pclatu	equ	0xFFB
 12742                           pclath	equ	0xFFA
 12743                           pcl	equ	0xFF9
 12744                           tblptru	equ	0xFF8
 12745                           tblptrh	equ	0xFF7
 12746                           tblptrl	equ	0xFF6
 12747                           tablat	equ	0xFF5
 12748                           prodh	equ	0xFF4
 12749                           prodl	equ	0xFF3
 12750                           indf0	equ	0xFEF
 12751                           postinc0	equ	0xFEE
 12752                           postdec0	equ	0xFED
 12753                           preinc0	equ	0xFEC
 12754                           plusw0	equ	0xFEB
 12755                           fsr0h	equ	0xFEA
 12756                           fsr0l	equ	0xFE9
 12757                           wreg	equ	0xFE8
 12758                           indf1	equ	0xFE7
 12759                           postinc1	equ	0xFE6
 12760                           postdec1	equ	0xFE5
 12761                           preinc1	equ	0xFE4
 12762                           plusw1	equ	0xFE3
 12763                           fsr1h	equ	0xFE2
 12764                           fsr1l	equ	0xFE1
 12765                           bsr	equ	0xFE0
 12766                           indf2	equ	0xFDF
 12767                           postinc2	equ	0xFDE
 12768                           postdec2	equ	0xFDD
 12769                           preinc2	equ	0xFDC
 12770                           plusw2	equ	0xFDB
 12771                           fsr2h	equ	0xFDA
 12772                           fsr2l	equ	0xFD9
 12773                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      78
    BANK0           160     86     154
    BANK1           256    215     255
    BANK2           256      0     142
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK1[1]), 

    color_calibration@blue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@blue(BANK1[6]), 

    color_calibration@green	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@green(BANK1[6]), 

    color_calibration@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK1[6]), 

    color_calibration@lightblue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@lightblue(BANK1[6]), 

    color_calibration@orange	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@orange(BANK1[6]), 

    color_calibration@pink	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@pink(BANK1[6]), 

    color_calibration@red	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@red(BANK1[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    color_calibration@white	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@white(BANK1[6]), 

    color_calibration@yellow	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@yellow(BANK1[6]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseShort@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseShort@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    rgb_2_hsv@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK1[6]), 

    S33DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S33DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), main@motorR(BANK1[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    wallAdjust@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    wallAdjust@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_detect
    _wallAdjust->_setMotorPWM
    _move->_returnHome
    _reverseShort->_setMotorPWM
    _returnHome->_reverseOneSquare
    _returnHome->_turnLeft
    _returnHome->_turnRight
    _lostReturnHome->_reverseOneSquare
    _lostReturnHome->_turnLeft
    _lostReturnHome->_turnRight
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->___lwdiv
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_rgb_2_hsv
    _rgb_2_hsv->___aldiv
    ___lldiv->___lmul
    ___aldiv->___lmul
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2___lwdiv
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_calibration
    _color_calibration->_rgb_2_hsv

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               271   271      0  323193
                                             72 COMRAM     2     2      0
                                             42 BANK0     44    44      0
                                              0 BANK1    215   215      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
        _color_clear_init_interrupts
                   _color_click_init
                       _color_detect
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                          _rgb_2_hsv
                               _stop
                         _wallAdjust
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _wallAdjust                                          15     9      6    6627
                                             34 COMRAM    15     9      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _move                                                18     2     16  147420
                                             68 COMRAM     2     2      0
                                              0 BANK0     16     0     16
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                       _reverseShort
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _reverseShort                                        14     8      6    8575
                                             34 COMRAM    14     8      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          20     5     15   72572
                                             48 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      20     5     15   71520
                                             48 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    6531
                                             34 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    14     7      7    8032
                                             34 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2     102
                                             15 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    9107
                                             34 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        57     3     54    2673
                                             15 COMRAM    57     3     54
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    2808
                                             33 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0    1905
                                             28 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                            ___lwdiv
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     903
                                             17 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20   14254
                                             63 COMRAM     2     2      0
                                             22 BANK0     20     0     20
                         _color_read
                          _rgb_2_hsv
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rgb_2_hsv                                           44    34     10    9453
                                             41 COMRAM    22    12     10
                                              0 BANK0     22    22      0
                            ___aldiv
                            ___lldiv
                             ___lmul
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (2) _min                                                  4     0      4     484
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _max                                                  4     0      4     484
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2436
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1141
                                             27 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1525
                                             27 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2    1638
                                             19 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      31
                                             16 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      65
                                             16 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   43854
                                             48 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   16520
                                             34 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   25520
                                             34 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    4341
                                             28 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     472
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     841
                                             21 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     758
                                             23 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      34
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              3     3      0     622
                                             12 COMRAM     3     3      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (7) i2_color_clear_init_interrupts                        5     5      0     600
                                              7 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                          i2___lwdiv
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _rgb_2_hsv
       ___aldiv
         ___lmul (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _max
       _min
     _white_Light
   _color_clear_init_interrupts
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
     ___lwdiv
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
     _color_writetoaddr
   _color_detect
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _reverseShort
       _setMotorPWM
     _turnLeft
     _turnRight
   _resetTimer
   _rgb_2_hsv
   _stop
   _wallAdjust
     _setMotorPWM
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2___lwdiv
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      8E       9       55.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D7      FF       7       99.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     56      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4A      4E       1       83.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     275      66        0.0%
DATA                 0      0     275       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 15:28:15 2024

                                _white_Light 51E8                                           l93 2A14  
                                         l95 2A22                                 ___awdiv@sign 0015  
                        ___wmul@multiplicand 0012                           i2___lwdiv@dividend 0001  
              wallAdjust@wallReverseDuration 002D                             main@turnDuration 01B4  
                          ??_Interrupts_init 0010                                          l200 2732  
                                        l201 27DA                                          l210 50C4  
                                        l211 50CC                                          l203 27E8  
                                        l107 2EF8                                          l204 2890  
                                        l206 289E                                          l150 522A  
                                        l215 5098                                          l207 2946  
                                        l216 50A0                                          l224 3340  
                                        l144 503E                                          l153 5204  
                                        l402 5288                                          l155 520A  
                                        l147 4BF4                                          l308 5074  
                                        l180 3CA6                                          l229 33D6  
                                        l165 3CA4                                          l262 5172  
                                        l158 4084                                          l271 5314  
                                        l191 2510                                          l183 2396  
                                        l192 25B8                                          l256 5122  
                                        l361 52E8                                          l265 531E  
                                        l185 23A4                                          l274 52F4  
                                        l194 25C6                                          l186 244C  
                                        l259 514C                                          l195 266E  
                                        l452 52A6                                          l268 5328  
                                        l188 245A                                          l700 34E4  
                                        l277 5006                                          l197 267C  
                                        l189 2502                                          l613 2310  
                                        l454 52B4                                          l470 4FC4  
                                        l198 2724                                          l710 364E  
                                        l702 3508                                          l455 52BA  
                                        l631 49A4                                          l623 238A  
                                        l607 2310                                          l640 454E  
                                        l449 52A2                                          l801 4D2E  
                                        l705 358C                                          l466 4FAC  
                                        l554 4790                                          l642 4572  
                                        l722 37A4                                          l714 36BA  
                                        l467 4FAE                                          l547 4DCE  
                                        l731 3DAC                                          l468 4FC2  
                                        l636 44E2                                          l628 4962  
                                        l716 36DE                                          l645 45F6  
                                        l653 4308                                          l733 3DD0  
                                        l573 162A                                          l662 441C  
                                        l670 4A3E                                          l582 1C6C  
                                        l751 392E                                          l743 388E  
                                        l727 3D40                                          l719 3762  
                                        l648 4624                                          l752 3A1E  
                                        l808 4D3E                                          l736 3E54  
                                        l665 444A                                          l657 4374  
                                        l754 3A3E                                          l674 4A8A  
                                        l659 4398                                          l747 38AA  
                                        l771 514A                                          l691 4270  
                                        l683 4186                                          l739 3E96  
                                        l748 38E0                                          l588 1C6C  
                                        l765 524A                                          l853 489C  
                                        l685 41AA                                          l774 51C0  
                                        l598 1CE6                                          l679 411A  
                                        l768 530A                                          l688 422E  
                                        l696 3478                                          l785 4F10  
                                        l786 4F20                                          _max 50A2  
                                        _min 5076                              color_detect@HSV 0010  
                              ?_color_detect 0010                                          prod 0FF3  
                        i2_color_writetoaddr 524C                                          wreg 0FE8  
                            color_detect@red 0016    color_clear_init_interrupts@high_threshold 001E  
i2color_clear_init_interrupts@high_threshold 0009                                         l1005 4B4E  
                                       l1272 4E42                                         l1265 4E3A  
                                       l5001 31D0                                         l5011 33B6  
                                       l5003 31E8                                         l5013 33C2  
                                       l5005 3282                                         l5021 4BB2  
                                       l5101 3E40                                         l5007 329A  
                                       l5015 51EA                                         l5031 4BEA  
                                       l5023 4BC2                                         l5111 162C  
                                       l5103 3E50                                         l5009 3398  
                                       l5017 51FA                                         l5041 510E  
                                       l5033 50FA                                         l5025 4BCC  
                                       l5201 1BBA                                         l5121 16F4  
                                       l5113 164C                                         l5105 3E78  
                                       l6001 2C9E                                         l5051 529E  
                                       l5043 5110                                         l5035 5104  
                                       l5027 4BD6                                         l5019 4B50  
                                       l5203 1BD8                                         l5131 1776  
                                       l5123 170C                                         l5115 1664  
                                       l6011 2DD4                                         l6003 2CF0  
                                       l5053 52A0                                         l5045 528A  
                                       l5221 4A8C                                         l5037 510A  
                                       l5029 4BE0                                         l5301 4D40  
                                       l5213 1C88                                         l5205 1BF8  
                                       l5141 17D4                                         l5133 177E  
                                       l5125 1728                                         l5117 169C  
                                       l5109 3E82                                         l5061 3CA8  
                                       l6021 2E38                                         l6013 2E1A  
                                       l6005 2CFC                                         l5055 52A4  
                                       l5047 5294                                         l5231 4AB8  
                                       l5223 4A90                                         l5039 510C  
                                       l5311 4DA8                                         l5303 4D50  
                                       l5215 1C8C                                         l5207 1C10  
                                       l5151 18A2                                         l5143 1810  
                                       l5135 1780                                         l5127 172C  
                                       l5119 16BC                                         l5071 3D14  
                                       l5063 3CAC                                         l6031 2E68  
                                       l6023 2E3C                                         l6015 2E26  
                                       l6007 2D1A                                         l5057 52B8  
                                       l5049 529C                                         l5241 4AE6  
                                       l5233 4AC0                                         l5225 4A9E  
                                       l5401 26C6                                         l5321 4DC2  
                                       l5313 4DAA                                         l5305 4D76  
                                       l5217 1CBE                                         l5209 1C48  
                                       l5161 1950                                         l5153 18C0  
                                       l5145 182E                                         l5137 179C  
                                       l5129 175E                                         l5073 3D20  
                                       l5081 3D68                                         l5065 3CBA  
                                       l6041 2EE6                                         l6033 2E6C  
                                       l6025 2E40                                         l6017 2E2E  
                                       l6009 2DC4                                         l5251 4B20  
                                       l5243 4AEE                                         l5235 4AC4  
                                       l5227 4AA6                                         l5331 4FA6  
                                       l4611 51B8                                         l5411 2742  
                                       l5403 26E8                                         l5323 4DCC  
                                       l5315 4DB4                                         l5307 4D7A  
                                       l5171 19FA                                         l5163 1988  
                                       l5155 18E0                                         l5147 184E  
                                       l5139 17BC                                         l5219 1CD6  
                                       l5083 3D8C                                         l5075 3D2C  
                                       l5067 3CD4                                         l6035 2EC4  
                                       l6027 2E50                                         l6019 2E32  
                                       l5261 4B46                                         l5253 4B22  
                                       l5245 4AFC                                         l5237 4ACC  
                                       l5229 4AAA                                         l5333 4FBC  
                                       l5325 4F78                                         l4621 4DF2  
                                       l4605 514C                                         l5421 27D6  
                                       l5413 2764                                         l5405 2708  
                                       l5341 23B4                                         l5501 3A8C  
                                       l5317 4DB6                                         l5309 4D9E  
                                       l4701 48F8                                         l5181 1A94  
                                       l5173 1A32                                         l5157 18F8  
                                       l5165 19A4                                         l5149 1866  
                                       l5093 3DE8                                         l5085 3D98  
                                       l5077 3D3C                                         l5069 3D08  
                                       l6037 2EC8                                         l6029 2E56  
                                       l5255 4B28                                         l5247 4B02  
                                       l5239 4ADE                                         l5327 4F82  
                                       l4631 4E2C                                         l4623 4DFA  
                                       l4615 4DD0                                         l4607 515C  
                                       l5431 2854                                         l5423 27EC  
                                       l5415 277C                                         l5407 2720  
                                       l5351 2448                                         l5343 23D6  
                                       l5335 238C                                         l5271 5016  
                                       l5511 3B1C                                         l5503 3AAE  
                                       l5319 4DC0                                         l4711 495E  
                                       l4703 492C                                         l5191 1B26  
                                       l5183 1AAC                                         l5167 19C2  
                                       l5159 1930                                         l5095 3E1C  
                                       l5087 3DA8                                         l5079 3D64  
                                       l6039 2ED2                                         l5265 5040  
                                       l5281 5234                                         l5249 4B18  
                                       l5257 4B2E                                         l5329 4F98  
                                       l4633 4E2E                                         l4625 4E08  
                                       l4617 4DD8                                         l4609 519C  
                                       l4801 4476                                         l4721 5320  
                                       l4641 52EC                                         l5441 28D0  
                                       l5433 2874                                         l5425 27F8  
                                       l5417 279E                                         l5409 2736  
                                       l5361 24C6                                         l5353 245E  
                                       l5345 23EE                                         l5337 2392  
                                       l5273 5026                                         l5521 3B92  
                                       l5513 3B24                                         l5505 3AD0  
                                       l4713 4986                                         l4705 4938  
                                       l5193 1B46                                         l5185 1AE4  
                                       l5169 19E2                                         l5177 1A56  
                                       l5097 3E28                                         l5089 3DD6  
                                       l5601 3616                                         l5283 523E  
                                       l5259 4B3E                                         l4635 4E34  
                                       l4627 4E0E                                         l4619 4DEA  
                                       l4651 4642                                         l4811 44DE  
                                       l4803 44AA                                         l5451 37A6  
                                       l4731 4FDC                                         l4723 5324  
                                       l4643 52F0                                         l5443 28E8  
                                       l5435 288C                                         l5427 281A  
                                       l5419 27BE                                         l5371 2542  
                                       l5363 24E6                                         l5355 246A  
                                       l5347 2410                                         l5339 23A8  
                                       l5275 5030                                         l5267 5008  
                                       l5531 3C08                                         l5523 3BB4  
                                       l5515 3B46                                         l5507 3AD8  
                                       l5291 5276                                         l4707 4944  
                                       l5195 1B5E                                         l5179 1A74  
                                       l5099 3E34                                         l5611 3672  
                                       l5603 3622                                         l5285 5248  
                                       l4629 4E24                                         l4661 470C  
                                       l4653 4696                                         l4821 454A  
                                       l4813 4506                                         l4805 44B6  
                                       l5461 389C                                         l5453 37CE  
                                       l4733 5002                                         l4725 4FC8  
                                       l4637 5316                                         l4645 530C  
                                       l4901 4C9C                                         l4741 50B8  
                                       l5445 290A                                         l5437 28A2  
                                       l5429 2832                                         l5381 25CA  
                                       l5373 255A                                         l5365 24FE  
                                       l5357 248C                                         l5349 2430  
                                       l5277 503A                                         l5269 500C  
                                       l5541 3C98                                         l5533 3C2A  
                                       l5525 3BBC                                         l5517 3B68  
                                       l5509 3AFA                                         l5293 5278  
                                       l4709 4950                                         l4717 4990  
                                       l5197 1B96                                         l5189 1B08  
                                       l5701 1202                                         l5621 36E4  
                                       l5605 362E                                         l5613 3676  
                                       ?_max 0010                                         l5287 52D4  
                                       l5279 522C                                         l4663 4750  
                                       l4655 46AA                                         l4831 45CA  
                                       l4823 4578                                         l4807 44C2  
                                       l4815 450A                                         l4751 4272  
                                       l5471 38F8                                         l5463 38B8  
                                       l5455 37E6                                         l4735 5004  
                                       l4727 4FCC                                         l4639 531A  
                                       l4647 5310                                         l4911 4CE4  
                                       l4903 4CAC                                         l5447 292A  
                                       l5439 28AE                                         l5391 2652  
                                       l5383 25D6                                         l5375 257C  
                                       l5367 2514                                         l5359 24A4  
                                       l4719 520E                                         l5543 3CA0  
                                       l5535 3C4C                                         l5527 3BDE  
                                       l5519 3B70                                         l5295 5282  
                                       l4671 4A06                                         l5711 12A0  
                                       l5703 1214                                         l5631 3742  
                                       l5615 369A                                         l5607 363A  
                                       l5551 33F0                                         l4657 46AE  
                                       l4649 4626                                         l4833 45D6  
                                       l4817 452E                                         l4809 44CE  
                                       l4761 42E8                                         l4753 4290  
                                       l5481 395A                                         l5473 38FA  
                                       l5465 38D0                                         l5457 3826  
                                       l4729 4FD4                                         l4921 4D28  
                                       l4913 4CEE                                         l4905 4CC2  
                                       l4745 5076                                         l5449 2942  
                                       l5393 266A                                         l5385 25F8  
                                       l5377 259C                                         l5369 2520  
                                       l5537 3C54                                         l5529 3C00  
                                       l5297 5284                                         l5289 526C  
                                       l4681 4A62                                         l4673 4A12  
                                       l4665 49A6                                         l5801 1ED2  
                                       l5721 133E                                         l5713 12D8  
                                       l5705 1230                                         l5633 374E  
                                       l5641 3790                                         l5625 36F6  
                                       l5617 36A6                                         l5609 364A  
                                       l5561 3464                                         l5553 340C  
                                main@curMove 01B1                                         l4659 46F0  
                                       l4835 45E2                                         l4827 458A  
                                       l4819 453A                                         l4771 4354  
                                       l4763 42F4                                         l4755 429C  
                                       l5491 3A3A                                         l5483 3972  
                                       l5475 3912                                         l5467 38DA  
                                       l5459 384E                                         l4931 47B8  
                                       l4923 4792                                         l4915 4D0C  
                                       l4907 4CCA                                         l4739 50A2  
                                       l4747 508C                                         l5395 2680  
                                       l5387 2610                                         l5379 25B4  
                                       l5539 3C76                                         l5299 5286  
                                       l4675 4A1E                                         l4683 4A66  
                                       l4667 49C6                                         l4691 5142  
                                       l4851 40EE                                         l4843 4086  
                                       l5811 1F84                                         l5803 1EF2  
                                       l5731 13FE                                         l5723 1356  
                                       l5715 12F0                                         l5707 1248  
                                       l5651 0E80                                         l5643 0E02  
                                       l5635 375E                                         l5627 372A  
                                       l5619 36B6                                         l5571 34D0  
                                       l5563 3474                                         l5555 3440  
                                       l5547 33D8                                         ?_min 0010  
                                       l4837 45F2                                         l4829 45BE  
                                       l4781 43B0                                         l4773 4360  
                                       l4765 4304                                         l4757 42D0  
                                       l5485 39B2                                         l5477 3920  
                                       l5469 38EE                                         l4941 4800  
                                       l4933 47C6                                         l4925 4796  
                                       l4917 4D1C                                         l4909 4CD6  
                                       l5397 268C                                         l5389 2632  
                                       l5493 3A40                                         l4677 4A2A  
                                       l4669 49D2                                         l4685 5302  
                                       l4853 40FA                                         l4861 4142  
                                       l4845 40A2                                         l5813 1F9C  
                                       l5821 2048                                         l5805 1F0A  
                                       l5741 149C                                         l5725 138E  
                                       l5733 141E                                         l5709 1280  
                                       l5717 1310                                         l5661 0F1E  
                                       l5653 0EA0                                         l5645 0E14  
                                       l5637 3786                                         l5629 3736  
                                       l5581 3554                                         l5573 34E0  
                                       l5565 349C                                         l5557 344C  
                                       l5549 33E0                                         l5901 2996  
                                       l4839 461A                                         l4791 4418  
                                       l4783 43E4                                         l4775 4370  
                                       l4767 432C                                         l4759 42DC  
                                       l5487 39DA                                         l5479 3932  
                                       l4951 484A                                         l4943 4808  
                                       l4935 47D6                                         l4927 47A4  
                                       l4919 4D1E                                         l5399 26AE  
                                       l5495 3A40                                         l4679 4A3A  
                                       l4687 5124                                         l4863 4166  
                                       l4855 4106                                         l4847 40AE  
                                       l4695 489E                                         l5823 2066  
                                       l5815 1FD4                                         l5807 1F46  
                                       l5751 153E                                         l5743 14BC  
                                       l5735 1430                                         l5727 13AE  
                                       l5719 1322                                         l5671 0FDC  
                                       l5663 0F56                                         l5647 0E30  
                                       l5655 0ED8                                         l5591 35B0  
                                       l5583 3560                                         l5575 350E  
                                       l5559 3458                                         l5567 34A0  
                                       l5911 29B4                                         l5903 299A  
                                       l4793 4440                                         l4785 43F0  
                                       l4777 439E                                         l4769 4330  
                                       l5489 3A22                                         l4961 487C  
                                       l4953 485A                                         l4945 4814  
                                       l4937 47DA                                         l4929 47B4  
                                       l5497 3A62                                         l4689 5130  
                                       l4881 421A                                         l4873 41C2  
                                       l4865 4172                                         l4857 4116  
                                       l4849 40E2                                         l4697 48E6  
                                       l5841 2188                                         l5825 2086  
                                       l5833 20FA                                         l5817 1FF4  
                                       l5809 1F64                                         l5761 15EA  
                                       l5753 155A                                         l5745 14F4  
                                       l5737 144C                                         l5729 13E6  
                                       l5681 109C                                         l5673 0FF4  
                                       l5665 0F76                                         l5657 0EEA  
                                       l5649 0E48                                         l5585 356C  
                                       l5569 34C4                                         l5921 29D4  
                                       l5913 29BC                                         l5905 29A6  
                                       l4787 43FC                                         l4971 3ECC  
                                       l4963 488C                                         l4955 485C  
                                       l4947 4822                                         l4939 47EA  
                                       l4891 4EB8                                         l5499 3A84  
                                       l4883 422A                                         l4875 41F6  
                                       l4867 4182                                         l4859 413E  
                                       l5851 2202                                         l5835 2118  
                                       l5827 209E                                         l5819 202C  
                                       l5771 1D5C                                         l5763 1CE8  
                                       l5755 1572                                         l5747 150C  
                                       l5739 1464                                         l5691 113A  
                                       l5683 10D4                                         l5675 102C  
                                       l5659 0F06                                         l5667 0FAE  
                                       l5587 3578                                         l5595 35BA  
                                       l5579 3520                                         l5931 29F4  
                                       l5923 29D8                                         l5915 29C4  
                                       l5907 29AC                                         l4797 444C  
                                       l4789 4408                                         l4981 4020  
                                       l4973 3F24                                         l4957 4866  
                                       l4949 482C                                         l4893 4EC8  
                                       l4885 4252                                         l4877 4202  
                                       l4869 41B0                                         l5861 229C  
                                       l5853 223A                                         l5837 2138  
                                       l5845 21AC                                         l5829 20D6  
                                       l5781 1DEC                                         l5773 1D7C  
                                       l5765 1CEC                                         l5757 15B6  
                                       l5749 152C                                         l5693 1172  
                                       l5677 104C                                         l5669 0FC0  
                                       l5685 10F4                                         l5597 35D6  
                                       l5589 3588                                         l5941 2A08  
                                       l5933 29F8                                         l5925 29DC  
                                       l5917 29CC                                         l5909 29B0  
                                       l4799 446A                                         l4983 403E  
                                       l4975 3F42                                         l4967 3E98  
                                       l4959 486C                                         l4895 4ED6  
                                       l4991 3082                                         l4879 420E  
                                       l5871 2330                                         l5863 22B4  
                                       l5847 21CA                                         l5839 2150  
                                       l5791 1E24                                         l5783 1DF2  
                                       l5775 1DB4                                         l5767 1D0C  
                                       l5759 15D2                                         l5695 1192  
                                       l5687 1106                                         l5679 1084  
                                       l5599 35E2                                         l5951 2A98  
                                       l5943 2A0C                                         l5935 29FC  
                                       l5927 29E4                                         l5919 29D0  
                                       l4977 3FA2                                         l4969 3EB2  
                                       l4897 4EE6                                         l4993 3098  
                                       l4985 2EFC                                         l4889 425C  
                                       l5873 2362                                         l5865 22EC  
                                       l5849 21EA                                         l5857 225E  
                                       l5793 1E40                                         l5785 1E02  
                                       l5777 1DCC                                         l5769 1D24  
                                       l5697 11CA                                         l5689 1122  
                                       l5961 2B96                                         l5953 2ABC  
                                       l5945 2A10                                         l5937 2A00  
                                       l5929 29EC                                         l5881 2954  
                                       l4979 3FC0                                         l4899 4EF0  
                                       l4995 30FC                                         l4987 3050  
                                       l5859 227C                                         l5795 1E60  
                                       l5875 237A                                         l5787 1E1A  
                                       l5779 1DE8                                         l5699 11E2  
                                       l5971 2BDE                                         l5963 2BAE  
                                       l5955 2AC8                                         l5947 2A2A  
                                       l5939 2A04                                         l5891 2976  
                                       l5883 295A                                         l4997 3112  
                                       l4989 306A                                         l5869 232C  
                                       l5797 1E78                                         l5789 1E22  
                                       l5981 2C1A                                         l5973 2BFA  
                                       l5965 2BBA                                         l5957 2AE6  
                                       l5949 2A42                                         l5893 2986  
                                       l5885 295A                                         l5877 2948  
                                       l4999 3174                                         l5799 1EB4  
                                       l5991 2C58                                         l5983 2C26  
                                       l5975 2BFE                                         l5967 2BC2  
                                       l5959 2B90                                         l5895 298A  
                                       l5887 2966                                         l5879 2954  
                                       l5993 2C66                                         l5985 2C2E  
                                       l5977 2C04                                         l5969 2BDA  
                                       l5897 298E                                         l5889 2972  
                                       l5987 2C4C                                         l5995 2C70  
                                       l5979 2C08                                         l5899 2992  
                                       l5989 2C54                                         l5997 2C7C  
                                       l5999 2C8E                                         u4000 4398  
                    color_calibration@orange 0084                                 _BAUD4CONbits 0EE9  
                                       u4001 4394                                         u4010 43AC  
                                       u4011 43A8                                         u4020 4440  
                                       u4100 41AA                                         u4021 443C  
                                       u4101 41A6                                         u4030 4506  
                                       u4110 41BE                                         u4031 4502  
                                       u4111 41BA                                         u4040 452E  
                                       u4200 4800                                         u4120 4252  
                                       u5000 369A                                         u4041 452A  
                                       u4201 47FC                                         u4121 424E  
                                       u5001 3696                                         u4050 4572  
                                       u4210 4822                                         u4130 4ED6  
                                       u5010 36DE                                         _T2PR 0FBC  
                                       u4051 456E                                         u4211 481E  
                                       u4131 4ED2                                         u5011 36DA  
                                       u4060 4586                                         u4220 484A  
                                       u4140 4F10                                         u4300 33B6  
                                       u5100 1430                                         u5020 36F2  
                                       u4061 4582                                         u4221 4846  
                                       u4141 4F0C                                         u4301 33B2  
                                       u5101 142C                                         u5021 36EE  
                                       u4070 461A                                         u4230 487C  
                                       u4150 4CC2                                         u4310 51FA  
                                       u5110 153E                                         u5030 3786  
                                       u4071 4616                                         u4231 4878  
                                       u4151 4CBE                                         u4311 51F6  
                                       u5111 153A                                         u5031 3782  
                                       u4320 52B4                                         u4160 4CE4  
                                       u4240 3082                                         u4080 413E  
                                       u5200 2362                                         u5120 1E02  
                                       u4400 182E                                         u5040 0E14  
                                       u4321 52B0                                         u4161 4CE0  
                                       u4241 307E                                         u4081 413A  
                                       u5201 235E                                         u5121 1DFE  
                                       u4401 182A                                         u5041 0E10  
                                       u4170 4D0C                                         u4250 3098  
                                       u4090 4166                                         u5210 238A  
                                       u5130 1E40                                         u4410 18C0  
                                       u4330 3D64                                         u5050 0EEA  
                                       u4171 4D08                                         u4251 3094  
                                       u4091 4162                                         u5211 2386  
                                       u5131 1E3C                                         u4411 18BC  
                                       u4331 3D60                                         u5051 0EE6  
                                       u4500 4ADE                                         u4180 47A4  
                                       u4260 3112                                         u5140 1ED2  
                                       u4420 19C2                                         u4340 3D8C  
                                       u5060 0FC0                                         u4501 4ADA  
                                       u4181 47A0                                         u4261 310E  
                                       u5141 1ECE                                         u4421 19BE  
                                       u4341 3D88                                         u5061 0FBC  
                                       u5301 2B26                                         u5221 294E  
                                       u4510 4AFC                                         u4190 47C6  
                                       u4270 31E8                                         u5150 1F64  
                                       u4430 1A74                                         u4350 3DD0  
                                       u5070 1106                                         u4511 4AF8  
                                       u4191 47C2                                         u4271 31E4  
                                       u5151 1F60                                         u4431 1A70  
                                       u6007 17C6                                         u4351 3DCC  
                                       u5071 1102                                         u5311 2B38  
                                       u5231 2960                                         u4520 4B18  
                                       u4280 329A                                         u4600 2510  
                                       u5160 2066                                         u4440 1B26  
                                       u4360 3DE4                                         u5080 1214  
                                       u4521 4B14                                         u4281 3296  
                                       u4601 250C                                         u5161 2062  
                                       u4441 1B22                                         u6017 17FE  
                                       u4361 3DE0                                         u5081 1210  
                                       u5401 2D06                                         u5321 2B4A  
                                       u5241 296C                                         u4530 4B3E  
                                       u5170 2118                                         u4450 1BD8  
                                       u4370 3E78                                         u5090 1322  
                                       u5250 2A22                                         u4531 4B3A  
                                       u4611 252E                                         u5171 2114  
                                       u4451 1BD4                                         u6107 1A9E  
                                       u6027 1858                                         u4371 3E74  
                                       u5091 131E                                         u5411 2D24  
                                       u5331 2B5C                                         u5251 2A1E  
                                       u4540 4FA6                                         u4700 289E  
                                       u4620 25C6                                         u3900 4A62  
                                       u5180 21CA                                         u4460 1CBE  
                                       u4380 175E                                         u4541 4FA2  
                                       u4701 289A                                         u4621 25C2  
                                       u3901 4A5E                                         u5181 21C6  
                                       u4461 1CBA                                         u6117 1AD6  
                                       u6037 1890                                         u4381 175A  
                                       u5421 2D36                                         u5341 2B6E  
                                       u5261 2AD2                                         u4550 4FBC  
                                       u3830 515C                                         u3910 4A8A  
                                       u5190 227C                                         u4470 1CE6  
                                       u4390 179C                                         u5510 2E68  
                                       u4551 4FB8                                         u3831 5158  
                                       u4295 32B8                                         u4711 28BC  
                                       u4631 25E4                                         u3911 4A86  
                                       u5191 2278                                         u6207 1E6A  
                                       u4471 1CE2                                         u6127 1B50  
                                       u6047 18EA                                         u4391 1798  
                                       u5511 2E64                                         u5431 2D48  
                                       u5351 2B80                                         u5271 2AF0  
                                       u4480 4A9E                                         u4720 389C  
                                       u3840 5172                                         u4640 267C  
                                       u4560 23A4                                         u4800 3AAE  
                                       u3920 48F4                                         u5520 2EE6  
                                       u5360 2C1A                                         u4481 4A9A  
                                       u4721 3898                                         u3841 516E  
                                       u4641 2678                                         u4561 23A0  
                                       u4801 3AAA                                         u3921 48F0  
                                       u6217 1EA2                                         u6137 1B88  
                                       u6057 1922                                         u5521 2EE2  
                                       u5505 2E4C                                         u5441 2D5A  
                                       u5361 2C16                                         u5281 2B02  
                                       u4490 4AB8                                         u3850 4DEA  
                                       u4730 38AA                                         u4810 3AD0  
                                       u3930 4986                                         u5530 2EF8  
                                       u5370 2C4C                                         u4491 4AB4  
                                       u3851 4DE6                                         u4731 38A6  
                                       u4651 269A                                         u4571 23C2  
                                       u4811 3ACC                                         u3931 4982  
                                       u6307 2142                                         u6227 1EFC  
                                       u6147 1C02                                         u6067 195A  
                                       u5531 2EF4                                         u5507 2E50  
                                       u5451 2D6C                                         u5371 2C48  
                                       u5291 2B14                                         u3860 4E08  
                                       u4740 38B8                                         u3940 4FF0  
                                       u4660 2732                                         u4580 245A  
                                       u4900 3C2A                                         u4820 3AFA  
                                       u5380 2C8E                                         u3861 4E04  
                                       u4741 38B4                                         u3941 4FE8  
                                       u4661 272E                                         u4581 2456  
                                       u4901 3C26                                         u4821 3AF6  
                                       u6317 217A                                         u6237 1F34  
                                       u6157 1C3A                                         u6077 1992  
                                       u5461 2D7E                                         u5381 2C8A  
                                       u3870 4E24                                         u4750 38D0  
                                       u4910 3C4C                                         u4830 3B1C  
                                       u3871 4E20                                         u4751 38CC  
                                       u4671 2750                                         u4591 2478  
                                       u4911 3C48                                         u4831 3B18  
                                       u6407 4A30                                         u6327 21F4  
                                       u6247 1F8E                                         u6167 1D16  
                                       u6087 19EC                                         u5607 357E  
                                       u5471 2D90                                         u3880 4642  
                                       u4760 38EE                                         u3960 50B8  
                                       u4680 27E8                                         u4920 3C76  
                                       u4840 3B46                                         u3881 463E  
                                       u4761 38EA                                         u3961 50B4  
                                       u4681 27E4                                         u6417 501C  
                                       u4921 3C72                                         u4841 3B42  
                                       u6337 222C                                         u6257 1FC6  
                                       u6177 1D4E                                         u6097 1A24  
                                       u5617 3640                                         u5481 2DA2  
                                       u3890 470C                                         u4770 3920  
                                       u3970 508C                                         u4930 3C98  
                                       u4850 3B68                                         u3891 4708  
                                       u4771 391C                                         u3971 5088  
                                       u6507 2934                                         u4691 2806  
                                       u6427 4BB8                                         u4931 3C94  
                                       u4851 3B64                                         u6347 22A6  
                                       u6267 1FFE                                         u6187 1D86  
                                       u5707 0FE6                                         u5627 36AC  
                                       u5491 2DB4                                         u5395 2C9A  
                                       u5547 2A34                                         u3980 432C  
                                       u4860 3B92                                         u4780 3A62  
                                       u4940 349C                                         u3981 4328  
                                       u6517 37D8                                         u6437 243A  
                                       u4861 3B8E                                         u4781 3A5E  
                                       u6357 22DE                                         u6277 2036  
                                       u6197 1DBE                                         u5717 101E  
                                       u5637 3754                                         u4941 3498  
                                       u5397 2C9E                                         u5557 2BA0  
                                       u3990 4354                                         u3958 4FF2  
                                       u4870 3BB4                                         u4790 3A84  
                                       u4950 34C4                                         u6607 4366  
                                       u3991 4350                                         u6527 3818  
                                       u6447 24F0                                         u4871 3BB0  
                                       u4791 3A80                                         u6367 4956  
                                       u6287 2090                                         u5807 1272  
                                       u5727 1056                                         u5647 0E3A  
                                       u4951 34C0                                         u5567 2BCC  
                                       u4880 3BDE                                         u4960 3508  
                                       u6617 440E                                         u6537 3858  
                                       u6457 25A6                                         u4881 3BDA  
                                       u6377 410C                                         u6297 20C8  
                                       u5817 12AA                                         u5737 108E  
                                       u5657 0E72                                         u4961 3504  
                                       u5577 2C5E                                         u4890 3C00  
                                       u4970 351C                                         u6627 44D4  
                                       u6547 3904                                         u6467 265C  
                                       u4891 3BFC                                         u6387 4178  
                                       u5907 14FE                                         u5827 12E2  
                                       u5747 10C6                                         u5667 0EAA  
                                       u4971 3518                                         u5587 346A  
                                       u4980 35B0                                         u6637 4540  
                                       u6557 3964                                         u6477 2712  
                                       u6397 4220                                         u5917 1564  
                                       u5837 1348                                         u5757 112C  
                                       u5677 0F10                                         u4981 35AC  
                                       u5597 34D6                                         u4990 3672  
                                       u6647 45E8                                         u6567 39A4  
                                       u6487 27C8                                         u5927 15DC  
                                       u5847 1380                                         u5767 1164  
                                       u5687 0F48                                         u4991 366E  
                                       u6577 39E4                                         u6497 287E  
                                       u5937 3D32                                         u5857 13B8  
                                       u5777 119C                                         u5697 0F80  
                                       u6587 3A2C                                         u5947 3D9E  
                                       u5867 13F0                                         u5787 11D4  
                                       u6597 42FA                                         u5957 3E46  
                                       u5877 1456                                         u5797 123A  
                                       u5967 1656                                         u5887 148E  
                                       u5977 168E                                         u5897 14C6  
                                       u5987 16C6                                         u5997 16FE  
                    color_calibration@yellow 0080                  lostReturnHome@straightSpeed 003A  
                                       _main 2948                                         _move 0E02  
                                       _lost 00F2                                         fsr1h 0FE2  
                         i2___lwdiv@quotient 0005                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         max@a 0010  
                                       max@b 0012                                         btemp 004F  
                                       _stop 489E                                         min@a 0010  
                                       min@b 0012                                         prodh 0FF4  
                                       prodl 0FF3                                         start 00BE  
                           color_detect@blue 0022                          main@reverseDuration 017D  
                           __end_of_ADC_init 52A4                         ?i2_color_writetoaddr 0003  
                           color_detect@pink 002E                              __end_of_HighISR 00BE  
                      lostReturnHome@curMove 0039                                 ___param_bank 0000  
                       __end_of_batteryLevel 4FC6                                        ??_max 0014  
                                      ??_min 0014                              __end_of___aldiv 489E  
                                      ?_main 0001                                        _ADPCH 0F5F  
                            __end_of___awdiv 4B50                                        ?_move 0060  
                            __end_of___lldiv 4D40                                        ?_stop 0023  
                            ___awdiv@divisor 0012                              __end_of___lwdiv 4E44  
                                      i2l150 526A                                        i2l410 51E6  
                                      i2l147 4C9A                                        i2l262 519A  
                                      i2l271 5332                                        i2l424 52D2  
                                      i2l417 50F8                                        i2l265 533C  
                                      i2l274 5300                                        i2l259 5174  
                                      i2l371 00B2                              ___awdiv@counter 0014  
                             ??_color_detect 0046                                        _TMR0H 0FD4  
                                      _TMR0L 0FD3                          ___lmul@multiplicand 0014  
                 __end_of_I2C_2_Master_Start 5320                   __end_of_I2C_2_Master_Write 52F6  
                                 _Buggy_init 5040                   color_calibration@lightblue 0086  
                     returnHome@straightRamp 003C                       returnHome@straightTime 0037  
                                      tablat 0FF5                                        plusw0 0FEB  
                                      plusw2 0FDB                                        ttemp5 0050  
                                      ttemp6 0053                                        ttemp7 0057  
                                      stop@i 002B                                        status 0FD8  
                                      wtemp8 0050                            color_detect@color 0048  
                          color_detect@green 001C                            color_detect@white 0040  
                      ??i2_color_writetoaddr 0004                                 main@turnRamp 017F  
                      _I2C_2_Master_RepStart 5320                           putCharToRxBuf@byte 0001  
                            __initialization 4F22                    get16bitTMR0val@timer_high 0016  
                               __end_of_main 2EFC                                 __end_of_move 162C  
                               __end_of_stop 49A6                          move@reverseDuration 006B  
                            _get16bitTMR0val 5124                                       ??_main 0049  
                                     ??_move 0045                                       ??_stop 0028  
                              __activetblptr 0000                                calibration@mL 0031  
                              calibration@mR 0033                       returnHome@turnDuration 003E  
                               ?_setMotorPWM 001D                                       _ADRESH 0F64  
                                     _CCPR1H 0FAA                                       _CCPR2H 0FA6  
                                     _CCPR3H 0F25                                       _CCPR4H 0F21  
                           ___awdiv@dividend 0010                       lostReturnHome@turnRamp 003F  
                                     _RC0PPS 0E62                                       _RC4REG 0EE3  
                     wallAdjust@straightRamp 0028                                       _RE2PPS 0E74  
                                     _RC7PPS 0E69                                       _RD5PPS 0E6F  
                                     _RE4PPS 0E76                                       _RD6PPS 0E70  
                                     i2l1272 4EB6                                       i2l1265 4EAE  
                                     i2l3401 52F8                                       i2l3403 52FC  
                                     i2l3087 5174                                       i2l3089 5184  
                                     i2l4341 51D4                                       i2l4351 50E2  
                                     i2l4343 51D8                                       i2l3711 4E66  
                                     i2l3703 524E                                       i2l4345 51E4  
                                     i2l3721 4EA0                                       i2l3713 4E6E  
                                     i2l3705 4E44                                       i2l3393 5334  
                                     i2l4347 50CE                                       i2l4355 52BC  
                                     i2l4339 51C4                                       i2l3723 4EA2  
                                     i2l3715 4E7C                                       i2l3707 4E4C  
                                     i2l3395 5338                                       i2l4371 4C68  
                                     i2l4349 50DE                                       i2l3725 4EA8  
                                     i2l3717 4E82                                       i2l3709 4E5E  
                                     i2l3397 532A                                       i2l4373 4C72  
                                     i2l3719 4E98                                       i2l3399 532E  
                                     i2l4375 4C7C                                       i2l4367 4BF6  
                                     i2l4377 4C86                                       i2l4369 4C58  
                                     i2l4561 002C                                       i2l4379 4C90  
                                     i2l4571 006E                                       i2l4563 0030  
                                     i2l4555 0012                                       _RG6PPS 0E88  
                                     i2l4581 00AE                                       i2l4573 007C  
                                     i2l4557 0022                                       i2l4565 0054  
                                     i2l4575 0082                                       i2l4567 0064  
                                     i2l4559 0028                                       i2l4577 0092  
                                     i2l4569 006A                                       i2l4579 009A  
                                  ??_HighISR 000D                     __end_of_color_click_init 5040  
                                     _TMR0IE 714D                                       _TMR0IF 719D  
                                     _RX4PPS 0E15                                       _TX4REG 0EE4  
                              main@lightblue 01A5                                 ??_ADC_getval 0010  
                              ??_Timer0_init 0010                          calibration@turnRamp 0038  
                    calibration@turnDuration 0036                                 _CCPTMRS0bits 0FAD  
                           _getCharFromTxBuf 50CE                                       ___lmul 4EB8  
                                  ??___aldiv 0024                                       ___wmul 519C  
                                  ??___awdiv 0014                                    ??___lldiv 0024  
                                  ??___lwdiv 001A                                       clear_0 4F48  
                                     clear_1 4F54                                       clear_2 4F60  
                           ___awdiv@quotient 0016                                       isa$std 0001  
                    returnHome@straightSpeed 003A                                       move@mL 0060  
                                     move@mR 0062                            __end_ofi2___lwdiv 4EB8  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                  ?_ADC_init 0001                                       stop@mL 0023  
                                     stop@mR 0025                                  ?_Buggy_init 0001  
                          ??_initDCmotorsPWM 0012                           __end_of_ADC_getval 52BC  
                 i2color_writetoaddr@address 0004                             __end_of_turnLeft 4626  
                         color_detect@orange 0034                   lostReturnHome@moveSequence 0035  
                      __end_of_isDataInTxBuf 52D4                                   __accesstop 0060  
                    __end_of__initialization 4F6E                           color_detect@yellow 0028  
                            fullSpeedAhead@i 002C                                main@turnSpeed 017E  
                     ?_I2C_2_Master_RepStart 0001                                ___rparam_used 0001  
                       __end_of_color_detect 3CA8                    reverseShort@straightSpeed 0027  
              lostReturnHome@reverseDuration 003B                              _Interrupts_init 52D4  
                             __pcstackCOMRAM 0001                      __end_of_get16bitTMR0val 514C  
                               ?_white_Light 0001                                 __pidataBANK0 533E  
                   get16bitTMR0val@timer_low 0014                     get16bitTMR0val@timer_val 0018  
               ?_color_clear_init_interrupts 0001                             _reverseOneSquare 4086  
                        __end_of_Timer0_init 524C                               main@ambientNew 017B  
                                 ??_ADC_init 0010                                 rgb_2_hsv@HSV 0032  
                               _batteryLevel 4F78                                   __pbssBANK0 00B6  
                                 __pbssBANK1 01D7                                   __pbssBANK2 0200  
                             _rgb_2_hsv$3625 0066                               _rgb_2_hsv$3626 0068  
                             _rgb_2_hsv$3627 0060                            _color_writetoaddr 520C  
                               _T2CLKCONbits 0FBF                               _lostReturnHome 1CE8  
                   reverseShort@straightRamp 0028                           ?_color_writetoaddr 0012  
                                    ?___lmul 0010                                      ?___wmul 0010  
                   wallAdjust@adjustDuration 002C                               ___lmul@product 0018  
              ??_color_clear_init_interrupts 001D                                  move@curMove 0069  
                    lostReturnHome@turnSpeed 003D                          ??_color_writetoaddr 0013  
                    wallAdjust@straightSpeed 0027                                      _SP4BRGH 0EE6  
                                    _SP4BRGL 0EE5                   fullSpeedAhead@straightRamp 0028  
                      turnRight@turnDuration 0028                                      _SSP2ADD 0ED6  
                                    _SSP2BUF 0ED5                             _brightnessChange 00F3  
                                 _color_read 3E98                      __end_of_Interrupts_init 52EA  
                     color_writetoaddr@value 0012                                      _HighISR 0008  
                  __end_of_color_writetoaddr 522C                       __end_of_lostReturnHome 238C  
                                  _ADREFbits 0F58                           _I2C_2_Master_Start 5316  
                                 _initUSART4 526C                          i2_I2C_2_Master_Idle 5174  
                         _I2C_2_Master_Write 52EA                                      __Hparam 0000  
                        i2_I2C_2_Master_Stop 532A                                      __Lparam 0000  
                                wallAdjust@i 002E                                  _Timer0_init 522C  
                       calibration@turnSpeed 0035                             ?_get16bitTMR0val 0010  
                                    ___aldiv 4792                                      ___awdiv 4A8C  
                            lostReturnHome@i 0044                                      ___lldiv 4C9C  
                              ??_calibration 0039                          ?_I2C_2_Master_Start 0001  
                                    ___lwdiv 4DD0                          ?_I2C_2_Master_Write 0001  
                               __psmallconst 0E00                                      _ambient 00F8  
                                    __pcinit 4F22                                      __ramtop 0E00  
                                  ?_turnLeft 0023                            __end_of_rgb_2_hsv 33D8  
                                    __ptext0 2948                                      __ptext1 33D8  
                                    __ptext2 0E02                                      __ptext3 3CA8  
                                    __ptext4 162C                                      __ptext5 1CE8  
                                    __ptext6 489E                                      __ptext7 4086  
                                    __ptext8 5302                                      __ptext9 5124  
                       ?i2_I2C_2_Master_Idle 0001                                    _T2CONbits 0FBD  
                              ?_reverseShort 0023                         ?i2_I2C_2_Master_Stop 0001  
                           ___aldiv@dividend 001C                                    _T2HLTbits 0FBE  
                              _RxBufWriteCnt 004E                                      main@HSV 01B5  
                   __end_of_getCharFromTxBuf 50FA                                      main@buf 008A  
                                    main@red 0181                         ??_I2C_2_Master_Start 0011  
                       ??_I2C_2_Master_Write 0011                         end_of_initialization 4F6E  
            ??i2_color_clear_init_interrupts 0008                  __end_ofi2_color_writetoaddr 526C  
                           ADC_getval@tmpval 0010                            reverseOneSquare@i 002D  
                          ?_color_click_init 0001                              ?_lostReturnHome 0031  
                                 _wallAdjust 33D8                              ___lldiv@divisor 0020  
                                 _resetTimer 5302                           ??_color_click_init 0022  
                            ___lldiv@counter 0028                             ___aldiv@quotient 0026  
                 batteryLevel@batteryQuarter 0019                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc1 0FE6                                      postinc2 0FDE  
                 batteryLevel@batteryVoltage 0018                                   main@F14650 00B6  
                                 main@F14661 00F4                                   main@F14656 01D7  
                                 main@F14658 0200                                   _returnHome 162C  
                            _initDCmotorsPWM 4D40                                   ??_turnLeft 002A  
                                  _PORTFbits 0F8E                           setMotorPWM@negDuty 0022  
                             ??_reverseShort 0029                        ??i2_I2C_2_Master_Idle 0001  
                              move@turnSpeed 006D                            __end_of_turnRight 444C  
                      ??i2_I2C_2_Master_Stop 0002                          __end_of_calibration 3A40  
                               _color_detect 3A40                                  returnHome@i 0044  
                                  _TRISAbits 0F81                           setMotorPWM@posDuty 0021  
                                  _TRISBbits 0F82                                    _TRISCbits 0F83  
                                  _TRISDbits 0F84                                    _TRISEbits 0F85  
                                  _TRISFbits 0F86                                    _TRISGbits 0F87  
                                  _TRISHbits 0F88                             white_Light@state 0010  
                               ??_Buggy_init 0010                             fullSpeedAhead@mL 0023  
                           fullSpeedAhead@mR 0025                                  ?_color_read 0014  
                          i2___lwdiv@divisor 0003                     color_writetoaddr@address 0013  
                                  i2___lwdiv 4E44                      ??_I2C_2_Master_RepStart 0011  
                          i2___lwdiv@counter 0007                     __end_of_reverseOneSquare 4272  
                           ?_Interrupts_init 0001                  reverseShort@reverseDuration 002C  
                              stop@cur_power 002D                                  _CCP1CONbits 0FAB  
                     color_calibration@green 007C                                 _EUSART4RXbuf 00DE  
                        returnHome@turnSpeed 003D                                 _EUSART4TXbuf 0252  
                                _CCP2CONbits 0FA7                       color_calibration@white 0088  
                                _CCP3CONbits 0F26                   lostReturnHome@straightRamp 003C  
                 lostReturnHome@straightTime 0037                                  ?_initUSART4 0001  
                                 main@orange 019F                                  _CCP4CONbits 0F22  
                                 main@motorL 01CD                                   main@motorR 01C3  
                                 main@yellow 0193                               color_read@RGBC 0014  
                             _fullSpeedAhead 49A6                               __end_of___lmul 4F22  
                       turnLeft@turnDuration 0028                               __end_of___wmul 51C2  
                         __end_of_Buggy_init 5076                          start_initialization 4F22  
                                __end_of_max 50CE                                  __end_of_min 50A2  
                              _TxBufWriteCnt 004C                   lostReturnHome@turnDuration 003E  
                                 rgb_2_hsv@b 0074                                   rgb_2_hsv@g 0072  
                                 ?i2___lwdiv 0001                                   rgb_2_hsv@r 006A  
                           move@moveSequence 0065                          wallAdjust@cur_power 0030  
      __end_ofi2_color_clear_init_interrupts 4C9C                i2_color_clear_init_interrupts 4BF6  
                                ?_wallAdjust 0023                                  ?_resetTimer 0001  
                    __end_of_initDCmotorsPWM 4DD0                       __end_of_fullSpeedAhead 4A8C  
                         turnRight@cur_power 002F                                     ??___lmul 0018  
                              rgb_2_hsv@RGBC 002A                                     ??___wmul 0014  
                             _putCharToRxBuf 51C2                                  __pdataBANK0 00F4  
                              rgb_2_hsv@diff 006E                i2I2C_2_Master_Write@data_byte 0002  
                                _calibration 37A6                                rgb_2_hsv@cmax 006C  
                              rgb_2_hsv@cmin 0064                                  ?_returnHome 0031  
               reverseOneSquare@straightRamp 0029                 __end_ofi2_I2C_2_Master_Start 533E  
               __end_ofi2_I2C_2_Master_Write 5302                            turnLeft@cur_power 002F  
                                __pbssCOMRAM 004B                                __pcstackBANK0 0060  
                              __pcstackBANK1 0100                                     ?_HighISR 0001  
                       __end_of_reverseShort 3E98                             stop@straightRamp 0027  
                           ___lwdiv@dividend 0016                                 ?_Timer0_init 0001  
                     __end_of_putCharToRxBuf 51E8                              ?_fullSpeedAhead 0023  
                                  __pintcode 0008                                     ?___aldiv 001C  
                         turnRight@turnSpeed 0027                                     ?___awdiv 0010  
                                   ?___lldiv 001C                                     ?___lwdiv 0016  
                       I2C_2_Master_Read@ack 0012                         I2C_2_Master_Read@tmp 0013  
                                __smallconst 0E00                               reverseShort@mL 0023  
                             reverseShort@mR 0025                             main@moveSequence 0152  
                          _I2C_2_Master_Idle 514C                            _I2C_2_Master_Init 50FA  
                          _I2C_2_Master_Read 4FC6                            turnLeft@turnSpeed 0027  
                          _I2C_2_Master_Stop 530C                                    _rgb_2_hsv 2EFC  
                               _RxBufReadCnt 004D                                     _ADC_init 528A  
                         ?_I2C_2_Master_Idle 0001                           ?_I2C_2_Master_Init 0001  
                         ?_I2C_2_Master_Read 0001                                ??_setMotorPWM 001F  
                         ?_I2C_2_Master_Stop 0001                             ___lwdiv@quotient 001B  
                   initDCmotorsPWM@PWMperiod 0010                            ?_getCharFromTxBuf 0001  
                                ??i2___lwdiv 0005                             ??_lostReturnHome 0040  
                         ??_getCharFromTxBuf 0001                            move@straightSpeed 006A  
                            ___aldiv@divisor 0020                          ??_I2C_2_Master_Idle 0010  
                            ___aldiv@counter 0024                          ??_I2C_2_Master_Init 0010  
                        ??_I2C_2_Master_Read 0011                               ___wmul@product 0014  
                                   _LATAbits 0F79                          ??_I2C_2_Master_Stop 0011  
                                   _LATCbits 0F7B                                _isDataInTxBuf 52BC  
                                   _LATDbits 0F7C                                     _LATEbits 0F7D  
                                   _LATFbits 0F7E                                     _LATGbits 0F7F  
                                   _LATHbits 0F80                                     _IPR0bits 0E1F  
                                   _PIE0bits 0E29                                     _PIE4bits 0E2D  
                                   i2u200_40 519A                                     i2u200_41 5196  
                                turnRight@mL 0023                                  turnRight@mR 0025  
                                   _PIR0bits 0E33                                     i2u336_40 51D4  
                                   i2u336_41 51D0                                     i2u337_40 50DE  
                                   i2u265_40 4E5E                                     i2u337_41 50DA  
                                   i2u265_41 4E5A                                     i2u338_40 52D0  
                                   i2u266_40 4E7C                                     i2u338_41 52CA  
                                   i2u266_41 4E78                                     i2u339_40 52D2  
                                   i2u267_40 4E98                                     i2u267_41 4E94  
                                   i2u373_40 0022                                     i2u373_41 001E  
                                   i2u374_40 0042                                     i2u374_41 003A  
                                   i2u199_40 5184                                     i2u199_41 5180  
                                   _PIR4bits 0E37                                     i2u376_40 0064  
                                   i2u375_48 0044                                     i2u376_41 0060  
                                   i2u377_40 007C                                     i2u377_41 0078  
                                   i2u378_40 0092                                     i2u378_41 008E  
                                   i2u379_40 00AE                                     i2u379_41 00AA  
                                   i2u665_47 4C5E                              ?_putCharToRxBuf 0001  
                           ?_initDCmotorsPWM 0010                  fullSpeedAhead@straightSpeed 0027  
        __end_of_color_clear_init_interrupts 4BF6               ?i2_color_clear_init_interrupts 0001  
                _color_clear_init_interrupts 4B50                                     _SSP2CON2 0EDA  
                                   _SSP2STAT 0ED8                                 move@turnRamp 006F  
                                 _ADCON0bits 0F60                    __end_of_I2C_2_Master_Idle 5174  
                      color_calibration@RGBC 0076                    __end_of_I2C_2_Master_Init 5124  
                  __end_of_I2C_2_Master_Read 5008                            ___wmul@multiplier 0010  
                  __end_of_I2C_2_Master_Stop 5316     color_clear_init_interrupts@low_threshold 0020  
 i2color_clear_init_interrupts@low_threshold 000B                                 setMotorPWM@m 001D  
                I2C_2_Master_Write@data_byte 0011                        color_calibration@blue 007E  
                         returnHome@turnRamp 003F                                    main@color 01B2  
                      color_calibration@pink 0082                                    main@green 0187  
                                  main@white 01AB                                   ?_rgb_2_hsv 002A  
                               _TxBufReadCnt 004B                     i2color_writetoaddr@value 0003  
                                  _turnRight 4272                    returnHome@reverseDuration 003B  
                               ??_color_read 0016                            ___lmul@multiplier 0010  
                                  copy_data0 4F36                               ?_isDataInTxBuf 0001  
              __end_of_I2C_2_Master_RepStart 532A                            ?_reverseOneSquare 0023  
                        __end_of_setMotorPWM 4792                                 ??_initUSART4 0010  
                       i2_I2C_2_Master_Start 5334              reverseOneSquare@reverseDuration 0028  
                       i2_I2C_2_Master_Write 52F6                           ??_reverseOneSquare 002A  
                                   __Hrparam 0000                                   _ADC_getval 52A4  
                           main@testSequence 00B2                                     __Lrparam 0000  
                               wallAdjust@mL 0023                                 wallAdjust@mR 0025  
                              ??_white_Light 0010                  __end_ofi2_I2C_2_Master_Idle 519C  
                __end_ofi2_I2C_2_Master_Stop 5334                             lostReturnHome@mL 0031  
                           lostReturnHome@mR 0033                           __end_of_color_read 4086  
                                 _ANSELBbits 0E9A                                   _ANSELDbits 0EA7  
                                 _ANSELFbits 0EB4                                   _T0CON0bits 0FD5  
                                 _T0CON1bits 0FD6                            _color_calibration 238C  
              reverseOneSquare@straightSpeed 0027                              ___lwdiv@divisor 0018  
                     returnHome@moveSequence 0035                           __end_of_initUSART4 528A  
                            ___lwdiv@counter 001A                            turnRight@turnRamp 0029  
                                 ?_turnRight 0023                                     __ptext10 49A6  
                                   __ptext11 526C                                     __ptext20 2EFC  
                                   __ptext12 4D40                                     __ptext21 5076  
                                   __ptext13 3A40                                     __ptext30 5320  
                                   __ptext22 50A2                                     __ptext14 5008  
                                   __ptext31 4FC6                                     __ptext23 4EB8  
                                   __ptext15 4B50                                     __ptext40 4A8C  
                                   __ptext32 514C                                     __ptext24 4C9C  
                                   __ptext16 520C                                     __ptext41 528A  
                                   __ptext33 37A6                                     __ptext25 4792  
                                   __ptext17 50FA                                     __ptext50 532A  
                                   __ptext42 52A4                                     __ptext34 4272  
                                   __ptext26 3E98                                     __ptext18 238C  
                                   __ptext51 5334                                     __ptext43 522C  
                                   __ptext35 444C                                     __ptext27 52EA  
                                   __ptext19 51E8                                     __ptext52 5174  
                                   __ptext44 52D4                                     __ptext36 4626  
                                   __ptext28 530C                                     __ptext53 4E44  
                                   __ptext45 5040                                     __ptext37 519C  
                                   __ptext29 5316                                     __ptext54 51C2  
                                   __ptext38 4DD0                                     __ptext55 52BC  
                                   __ptext47 4BF6                                     __ptext39 4F78  
                                   __ptext56 50CE                                     __ptext48 524C  
                                   __ptext49 52F6                                    move@color 0064  
                         ?_color_calibration 0076                                ?_batteryLevel 0001  
                               _SSP2CON1bits 0ED9                                 _SSP2CON2bits 0EDA  
                              reverseShort@i 002D                             turnLeft@turnRamp 0029  
                      reverseShort@cur_power 002F                                   turnLeft@mL 0023  
                                 turnLeft@mR 0025                          ??_color_calibration 0040  
                      ?i2_I2C_2_Master_Start 0001                                 ??_wallAdjust 0029  
                           move@straightRamp 006C                        ?i2_I2C_2_Master_Write 0001  
                           move@straightTime 0067                            returnHome@curMove 0039  
                               ??_resetTimer 0010                                   turnRight@i 002D  
                                   isa$xinst 0000                                   _RC4STAbits 0EE7  
                                   main@RGBC 01BB                                     int$flags 004F  
                       color_calibration@HSV 0078                                 ?_calibration 0031  
                                   main@blue 018D                         color_calibration@red 007A  
                               ??_returnHome 0040                                     main@pink 0199  
                                   main@wall 017A                                     _turnLeft 444C  
                    fullSpeedAhead@cur_power 002E                          __end_of_white_Light 520C  
                  __end_of_color_calibration 2948                                   _INTCONbits 0FF2  
                               _reverseShort 3CA8                    reverseOneSquare@cur_power 002F  
                                ??_rgb_2_hsv 0034                           __end_of_wallAdjust 37A6  
                         reverseOneSquare@mL 0023                           reverseOneSquare@mR 0025  
                         __end_of_resetTimer 530C                             move@turnDuration 006E  
                             ??_batteryLevel 0018                                  _setMotorPWM 4626  
                          ??_get16bitTMR0val 0012                              ??_isDataInTxBuf 0001  
                                   intlevel2 0000                             ___lldiv@dividend 001C  
                           ??_fullSpeedAhead 0029                           __end_of_returnHome 1CE8  
                                  turnLeft@i 002D                                  ?_ADC_getval 0001  
                          main@straightSpeed 0180                             _color_click_init 5008  
                      color_detect@lightblue 003A                                   _SSP2DATPPS 0E1D  
                           ___lldiv@quotient 0024                                   _SSP2CLKPPS 0E1C  
                               ___aldiv@sign 0025                                  ??_turnRight 002A  
                           main@straightRamp 01B3                             main@straightTime 0100  
                                 _TX4STAbits 0EE8                       ??i2_I2C_2_Master_Start 0002  
                     ??i2_I2C_2_Master_Write 0002                             ??_putCharToRxBuf 0001  
                               returnHome@mL 0031                                 returnHome@mR 0033  
