

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 05 14:12:22 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 21/07/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F67K40 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     _RC4STAbits	set	3815
    87   000000                     _SP4BRGH	set	3814
    88   000000                     _SP4BRGL	set	3813
    89   000000                     _TX4STAbits	set	3816
    90   000000                     _BAUD4CONbits	set	3817
    91   000000                     _TX4REG	set	3812
    92   000000                     _TRISEbits	set	3973
    93   000000                     _TRISGbits	set	3975
    94   000000                     _LATFbits	set	3966
    95   000000                     _TRISFbits	set	3974
    96   000000                     _TRISHbits	set	3976
    97   000000                     _LATEbits	set	3965
    98   000000                     _LATGbits	set	3967
    99   000000                     _SSP2CON2bits	set	3802
   100   000000                     _RX4PPS	set	3605
   101   000000                     _SSP2CLKPPS	set	3612
   102   000000                     _SSP2DATPPS	set	3613
   103   000000                     _ANSELDbits	set	3751
   104   000000                     _SSP2ADD	set	3798
   105   000000                     _SSP2CON1bits	set	3801
   106   000000                     _LATAbits	set	3961
   107   000000                     _LATDbits	set	3964
   108   000000                     _LATHbits	set	3968
   109   000000                     _TRISBbits	set	3970
   110   000000                     _TRISAbits	set	3969
   111   000000                     _TRISDbits	set	3972
   112   000000                     _PORTFbits	set	3982
   113   000000                     _INTCONbits	set	4082
   114   000000                     _RC4REG	set	3811
   115   000000                     _SSP2CON2	set	3802
   116   000000                     _SSP2STAT	set	3800
   117   000000                     _ANSELFbits	set	3764
   118   000000                     _SSP2BUF	set	3797
   119   000000                     _PIE0bits	set	3625
   120   000000                     _RD5PPS	set	3695
   121   000000                     _ANSELBbits	set	3738
   122   000000                     _RD6PPS	set	3696
   123   000000                     _PIE4bits	set	3629
   124   000000                     _PIR0bits	set	3635
   125   000000                     _PIR4bits	set	3639
   126   000000                     _RC0PPS	set	3682
   127                           
   128                           	psect	smallconst
   129   000E00                     __psmallconst:
   130                           	callstack 0
   131   000E00  00                 	db	0
   132   000E01                     STR_1:
   133   000E01  72                 	db	114	;'r'
   134   000E02  3D                 	db	61	;'='
   135   000E03  25                 	db	37
   136   000E04  64                 	db	100	;'d'
   137   000E05  20                 	db	32
   138   000E06  67                 	db	103	;'g'
   139   000E07  3D                 	db	61	;'='
   140   000E08  25                 	db	37
   141   000E09  64                 	db	100	;'d'
   142   000E0A  20                 	db	32
   143   000E0B  62                 	db	98	;'b'
   144   000E0C  3D                 	db	61	;'='
   145   000E0D  25                 	db	37
   146   000E0E  64                 	db	100	;'d'
   147   000E0F  20                 	db	32
   148   000E10  63                 	db	99	;'c'
   149   000E11  3D                 	db	61	;'='
   150   000E12  25                 	db	37
   151   000E13  64                 	db	100	;'d'
   152   000E14  20                 	db	32
   153   000E15  20                 	db	32
   154   000E16  20                 	db	32
   155   000E17  6E                 	db	110	;'n'
   156   000E18  3A                 	db	58	;':'
   157   000E19  20                 	db	32
   158   000E1A  72                 	db	114	;'r'
   159   000E1B  3D                 	db	61	;'='
   160   000E1C  25                 	db	37
   161   000E1D  64                 	db	100	;'d'
   162   000E1E  20                 	db	32
   163   000E1F  67                 	db	103	;'g'
   164   000E20  3D                 	db	61	;'='
   165   000E21  25                 	db	37
   166   000E22  64                 	db	100	;'d'
   167   000E23  20                 	db	32
   168   000E24  62                 	db	98	;'b'
   169   000E25  3D                 	db	61	;'='
   170   000E26  25                 	db	37
   171   000E27  64                 	db	100	;'d'
   172   000E28  0D                 	db	13
   173   000E29  0A                 	db	10
   174   000E2A  00                 	db	0
   175   000E2B  00                 	db	0	; dummy byte at the end
   176   000000                     
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180   001AEC                     __pcinit:
   181                           	callstack 0
   182   001AEC                     start_initialization:
   183                           	callstack 0
   184   001AEC                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Clear objects allocated to BANK1 (40 bytes)
   188   001AEC  EE01  F000         	lfsr	0,__pbssBANK1
   189   001AF0  0E28               	movlw	40
   190   001AF2                     clear_0:
   191   001AF2  6AEE               	clrf	postinc0,c
   192   001AF4  06E8               	decf	wreg,f,c
   193   001AF6  E1FD               	bnz	clear_0
   194                           
   195                           ; Clear objects allocated to BANK0 (92 bytes)
   196   001AF8  EE00  F060         	lfsr	0,__pbssBANK0
   197   001AFC  0E5C               	movlw	92
   198   001AFE                     clear_1:
   199   001AFE  6AEE               	clrf	postinc0,c
   200   001B00  06E8               	decf	wreg,f,c
   201   001B02  E1FD               	bnz	clear_1
   202                           
   203                           ; Clear objects allocated to COMRAM (29 bytes)
   204   001B04  EE00  F03D         	lfsr	0,__pbssCOMRAM
   205   001B08  0E1D               	movlw	29
   206   001B0A                     clear_2:
   207   001B0A  6AEE               	clrf	postinc0,c
   208   001B0C  06E8               	decf	wreg,f,c
   209   001B0E  E1FD               	bnz	clear_2
   210   001B10                     end_of_initialization:
   211                           	callstack 0
   212   001B10                     __end_of__initialization:
   213                           	callstack 0
   214   001B10  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215   001B12  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216   001B14  0E00               	movlw	low (__Lmediumconst shr (0+16))
   217   001B16  6EF8               	movwf	tblptru,c
   218   001B18  0100               	movlb	0
   219   001B1A  EFC2  F00A         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222   00003D                     __pbssCOMRAM:
   223                           	callstack 0
   224   00003D                     _EUSART4RXbuf:
   225                           	callstack 0
   226   00003D                     	ds	20
   227   000051                     _width:
   228                           	callstack 0
   229   000051                     	ds	2
   230   000053                     _prec:
   231                           	callstack 0
   232   000053                     	ds	2
   233   000055                     _flags:
   234                           	callstack 0
   235   000055                     	ds	1
   236   000056                     _TxBufReadCnt:
   237                           	callstack 0
   238   000056                     	ds	1
   239   000057                     _TxBufWriteCnt:
   240                           	callstack 0
   241   000057                     	ds	1
   242   000058                     _RxBufReadCnt:
   243                           	callstack 0
   244   000058                     	ds	1
   245   000059                     _RxBufWriteCnt:
   246                           	callstack 0
   247   000059                     	ds	1
   248                           
   249                           	psect	bssBANK0
   250   000060                     __pbssBANK0:
   251                           	callstack 0
   252   000060                     _EUSART4TXbuf:
   253                           	callstack 0
   254   000060                     	ds	60
   255   00009C                     _dbuf:
   256                           	callstack 0
   257   00009C                     	ds	32
   258                           
   259                           	psect	bssBANK1
   260   000100                     __pbssBANK1:
   261                           	callstack 0
   262   000100                     	ds	40
   263                           
   264                           	psect	cstackBANK0
   265   0000BC                     __pcstackBANK0:
   266                           	callstack 0
   267   0000BC                     main@buf:
   268                           	callstack 0
   269                           
   270                           ; 40 bytes @ 0x0
   271   0000BC                     	ds	40
   272   0000E4                     main@RGBC_n:
   273                           	callstack 0
   274                           
   275                           ; 8 bytes @ 0x28
   276   0000E4                     	ds	8
   277   0000EC                     main@RGBC:
   278                           	callstack 0
   279                           
   280                           ; 8 bytes @ 0x30
   281   0000EC                     	ds	8
   282                           
   283                           	psect	cstackCOMRAM
   284   000001                     __pcstackCOMRAM:
   285                           	callstack 0
   286   000001                     ??_getCharFromTxBuf:
   287   000001                     putCharToRxBuf@byte:
   288                           	callstack 0
   289   000001                     
   290                           ; 1 bytes @ 0x0
   291   000001                     	ds	1
   292   000002                     ??_HighISR:
   293                           
   294                           ; 1 bytes @ 0x1
   295   000002                     	ds	3
   296   000005                     ??_I2C_2_Master_Idle:
   297   000005                     ?___awdiv:
   298                           	callstack 0
   299   000005                     ?___awmod:
   300                           	callstack 0
   301   000005                     ?___lmul:
   302                           	callstack 0
   303   000005                     white_Light@state:
   304                           	callstack 0
   305   000005                     putCharToTxBuf@byte:
   306                           	callstack 0
   307   000005                     ___awdiv@dividend:
   308                           	callstack 0
   309   000005                     ___awmod@dividend:
   310                           	callstack 0
   311   000005                     fputc@c:
   312                           	callstack 0
   313   000005                     ___lmul@multiplier:
   314                           	callstack 0
   315   000005                     color_detect@RGBC_n:
   316                           	callstack 0
   317                           
   318                           ; 8 bytes @ 0x4
   319   000005                     	ds	1
   320   000006                     ??_I2C_2_Master_Read:
   321   000006                     I2C_2_Master_Write@data_byte:
   322                           	callstack 0
   323   000006                     TxBufferedString@string:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x5
   327   000006                     	ds	1
   328   000007                     color_writetoaddr@value:
   329                           	callstack 0
   330   000007                     I2C_2_Master_Read@ack:
   331                           	callstack 0
   332   000007                     fputc@fp:
   333                           	callstack 0
   334   000007                     ___awdiv@divisor:
   335                           	callstack 0
   336   000007                     ___awmod@divisor:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x6
   340   000007                     	ds	1
   341   000008                     ??_fputc:
   342   000008                     color_writetoaddr@address:
   343                           	callstack 0
   344   000008                     I2C_2_Master_Read@tmp:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x7
   348   000008                     	ds	1
   349   000009                     ??_color_click_init:
   350   000009                     color_read@RGBC:
   351                           	callstack 0
   352   000009                     ___awdiv@counter:
   353                           	callstack 0
   354   000009                     ___awmod@counter:
   355                           	callstack 0
   356   000009                     ___lmul@multiplicand:
   357                           	callstack 0
   358                           
   359                           ; 4 bytes @ 0x8
   360   000009                     	ds	1
   361   00000A                     ??_color_read:
   362   00000A                     ___awdiv@sign:
   363                           	callstack 0
   364   00000A                     ___awmod@sign:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x9
   368   00000A                     	ds	1
   369   00000B                     ?_abs:
   370                           	callstack 0
   371   00000B                     ___awdiv@quotient:
   372                           	callstack 0
   373   00000B                     abs@a:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0xA
   377   00000B                     	ds	2
   378   00000D                     ??_abs:
   379   00000D                     color_detect@color:
   380                           	callstack 0
   381   00000D                     ___lmul@product:
   382                           	callstack 0
   383                           
   384                           ; 4 bytes @ 0xC
   385   00000D                     	ds	2
   386   00000F                     vfpfcnvrt@fp:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0xE
   390   00000F                     	ds	1
   391   000010                     vfpfcnvrt@fmt:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0xF
   395   000010                     	ds	1
   396   000011                     ?___aldiv:
   397                           	callstack 0
   398   000011                     vfpfcnvrt@ap:
   399                           	callstack 0
   400   000011                     ___aldiv@dividend:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x10
   404   000011                     	ds	1
   405   000012                     ??_vfpfcnvrt:
   406                           
   407                           ; 1 bytes @ 0x11
   408   000012                     	ds	1
   409   000013                     vfpfcnvrt@done:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x12
   413   000013                     	ds	1
   414   000014                     vfpfcnvrt@cp:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x13
   418   000014                     	ds	1
   419   000015                     ___aldiv@divisor:
   420                           	callstack 0
   421   000015                     vfpfcnvrt@convarg:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0x14
   425   000015                     	ds	4
   426   000019                     ___aldiv@counter:
   427                           	callstack 0
   428   000019                     vfpfcnvrt@c:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x18
   432   000019                     	ds	1
   433   00001A                     ?_vfprintf:
   434                           	callstack 0
   435   00001A                     ___aldiv@sign:
   436                           	callstack 0
   437   00001A                     vfprintf@fp:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x19
   441   00001A                     	ds	1
   442   00001B                     vfprintf@fmt:
   443                           	callstack 0
   444   00001B                     ___aldiv@quotient:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0x1A
   448   00001B                     	ds	1
   449   00001C                     vfprintf@ap:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x1B
   453   00001C                     	ds	1
   454   00001D                     vfprintf@cfmt:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x1C
   458   00001D                     	ds	1
   459   00001E                     ?_sprintf:
   460                           	callstack 0
   461   00001E                     sprintf@s:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x1D
   465   00001E                     	ds	1
   466   00001F                     sprintf@fmt:
   467                           	callstack 0
   468   00001F                     color_normalise@RGBC:
   469                           	callstack 0
   470                           
   471                           ; 8 bytes @ 0x1E
   472   00001F                     	ds	8
   473   000027                     color_normalise@RGBC_n:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x26
   477   000027                     	ds	1
   478   000028                     ??_color_normalise:
   479                           
   480                           ; 1 bytes @ 0x27
   481   000028                     	ds	6
   482   00002E                     sprintf@ap:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x2D
   486   00002E                     	ds	1
   487   00002F                     sprintf@f:
   488                           	callstack 0
   489                           
   490                           ; 12 bytes @ 0x2E
   491   00002F                     	ds	12
   492   00003B                     ??_main:
   493                           
   494                           ; 1 bytes @ 0x3A
   495   00003B                     	ds	2
   496                           
   497 ;;
   498 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   499 ;;
   500 ;; *************** function _main *****************
   501 ;; Defined at:
   502 ;;		line 22 in file "main.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  buf            40    0[BANK0 ] unsigned char [40]
   507 ;;  RGBC            8   48[BANK0 ] struct RGBC_val
   508 ;;  RGBC_n          8   40[BANK0 ] struct RGBC_val
   509 ;;  color           1    0        unsigned char 
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   520 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   522 ;;      Totals:         2      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   523 ;;Total ram usage:       58 bytes
   524 ;; Hardware stack levels required when called: 7
   525 ;; This function calls:
   526 ;;		_Buggy_init
   527 ;;		_Interrupts_init
   528 ;;		_TxBufferedString
   529 ;;		_color_click_init
   530 ;;		_color_detect
   531 ;;		_color_normalise
   532 ;;		_color_read
   533 ;;		_initUSART4
   534 ;;		_sendTxBuf
   535 ;;		_sprintf
   536 ;;		_white_Light
   537 ;; This function is called by:
   538 ;;		Startup code after reset
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text0
   543   001584                     __ptext0:
   544                           	callstack 0
   545   001584                     _main:
   546                           	callstack 24
   547   001584                     
   548                           ;main.c: 23:     Buggy_init();
   549   001584  EC27  F00D         	call	_Buggy_init	;wreg free
   550   001588                     
   551                           ;main.c: 24:     color_click_init();
   552   001588  EC49  F00C         	call	_color_click_init	;wreg free
   553   00158C                     
   554                           ;main.c: 25:     initUSART4();
   555   00158C  EC13  F00E         	call	_initUSART4	;wreg free
   556   001590                     
   557                           ;main.c: 26:     Interrupts_init();
   558   001590  EC47  F00E         	call	_Interrupts_init	;wreg free
   559   001594                     
   560                           ;main.c: 27:     unsigned char color;;main.c: 28:     char buf[40] = {0};
   561   001594  EE20  F0BC         	lfsr	2,main@buf
   562   001598  0E27               	movlw	39
   563   00159A                     u1411:
   564   00159A  6ADE               	clrf	postinc2,c
   565   00159C  06E8               	decf	wreg,f,c
   566   00159E  E2FD               	bc	u1411
   567   0015A0                     
   568                           ;main.c: 30:     struct RGBC_val RGBC, RGBC_n;;main.c: 33:     LATHbits.LATH1=LATDbits.L
      +                          ATD3=1;
   569   0015A0  867C               	bsf	124,3,c	;volatile
   570   0015A2  8280               	bsf	128,1,c	;volatile
   571   0015A4                     
   572                           ;main.c: 36:     white_Light(1);
   573   0015A4  0E01               	movlw	1
   574   0015A6  ECF1  F00D         	call	_white_Light
   575   0015AA                     l50:
   576   0015AA  B48E               	btfsc	142,2,c	;volatile
   577   0015AC  EFDA  F00A         	goto	u1421
   578   0015B0  EFDC  F00A         	goto	u1420
   579   0015B4                     u1421:
   580   0015B4  EFD5  F00A         	goto	l50
   581   0015B8                     u1420:
   582   0015B8                     
   583                           ;main.c: 41:         color_read(&RGBC);
   584   0015B8  0EEC               	movlw	low main@RGBC
   585   0015BA  6E09               	movwf	color_read@RGBC^0,c
   586   0015BC  EC16  F007         	call	_color_read	;wreg free
   587   0015C0                     
   588                           ;main.c: 42:         color_normalise(RGBC, &RGBC_n);
   589   0015C0  EE20  F0EC         	lfsr	2,main@RGBC
   590   0015C4  EE00  F01F         	lfsr	0,color_normalise@RGBC
   591   0015C8  0E07               	movlw	7
   592   0015CA                     u1431:
   593   0015CA  CFDB FFEB          	movff	plusw2,plusw0
   594   0015CE  06E8               	decf	wreg,f,c
   595   0015D0  E2FC               	bc	u1431
   596   0015D2  0EE4               	movlw	low main@RGBC_n
   597   0015D4  6E27               	movwf	color_normalise@RGBC_n^0,c
   598   0015D6  EC9B  F009         	call	_color_normalise	;wreg free
   599   0015DA  EE20  F0E4         	lfsr	2,main@RGBC_n
   600   0015DE  EE00  F005         	lfsr	0,color_detect@RGBC_n
   601   0015E2  0E07               	movlw	7
   602   0015E4                     u1441:
   603   0015E4  CFDB FFEB          	movff	plusw2,plusw0
   604   0015E8  06E8               	decf	wreg,f,c
   605   0015EA  E2FC               	bc	u1441
   606   0015EC  ECDD  F008         	call	_color_detect	;wreg free
   607   0015F0                     
   608                           ;main.c: 45:         sprintf(buf,"r=%d g=%d b=%d c=%d   n: r=%d g=%d b=%d\r\n",RGBC.R,RG
      +                          BC.G,RGBC.B,RGBC.C, RGBC_n.R,RGBC_n.G,RGBC_n.B);
   609   0015F0  0EBC               	movlw	low main@buf
   610   0015F2  6E1E               	movwf	sprintf@s^0,c
   611   0015F4  0E01               	movlw	low STR_1
   612   0015F6  6E1F               	movwf	sprintf@fmt^0,c
   613   0015F8  C0EC  F020         	movff	main@RGBC,?_sprintf+2
   614   0015FC  C0ED  F021         	movff	main@RGBC+1,?_sprintf+3
   615   001600  C0EE  F022         	movff	main@RGBC+2,?_sprintf+4
   616   001604  C0EF  F023         	movff	main@RGBC+3,?_sprintf+5
   617   001608  C0F0  F024         	movff	main@RGBC+4,?_sprintf+6
   618   00160C  C0F1  F025         	movff	main@RGBC+5,?_sprintf+7
   619   001610  C0F2  F026         	movff	main@RGBC+6,?_sprintf+8
   620   001614  C0F3  F027         	movff	main@RGBC+7,?_sprintf+9
   621   001618  C0E4  F028         	movff	main@RGBC_n,?_sprintf+10
   622   00161C  C0E5  F029         	movff	main@RGBC_n+1,?_sprintf+11
   623   001620  C0E6  F02A         	movff	main@RGBC_n+2,?_sprintf+12
   624   001624  C0E7  F02B         	movff	main@RGBC_n+3,?_sprintf+13
   625   001628  C0E8  F02C         	movff	main@RGBC_n+4,?_sprintf+14
   626   00162C  C0E9  F02D         	movff	main@RGBC_n+5,?_sprintf+15
   627   001630  EC42  F00D         	call	_sprintf	;wreg free
   628   001634                     
   629                           ;main.c: 46:         sendTxBuf();
   630   001634  EC22  F00E         	call	_sendTxBuf	;wreg free
   631   001638                     
   632                           ;main.c: 47:         TxBufferedString(buf);
   633   001638  0EBC               	movlw	low main@buf
   634   00163A  6E06               	movwf	TxBufferedString@string^0,c
   635   00163C  6A07               	clrf	(TxBufferedString@string+1)^0,c
   636   00163E  ECB6  F00C         	call	_TxBufferedString	;wreg free
   637   001642                     
   638                           ;main.c: 48:         sendTxBuf();
   639   001642  EC22  F00E         	call	_sendTxBuf	;wreg free
   640   001646                     
   641                           ;main.c: 49:         TxBufferedString("");
   642   001646  0E2A               	movlw	low (STR_1+41)
   643   001648  6E06               	movwf	TxBufferedString@string^0,c
   644   00164A  5006               	movf	TxBufferedString@string^0,w,c
   645   00164C  A4D8               	btfss	status,2,c
   646   00164E  0E0E               	movlw	high __smallconst
   647   001650  6E07               	movwf	(TxBufferedString@string+1)^0,c
   648   001652  ECB6  F00C         	call	_TxBufferedString	;wreg free
   649   001656                     
   650                           ;main.c: 50:         _delay((unsigned long)((300)*(64000000/4000.0)));
   651   001656  0E19               	movlw	25
   652   001658  6E3C               	movwf	(??_main+1)^0,c
   653   00165A  0E5A               	movlw	90
   654   00165C  6E3B               	movwf	??_main^0,c
   655   00165E  0EB2               	movlw	178
   656   001660                     u1517:
   657   001660  2EE8               	decfsz	wreg,f,c
   658   001662  D7FE               	bra	u1517
   659   001664  2E3B               	decfsz	??_main^0,f,c
   660   001666  D7FC               	bra	u1517
   661   001668  2E3C               	decfsz	(??_main+1)^0,f,c
   662   00166A  D7FA               	bra	u1517
   663   00166C  EFD5  F00A         	goto	l50
   664   001670  EF4D  F000         	goto	start
   665   001674                     __end_of_main:
   666                           	callstack 0
   667                           
   668 ;; *************** function _white_Light *****************
   669 ;; Defined at:
   670 ;;		line 40 in file "color.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  state           1    wreg     unsigned char 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  state           1    4[COMRAM] unsigned char 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, status,2
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   688 ;;Total ram usage:        1 bytes
   689 ;; Hardware stack levels used: 1
   690 ;; Hardware stack levels required when called: 2
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_main
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text1
   699   001BE2                     __ptext1:
   700                           	callstack 0
   701   001BE2                     _white_Light:
   702                           	callstack 28
   703                           
   704                           ;incstack = 0
   705                           ;white_Light@state stored from wreg
   706   001BE2  6E05               	movwf	white_Light@state^0,c
   707   001BE4                     
   708                           ;color.c: 40: void white_Light(char state);color.c: 41: {;color.c: 42:     if (state){
   709   001BE4  5005               	movf	white_Light@state^0,w,c
   710   001BE6  B4D8               	btfsc	status,2,c
   711   001BE8  EFF8  F00D         	goto	u1211
   712   001BEC  EFFA  F00D         	goto	u1210
   713   001BF0                     u1211:
   714   001BF0  EFFF  F00D         	goto	l86
   715   001BF4                     u1210:
   716   001BF4                     
   717                           ;color.c: 43:         LATGbits.LATG0 = 1;
   718   001BF4  807F               	bsf	127,0,c	;volatile
   719                           
   720                           ;color.c: 44:         LATEbits.LATE7 = 1;
   721   001BF6  8E7D               	bsf	125,7,c	;volatile
   722                           
   723                           ;color.c: 45:         LATAbits.LATA3 = 1;
   724   001BF8  8679               	bsf	121,3,c	;volatile
   725                           
   726                           ;color.c: 46:     }
   727   001BFA  EF02  F00E         	goto	l88
   728   001BFE                     l86:
   729                           
   730                           ;color.c: 48:         LATGbits.LATG0 = 0;
   731   001BFE  907F               	bcf	127,0,c	;volatile
   732                           
   733                           ;color.c: 49:         LATEbits.LATE7 = 0;
   734   001C00  9E7D               	bcf	125,7,c	;volatile
   735                           
   736                           ;color.c: 50:         LATAbits.LATA3 = 0;
   737   001C02  9679               	bcf	121,3,c	;volatile
   738   001C04                     l88:
   739   001C04  0012               	return		;funcret
   740   001C06                     __end_of_white_Light:
   741                           	callstack 0
   742                           
   743 ;; *************** function _sprintf *****************
   744 ;; Defined at:
   745 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  s               1   29[COMRAM] PTR unsigned char 
   748 ;;		 -> main@buf(40), 
   749 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
   750 ;;		 -> STR_1(42), 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  f              12   46[COMRAM] struct _IO_FILE
   753 ;;  ret             2    0        int 
   754 ;;  ap              1   45[COMRAM] PTR void [1]
   755 ;;		 -> ?_sprintf(2), 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  2   29[COMRAM] int 
   758 ;; Registers used:
   759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   765 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   766 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   768 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   769 ;;Total ram usage:       29 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; Hardware stack levels required when called: 6
   772 ;; This function calls:
   773 ;;		_vfprintf
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text2
   780   001A84                     __ptext2:
   781                           	callstack 0
   782   001A84                     _sprintf:
   783                           	callstack 24
   784   001A84  0E20               	movlw	low (?_sprintf+2)
   785   001A86  6E2E               	movwf	sprintf@ap^0,c
   786   001A88  C01E  F02F         	movff	sprintf@s,sprintf@f
   787   001A8C  0E00               	movlw	0
   788   001A8E  6E33               	movwf	(sprintf@f+4)^0,c
   789   001A90  0E00               	movlw	0
   790   001A92  6E32               	movwf	(sprintf@f+3)^0,c
   791   001A94  0E00               	movlw	0
   792   001A96  6E3A               	movwf	(sprintf@f+11)^0,c
   793   001A98  0E00               	movlw	0
   794   001A9A  6E39               	movwf	(sprintf@f+10)^0,c
   795   001A9C  0E2F               	movlw	low sprintf@f
   796   001A9E  6E1A               	movwf	vfprintf@fp^0,c
   797   001AA0  C01F  F01B         	movff	sprintf@fmt,vfprintf@fmt
   798   001AA4  0E2E               	movlw	low sprintf@ap
   799   001AA6  6E1C               	movwf	vfprintf@ap^0,c
   800   001AA8  EC08  F00D         	call	_vfprintf	;wreg free
   801   001AAC  501E               	movf	sprintf@s^0,w,c
   802   001AAE  2432               	addwf	(sprintf@f+3)^0,w,c
   803   001AB0  6ED9               	movwf	fsr2l,c
   804   001AB2  6ADA               	clrf	fsr2h,c
   805   001AB4  6ADF               	clrf	indf2,c
   806   001AB6  0012               	return		;funcret
   807   001AB8                     __end_of_sprintf:
   808                           	callstack 0
   809                           
   810 ;; *************** function _vfprintf *****************
   811 ;; Defined at:
   812 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  fp              1   25[COMRAM] PTR struct _IO_FILE
   815 ;;		 -> sprintf@f(12), 
   816 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
   817 ;;		 -> STR_1(42), 
   818 ;;  ap              1   27[COMRAM] PTR PTR void 
   819 ;;		 -> sprintf@ap(1), 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  cfmt            1   28[COMRAM] PTR unsigned char 
   822 ;;		 -> STR_1(42), 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  2   25[COMRAM] int 
   825 ;; Registers used:
   826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   832 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   836 ;;Total ram usage:        4 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 5
   839 ;; This function calls:
   840 ;;		_vfpfcnvrt
   841 ;; This function is called by:
   842 ;;		_sprintf
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text3
   847   001A10                     __ptext3:
   848                           	callstack 0
   849   001A10                     _vfprintf:
   850                           	callstack 24
   851   001A10                     
   852                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   853   001A10  C01B  F01D         	movff	vfprintf@fmt,vfprintf@cfmt
   854                           
   855                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   856   001A14  EF14  F00D         	goto	l1821
   857   001A18                     l1819:
   858                           
   859                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   860   001A18  C01A  F00F         	movff	vfprintf@fp,vfpfcnvrt@fp
   861   001A1C  0E1D               	movlw	low vfprintf@cfmt
   862   001A1E  6E10               	movwf	vfpfcnvrt@fmt^0,c
   863   001A20  C01C  F011         	movff	vfprintf@ap,vfpfcnvrt@ap
   864   001A24  EC01  F008         	call	_vfpfcnvrt	;wreg free
   865   001A28                     l1821:
   866                           
   867                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   868   001A28  C01D  FFF6         	movff	vfprintf@cfmt,tblptrl
   869   001A2C                     	if	1	;There is more than 1 active tblptr byte
   870   001A2C  0E0E               	movlw	high __smallconst
   871   001A2E  6EF7               	movwf	tblptrh,c
   872   001A30                     	endif
   873   001A30                     	if	0	;tblptru may be non-zero
   874   001A30                     	endif
   875   001A30                     	if	0	;tblptru may be non-zero
   876   001A30                     	endif
   877   001A30  0008               	tblrd		*
   878   001A32  50F5               	movf	tablat,w,c
   879   001A34  0900               	iorlw	0
   880   001A36  A4D8               	btfss	status,2,c
   881   001A38  EF20  F00D         	goto	u1201
   882   001A3C  EF22  F00D         	goto	u1200
   883   001A40                     u1201:
   884   001A40  EF0C  F00D         	goto	l1819
   885   001A44                     u1200:
   886   001A44                     
   887                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   888   001A44  0E00               	movlw	0
   889   001A46  6E1B               	movwf	(?_vfprintf+1)^0,c
   890   001A48  0E00               	movlw	0
   891   001A4A  6E1A               	movwf	?_vfprintf^0,c
   892   001A4C  0012               	return		;funcret
   893   001A4E                     __end_of_vfprintf:
   894                           	callstack 0
   895                           
   896 ;; *************** function _vfpfcnvrt *****************
   897 ;; Defined at:
   898 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
   901 ;;		 -> sprintf@f(12), 
   902 ;;  fmt             1   15[COMRAM] PTR PTR unsigned char 
   903 ;;		 -> vfprintf@cfmt(1), 
   904 ;;  ap              1   16[COMRAM] PTR PTR void 
   905 ;;		 -> sprintf@ap(1), 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  convarg         4   20[COMRAM] struct .
   908 ;;  c               1   24[COMRAM] unsigned char 
   909 ;;  cp              1   19[COMRAM] PTR unsigned char 
   910 ;;		 -> STR_1(42), 
   911 ;;  done            1   18[COMRAM] _Bool 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   921 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   922 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   923 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   924 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   925 ;;Total ram usage:       11 bytes
   926 ;; Hardware stack levels used: 1
   927 ;; Hardware stack levels required when called: 4
   928 ;; This function calls:
   929 ;;		___awdiv
   930 ;;		___awmod
   931 ;;		_abs
   932 ;;		_fputc
   933 ;; This function is called by:
   934 ;;		_vfprintf
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text4
   939   001002                     __ptext4:
   940                           	callstack 0
   941   001002                     _vfpfcnvrt:
   942                           	callstack 24
   943   001002                     
   944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   945   001002  5010               	movf	vfpfcnvrt@fmt^0,w,c
   946   001004  6ED9               	movwf	fsr2l,c
   947   001006  6ADA               	clrf	fsr2h,c
   948   001008  CFDF FFF6          	movff	indf2,tblptrl
   949   00100C                     	if	1	;There is more than 1 active tblptr byte
   950   00100C  0E0E               	movlw	high __smallconst
   951   00100E  6EF7               	movwf	tblptrh,c
   952   001010                     	endif
   953   001010                     	if	0	;tblptru may be non-zero
   954   001010                     	endif
   955   001010                     	if	0	;tblptru may be non-zero
   956   001010                     	endif
   957   001010  0008               	tblrd		*
   958   001012  50F5               	movf	tablat,w,c
   959   001014  0A25               	xorlw	37
   960   001016  A4D8               	btfss	status,2,c
   961   001018  EF10  F008         	goto	u971
   962   00101C  EF12  F008         	goto	u970
   963   001020                     u971:
   964   001020  EFCB  F008         	goto	l1713
   965   001024                     u970:
   966   001024                     
   967                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   968   001024  5010               	movf	vfpfcnvrt@fmt^0,w,c
   969   001026  6ED9               	movwf	fsr2l,c
   970   001028  6ADA               	clrf	fsr2h,c
   971   00102A  2ADF               	incf	indf2,f,c
   972   00102C                     
   973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   974   00102C  0E00               	movlw	0
   975   00102E  6E52               	movwf	(_width+1)^0,c
   976   001030  0E00               	movlw	0
   977   001032  6E51               	movwf	_width^0,c
   978   001034  C051  F055         	movff	_width,_flags
   979   001038                     
   980                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   981   001038  6853               	setf	_prec^0,c
   982   00103A  6854               	setf	(_prec+1)^0,c
   983   00103C                     
   984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   985   00103C  5010               	movf	vfpfcnvrt@fmt^0,w,c
   986   00103E  6ED9               	movwf	fsr2l,c
   987   001040  6ADA               	clrf	fsr2h,c
   988   001042  50DF               	movf	indf2,w,c
   989   001044  6E14               	movwf	vfpfcnvrt@cp^0,c
   990   001046                     
   991                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   992   001046  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   993   00104A                     	if	1	;There is more than 1 active tblptr byte
   994   00104A  0E0E               	movlw	high __smallconst
   995   00104C  6EF7               	movwf	tblptrh,c
   996   00104E                     	endif
   997   00104E                     	if	0	;tblptru may be non-zero
   998   00104E                     	endif
   999   00104E                     	if	0	;tblptru may be non-zero
  1000   00104E                     	endif
  1001   00104E  0008               	tblrd		*
  1002   001050  50F5               	movf	tablat,w,c
  1003   001052  0A64               	xorlw	100
  1004   001054  B4D8               	btfsc	status,2,c
  1005   001056  EF2F  F008         	goto	u981
  1006   00105A  EF31  F008         	goto	u980
  1007   00105E                     u981:
  1008   00105E  EF3F  F008         	goto	l1683
  1009   001062                     u980:
  1010   001062  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1011   001066                     	if	1	;There is more than 1 active tblptr byte
  1012   001066  0E0E               	movlw	high __smallconst
  1013   001068  6EF7               	movwf	tblptrh,c
  1014   00106A                     	endif
  1015   00106A                     	if	0	;tblptru may be non-zero
  1016   00106A                     	endif
  1017   00106A                     	if	0	;tblptru may be non-zero
  1018   00106A                     	endif
  1019   00106A  0008               	tblrd		*
  1020   00106C  50F5               	movf	tablat,w,c
  1021   00106E  0A69               	xorlw	105
  1022   001070  A4D8               	btfss	status,2,c
  1023   001072  EF3D  F008         	goto	u991
  1024   001076  EF3F  F008         	goto	u990
  1025   00107A                     u991:
  1026   00107A  EFC5  F008         	goto	l1709
  1027   00107E                     u990:
  1028   00107E                     l1683:
  1029                           
  1030                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1031   00107E  5011               	movf	vfpfcnvrt@ap^0,w,c
  1032   001080  6ED9               	movwf	fsr2l,c
  1033   001082  6ADA               	clrf	fsr2h,c
  1034   001084  0E02               	movlw	2
  1035   001086  26DF               	addwf	indf2,f,c
  1036   001088  5CDF               	subwf	indf2,w,c
  1037   00108A  6ED9               	movwf	fsr2l,c
  1038   00108C  6ADA               	clrf	fsr2h,c
  1039   00108E  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg
  1040   001092  CFDE F016          	movff	postinc2,vfpfcnvrt@convarg+1
  1041   001096                     
  1042                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1043   001096  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1044   001098  6ED9               	movwf	fsr2l,c
  1045   00109A  6ADA               	clrf	fsr2h,c
  1046   00109C  2814               	incf	vfpfcnvrt@cp^0,w,c
  1047   00109E  6EDF               	movwf	indf2,c
  1048   0010A0                     
  1049                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1050   0010A0  0E20               	movlw	32
  1051   0010A2  6E19               	movwf	vfpfcnvrt@c^0,c
  1052                           
  1053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1054   0010A4  BE16               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1055   0010A6  EF57  F008         	goto	u1001
  1056   0010AA  EF5A  F008         	goto	u1000
  1057   0010AE                     u1001:
  1058   0010AE  0E01               	movlw	1
  1059   0010B0  EF5B  F008         	goto	u1010
  1060   0010B4                     u1000:
  1061   0010B4  0E00               	movlw	0
  1062   0010B6                     u1010:
  1063   0010B6  6E13               	movwf	vfpfcnvrt@done^0,c
  1064   0010B8                     l1689:
  1065                           
  1066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1067   0010B8  0619               	decf	vfpfcnvrt@c^0,f,c
  1068   0010BA  5019               	movf	vfpfcnvrt@c^0,w,c
  1069   0010BC  0F9C               	addlw	low _dbuf
  1070   0010BE  6ED9               	movwf	fsr2l,c
  1071   0010C0  6ADA               	clrf	fsr2h,c
  1072   0010C2  C015  F005         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1073   0010C6  C016  F006         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1074   0010CA  0E00               	movlw	0
  1075   0010CC  6E08               	movwf	(___awmod@divisor+1)^0,c
  1076   0010CE  0E0A               	movlw	10
  1077   0010D0  6E07               	movwf	___awmod@divisor^0,c
  1078   0010D2  EC9C  F00B         	call	___awmod	;wreg free
  1079   0010D6  C005  F00B         	movff	?___awmod,abs@a
  1080   0010DA  C006  F00C         	movff	?___awmod+1,abs@a+1
  1081   0010DE  EC5C  F00D         	call	_abs	;wreg free
  1082   0010E2  500B               	movf	?_abs^0,w,c
  1083   0010E4  0F30               	addlw	48
  1084   0010E6  6EDF               	movwf	indf2,c
  1085   0010E8                     
  1086                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1087   0010E8  C015  F005         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1088   0010EC  C016  F006         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1089   0010F0  0E00               	movlw	0
  1090   0010F2  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1091   0010F4  0E0A               	movlw	10
  1092   0010F6  6E07               	movwf	___awdiv@divisor^0,c
  1093   0010F8  EC3A  F00B         	call	___awdiv	;wreg free
  1094   0010FC  C005  F015         	movff	?___awdiv,vfpfcnvrt@convarg
  1095   001100  C006  F016         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1096   001104                     
  1097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1098   001104  5015               	movf	vfpfcnvrt@convarg^0,w,c
  1099   001106  1016               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1100   001108  B4D8               	btfsc	status,2,c
  1101   00110A  EF89  F008         	goto	u1021
  1102   00110E  EF8B  F008         	goto	u1020
  1103   001112                     u1021:
  1104   001112  EF93  F008         	goto	l1697
  1105   001116                     u1020:
  1106   001116  5019               	movf	vfpfcnvrt@c^0,w,c
  1107   001118  A4D8               	btfss	status,2,c
  1108   00111A  EF91  F008         	goto	u1031
  1109   00111E  EF93  F008         	goto	u1030
  1110   001122                     u1031:
  1111   001122  EF5C  F008         	goto	l1689
  1112   001126                     u1030:
  1113   001126                     l1697:
  1114                           
  1115                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1116   001126  5019               	movf	vfpfcnvrt@c^0,w,c
  1117   001128  B4D8               	btfsc	status,2,c
  1118   00112A  EF99  F008         	goto	u1041
  1119   00112E  EF9B  F008         	goto	u1040
  1120   001132                     u1041:
  1121   001132  EFBA  F008         	goto	l1707
  1122   001136                     u1040:
  1123   001136  5013               	movf	vfpfcnvrt@done^0,w,c
  1124   001138  B4D8               	btfsc	status,2,c
  1125   00113A  EFA1  F008         	goto	u1051
  1126   00113E  EFA3  F008         	goto	u1050
  1127   001142                     u1051:
  1128   001142  EFBA  F008         	goto	l1707
  1129   001146                     u1050:
  1130   001146                     
  1131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1132   001146  0619               	decf	vfpfcnvrt@c^0,f,c
  1133   001148  5019               	movf	vfpfcnvrt@c^0,w,c
  1134   00114A  0F9C               	addlw	low _dbuf
  1135   00114C  6ED9               	movwf	fsr2l,c
  1136   00114E  6ADA               	clrf	fsr2h,c
  1137   001150  0E2D               	movlw	45
  1138   001152  6EDF               	movwf	indf2,c
  1139   001154  EFBA  F008         	goto	l1707
  1140   001158                     l1703:
  1141                           
  1142                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1143   001158  5019               	movf	vfpfcnvrt@c^0,w,c
  1144   00115A  0F9C               	addlw	low _dbuf
  1145   00115C  6ED9               	movwf	fsr2l,c
  1146   00115E  6ADA               	clrf	fsr2h,c
  1147   001160  50DF               	movf	indf2,w,c
  1148   001162  6E12               	movwf	??_vfpfcnvrt^0,c
  1149   001164  5012               	movf	??_vfpfcnvrt^0,w,c
  1150   001166  6E05               	movwf	fputc@c^0,c
  1151   001168  6A06               	clrf	(fputc@c+1)^0,c
  1152   00116A  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1153   00116E  ECF4  F00B         	call	_fputc	;wreg free
  1154   001172  2A19               	incf	vfpfcnvrt@c^0,f,c
  1155   001174                     l1707:
  1156                           
  1157                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1158   001174  0E20               	movlw	32
  1159   001176  1819               	xorwf	vfpfcnvrt@c^0,w,c
  1160   001178  A4D8               	btfss	status,2,c
  1161   00117A  EFC1  F008         	goto	u1061
  1162   00117E  EFC3  F008         	goto	u1060
  1163   001182                     u1061:
  1164   001182  EFAC  F008         	goto	l1703
  1165   001186                     u1060:
  1166   001186  EFDC  F008         	goto	l1023
  1167   00118A                     l1709:
  1168                           
  1169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1170   00118A  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1171   00118C  6ED9               	movwf	fsr2l,c
  1172   00118E  6ADA               	clrf	fsr2h,c
  1173   001190  2ADF               	incf	indf2,f,c
  1174   001192  EFDC  F008         	goto	l1023
  1175   001196                     l1713:
  1176                           
  1177                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1178   001196  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1179   001198  6ED9               	movwf	fsr2l,c
  1180   00119A  6ADA               	clrf	fsr2h,c
  1181   00119C  CFDF FFF6          	movff	indf2,tblptrl
  1182   0011A0                     	if	1	;There is more than 1 active tblptr byte
  1183   0011A0  0E0E               	movlw	high __smallconst
  1184   0011A2  6EF7               	movwf	tblptrh,c
  1185   0011A4                     	endif
  1186   0011A4                     	if	0	;tblptru may be non-zero
  1187   0011A4                     	endif
  1188   0011A4                     	if	0	;tblptru may be non-zero
  1189   0011A4                     	endif
  1190   0011A4  0008               	tblrd		*
  1191   0011A6  50F5               	movf	tablat,w,c
  1192   0011A8  6E05               	movwf	fputc@c^0,c
  1193   0011AA  6A06               	clrf	(fputc@c+1)^0,c
  1194   0011AC  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1195   0011B0  ECF4  F00B         	call	_fputc	;wreg free
  1196   0011B4  EFC5  F008         	goto	l1709
  1197   0011B8                     l1023:
  1198   0011B8  0012               	return		;funcret
  1199   0011BA                     __end_of_vfpfcnvrt:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _fputc *****************
  1203 ;; Defined at:
  1204 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  c               2    4[COMRAM] int 
  1207 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  1208 ;;		 -> sprintf@f(12), 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  2    4[COMRAM] int 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1220 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1222 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1223 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1224 ;;Total ram usage:        8 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 3
  1227 ;; This function calls:
  1228 ;;		_putch
  1229 ;; This function is called by:
  1230 ;;		_vfpfcnvrt
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text5
  1235   0017E8                     __ptext5:
  1236                           	callstack 0
  1237   0017E8                     _fputc:
  1238                           	callstack 24
  1239   0017E8  5007               	movf	fputc@fp^0,w,c
  1240   0017EA  B4D8               	btfsc	status,2,c
  1241   0017EC  EFFA  F00B         	goto	u921
  1242   0017F0  EFFC  F00B         	goto	u920
  1243   0017F4                     u921:
  1244   0017F4  EF04  F00C         	goto	l1643
  1245   0017F8                     u920:
  1246   0017F8  5007               	movf	fputc@fp^0,w,c
  1247   0017FA  A4D8               	btfss	status,2,c
  1248   0017FC  EF02  F00C         	goto	u931
  1249   001800  EF04  F00C         	goto	u930
  1250   001804                     u931:
  1251   001804  EF09  F00C         	goto	l1645
  1252   001808                     u930:
  1253   001808                     l1643:
  1254   001808  5005               	movf	fputc@c^0,w,c
  1255   00180A  EC64  F00E         	call	_putch
  1256   00180E  EF48  F00C         	goto	l1048
  1257   001812                     l1645:
  1258   001812  5007               	movf	fputc@fp^0,w,c
  1259   001814  6ED9               	movwf	fsr2l,c
  1260   001816  6ADA               	clrf	fsr2h,c
  1261   001818  0E0A               	movlw	10
  1262   00181A  26D9               	addwf	fsr2l,f,c
  1263   00181C  50DE               	movf	postinc2,w,c
  1264   00181E  10DE               	iorwf	postinc2,w,c
  1265   001820  B4D8               	btfsc	status,2,c
  1266   001822  EF15  F00C         	goto	u941
  1267   001826  EF17  F00C         	goto	u940
  1268   00182A                     u941:
  1269   00182A  EF30  F00C         	goto	l1649
  1270   00182E                     u940:
  1271   00182E  5007               	movf	fputc@fp^0,w,c
  1272   001830  6ED9               	movwf	fsr2l,c
  1273   001832  6ADA               	clrf	fsr2h,c
  1274   001834  0E0A               	movlw	10
  1275   001836  26D9               	addwf	fsr2l,f,c
  1276   001838  5007               	movf	fputc@fp^0,w,c
  1277   00183A  6EE1               	movwf	fsr1l,c
  1278   00183C  6AE2               	clrf	fsr1h,c
  1279   00183E  0E03               	movlw	3
  1280   001840  26E1               	addwf	fsr1l,f,c
  1281   001842  50DE               	movf	postinc2,w,c
  1282   001844  5CE6               	subwf	postinc1,w,c
  1283   001846  50E6               	movf	postinc1,w,c
  1284   001848  0A80               	xorlw	128
  1285   00184A  6E0C               	movwf	(??_fputc+4)^0,c
  1286   00184C  50DE               	movf	postinc2,w,c
  1287   00184E  0A80               	xorlw	128
  1288   001850  580C               	subwfb	(??_fputc+4)^0,w,c
  1289   001852  B0D8               	btfsc	status,0,c
  1290   001854  EF2E  F00C         	goto	u951
  1291   001858  EF30  F00C         	goto	u950
  1292   00185C                     u951:
  1293   00185C  EF48  F00C         	goto	l1048
  1294   001860                     u950:
  1295   001860                     l1649:
  1296   001860  5007               	movf	fputc@fp^0,w,c
  1297   001862  6ED9               	movwf	fsr2l,c
  1298   001864  6ADA               	clrf	fsr2h,c
  1299   001866  0E03               	movlw	3
  1300   001868  26D9               	addwf	fsr2l,f,c
  1301   00186A  50DF               	movf	indf2,w,c
  1302   00186C  6E08               	movwf	??_fputc^0,c
  1303   00186E  5007               	movf	fputc@fp^0,w,c
  1304   001870  6ED9               	movwf	fsr2l,c
  1305   001872  6ADA               	clrf	fsr2h,c
  1306   001874  50DF               	movf	indf2,w,c
  1307   001876  2408               	addwf	??_fputc^0,w,c
  1308   001878  6ED9               	movwf	fsr2l,c
  1309   00187A  6ADA               	clrf	fsr2h,c
  1310   00187C  C005  FFDF         	movff	fputc@c,indf2
  1311   001880  5007               	movf	fputc@fp^0,w,c
  1312   001882  6ED9               	movwf	fsr2l,c
  1313   001884  6ADA               	clrf	fsr2h,c
  1314   001886  0E03               	movlw	3
  1315   001888  26D9               	addwf	fsr2l,f,c
  1316   00188A  2ADE               	incf	postinc2,f,c
  1317   00188C  0E00               	movlw	0
  1318   00188E  22DD               	addwfc	postdec2,f,c
  1319   001890                     l1048:
  1320   001890  0012               	return		;funcret
  1321   001892                     __end_of_fputc:
  1322                           	callstack 0
  1323                           
  1324 ;; *************** function _putch *****************
  1325 ;; Defined at:
  1326 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  c               1    wreg     unsigned char 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  c               1    0[COMRAM] unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1344 ;;Total ram usage:        0 bytes
  1345 ;; Hardware stack levels used: 1
  1346 ;; Hardware stack levels required when called: 2
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_fputc
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text6
  1355   001CC8                     __ptext6:
  1356                           	callstack 0
  1357   001CC8                     _putch:
  1358                           	callstack 24
  1359   001CC8  0012               	return		;funcret
  1360   001CCA                     __end_of_putch:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function _abs *****************
  1364 ;; Defined at:
  1365 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  a               2   10[COMRAM] int 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;		None
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  2   10[COMRAM] int 
  1372 ;; Registers used:
  1373 ;;		wreg, status,2, status,0
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1382 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1383 ;;Total ram usage:        4 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 2
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_vfpfcnvrt
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text7
  1394   001AB8                     __ptext7:
  1395                           	callstack 0
  1396   001AB8                     _abs:
  1397                           	callstack 25
  1398   001AB8  BE0C               	btfsc	(abs@a+1)^0,7,c
  1399   001ABA  EF61  F00D         	goto	u961
  1400   001ABE  EF63  F00D         	goto	u960
  1401   001AC2                     u961:
  1402   001AC2  EF69  F00D         	goto	l1033
  1403   001AC6                     u960:
  1404   001AC6  C00B  F00B         	movff	abs@a,?_abs
  1405   001ACA  C00C  F00C         	movff	abs@a+1,?_abs+1
  1406   001ACE  EF75  F00D         	goto	l1036
  1407   001AD2                     l1033:
  1408   001AD2  C00B  F00D         	movff	abs@a,??_abs
  1409   001AD6  C00C  F00E         	movff	abs@a+1,??_abs+1
  1410   001ADA  1E0D               	comf	??_abs^0,f,c
  1411   001ADC  1E0E               	comf	(??_abs+1)^0,f,c
  1412   001ADE  4A0D               	infsnz	??_abs^0,f,c
  1413   001AE0  2A0E               	incf	(??_abs+1)^0,f,c
  1414   001AE2  C00D  F00B         	movff	??_abs,?_abs
  1415   001AE6  C00E  F00C         	movff	??_abs+1,?_abs+1
  1416   001AEA                     l1036:
  1417   001AEA  0012               	return		;funcret
  1418   001AEC                     __end_of_abs:
  1419                           	callstack 0
  1420                           
  1421 ;; *************** function ___awmod *****************
  1422 ;; Defined at:
  1423 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;  dividend        2    4[COMRAM] int 
  1426 ;;  divisor         2    6[COMRAM] int 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  sign            1    9[COMRAM] unsigned char 
  1429 ;;  counter         1    8[COMRAM] unsigned char 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  2    4[COMRAM] int 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1440 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1442 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1443 ;;Total ram usage:        6 bytes
  1444 ;; Hardware stack levels used: 1
  1445 ;; Hardware stack levels required when called: 2
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_vfpfcnvrt
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text8
  1454   001738                     __ptext8:
  1455                           	callstack 0
  1456   001738                     ___awmod:
  1457                           	callstack 25
  1458   001738  0E00               	movlw	0
  1459   00173A  6E0A               	movwf	___awmod@sign^0,c
  1460   00173C  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  1461   00173E  EFA5  F00B         	goto	u860
  1462   001742  EFA3  F00B         	goto	u861
  1463   001746                     u861:
  1464   001746  EFAB  F00B         	goto	l1611
  1465   00174A                     u860:
  1466   00174A  6C05               	negf	___awmod@dividend^0,c
  1467   00174C  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1468   00174E  B0D8               	btfsc	status,0,c
  1469   001750  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1470   001752  0E01               	movlw	1
  1471   001754  6E0A               	movwf	___awmod@sign^0,c
  1472   001756                     l1611:
  1473   001756  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  1474   001758  EFB2  F00B         	goto	u870
  1475   00175C  EFB0  F00B         	goto	u871
  1476   001760                     u871:
  1477   001760  EFB6  F00B         	goto	l1615
  1478   001764                     u870:
  1479   001764  6C07               	negf	___awmod@divisor^0,c
  1480   001766  1E08               	comf	(___awmod@divisor+1)^0,f,c
  1481   001768  B0D8               	btfsc	status,0,c
  1482   00176A  2A08               	incf	(___awmod@divisor+1)^0,f,c
  1483   00176C                     l1615:
  1484   00176C  5007               	movf	___awmod@divisor^0,w,c
  1485   00176E  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  1486   001770  B4D8               	btfsc	status,2,c
  1487   001772  EFBD  F00B         	goto	u881
  1488   001776  EFBF  F00B         	goto	u880
  1489   00177A                     u881:
  1490   00177A  EFE3  F00B         	goto	l1631
  1491   00177E                     u880:
  1492   00177E  0E01               	movlw	1
  1493   001780  6E09               	movwf	___awmod@counter^0,c
  1494   001782  EFC7  F00B         	goto	l1621
  1495   001786                     l1619:
  1496   001786  90D8               	bcf	status,0,c
  1497   001788  3607               	rlcf	___awmod@divisor^0,f,c
  1498   00178A  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  1499   00178C  2A09               	incf	___awmod@counter^0,f,c
  1500   00178E                     l1621:
  1501   00178E  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  1502   001790  EFCC  F00B         	goto	u891
  1503   001794  EFCE  F00B         	goto	u890
  1504   001798                     u891:
  1505   001798  EFC3  F00B         	goto	l1619
  1506   00179C                     u890:
  1507   00179C                     l1623:
  1508   00179C  5007               	movf	___awmod@divisor^0,w,c
  1509   00179E  5C05               	subwf	___awmod@dividend^0,w,c
  1510   0017A0  5008               	movf	(___awmod@divisor+1)^0,w,c
  1511   0017A2  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  1512   0017A4  A0D8               	btfss	status,0,c
  1513   0017A6  EFD7  F00B         	goto	u901
  1514   0017AA  EFD9  F00B         	goto	u900
  1515   0017AE                     u901:
  1516   0017AE  EFDD  F00B         	goto	l1627
  1517   0017B2                     u900:
  1518   0017B2  5007               	movf	___awmod@divisor^0,w,c
  1519   0017B4  5E05               	subwf	___awmod@dividend^0,f,c
  1520   0017B6  5008               	movf	(___awmod@divisor+1)^0,w,c
  1521   0017B8  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  1522   0017BA                     l1627:
  1523   0017BA  90D8               	bcf	status,0,c
  1524   0017BC  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  1525   0017BE  3207               	rrcf	___awmod@divisor^0,f,c
  1526   0017C0  2E09               	decfsz	___awmod@counter^0,f,c
  1527   0017C2  EFCE  F00B         	goto	l1623
  1528   0017C6                     l1631:
  1529   0017C6  500A               	movf	___awmod@sign^0,w,c
  1530   0017C8  B4D8               	btfsc	status,2,c
  1531   0017CA  EFE9  F00B         	goto	u911
  1532   0017CE  EFEB  F00B         	goto	u910
  1533   0017D2                     u911:
  1534   0017D2  EFEF  F00B         	goto	l1635
  1535   0017D6                     u910:
  1536   0017D6  6C05               	negf	___awmod@dividend^0,c
  1537   0017D8  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1538   0017DA  B0D8               	btfsc	status,0,c
  1539   0017DC  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1540   0017DE                     l1635:
  1541   0017DE  C005  F005         	movff	___awmod@dividend,?___awmod
  1542   0017E2  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  1543   0017E6  0012               	return		;funcret
  1544   0017E8                     __end_of___awmod:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function ___awdiv *****************
  1548 ;; Defined at:
  1549 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  dividend        2    4[COMRAM] int 
  1552 ;;  divisor         2    6[COMRAM] int 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  quotient        2   10[COMRAM] int 
  1555 ;;  sign            1    9[COMRAM] unsigned char 
  1556 ;;  counter         1    8[COMRAM] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  2    4[COMRAM] int 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1566 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1567 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1569 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1570 ;;Total ram usage:        8 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 2
  1573 ;; This function calls:
  1574 ;;		Nothing
  1575 ;; This function is called by:
  1576 ;;		_vfpfcnvrt
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text9
  1581   001674                     __ptext9:
  1582                           	callstack 0
  1583   001674                     ___awdiv:
  1584                           	callstack 25
  1585   001674  0E00               	movlw	0
  1586   001676  6E0A               	movwf	___awdiv@sign^0,c
  1587   001678  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  1588   00167A  EF43  F00B         	goto	u800
  1589   00167E  EF41  F00B         	goto	u801
  1590   001682                     u801:
  1591   001682  EF49  F00B         	goto	l1567
  1592   001686                     u800:
  1593   001686  6C07               	negf	___awdiv@divisor^0,c
  1594   001688  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  1595   00168A  B0D8               	btfsc	status,0,c
  1596   00168C  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  1597   00168E  0E01               	movlw	1
  1598   001690  6E0A               	movwf	___awdiv@sign^0,c
  1599   001692                     l1567:
  1600   001692  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  1601   001694  EF50  F00B         	goto	u810
  1602   001698  EF4E  F00B         	goto	u811
  1603   00169C                     u811:
  1604   00169C  EF56  F00B         	goto	l1573
  1605   0016A0                     u810:
  1606   0016A0  6C05               	negf	___awdiv@dividend^0,c
  1607   0016A2  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  1608   0016A4  B0D8               	btfsc	status,0,c
  1609   0016A6  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  1610   0016A8  0E01               	movlw	1
  1611   0016AA  1A0A               	xorwf	___awdiv@sign^0,f,c
  1612   0016AC                     l1573:
  1613   0016AC  0E00               	movlw	0
  1614   0016AE  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  1615   0016B0  0E00               	movlw	0
  1616   0016B2  6E0B               	movwf	___awdiv@quotient^0,c
  1617   0016B4  5007               	movf	___awdiv@divisor^0,w,c
  1618   0016B6  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  1619   0016B8  B4D8               	btfsc	status,2,c
  1620   0016BA  EF61  F00B         	goto	u821
  1621   0016BE  EF63  F00B         	goto	u820
  1622   0016C2                     u821:
  1623   0016C2  EF8B  F00B         	goto	l1595
  1624   0016C6                     u820:
  1625   0016C6  0E01               	movlw	1
  1626   0016C8  6E09               	movwf	___awdiv@counter^0,c
  1627   0016CA  EF6B  F00B         	goto	l1581
  1628   0016CE                     l1579:
  1629   0016CE  90D8               	bcf	status,0,c
  1630   0016D0  3607               	rlcf	___awdiv@divisor^0,f,c
  1631   0016D2  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  1632   0016D4  2A09               	incf	___awdiv@counter^0,f,c
  1633   0016D6                     l1581:
  1634   0016D6  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  1635   0016D8  EF70  F00B         	goto	u831
  1636   0016DC  EF72  F00B         	goto	u830
  1637   0016E0                     u831:
  1638   0016E0  EF67  F00B         	goto	l1579
  1639   0016E4                     u830:
  1640   0016E4                     l1583:
  1641   0016E4  90D8               	bcf	status,0,c
  1642   0016E6  360B               	rlcf	___awdiv@quotient^0,f,c
  1643   0016E8  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1644   0016EA  5007               	movf	___awdiv@divisor^0,w,c
  1645   0016EC  5C05               	subwf	___awdiv@dividend^0,w,c
  1646   0016EE  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1647   0016F0  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  1648   0016F2  A0D8               	btfss	status,0,c
  1649   0016F4  EF7E  F00B         	goto	u841
  1650   0016F8  EF80  F00B         	goto	u840
  1651   0016FC                     u841:
  1652   0016FC  EF85  F00B         	goto	l1591
  1653   001700                     u840:
  1654   001700  5007               	movf	___awdiv@divisor^0,w,c
  1655   001702  5E05               	subwf	___awdiv@dividend^0,f,c
  1656   001704  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1657   001706  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  1658   001708  800B               	bsf	___awdiv@quotient^0,0,c
  1659   00170A                     l1591:
  1660   00170A  90D8               	bcf	status,0,c
  1661   00170C  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  1662   00170E  3207               	rrcf	___awdiv@divisor^0,f,c
  1663   001710  2E09               	decfsz	___awdiv@counter^0,f,c
  1664   001712  EF72  F00B         	goto	l1583
  1665   001716                     l1595:
  1666   001716  500A               	movf	___awdiv@sign^0,w,c
  1667   001718  B4D8               	btfsc	status,2,c
  1668   00171A  EF91  F00B         	goto	u851
  1669   00171E  EF93  F00B         	goto	u850
  1670   001722                     u851:
  1671   001722  EF97  F00B         	goto	l1599
  1672   001726                     u850:
  1673   001726  6C0B               	negf	___awdiv@quotient^0,c
  1674   001728  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  1675   00172A  B0D8               	btfsc	status,0,c
  1676   00172C  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  1677   00172E                     l1599:
  1678   00172E  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  1679   001732  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  1680   001736  0012               	return		;funcret
  1681   001738                     __end_of___awdiv:
  1682                           	callstack 0
  1683                           
  1684 ;; *************** function _sendTxBuf *****************
  1685 ;; Defined at:
  1686 ;;		line 74 in file "serial.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1704 ;;Total ram usage:        0 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; Hardware stack levels required when called: 3
  1707 ;; This function calls:
  1708 ;;		_isDataInTxBuf
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text10
  1715   001C44                     __ptext10:
  1716                           	callstack 0
  1717   001C44                     _sendTxBuf:
  1718                           	callstack 27
  1719   001C44                     
  1720                           ;serial.c: 75:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  1721   001C44  EC2F  F00E         	call	_isDataInTxBuf	;wreg free
  1722   001C48  0900               	iorlw	0
  1723   001C4A  B4D8               	btfsc	status,2,c
  1724   001C4C  EF2A  F00E         	goto	u1361
  1725   001C50  EF2C  F00E         	goto	u1360
  1726   001C54                     u1361:
  1727   001C54  EF2E  F00E         	goto	l304
  1728   001C58                     u1360:
  1729   001C58  010E               	movlb	14	; () banked
  1730   001C5A  852D               	bsf	45,2,b	;volatile
  1731   001C5C                     l304:
  1732   001C5C  0012               	return		;funcret
  1733   001C5E                     __end_of_sendTxBuf:
  1734                           	callstack 0
  1735                           
  1736 ;; *************** function _isDataInTxBuf *****************
  1737 ;; Defined at:
  1738 ;;		line 61 in file "serial.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      unsigned char 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1756 ;;Total ram usage:        0 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 2
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_sendTxBuf
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text11
  1767   001C5E                     __ptext11:
  1768                           	callstack 0
  1769   001C5E                     _isDataInTxBuf:
  1770                           	callstack 27
  1771   001C5E                     
  1772                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  1773   001C5E  5056               	movf	_TxBufReadCnt^0,w,c	;volatile
  1774   001C60  1857               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  1775   001C62  A4D8               	btfss	status,2,c
  1776   001C64  EF36  F00E         	goto	u1091
  1777   001C68  EF39  F00E         	goto	u1090
  1778   001C6C                     u1091:
  1779   001C6C  0E01               	movlw	1
  1780   001C6E  EF3A  F00E         	goto	u1100
  1781   001C72                     u1090:
  1782   001C72  0E00               	movlw	0
  1783   001C74                     u1100:
  1784   001C74  0012               	return		;funcret
  1785   001C76                     __end_of_isDataInTxBuf:
  1786                           	callstack 0
  1787                           
  1788 ;; *************** function _initUSART4 *****************
  1789 ;; Defined at:
  1790 ;;		line 4 in file "serial.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; Hardware stack levels required when called: 2
  1811 ;; This function calls:
  1812 ;;		Nothing
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text12
  1819   001C26                     __ptext12:
  1820                           	callstack 0
  1821   001C26                     _initUSART4:
  1822                           	callstack 28
  1823   001C26                     
  1824                           ;serial.c: 7:     RC0PPS = 0x12;
  1825   001C26  0E12               	movlw	18
  1826   001C28  010E               	movlb	14	; () banked
  1827   001C2A  6F62               	movwf	98,b	;volatile
  1828                           
  1829                           ;serial.c: 8:     RX4PPS = 0x11;
  1830   001C2C  0E11               	movlw	17
  1831   001C2E  6F15               	movwf	21,b	;volatile
  1832   001C30                     
  1833                           ; BSR set to: 14
  1834                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  1835   001C30  97E9               	bcf	233,3,b	;volatile
  1836   001C32                     
  1837                           ; BSR set to: 14
  1838                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  1839   001C32  95E8               	bcf	232,2,b	;volatile
  1840                           
  1841                           ;serial.c: 13:     SP4BRGL = 51;
  1842   001C34  0E33               	movlw	51
  1843   001C36  6FE5               	movwf	229,b	;volatile
  1844                           
  1845                           ;serial.c: 14:     SP4BRGH = 0;
  1846   001C38  0E00               	movlw	0
  1847   001C3A  6FE6               	movwf	230,b	;volatile
  1848   001C3C                     
  1849                           ; BSR set to: 14
  1850                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  1851   001C3C  89E7               	bsf	231,4,b	;volatile
  1852   001C3E                     
  1853                           ; BSR set to: 14
  1854                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  1855   001C3E  8BE8               	bsf	232,5,b	;volatile
  1856   001C40                     
  1857                           ; BSR set to: 14
  1858                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  1859   001C40  8FE7               	bsf	231,7,b	;volatile
  1860   001C42                     
  1861                           ; BSR set to: 14
  1862   001C42  0012               	return		;funcret
  1863   001C44                     __end_of_initUSART4:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function _color_read *****************
  1867 ;; Defined at:
  1868 ;;		line 55 in file "color.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  RGBC            1    8[COMRAM] PTR struct RGBC_val
  1871 ;;		 -> main@RGBC(8), 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1883 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;Total ram usage:        8 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 4
  1890 ;; This function calls:
  1891 ;;		_I2C_2_Master_Read
  1892 ;;		_I2C_2_Master_RepStart
  1893 ;;		_I2C_2_Master_Start
  1894 ;;		_I2C_2_Master_Stop
  1895 ;;		_I2C_2_Master_Write
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text13
  1902   000E2C                     __ptext13:
  1903                           	callstack 0
  1904   000E2C                     _color_read:
  1905                           	callstack 26
  1906   000E2C                     
  1907                           ;color.c: 55: void color_read(RGBC_val *RGBC);color.c: 56: {;color.c: 57:  I2C_2_Master_
      +                          Start();
  1908   000E2C  EC5F  F00E         	call	_I2C_2_Master_Start	;wreg free
  1909                           
  1910                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
  1911   000E30  0E52               	movlw	82
  1912   000E32  EC4F  F00E         	call	_I2C_2_Master_Write
  1913                           
  1914                           ;color.c: 59:  I2C_2_Master_Write(0xA0 | 0x16);
  1915   000E36  0EB6               	movlw	182
  1916   000E38  EC4F  F00E         	call	_I2C_2_Master_Write
  1917                           
  1918                           ;color.c: 60:  I2C_2_Master_RepStart();
  1919   000E3C  EC55  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1920                           
  1921                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
  1922   000E40  0E53               	movlw	83
  1923   000E42  EC4F  F00E         	call	_I2C_2_Master_Write
  1924   000E46                     
  1925                           ;color.c: 62:  RGBC->R=I2C_2_Master_Read(1);
  1926   000E46  0E01               	movlw	1
  1927   000E48  ECE7  F00C         	call	_I2C_2_Master_Read
  1928   000E4C  6E0A               	movwf	??_color_read^0,c
  1929   000E4E  6A0B               	clrf	(??_color_read+1)^0,c
  1930   000E50  5009               	movf	color_read@RGBC^0,w,c
  1931   000E52  6ED9               	movwf	fsr2l,c
  1932   000E54  6ADA               	clrf	fsr2h,c
  1933   000E56  C00A  FFDE         	movff	??_color_read,postinc2
  1934   000E5A  C00B  FFDD         	movff	??_color_read+1,postdec2
  1935   000E5E                     
  1936                           ;color.c: 63:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  1937   000E5E  5009               	movf	color_read@RGBC^0,w,c
  1938   000E60  6ED9               	movwf	fsr2l,c
  1939   000E62  6ADA               	clrf	fsr2h,c
  1940   000E64  CFDE F00A          	movff	postinc2,??_color_read
  1941   000E68  CFDD F00B          	movff	postdec2,??_color_read+1
  1942   000E6C  0E00               	movlw	0
  1943   000E6E  ECE7  F00C         	call	_I2C_2_Master_Read
  1944   000E72  6E0C               	movwf	(??_color_read+2)^0,c
  1945   000E74  500C               	movf	(??_color_read+2)^0,w,c
  1946   000E76  6E0E               	movwf	(??_color_read+4)^0,c
  1947   000E78  6A0D               	clrf	(??_color_read+3)^0,c
  1948   000E7A  500A               	movf	??_color_read^0,w,c
  1949   000E7C  100D               	iorwf	(??_color_read+3)^0,w,c
  1950   000E7E  6E0F               	movwf	(??_color_read+5)^0,c
  1951   000E80  500B               	movf	(??_color_read+1)^0,w,c
  1952   000E82  100E               	iorwf	(??_color_read+4)^0,w,c
  1953   000E84  6E10               	movwf	(??_color_read+6)^0,c
  1954   000E86  5009               	movf	color_read@RGBC^0,w,c
  1955   000E88  6ED9               	movwf	fsr2l,c
  1956   000E8A  6ADA               	clrf	fsr2h,c
  1957   000E8C  C00F  FFDE         	movff	??_color_read+5,postinc2
  1958   000E90  C010  FFDD         	movff	??_color_read+6,postdec2
  1959                           
  1960                           ;color.c: 64:  I2C_2_Master_Stop();
  1961   000E94  EC5A  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1962                           
  1963                           ;color.c: 66:     I2C_2_Master_Start();
  1964   000E98  EC5F  F00E         	call	_I2C_2_Master_Start	;wreg free
  1965                           
  1966                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  1967   000E9C  0E52               	movlw	82
  1968   000E9E  EC4F  F00E         	call	_I2C_2_Master_Write
  1969                           
  1970                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x18);
  1971   000EA2  0EB8               	movlw	184
  1972   000EA4  EC4F  F00E         	call	_I2C_2_Master_Write
  1973                           
  1974                           ;color.c: 69:  I2C_2_Master_RepStart();
  1975   000EA8  EC55  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1976                           
  1977                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  1978   000EAC  0E53               	movlw	83
  1979   000EAE  EC4F  F00E         	call	_I2C_2_Master_Write
  1980   000EB2                     
  1981                           ;color.c: 71:  RGBC->G=I2C_2_Master_Read(1);
  1982   000EB2  0E01               	movlw	1
  1983   000EB4  ECE7  F00C         	call	_I2C_2_Master_Read
  1984   000EB8  6E0A               	movwf	??_color_read^0,c
  1985   000EBA  6A0B               	clrf	(??_color_read+1)^0,c
  1986   000EBC  5009               	movf	color_read@RGBC^0,w,c
  1987   000EBE  6ED9               	movwf	fsr2l,c
  1988   000EC0  6ADA               	clrf	fsr2h,c
  1989   000EC2  0E02               	movlw	2
  1990   000EC4  26D9               	addwf	fsr2l,f,c
  1991   000EC6  C00A  FFDE         	movff	??_color_read,postinc2
  1992   000ECA  C00B  FFDD         	movff	??_color_read+1,postdec2
  1993   000ECE                     
  1994                           ;color.c: 72:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  1995   000ECE  5009               	movf	color_read@RGBC^0,w,c
  1996   000ED0  6ED9               	movwf	fsr2l,c
  1997   000ED2  6ADA               	clrf	fsr2h,c
  1998   000ED4  0E02               	movlw	2
  1999   000ED6  26D9               	addwf	fsr2l,f,c
  2000   000ED8  CFDE F00A          	movff	postinc2,??_color_read
  2001   000EDC  CFDD F00B          	movff	postdec2,??_color_read+1
  2002   000EE0  0E00               	movlw	0
  2003   000EE2  ECE7  F00C         	call	_I2C_2_Master_Read
  2004   000EE6  6E0C               	movwf	(??_color_read+2)^0,c
  2005   000EE8  500C               	movf	(??_color_read+2)^0,w,c
  2006   000EEA  6E0E               	movwf	(??_color_read+4)^0,c
  2007   000EEC  6A0D               	clrf	(??_color_read+3)^0,c
  2008   000EEE  500A               	movf	??_color_read^0,w,c
  2009   000EF0  100D               	iorwf	(??_color_read+3)^0,w,c
  2010   000EF2  6E0F               	movwf	(??_color_read+5)^0,c
  2011   000EF4  500B               	movf	(??_color_read+1)^0,w,c
  2012   000EF6  100E               	iorwf	(??_color_read+4)^0,w,c
  2013   000EF8  6E10               	movwf	(??_color_read+6)^0,c
  2014   000EFA  5009               	movf	color_read@RGBC^0,w,c
  2015   000EFC  6ED9               	movwf	fsr2l,c
  2016   000EFE  6ADA               	clrf	fsr2h,c
  2017   000F00  0E02               	movlw	2
  2018   000F02  26D9               	addwf	fsr2l,f,c
  2019   000F04  C00F  FFDE         	movff	??_color_read+5,postinc2
  2020   000F08  C010  FFDD         	movff	??_color_read+6,postdec2
  2021                           
  2022                           ;color.c: 73:  I2C_2_Master_Stop();
  2023   000F0C  EC5A  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2024                           
  2025                           ;color.c: 75:     I2C_2_Master_Start();
  2026   000F10  EC5F  F00E         	call	_I2C_2_Master_Start	;wreg free
  2027                           
  2028                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
  2029   000F14  0E52               	movlw	82
  2030   000F16  EC4F  F00E         	call	_I2C_2_Master_Write
  2031                           
  2032                           ;color.c: 77:  I2C_2_Master_Write(0xA0 | 0x1A);
  2033   000F1A  0EBA               	movlw	186
  2034   000F1C  EC4F  F00E         	call	_I2C_2_Master_Write
  2035                           
  2036                           ;color.c: 78:  I2C_2_Master_RepStart();
  2037   000F20  EC55  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2038                           
  2039                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  2040   000F24  0E53               	movlw	83
  2041   000F26  EC4F  F00E         	call	_I2C_2_Master_Write
  2042   000F2A                     
  2043                           ;color.c: 80:  RGBC->B=I2C_2_Master_Read(1);
  2044   000F2A  0E01               	movlw	1
  2045   000F2C  ECE7  F00C         	call	_I2C_2_Master_Read
  2046   000F30  6E0A               	movwf	??_color_read^0,c
  2047   000F32  6A0B               	clrf	(??_color_read+1)^0,c
  2048   000F34  5009               	movf	color_read@RGBC^0,w,c
  2049   000F36  6ED9               	movwf	fsr2l,c
  2050   000F38  6ADA               	clrf	fsr2h,c
  2051   000F3A  0E04               	movlw	4
  2052   000F3C  26D9               	addwf	fsr2l,f,c
  2053   000F3E  C00A  FFDE         	movff	??_color_read,postinc2
  2054   000F42  C00B  FFDD         	movff	??_color_read+1,postdec2
  2055   000F46                     
  2056                           ;color.c: 81:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  2057   000F46  5009               	movf	color_read@RGBC^0,w,c
  2058   000F48  6ED9               	movwf	fsr2l,c
  2059   000F4A  6ADA               	clrf	fsr2h,c
  2060   000F4C  0E04               	movlw	4
  2061   000F4E  26D9               	addwf	fsr2l,f,c
  2062   000F50  CFDE F00A          	movff	postinc2,??_color_read
  2063   000F54  CFDD F00B          	movff	postdec2,??_color_read+1
  2064   000F58  0E00               	movlw	0
  2065   000F5A  ECE7  F00C         	call	_I2C_2_Master_Read
  2066   000F5E  6E0C               	movwf	(??_color_read+2)^0,c
  2067   000F60  500C               	movf	(??_color_read+2)^0,w,c
  2068   000F62  6E0E               	movwf	(??_color_read+4)^0,c
  2069   000F64  6A0D               	clrf	(??_color_read+3)^0,c
  2070   000F66  500A               	movf	??_color_read^0,w,c
  2071   000F68  100D               	iorwf	(??_color_read+3)^0,w,c
  2072   000F6A  6E0F               	movwf	(??_color_read+5)^0,c
  2073   000F6C  500B               	movf	(??_color_read+1)^0,w,c
  2074   000F6E  100E               	iorwf	(??_color_read+4)^0,w,c
  2075   000F70  6E10               	movwf	(??_color_read+6)^0,c
  2076   000F72  5009               	movf	color_read@RGBC^0,w,c
  2077   000F74  6ED9               	movwf	fsr2l,c
  2078   000F76  6ADA               	clrf	fsr2h,c
  2079   000F78  0E04               	movlw	4
  2080   000F7A  26D9               	addwf	fsr2l,f,c
  2081   000F7C  C00F  FFDE         	movff	??_color_read+5,postinc2
  2082   000F80  C010  FFDD         	movff	??_color_read+6,postdec2
  2083                           
  2084                           ;color.c: 82:  I2C_2_Master_Stop();
  2085   000F84  EC5A  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2086                           
  2087                           ;color.c: 84:     I2C_2_Master_Start();
  2088   000F88  EC5F  F00E         	call	_I2C_2_Master_Start	;wreg free
  2089                           
  2090                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x00);
  2091   000F8C  0E52               	movlw	82
  2092   000F8E  EC4F  F00E         	call	_I2C_2_Master_Write
  2093                           
  2094                           ;color.c: 86:  I2C_2_Master_Write(0xA0 | 0x14);
  2095   000F92  0EB4               	movlw	180
  2096   000F94  EC4F  F00E         	call	_I2C_2_Master_Write
  2097                           
  2098                           ;color.c: 87:  I2C_2_Master_RepStart();
  2099   000F98  EC55  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2100                           
  2101                           ;color.c: 88:  I2C_2_Master_Write(0x52 | 0x01);
  2102   000F9C  0E53               	movlw	83
  2103   000F9E  EC4F  F00E         	call	_I2C_2_Master_Write
  2104   000FA2                     
  2105                           ;color.c: 89:  RGBC->C=I2C_2_Master_Read(1);
  2106   000FA2  0E01               	movlw	1
  2107   000FA4  ECE7  F00C         	call	_I2C_2_Master_Read
  2108   000FA8  6E0A               	movwf	??_color_read^0,c
  2109   000FAA  6A0B               	clrf	(??_color_read+1)^0,c
  2110   000FAC  5009               	movf	color_read@RGBC^0,w,c
  2111   000FAE  6ED9               	movwf	fsr2l,c
  2112   000FB0  6ADA               	clrf	fsr2h,c
  2113   000FB2  0E06               	movlw	6
  2114   000FB4  26D9               	addwf	fsr2l,f,c
  2115   000FB6  C00A  FFDE         	movff	??_color_read,postinc2
  2116   000FBA  C00B  FFDD         	movff	??_color_read+1,postdec2
  2117   000FBE                     
  2118                           ;color.c: 90:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  2119   000FBE  5009               	movf	color_read@RGBC^0,w,c
  2120   000FC0  6ED9               	movwf	fsr2l,c
  2121   000FC2  6ADA               	clrf	fsr2h,c
  2122   000FC4  0E06               	movlw	6
  2123   000FC6  26D9               	addwf	fsr2l,f,c
  2124   000FC8  CFDE F00A          	movff	postinc2,??_color_read
  2125   000FCC  CFDD F00B          	movff	postdec2,??_color_read+1
  2126   000FD0  0E00               	movlw	0
  2127   000FD2  ECE7  F00C         	call	_I2C_2_Master_Read
  2128   000FD6  6E0C               	movwf	(??_color_read+2)^0,c
  2129   000FD8  500C               	movf	(??_color_read+2)^0,w,c
  2130   000FDA  6E0E               	movwf	(??_color_read+4)^0,c
  2131   000FDC  6A0D               	clrf	(??_color_read+3)^0,c
  2132   000FDE  500A               	movf	??_color_read^0,w,c
  2133   000FE0  100D               	iorwf	(??_color_read+3)^0,w,c
  2134   000FE2  6E0F               	movwf	(??_color_read+5)^0,c
  2135   000FE4  500B               	movf	(??_color_read+1)^0,w,c
  2136   000FE6  100E               	iorwf	(??_color_read+4)^0,w,c
  2137   000FE8  6E10               	movwf	(??_color_read+6)^0,c
  2138   000FEA  5009               	movf	color_read@RGBC^0,w,c
  2139   000FEC  6ED9               	movwf	fsr2l,c
  2140   000FEE  6ADA               	clrf	fsr2h,c
  2141   000FF0  0E06               	movlw	6
  2142   000FF2  26D9               	addwf	fsr2l,f,c
  2143   000FF4  C00F  FFDE         	movff	??_color_read+5,postinc2
  2144   000FF8  C010  FFDD         	movff	??_color_read+6,postdec2
  2145                           
  2146                           ;color.c: 91:  I2C_2_Master_Stop();
  2147   000FFC  EC5A  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2148   001000  0012               	return		;funcret
  2149   001002                     __end_of_color_read:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _I2C_2_Master_RepStart *****************
  2153 ;; Defined at:
  2154 ;;		line 33 in file "i2c.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;Total ram usage:        0 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 3
  2175 ;; This function calls:
  2176 ;;		_I2C_2_Master_Idle
  2177 ;; This function is called by:
  2178 ;;		_color_read
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text14
  2183   001CAA                     __ptext14:
  2184                           	callstack 0
  2185   001CAA                     _I2C_2_Master_RepStart:
  2186                           	callstack 26
  2187   001CAA                     
  2188                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2189   001CAA  ECA4  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2190   001CAE                     
  2191                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2192   001CAE  010E               	movlb	14	; () banked
  2193   001CB0  83DA               	bsf	218,1,b	;volatile
  2194   001CB2                     
  2195                           ; BSR set to: 14
  2196   001CB2  0012               	return		;funcret
  2197   001CB4                     __end_of_I2C_2_Master_RepStart:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function _I2C_2_Master_Read *****************
  2201 ;; Defined at:
  2202 ;;		line 51 in file "i2c.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  ack             1    wreg     unsigned char 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  ack             1    6[COMRAM] unsigned char 
  2207 ;;  tmp             1    7[COMRAM] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      unsigned char 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;Total ram usage:        3 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 3
  2224 ;; This function calls:
  2225 ;;		_I2C_2_Master_Idle
  2226 ;; This function is called by:
  2227 ;;		_color_read
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text15
  2232   0019CE                     __ptext15:
  2233                           	callstack 0
  2234   0019CE                     _I2C_2_Master_Read:
  2235                           	callstack 26
  2236                           
  2237                           ; BSR set to: 14
  2238                           ;incstack = 0
  2239                           ;I2C_2_Master_Read@ack stored from wreg
  2240   0019CE  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  2241   0019D0                     
  2242                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2243   0019D0  ECA4  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2244   0019D4                     
  2245                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2246   0019D4  010E               	movlb	14	; () banked
  2247   0019D6  87DA               	bsf	218,3,b	;volatile
  2248                           
  2249                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2250   0019D8  ECA4  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2251   0019DC                     
  2252                           ;i2c.c: 57:   tmp = SSP2BUF;
  2253   0019DC  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2254                           
  2255                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2256   0019E0  ECA4  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2257   0019E4                     
  2258                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2259   0019E4  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  2260   0019E6  B4D8               	btfsc	status,2,c
  2261   0019E8  EFF8  F00C         	goto	u1071
  2262   0019EC  EFFC  F00C         	goto	u1070
  2263   0019F0                     u1071:
  2264   0019F0  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2265   0019F2  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  2266   0019F4  EFFD  F00C         	goto	u1088
  2267   0019F8                     u1070:
  2268   0019F8  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2269   0019FA                     u1088:
  2270   0019FA  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  2271   0019FC  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  2272   0019FE  010E               	movlb	14	; () banked
  2273   001A00  51DA               	movf	218,w,b	;volatile
  2274   001A02  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2275   001A04  0BDF               	andlw	-33
  2276   001A06  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2277   001A08  6FDA               	movwf	218,b	;volatile
  2278   001A0A                     
  2279                           ; BSR set to: 14
  2280                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2281   001A0A  89DA               	bsf	218,4,b	;volatile
  2282   001A0C                     
  2283                           ; BSR set to: 14
  2284                           ;i2c.c: 61:   return tmp;
  2285   001A0C  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  2286   001A0E                     
  2287                           ; BSR set to: 14
  2288   001A0E  0012               	return		;funcret
  2289   001A10                     __end_of_I2C_2_Master_Read:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function _color_normalise *****************
  2293 ;; Defined at:
  2294 ;;		line 95 in file "color.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  RGBC            8   30[COMRAM] struct RGBC_val
  2297 ;;  RGBC_n          1   38[COMRAM] PTR struct RGBC_val
  2298 ;;		 -> main@RGBC_n(8), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;		None
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2310 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2313 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2314 ;;Total ram usage:       11 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; Hardware stack levels required when called: 3
  2317 ;; This function calls:
  2318 ;;		___aldiv
  2319 ;;		___lmul
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text16
  2326   001336                     __ptext16:
  2327                           	callstack 0
  2328   001336                     _color_normalise:
  2329                           	callstack 27
  2330   001336                     
  2331                           ;color.c: 113:     RGBC_n->C = RGBC.C;
  2332   001336  5027               	movf	color_normalise@RGBC_n^0,w,c
  2333   001338  6ED9               	movwf	fsr2l,c
  2334   00133A  6ADA               	clrf	fsr2h,c
  2335   00133C  0E06               	movlw	6
  2336   00133E  26D9               	addwf	fsr2l,f,c
  2337   001340  C025  FFDE         	movff	color_normalise@RGBC+6,postinc2
  2338   001344  C026  FFDD         	movff	color_normalise@RGBC+7,postdec2
  2339   001348                     
  2340                           ;color.c: 114:     RGBC_n->R = 1000L*RGBC.R/(RGBC.R+RGBC.G+RGBC.B);
  2341   001348  C01F  F005         	movff	color_normalise@RGBC,___lmul@multiplier
  2342   00134C  C020  F006         	movff	color_normalise@RGBC+1,___lmul@multiplier+1
  2343   001350  6A07               	clrf	(___lmul@multiplier+2)^0,c
  2344   001352  6A08               	clrf	(___lmul@multiplier+3)^0,c
  2345   001354  0EE8               	movlw	232
  2346   001356  6E09               	movwf	___lmul@multiplicand^0,c
  2347   001358  0E03               	movlw	3
  2348   00135A  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  2349   00135C  0E00               	movlw	0
  2350   00135E  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  2351   001360  0E00               	movlw	0
  2352   001362  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  2353   001364  EC81  F00C         	call	___lmul	;wreg free
  2354   001368  C005  F011         	movff	?___lmul,___aldiv@dividend
  2355   00136C  C006  F012         	movff	?___lmul+1,___aldiv@dividend+1
  2356   001370  C007  F013         	movff	?___lmul+2,___aldiv@dividend+2
  2357   001374  C008  F014         	movff	?___lmul+3,___aldiv@dividend+3
  2358   001378  5023               	movf	(color_normalise@RGBC+4)^0,w,c
  2359   00137A  2421               	addwf	(color_normalise@RGBC+2)^0,w,c
  2360   00137C  6E28               	movwf	??_color_normalise^0,c
  2361   00137E  5024               	movf	(color_normalise@RGBC+5)^0,w,c
  2362   001380  2022               	addwfc	(color_normalise@RGBC+3)^0,w,c
  2363   001382  6E29               	movwf	(??_color_normalise+1)^0,c
  2364   001384  501F               	movf	color_normalise@RGBC^0,w,c
  2365   001386  2628               	addwf	??_color_normalise^0,f,c
  2366   001388  5020               	movf	(color_normalise@RGBC+1)^0,w,c
  2367   00138A  2229               	addwfc	(??_color_normalise+1)^0,f,c
  2368   00138C  C028  F015         	movff	??_color_normalise,___aldiv@divisor
  2369   001390  C029  F016         	movff	??_color_normalise+1,___aldiv@divisor+1
  2370   001394  6A17               	clrf	(___aldiv@divisor+2)^0,c
  2371   001396  6A18               	clrf	(___aldiv@divisor+3)^0,c
  2372   001398  EC3C  F00A         	call	___aldiv	;wreg free
  2373   00139C  5027               	movf	color_normalise@RGBC_n^0,w,c
  2374   00139E  6ED9               	movwf	fsr2l,c
  2375   0013A0  6ADA               	clrf	fsr2h,c
  2376   0013A2  C011  FFDE         	movff	?___aldiv,postinc2
  2377   0013A6  C012  FFDD         	movff	?___aldiv+1,postdec2
  2378   0013AA                     
  2379                           ;color.c: 115:     RGBC_n->G = 1000L*RGBC.G/(RGBC.R+RGBC.G+RGBC.B);
  2380   0013AA  C021  F005         	movff	color_normalise@RGBC+2,___lmul@multiplier
  2381   0013AE  C022  F006         	movff	color_normalise@RGBC+3,___lmul@multiplier+1
  2382   0013B2  6A07               	clrf	(___lmul@multiplier+2)^0,c
  2383   0013B4  6A08               	clrf	(___lmul@multiplier+3)^0,c
  2384   0013B6  0EE8               	movlw	232
  2385   0013B8  6E09               	movwf	___lmul@multiplicand^0,c
  2386   0013BA  0E03               	movlw	3
  2387   0013BC  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  2388   0013BE  0E00               	movlw	0
  2389   0013C0  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  2390   0013C2  0E00               	movlw	0
  2391   0013C4  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  2392   0013C6  EC81  F00C         	call	___lmul	;wreg free
  2393   0013CA  C005  F011         	movff	?___lmul,___aldiv@dividend
  2394   0013CE  C006  F012         	movff	?___lmul+1,___aldiv@dividend+1
  2395   0013D2  C007  F013         	movff	?___lmul+2,___aldiv@dividend+2
  2396   0013D6  C008  F014         	movff	?___lmul+3,___aldiv@dividend+3
  2397   0013DA  5023               	movf	(color_normalise@RGBC+4)^0,w,c
  2398   0013DC  2421               	addwf	(color_normalise@RGBC+2)^0,w,c
  2399   0013DE  6E28               	movwf	??_color_normalise^0,c
  2400   0013E0  5024               	movf	(color_normalise@RGBC+5)^0,w,c
  2401   0013E2  2022               	addwfc	(color_normalise@RGBC+3)^0,w,c
  2402   0013E4  6E29               	movwf	(??_color_normalise+1)^0,c
  2403   0013E6  501F               	movf	color_normalise@RGBC^0,w,c
  2404   0013E8  2628               	addwf	??_color_normalise^0,f,c
  2405   0013EA  5020               	movf	(color_normalise@RGBC+1)^0,w,c
  2406   0013EC  2229               	addwfc	(??_color_normalise+1)^0,f,c
  2407   0013EE  C028  F015         	movff	??_color_normalise,___aldiv@divisor
  2408   0013F2  C029  F016         	movff	??_color_normalise+1,___aldiv@divisor+1
  2409   0013F6  6A17               	clrf	(___aldiv@divisor+2)^0,c
  2410   0013F8  6A18               	clrf	(___aldiv@divisor+3)^0,c
  2411   0013FA  EC3C  F00A         	call	___aldiv	;wreg free
  2412   0013FE  5027               	movf	color_normalise@RGBC_n^0,w,c
  2413   001400  6ED9               	movwf	fsr2l,c
  2414   001402  6ADA               	clrf	fsr2h,c
  2415   001404  0E02               	movlw	2
  2416   001406  26D9               	addwf	fsr2l,f,c
  2417   001408  C011  FFDE         	movff	?___aldiv,postinc2
  2418   00140C  C012  FFDD         	movff	?___aldiv+1,postdec2
  2419   001410                     
  2420                           ;color.c: 116:     RGBC_n->B = 1000L*RGBC.B/(RGBC.R+RGBC.G+RGBC.B);
  2421   001410  C023  F005         	movff	color_normalise@RGBC+4,___lmul@multiplier
  2422   001414  C024  F006         	movff	color_normalise@RGBC+5,___lmul@multiplier+1
  2423   001418  6A07               	clrf	(___lmul@multiplier+2)^0,c
  2424   00141A  6A08               	clrf	(___lmul@multiplier+3)^0,c
  2425   00141C  0EE8               	movlw	232
  2426   00141E  6E09               	movwf	___lmul@multiplicand^0,c
  2427   001420  0E03               	movlw	3
  2428   001422  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  2429   001424  0E00               	movlw	0
  2430   001426  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  2431   001428  0E00               	movlw	0
  2432   00142A  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  2433   00142C  EC81  F00C         	call	___lmul	;wreg free
  2434   001430  C005  F011         	movff	?___lmul,___aldiv@dividend
  2435   001434  C006  F012         	movff	?___lmul+1,___aldiv@dividend+1
  2436   001438  C007  F013         	movff	?___lmul+2,___aldiv@dividend+2
  2437   00143C  C008  F014         	movff	?___lmul+3,___aldiv@dividend+3
  2438   001440  5023               	movf	(color_normalise@RGBC+4)^0,w,c
  2439   001442  2421               	addwf	(color_normalise@RGBC+2)^0,w,c
  2440   001444  6E28               	movwf	??_color_normalise^0,c
  2441   001446  5024               	movf	(color_normalise@RGBC+5)^0,w,c
  2442   001448  2022               	addwfc	(color_normalise@RGBC+3)^0,w,c
  2443   00144A  6E29               	movwf	(??_color_normalise+1)^0,c
  2444   00144C  501F               	movf	color_normalise@RGBC^0,w,c
  2445   00144E  2628               	addwf	??_color_normalise^0,f,c
  2446   001450  5020               	movf	(color_normalise@RGBC+1)^0,w,c
  2447   001452  2229               	addwfc	(??_color_normalise+1)^0,f,c
  2448   001454  C028  F015         	movff	??_color_normalise,___aldiv@divisor
  2449   001458  C029  F016         	movff	??_color_normalise+1,___aldiv@divisor+1
  2450   00145C  6A17               	clrf	(___aldiv@divisor+2)^0,c
  2451   00145E  6A18               	clrf	(___aldiv@divisor+3)^0,c
  2452   001460  EC3C  F00A         	call	___aldiv	;wreg free
  2453   001464  5027               	movf	color_normalise@RGBC_n^0,w,c
  2454   001466  6ED9               	movwf	fsr2l,c
  2455   001468  6ADA               	clrf	fsr2h,c
  2456   00146A  0E04               	movlw	4
  2457   00146C  26D9               	addwf	fsr2l,f,c
  2458   00146E  C011  FFDE         	movff	?___aldiv,postinc2
  2459   001472  C012  FFDD         	movff	?___aldiv+1,postdec2
  2460   001476  0012               	return		;funcret
  2461   001478                     __end_of_color_normalise:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function ___lmul *****************
  2465 ;; Defined at:
  2466 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  multiplier      4    4[COMRAM] unsigned long 
  2469 ;;  multiplicand    4    8[COMRAM] unsigned long 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  product         4   12[COMRAM] unsigned long 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  4    4[COMRAM] unsigned long 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2481 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2482 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2485 ;;Total ram usage:       12 bytes
  2486 ;; Hardware stack levels used: 1
  2487 ;; Hardware stack levels required when called: 2
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_color_normalise
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text17
  2496   001902                     __ptext17:
  2497                           	callstack 0
  2498   001902                     ___lmul:
  2499                           	callstack 27
  2500   001902  0E00               	movlw	0
  2501   001904  6E0D               	movwf	___lmul@product^0,c
  2502   001906  0E00               	movlw	0
  2503   001908  6E0E               	movwf	(___lmul@product+1)^0,c
  2504   00190A  0E00               	movlw	0
  2505   00190C  6E0F               	movwf	(___lmul@product+2)^0,c
  2506   00190E  0E00               	movlw	0
  2507   001910  6E10               	movwf	(___lmul@product+3)^0,c
  2508   001912                     l1765:
  2509   001912  A005               	btfss	___lmul@multiplier^0,0,c
  2510   001914  EF8E  F00C         	goto	u1121
  2511   001918  EF90  F00C         	goto	u1120
  2512   00191C                     u1121:
  2513   00191C  EF98  F00C         	goto	l1769
  2514   001920                     u1120:
  2515   001920  5009               	movf	___lmul@multiplicand^0,w,c
  2516   001922  260D               	addwf	___lmul@product^0,f,c
  2517   001924  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  2518   001926  220E               	addwfc	(___lmul@product+1)^0,f,c
  2519   001928  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  2520   00192A  220F               	addwfc	(___lmul@product+2)^0,f,c
  2521   00192C  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  2522   00192E  2210               	addwfc	(___lmul@product+3)^0,f,c
  2523   001930                     l1769:
  2524   001930  90D8               	bcf	status,0,c
  2525   001932  3609               	rlcf	___lmul@multiplicand^0,f,c
  2526   001934  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2527   001936  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2528   001938  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2529   00193A  90D8               	bcf	status,0,c
  2530   00193C  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  2531   00193E  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  2532   001940  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  2533   001942  3205               	rrcf	___lmul@multiplier^0,f,c
  2534   001944  5005               	movf	___lmul@multiplier^0,w,c
  2535   001946  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  2536   001948  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  2537   00194A  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  2538   00194C  A4D8               	btfss	status,2,c
  2539   00194E  EFAB  F00C         	goto	u1131
  2540   001952  EFAD  F00C         	goto	u1130
  2541   001956                     u1131:
  2542   001956  EF89  F00C         	goto	l1765
  2543   00195A                     u1130:
  2544   00195A  C00D  F005         	movff	___lmul@product,?___lmul
  2545   00195E  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  2546   001962  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  2547   001966  C010  F008         	movff	___lmul@product+3,?___lmul+3
  2548   00196A  0012               	return		;funcret
  2549   00196C                     __end_of___lmul:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function ___aldiv *****************
  2553 ;; Defined at:
  2554 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  dividend        4   16[COMRAM] long 
  2557 ;;  divisor         4   20[COMRAM] long 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  quotient        4   26[COMRAM] long 
  2560 ;;  sign            1   25[COMRAM] unsigned char 
  2561 ;;  counter         1   24[COMRAM] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  4   16[COMRAM] long 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2571 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2572 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2574 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2575 ;;Total ram usage:       14 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 2
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_color_normalise
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text18
  2586   001478                     __ptext18:
  2587                           	callstack 0
  2588   001478                     ___aldiv:
  2589                           	callstack 27
  2590   001478  0E00               	movlw	0
  2591   00147A  6E1A               	movwf	___aldiv@sign^0,c
  2592   00147C  BE18               	btfsc	(___aldiv@divisor+3)^0,7,c
  2593   00147E  EF45  F00A         	goto	u1140
  2594   001482  EF43  F00A         	goto	u1141
  2595   001486                     u1141:
  2596   001486  EF4F  F00A         	goto	l1781
  2597   00148A                     u1140:
  2598   00148A  1E18               	comf	(___aldiv@divisor+3)^0,f,c
  2599   00148C  1E17               	comf	(___aldiv@divisor+2)^0,f,c
  2600   00148E  1E16               	comf	(___aldiv@divisor+1)^0,f,c
  2601   001490  6C15               	negf	___aldiv@divisor^0,c
  2602   001492  0E00               	movlw	0
  2603   001494  2216               	addwfc	(___aldiv@divisor+1)^0,f,c
  2604   001496  2217               	addwfc	(___aldiv@divisor+2)^0,f,c
  2605   001498  2218               	addwfc	(___aldiv@divisor+3)^0,f,c
  2606   00149A  0E01               	movlw	1
  2607   00149C  6E1A               	movwf	___aldiv@sign^0,c
  2608   00149E                     l1781:
  2609   00149E  BE14               	btfsc	(___aldiv@dividend+3)^0,7,c
  2610   0014A0  EF56  F00A         	goto	u1150
  2611   0014A4  EF54  F00A         	goto	u1151
  2612   0014A8                     u1151:
  2613   0014A8  EF60  F00A         	goto	l1787
  2614   0014AC                     u1150:
  2615   0014AC  1E14               	comf	(___aldiv@dividend+3)^0,f,c
  2616   0014AE  1E13               	comf	(___aldiv@dividend+2)^0,f,c
  2617   0014B0  1E12               	comf	(___aldiv@dividend+1)^0,f,c
  2618   0014B2  6C11               	negf	___aldiv@dividend^0,c
  2619   0014B4  0E00               	movlw	0
  2620   0014B6  2212               	addwfc	(___aldiv@dividend+1)^0,f,c
  2621   0014B8  2213               	addwfc	(___aldiv@dividend+2)^0,f,c
  2622   0014BA  2214               	addwfc	(___aldiv@dividend+3)^0,f,c
  2623   0014BC  0E01               	movlw	1
  2624   0014BE  1A1A               	xorwf	___aldiv@sign^0,f,c
  2625   0014C0                     l1787:
  2626   0014C0  0E00               	movlw	0
  2627   0014C2  6E1B               	movwf	___aldiv@quotient^0,c
  2628   0014C4  0E00               	movlw	0
  2629   0014C6  6E1C               	movwf	(___aldiv@quotient+1)^0,c
  2630   0014C8  0E00               	movlw	0
  2631   0014CA  6E1D               	movwf	(___aldiv@quotient+2)^0,c
  2632   0014CC  0E00               	movlw	0
  2633   0014CE  6E1E               	movwf	(___aldiv@quotient+3)^0,c
  2634   0014D0  5015               	movf	___aldiv@divisor^0,w,c
  2635   0014D2  1016               	iorwf	(___aldiv@divisor+1)^0,w,c
  2636   0014D4  1017               	iorwf	(___aldiv@divisor+2)^0,w,c
  2637   0014D6  1018               	iorwf	(___aldiv@divisor+3)^0,w,c
  2638   0014D8  B4D8               	btfsc	status,2,c
  2639   0014DA  EF71  F00A         	goto	u1161
  2640   0014DE  EF73  F00A         	goto	u1160
  2641   0014E2                     u1161:
  2642   0014E2  EFA9  F00A         	goto	l1809
  2643   0014E6                     u1160:
  2644   0014E6  0E01               	movlw	1
  2645   0014E8  6E19               	movwf	___aldiv@counter^0,c
  2646   0014EA  EF7D  F00A         	goto	l1795
  2647   0014EE                     l1793:
  2648   0014EE  90D8               	bcf	status,0,c
  2649   0014F0  3615               	rlcf	___aldiv@divisor^0,f,c
  2650   0014F2  3616               	rlcf	(___aldiv@divisor+1)^0,f,c
  2651   0014F4  3617               	rlcf	(___aldiv@divisor+2)^0,f,c
  2652   0014F6  3618               	rlcf	(___aldiv@divisor+3)^0,f,c
  2653   0014F8  2A19               	incf	___aldiv@counter^0,f,c
  2654   0014FA                     l1795:
  2655   0014FA  AE18               	btfss	(___aldiv@divisor+3)^0,7,c
  2656   0014FC  EF82  F00A         	goto	u1171
  2657   001500  EF84  F00A         	goto	u1170
  2658   001504                     u1171:
  2659   001504  EF77  F00A         	goto	l1793
  2660   001508                     u1170:
  2661   001508                     l1797:
  2662   001508  90D8               	bcf	status,0,c
  2663   00150A  361B               	rlcf	___aldiv@quotient^0,f,c
  2664   00150C  361C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2665   00150E  361D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2666   001510  361E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2667   001512  5015               	movf	___aldiv@divisor^0,w,c
  2668   001514  5C11               	subwf	___aldiv@dividend^0,w,c
  2669   001516  5016               	movf	(___aldiv@divisor+1)^0,w,c
  2670   001518  5812               	subwfb	(___aldiv@dividend+1)^0,w,c
  2671   00151A  5017               	movf	(___aldiv@divisor+2)^0,w,c
  2672   00151C  5813               	subwfb	(___aldiv@dividend+2)^0,w,c
  2673   00151E  5018               	movf	(___aldiv@divisor+3)^0,w,c
  2674   001520  5814               	subwfb	(___aldiv@dividend+3)^0,w,c
  2675   001522  A0D8               	btfss	status,0,c
  2676   001524  EF96  F00A         	goto	u1181
  2677   001528  EF98  F00A         	goto	u1180
  2678   00152C                     u1181:
  2679   00152C  EFA1  F00A         	goto	l1805
  2680   001530                     u1180:
  2681   001530  5015               	movf	___aldiv@divisor^0,w,c
  2682   001532  5E11               	subwf	___aldiv@dividend^0,f,c
  2683   001534  5016               	movf	(___aldiv@divisor+1)^0,w,c
  2684   001536  5A12               	subwfb	(___aldiv@dividend+1)^0,f,c
  2685   001538  5017               	movf	(___aldiv@divisor+2)^0,w,c
  2686   00153A  5A13               	subwfb	(___aldiv@dividend+2)^0,f,c
  2687   00153C  5018               	movf	(___aldiv@divisor+3)^0,w,c
  2688   00153E  5A14               	subwfb	(___aldiv@dividend+3)^0,f,c
  2689   001540  801B               	bsf	___aldiv@quotient^0,0,c
  2690   001542                     l1805:
  2691   001542  90D8               	bcf	status,0,c
  2692   001544  3218               	rrcf	(___aldiv@divisor+3)^0,f,c
  2693   001546  3217               	rrcf	(___aldiv@divisor+2)^0,f,c
  2694   001548  3216               	rrcf	(___aldiv@divisor+1)^0,f,c
  2695   00154A  3215               	rrcf	___aldiv@divisor^0,f,c
  2696   00154C  2E19               	decfsz	___aldiv@counter^0,f,c
  2697   00154E  EF84  F00A         	goto	l1797
  2698   001552                     l1809:
  2699   001552  501A               	movf	___aldiv@sign^0,w,c
  2700   001554  B4D8               	btfsc	status,2,c
  2701   001556  EFAF  F00A         	goto	u1191
  2702   00155A  EFB1  F00A         	goto	u1190
  2703   00155E                     u1191:
  2704   00155E  EFB9  F00A         	goto	l1813
  2705   001562                     u1190:
  2706   001562  1E1E               	comf	(___aldiv@quotient+3)^0,f,c
  2707   001564  1E1D               	comf	(___aldiv@quotient+2)^0,f,c
  2708   001566  1E1C               	comf	(___aldiv@quotient+1)^0,f,c
  2709   001568  6C1B               	negf	___aldiv@quotient^0,c
  2710   00156A  0E00               	movlw	0
  2711   00156C  221C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2712   00156E  221D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2713   001570  221E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2714   001572                     l1813:
  2715   001572  C01B  F011         	movff	___aldiv@quotient,?___aldiv
  2716   001576  C01C  F012         	movff	___aldiv@quotient+1,?___aldiv+1
  2717   00157A  C01D  F013         	movff	___aldiv@quotient+2,?___aldiv+2
  2718   00157E  C01E  F014         	movff	___aldiv@quotient+3,?___aldiv+3
  2719   001582  0012               	return		;funcret
  2720   001584                     __end_of___aldiv:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function _color_detect *****************
  2724 ;; Defined at:
  2725 ;;		line 119 in file "color.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  RGBC_n          8    4[COMRAM] struct RGBC_val
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  color           1   12[COMRAM] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      unsigned char 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2739 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2742 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2743 ;;Total ram usage:        9 bytes
  2744 ;; Hardware stack levels used: 1
  2745 ;; Hardware stack levels required when called: 2
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_main
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text19
  2754   0011BA                     __ptext19:
  2755                           	callstack 0
  2756   0011BA                     _color_detect:
  2757                           	callstack 28
  2758   0011BA                     
  2759                           ;color.c: 119: unsigned char color_detect(RGBC_val RGBC_n);color.c: 120: {;color.c: 121:
      +                               unsigned char color=0;
  2760   0011BA  0E00               	movlw	0
  2761   0011BC  6E0D               	movwf	color_detect@color^0,c
  2762   0011BE                     
  2763                           ;color.c: 122:     if (RGBC_n.R > 300) {
  2764   0011BE  0E2D               	movlw	45
  2765   0011C0  5C05               	subwf	color_detect@RGBC_n^0,w,c
  2766   0011C2  0E01               	movlw	1
  2767   0011C4  5806               	subwfb	(color_detect@RGBC_n+1)^0,w,c
  2768   0011C6  A0D8               	btfss	status,0,c
  2769   0011C8  EFE8  F008         	goto	u1221
  2770   0011CC  EFEA  F008         	goto	u1220
  2771   0011D0                     u1221:
  2772   0011D0  EFEE  F008         	goto	l1901
  2773   0011D4                     u1220:
  2774   0011D4                     
  2775                           ;color.c: 123:         color = 1;
  2776   0011D4  0E01               	movlw	1
  2777   0011D6  6E0D               	movwf	color_detect@color^0,c
  2778                           
  2779                           ;color.c: 124:     }
  2780   0011D8  EF99  F009         	goto	l98
  2781   0011DC                     l1901:
  2782   0011DC  0E2D               	movlw	45
  2783   0011DE  5C07               	subwf	(color_detect@RGBC_n+2)^0,w,c
  2784   0011E0  0E01               	movlw	1
  2785   0011E2  5808               	subwfb	(color_detect@RGBC_n+3)^0,w,c
  2786   0011E4  A0D8               	btfss	status,0,c
  2787   0011E6  EFF7  F008         	goto	u1231
  2788   0011EA  EFF9  F008         	goto	u1230
  2789   0011EE                     u1231:
  2790   0011EE  EFFD  F008         	goto	l1905
  2791   0011F2                     u1230:
  2792   0011F2                     
  2793                           ;color.c: 126:         color = 2;
  2794   0011F2  0E02               	movlw	2
  2795   0011F4  6E0D               	movwf	color_detect@color^0,c
  2796                           
  2797                           ;color.c: 127:     }
  2798   0011F6  EF99  F009         	goto	l98
  2799   0011FA                     l1905:
  2800   0011FA  0E2D               	movlw	45
  2801   0011FC  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2802   0011FE  0E01               	movlw	1
  2803   001200  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2804   001202  A0D8               	btfss	status,0,c
  2805   001204  EF06  F009         	goto	u1241
  2806   001208  EF08  F009         	goto	u1240
  2807   00120C                     u1241:
  2808   00120C  EF0C  F009         	goto	l1909
  2809   001210                     u1240:
  2810   001210                     
  2811                           ;color.c: 129:         color = 3;
  2812   001210  0E03               	movlw	3
  2813   001212  6E0D               	movwf	color_detect@color^0,c
  2814                           
  2815                           ;color.c: 130:     }
  2816   001214  EF99  F009         	goto	l98
  2817   001218                     l1909:
  2818   001218  0E2D               	movlw	45
  2819   00121A  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2820   00121C  0E01               	movlw	1
  2821   00121E  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2822   001220  A0D8               	btfss	status,0,c
  2823   001222  EF15  F009         	goto	u1251
  2824   001226  EF17  F009         	goto	u1250
  2825   00122A                     u1251:
  2826   00122A  EF26  F009         	goto	l1915
  2827   00122E                     u1250:
  2828   00122E  0E2D               	movlw	45
  2829   001230  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2830   001232  0E01               	movlw	1
  2831   001234  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2832   001236  A0D8               	btfss	status,0,c
  2833   001238  EF20  F009         	goto	u1261
  2834   00123C  EF22  F009         	goto	u1260
  2835   001240                     u1261:
  2836   001240  EF26  F009         	goto	l1915
  2837   001244                     u1260:
  2838   001244                     
  2839                           ;color.c: 132:         color = 4;
  2840   001244  0E04               	movlw	4
  2841   001246  6E0D               	movwf	color_detect@color^0,c
  2842                           
  2843                           ;color.c: 133:     }
  2844   001248  EF99  F009         	goto	l98
  2845   00124C                     l1915:
  2846   00124C  0E2D               	movlw	45
  2847   00124E  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2848   001250  0E01               	movlw	1
  2849   001252  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2850   001254  A0D8               	btfss	status,0,c
  2851   001256  EF2F  F009         	goto	u1271
  2852   00125A  EF31  F009         	goto	u1270
  2853   00125E                     u1271:
  2854   00125E  EF40  F009         	goto	l1921
  2855   001262                     u1270:
  2856   001262  0E2D               	movlw	45
  2857   001264  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2858   001266  0E01               	movlw	1
  2859   001268  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2860   00126A  A0D8               	btfss	status,0,c
  2861   00126C  EF3A  F009         	goto	u1281
  2862   001270  EF3C  F009         	goto	u1280
  2863   001274                     u1281:
  2864   001274  EF40  F009         	goto	l1921
  2865   001278                     u1280:
  2866   001278                     
  2867                           ;color.c: 135:         color = 5;
  2868   001278  0E05               	movlw	5
  2869   00127A  6E0D               	movwf	color_detect@color^0,c
  2870                           
  2871                           ;color.c: 136:     }
  2872   00127C  EF99  F009         	goto	l98
  2873   001280                     l1921:
  2874   001280  0E2D               	movlw	45
  2875   001282  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2876   001284  0E01               	movlw	1
  2877   001286  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2878   001288  A0D8               	btfss	status,0,c
  2879   00128A  EF49  F009         	goto	u1291
  2880   00128E  EF4B  F009         	goto	u1290
  2881   001292                     u1291:
  2882   001292  EF5A  F009         	goto	l1927
  2883   001296                     u1290:
  2884   001296  0E2D               	movlw	45
  2885   001298  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2886   00129A  0E01               	movlw	1
  2887   00129C  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2888   00129E  A0D8               	btfss	status,0,c
  2889   0012A0  EF54  F009         	goto	u1301
  2890   0012A4  EF56  F009         	goto	u1300
  2891   0012A8                     u1301:
  2892   0012A8  EF5A  F009         	goto	l1927
  2893   0012AC                     u1300:
  2894   0012AC                     
  2895                           ;color.c: 138:         color = 6;
  2896   0012AC  0E06               	movlw	6
  2897   0012AE  6E0D               	movwf	color_detect@color^0,c
  2898                           
  2899                           ;color.c: 139:     }
  2900   0012B0  EF99  F009         	goto	l98
  2901   0012B4                     l1927:
  2902   0012B4  0E2D               	movlw	45
  2903   0012B6  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2904   0012B8  0E01               	movlw	1
  2905   0012BA  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2906   0012BC  A0D8               	btfss	status,0,c
  2907   0012BE  EF63  F009         	goto	u1311
  2908   0012C2  EF65  F009         	goto	u1310
  2909   0012C6                     u1311:
  2910   0012C6  EF74  F009         	goto	l1933
  2911   0012CA                     u1310:
  2912   0012CA  0E2D               	movlw	45
  2913   0012CC  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2914   0012CE  0E01               	movlw	1
  2915   0012D0  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2916   0012D2  A0D8               	btfss	status,0,c
  2917   0012D4  EF6E  F009         	goto	u1321
  2918   0012D8  EF70  F009         	goto	u1320
  2919   0012DC                     u1321:
  2920   0012DC  EF74  F009         	goto	l1933
  2921   0012E0                     u1320:
  2922   0012E0                     
  2923                           ;color.c: 141:         color = 7;
  2924   0012E0  0E07               	movlw	7
  2925   0012E2  6E0D               	movwf	color_detect@color^0,c
  2926                           
  2927                           ;color.c: 142:     }
  2928   0012E4  EF99  F009         	goto	l98
  2929   0012E8                     l1933:
  2930   0012E8  0E2D               	movlw	45
  2931   0012EA  5C05               	subwf	color_detect@RGBC_n^0,w,c
  2932   0012EC  0E01               	movlw	1
  2933   0012EE  5806               	subwfb	(color_detect@RGBC_n+1)^0,w,c
  2934   0012F0  A0D8               	btfss	status,0,c
  2935   0012F2  EF7D  F009         	goto	u1331
  2936   0012F6  EF7F  F009         	goto	u1330
  2937   0012FA                     u1331:
  2938   0012FA  EF99  F009         	goto	l106
  2939   0012FE                     u1330:
  2940   0012FE  0E2D               	movlw	45
  2941   001300  5C07               	subwf	(color_detect@RGBC_n+2)^0,w,c
  2942   001302  0E01               	movlw	1
  2943   001304  5808               	subwfb	(color_detect@RGBC_n+3)^0,w,c
  2944   001306  A0D8               	btfss	status,0,c
  2945   001308  EF88  F009         	goto	u1341
  2946   00130C  EF8A  F009         	goto	u1340
  2947   001310                     u1341:
  2948   001310  EF99  F009         	goto	l106
  2949   001314                     u1340:
  2950   001314  0E2D               	movlw	45
  2951   001316  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2952   001318  0E01               	movlw	1
  2953   00131A  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2954   00131C  A0D8               	btfss	status,0,c
  2955   00131E  EF93  F009         	goto	u1351
  2956   001322  EF95  F009         	goto	u1350
  2957   001326                     u1351:
  2958   001326  EF99  F009         	goto	l106
  2959   00132A                     u1350:
  2960   00132A                     
  2961                           ;color.c: 144:         color = 8;
  2962   00132A  0E08               	movlw	8
  2963   00132C  6E0D               	movwf	color_detect@color^0,c
  2964   00132E  EF99  F009         	goto	l98
  2965   001332                     l106:
  2966   001332                     l98:
  2967                           
  2968                           ;color.c: 146:     return color;
  2969   001332  500D               	movf	color_detect@color^0,w,c
  2970   001334  0012               	return		;funcret
  2971   001336                     __end_of_color_detect:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function _color_click_init *****************
  2975 ;; Defined at:
  2976 ;;		line 5 in file "color.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2992 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2994 ;;Total ram usage:        1 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; Hardware stack levels required when called: 5
  2997 ;; This function calls:
  2998 ;;		_I2C_2_Master_Init
  2999 ;;		_color_writetoaddr
  3000 ;; This function is called by:
  3001 ;;		_main
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text20
  3006   001892                     __ptext20:
  3007                           	callstack 0
  3008   001892                     _color_click_init:
  3009                           	callstack 25
  3010   001892                     
  3011                           ;color.c: 8:     I2C_2_Master_Init();
  3012   001892  EC8F  F00D         	call	_I2C_2_Master_Init	;wreg free
  3013   001896                     
  3014                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3015   001896  0E01               	movlw	1
  3016   001898  6E07               	movwf	color_writetoaddr@value^0,c
  3017   00189A  0E00               	movlw	0
  3018   00189C  EC03  F00E         	call	_color_writetoaddr
  3019   0018A0                     
  3020                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3021   0018A0  0E3F               	movlw	63
  3022   0018A2  6E09               	movwf	??_color_click_init^0,c
  3023   0018A4  0E55               	movlw	85
  3024   0018A6                     u1527:
  3025   0018A6  2EE8               	decfsz	wreg,f,c
  3026   0018A8  D7FE               	bra	u1527
  3027   0018AA  2E09               	decfsz	??_color_click_init^0,f,c
  3028   0018AC  D7FC               	bra	u1527
  3029   0018AE  0000               	nop	
  3030   0018B0                     
  3031                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3032   0018B0  0E03               	movlw	3
  3033   0018B2  6E07               	movwf	color_writetoaddr@value^0,c
  3034   0018B4  0E00               	movlw	0
  3035   0018B6  EC03  F00E         	call	_color_writetoaddr
  3036   0018BA                     
  3037                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3038   0018BA  0ED5               	movlw	213
  3039   0018BC  6E07               	movwf	color_writetoaddr@value^0,c
  3040   0018BE  0E01               	movlw	1
  3041   0018C0  EC03  F00E         	call	_color_writetoaddr
  3042   0018C4                     
  3043                           ;color.c: 21:  color_writetoaddr(0x00, 0x13);
  3044   0018C4  0E13               	movlw	19
  3045   0018C6  6E07               	movwf	color_writetoaddr@value^0,c
  3046   0018C8  0E00               	movlw	0
  3047   0018CA  EC03  F00E         	call	_color_writetoaddr
  3048   0018CE                     
  3049                           ;color.c: 22:     color_writetoaddr(0x07, 0x07);
  3050   0018CE  0E07               	movlw	7
  3051   0018D0  6E07               	movwf	color_writetoaddr@value^0,c
  3052   0018D2  0E07               	movlw	7
  3053   0018D4  EC03  F00E         	call	_color_writetoaddr
  3054   0018D8                     
  3055                           ;color.c: 23:     color_writetoaddr(0x06, 0xD0);
  3056   0018D8  0ED0               	movlw	208
  3057   0018DA  6E07               	movwf	color_writetoaddr@value^0,c
  3058   0018DC  0E06               	movlw	6
  3059   0018DE  EC03  F00E         	call	_color_writetoaddr
  3060   0018E2                     
  3061                           ;color.c: 24:     color_writetoaddr(0x05, 0x00);
  3062   0018E2  0E00               	movlw	0
  3063   0018E4  6E07               	movwf	color_writetoaddr@value^0,c
  3064   0018E6  0E05               	movlw	5
  3065   0018E8  EC03  F00E         	call	_color_writetoaddr
  3066   0018EC                     
  3067                           ;color.c: 25:     color_writetoaddr(0x04, 0x00);
  3068   0018EC  0E00               	movlw	0
  3069   0018EE  6E07               	movwf	color_writetoaddr@value^0,c
  3070   0018F0  0E04               	movlw	4
  3071   0018F2  EC03  F00E         	call	_color_writetoaddr
  3072   0018F6                     
  3073                           ;color.c: 26:     color_writetoaddr(0x0C, 0x02);
  3074   0018F6  0E02               	movlw	2
  3075   0018F8  6E07               	movwf	color_writetoaddr@value^0,c
  3076   0018FA  0E0C               	movlw	12
  3077   0018FC  EC03  F00E         	call	_color_writetoaddr
  3078   001900  0012               	return		;funcret
  3079   001902                     __end_of_color_click_init:
  3080                           	callstack 0
  3081                           
  3082 ;; *************** function _color_writetoaddr *****************
  3083 ;; Defined at:
  3084 ;;		line 31 in file "color.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  address         1    wreg     unsigned char 
  3087 ;;  value           1    6[COMRAM] unsigned char 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  address         1    7[COMRAM] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3099 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;Total ram usage:        2 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 4
  3106 ;; This function calls:
  3107 ;;		_I2C_2_Master_Start
  3108 ;;		_I2C_2_Master_Stop
  3109 ;;		_I2C_2_Master_Write
  3110 ;; This function is called by:
  3111 ;;		_color_click_init
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text21
  3116   001C06                     __ptext21:
  3117                           	callstack 0
  3118   001C06                     _color_writetoaddr:
  3119                           	callstack 25
  3120                           
  3121                           ;incstack = 0
  3122                           ;color_writetoaddr@address stored from wreg
  3123   001C06  6E08               	movwf	color_writetoaddr@address^0,c
  3124   001C08                     
  3125                           ;color.c: 32:     I2C_2_Master_Start();
  3126   001C08  EC5F  F00E         	call	_I2C_2_Master_Start	;wreg free
  3127                           
  3128                           ;color.c: 33:     I2C_2_Master_Write(0x52 | 0x00);
  3129   001C0C  0E52               	movlw	82
  3130   001C0E  EC4F  F00E         	call	_I2C_2_Master_Write
  3131                           
  3132                           ;color.c: 34:     I2C_2_Master_Write(0x80 | address);
  3133   001C12  5008               	movf	color_writetoaddr@address^0,w,c
  3134   001C14  0980               	iorlw	128
  3135   001C16  EC4F  F00E         	call	_I2C_2_Master_Write
  3136                           
  3137                           ;color.c: 35:     I2C_2_Master_Write(value);
  3138   001C1A  5007               	movf	color_writetoaddr@value^0,w,c
  3139   001C1C  EC4F  F00E         	call	_I2C_2_Master_Write
  3140                           
  3141                           ;color.c: 36:     I2C_2_Master_Stop();
  3142   001C20  EC5A  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3143   001C24  0012               	return		;funcret
  3144   001C26                     __end_of_color_writetoaddr:
  3145                           	callstack 0
  3146                           
  3147 ;; *************** function _I2C_2_Master_Write *****************
  3148 ;; Defined at:
  3149 ;;		line 45 in file "i2c.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  data_byte       1    wreg     unsigned char 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  data_byte       1    5[COMRAM] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3166 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3167 ;;Total ram usage:        1 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 3
  3170 ;; This function calls:
  3171 ;;		_I2C_2_Master_Idle
  3172 ;; This function is called by:
  3173 ;;		_color_writetoaddr
  3174 ;;		_color_read
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text22
  3179   001C9E                     __ptext22:
  3180                           	callstack 0
  3181   001C9E                     _I2C_2_Master_Write:
  3182                           	callstack 26
  3183                           
  3184                           ;incstack = 0
  3185                           ;I2C_2_Master_Write@data_byte stored from wreg
  3186   001C9E  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3187   001CA0                     
  3188                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3189   001CA0  ECA4  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3190   001CA4                     
  3191                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3192   001CA4  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3193   001CA8  0012               	return		;funcret
  3194   001CAA                     __end_of_I2C_2_Master_Write:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _I2C_2_Master_Stop *****************
  3198 ;; Defined at:
  3199 ;;		line 39 in file "i2c.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3217 ;;Total ram usage:        0 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 3
  3220 ;; This function calls:
  3221 ;;		_I2C_2_Master_Idle
  3222 ;; This function is called by:
  3223 ;;		_color_writetoaddr
  3224 ;;		_color_read
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text23
  3229   001CB4                     __ptext23:
  3230                           	callstack 0
  3231   001CB4                     _I2C_2_Master_Stop:
  3232                           	callstack 26
  3233   001CB4                     
  3234                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3235   001CB4  ECA4  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3236   001CB8                     
  3237                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3238   001CB8  010E               	movlb	14	; () banked
  3239   001CBA  85DA               	bsf	218,2,b	;volatile
  3240   001CBC                     
  3241                           ; BSR set to: 14
  3242   001CBC  0012               	return		;funcret
  3243   001CBE                     __end_of_I2C_2_Master_Stop:
  3244                           	callstack 0
  3245                           
  3246 ;; *************** function _I2C_2_Master_Start *****************
  3247 ;; Defined at:
  3248 ;;		line 27 in file "i2c.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;		None
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      void 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2, status,0, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3266 ;;Total ram usage:        0 bytes
  3267 ;; Hardware stack levels used: 1
  3268 ;; Hardware stack levels required when called: 3
  3269 ;; This function calls:
  3270 ;;		_I2C_2_Master_Idle
  3271 ;; This function is called by:
  3272 ;;		_color_writetoaddr
  3273 ;;		_color_read
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text24
  3278   001CBE                     __ptext24:
  3279                           	callstack 0
  3280   001CBE                     _I2C_2_Master_Start:
  3281                           	callstack 26
  3282   001CBE                     
  3283                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3284   001CBE  ECA4  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3285   001CC2                     
  3286                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3287   001CC2  010E               	movlb	14	; () banked
  3288   001CC4  81DA               	bsf	218,0,b	;volatile
  3289   001CC6                     
  3290                           ; BSR set to: 14
  3291   001CC6  0012               	return		;funcret
  3292   001CC8                     __end_of_I2C_2_Master_Start:
  3293                           	callstack 0
  3294                           
  3295 ;; *************** function _I2C_2_Master_Idle *****************
  3296 ;; Defined at:
  3297 ;;		line 22 in file "i2c.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3315 ;;Total ram usage:        1 bytes
  3316 ;; Hardware stack levels used: 1
  3317 ;; Hardware stack levels required when called: 2
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_I2C_2_Master_Start
  3322 ;;		_I2C_2_Master_RepStart
  3323 ;;		_I2C_2_Master_Stop
  3324 ;;		_I2C_2_Master_Write
  3325 ;;		_I2C_2_Master_Read
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text25
  3330   001B48                     __ptext25:
  3331                           	callstack 0
  3332   001B48                     _I2C_2_Master_Idle:
  3333                           	callstack 26
  3334   001B48                     l142:
  3335   001B48  010E               	movlb	14	; () banked
  3336   001B4A  B5D8               	btfsc	216,2,b	;volatile
  3337   001B4C  EFAA  F00D         	goto	u781
  3338   001B50  EFAC  F00D         	goto	u780
  3339   001B54                     u781:
  3340   001B54  EFA4  F00D         	goto	l142
  3341   001B58                     u780:
  3342   001B58                     
  3343                           ; BSR set to: 14
  3344   001B58  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3345   001B5C  0E1F               	movlw	31
  3346   001B5E  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3347   001B60  A4D8               	btfss	status,2,c
  3348   001B62  EFB5  F00D         	goto	u791
  3349   001B66  EFB7  F00D         	goto	u790
  3350   001B6A                     u791:
  3351   001B6A  EFA4  F00D         	goto	l142
  3352   001B6E                     u790:
  3353   001B6E                     
  3354                           ; BSR set to: 14
  3355   001B6E  0012               	return		;funcret
  3356   001B70                     __end_of_I2C_2_Master_Idle:
  3357                           	callstack 0
  3358                           
  3359 ;; *************** function _I2C_2_Master_Init *****************
  3360 ;; Defined at:
  3361 ;;		line 4 in file "i2c.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;Total ram usage:        0 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; Hardware stack levels required when called: 2
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_color_click_init
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text26
  3390   001B1E                     __ptext26:
  3391                           	callstack 0
  3392   001B1E                     _I2C_2_Master_Init:
  3393                           	callstack 27
  3394   001B1E                     
  3395                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3396   001B1E  010E               	movlb	14	; () banked
  3397   001B20  51D9               	movf	217,w,b	;volatile
  3398   001B22  0BF0               	andlw	-16
  3399   001B24  0908               	iorlw	8
  3400   001B26  6FD9               	movwf	217,b	;volatile
  3401   001B28                     
  3402                           ; BSR set to: 14
  3403                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3404   001B28  8BD9               	bsf	217,5,b	;volatile
  3405                           
  3406                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3407   001B2A  0E9F               	movlw	159
  3408   001B2C  6FD6               	movwf	214,b	;volatile
  3409   001B2E                     
  3410                           ; BSR set to: 14
  3411                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3412   001B2E  8A84               	bsf	132,5,c	;volatile
  3413   001B30                     
  3414                           ; BSR set to: 14
  3415                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3416   001B30  8C84               	bsf	132,6,c	;volatile
  3417   001B32                     
  3418                           ; BSR set to: 14
  3419                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3420   001B32  9BA7               	bcf	167,5,b	;volatile
  3421   001B34                     
  3422                           ; BSR set to: 14
  3423                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3424   001B34  9DA7               	bcf	167,6,b	;volatile
  3425                           
  3426                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3427   001B36  0E1D               	movlw	29
  3428   001B38  6F1D               	movwf	29,b	;volatile
  3429                           
  3430                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3431   001B3A  0E1E               	movlw	30
  3432   001B3C  6F1C               	movwf	28,b	;volatile
  3433                           
  3434                           ;i2c.c: 18:   RD5PPS=0x1C;
  3435   001B3E  0E1C               	movlw	28
  3436   001B40  6F6F               	movwf	111,b	;volatile
  3437                           
  3438                           ;i2c.c: 19:   RD6PPS=0x1B;
  3439   001B42  0E1B               	movlw	27
  3440   001B44  6F70               	movwf	112,b	;volatile
  3441   001B46                     
  3442                           ; BSR set to: 14
  3443   001B46  0012               	return		;funcret
  3444   001B48                     __end_of_I2C_2_Master_Init:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _TxBufferedString *****************
  3448 ;; Defined at:
  3449 ;;		line 66 in file "serial.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  string          2    5[COMRAM] PTR unsigned char 
  3452 ;;		 -> STR_2(1), main@buf(40), 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;		None
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3468 ;;Total ram usage:        2 bytes
  3469 ;; Hardware stack levels used: 1
  3470 ;; Hardware stack levels required when called: 3
  3471 ;; This function calls:
  3472 ;;		_putCharToTxBuf
  3473 ;; This function is called by:
  3474 ;;		_main
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text27
  3479   00196C                     __ptext27:
  3480                           	callstack 0
  3481   00196C                     _TxBufferedString:
  3482                           	callstack 27
  3483   00196C                     
  3484                           ;serial.c: 67:     while(*string != 0){
  3485   00196C  EFCD  F00C         	goto	l1965
  3486   001970                     l1961:
  3487                           
  3488                           ;serial.c: 68:   putCharToTxBuf(*string++);
  3489   001970  C006  FFF6         	movff	TxBufferedString@string,tblptrl
  3490   001974  C007  FFF7         	movff	TxBufferedString@string+1,tblptrh
  3491   001978  0E00               	movlw	low (__smallconst shr (0+16))
  3492   00197A  6EF8               	movwf	tblptru,c
  3493   00197C  0E0D               	movlw	(high __ramtop+-1)
  3494   00197E  64F7               	cpfsgt	tblptrh,c
  3495   001980  D003               	bra	u1377
  3496   001982  0008               	tblrd		*
  3497   001984  50F5               	movf	tablat,w,c
  3498   001986  D005               	bra	u1370
  3499   001988                     u1377:
  3500   001988  CFF6 FFE9          	movff	tblptrl,fsr0l
  3501   00198C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3502   001990  50EF               	movf	indf0,w,c
  3503   001992                     u1370:
  3504   001992  ECB8  F00D         	call	_putCharToTxBuf
  3505   001996  4A06               	infsnz	TxBufferedString@string^0,f,c
  3506   001998  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  3507   00199A                     l1965:
  3508                           
  3509                           ;serial.c: 67:     while(*string != 0){
  3510   00199A  C006  FFF6         	movff	TxBufferedString@string,tblptrl
  3511   00199E  C007  FFF7         	movff	TxBufferedString@string+1,tblptrh
  3512   0019A2  0E00               	movlw	low (__smallconst shr (0+16))
  3513   0019A4  6EF8               	movwf	tblptru,c
  3514   0019A6  0E0D               	movlw	(high __ramtop+-1)
  3515   0019A8  64F7               	cpfsgt	tblptrh,c
  3516   0019AA  D003               	bra	u1387
  3517   0019AC  0008               	tblrd		*
  3518   0019AE  50F5               	movf	tablat,w,c
  3519   0019B0  D005               	bra	u1380
  3520   0019B2                     u1387:
  3521   0019B2  CFF6 FFE9          	movff	tblptrl,fsr0l
  3522   0019B6  CFF7 FFEA          	movff	tblptrh,fsr0h
  3523   0019BA  50EF               	movf	indf0,w,c
  3524   0019BC                     u1380:
  3525   0019BC  0900               	iorlw	0
  3526   0019BE  A4D8               	btfss	status,2,c
  3527   0019C0  EFE4  F00C         	goto	u1391
  3528   0019C4  EFE6  F00C         	goto	u1390
  3529   0019C8                     u1391:
  3530   0019C8  EFB8  F00C         	goto	l1961
  3531   0019CC                     u1390:
  3532   0019CC  0012               	return		;funcret
  3533   0019CE                     __end_of_TxBufferedString:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function _putCharToTxBuf *****************
  3537 ;; Defined at:
  3538 ;;		line 53 in file "serial.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  byte            1    wreg     unsigned char 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  byte            1    4[COMRAM] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3556 ;;Total ram usage:        1 bytes
  3557 ;; Hardware stack levels used: 1
  3558 ;; Hardware stack levels required when called: 2
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_TxBufferedString
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text28
  3567   001B70                     __ptext28:
  3568                           	callstack 0
  3569   001B70                     _putCharToTxBuf:
  3570                           	callstack 27
  3571                           
  3572                           ;incstack = 0
  3573                           ;putCharToTxBuf@byte stored from wreg
  3574   001B70  6E05               	movwf	putCharToTxBuf@byte^0,c
  3575   001B72                     
  3576                           ;serial.c: 54:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  3577   001B72  0E3B               	movlw	59
  3578   001B74  6457               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3579   001B76  EFBF  F00D         	goto	u1111
  3580   001B7A  EFC1  F00D         	goto	u1110
  3581   001B7E                     u1111:
  3582   001B7E  EFC3  F00D         	goto	l1759
  3583   001B82                     u1110:
  3584   001B82  0E00               	movlw	0
  3585   001B84  6E57               	movwf	_TxBufWriteCnt^0,c	;volatile
  3586   001B86                     l1759:
  3587                           
  3588                           ;serial.c: 55:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3589   001B86  5057               	movf	_TxBufWriteCnt^0,w,c
  3590   001B88  0F60               	addlw	low _EUSART4TXbuf
  3591   001B8A  6ED9               	movwf	fsr2l,c
  3592   001B8C  6ADA               	clrf	fsr2h,c
  3593   001B8E  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  3594   001B92  2A57               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3595   001B94  0012               	return		;funcret
  3596   001B96                     __end_of_putCharToTxBuf:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function _Interrupts_init *****************
  3600 ;; Defined at:
  3601 ;;		line 9 in file "interrupts.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		None
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;Total ram usage:        0 bytes
  3620 ;; Hardware stack levels used: 1
  3621 ;; Hardware stack levels required when called: 2
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_main
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text29
  3630   001C8E                     __ptext29:
  3631                           	callstack 0
  3632   001C8E                     _Interrupts_init:
  3633                           	callstack 28
  3634   001C8E                     
  3635                           ;interrupts.c: 11:  TRISBbits.TRISB0=1;
  3636   001C8E  8082               	bsf	130,0,c	;volatile
  3637                           
  3638                           ;interrupts.c: 12:     ANSELBbits.ANSELB0=0;
  3639   001C90  010E               	movlb	14	; () banked
  3640   001C92  919A               	bcf	154,0,b	;volatile
  3641                           
  3642                           ;interrupts.c: 13:     PIE0bits.INT0IE=1;
  3643   001C94  8129               	bsf	41,0,b	;volatile
  3644                           
  3645                           ;interrupts.c: 17:     PIE4bits.RC4IE=1;
  3646   001C96  872D               	bsf	45,3,b	;volatile
  3647                           
  3648                           ;interrupts.c: 18:     INTCONbits.PEIE=1;
  3649   001C98  8CF2               	bsf	242,6,c	;volatile
  3650                           
  3651                           ;interrupts.c: 19:     INTCONbits.GIE=1;
  3652   001C9A  8EF2               	bsf	242,7,c	;volatile
  3653   001C9C                     
  3654                           ; BSR set to: 14
  3655   001C9C  0012               	return		;funcret
  3656   001C9E                     __end_of_Interrupts_init:
  3657                           	callstack 0
  3658                           
  3659 ;; *************** function _Buggy_init *****************
  3660 ;; Defined at:
  3661 ;;		line 7 in file "buggysetup.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		None
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3679 ;;Total ram usage:        0 bytes
  3680 ;; Hardware stack levels used: 1
  3681 ;; Hardware stack levels required when called: 2
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_main
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text30
  3690   001A4E                     __ptext30:
  3691                           	callstack 0
  3692   001A4E                     _Buggy_init:
  3693                           	callstack 28
  3694   001A4E                     
  3695                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
  3696   001A4E  9E7C               	bcf	124,7,c	;volatile
  3697                           
  3698                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
  3699   001A50  9E84               	bcf	132,7,c	;volatile
  3700                           
  3701                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
  3702   001A52  9680               	bcf	128,3,c	;volatile
  3703                           
  3704                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
  3705   001A54  9688               	bcf	136,3,c	;volatile
  3706                           
  3707                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
  3708   001A56  8486               	bsf	134,2,c	;volatile
  3709                           
  3710                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
  3711   001A58  010E               	movlb	14	; () banked
  3712   001A5A  95B4               	bcf	180,2,b	;volatile
  3713                           
  3714                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
  3715   001A5C  8686               	bsf	134,3,c	;volatile
  3716                           
  3717                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
  3718   001A5E  97B4               	bcf	180,3,b	;volatile
  3719                           
  3720                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
  3721   001A60  9280               	bcf	128,1,c	;volatile
  3722                           
  3723                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
  3724   001A62  9288               	bcf	136,1,c	;volatile
  3725                           
  3726                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
  3727   001A64  987C               	bcf	124,4,c	;volatile
  3728                           
  3729                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
  3730   001A66  9884               	bcf	132,4,c	;volatile
  3731                           
  3732                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
  3733   001A68  967C               	bcf	124,3,c	;volatile
  3734                           
  3735                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
  3736   001A6A  9684               	bcf	132,3,c	;volatile
  3737                           
  3738                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
  3739   001A6C  97A7               	bcf	167,3,b	;volatile
  3740                           
  3741                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
  3742   001A6E  9080               	bcf	128,0,c	;volatile
  3743                           
  3744                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
  3745   001A70  9088               	bcf	136,0,c	;volatile
  3746                           
  3747                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
  3748   001A72  907E               	bcf	126,0,c	;volatile
  3749                           
  3750                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
  3751   001A74  9086               	bcf	134,0,c	;volatile
  3752                           
  3753                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
  3754   001A76  907F               	bcf	127,0,c	;volatile
  3755                           
  3756                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
  3757   001A78  9087               	bcf	135,0,c	;volatile
  3758                           
  3759                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
  3760   001A7A  9E7D               	bcf	125,7,c	;volatile
  3761                           
  3762                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
  3763   001A7C  9E85               	bcf	133,7,c	;volatile
  3764                           
  3765                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
  3766   001A7E  9679               	bcf	121,3,c	;volatile
  3767                           
  3768                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
  3769   001A80  9681               	bcf	129,3,c	;volatile
  3770   001A82                     
  3771                           ; BSR set to: 14
  3772   001A82  0012               	return		;funcret
  3773   001A84                     __end_of_Buggy_init:
  3774                           	callstack 0
  3775                           
  3776 ;; *************** function _HighISR *****************
  3777 ;; Defined at:
  3778 ;;		line 27 in file "interrupts.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3794 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3795 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3796 ;;Total ram usage:        3 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 1
  3799 ;; This function calls:
  3800 ;;		_getCharFromTxBuf
  3801 ;;		_putCharToRxBuf
  3802 ;;		i2_isDataInTxBuf
  3803 ;; This function is called by:
  3804 ;;		Interrupt level 2
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	intcode
  3809   000008                     __pintcode:
  3810                           	callstack 0
  3811   000008                     _HighISR:
  3812                           	callstack 24
  3813                           
  3814                           ; BSR set to: 14
  3815                           ;incstack = 0
  3816   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3817   00000A  CFD9 F003          	movff	fsr2l,??_HighISR+1
  3818   00000E  CFDA F004          	movff	fsr2h,??_HighISR+2
  3819   000012                     
  3820                           ;interrupts.c: 31:     if(PIR0bits.INT0IF){
  3821   000012  010E               	movlb	14	; () banked
  3822   000014  A133               	btfss	51,0,b	;volatile
  3823   000016  EF0F  F000         	goto	i2u145_41
  3824   00001A  EF11  F000         	goto	i2u145_40
  3825   00001E                     i2u145_41:
  3826   00001E  EF25  F000         	goto	i2l2013
  3827   000022                     i2u145_40:
  3828   000022                     
  3829                           ; BSR set to: 14
  3830                           ;interrupts.c: 32:  LATHbits.LATH3 = !LATHbits.LATH3;
  3831   000022  A680               	btfss	128,3,c	;volatile
  3832   000024  EF16  F000         	goto	i2u146_41
  3833   000028  EF1A  F000         	goto	i2u146_40
  3834   00002C                     i2u146_41:
  3835   00002C  6A02               	clrf	??_HighISR^0,c
  3836   00002E  2A02               	incf	??_HighISR^0,f,c
  3837   000030  EF1B  F000         	goto	i2u147_48
  3838   000034                     i2u146_40:
  3839   000034  6A02               	clrf	??_HighISR^0,c
  3840   000036                     i2u147_48:
  3841   000036  4602               	rlncf	??_HighISR^0,f,c
  3842   000038  4602               	rlncf	??_HighISR^0,f,c
  3843   00003A  4602               	rlncf	??_HighISR^0,f,c
  3844   00003C  5080               	movf	128,w,c	;volatile
  3845   00003E  1802               	xorwf	??_HighISR^0,w,c
  3846   000040  0BF7               	andlw	-9
  3847   000042  1802               	xorwf	??_HighISR^0,w,c
  3848   000044  6E80               	movwf	128,c	;volatile
  3849   000046                     
  3850                           ;interrupts.c: 33:     PIR0bits.INT0IF = 0;
  3851   000046  010E               	movlb	14	; () banked
  3852   000048  9133               	bcf	51,0,b	;volatile
  3853   00004A                     i2l2013:
  3854                           
  3855                           ; BSR set to: 14
  3856                           ;interrupts.c: 36:     if(PIR4bits.RC4IF){
  3857   00004A  A737               	btfss	55,3,b	;volatile
  3858   00004C  EF2A  F000         	goto	i2u148_41
  3859   000050  EF2C  F000         	goto	i2u148_40
  3860   000054                     i2u148_41:
  3861   000054  EF2F  F000         	goto	i2l2017
  3862   000058                     i2u148_40:
  3863   000058                     
  3864                           ; BSR set to: 14
  3865                           ;interrupts.c: 38:     putCharToRxBuf(RC4REG);
  3866   000058  51E3               	movf	227,w,b	;volatile
  3867   00005A  ECCB  F00D         	call	_putCharToRxBuf
  3868   00005E                     i2l2017:
  3869                           
  3870                           ;interrupts.c: 42:     if(PIR4bits.TX4IF){
  3871   00005E  010E               	movlb	14	; () banked
  3872   000060  A537               	btfss	55,2,b	;volatile
  3873   000062  EF35  F000         	goto	i2u149_41
  3874   000066  EF37  F000         	goto	i2u149_40
  3875   00006A                     i2u149_41:
  3876   00006A  EF47  F000         	goto	i2l241
  3877   00006E                     i2u149_40:
  3878   00006E                     
  3879                           ; BSR set to: 14
  3880                           ;interrupts.c: 44:     TX4REG = getCharFromTxBuf();
  3881   00006E  ECDE  F00D         	call	_getCharFromTxBuf	;wreg free
  3882   000072  010E               	movlb	14	; () banked
  3883   000074  6FE4               	movwf	228,b	;volatile
  3884   000076                     
  3885                           ; BSR set to: 14
  3886                           ;interrupts.c: 45:     if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
  3887   000076  EC3B  F00E         	call	i2_isDataInTxBuf	;wreg free
  3888   00007A  0900               	iorlw	0
  3889   00007C  A4D8               	btfss	status,2,c
  3890   00007E  EF43  F000         	goto	i2u150_41
  3891   000082  EF45  F000         	goto	i2u150_40
  3892   000086                     i2u150_41:
  3893   000086  EF47  F000         	goto	i2l241
  3894   00008A                     i2u150_40:
  3895   00008A  010E               	movlb	14	; () banked
  3896   00008C  952D               	bcf	45,2,b	;volatile
  3897   00008E                     i2l241:
  3898   00008E  C004  FFDA         	movff	??_HighISR+2,fsr2h
  3899   000092  C003  FFD9         	movff	??_HighISR+1,fsr2l
  3900   000096  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3901   000098  0011               	retfie		f
  3902   00009A                     __end_of_HighISR:
  3903                           	callstack 0
  3904                           
  3905 ;; *************** function i2_isDataInTxBuf *****************
  3906 ;; Defined at:
  3907 ;;		line 61 in file "serial.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      unsigned char 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_HighISR
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text32
  3935   001C76                     __ptext32:
  3936                           	callstack 0
  3937   001C76                     i2_isDataInTxBuf:
  3938                           	callstack 24
  3939   001C76                     
  3940                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  3941   001C76  5056               	movf	_TxBufReadCnt^0,w,c	;volatile
  3942   001C78  1857               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3943   001C7A  A4D8               	btfss	status,2,c
  3944   001C7C  EF42  F00E         	goto	i2u65_41
  3945   001C80  EF45  F00E         	goto	i2u65_40
  3946   001C84                     i2u65_41:
  3947   001C84  0E01               	movlw	1
  3948   001C86  EF46  F00E         	goto	i2u66_40
  3949   001C8A                     i2u65_40:
  3950   001C8A  0E00               	movlw	0
  3951   001C8C                     i2u66_40:
  3952   001C8C  0012               	return		;funcret
  3953   001C8E                     __end_ofi2_isDataInTxBuf:
  3954                           	callstack 0
  3955                           
  3956 ;; *************** function _putCharToRxBuf *****************
  3957 ;; Defined at:
  3958 ;;		line 33 in file "serial.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  byte            1    wreg     unsigned char 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  byte            1    0[COMRAM] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;Total ram usage:        1 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_HighISR
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text33
  3986   001B96                     __ptext33:
  3987                           	callstack 0
  3988   001B96                     _putCharToRxBuf:
  3989                           	callstack 24
  3990                           
  3991                           ;incstack = 0
  3992                           ;putCharToRxBuf@byte stored from wreg
  3993   001B96  6E01               	movwf	putCharToRxBuf@byte^0,c
  3994   001B98                     
  3995                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3996   001B98  0E13               	movlw	19
  3997   001B9A  6459               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3998   001B9C  EFD2  F00D         	goto	i2u63_41
  3999   001BA0  EFD4  F00D         	goto	i2u63_40
  4000   001BA4                     i2u63_41:
  4001   001BA4  EFD6  F00D         	goto	i2l1477
  4002   001BA8                     i2u63_40:
  4003   001BA8  0E00               	movlw	0
  4004   001BAA  6E59               	movwf	_RxBufWriteCnt^0,c	;volatile
  4005   001BAC                     i2l1477:
  4006                           
  4007                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  4008   001BAC  5059               	movf	_RxBufWriteCnt^0,w,c
  4009   001BAE  0F3D               	addlw	low _EUSART4RXbuf
  4010   001BB0  6ED9               	movwf	fsr2l,c
  4011   001BB2  6ADA               	clrf	fsr2h,c
  4012   001BB4  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  4013   001BB8  2A59               	incf	_RxBufWriteCnt^0,f,c	;volatile
  4014   001BBA  0012               	return		;funcret
  4015   001BBC                     __end_of_putCharToRxBuf:
  4016                           	callstack 0
  4017                           
  4018 ;; *************** function _getCharFromTxBuf *****************
  4019 ;; Defined at:
  4020 ;;		line 47 in file "serial.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      unsigned char 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4038 ;;Total ram usage:        1 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; This function calls:
  4041 ;;		Nothing
  4042 ;; This function is called by:
  4043 ;;		_HighISR
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text34
  4048   001BBC                     __ptext34:
  4049                           	callstack 0
  4050   001BBC                     _getCharFromTxBuf:
  4051                           	callstack 24
  4052   001BBC                     
  4053                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  4054   001BBC  0E3B               	movlw	59
  4055   001BBE  6456               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  4056   001BC0  EFE4  F00D         	goto	i2u140_41
  4057   001BC4  EFE6  F00D         	goto	i2u140_40
  4058   001BC8                     i2u140_41:
  4059   001BC8  EFE8  F00D         	goto	i2l1971
  4060   001BCC                     i2u140_40:
  4061   001BCC  0E00               	movlw	0
  4062   001BCE  6E56               	movwf	_TxBufReadCnt^0,c	;volatile
  4063   001BD0                     i2l1971:
  4064                           
  4065                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
  4066   001BD0  2A56               	incf	_TxBufReadCnt^0,f,c	;volatile
  4067   001BD2  0456               	decf	_TxBufReadCnt^0,w,c	;volatile
  4068   001BD4  6E01               	movwf	??_getCharFromTxBuf^0,c
  4069   001BD6  5001               	movf	??_getCharFromTxBuf^0,w,c
  4070   001BD8  0F60               	addlw	low _EUSART4TXbuf
  4071   001BDA  6ED9               	movwf	fsr2l,c
  4072   001BDC  6ADA               	clrf	fsr2h,c
  4073   001BDE  50DF               	movf	indf2,w,c
  4074   001BE0  0012               	return		;funcret
  4075   001BE2                     __end_of_getCharFromTxBuf:
  4076                           	callstack 0
  4077                           
  4078                           	psect	rparam
  4079   000000                     
  4080                           	psect	temp
  4081   00005A                     btemp:
  4082                           	callstack 0
  4083   00005A                     	ds	1
  4084   000000                     int$flags	set	btemp
  4085   000000                     wtemp8	set	btemp+1
  4086   000000                     ttemp5	set	btemp+1
  4087   000000                     ttemp6	set	btemp+4
  4088   000000                     ttemp7	set	btemp+8
  4089                           
  4090                           	psect	config
  4091                           
  4092                           ;Config register CONFIG1L @ 0x300000
  4093                           ;	External Oscillator mode Selection bits
  4094                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4095                           ;	Power-up default value for COSC bits
  4096                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4097   300000                     	org	3145728
  4098   300000  AA                 	db	170
  4099                           
  4100                           ;Config register CONFIG1H @ 0x300001
  4101                           ;	unspecified, using default values
  4102                           ;	Clock Out Enable bit
  4103                           ;	CLKOUTEN = 0x1, unprogrammed default
  4104                           ;	Clock Switch Enable bit
  4105                           ;	CSWEN = 0x1, unprogrammed default
  4106                           ;	Fail-Safe Clock Monitor Enable bit
  4107                           ;	FCMEN = 0x1, unprogrammed default
  4108   300001                     	org	3145729
  4109   300001  FF                 	db	255
  4110                           
  4111                           ;Config register CONFIG3L @ 0x300004
  4112                           ;	WDT Period Select bits
  4113                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4114                           ;	WDT operating mode
  4115                           ;	WDTE = OFF, WDT Disabled
  4116   300004                     	org	3145732
  4117   300004  9F                 	db	159
  4118                           
  4119                           ;Config register CONFIG3H @ 0x300005
  4120                           ;	unspecified, using default values
  4121                           ;	WDT Window Select bits
  4122                           ;	WDTCWS = 0x7, unprogrammed default
  4123                           ;	WDT input clock selector
  4124                           ;	WDTCCS = 0x7, unprogrammed default
  4125   300005                     	org	3145733
  4126   300005  FF                 	db	255
  4127                           tosu	equ	0xFFF
  4128                           tosh	equ	0xFFE
  4129                           tosl	equ	0xFFD
  4130                           stkptr	equ	0xFFC
  4131                           pclatu	equ	0xFFB
  4132                           pclath	equ	0xFFA
  4133                           pcl	equ	0xFF9
  4134                           tblptru	equ	0xFF8
  4135                           tblptrh	equ	0xFF7
  4136                           tblptrl	equ	0xFF6
  4137                           tablat	equ	0xFF5
  4138                           prodh	equ	0xFF4
  4139                           prodl	equ	0xFF3
  4140                           indf0	equ	0xFEF
  4141                           postinc0	equ	0xFEE
  4142                           postdec0	equ	0xFED
  4143                           preinc0	equ	0xFEC
  4144                           plusw0	equ	0xFEB
  4145                           fsr0h	equ	0xFEA
  4146                           fsr0l	equ	0xFE9
  4147                           wreg	equ	0xFE8
  4148                           indf1	equ	0xFE7
  4149                           postinc1	equ	0xFE6
  4150                           postdec1	equ	0xFE5
  4151                           preinc1	equ	0xFE4
  4152                           plusw1	equ	0xFE3
  4153                           fsr1h	equ	0xFE2
  4154                           fsr1l	equ	0xFE1
  4155                           bsr	equ	0xFE0
  4156                           indf2	equ	0xFDF
  4157                           postinc2	equ	0xFDE
  4158                           postdec2	equ	0xFDD
  4159                           preinc2	equ	0xFDC
  4160                           plusw2	equ	0xFDB
  4161                           fsr2h	equ	0xFDA
  4162                           fsr2l	equ	0xFD9
  4163                           status	equ	0xFD8

Data Sizes:
    Strings     42
    Constant    0
    Data        0
    BSS         161
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      89
    BANK0           160     56     148
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    color_normalise@RGBC_n	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_n(BANK0[8]), 

    color_read@RGBC	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC(BANK0[8]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S1830$buffer	PTR unsigned char  size(2) Largest target is 0

    S1830$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 42
		 -> STR_1(CODE[42]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK0[40]), 

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), STR_2(CODE[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 42
		 -> STR_1(CODE[42]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 42
		 -> STR_1(CODE[42]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 42
		 -> STR_1(CODE[42]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___aldiv
    ___aldiv->___lmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf
    _HighISR->_putCharToRxBuf

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                59    59      0    7404
                                             58 COMRAM     2     2      0
                                              0 BANK0     56    56      0
                         _Buggy_init
                    _Interrupts_init
                   _TxBufferedString
                   _color_click_init
                       _color_detect
                    _color_normalise
                         _color_read
                         _initUSART4
                          _sendTxBuf
                            _sprintf
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    15     16    3287
                                             29 COMRAM    29    13     16
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2936
                                             25 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    2586
                                             14 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                             10 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read                                           8     7      1     407
                                              8 COMRAM     8     7      1
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                     11     2      9    1965
                                             30 COMRAM    11     2      9
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             16 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_detect                                         9     1      8     427
                                              4 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     219
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              3     3      0      15
                                              1 COMRAM     3     3      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (7) i2_isDataInTxBuf                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_detect
   _color_normalise
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _color_read
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initUSART4
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      94       5       92.5%
BITBIGSFRlllhhh     8F      0       0      37        0.0%
BITBIGSFRhhl        63      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      59       1       94.7%
BITBIGSFRllllll     2A      0       0      45        0.0%
BITBIGSFRllllll     29      0       0      43        0.0%
BITBIGSFRllllll     26      0       0      51        0.0%
BITBIGSFRlllllh     20      0       0      40        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      44        0.0%
BITBIGSFRllllll      C      0       0      42        0.0%
BITBIGSFRlllllh      C      0       0      41        0.0%
BITBIGSFRllllll      B      0       0      49        0.0%
BITBIGSFRlllhl       8      0       0      38        0.0%
BITBIGSFRllllll      6      0       0      50        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhlhh        5      0       0      34        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllllll      3      0       0      48        0.0%
BITBIGSFRllh         2      0       0      36        0.0%
BITBIGSFRllllh       1      0       0      39        0.0%
BITBIGSFRhll         1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115      52        0.0%
DATA                 0      0     115       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 05 14:12:22 2024

                  _white_Light 1BE2                             l50 15AA                             l80 1900  
                           l83 1C24                             l91 1000                             l94 1476  
                           l86 1BFE                             l88 1C04                             l98 1332  
                 ___awdiv@sign 000A              ??_Interrupts_init 0005                            l112 1334  
                          l106 1332                            l300 19CC                            l142 1B48  
                          l151 1CB2                            l232 1C9C                            l160 1A0E  
                          l304 1C5C                            l145 1B6E                            l154 1CBC  
                          l139 1B46                            l148 1CC6                            l157 1CA8  
                          l318 195A                            l191 1A82                            l319 196A  
                          l272 1C42                            l291 1B94                            l294 1C74  
                          l551 17E6                            l386 1582                            l538 1736  
                          l985 1AB6                            u800 1686                            u801 1682  
                          u810 16A0                            u811 169C                            u820 16C6  
                          u900 17B2                            u821 16C2                            u901 17AE  
                          u830 16E4                            u910 17D6                            u831 16E0  
                          u911 17D2                            u840 1700                            u920 17F8  
                          u841 16FC                            u921 17F4                            u850 1726  
                          u930 1808                            u851 1722                            u931 1804  
                          u780 1B58                            u860 174A                            u940 182E  
                          u781 1B54                            u861 1746                            u941 182A  
                          u790 1B6E                            u870 1764                            u950 1860  
                          u791 1B6A                            u871 1760                            u951 185C  
                          u880 177E                            u960 1AC6                            u881 177A  
                          u961 1AC2                            u890 179C                            u970 1024  
                          u891 1798                            u971 1020                            u980 1062  
                          u981 105E                            u990 107E                            u991 107A  
                          _abs 1AB8                   ___awmod@sign 000A                  ?_color_detect 0005  
                          wreg 0FE8                _color_normalise 1336                           l1023 11B8  
                         l1033 1AD2                           l2001 1642                           l2003 1646  
                         ?_abs 000B                           l1036 1AEA                           l1029 1A4C  
                         l2005 1656                           l1048 1890                           l1059 1CC8  
                         l1611 1756                           l1603 1738                           l1621 178E  
                         l1613 1764                           l1605 173C                           l1701 1146  
                         l1623 179C                           l1631 17C6                           l1615 176C  
                         l1607 174A                           l1703 1158                           l1721 1B28  
                         l1801 1530                           l1561 1678                           l1633 17D6  
                         l1625 17B2                           l1617 177E                           l1609 1752  
                         l1641 17F8                           l1705 1172                           l1713 1196  
                         l1723 1B2E                           l1555 1B48                           l1731 1C08  
                         l1811 1562                           l1803 1540                           l1571 16A8  
                         l1563 1686                           l1635 17DE                           l1627 17BA  
                         l1619 1786                           l1643 1808                           l1707 1174  
                         l1725 1B30                           l1557 1B58                           l1661 1CA0  
                         l1901 11DC                           l1813 1572                           l1805 1542  
                         l1741 19DC                           l1733 1CAA                           l1581 16D6  
                         l1573 16AC                           l1565 168E                           l1629 17C0  
                         l1653 1AB8                           l1645 1812                           l1709 118A  
                         l1821 1A28                           l1727 1B32                           l1719 1B1E  
                         l1663 1CA4                           l1831 1896                           l1911 122E  
                         l1903 11F2                           l1807 154C                           l1743 19E4  
                         l1735 1CAE                           l1751 1C5E                           l1591 170A  
                         l1583 16E4                           l1575 16B4                           l1567 1692  
                         l1559 1674                           l1655 1AC6                           l1647 182E  
                         l1639 17E8                           l1671 1024                           l1823 1A44  
                         l1761 1B92                           l1729 1B34                           l1657 1CBE  
                         l1665 1CB4                           l1841 18CE                           l1833 18A0  
                         l1921 1280                           l1913 1244                           l1905 11FA  
                         l1809 1552                           l1745 1A0A                           l1737 19D0  
                         l1593 1710                           l1585 16EA                           l1577 16C6  
                         l1569 16A0                           l1649 1860                           l1681 1062  
                         l1673 102C                           l1817 1A10                           l1827 1A4E  
                         l1755 1B72                           l1659 1CC2                           l1667 1CB8  
                         l1843 18D8                           l1835 18B0                           l1931 12E0  
                         l1923 1296                           l1915 124C                           l1907 1210  
                         l1771 193A                           l1763 1902                           l1747 1A0C  
                         l1739 19D4                           l1851 1C26                           l1587 1700  
                         l1579 16CE                           l1595 1716                           l1691 10E8  
                         l1683 107E                           l1675 1038                           l1819 1A18  
                         l1757 1B82                           l1845 18E2                           l1837 18BA  
                         l1829 1892                           l1933 12E8                           l1925 12AC  
                         l1917 1262                           l1909 1218                           l1781 149E  
                         l1773 1478                           l1765 1912                           l1861 1C40  
                         l1853 1C30                           l1597 1726                           l1589 1708  
                         l1693 1104                           l1685 1096                           l1677 103C  
                         l1669 1002                           l1863 1C8E                           l1759 1B86  
                         l1847 18EC                           l1839 18C4                           l1935 12FE  
                         l1927 12B4                           l1919 1278                           l1791 14E6  
                         l1783 14AC                           l1775 147C                           l1767 1920  
                         l1871 0E46                           l1855 1C32                           l1599 172E  
                         l1695 1116                           l1687 10A0                           l1679 1046  
                         l1951 1AAC                           l1943 1A84                           l1961 1970  
                         l1849 18F6                           l1937 1314                           l1929 12CA  
                         l1793 14EE                           l1785 14BC                           l1777 148A  
                         l1769 1930                           l1881 0F46                           l1873 0E5E  
                         l1857 1C3C                           l1697 1126                           l1689 10B8  
                         l1945 1A8C                           l1865 1BE4                           l1963 1996  
                         l1939 132A                           l1795 14FA                           l1787 14C0  
                         l1779 149A                           l1891 13AA                           l1883 0FA2  
                         l1875 0EB2                           l1859 1C3E                           l1955 1C44  
                         l1699 1136                           l1947 1A94                           l1867 1BF4  
                         l1965 199A                           l1797 1508                           l1789 14D0  
                         l1893 1410                           l1885 0FBE                           l1877 0ECE  
                         l1869 0E2C                           l1957 1C58                           l1949 1A9C  
                         l1981 1590                           l1959 196C                           l1895 11BA  
                         l1799 1512                           l1887 1336                           l1879 0F2A  
                         l1991 15C0                           l1983 1594                           l1975 1584  
                         l1897 11BE                           l1889 1348                           l1993 15DA  
                         l1985 15A0                           l1977 1588                           l1899 11D4  
                         l1995 15F0                           l1987 15A4                           l1979 158C  
                         l1997 1634                           l1989 15B8                           l1999 1638  
                         STR_1 0E01                           STR_2 0E2A                           u1000 10B4  
                         u1001 10AE                           u1010 10B6                           u1100 1C74  
                         u1020 1116                           u1021 1112                           u1110 1B82  
                         u1030 1126                           u1111 1B7E                           u1031 1122  
                         u1120 1920                           u1040 1136                           u1200 1A44  
                         u1121 191C                           u1041 1132                           u1201 1A40  
                         u1130 195A                           u1050 1146                           u1210 1BF4  
                         u1131 1956                           u1051 1142                           u1211 1BF0  
                         u1300 12AC                           u1220 11D4                           u1140 148A  
                         u1060 1186                           u1301 12A8                           u1221 11D0  
                         u1141 1486                           u1061 1182                           u1310 12CA  
                         u1230 11F2                           u1150 14AC                           u1070 19F8  
                         u1311 12C6                           u1231 11EE                           u1151 14A8  
                         u1071 19F0                           u1320 12E0                           u1240 1210  
                         u1160 14E6                           u1321 12DC                           u1241 120C  
                         u1161 14E2                           u1330 12FE                           u1250 122E  
                         u1170 1508                           u1090 1C72                           u1331 12FA  
                         u1251 122A                           u1171 1504                           u1091 1C6C  
                         u1411 159A                           u1340 1314                           u1260 1244  
                         u1180 1530                           u1420 15B8                           u1341 1310  
                         u1261 1240                           u1181 152C                           u1421 15B4  
                         u1350 132A                           u1270 1262                           u1190 1562  
                         u1351 1326                           u1271 125E                           u1191 155E  
                         u1431 15CA                           u1280 1278                           u1088 19FA  
                         u1360 1C58                   _BAUD4CONbits 0EE9                           u1281 1274  
                         u1361 1C54                           u1441 15E4                           u1370 1992  
                         u1290 1296                           u1291 1292                           u1380 19BC  
                         u1517 1660                           u1390 19CC                           u1391 19C8  
                         u1527 18A6                           u1377 1988                           u1387 19B2  
                         abs@a 000B                           _dbuf 009C                           _main 1584  
                         _prec 0053                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005A                           start 009A                __end_of_HighISR 009A  
                 ___param_bank 0000                          ??_abs 000D                __end_of___aldiv 1584  
                        ?_main 0001                __end_of___awdiv 1738                __end_of___awmod 17E8  
              ___awdiv@divisor 0007                          i2l241 008E                          i2l280 1BBA  
                        i2l294 1C8C                          i2l287 1BE0                ___awdiv@counter 0009  
               ??_color_detect 000D                   vfpfcnvrt@fmt 0010            ___lmul@multiplicand 0009  
   __end_of_I2C_2_Master_Start 1CC8     __end_of_I2C_2_Master_Write 1CAA                          _flags 0055  
                   _Buggy_init 1A4E                          _fputc 17E8                          _width 0051  
                        _putch 1CC8                          tablat 0FF5                          plusw0 0FEB  
                        plusw2 0FDB                          ttemp5 005B                          ttemp6 005E  
                        ttemp7 0062                          status 0FD8                          wtemp8 005B  
              __end_of_sprintf 1AB8              color_detect@color 000D          _I2C_2_Master_RepStart 1CAA  
           putCharToRxBuf@byte 0001                __initialization 1AEC                   __end_of_main 1674  
              i2_isDataInTxBuf 1C76             putCharToTxBuf@byte 0005                         ??_main 003B  
                __activetblptr 0002        __end_of_color_normalise 1478                         ?_fputc 0005  
             ___awdiv@dividend 0005                         ?_putch 0001                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RD5PPS 0E6F                         i2l2011 0046  
                       _RD6PPS 0E70                         i2l2021 0076                         i2l2013 004A  
                       i2l2023 008A                         i2l2015 0058                         i2l2007 0012  
                       i2l2017 005E                         i2l2009 0022                         i2l2019 006E  
                       i2l1473 1B98                         i2l1475 1BA8                         i2l1477 1BAC  
                       i2l1479 1BB8                         i2l1489 1C76                         i2l1971 1BD0  
                       i2l1967 1BBC                         i2l1969 1BCC                  vfpfcnvrt@done 0013  
                    ??_HighISR 0002       __end_of_color_click_init 1902                         _RX4PPS 0E15  
                       _TX4REG 0EE4                   vfprintf@cfmt 001D               _getCharFromTxBuf 1BBC  
                       ___lmul 1902                      ??___aldiv 0019                      ??___awdiv 0009  
                    ??___awmod 0009             color_detect@RGBC_n 0005                         clear_0 1AF2  
                       clear_1 1AFE                         clear_2 1B0A               ___awdiv@quotient 000B  
              ___awmod@divisor 0007                         isa$std 0001                ___awmod@counter 0009  
                       fputc@c 0005              ?_TxBufferedString 0006                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
           ??_TxBufferedString 0008                         putch@c 0001               __end_of_vfprintf 1A4E  
                  ?_Buggy_init 0001                      ??_sprintf 002E          __end_of_isDataInTxBuf 1C76  
                   __accesstop 0060        __end_of__initialization 1B10         ?_I2C_2_Master_RepStart 0001  
      __end_ofi2_isDataInTxBuf 1C8E                  ___rparam_used 0001           __end_of_color_detect 1336  
              _Interrupts_init 1C8E                 __pcstackCOMRAM 0001                   ?_white_Light 0001  
                __end_of_fputc 1892                  __end_of_putch 1CCA               ?_color_normalise 001F  
                      ??_fputc 0008                        ??_putch 0005                     __pbssBANK0 0060  
                   __pbssBANK1 0100              _color_writetoaddr 1C06             ?_color_writetoaddr 0007  
                      ?___lmul 0005                 ___lmul@product 000D            ??_color_writetoaddr 0008  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5                        i2u63_40 1BA8  
                      i2u63_41 1BA4                        i2u65_40 1C8A                        i2u65_41 1C84  
                      i2u66_40 1C8C                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
                   _color_read 0E2C        __end_of_Interrupts_init 1C9E         color_writetoaddr@value 0007  
                      _HighISR 0008      __end_of_color_writetoaddr 1C26               ?i2_isDataInTxBuf 0001  
           _I2C_2_Master_Start 1CBE                     _initUSART4 1C26             _I2C_2_Master_Write 1C9E  
                      __Hparam 0000                        __Lparam 0000                        ___aldiv 1478  
                      ___awdiv 1674                        ___awmod 1738            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 001A                   __psmallconst 0E00  
                      __pcinit 1AEC                        __ramtop 0E00                        __ptext0 1584  
                      __ptext1 1BE2                        __ptext2 1A84                        __ptext3 1A10  
                      __ptext4 1002                        __ptext5 17E8                        __ptext6 1CC8  
                      __ptext7 1AB8                        __ptext8 1738                        __ptext9 1674  
             ___awmod@dividend 0005               ___aldiv@dividend 0011                  _RxBufWriteCnt 0059  
     __end_of_getCharFromTxBuf 1BE2                        main@buf 00BC                        _sprintf 1A84  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006          color_normalise@RGBC_n 0027  
         end_of_initialization 1B10              __end_of_sendTxBuf 1C5E                        fputc@fp 0007  
                __Lmediumconst 0000              ?_color_click_init 0001             ??_color_click_init 0009  
            __end_of_vfpfcnvrt 11BA               ___aldiv@quotient 001B                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0015                     main@F14508 0100                     ??_vfprintf 001D  
                    _PORTFbits 0F8E                     main@RGBC_n 00E4                   _color_detect 11BA  
                    _TRISAbits 0F81                      _TRISBbits 0F82                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88               white_Light@state 0005                   ??_Buggy_init 0005  
                  ?_color_read 0009       color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006  
             ?_Interrupts_init 0001                   _EUSART4RXbuf 003D                   _EUSART4TXbuf 0060  
                  ?_initUSART4 0001                 color_read@RGBC 0009                 __end_of___lmul 196C  
                  vfpfcnvrt@ap 0011                    vfpfcnvrt@cp 0014                    vfpfcnvrt@fp 000F  
           __end_of_Buggy_init 1A84            start_initialization 1AEC                    __end_of_abs 1AEC  
                _TxBufWriteCnt 0057                    vfprintf@fmt 001B                       ??___lmul 000D  
               _putCharToRxBuf 1B96                 _putCharToTxBuf 1B70            color_normalise@RGBC 001F  
                  __pbssCOMRAM 003D                  __pcstackBANK0 00BC                       ?_HighISR 0001  
       __end_of_putCharToRxBuf 1BBC         __end_of_putCharToTxBuf 1B96                      __pintcode 0008  
                     ?___aldiv 0011                       ?___awdiv 0005                       ?___awmod 0005  
       TxBufferedString@string 0006           I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008  
                  __smallconst 0E00              _I2C_2_Master_Idle 1B48              _I2C_2_Master_Init 1B1E  
            _I2C_2_Master_Read 19CE              _I2C_2_Master_Stop 1CB4                   _RxBufReadCnt 0058  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                       ?_sprintf 001E              ?_getCharFromTxBuf 0001  
           ??_getCharFromTxBuf 0001                ___aldiv@divisor 0015            ??_I2C_2_Master_Idle 0005  
              ___aldiv@counter 0019            ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0006                  _isDataInTxBuf 1C5E  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
             _TxBufferedString 196C                       _LATGbits 0F7F                       _LATHbits 0F80  
                    _sendTxBuf 1C44                       _PIE0bits 0E29                       _PIE4bits 0E2D  
                     i2u140_40 1BCC                       i2u140_41 1BC8                       i2u150_40 008A  
                     i2u150_41 0086                       i2u145_40 0022                       i2u145_41 001E  
                     i2u146_40 0034                       i2u146_41 002C                       i2u148_40 0058  
                     i2u147_48 0036                       i2u148_41 0054                       i2u149_40 006E  
                     i2u149_41 006A                       _PIR0bits 0E33                       _PIR4bits 0E37  
              ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001                       _SSP2CON2 0EDA  
                     _SSP2STAT 0ED8                      _vfpfcnvrt 1002      __end_of_I2C_2_Master_Idle 1B70  
    __end_of_I2C_2_Master_Init 1B48      __end_of_I2C_2_Master_Read 1A10      __end_of_I2C_2_Master_Stop 1CBE  
  I2C_2_Master_Write@data_byte 0006                   _TxBufReadCnt 0056                     vfpfcnvrt@c 0019  
                 ??_color_read 000A              ___lmul@multiplier 0005                 ?_isDataInTxBuf 0001  
__end_of_I2C_2_Master_RepStart 1CB4                     ?_sendTxBuf 0001                   ??_initUSART4 0005  
                     __Hrparam 0000              ??_color_normalise 0028                     vfprintf@ap 001C  
                     __Lrparam 0000                     vfprintf@fp 001A                  ??_white_Light 0005  
                   ?_vfpfcnvrt 000F             __end_of_color_read 1002                     _ANSELBbits 0E9A  
                   _ANSELDbits 0EA7                     _ANSELFbits 0EB4                     sprintf@fmt 001F  
           __end_of_initUSART4 1C44                       __ptext10 1C44                       __ptext11 1C5E  
                     __ptext20 1892                       __ptext12 1C26                       __ptext21 1C06  
                     __ptext13 0E2C                       __ptext30 1A4E                       __ptext22 1C9E  
                     __ptext14 1CAA                       __ptext23 1CB4                       __ptext15 19CE  
                     __ptext32 1C76                       __ptext24 1CBE                       __ptext16 1336  
                     __ptext33 1B96                       __ptext25 1B48                       __ptext17 1902  
                     __ptext34 1BBC                       __ptext26 1B1E                       __ptext18 1478  
                     __ptext27 196C                       __ptext19 11BA                       __ptext28 1B70  
                     __ptext29 1C8E                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       main@RGBC 00EC  
                     int$flags 005A                       _vfprintf 1A10            __end_of_white_Light 1C06  
                   _INTCONbits 0FF2              ??i2_isDataInTxBuf 0001                ??_isDataInTxBuf 0005  
                     intlevel2 0000                      sprintf@ap 002E                    ??_sendTxBuf 0005  
                  ??_vfpfcnvrt 0012               _color_click_init 1892       __end_of_TxBufferedString 19CE  
                     sprintf@f 002F                       sprintf@s 001E                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C                   ___aldiv@sign 001A                     _TX4STAbits 0EE8  
             ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005  
