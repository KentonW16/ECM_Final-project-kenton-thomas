

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 05 16:42:30 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Generated 21/07/2023 GMT
    57                           ; 
    58                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F67K40 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     _RC4STAbits	set	3815
    91   000000                     _SP4BRGH	set	3814
    92   000000                     _SP4BRGL	set	3813
    93   000000                     _TX4STAbits	set	3816
    94   000000                     _BAUD4CONbits	set	3817
    95   000000                     _TX4REG	set	3812
    96   000000                     _TRISEbits	set	3973
    97   000000                     _TRISGbits	set	3975
    98   000000                     _LATFbits	set	3966
    99   000000                     _TRISFbits	set	3974
   100   000000                     _TRISHbits	set	3976
   101   000000                     _LATEbits	set	3965
   102   000000                     _LATGbits	set	3967
   103   000000                     _SSP2CON2bits	set	3802
   104   000000                     _RX4PPS	set	3605
   105   000000                     _SSP2CLKPPS	set	3612
   106   000000                     _SSP2DATPPS	set	3613
   107   000000                     _ANSELDbits	set	3751
   108   000000                     _SSP2ADD	set	3798
   109   000000                     _SSP2CON1bits	set	3801
   110   000000                     _LATAbits	set	3961
   111   000000                     _LATDbits	set	3964
   112   000000                     _LATHbits	set	3968
   113   000000                     _TRISBbits	set	3970
   114   000000                     _TRISAbits	set	3969
   115   000000                     _TRISDbits	set	3972
   116   000000                     _PORTFbits	set	3982
   117   000000                     _INTCONbits	set	4082
   118   000000                     _RC4REG	set	3811
   119   000000                     _SSP2CON2	set	3802
   120   000000                     _SSP2STAT	set	3800
   121   000000                     _ANSELFbits	set	3764
   122   000000                     _SSP2BUF	set	3797
   123   000000                     _IPR0bits	set	3615
   124   000000                     _PIE0bits	set	3625
   125   000000                     _RD5PPS	set	3695
   126   000000                     _ANSELBbits	set	3738
   127   000000                     _RD6PPS	set	3696
   128   000000                     _PIE4bits	set	3629
   129   000000                     _PIR0bits	set	3635
   130   000000                     _PIR4bits	set	3639
   131   000000                     _RC0PPS	set	3682
   132                           
   133                           	psect	smallconst
   134   000E00                     __psmallconst:
   135                           	callstack 0
   136   000E00  00                 	db	0
   137   000E01                     STR_1:
   138   000E01  72                 	db	114	;'r'
   139   000E02  3D                 	db	61	;'='
   140   000E03  25                 	db	37
   141   000E04  64                 	db	100	;'d'
   142   000E05  20                 	db	32
   143   000E06  67                 	db	103	;'g'
   144   000E07  3D                 	db	61	;'='
   145   000E08  25                 	db	37
   146   000E09  64                 	db	100	;'d'
   147   000E0A  20                 	db	32
   148   000E0B  62                 	db	98	;'b'
   149   000E0C  3D                 	db	61	;'='
   150   000E0D  25                 	db	37
   151   000E0E  64                 	db	100	;'d'
   152   000E0F  20                 	db	32
   153   000E10  63                 	db	99	;'c'
   154   000E11  3D                 	db	61	;'='
   155   000E12  25                 	db	37
   156   000E13  64                 	db	100	;'d'
   157   000E14  20                 	db	32
   158   000E15  20                 	db	32
   159   000E16  20                 	db	32
   160   000E17  6E                 	db	110	;'n'
   161   000E18  3A                 	db	58	;':'
   162   000E19  20                 	db	32
   163   000E1A  72                 	db	114	;'r'
   164   000E1B  3D                 	db	61	;'='
   165   000E1C  25                 	db	37
   166   000E1D  64                 	db	100	;'d'
   167   000E1E  20                 	db	32
   168   000E1F  67                 	db	103	;'g'
   169   000E20  3D                 	db	61	;'='
   170   000E21  25                 	db	37
   171   000E22  64                 	db	100	;'d'
   172   000E23  20                 	db	32
   173   000E24  62                 	db	98	;'b'
   174   000E25  3D                 	db	61	;'='
   175   000E26  25                 	db	37
   176   000E27  64                 	db	100	;'d'
   177   000E28  20                 	db	32
   178   000E29  20                 	db	32
   179   000E2A  63                 	db	99	;'c'
   180   000E2B  6F                 	db	111	;'o'
   181   000E2C  6C                 	db	108	;'l'
   182   000E2D  6F                 	db	111	;'o'
   183   000E2E  72                 	db	114	;'r'
   184   000E2F  3A                 	db	58	;':'
   185   000E30  20                 	db	32
   186   000E31  25                 	db	37
   187   000E32  64                 	db	100	;'d'
   188   000E33  20                 	db	32
   189   000E34  0D                 	db	13
   190   000E35  0A                 	db	10
   191   000E36  00                 	db	0
   192   000E37  00                 	db	0	; dummy byte at the end
   193   000000                     
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197   0019F4                     __pcinit:
   198                           	callstack 0
   199   0019F4                     start_initialization:
   200                           	callstack 0
   201   0019F4                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Clear objects allocated to BANK1 (40 bytes)
   205   0019F4  EE01  F000         	lfsr	0,__pbssBANK1
   206   0019F8  0E28               	movlw	40
   207   0019FA                     clear_0:
   208   0019FA  6AEE               	clrf	postinc0,c
   209   0019FC  06E8               	decf	wreg,f,c
   210   0019FE  E1FD               	bnz	clear_0
   211                           
   212                           ; Clear objects allocated to BANK0 (92 bytes)
   213   001A00  EE00  F060         	lfsr	0,__pbssBANK0
   214   001A04  0E5C               	movlw	92
   215   001A06                     clear_1:
   216   001A06  6AEE               	clrf	postinc0,c
   217   001A08  06E8               	decf	wreg,f,c
   218   001A0A  E1FD               	bnz	clear_1
   219                           
   220                           ; Clear objects allocated to COMRAM (29 bytes)
   221   001A0C  EE00  F03D         	lfsr	0,__pbssCOMRAM
   222   001A10  0E1D               	movlw	29
   223   001A12                     clear_2:
   224   001A12  6AEE               	clrf	postinc0,c
   225   001A14  06E8               	decf	wreg,f,c
   226   001A16  E1FD               	bnz	clear_2
   227   001A18                     end_of_initialization:
   228                           	callstack 0
   229   001A18                     __end_of__initialization:
   230                           	callstack 0
   231   001A18  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   232   001A1A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   233   001A1C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   234   001A1E  6EF8               	movwf	tblptru,c
   235   001A20  0100               	movlb	0
   236   001A22  EF0A  F00A         	goto	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMRAM
   239   00003D                     __pbssCOMRAM:
   240                           	callstack 0
   241   00003D                     _EUSART4RXbuf:
   242                           	callstack 0
   243   00003D                     	ds	20
   244   000051                     _width:
   245                           	callstack 0
   246   000051                     	ds	2
   247   000053                     _prec:
   248                           	callstack 0
   249   000053                     	ds	2
   250   000055                     _flags:
   251                           	callstack 0
   252   000055                     	ds	1
   253   000056                     _TxBufReadCnt:
   254                           	callstack 0
   255   000056                     	ds	1
   256   000057                     _TxBufWriteCnt:
   257                           	callstack 0
   258   000057                     	ds	1
   259   000058                     _RxBufReadCnt:
   260                           	callstack 0
   261   000058                     	ds	1
   262   000059                     _RxBufWriteCnt:
   263                           	callstack 0
   264   000059                     	ds	1
   265                           
   266                           	psect	bssBANK0
   267   000060                     __pbssBANK0:
   268                           	callstack 0
   269   000060                     _EUSART4TXbuf:
   270                           	callstack 0
   271   000060                     	ds	60
   272   00009C                     _dbuf:
   273                           	callstack 0
   274   00009C                     	ds	32
   275                           
   276                           	psect	bssBANK1
   277   000100                     __pbssBANK1:
   278                           	callstack 0
   279   000100                     	ds	40
   280                           
   281                           	psect	cstackBANK0
   282   0000BC                     __pcstackBANK0:
   283                           	callstack 0
   284   0000BC                     ??_main:
   285                           
   286                           ; 1 bytes @ 0x0
   287   0000BC                     	ds	2
   288   0000BE                     main@buf:
   289                           	callstack 0
   290                           
   291                           ; 40 bytes @ 0x2
   292   0000BE                     	ds	40
   293   0000E6                     main@color:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0x2A
   297   0000E6                     	ds	1
   298   0000E7                     main@RGBC_n:
   299                           	callstack 0
   300                           
   301                           ; 8 bytes @ 0x2B
   302   0000E7                     	ds	8
   303   0000EF                     main@RGBC:
   304                           	callstack 0
   305                           
   306                           ; 8 bytes @ 0x33
   307   0000EF                     	ds	8
   308                           
   309                           	psect	cstackCOMRAM
   310   000001                     __pcstackCOMRAM:
   311                           	callstack 0
   312   000001                     ??_getCharFromTxBuf:
   313   000001                     ??i2_I2C_2_Master_Idle:
   314   000001                     putCharToRxBuf@byte:
   315                           	callstack 0
   316   000001                     
   317                           ; 1 bytes @ 0x0
   318   000001                     	ds	1
   319   000002                     i2I2C_2_Master_Write@data_byte:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x1
   323   000002                     	ds	1
   324   000003                     ??_HighISR:
   325                           
   326                           ; 1 bytes @ 0x2
   327   000003                     	ds	2
   328   000005                     ??_I2C_2_Master_Idle:
   329   000005                     ?___awdiv:
   330                           	callstack 0
   331   000005                     ?___awmod:
   332                           	callstack 0
   333   000005                     ?___lmul:
   334                           	callstack 0
   335   000005                     white_Light@state:
   336                           	callstack 0
   337   000005                     putCharToTxBuf@byte:
   338                           	callstack 0
   339   000005                     ___awdiv@dividend:
   340                           	callstack 0
   341   000005                     ___awmod@dividend:
   342                           	callstack 0
   343   000005                     fputc@c:
   344                           	callstack 0
   345   000005                     ___lmul@multiplier:
   346                           	callstack 0
   347   000005                     color_detect@RGBC_n:
   348                           	callstack 0
   349                           
   350                           ; 8 bytes @ 0x4
   351   000005                     	ds	1
   352   000006                     ??_I2C_2_Master_Read:
   353   000006                     I2C_2_Master_Write@data_byte:
   354                           	callstack 0
   355   000006                     TxBufferedString@string:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x5
   359   000006                     	ds	1
   360   000007                     color_writetoaddr@value:
   361                           	callstack 0
   362   000007                     I2C_2_Master_Read@ack:
   363                           	callstack 0
   364   000007                     fputc@fp:
   365                           	callstack 0
   366   000007                     ___awdiv@divisor:
   367                           	callstack 0
   368   000007                     ___awmod@divisor:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x6
   372   000007                     	ds	1
   373   000008                     ??_fputc:
   374   000008                     color_writetoaddr@address:
   375                           	callstack 0
   376   000008                     I2C_2_Master_Read@tmp:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x7
   380   000008                     	ds	1
   381   000009                     ??_color_click_init:
   382   000009                     color_read@RGBC:
   383                           	callstack 0
   384   000009                     ___awdiv@counter:
   385                           	callstack 0
   386   000009                     ___awmod@counter:
   387                           	callstack 0
   388   000009                     ___lmul@multiplicand:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x8
   392   000009                     	ds	1
   393   00000A                     ??_color_read:
   394   00000A                     ___awdiv@sign:
   395                           	callstack 0
   396   00000A                     ___awmod@sign:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x9
   400   00000A                     	ds	1
   401   00000B                     ?_abs:
   402                           	callstack 0
   403   00000B                     ___awdiv@quotient:
   404                           	callstack 0
   405   00000B                     abs@a:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0xA
   409   00000B                     	ds	2
   410   00000D                     ??_abs:
   411   00000D                     color_detect@color:
   412                           	callstack 0
   413   00000D                     ___lmul@product:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0xC
   417   00000D                     	ds	2
   418   00000F                     vfpfcnvrt@fp:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0xE
   422   00000F                     	ds	1
   423   000010                     vfpfcnvrt@fmt:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0xF
   427   000010                     	ds	1
   428   000011                     ?___aldiv:
   429                           	callstack 0
   430   000011                     vfpfcnvrt@ap:
   431                           	callstack 0
   432   000011                     ___aldiv@dividend:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x10
   436   000011                     	ds	1
   437   000012                     ??_vfpfcnvrt:
   438                           
   439                           ; 1 bytes @ 0x11
   440   000012                     	ds	1
   441   000013                     vfpfcnvrt@done:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x12
   445   000013                     	ds	1
   446   000014                     vfpfcnvrt@cp:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x13
   450   000014                     	ds	1
   451   000015                     ___aldiv@divisor:
   452                           	callstack 0
   453   000015                     vfpfcnvrt@convarg:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x14
   457   000015                     	ds	4
   458   000019                     ___aldiv@counter:
   459                           	callstack 0
   460   000019                     vfpfcnvrt@c:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x18
   464   000019                     	ds	1
   465   00001A                     ?_vfprintf:
   466                           	callstack 0
   467   00001A                     ___aldiv@sign:
   468                           	callstack 0
   469   00001A                     vfprintf@fp:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x19
   473   00001A                     	ds	1
   474   00001B                     vfprintf@fmt:
   475                           	callstack 0
   476   00001B                     ___aldiv@quotient:
   477                           	callstack 0
   478                           
   479                           ; 4 bytes @ 0x1A
   480   00001B                     	ds	1
   481   00001C                     vfprintf@ap:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x1B
   485   00001C                     	ds	1
   486   00001D                     vfprintf@cfmt:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x1C
   490   00001D                     	ds	1
   491   00001E                     ?_sprintf:
   492                           	callstack 0
   493   00001E                     sprintf@s:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x1D
   497   00001E                     	ds	1
   498   00001F                     sprintf@fmt:
   499                           	callstack 0
   500   00001F                     color_normalise@RGBC:
   501                           	callstack 0
   502                           
   503                           ; 8 bytes @ 0x1E
   504   00001F                     	ds	8
   505   000027                     color_normalise@RGBC_n:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x26
   509   000027                     	ds	1
   510   000028                     ??_color_normalise:
   511                           
   512                           ; 1 bytes @ 0x27
   513   000028                     	ds	8
   514   000030                     sprintf@ap:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x2F
   518   000030                     	ds	1
   519   000031                     sprintf@f:
   520                           	callstack 0
   521                           
   522                           ; 12 bytes @ 0x30
   523   000031                     	ds	12
   524                           
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 22 in file "main.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  buf            40    2[BANK0 ] unsigned char [40]
   535 ;;  RGBC            8   51[BANK0 ] struct RGBC_val
   536 ;;  RGBC_n          8   43[BANK0 ] struct RGBC_val
   537 ;;  color           1   42[BANK0 ] unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   548 ;;      Locals:         0      57       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   549 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   550 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   551 ;;Total ram usage:       59 bytes
   552 ;; Hardware stack levels required when called: 8
   553 ;; This function calls:
   554 ;;		_Buggy_init
   555 ;;		_Interrupts_init
   556 ;;		_TxBufferedString
   557 ;;		_color_click_init
   558 ;;		_color_detect
   559 ;;		_color_normalise
   560 ;;		_color_read
   561 ;;		_initUSART4
   562 ;;		_sendTxBuf
   563 ;;		_sprintf
   564 ;;		_white_Light
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text0
   571   001414                     __ptext0:
   572                           	callstack 0
   573   001414                     _main:
   574                           	callstack 23
   575   001414                     
   576                           ;main.c: 23:     Buggy_init();
   577   001414  ECAB  F00C         	call	_Buggy_init	;wreg free
   578   001418                     
   579                           ;main.c: 24:     color_click_init();
   580   001418  EC07  F00C         	call	_color_click_init	;wreg free
   581   00141C                     
   582                           ;main.c: 25:     initUSART4();
   583   00141C  ECAB  F00D         	call	_initUSART4	;wreg free
   584   001420                     
   585                           ;main.c: 26:     Interrupts_init();
   586   001420  ECDF  F00D         	call	_Interrupts_init	;wreg free
   587   001424                     
   588                           ;main.c: 27:     unsigned char color;;main.c: 28:     char buf[40] = {0};
   589   001424  EE20  F0BE         	lfsr	2,main@buf
   590   001428  0E27               	movlw	39
   591   00142A                     u1311:
   592   00142A  6ADE               	clrf	postinc2,c
   593   00142C  06E8               	decf	wreg,f,c
   594   00142E  E2FD               	bc	u1311
   595   001430                     
   596                           ;main.c: 30:     struct RGBC_val RGBC, RGBC_n;;main.c: 33:     LATHbits.LATH1=LATDbits.L
      +                          ATD3=1;
   597   001430  867C               	bsf	124,3,c	;volatile
   598   001432  8280               	bsf	128,1,c	;volatile
   599   001434                     
   600                           ;main.c: 36:     white_Light(1);
   601   001434  0E01               	movlw	1
   602   001436  EC89  F00D         	call	_white_Light
   603   00143A                     l50:
   604   00143A  B48E               	btfsc	142,2,c	;volatile
   605   00143C  EF22  F00A         	goto	u1321
   606   001440  EF24  F00A         	goto	u1320
   607   001444                     u1321:
   608   001444  EF1D  F00A         	goto	l50
   609   001448                     u1320:
   610   001448                     
   611                           ;main.c: 41:         color_read(&RGBC);
   612   001448  0EEF               	movlw	low main@RGBC
   613   00144A  6E09               	movwf	color_read@RGBC^0,c
   614   00144C  EC1C  F007         	call	_color_read	;wreg free
   615   001450                     
   616                           ;main.c: 42:         color_normalise(RGBC, &RGBC_n);
   617   001450  EE20  F0EF         	lfsr	2,main@RGBC
   618   001454  EE00  F01F         	lfsr	0,color_normalise@RGBC
   619   001458  0E07               	movlw	7
   620   00145A                     u1331:
   621   00145A  CFDB FFEB          	movff	plusw2,plusw0
   622   00145E  06E8               	decf	wreg,f,c
   623   001460  E2FC               	bc	u1331
   624   001462  0EE7               	movlw	low main@RGBC_n
   625   001464  6E27               	movwf	color_normalise@RGBC_n^0,c
   626   001466  ECE3  F008         	call	_color_normalise	;wreg free
   627   00146A                     
   628                           ;main.c: 43:         color = color_detect(RGBC_n);
   629   00146A  EE20  F0E7         	lfsr	2,main@RGBC_n
   630   00146E  EE00  F005         	lfsr	0,color_detect@RGBC_n
   631   001472  0E07               	movlw	7
   632   001474                     u1341:
   633   001474  CFDB FFEB          	movff	plusw2,plusw0
   634   001478  06E8               	decf	wreg,f,c
   635   00147A  E2FC               	bc	u1341
   636   00147C  EC98  F00B         	call	_color_detect	;wreg free
   637   001480  0100               	movlb	0	; () banked
   638   001482  6FE6               	movwf	main@color& (0+255),b
   639   001484                     
   640                           ; BSR set to: 0
   641                           ;main.c: 45:         sprintf(buf,"r=%d g=%d b=%d c=%d   n: r=%d g=%d b=%d  color: %d \r\
      +                          n",RGBC.R,RGBC.G,RGBC.B,RGBC.C, RGBC_n.R,RGBC_n.G,RGBC_n.B,color);
   642   001484  0EBE               	movlw	low main@buf
   643   001486  6E1E               	movwf	sprintf@s^0,c
   644   001488  0E01               	movlw	low STR_1
   645   00148A  6E1F               	movwf	sprintf@fmt^0,c
   646   00148C  C0EF  F020         	movff	main@RGBC,?_sprintf+2
   647   001490  C0F0  F021         	movff	main@RGBC+1,?_sprintf+3
   648   001494  C0F1  F022         	movff	main@RGBC+2,?_sprintf+4
   649   001498  C0F2  F023         	movff	main@RGBC+3,?_sprintf+5
   650   00149C  C0F3  F024         	movff	main@RGBC+4,?_sprintf+6
   651   0014A0  C0F4  F025         	movff	main@RGBC+5,?_sprintf+7
   652   0014A4  C0F5  F026         	movff	main@RGBC+6,?_sprintf+8
   653   0014A8  C0F6  F027         	movff	main@RGBC+7,?_sprintf+9
   654   0014AC  C0E7  F028         	movff	main@RGBC_n,?_sprintf+10
   655   0014B0  C0E8  F029         	movff	main@RGBC_n+1,?_sprintf+11
   656   0014B4  C0E9  F02A         	movff	main@RGBC_n+2,?_sprintf+12
   657   0014B8  C0EA  F02B         	movff	main@RGBC_n+3,?_sprintf+13
   658   0014BC  C0EB  F02C         	movff	main@RGBC_n+4,?_sprintf+14
   659   0014C0  C0EC  F02D         	movff	main@RGBC_n+5,?_sprintf+15
   660   0014C4  C0E6  F02E         	movff	main@color,?_sprintf+16
   661   0014C8  6A2F               	clrf	(?_sprintf+17)^0,c
   662   0014CA  ECC6  F00C         	call	_sprintf	;wreg free
   663   0014CE                     
   664                           ;main.c: 46:         sendTxBuf();
   665   0014CE  ECBA  F00D         	call	_sendTxBuf	;wreg free
   666   0014D2                     
   667                           ;main.c: 47:         TxBufferedString(buf);
   668   0014D2  0EBE               	movlw	low main@buf
   669   0014D4  6E06               	movwf	TxBufferedString@string^0,c
   670   0014D6  6A07               	clrf	(TxBufferedString@string+1)^0,c
   671   0014D8  EC3A  F00C         	call	_TxBufferedString	;wreg free
   672   0014DC                     
   673                           ;main.c: 48:         sendTxBuf();
   674   0014DC  ECBA  F00D         	call	_sendTxBuf	;wreg free
   675   0014E0                     
   676                           ;main.c: 49:         TxBufferedString("");
   677   0014E0  0E36               	movlw	low (STR_1+53)
   678   0014E2  6E06               	movwf	TxBufferedString@string^0,c
   679   0014E4  5006               	movf	TxBufferedString@string^0,w,c
   680   0014E6  A4D8               	btfss	status,2,c
   681   0014E8  0E0E               	movlw	high __smallconst
   682   0014EA  6E07               	movwf	(TxBufferedString@string+1)^0,c
   683   0014EC  EC3A  F00C         	call	_TxBufferedString	;wreg free
   684   0014F0                     
   685                           ;main.c: 50:         _delay((unsigned long)((300)*(64000000/4000.0)));
   686   0014F0  0E19               	movlw	25
   687   0014F2  0100               	movlb	0	; () banked
   688   0014F4  6FBD               	movwf	(??_main+1)& (0+255),b
   689   0014F6  0E5A               	movlw	90
   690   0014F8  6FBC               	movwf	??_main& (0+255),b
   691   0014FA  0EB1               	movlw	177
   692   0014FC                     u1357:
   693   0014FC  2EE8               	decfsz	wreg,f,c
   694   0014FE  D7FE               	bra	u1357
   695   001500  2FBC               	decfsz	??_main& (0+255),f,b
   696   001502  D7FC               	bra	u1357
   697   001504  2FBD               	decfsz	(??_main+1)& (0+255),f,b
   698   001506  D7FA               	bra	u1357
   699   001508  D000               	nop2	
   700   00150A  EF1D  F00A         	goto	l50
   701   00150E  EF46  F000         	goto	start
   702   001512                     __end_of_main:
   703                           	callstack 0
   704                           
   705 ;; *************** function _white_Light *****************
   706 ;; Defined at:
   707 ;;		line 40 in file "color.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  state           1    wreg     unsigned char 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  state           1    4[COMRAM] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, status,2
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   725 ;;Total ram usage:        1 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; Hardware stack levels required when called: 3
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_main
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text1
   736   001B12                     __ptext1:
   737                           	callstack 0
   738   001B12                     _white_Light:
   739                           	callstack 27
   740                           
   741                           ;incstack = 0
   742                           ;white_Light@state stored from wreg
   743   001B12  6E05               	movwf	white_Light@state^0,c
   744   001B14                     
   745                           ;color.c: 40: void white_Light(char state);color.c: 41: {;color.c: 42:     if (state){
   746   001B14  5005               	movf	white_Light@state^0,w,c
   747   001B16  B4D8               	btfsc	status,2,c
   748   001B18  EF90  F00D         	goto	u1131
   749   001B1C  EF92  F00D         	goto	u1130
   750   001B20                     u1131:
   751   001B20  EF97  F00D         	goto	l86
   752   001B24                     u1130:
   753   001B24                     
   754                           ;color.c: 43:         LATGbits.LATG0 = 1;
   755   001B24  807F               	bsf	127,0,c	;volatile
   756                           
   757                           ;color.c: 44:         LATEbits.LATE7 = 1;
   758   001B26  8E7D               	bsf	125,7,c	;volatile
   759                           
   760                           ;color.c: 45:         LATAbits.LATA3 = 1;
   761   001B28  8679               	bsf	121,3,c	;volatile
   762                           
   763                           ;color.c: 46:     }
   764   001B2A  EF9A  F00D         	goto	l88
   765   001B2E                     l86:
   766                           
   767                           ;color.c: 48:         LATGbits.LATG0 = 0;
   768   001B2E  907F               	bcf	127,0,c	;volatile
   769                           
   770                           ;color.c: 49:         LATEbits.LATE7 = 0;
   771   001B30  9E7D               	bcf	125,7,c	;volatile
   772                           
   773                           ;color.c: 50:         LATAbits.LATA3 = 0;
   774   001B32  9679               	bcf	121,3,c	;volatile
   775   001B34                     l88:
   776   001B34  0012               	return		;funcret
   777   001B36                     __end_of_white_Light:
   778                           	callstack 0
   779                           
   780 ;; *************** function _sprintf *****************
   781 ;; Defined at:
   782 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  s               1   29[COMRAM] PTR unsigned char 
   785 ;;		 -> main@buf(40), 
   786 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
   787 ;;		 -> STR_1(54), 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  f              12   48[COMRAM] struct _IO_FILE
   790 ;;  ret             2    0        int 
   791 ;;  ap              1   47[COMRAM] PTR void [1]
   792 ;;		 -> ?_sprintf(2), 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  2   29[COMRAM] int 
   795 ;; Registers used:
   796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   802 ;;      Params:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   803 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   805 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   806 ;;Total ram usage:       31 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; Hardware stack levels required when called: 7
   809 ;; This function calls:
   810 ;;		_vfprintf
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text2
   817   00198C                     __ptext2:
   818                           	callstack 0
   819   00198C                     _sprintf:
   820                           	callstack 23
   821   00198C  0E20               	movlw	low (?_sprintf+2)
   822   00198E  6E30               	movwf	sprintf@ap^0,c
   823   001990  C01E  F031         	movff	sprintf@s,sprintf@f
   824   001994  0E00               	movlw	0
   825   001996  6E35               	movwf	(sprintf@f+4)^0,c
   826   001998  0E00               	movlw	0
   827   00199A  6E34               	movwf	(sprintf@f+3)^0,c
   828   00199C  0E00               	movlw	0
   829   00199E  6E3C               	movwf	(sprintf@f+11)^0,c
   830   0019A0  0E00               	movlw	0
   831   0019A2  6E3B               	movwf	(sprintf@f+10)^0,c
   832   0019A4  0E31               	movlw	low sprintf@f
   833   0019A6  6E1A               	movwf	vfprintf@fp^0,c
   834   0019A8  C01F  F01B         	movff	sprintf@fmt,vfprintf@fmt
   835   0019AC  0E30               	movlw	low sprintf@ap
   836   0019AE  6E1C               	movwf	vfprintf@ap^0,c
   837   0019B0  EC8C  F00C         	call	_vfprintf	;wreg free
   838   0019B4  501E               	movf	sprintf@s^0,w,c
   839   0019B6  2434               	addwf	(sprintf@f+3)^0,w,c
   840   0019B8  6ED9               	movwf	fsr2l,c
   841   0019BA  6ADA               	clrf	fsr2h,c
   842   0019BC  6ADF               	clrf	indf2,c
   843   0019BE  0012               	return		;funcret
   844   0019C0                     __end_of_sprintf:
   845                           	callstack 0
   846                           
   847 ;; *************** function _vfprintf *****************
   848 ;; Defined at:
   849 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  fp              1   25[COMRAM] PTR struct _IO_FILE
   852 ;;		 -> sprintf@f(12), 
   853 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
   854 ;;		 -> STR_1(54), 
   855 ;;  ap              1   27[COMRAM] PTR PTR void 
   856 ;;		 -> sprintf@ap(1), 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  cfmt            1   28[COMRAM] PTR unsigned char 
   859 ;;		 -> STR_1(54), 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  2   25[COMRAM] int 
   862 ;; Registers used:
   863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   869 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   872 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   873 ;;Total ram usage:        4 bytes
   874 ;; Hardware stack levels used: 1
   875 ;; Hardware stack levels required when called: 6
   876 ;; This function calls:
   877 ;;		_vfpfcnvrt
   878 ;; This function is called by:
   879 ;;		_sprintf
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text3
   884   001918                     __ptext3:
   885                           	callstack 0
   886   001918                     _vfprintf:
   887                           	callstack 23
   888   001918                     
   889                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   890   001918  C01B  F01D         	movff	vfprintf@fmt,vfprintf@cfmt
   891                           
   892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   893   00191C  EF98  F00C         	goto	l1805
   894   001920                     l1803:
   895                           
   896                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   897   001920  C01A  F00F         	movff	vfprintf@fp,vfpfcnvrt@fp
   898   001924  0E1D               	movlw	low vfprintf@cfmt
   899   001926  6E10               	movwf	vfpfcnvrt@fmt^0,c
   900   001928  C01C  F011         	movff	vfprintf@ap,vfpfcnvrt@ap
   901   00192C  EC07  F008         	call	_vfpfcnvrt	;wreg free
   902   001930                     l1805:
   903                           
   904                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   905   001930  C01D  FFF6         	movff	vfprintf@cfmt,tblptrl
   906   001934                     	if	1	;There is more than 1 active tblptr byte
   907   001934  0E0E               	movlw	high __smallconst
   908   001936  6EF7               	movwf	tblptrh,c
   909   001938                     	endif
   910   001938                     	if	0	;tblptru may be non-zero
   911   001938                     	endif
   912   001938                     	if	0	;tblptru may be non-zero
   913   001938                     	endif
   914   001938  0008               	tblrd		*
   915   00193A  50F5               	movf	tablat,w,c
   916   00193C  0900               	iorlw	0
   917   00193E  A4D8               	btfss	status,2,c
   918   001940  EFA4  F00C         	goto	u1101
   919   001944  EFA6  F00C         	goto	u1100
   920   001948                     u1101:
   921   001948  EF90  F00C         	goto	l1803
   922   00194C                     u1100:
   923   00194C                     
   924                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   925   00194C  0E00               	movlw	0
   926   00194E  6E1B               	movwf	(?_vfprintf+1)^0,c
   927   001950  0E00               	movlw	0
   928   001952  6E1A               	movwf	?_vfprintf^0,c
   929   001954  0012               	return		;funcret
   930   001956                     __end_of_vfprintf:
   931                           	callstack 0
   932                           
   933 ;; *************** function _vfpfcnvrt *****************
   934 ;; Defined at:
   935 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
   938 ;;		 -> sprintf@f(12), 
   939 ;;  fmt             1   15[COMRAM] PTR PTR unsigned char 
   940 ;;		 -> vfprintf@cfmt(1), 
   941 ;;  ap              1   16[COMRAM] PTR PTR void 
   942 ;;		 -> sprintf@ap(1), 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  convarg         4   20[COMRAM] struct .
   945 ;;  c               1   24[COMRAM] unsigned char 
   946 ;;  cp              1   19[COMRAM] PTR unsigned char 
   947 ;;		 -> STR_1(54), 
   948 ;;  done            1   18[COMRAM] _Bool 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   958 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   959 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   960 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   961 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   962 ;;Total ram usage:       11 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; Hardware stack levels required when called: 5
   965 ;; This function calls:
   966 ;;		___awdiv
   967 ;;		___awmod
   968 ;;		_abs
   969 ;;		_fputc
   970 ;; This function is called by:
   971 ;;		_vfprintf
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text4
   976   00100E                     __ptext4:
   977                           	callstack 0
   978   00100E                     _vfpfcnvrt:
   979                           	callstack 23
   980   00100E                     
   981                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   982   00100E  5010               	movf	vfpfcnvrt@fmt^0,w,c
   983   001010  6ED9               	movwf	fsr2l,c
   984   001012  6ADA               	clrf	fsr2h,c
   985   001014  CFDF FFF6          	movff	indf2,tblptrl
   986   001018                     	if	1	;There is more than 1 active tblptr byte
   987   001018  0E0E               	movlw	high __smallconst
   988   00101A  6EF7               	movwf	tblptrh,c
   989   00101C                     	endif
   990   00101C                     	if	0	;tblptru may be non-zero
   991   00101C                     	endif
   992   00101C                     	if	0	;tblptru may be non-zero
   993   00101C                     	endif
   994   00101C  0008               	tblrd		*
   995   00101E  50F5               	movf	tablat,w,c
   996   001020  0A25               	xorlw	37
   997   001022  A4D8               	btfss	status,2,c
   998   001024  EF16  F008         	goto	u871
   999   001028  EF18  F008         	goto	u870
  1000   00102C                     u871:
  1001   00102C  EFD1  F008         	goto	l1697
  1002   001030                     u870:
  1003   001030                     
  1004                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1005   001030  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1006   001032  6ED9               	movwf	fsr2l,c
  1007   001034  6ADA               	clrf	fsr2h,c
  1008   001036  2ADF               	incf	indf2,f,c
  1009   001038                     
  1010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1011   001038  0E00               	movlw	0
  1012   00103A  6E52               	movwf	(_width+1)^0,c
  1013   00103C  0E00               	movlw	0
  1014   00103E  6E51               	movwf	_width^0,c
  1015   001040  C051  F055         	movff	_width,_flags
  1016   001044                     
  1017                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1018   001044  6853               	setf	_prec^0,c
  1019   001046  6854               	setf	(_prec+1)^0,c
  1020   001048                     
  1021                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1022   001048  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1023   00104A  6ED9               	movwf	fsr2l,c
  1024   00104C  6ADA               	clrf	fsr2h,c
  1025   00104E  50DF               	movf	indf2,w,c
  1026   001050  6E14               	movwf	vfpfcnvrt@cp^0,c
  1027   001052                     
  1028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1029   001052  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1030   001056                     	if	1	;There is more than 1 active tblptr byte
  1031   001056  0E0E               	movlw	high __smallconst
  1032   001058  6EF7               	movwf	tblptrh,c
  1033   00105A                     	endif
  1034   00105A                     	if	0	;tblptru may be non-zero
  1035   00105A                     	endif
  1036   00105A                     	if	0	;tblptru may be non-zero
  1037   00105A                     	endif
  1038   00105A  0008               	tblrd		*
  1039   00105C  50F5               	movf	tablat,w,c
  1040   00105E  0A64               	xorlw	100
  1041   001060  B4D8               	btfsc	status,2,c
  1042   001062  EF35  F008         	goto	u881
  1043   001066  EF37  F008         	goto	u880
  1044   00106A                     u881:
  1045   00106A  EF45  F008         	goto	l1667
  1046   00106E                     u880:
  1047   00106E  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1048   001072                     	if	1	;There is more than 1 active tblptr byte
  1049   001072  0E0E               	movlw	high __smallconst
  1050   001074  6EF7               	movwf	tblptrh,c
  1051   001076                     	endif
  1052   001076                     	if	0	;tblptru may be non-zero
  1053   001076                     	endif
  1054   001076                     	if	0	;tblptru may be non-zero
  1055   001076                     	endif
  1056   001076  0008               	tblrd		*
  1057   001078  50F5               	movf	tablat,w,c
  1058   00107A  0A69               	xorlw	105
  1059   00107C  A4D8               	btfss	status,2,c
  1060   00107E  EF43  F008         	goto	u891
  1061   001082  EF45  F008         	goto	u890
  1062   001086                     u891:
  1063   001086  EFCB  F008         	goto	l1693
  1064   00108A                     u890:
  1065   00108A                     l1667:
  1066                           
  1067                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1068   00108A  5011               	movf	vfpfcnvrt@ap^0,w,c
  1069   00108C  6ED9               	movwf	fsr2l,c
  1070   00108E  6ADA               	clrf	fsr2h,c
  1071   001090  0E02               	movlw	2
  1072   001092  26DF               	addwf	indf2,f,c
  1073   001094  5CDF               	subwf	indf2,w,c
  1074   001096  6ED9               	movwf	fsr2l,c
  1075   001098  6ADA               	clrf	fsr2h,c
  1076   00109A  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg
  1077   00109E  CFDE F016          	movff	postinc2,vfpfcnvrt@convarg+1
  1078   0010A2                     
  1079                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1080   0010A2  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1081   0010A4  6ED9               	movwf	fsr2l,c
  1082   0010A6  6ADA               	clrf	fsr2h,c
  1083   0010A8  2814               	incf	vfpfcnvrt@cp^0,w,c
  1084   0010AA  6EDF               	movwf	indf2,c
  1085   0010AC                     
  1086                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1087   0010AC  0E20               	movlw	32
  1088   0010AE  6E19               	movwf	vfpfcnvrt@c^0,c
  1089                           
  1090                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1091   0010B0  BE16               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1092   0010B2  EF5D  F008         	goto	u901
  1093   0010B6  EF60  F008         	goto	u900
  1094   0010BA                     u901:
  1095   0010BA  0E01               	movlw	1
  1096   0010BC  EF61  F008         	goto	u910
  1097   0010C0                     u900:
  1098   0010C0  0E00               	movlw	0
  1099   0010C2                     u910:
  1100   0010C2  6E13               	movwf	vfpfcnvrt@done^0,c
  1101   0010C4                     l1673:
  1102                           
  1103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1104   0010C4  0619               	decf	vfpfcnvrt@c^0,f,c
  1105   0010C6  5019               	movf	vfpfcnvrt@c^0,w,c
  1106   0010C8  0F9C               	addlw	low _dbuf
  1107   0010CA  6ED9               	movwf	fsr2l,c
  1108   0010CC  6ADA               	clrf	fsr2h,c
  1109   0010CE  C015  F005         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1110   0010D2  C016  F006         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1111   0010D6  0E00               	movlw	0
  1112   0010D8  6E08               	movwf	(___awmod@divisor+1)^0,c
  1113   0010DA  0E0A               	movlw	10
  1114   0010DC  6E07               	movwf	___awmod@divisor^0,c
  1115   0010DE  ECEB  F00A         	call	___awmod	;wreg free
  1116   0010E2  C005  F00B         	movff	?___awmod,abs@a
  1117   0010E6  C006  F00C         	movff	?___awmod+1,abs@a+1
  1118   0010EA  ECE0  F00C         	call	_abs	;wreg free
  1119   0010EE  500B               	movf	?_abs^0,w,c
  1120   0010F0  0F30               	addlw	48
  1121   0010F2  6EDF               	movwf	indf2,c
  1122   0010F4                     
  1123                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1124   0010F4  C015  F005         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1125   0010F8  C016  F006         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1126   0010FC  0E00               	movlw	0
  1127   0010FE  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1128   001100  0E0A               	movlw	10
  1129   001102  6E07               	movwf	___awdiv@divisor^0,c
  1130   001104  EC89  F00A         	call	___awdiv	;wreg free
  1131   001108  C005  F015         	movff	?___awdiv,vfpfcnvrt@convarg
  1132   00110C  C006  F016         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1133   001110                     
  1134                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1135   001110  5015               	movf	vfpfcnvrt@convarg^0,w,c
  1136   001112  1016               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1137   001114  B4D8               	btfsc	status,2,c
  1138   001116  EF8F  F008         	goto	u921
  1139   00111A  EF91  F008         	goto	u920
  1140   00111E                     u921:
  1141   00111E  EF99  F008         	goto	l1681
  1142   001122                     u920:
  1143   001122  5019               	movf	vfpfcnvrt@c^0,w,c
  1144   001124  A4D8               	btfss	status,2,c
  1145   001126  EF97  F008         	goto	u931
  1146   00112A  EF99  F008         	goto	u930
  1147   00112E                     u931:
  1148   00112E  EF62  F008         	goto	l1673
  1149   001132                     u930:
  1150   001132                     l1681:
  1151                           
  1152                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1153   001132  5019               	movf	vfpfcnvrt@c^0,w,c
  1154   001134  B4D8               	btfsc	status,2,c
  1155   001136  EF9F  F008         	goto	u941
  1156   00113A  EFA1  F008         	goto	u940
  1157   00113E                     u941:
  1158   00113E  EFC0  F008         	goto	l1691
  1159   001142                     u940:
  1160   001142  5013               	movf	vfpfcnvrt@done^0,w,c
  1161   001144  B4D8               	btfsc	status,2,c
  1162   001146  EFA7  F008         	goto	u951
  1163   00114A  EFA9  F008         	goto	u950
  1164   00114E                     u951:
  1165   00114E  EFC0  F008         	goto	l1691
  1166   001152                     u950:
  1167   001152                     
  1168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1169   001152  0619               	decf	vfpfcnvrt@c^0,f,c
  1170   001154  5019               	movf	vfpfcnvrt@c^0,w,c
  1171   001156  0F9C               	addlw	low _dbuf
  1172   001158  6ED9               	movwf	fsr2l,c
  1173   00115A  6ADA               	clrf	fsr2h,c
  1174   00115C  0E2D               	movlw	45
  1175   00115E  6EDF               	movwf	indf2,c
  1176   001160  EFC0  F008         	goto	l1691
  1177   001164                     l1687:
  1178                           
  1179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1180   001164  5019               	movf	vfpfcnvrt@c^0,w,c
  1181   001166  0F9C               	addlw	low _dbuf
  1182   001168  6ED9               	movwf	fsr2l,c
  1183   00116A  6ADA               	clrf	fsr2h,c
  1184   00116C  50DF               	movf	indf2,w,c
  1185   00116E  6E12               	movwf	??_vfpfcnvrt^0,c
  1186   001170  5012               	movf	??_vfpfcnvrt^0,w,c
  1187   001172  6E05               	movwf	fputc@c^0,c
  1188   001174  6A06               	clrf	(fputc@c+1)^0,c
  1189   001176  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1190   00117A  EC43  F00B         	call	_fputc	;wreg free
  1191   00117E  2A19               	incf	vfpfcnvrt@c^0,f,c
  1192   001180                     l1691:
  1193                           
  1194                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1195   001180  0E20               	movlw	32
  1196   001182  1819               	xorwf	vfpfcnvrt@c^0,w,c
  1197   001184  A4D8               	btfss	status,2,c
  1198   001186  EFC7  F008         	goto	u961
  1199   00118A  EFC9  F008         	goto	u960
  1200   00118E                     u961:
  1201   00118E  EFB2  F008         	goto	l1687
  1202   001192                     u960:
  1203   001192  EFE2  F008         	goto	l1021
  1204   001196                     l1693:
  1205                           
  1206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1207   001196  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1208   001198  6ED9               	movwf	fsr2l,c
  1209   00119A  6ADA               	clrf	fsr2h,c
  1210   00119C  2ADF               	incf	indf2,f,c
  1211   00119E  EFE2  F008         	goto	l1021
  1212   0011A2                     l1697:
  1213                           
  1214                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1215   0011A2  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1216   0011A4  6ED9               	movwf	fsr2l,c
  1217   0011A6  6ADA               	clrf	fsr2h,c
  1218   0011A8  CFDF FFF6          	movff	indf2,tblptrl
  1219   0011AC                     	if	1	;There is more than 1 active tblptr byte
  1220   0011AC  0E0E               	movlw	high __smallconst
  1221   0011AE  6EF7               	movwf	tblptrh,c
  1222   0011B0                     	endif
  1223   0011B0                     	if	0	;tblptru may be non-zero
  1224   0011B0                     	endif
  1225   0011B0                     	if	0	;tblptru may be non-zero
  1226   0011B0                     	endif
  1227   0011B0  0008               	tblrd		*
  1228   0011B2  50F5               	movf	tablat,w,c
  1229   0011B4  6E05               	movwf	fputc@c^0,c
  1230   0011B6  6A06               	clrf	(fputc@c+1)^0,c
  1231   0011B8  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1232   0011BC  EC43  F00B         	call	_fputc	;wreg free
  1233   0011C0  EFCB  F008         	goto	l1693
  1234   0011C4                     l1021:
  1235   0011C4  0012               	return		;funcret
  1236   0011C6                     __end_of_vfpfcnvrt:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _fputc *****************
  1240 ;; Defined at:
  1241 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  c               2    4[COMRAM] int 
  1244 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  1245 ;;		 -> sprintf@f(12), 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  2    4[COMRAM] int 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1257 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1259 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1260 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1261 ;;Total ram usage:        8 bytes
  1262 ;; Hardware stack levels used: 1
  1263 ;; Hardware stack levels required when called: 4
  1264 ;; This function calls:
  1265 ;;		_putch
  1266 ;; This function is called by:
  1267 ;;		_vfpfcnvrt
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text5
  1272   001686                     __ptext5:
  1273                           	callstack 0
  1274   001686                     _fputc:
  1275                           	callstack 23
  1276   001686  5007               	movf	fputc@fp^0,w,c
  1277   001688  B4D8               	btfsc	status,2,c
  1278   00168A  EF49  F00B         	goto	u821
  1279   00168E  EF4B  F00B         	goto	u820
  1280   001692                     u821:
  1281   001692  EF53  F00B         	goto	l1627
  1282   001696                     u820:
  1283   001696  5007               	movf	fputc@fp^0,w,c
  1284   001698  A4D8               	btfss	status,2,c
  1285   00169A  EF51  F00B         	goto	u831
  1286   00169E  EF53  F00B         	goto	u830
  1287   0016A2                     u831:
  1288   0016A2  EF58  F00B         	goto	l1629
  1289   0016A6                     u830:
  1290   0016A6                     l1627:
  1291   0016A6  5005               	movf	fputc@c^0,w,c
  1292   0016A8  EC0D  F00E         	call	_putch
  1293   0016AC  EF97  F00B         	goto	l1046
  1294   0016B0                     l1629:
  1295   0016B0  5007               	movf	fputc@fp^0,w,c
  1296   0016B2  6ED9               	movwf	fsr2l,c
  1297   0016B4  6ADA               	clrf	fsr2h,c
  1298   0016B6  0E0A               	movlw	10
  1299   0016B8  26D9               	addwf	fsr2l,f,c
  1300   0016BA  50DE               	movf	postinc2,w,c
  1301   0016BC  10DE               	iorwf	postinc2,w,c
  1302   0016BE  B4D8               	btfsc	status,2,c
  1303   0016C0  EF64  F00B         	goto	u841
  1304   0016C4  EF66  F00B         	goto	u840
  1305   0016C8                     u841:
  1306   0016C8  EF7F  F00B         	goto	l1633
  1307   0016CC                     u840:
  1308   0016CC  5007               	movf	fputc@fp^0,w,c
  1309   0016CE  6ED9               	movwf	fsr2l,c
  1310   0016D0  6ADA               	clrf	fsr2h,c
  1311   0016D2  0E0A               	movlw	10
  1312   0016D4  26D9               	addwf	fsr2l,f,c
  1313   0016D6  5007               	movf	fputc@fp^0,w,c
  1314   0016D8  6EE1               	movwf	fsr1l,c
  1315   0016DA  6AE2               	clrf	fsr1h,c
  1316   0016DC  0E03               	movlw	3
  1317   0016DE  26E1               	addwf	fsr1l,f,c
  1318   0016E0  50DE               	movf	postinc2,w,c
  1319   0016E2  5CE6               	subwf	postinc1,w,c
  1320   0016E4  50E6               	movf	postinc1,w,c
  1321   0016E6  0A80               	xorlw	128
  1322   0016E8  6E0C               	movwf	(??_fputc+4)^0,c
  1323   0016EA  50DE               	movf	postinc2,w,c
  1324   0016EC  0A80               	xorlw	128
  1325   0016EE  580C               	subwfb	(??_fputc+4)^0,w,c
  1326   0016F0  B0D8               	btfsc	status,0,c
  1327   0016F2  EF7D  F00B         	goto	u851
  1328   0016F6  EF7F  F00B         	goto	u850
  1329   0016FA                     u851:
  1330   0016FA  EF97  F00B         	goto	l1046
  1331   0016FE                     u850:
  1332   0016FE                     l1633:
  1333   0016FE  5007               	movf	fputc@fp^0,w,c
  1334   001700  6ED9               	movwf	fsr2l,c
  1335   001702  6ADA               	clrf	fsr2h,c
  1336   001704  0E03               	movlw	3
  1337   001706  26D9               	addwf	fsr2l,f,c
  1338   001708  50DF               	movf	indf2,w,c
  1339   00170A  6E08               	movwf	??_fputc^0,c
  1340   00170C  5007               	movf	fputc@fp^0,w,c
  1341   00170E  6ED9               	movwf	fsr2l,c
  1342   001710  6ADA               	clrf	fsr2h,c
  1343   001712  50DF               	movf	indf2,w,c
  1344   001714  2408               	addwf	??_fputc^0,w,c
  1345   001716  6ED9               	movwf	fsr2l,c
  1346   001718  6ADA               	clrf	fsr2h,c
  1347   00171A  C005  FFDF         	movff	fputc@c,indf2
  1348   00171E  5007               	movf	fputc@fp^0,w,c
  1349   001720  6ED9               	movwf	fsr2l,c
  1350   001722  6ADA               	clrf	fsr2h,c
  1351   001724  0E03               	movlw	3
  1352   001726  26D9               	addwf	fsr2l,f,c
  1353   001728  2ADE               	incf	postinc2,f,c
  1354   00172A  0E00               	movlw	0
  1355   00172C  22DD               	addwfc	postdec2,f,c
  1356   00172E                     l1046:
  1357   00172E  0012               	return		;funcret
  1358   001730                     __end_of_fputc:
  1359                           	callstack 0
  1360                           
  1361 ;; *************** function _putch *****************
  1362 ;; Defined at:
  1363 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  c               1    wreg     unsigned char 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  c               1    0[COMRAM] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1381 ;;Total ram usage:        0 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 3
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_fputc
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text6
  1392   001C1A                     __ptext6:
  1393                           	callstack 0
  1394   001C1A                     _putch:
  1395                           	callstack 23
  1396   001C1A  0012               	return		;funcret
  1397   001C1C                     __end_of_putch:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _abs *****************
  1401 ;; Defined at:
  1402 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  a               2   10[COMRAM] int 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  2   10[COMRAM] int 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1419 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1420 ;;Total ram usage:        4 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 3
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_vfpfcnvrt
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text7
  1431   0019C0                     __ptext7:
  1432                           	callstack 0
  1433   0019C0                     _abs:
  1434                           	callstack 24
  1435   0019C0  BE0C               	btfsc	(abs@a+1)^0,7,c
  1436   0019C2  EFE5  F00C         	goto	u861
  1437   0019C6  EFE7  F00C         	goto	u860
  1438   0019CA                     u861:
  1439   0019CA  EFED  F00C         	goto	l1031
  1440   0019CE                     u860:
  1441   0019CE  C00B  F00B         	movff	abs@a,?_abs
  1442   0019D2  C00C  F00C         	movff	abs@a+1,?_abs+1
  1443   0019D6  EFF9  F00C         	goto	l1034
  1444   0019DA                     l1031:
  1445   0019DA  C00B  F00D         	movff	abs@a,??_abs
  1446   0019DE  C00C  F00E         	movff	abs@a+1,??_abs+1
  1447   0019E2  1E0D               	comf	??_abs^0,f,c
  1448   0019E4  1E0E               	comf	(??_abs+1)^0,f,c
  1449   0019E6  4A0D               	infsnz	??_abs^0,f,c
  1450   0019E8  2A0E               	incf	(??_abs+1)^0,f,c
  1451   0019EA  C00D  F00B         	movff	??_abs,?_abs
  1452   0019EE  C00E  F00C         	movff	??_abs+1,?_abs+1
  1453   0019F2                     l1034:
  1454   0019F2  0012               	return		;funcret
  1455   0019F4                     __end_of_abs:
  1456                           	callstack 0
  1457                           
  1458 ;; *************** function ___awmod *****************
  1459 ;; Defined at:
  1460 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  dividend        2    4[COMRAM] int 
  1463 ;;  divisor         2    6[COMRAM] int 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  sign            1    9[COMRAM] unsigned char 
  1466 ;;  counter         1    8[COMRAM] unsigned char 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  2    4[COMRAM] int 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2, status,0
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1476 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1479 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1480 ;;Total ram usage:        6 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 3
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_vfpfcnvrt
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text8
  1491   0015D6                     __ptext8:
  1492                           	callstack 0
  1493   0015D6                     ___awmod:
  1494                           	callstack 24
  1495   0015D6  0E00               	movlw	0
  1496   0015D8  6E0A               	movwf	___awmod@sign^0,c
  1497   0015DA  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  1498   0015DC  EFF4  F00A         	goto	u760
  1499   0015E0  EFF2  F00A         	goto	u761
  1500   0015E4                     u761:
  1501   0015E4  EFFA  F00A         	goto	l1595
  1502   0015E8                     u760:
  1503   0015E8  6C05               	negf	___awmod@dividend^0,c
  1504   0015EA  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1505   0015EC  B0D8               	btfsc	status,0,c
  1506   0015EE  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1507   0015F0  0E01               	movlw	1
  1508   0015F2  6E0A               	movwf	___awmod@sign^0,c
  1509   0015F4                     l1595:
  1510   0015F4  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  1511   0015F6  EF01  F00B         	goto	u770
  1512   0015FA  EFFF  F00A         	goto	u771
  1513   0015FE                     u771:
  1514   0015FE  EF05  F00B         	goto	l1599
  1515   001602                     u770:
  1516   001602  6C07               	negf	___awmod@divisor^0,c
  1517   001604  1E08               	comf	(___awmod@divisor+1)^0,f,c
  1518   001606  B0D8               	btfsc	status,0,c
  1519   001608  2A08               	incf	(___awmod@divisor+1)^0,f,c
  1520   00160A                     l1599:
  1521   00160A  5007               	movf	___awmod@divisor^0,w,c
  1522   00160C  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  1523   00160E  B4D8               	btfsc	status,2,c
  1524   001610  EF0C  F00B         	goto	u781
  1525   001614  EF0E  F00B         	goto	u780
  1526   001618                     u781:
  1527   001618  EF32  F00B         	goto	l1615
  1528   00161C                     u780:
  1529   00161C  0E01               	movlw	1
  1530   00161E  6E09               	movwf	___awmod@counter^0,c
  1531   001620  EF16  F00B         	goto	l1605
  1532   001624                     l1603:
  1533   001624  90D8               	bcf	status,0,c
  1534   001626  3607               	rlcf	___awmod@divisor^0,f,c
  1535   001628  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  1536   00162A  2A09               	incf	___awmod@counter^0,f,c
  1537   00162C                     l1605:
  1538   00162C  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  1539   00162E  EF1B  F00B         	goto	u791
  1540   001632  EF1D  F00B         	goto	u790
  1541   001636                     u791:
  1542   001636  EF12  F00B         	goto	l1603
  1543   00163A                     u790:
  1544   00163A                     l1607:
  1545   00163A  5007               	movf	___awmod@divisor^0,w,c
  1546   00163C  5C05               	subwf	___awmod@dividend^0,w,c
  1547   00163E  5008               	movf	(___awmod@divisor+1)^0,w,c
  1548   001640  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  1549   001642  A0D8               	btfss	status,0,c
  1550   001644  EF26  F00B         	goto	u801
  1551   001648  EF28  F00B         	goto	u800
  1552   00164C                     u801:
  1553   00164C  EF2C  F00B         	goto	l1611
  1554   001650                     u800:
  1555   001650  5007               	movf	___awmod@divisor^0,w,c
  1556   001652  5E05               	subwf	___awmod@dividend^0,f,c
  1557   001654  5008               	movf	(___awmod@divisor+1)^0,w,c
  1558   001656  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  1559   001658                     l1611:
  1560   001658  90D8               	bcf	status,0,c
  1561   00165A  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  1562   00165C  3207               	rrcf	___awmod@divisor^0,f,c
  1563   00165E  2E09               	decfsz	___awmod@counter^0,f,c
  1564   001660  EF1D  F00B         	goto	l1607
  1565   001664                     l1615:
  1566   001664  500A               	movf	___awmod@sign^0,w,c
  1567   001666  B4D8               	btfsc	status,2,c
  1568   001668  EF38  F00B         	goto	u811
  1569   00166C  EF3A  F00B         	goto	u810
  1570   001670                     u811:
  1571   001670  EF3E  F00B         	goto	l1619
  1572   001674                     u810:
  1573   001674  6C05               	negf	___awmod@dividend^0,c
  1574   001676  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1575   001678  B0D8               	btfsc	status,0,c
  1576   00167A  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1577   00167C                     l1619:
  1578   00167C  C005  F005         	movff	___awmod@dividend,?___awmod
  1579   001680  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  1580   001684  0012               	return		;funcret
  1581   001686                     __end_of___awmod:
  1582                           	callstack 0
  1583                           
  1584 ;; *************** function ___awdiv *****************
  1585 ;; Defined at:
  1586 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  dividend        2    4[COMRAM] int 
  1589 ;;  divisor         2    6[COMRAM] int 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  quotient        2   10[COMRAM] int 
  1592 ;;  sign            1    9[COMRAM] unsigned char 
  1593 ;;  counter         1    8[COMRAM] unsigned char 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  2    4[COMRAM] int 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;Total ram usage:        8 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 3
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_vfpfcnvrt
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text9
  1618   001512                     __ptext9:
  1619                           	callstack 0
  1620   001512                     ___awdiv:
  1621                           	callstack 24
  1622   001512  0E00               	movlw	0
  1623   001514  6E0A               	movwf	___awdiv@sign^0,c
  1624   001516  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  1625   001518  EF92  F00A         	goto	u700
  1626   00151C  EF90  F00A         	goto	u701
  1627   001520                     u701:
  1628   001520  EF98  F00A         	goto	l1551
  1629   001524                     u700:
  1630   001524  6C07               	negf	___awdiv@divisor^0,c
  1631   001526  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  1632   001528  B0D8               	btfsc	status,0,c
  1633   00152A  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  1634   00152C  0E01               	movlw	1
  1635   00152E  6E0A               	movwf	___awdiv@sign^0,c
  1636   001530                     l1551:
  1637   001530  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  1638   001532  EF9F  F00A         	goto	u710
  1639   001536  EF9D  F00A         	goto	u711
  1640   00153A                     u711:
  1641   00153A  EFA5  F00A         	goto	l1557
  1642   00153E                     u710:
  1643   00153E  6C05               	negf	___awdiv@dividend^0,c
  1644   001540  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  1645   001542  B0D8               	btfsc	status,0,c
  1646   001544  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  1647   001546  0E01               	movlw	1
  1648   001548  1A0A               	xorwf	___awdiv@sign^0,f,c
  1649   00154A                     l1557:
  1650   00154A  0E00               	movlw	0
  1651   00154C  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  1652   00154E  0E00               	movlw	0
  1653   001550  6E0B               	movwf	___awdiv@quotient^0,c
  1654   001552  5007               	movf	___awdiv@divisor^0,w,c
  1655   001554  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  1656   001556  B4D8               	btfsc	status,2,c
  1657   001558  EFB0  F00A         	goto	u721
  1658   00155C  EFB2  F00A         	goto	u720
  1659   001560                     u721:
  1660   001560  EFDA  F00A         	goto	l1579
  1661   001564                     u720:
  1662   001564  0E01               	movlw	1
  1663   001566  6E09               	movwf	___awdiv@counter^0,c
  1664   001568  EFBA  F00A         	goto	l1565
  1665   00156C                     l1563:
  1666   00156C  90D8               	bcf	status,0,c
  1667   00156E  3607               	rlcf	___awdiv@divisor^0,f,c
  1668   001570  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  1669   001572  2A09               	incf	___awdiv@counter^0,f,c
  1670   001574                     l1565:
  1671   001574  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  1672   001576  EFBF  F00A         	goto	u731
  1673   00157A  EFC1  F00A         	goto	u730
  1674   00157E                     u731:
  1675   00157E  EFB6  F00A         	goto	l1563
  1676   001582                     u730:
  1677   001582                     l1567:
  1678   001582  90D8               	bcf	status,0,c
  1679   001584  360B               	rlcf	___awdiv@quotient^0,f,c
  1680   001586  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1681   001588  5007               	movf	___awdiv@divisor^0,w,c
  1682   00158A  5C05               	subwf	___awdiv@dividend^0,w,c
  1683   00158C  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1684   00158E  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  1685   001590  A0D8               	btfss	status,0,c
  1686   001592  EFCD  F00A         	goto	u741
  1687   001596  EFCF  F00A         	goto	u740
  1688   00159A                     u741:
  1689   00159A  EFD4  F00A         	goto	l1575
  1690   00159E                     u740:
  1691   00159E  5007               	movf	___awdiv@divisor^0,w,c
  1692   0015A0  5E05               	subwf	___awdiv@dividend^0,f,c
  1693   0015A2  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1694   0015A4  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  1695   0015A6  800B               	bsf	___awdiv@quotient^0,0,c
  1696   0015A8                     l1575:
  1697   0015A8  90D8               	bcf	status,0,c
  1698   0015AA  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  1699   0015AC  3207               	rrcf	___awdiv@divisor^0,f,c
  1700   0015AE  2E09               	decfsz	___awdiv@counter^0,f,c
  1701   0015B0  EFC1  F00A         	goto	l1567
  1702   0015B4                     l1579:
  1703   0015B4  500A               	movf	___awdiv@sign^0,w,c
  1704   0015B6  B4D8               	btfsc	status,2,c
  1705   0015B8  EFE0  F00A         	goto	u751
  1706   0015BC  EFE2  F00A         	goto	u750
  1707   0015C0                     u751:
  1708   0015C0  EFE6  F00A         	goto	l1583
  1709   0015C4                     u750:
  1710   0015C4  6C0B               	negf	___awdiv@quotient^0,c
  1711   0015C6  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  1712   0015C8  B0D8               	btfsc	status,0,c
  1713   0015CA  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  1714   0015CC                     l1583:
  1715   0015CC  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  1716   0015D0  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  1717   0015D4  0012               	return		;funcret
  1718   0015D6                     __end_of___awdiv:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _sendTxBuf *****************
  1722 ;; Defined at:
  1723 ;;		line 74 in file "serial.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 4
  1744 ;; This function calls:
  1745 ;;		_isDataInTxBuf
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text10
  1752   001B74                     __ptext10:
  1753                           	callstack 0
  1754   001B74                     _sendTxBuf:
  1755                           	callstack 26
  1756   001B74                     
  1757                           ;serial.c: 75:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  1758   001B74  ECC7  F00D         	call	_isDataInTxBuf	;wreg free
  1759   001B78  0900               	iorlw	0
  1760   001B7A  B4D8               	btfsc	status,2,c
  1761   001B7C  EFC2  F00D         	goto	u1181
  1762   001B80  EFC4  F00D         	goto	u1180
  1763   001B84                     u1181:
  1764   001B84  EFC6  F00D         	goto	l302
  1765   001B88                     u1180:
  1766   001B88  010E               	movlb	14	; () banked
  1767   001B8A  852D               	bsf	45,2,b	;volatile
  1768   001B8C                     l302:
  1769   001B8C  0012               	return		;funcret
  1770   001B8E                     __end_of_sendTxBuf:
  1771                           	callstack 0
  1772                           
  1773 ;; *************** function _isDataInTxBuf *****************
  1774 ;; Defined at:
  1775 ;;		line 61 in file "serial.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      unsigned char 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;Total ram usage:        0 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; Hardware stack levels required when called: 3
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_sendTxBuf
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text11
  1804   001B8E                     __ptext11:
  1805                           	callstack 0
  1806   001B8E                     _isDataInTxBuf:
  1807                           	callstack 26
  1808   001B8E                     
  1809                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  1810   001B8E  5056               	movf	_TxBufReadCnt^0,w,c	;volatile
  1811   001B90  1857               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  1812   001B92  A4D8               	btfss	status,2,c
  1813   001B94  EFCE  F00D         	goto	u991
  1814   001B98  EFD1  F00D         	goto	u990
  1815   001B9C                     u991:
  1816   001B9C  0E01               	movlw	1
  1817   001B9E  EFD2  F00D         	goto	u1000
  1818   001BA2                     u990:
  1819   001BA2  0E00               	movlw	0
  1820   001BA4                     u1000:
  1821   001BA4  0012               	return		;funcret
  1822   001BA6                     __end_of_isDataInTxBuf:
  1823                           	callstack 0
  1824                           
  1825 ;; *************** function _initUSART4 *****************
  1826 ;; Defined at:
  1827 ;;		line 4 in file "serial.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1845 ;;Total ram usage:        0 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 3
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text12
  1856   001B56                     __ptext12:
  1857                           	callstack 0
  1858   001B56                     _initUSART4:
  1859                           	callstack 27
  1860   001B56                     
  1861                           ;serial.c: 7:     RC0PPS = 0x12;
  1862   001B56  0E12               	movlw	18
  1863   001B58  010E               	movlb	14	; () banked
  1864   001B5A  6F62               	movwf	98,b	;volatile
  1865                           
  1866                           ;serial.c: 8:     RX4PPS = 0x11;
  1867   001B5C  0E11               	movlw	17
  1868   001B5E  6F15               	movwf	21,b	;volatile
  1869   001B60                     
  1870                           ; BSR set to: 14
  1871                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  1872   001B60  97E9               	bcf	233,3,b	;volatile
  1873   001B62                     
  1874                           ; BSR set to: 14
  1875                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  1876   001B62  95E8               	bcf	232,2,b	;volatile
  1877                           
  1878                           ;serial.c: 13:     SP4BRGL = 51;
  1879   001B64  0E33               	movlw	51
  1880   001B66  6FE5               	movwf	229,b	;volatile
  1881                           
  1882                           ;serial.c: 14:     SP4BRGH = 0;
  1883   001B68  0E00               	movlw	0
  1884   001B6A  6FE6               	movwf	230,b	;volatile
  1885   001B6C                     
  1886                           ; BSR set to: 14
  1887                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  1888   001B6C  89E7               	bsf	231,4,b	;volatile
  1889   001B6E                     
  1890                           ; BSR set to: 14
  1891                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  1892   001B6E  8BE8               	bsf	232,5,b	;volatile
  1893   001B70                     
  1894                           ; BSR set to: 14
  1895                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  1896   001B70  8FE7               	bsf	231,7,b	;volatile
  1897   001B72                     
  1898                           ; BSR set to: 14
  1899   001B72  0012               	return		;funcret
  1900   001B74                     __end_of_initUSART4:
  1901                           	callstack 0
  1902                           
  1903 ;; *************** function _color_read *****************
  1904 ;; Defined at:
  1905 ;;		line 55 in file "color.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  RGBC            1    8[COMRAM] PTR struct RGBC_val
  1908 ;;		 -> main@RGBC(8), 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1920 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1922 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1923 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;Total ram usage:        8 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 5
  1927 ;; This function calls:
  1928 ;;		_I2C_2_Master_Read
  1929 ;;		_I2C_2_Master_RepStart
  1930 ;;		_I2C_2_Master_Start
  1931 ;;		_I2C_2_Master_Stop
  1932 ;;		_I2C_2_Master_Write
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text13
  1939   000E38                     __ptext13:
  1940                           	callstack 0
  1941   000E38                     _color_read:
  1942                           	callstack 25
  1943   000E38                     
  1944                           ;color.c: 55: void color_read(RGBC_val *RGBC);color.c: 56: {;color.c: 57:  I2C_2_Master_
      +                          Start();
  1945   000E38  ECFE  F00D         	call	_I2C_2_Master_Start	;wreg free
  1946                           
  1947                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
  1948   000E3C  0E52               	movlw	82
  1949   000E3E  ECE8  F00D         	call	_I2C_2_Master_Write
  1950                           
  1951                           ;color.c: 59:  I2C_2_Master_Write(0xA0 | 0x16);
  1952   000E42  0EB6               	movlw	182
  1953   000E44  ECE8  F00D         	call	_I2C_2_Master_Write
  1954                           
  1955                           ;color.c: 60:  I2C_2_Master_RepStart();
  1956   000E48  ECF4  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1957                           
  1958                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
  1959   000E4C  0E53               	movlw	83
  1960   000E4E  ECE8  F00D         	call	_I2C_2_Master_Write
  1961   000E52                     
  1962                           ;color.c: 62:  RGBC->R=I2C_2_Master_Read(1);
  1963   000E52  0E01               	movlw	1
  1964   000E54  EC6B  F00C         	call	_I2C_2_Master_Read
  1965   000E58  6E0A               	movwf	??_color_read^0,c
  1966   000E5A  6A0B               	clrf	(??_color_read+1)^0,c
  1967   000E5C  5009               	movf	color_read@RGBC^0,w,c
  1968   000E5E  6ED9               	movwf	fsr2l,c
  1969   000E60  6ADA               	clrf	fsr2h,c
  1970   000E62  C00A  FFDE         	movff	??_color_read,postinc2
  1971   000E66  C00B  FFDD         	movff	??_color_read+1,postdec2
  1972   000E6A                     
  1973                           ;color.c: 63:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  1974   000E6A  5009               	movf	color_read@RGBC^0,w,c
  1975   000E6C  6ED9               	movwf	fsr2l,c
  1976   000E6E  6ADA               	clrf	fsr2h,c
  1977   000E70  CFDE F00A          	movff	postinc2,??_color_read
  1978   000E74  CFDD F00B          	movff	postdec2,??_color_read+1
  1979   000E78  0E00               	movlw	0
  1980   000E7A  EC6B  F00C         	call	_I2C_2_Master_Read
  1981   000E7E  6E0C               	movwf	(??_color_read+2)^0,c
  1982   000E80  500C               	movf	(??_color_read+2)^0,w,c
  1983   000E82  6E0E               	movwf	(??_color_read+4)^0,c
  1984   000E84  6A0D               	clrf	(??_color_read+3)^0,c
  1985   000E86  500A               	movf	??_color_read^0,w,c
  1986   000E88  100D               	iorwf	(??_color_read+3)^0,w,c
  1987   000E8A  6E0F               	movwf	(??_color_read+5)^0,c
  1988   000E8C  500B               	movf	(??_color_read+1)^0,w,c
  1989   000E8E  100E               	iorwf	(??_color_read+4)^0,w,c
  1990   000E90  6E10               	movwf	(??_color_read+6)^0,c
  1991   000E92  5009               	movf	color_read@RGBC^0,w,c
  1992   000E94  6ED9               	movwf	fsr2l,c
  1993   000E96  6ADA               	clrf	fsr2h,c
  1994   000E98  C00F  FFDE         	movff	??_color_read+5,postinc2
  1995   000E9C  C010  FFDD         	movff	??_color_read+6,postdec2
  1996                           
  1997                           ;color.c: 64:  I2C_2_Master_Stop();
  1998   000EA0  ECF9  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1999                           
  2000                           ;color.c: 66:     I2C_2_Master_Start();
  2001   000EA4  ECFE  F00D         	call	_I2C_2_Master_Start	;wreg free
  2002                           
  2003                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  2004   000EA8  0E52               	movlw	82
  2005   000EAA  ECE8  F00D         	call	_I2C_2_Master_Write
  2006                           
  2007                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x18);
  2008   000EAE  0EB8               	movlw	184
  2009   000EB0  ECE8  F00D         	call	_I2C_2_Master_Write
  2010                           
  2011                           ;color.c: 69:  I2C_2_Master_RepStart();
  2012   000EB4  ECF4  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2013                           
  2014                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  2015   000EB8  0E53               	movlw	83
  2016   000EBA  ECE8  F00D         	call	_I2C_2_Master_Write
  2017   000EBE                     
  2018                           ;color.c: 71:  RGBC->G=I2C_2_Master_Read(1);
  2019   000EBE  0E01               	movlw	1
  2020   000EC0  EC6B  F00C         	call	_I2C_2_Master_Read
  2021   000EC4  6E0A               	movwf	??_color_read^0,c
  2022   000EC6  6A0B               	clrf	(??_color_read+1)^0,c
  2023   000EC8  5009               	movf	color_read@RGBC^0,w,c
  2024   000ECA  6ED9               	movwf	fsr2l,c
  2025   000ECC  6ADA               	clrf	fsr2h,c
  2026   000ECE  0E02               	movlw	2
  2027   000ED0  26D9               	addwf	fsr2l,f,c
  2028   000ED2  C00A  FFDE         	movff	??_color_read,postinc2
  2029   000ED6  C00B  FFDD         	movff	??_color_read+1,postdec2
  2030   000EDA                     
  2031                           ;color.c: 72:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  2032   000EDA  5009               	movf	color_read@RGBC^0,w,c
  2033   000EDC  6ED9               	movwf	fsr2l,c
  2034   000EDE  6ADA               	clrf	fsr2h,c
  2035   000EE0  0E02               	movlw	2
  2036   000EE2  26D9               	addwf	fsr2l,f,c
  2037   000EE4  CFDE F00A          	movff	postinc2,??_color_read
  2038   000EE8  CFDD F00B          	movff	postdec2,??_color_read+1
  2039   000EEC  0E00               	movlw	0
  2040   000EEE  EC6B  F00C         	call	_I2C_2_Master_Read
  2041   000EF2  6E0C               	movwf	(??_color_read+2)^0,c
  2042   000EF4  500C               	movf	(??_color_read+2)^0,w,c
  2043   000EF6  6E0E               	movwf	(??_color_read+4)^0,c
  2044   000EF8  6A0D               	clrf	(??_color_read+3)^0,c
  2045   000EFA  500A               	movf	??_color_read^0,w,c
  2046   000EFC  100D               	iorwf	(??_color_read+3)^0,w,c
  2047   000EFE  6E0F               	movwf	(??_color_read+5)^0,c
  2048   000F00  500B               	movf	(??_color_read+1)^0,w,c
  2049   000F02  100E               	iorwf	(??_color_read+4)^0,w,c
  2050   000F04  6E10               	movwf	(??_color_read+6)^0,c
  2051   000F06  5009               	movf	color_read@RGBC^0,w,c
  2052   000F08  6ED9               	movwf	fsr2l,c
  2053   000F0A  6ADA               	clrf	fsr2h,c
  2054   000F0C  0E02               	movlw	2
  2055   000F0E  26D9               	addwf	fsr2l,f,c
  2056   000F10  C00F  FFDE         	movff	??_color_read+5,postinc2
  2057   000F14  C010  FFDD         	movff	??_color_read+6,postdec2
  2058                           
  2059                           ;color.c: 73:  I2C_2_Master_Stop();
  2060   000F18  ECF9  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2061                           
  2062                           ;color.c: 75:     I2C_2_Master_Start();
  2063   000F1C  ECFE  F00D         	call	_I2C_2_Master_Start	;wreg free
  2064                           
  2065                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
  2066   000F20  0E52               	movlw	82
  2067   000F22  ECE8  F00D         	call	_I2C_2_Master_Write
  2068                           
  2069                           ;color.c: 77:  I2C_2_Master_Write(0xA0 | 0x1A);
  2070   000F26  0EBA               	movlw	186
  2071   000F28  ECE8  F00D         	call	_I2C_2_Master_Write
  2072                           
  2073                           ;color.c: 78:  I2C_2_Master_RepStart();
  2074   000F2C  ECF4  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2075                           
  2076                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  2077   000F30  0E53               	movlw	83
  2078   000F32  ECE8  F00D         	call	_I2C_2_Master_Write
  2079   000F36                     
  2080                           ;color.c: 80:  RGBC->B=I2C_2_Master_Read(1);
  2081   000F36  0E01               	movlw	1
  2082   000F38  EC6B  F00C         	call	_I2C_2_Master_Read
  2083   000F3C  6E0A               	movwf	??_color_read^0,c
  2084   000F3E  6A0B               	clrf	(??_color_read+1)^0,c
  2085   000F40  5009               	movf	color_read@RGBC^0,w,c
  2086   000F42  6ED9               	movwf	fsr2l,c
  2087   000F44  6ADA               	clrf	fsr2h,c
  2088   000F46  0E04               	movlw	4
  2089   000F48  26D9               	addwf	fsr2l,f,c
  2090   000F4A  C00A  FFDE         	movff	??_color_read,postinc2
  2091   000F4E  C00B  FFDD         	movff	??_color_read+1,postdec2
  2092   000F52                     
  2093                           ;color.c: 81:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  2094   000F52  5009               	movf	color_read@RGBC^0,w,c
  2095   000F54  6ED9               	movwf	fsr2l,c
  2096   000F56  6ADA               	clrf	fsr2h,c
  2097   000F58  0E04               	movlw	4
  2098   000F5A  26D9               	addwf	fsr2l,f,c
  2099   000F5C  CFDE F00A          	movff	postinc2,??_color_read
  2100   000F60  CFDD F00B          	movff	postdec2,??_color_read+1
  2101   000F64  0E00               	movlw	0
  2102   000F66  EC6B  F00C         	call	_I2C_2_Master_Read
  2103   000F6A  6E0C               	movwf	(??_color_read+2)^0,c
  2104   000F6C  500C               	movf	(??_color_read+2)^0,w,c
  2105   000F6E  6E0E               	movwf	(??_color_read+4)^0,c
  2106   000F70  6A0D               	clrf	(??_color_read+3)^0,c
  2107   000F72  500A               	movf	??_color_read^0,w,c
  2108   000F74  100D               	iorwf	(??_color_read+3)^0,w,c
  2109   000F76  6E0F               	movwf	(??_color_read+5)^0,c
  2110   000F78  500B               	movf	(??_color_read+1)^0,w,c
  2111   000F7A  100E               	iorwf	(??_color_read+4)^0,w,c
  2112   000F7C  6E10               	movwf	(??_color_read+6)^0,c
  2113   000F7E  5009               	movf	color_read@RGBC^0,w,c
  2114   000F80  6ED9               	movwf	fsr2l,c
  2115   000F82  6ADA               	clrf	fsr2h,c
  2116   000F84  0E04               	movlw	4
  2117   000F86  26D9               	addwf	fsr2l,f,c
  2118   000F88  C00F  FFDE         	movff	??_color_read+5,postinc2
  2119   000F8C  C010  FFDD         	movff	??_color_read+6,postdec2
  2120                           
  2121                           ;color.c: 82:  I2C_2_Master_Stop();
  2122   000F90  ECF9  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2123                           
  2124                           ;color.c: 84:     I2C_2_Master_Start();
  2125   000F94  ECFE  F00D         	call	_I2C_2_Master_Start	;wreg free
  2126                           
  2127                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x00);
  2128   000F98  0E52               	movlw	82
  2129   000F9A  ECE8  F00D         	call	_I2C_2_Master_Write
  2130                           
  2131                           ;color.c: 86:  I2C_2_Master_Write(0xA0 | 0x14);
  2132   000F9E  0EB4               	movlw	180
  2133   000FA0  ECE8  F00D         	call	_I2C_2_Master_Write
  2134                           
  2135                           ;color.c: 87:  I2C_2_Master_RepStart();
  2136   000FA4  ECF4  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2137                           
  2138                           ;color.c: 88:  I2C_2_Master_Write(0x52 | 0x01);
  2139   000FA8  0E53               	movlw	83
  2140   000FAA  ECE8  F00D         	call	_I2C_2_Master_Write
  2141   000FAE                     
  2142                           ;color.c: 89:  RGBC->C=I2C_2_Master_Read(1);
  2143   000FAE  0E01               	movlw	1
  2144   000FB0  EC6B  F00C         	call	_I2C_2_Master_Read
  2145   000FB4  6E0A               	movwf	??_color_read^0,c
  2146   000FB6  6A0B               	clrf	(??_color_read+1)^0,c
  2147   000FB8  5009               	movf	color_read@RGBC^0,w,c
  2148   000FBA  6ED9               	movwf	fsr2l,c
  2149   000FBC  6ADA               	clrf	fsr2h,c
  2150   000FBE  0E06               	movlw	6
  2151   000FC0  26D9               	addwf	fsr2l,f,c
  2152   000FC2  C00A  FFDE         	movff	??_color_read,postinc2
  2153   000FC6  C00B  FFDD         	movff	??_color_read+1,postdec2
  2154   000FCA                     
  2155                           ;color.c: 90:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  2156   000FCA  5009               	movf	color_read@RGBC^0,w,c
  2157   000FCC  6ED9               	movwf	fsr2l,c
  2158   000FCE  6ADA               	clrf	fsr2h,c
  2159   000FD0  0E06               	movlw	6
  2160   000FD2  26D9               	addwf	fsr2l,f,c
  2161   000FD4  CFDE F00A          	movff	postinc2,??_color_read
  2162   000FD8  CFDD F00B          	movff	postdec2,??_color_read+1
  2163   000FDC  0E00               	movlw	0
  2164   000FDE  EC6B  F00C         	call	_I2C_2_Master_Read
  2165   000FE2  6E0C               	movwf	(??_color_read+2)^0,c
  2166   000FE4  500C               	movf	(??_color_read+2)^0,w,c
  2167   000FE6  6E0E               	movwf	(??_color_read+4)^0,c
  2168   000FE8  6A0D               	clrf	(??_color_read+3)^0,c
  2169   000FEA  500A               	movf	??_color_read^0,w,c
  2170   000FEC  100D               	iorwf	(??_color_read+3)^0,w,c
  2171   000FEE  6E0F               	movwf	(??_color_read+5)^0,c
  2172   000FF0  500B               	movf	(??_color_read+1)^0,w,c
  2173   000FF2  100E               	iorwf	(??_color_read+4)^0,w,c
  2174   000FF4  6E10               	movwf	(??_color_read+6)^0,c
  2175   000FF6  5009               	movf	color_read@RGBC^0,w,c
  2176   000FF8  6ED9               	movwf	fsr2l,c
  2177   000FFA  6ADA               	clrf	fsr2h,c
  2178   000FFC  0E06               	movlw	6
  2179   000FFE  26D9               	addwf	fsr2l,f,c
  2180   001000  C00F  FFDE         	movff	??_color_read+5,postinc2
  2181   001004  C010  FFDD         	movff	??_color_read+6,postdec2
  2182                           
  2183                           ;color.c: 91:  I2C_2_Master_Stop();
  2184   001008  ECF9  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2185   00100C  0012               	return		;funcret
  2186   00100E                     __end_of_color_read:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _I2C_2_Master_RepStart *****************
  2190 ;; Defined at:
  2191 ;;		line 33 in file "i2c.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;Total ram usage:        0 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 4
  2212 ;; This function calls:
  2213 ;;		_I2C_2_Master_Idle
  2214 ;; This function is called by:
  2215 ;;		_color_read
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text14
  2220   001BE8                     __ptext14:
  2221                           	callstack 0
  2222   001BE8                     _I2C_2_Master_RepStart:
  2223                           	callstack 25
  2224   001BE8                     
  2225                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2226   001BE8  EC28  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2227   001BEC                     
  2228                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2229   001BEC  010E               	movlb	14	; () banked
  2230   001BEE  83DA               	bsf	218,1,b	;volatile
  2231   001BF0                     
  2232                           ; BSR set to: 14
  2233   001BF0  0012               	return		;funcret
  2234   001BF2                     __end_of_I2C_2_Master_RepStart:
  2235                           	callstack 0
  2236                           
  2237 ;; *************** function _I2C_2_Master_Read *****************
  2238 ;; Defined at:
  2239 ;;		line 51 in file "i2c.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  ack             1    wreg     unsigned char 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  ack             1    6[COMRAM] unsigned char 
  2244 ;;  tmp             1    7[COMRAM] unsigned char 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      unsigned char 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2257 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2258 ;;Total ram usage:        3 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; Hardware stack levels required when called: 4
  2261 ;; This function calls:
  2262 ;;		_I2C_2_Master_Idle
  2263 ;; This function is called by:
  2264 ;;		_color_read
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text15
  2269   0018D6                     __ptext15:
  2270                           	callstack 0
  2271   0018D6                     _I2C_2_Master_Read:
  2272                           	callstack 25
  2273                           
  2274                           ; BSR set to: 14
  2275                           ;incstack = 0
  2276                           ;I2C_2_Master_Read@ack stored from wreg
  2277   0018D6  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  2278   0018D8                     
  2279                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2280   0018D8  EC28  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2281   0018DC                     
  2282                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2283   0018DC  010E               	movlb	14	; () banked
  2284   0018DE  87DA               	bsf	218,3,b	;volatile
  2285                           
  2286                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2287   0018E0  EC28  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2288   0018E4                     
  2289                           ;i2c.c: 57:   tmp = SSP2BUF;
  2290   0018E4  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2291                           
  2292                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2293   0018E8  EC28  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2294   0018EC                     
  2295                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2296   0018EC  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  2297   0018EE  B4D8               	btfsc	status,2,c
  2298   0018F0  EF7C  F00C         	goto	u971
  2299   0018F4  EF80  F00C         	goto	u970
  2300   0018F8                     u971:
  2301   0018F8  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2302   0018FA  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  2303   0018FC  EF81  F00C         	goto	u988
  2304   001900                     u970:
  2305   001900  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2306   001902                     u988:
  2307   001902  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  2308   001904  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  2309   001906  010E               	movlb	14	; () banked
  2310   001908  51DA               	movf	218,w,b	;volatile
  2311   00190A  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2312   00190C  0BDF               	andlw	-33
  2313   00190E  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2314   001910  6FDA               	movwf	218,b	;volatile
  2315   001912                     
  2316                           ; BSR set to: 14
  2317                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2318   001912  89DA               	bsf	218,4,b	;volatile
  2319   001914                     
  2320                           ; BSR set to: 14
  2321                           ;i2c.c: 61:   return tmp;
  2322   001914  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  2323   001916                     
  2324                           ; BSR set to: 14
  2325   001916  0012               	return		;funcret
  2326   001918                     __end_of_I2C_2_Master_Read:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _color_normalise *****************
  2330 ;; Defined at:
  2331 ;;		line 95 in file "color.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  RGBC            8   30[COMRAM] struct RGBC_val
  2334 ;;  RGBC_n          1   38[COMRAM] PTR struct RGBC_val
  2335 ;;		 -> main@RGBC_n(8), 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2347 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2351 ;;Total ram usage:       11 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 4
  2354 ;; This function calls:
  2355 ;;		___aldiv
  2356 ;;		___lmul
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text16
  2363   0011C6                     __ptext16:
  2364                           	callstack 0
  2365   0011C6                     _color_normalise:
  2366                           	callstack 26
  2367   0011C6                     
  2368                           ;color.c: 113:     RGBC_n->C = RGBC.C;
  2369   0011C6  5027               	movf	color_normalise@RGBC_n^0,w,c
  2370   0011C8  6ED9               	movwf	fsr2l,c
  2371   0011CA  6ADA               	clrf	fsr2h,c
  2372   0011CC  0E06               	movlw	6
  2373   0011CE  26D9               	addwf	fsr2l,f,c
  2374   0011D0  C025  FFDE         	movff	color_normalise@RGBC+6,postinc2
  2375   0011D4  C026  FFDD         	movff	color_normalise@RGBC+7,postdec2
  2376   0011D8                     
  2377                           ;color.c: 114:     RGBC_n->R = 1000L*RGBC.R/(RGBC.R+RGBC.G+RGBC.B);
  2378   0011D8  C01F  F005         	movff	color_normalise@RGBC,___lmul@multiplier
  2379   0011DC  C020  F006         	movff	color_normalise@RGBC+1,___lmul@multiplier+1
  2380   0011E0  6A07               	clrf	(___lmul@multiplier+2)^0,c
  2381   0011E2  6A08               	clrf	(___lmul@multiplier+3)^0,c
  2382   0011E4  0EE8               	movlw	232
  2383   0011E6  6E09               	movwf	___lmul@multiplicand^0,c
  2384   0011E8  0E03               	movlw	3
  2385   0011EA  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  2386   0011EC  0E00               	movlw	0
  2387   0011EE  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  2388   0011F0  0E00               	movlw	0
  2389   0011F2  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  2390   0011F4  ECD2  F00B         	call	___lmul	;wreg free
  2391   0011F8  C005  F011         	movff	?___lmul,___aldiv@dividend
  2392   0011FC  C006  F012         	movff	?___lmul+1,___aldiv@dividend+1
  2393   001200  C007  F013         	movff	?___lmul+2,___aldiv@dividend+2
  2394   001204  C008  F014         	movff	?___lmul+3,___aldiv@dividend+3
  2395   001208  5023               	movf	(color_normalise@RGBC+4)^0,w,c
  2396   00120A  2421               	addwf	(color_normalise@RGBC+2)^0,w,c
  2397   00120C  6E28               	movwf	??_color_normalise^0,c
  2398   00120E  5024               	movf	(color_normalise@RGBC+5)^0,w,c
  2399   001210  2022               	addwfc	(color_normalise@RGBC+3)^0,w,c
  2400   001212  6E29               	movwf	(??_color_normalise+1)^0,c
  2401   001214  501F               	movf	color_normalise@RGBC^0,w,c
  2402   001216  2628               	addwf	??_color_normalise^0,f,c
  2403   001218  5020               	movf	(color_normalise@RGBC+1)^0,w,c
  2404   00121A  2229               	addwfc	(??_color_normalise+1)^0,f,c
  2405   00121C  C028  F015         	movff	??_color_normalise,___aldiv@divisor
  2406   001220  C029  F016         	movff	??_color_normalise+1,___aldiv@divisor+1
  2407   001224  6A17               	clrf	(___aldiv@divisor+2)^0,c
  2408   001226  6A18               	clrf	(___aldiv@divisor+3)^0,c
  2409   001228  EC84  F009         	call	___aldiv	;wreg free
  2410   00122C  5027               	movf	color_normalise@RGBC_n^0,w,c
  2411   00122E  6ED9               	movwf	fsr2l,c
  2412   001230  6ADA               	clrf	fsr2h,c
  2413   001232  C011  FFDE         	movff	?___aldiv,postinc2
  2414   001236  C012  FFDD         	movff	?___aldiv+1,postdec2
  2415   00123A                     
  2416                           ;color.c: 115:     RGBC_n->G = 1000L*RGBC.G/(RGBC.R+RGBC.G+RGBC.B);
  2417   00123A  C021  F005         	movff	color_normalise@RGBC+2,___lmul@multiplier
  2418   00123E  C022  F006         	movff	color_normalise@RGBC+3,___lmul@multiplier+1
  2419   001242  6A07               	clrf	(___lmul@multiplier+2)^0,c
  2420   001244  6A08               	clrf	(___lmul@multiplier+3)^0,c
  2421   001246  0EE8               	movlw	232
  2422   001248  6E09               	movwf	___lmul@multiplicand^0,c
  2423   00124A  0E03               	movlw	3
  2424   00124C  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  2425   00124E  0E00               	movlw	0
  2426   001250  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  2427   001252  0E00               	movlw	0
  2428   001254  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  2429   001256  ECD2  F00B         	call	___lmul	;wreg free
  2430   00125A  C005  F011         	movff	?___lmul,___aldiv@dividend
  2431   00125E  C006  F012         	movff	?___lmul+1,___aldiv@dividend+1
  2432   001262  C007  F013         	movff	?___lmul+2,___aldiv@dividend+2
  2433   001266  C008  F014         	movff	?___lmul+3,___aldiv@dividend+3
  2434   00126A  5023               	movf	(color_normalise@RGBC+4)^0,w,c
  2435   00126C  2421               	addwf	(color_normalise@RGBC+2)^0,w,c
  2436   00126E  6E28               	movwf	??_color_normalise^0,c
  2437   001270  5024               	movf	(color_normalise@RGBC+5)^0,w,c
  2438   001272  2022               	addwfc	(color_normalise@RGBC+3)^0,w,c
  2439   001274  6E29               	movwf	(??_color_normalise+1)^0,c
  2440   001276  501F               	movf	color_normalise@RGBC^0,w,c
  2441   001278  2628               	addwf	??_color_normalise^0,f,c
  2442   00127A  5020               	movf	(color_normalise@RGBC+1)^0,w,c
  2443   00127C  2229               	addwfc	(??_color_normalise+1)^0,f,c
  2444   00127E  C028  F015         	movff	??_color_normalise,___aldiv@divisor
  2445   001282  C029  F016         	movff	??_color_normalise+1,___aldiv@divisor+1
  2446   001286  6A17               	clrf	(___aldiv@divisor+2)^0,c
  2447   001288  6A18               	clrf	(___aldiv@divisor+3)^0,c
  2448   00128A  EC84  F009         	call	___aldiv	;wreg free
  2449   00128E  5027               	movf	color_normalise@RGBC_n^0,w,c
  2450   001290  6ED9               	movwf	fsr2l,c
  2451   001292  6ADA               	clrf	fsr2h,c
  2452   001294  0E02               	movlw	2
  2453   001296  26D9               	addwf	fsr2l,f,c
  2454   001298  C011  FFDE         	movff	?___aldiv,postinc2
  2455   00129C  C012  FFDD         	movff	?___aldiv+1,postdec2
  2456   0012A0                     
  2457                           ;color.c: 116:     RGBC_n->B = 1000L*RGBC.B/(RGBC.R+RGBC.G+RGBC.B);
  2458   0012A0  C023  F005         	movff	color_normalise@RGBC+4,___lmul@multiplier
  2459   0012A4  C024  F006         	movff	color_normalise@RGBC+5,___lmul@multiplier+1
  2460   0012A8  6A07               	clrf	(___lmul@multiplier+2)^0,c
  2461   0012AA  6A08               	clrf	(___lmul@multiplier+3)^0,c
  2462   0012AC  0EE8               	movlw	232
  2463   0012AE  6E09               	movwf	___lmul@multiplicand^0,c
  2464   0012B0  0E03               	movlw	3
  2465   0012B2  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  2466   0012B4  0E00               	movlw	0
  2467   0012B6  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  2468   0012B8  0E00               	movlw	0
  2469   0012BA  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  2470   0012BC  ECD2  F00B         	call	___lmul	;wreg free
  2471   0012C0  C005  F011         	movff	?___lmul,___aldiv@dividend
  2472   0012C4  C006  F012         	movff	?___lmul+1,___aldiv@dividend+1
  2473   0012C8  C007  F013         	movff	?___lmul+2,___aldiv@dividend+2
  2474   0012CC  C008  F014         	movff	?___lmul+3,___aldiv@dividend+3
  2475   0012D0  5023               	movf	(color_normalise@RGBC+4)^0,w,c
  2476   0012D2  2421               	addwf	(color_normalise@RGBC+2)^0,w,c
  2477   0012D4  6E28               	movwf	??_color_normalise^0,c
  2478   0012D6  5024               	movf	(color_normalise@RGBC+5)^0,w,c
  2479   0012D8  2022               	addwfc	(color_normalise@RGBC+3)^0,w,c
  2480   0012DA  6E29               	movwf	(??_color_normalise+1)^0,c
  2481   0012DC  501F               	movf	color_normalise@RGBC^0,w,c
  2482   0012DE  2628               	addwf	??_color_normalise^0,f,c
  2483   0012E0  5020               	movf	(color_normalise@RGBC+1)^0,w,c
  2484   0012E2  2229               	addwfc	(??_color_normalise+1)^0,f,c
  2485   0012E4  C028  F015         	movff	??_color_normalise,___aldiv@divisor
  2486   0012E8  C029  F016         	movff	??_color_normalise+1,___aldiv@divisor+1
  2487   0012EC  6A17               	clrf	(___aldiv@divisor+2)^0,c
  2488   0012EE  6A18               	clrf	(___aldiv@divisor+3)^0,c
  2489   0012F0  EC84  F009         	call	___aldiv	;wreg free
  2490   0012F4  5027               	movf	color_normalise@RGBC_n^0,w,c
  2491   0012F6  6ED9               	movwf	fsr2l,c
  2492   0012F8  6ADA               	clrf	fsr2h,c
  2493   0012FA  0E04               	movlw	4
  2494   0012FC  26D9               	addwf	fsr2l,f,c
  2495   0012FE  C011  FFDE         	movff	?___aldiv,postinc2
  2496   001302  C012  FFDD         	movff	?___aldiv+1,postdec2
  2497   001306  0012               	return		;funcret
  2498   001308                     __end_of_color_normalise:
  2499                           	callstack 0
  2500                           
  2501 ;; *************** function ___lmul *****************
  2502 ;; Defined at:
  2503 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  multiplier      4    4[COMRAM] unsigned long 
  2506 ;;  multiplicand    4    8[COMRAM] unsigned long 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  product         4   12[COMRAM] unsigned long 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  4    4[COMRAM] unsigned long 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2518 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2519 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2521 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2522 ;;Total ram usage:       12 bytes
  2523 ;; Hardware stack levels used: 1
  2524 ;; Hardware stack levels required when called: 3
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_color_normalise
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text17
  2533   0017A4                     __ptext17:
  2534                           	callstack 0
  2535   0017A4                     ___lmul:
  2536                           	callstack 26
  2537   0017A4  0E00               	movlw	0
  2538   0017A6  6E0D               	movwf	___lmul@product^0,c
  2539   0017A8  0E00               	movlw	0
  2540   0017AA  6E0E               	movwf	(___lmul@product+1)^0,c
  2541   0017AC  0E00               	movlw	0
  2542   0017AE  6E0F               	movwf	(___lmul@product+2)^0,c
  2543   0017B0  0E00               	movlw	0
  2544   0017B2  6E10               	movwf	(___lmul@product+3)^0,c
  2545   0017B4                     l1749:
  2546   0017B4  A005               	btfss	___lmul@multiplier^0,0,c
  2547   0017B6  EFDF  F00B         	goto	u1021
  2548   0017BA  EFE1  F00B         	goto	u1020
  2549   0017BE                     u1021:
  2550   0017BE  EFE9  F00B         	goto	l1753
  2551   0017C2                     u1020:
  2552   0017C2  5009               	movf	___lmul@multiplicand^0,w,c
  2553   0017C4  260D               	addwf	___lmul@product^0,f,c
  2554   0017C6  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  2555   0017C8  220E               	addwfc	(___lmul@product+1)^0,f,c
  2556   0017CA  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  2557   0017CC  220F               	addwfc	(___lmul@product+2)^0,f,c
  2558   0017CE  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  2559   0017D0  2210               	addwfc	(___lmul@product+3)^0,f,c
  2560   0017D2                     l1753:
  2561   0017D2  90D8               	bcf	status,0,c
  2562   0017D4  3609               	rlcf	___lmul@multiplicand^0,f,c
  2563   0017D6  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2564   0017D8  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2565   0017DA  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2566   0017DC  90D8               	bcf	status,0,c
  2567   0017DE  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  2568   0017E0  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  2569   0017E2  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  2570   0017E4  3205               	rrcf	___lmul@multiplier^0,f,c
  2571   0017E6  5005               	movf	___lmul@multiplier^0,w,c
  2572   0017E8  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  2573   0017EA  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  2574   0017EC  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  2575   0017EE  A4D8               	btfss	status,2,c
  2576   0017F0  EFFC  F00B         	goto	u1031
  2577   0017F4  EFFE  F00B         	goto	u1030
  2578   0017F8                     u1031:
  2579   0017F8  EFDA  F00B         	goto	l1749
  2580   0017FC                     u1030:
  2581   0017FC  C00D  F005         	movff	___lmul@product,?___lmul
  2582   001800  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  2583   001804  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  2584   001808  C010  F008         	movff	___lmul@product+3,?___lmul+3
  2585   00180C  0012               	return		;funcret
  2586   00180E                     __end_of___lmul:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function ___aldiv *****************
  2590 ;; Defined at:
  2591 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  dividend        4   16[COMRAM] long 
  2594 ;;  divisor         4   20[COMRAM] long 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  quotient        4   26[COMRAM] long 
  2597 ;;  sign            1   25[COMRAM] unsigned char 
  2598 ;;  counter         1   24[COMRAM] unsigned char 
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  4   16[COMRAM] long 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2, status,0
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2608 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2611 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2612 ;;Total ram usage:       14 bytes
  2613 ;; Hardware stack levels used: 1
  2614 ;; Hardware stack levels required when called: 3
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_color_normalise
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text18
  2623   001308                     __ptext18:
  2624                           	callstack 0
  2625   001308                     ___aldiv:
  2626                           	callstack 26
  2627   001308  0E00               	movlw	0
  2628   00130A  6E1A               	movwf	___aldiv@sign^0,c
  2629   00130C  BE18               	btfsc	(___aldiv@divisor+3)^0,7,c
  2630   00130E  EF8D  F009         	goto	u1040
  2631   001312  EF8B  F009         	goto	u1041
  2632   001316                     u1041:
  2633   001316  EF97  F009         	goto	l1765
  2634   00131A                     u1040:
  2635   00131A  1E18               	comf	(___aldiv@divisor+3)^0,f,c
  2636   00131C  1E17               	comf	(___aldiv@divisor+2)^0,f,c
  2637   00131E  1E16               	comf	(___aldiv@divisor+1)^0,f,c
  2638   001320  6C15               	negf	___aldiv@divisor^0,c
  2639   001322  0E00               	movlw	0
  2640   001324  2216               	addwfc	(___aldiv@divisor+1)^0,f,c
  2641   001326  2217               	addwfc	(___aldiv@divisor+2)^0,f,c
  2642   001328  2218               	addwfc	(___aldiv@divisor+3)^0,f,c
  2643   00132A  0E01               	movlw	1
  2644   00132C  6E1A               	movwf	___aldiv@sign^0,c
  2645   00132E                     l1765:
  2646   00132E  BE14               	btfsc	(___aldiv@dividend+3)^0,7,c
  2647   001330  EF9E  F009         	goto	u1050
  2648   001334  EF9C  F009         	goto	u1051
  2649   001338                     u1051:
  2650   001338  EFA8  F009         	goto	l1771
  2651   00133C                     u1050:
  2652   00133C  1E14               	comf	(___aldiv@dividend+3)^0,f,c
  2653   00133E  1E13               	comf	(___aldiv@dividend+2)^0,f,c
  2654   001340  1E12               	comf	(___aldiv@dividend+1)^0,f,c
  2655   001342  6C11               	negf	___aldiv@dividend^0,c
  2656   001344  0E00               	movlw	0
  2657   001346  2212               	addwfc	(___aldiv@dividend+1)^0,f,c
  2658   001348  2213               	addwfc	(___aldiv@dividend+2)^0,f,c
  2659   00134A  2214               	addwfc	(___aldiv@dividend+3)^0,f,c
  2660   00134C  0E01               	movlw	1
  2661   00134E  1A1A               	xorwf	___aldiv@sign^0,f,c
  2662   001350                     l1771:
  2663   001350  0E00               	movlw	0
  2664   001352  6E1B               	movwf	___aldiv@quotient^0,c
  2665   001354  0E00               	movlw	0
  2666   001356  6E1C               	movwf	(___aldiv@quotient+1)^0,c
  2667   001358  0E00               	movlw	0
  2668   00135A  6E1D               	movwf	(___aldiv@quotient+2)^0,c
  2669   00135C  0E00               	movlw	0
  2670   00135E  6E1E               	movwf	(___aldiv@quotient+3)^0,c
  2671   001360  5015               	movf	___aldiv@divisor^0,w,c
  2672   001362  1016               	iorwf	(___aldiv@divisor+1)^0,w,c
  2673   001364  1017               	iorwf	(___aldiv@divisor+2)^0,w,c
  2674   001366  1018               	iorwf	(___aldiv@divisor+3)^0,w,c
  2675   001368  B4D8               	btfsc	status,2,c
  2676   00136A  EFB9  F009         	goto	u1061
  2677   00136E  EFBB  F009         	goto	u1060
  2678   001372                     u1061:
  2679   001372  EFF1  F009         	goto	l1793
  2680   001376                     u1060:
  2681   001376  0E01               	movlw	1
  2682   001378  6E19               	movwf	___aldiv@counter^0,c
  2683   00137A  EFC5  F009         	goto	l1779
  2684   00137E                     l1777:
  2685   00137E  90D8               	bcf	status,0,c
  2686   001380  3615               	rlcf	___aldiv@divisor^0,f,c
  2687   001382  3616               	rlcf	(___aldiv@divisor+1)^0,f,c
  2688   001384  3617               	rlcf	(___aldiv@divisor+2)^0,f,c
  2689   001386  3618               	rlcf	(___aldiv@divisor+3)^0,f,c
  2690   001388  2A19               	incf	___aldiv@counter^0,f,c
  2691   00138A                     l1779:
  2692   00138A  AE18               	btfss	(___aldiv@divisor+3)^0,7,c
  2693   00138C  EFCA  F009         	goto	u1071
  2694   001390  EFCC  F009         	goto	u1070
  2695   001394                     u1071:
  2696   001394  EFBF  F009         	goto	l1777
  2697   001398                     u1070:
  2698   001398                     l1781:
  2699   001398  90D8               	bcf	status,0,c
  2700   00139A  361B               	rlcf	___aldiv@quotient^0,f,c
  2701   00139C  361C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2702   00139E  361D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2703   0013A0  361E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2704   0013A2  5015               	movf	___aldiv@divisor^0,w,c
  2705   0013A4  5C11               	subwf	___aldiv@dividend^0,w,c
  2706   0013A6  5016               	movf	(___aldiv@divisor+1)^0,w,c
  2707   0013A8  5812               	subwfb	(___aldiv@dividend+1)^0,w,c
  2708   0013AA  5017               	movf	(___aldiv@divisor+2)^0,w,c
  2709   0013AC  5813               	subwfb	(___aldiv@dividend+2)^0,w,c
  2710   0013AE  5018               	movf	(___aldiv@divisor+3)^0,w,c
  2711   0013B0  5814               	subwfb	(___aldiv@dividend+3)^0,w,c
  2712   0013B2  A0D8               	btfss	status,0,c
  2713   0013B4  EFDE  F009         	goto	u1081
  2714   0013B8  EFE0  F009         	goto	u1080
  2715   0013BC                     u1081:
  2716   0013BC  EFE9  F009         	goto	l1789
  2717   0013C0                     u1080:
  2718   0013C0  5015               	movf	___aldiv@divisor^0,w,c
  2719   0013C2  5E11               	subwf	___aldiv@dividend^0,f,c
  2720   0013C4  5016               	movf	(___aldiv@divisor+1)^0,w,c
  2721   0013C6  5A12               	subwfb	(___aldiv@dividend+1)^0,f,c
  2722   0013C8  5017               	movf	(___aldiv@divisor+2)^0,w,c
  2723   0013CA  5A13               	subwfb	(___aldiv@dividend+2)^0,f,c
  2724   0013CC  5018               	movf	(___aldiv@divisor+3)^0,w,c
  2725   0013CE  5A14               	subwfb	(___aldiv@dividend+3)^0,f,c
  2726   0013D0  801B               	bsf	___aldiv@quotient^0,0,c
  2727   0013D2                     l1789:
  2728   0013D2  90D8               	bcf	status,0,c
  2729   0013D4  3218               	rrcf	(___aldiv@divisor+3)^0,f,c
  2730   0013D6  3217               	rrcf	(___aldiv@divisor+2)^0,f,c
  2731   0013D8  3216               	rrcf	(___aldiv@divisor+1)^0,f,c
  2732   0013DA  3215               	rrcf	___aldiv@divisor^0,f,c
  2733   0013DC  2E19               	decfsz	___aldiv@counter^0,f,c
  2734   0013DE  EFCC  F009         	goto	l1781
  2735   0013E2                     l1793:
  2736   0013E2  501A               	movf	___aldiv@sign^0,w,c
  2737   0013E4  B4D8               	btfsc	status,2,c
  2738   0013E6  EFF7  F009         	goto	u1091
  2739   0013EA  EFF9  F009         	goto	u1090
  2740   0013EE                     u1091:
  2741   0013EE  EF01  F00A         	goto	l1797
  2742   0013F2                     u1090:
  2743   0013F2  1E1E               	comf	(___aldiv@quotient+3)^0,f,c
  2744   0013F4  1E1D               	comf	(___aldiv@quotient+2)^0,f,c
  2745   0013F6  1E1C               	comf	(___aldiv@quotient+1)^0,f,c
  2746   0013F8  6C1B               	negf	___aldiv@quotient^0,c
  2747   0013FA  0E00               	movlw	0
  2748   0013FC  221C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2749   0013FE  221D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2750   001400  221E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2751   001402                     l1797:
  2752   001402  C01B  F011         	movff	___aldiv@quotient,?___aldiv
  2753   001406  C01C  F012         	movff	___aldiv@quotient+1,?___aldiv+1
  2754   00140A  C01D  F013         	movff	___aldiv@quotient+2,?___aldiv+2
  2755   00140E  C01E  F014         	movff	___aldiv@quotient+3,?___aldiv+3
  2756   001412  0012               	return		;funcret
  2757   001414                     __end_of___aldiv:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _color_detect *****************
  2761 ;; Defined at:
  2762 ;;		line 119 in file "color.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  RGBC_n          8    4[COMRAM] struct RGBC_val
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  color           1   12[COMRAM] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      unsigned char 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2776 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;Total ram usage:        9 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 3
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text19
  2791   001730                     __ptext19:
  2792                           	callstack 0
  2793   001730                     _color_detect:
  2794                           	callstack 27
  2795   001730                     
  2796                           ;color.c: 119: unsigned char color_detect(RGBC_val RGBC_n);color.c: 120: {;color.c: 121:
      +                               unsigned char color=0;
  2797   001730  0E00               	movlw	0
  2798   001732  6E0D               	movwf	color_detect@color^0,c
  2799   001734                     
  2800                           ;color.c: 122:     if (RGBC_n.R > 550) {
  2801   001734  0E27               	movlw	39
  2802   001736  5C05               	subwf	color_detect@RGBC_n^0,w,c
  2803   001738  0E02               	movlw	2
  2804   00173A  5806               	subwfb	(color_detect@RGBC_n+1)^0,w,c
  2805   00173C  A0D8               	btfss	status,0,c
  2806   00173E  EFA3  F00B         	goto	u1141
  2807   001742  EFA5  F00B         	goto	u1140
  2808   001746                     u1141:
  2809   001746  EFA9  F00B         	goto	l1887
  2810   00174A                     u1140:
  2811   00174A                     
  2812                           ;color.c: 123:         color = 1;
  2813   00174A  0E01               	movlw	1
  2814   00174C  6E0D               	movwf	color_detect@color^0,c
  2815                           
  2816                           ;color.c: 124:     }
  2817   00174E  EFD0  F00B         	goto	l98
  2818   001752                     l1887:
  2819   001752  0E23               	movlw	35
  2820   001754  5C07               	subwf	(color_detect@RGBC_n+2)^0,w,c
  2821   001756  0E01               	movlw	1
  2822   001758  5808               	subwfb	(color_detect@RGBC_n+3)^0,w,c
  2823   00175A  A0D8               	btfss	status,0,c
  2824   00175C  EFB2  F00B         	goto	u1151
  2825   001760  EFB4  F00B         	goto	u1150
  2826   001764                     u1151:
  2827   001764  EFB8  F00B         	goto	l1891
  2828   001768                     u1150:
  2829   001768                     
  2830                           ;color.c: 126:         color = 2;
  2831   001768  0E02               	movlw	2
  2832   00176A  6E0D               	movwf	color_detect@color^0,c
  2833                           
  2834                           ;color.c: 127:     }
  2835   00176C  EFD0  F00B         	goto	l98
  2836   001770                     l1891:
  2837   001770  500A               	movf	(color_detect@RGBC_n+5)^0,w,c
  2838   001772  E109               	bnz	u1160
  2839   001774  0EDD               	movlw	221
  2840   001776  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2841   001778  A0D8               	btfss	status,0,c
  2842   00177A  EFC1  F00B         	goto	u1161
  2843   00177E  EFC3  F00B         	goto	u1160
  2844   001782                     u1161:
  2845   001782  EFD0  F00B         	goto	l98
  2846   001786                     u1160:
  2847   001786  0E20               	movlw	32
  2848   001788  5C0B               	subwf	(color_detect@RGBC_n+6)^0,w,c
  2849   00178A  0E03               	movlw	3
  2850   00178C  580C               	subwfb	(color_detect@RGBC_n+7)^0,w,c
  2851   00178E  B0D8               	btfsc	status,0,c
  2852   001790  EFCC  F00B         	goto	u1171
  2853   001794  EFCE  F00B         	goto	u1170
  2854   001798                     u1171:
  2855   001798  EFD0  F00B         	goto	l98
  2856   00179C                     u1170:
  2857   00179C                     
  2858                           ;color.c: 129:         color = 3;
  2859   00179C  0E03               	movlw	3
  2860   00179E  6E0D               	movwf	color_detect@color^0,c
  2861   0017A0                     l98:
  2862                           
  2863                           ;color.c: 149:     return color;
  2864   0017A0  500D               	movf	color_detect@color^0,w,c
  2865   0017A2  0012               	return		;funcret
  2866   0017A4                     __end_of_color_detect:
  2867                           	callstack 0
  2868                           
  2869 ;; *************** function _color_click_init *****************
  2870 ;; Defined at:
  2871 ;;		line 5 in file "color.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;Total ram usage:        1 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 6
  2892 ;; This function calls:
  2893 ;;		_I2C_2_Master_Init
  2894 ;;		_color_writetoaddr
  2895 ;; This function is called by:
  2896 ;;		_main
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text20
  2901   00180E                     __ptext20:
  2902                           	callstack 0
  2903   00180E                     _color_click_init:
  2904                           	callstack 24
  2905   00180E                     
  2906                           ;color.c: 8:     I2C_2_Master_Init();
  2907   00180E  EC13  F00D         	call	_I2C_2_Master_Init	;wreg free
  2908   001812                     
  2909                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2910   001812  0E01               	movlw	1
  2911   001814  6E07               	movwf	color_writetoaddr@value^0,c
  2912   001816  0E00               	movlw	0
  2913   001818  EC9B  F00D         	call	_color_writetoaddr
  2914   00181C                     
  2915                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2916   00181C  0E3F               	movlw	63
  2917   00181E  6E09               	movwf	??_color_click_init^0,c
  2918   001820  0E55               	movlw	85
  2919   001822                     u1367:
  2920   001822  2EE8               	decfsz	wreg,f,c
  2921   001824  D7FE               	bra	u1367
  2922   001826  2E09               	decfsz	??_color_click_init^0,f,c
  2923   001828  D7FC               	bra	u1367
  2924   00182A  0000               	nop	
  2925   00182C                     
  2926                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2927   00182C  0E03               	movlw	3
  2928   00182E  6E07               	movwf	color_writetoaddr@value^0,c
  2929   001830  0E00               	movlw	0
  2930   001832  EC9B  F00D         	call	_color_writetoaddr
  2931   001836                     
  2932                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2933   001836  0ED5               	movlw	213
  2934   001838  6E07               	movwf	color_writetoaddr@value^0,c
  2935   00183A  0E01               	movlw	1
  2936   00183C  EC9B  F00D         	call	_color_writetoaddr
  2937   001840                     
  2938                           ;color.c: 21:  color_writetoaddr(0x00, 0x13);
  2939   001840  0E13               	movlw	19
  2940   001842  6E07               	movwf	color_writetoaddr@value^0,c
  2941   001844  0E00               	movlw	0
  2942   001846  EC9B  F00D         	call	_color_writetoaddr
  2943   00184A                     
  2944                           ;color.c: 22:     color_writetoaddr(0x07, 0x07);
  2945   00184A  0E07               	movlw	7
  2946   00184C  6E07               	movwf	color_writetoaddr@value^0,c
  2947   00184E  0E07               	movlw	7
  2948   001850  EC9B  F00D         	call	_color_writetoaddr
  2949   001854                     
  2950                           ;color.c: 23:     color_writetoaddr(0x06, 0xD0);
  2951   001854  0ED0               	movlw	208
  2952   001856  6E07               	movwf	color_writetoaddr@value^0,c
  2953   001858  0E06               	movlw	6
  2954   00185A  EC9B  F00D         	call	_color_writetoaddr
  2955   00185E                     
  2956                           ;color.c: 24:     color_writetoaddr(0x05, 0x00);
  2957   00185E  0E00               	movlw	0
  2958   001860  6E07               	movwf	color_writetoaddr@value^0,c
  2959   001862  0E05               	movlw	5
  2960   001864  EC9B  F00D         	call	_color_writetoaddr
  2961   001868                     
  2962                           ;color.c: 25:     color_writetoaddr(0x04, 0x00);
  2963   001868  0E00               	movlw	0
  2964   00186A  6E07               	movwf	color_writetoaddr@value^0,c
  2965   00186C  0E04               	movlw	4
  2966   00186E  EC9B  F00D         	call	_color_writetoaddr
  2967   001872  0012               	return		;funcret
  2968   001874                     __end_of_color_click_init:
  2969                           	callstack 0
  2970                           
  2971 ;; *************** function _color_writetoaddr *****************
  2972 ;; Defined at:
  2973 ;;		line 31 in file "color.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  address         1    wreg     unsigned char 
  2976 ;;  value           1    6[COMRAM] unsigned char 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  address         1    7[COMRAM] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2988 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2991 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2992 ;;Total ram usage:        2 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 5
  2995 ;; This function calls:
  2996 ;;		_I2C_2_Master_Start
  2997 ;;		_I2C_2_Master_Stop
  2998 ;;		_I2C_2_Master_Write
  2999 ;; This function is called by:
  3000 ;;		_color_click_init
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text21
  3005   001B36                     __ptext21:
  3006                           	callstack 0
  3007   001B36                     _color_writetoaddr:
  3008                           	callstack 24
  3009                           
  3010                           ;incstack = 0
  3011                           ;color_writetoaddr@address stored from wreg
  3012   001B36  6E08               	movwf	color_writetoaddr@address^0,c
  3013   001B38                     
  3014                           ;color.c: 32:     I2C_2_Master_Start();
  3015   001B38  ECFE  F00D         	call	_I2C_2_Master_Start	;wreg free
  3016                           
  3017                           ;color.c: 33:     I2C_2_Master_Write(0x52 | 0x00);
  3018   001B3C  0E52               	movlw	82
  3019   001B3E  ECE8  F00D         	call	_I2C_2_Master_Write
  3020                           
  3021                           ;color.c: 34:     I2C_2_Master_Write(0x80 | address);
  3022   001B42  5008               	movf	color_writetoaddr@address^0,w,c
  3023   001B44  0980               	iorlw	128
  3024   001B46  ECE8  F00D         	call	_I2C_2_Master_Write
  3025                           
  3026                           ;color.c: 35:     I2C_2_Master_Write(value);
  3027   001B4A  5007               	movf	color_writetoaddr@value^0,w,c
  3028   001B4C  ECE8  F00D         	call	_I2C_2_Master_Write
  3029                           
  3030                           ;color.c: 36:     I2C_2_Master_Stop();
  3031   001B50  ECF9  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3032   001B54  0012               	return		;funcret
  3033   001B56                     __end_of_color_writetoaddr:
  3034                           	callstack 0
  3035                           
  3036 ;; *************** function _I2C_2_Master_Write *****************
  3037 ;; Defined at:
  3038 ;;		line 45 in file "i2c.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  data_byte       1    wreg     unsigned char 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  data_byte       1    5[COMRAM] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3056 ;;Total ram usage:        1 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 4
  3059 ;; This function calls:
  3060 ;;		_I2C_2_Master_Idle
  3061 ;; This function is called by:
  3062 ;;		_color_writetoaddr
  3063 ;;		_color_read
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text22
  3068   001BD0                     __ptext22:
  3069                           	callstack 0
  3070   001BD0                     _I2C_2_Master_Write:
  3071                           	callstack 25
  3072                           
  3073                           ;incstack = 0
  3074                           ;I2C_2_Master_Write@data_byte stored from wreg
  3075   001BD0  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3076   001BD2                     
  3077                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3078   001BD2  EC28  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3079   001BD6                     
  3080                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3081   001BD6  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3082   001BDA  0012               	return		;funcret
  3083   001BDC                     __end_of_I2C_2_Master_Write:
  3084                           	callstack 0
  3085                           
  3086 ;; *************** function _I2C_2_Master_Stop *****************
  3087 ;; Defined at:
  3088 ;;		line 39 in file "i2c.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;Total ram usage:        0 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; Hardware stack levels required when called: 4
  3109 ;; This function calls:
  3110 ;;		_I2C_2_Master_Idle
  3111 ;; This function is called by:
  3112 ;;		_color_writetoaddr
  3113 ;;		_color_read
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text23
  3118   001BF2                     __ptext23:
  3119                           	callstack 0
  3120   001BF2                     _I2C_2_Master_Stop:
  3121                           	callstack 25
  3122   001BF2                     
  3123                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3124   001BF2  EC28  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3125   001BF6                     
  3126                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3127   001BF6  010E               	movlb	14	; () banked
  3128   001BF8  85DA               	bsf	218,2,b	;volatile
  3129   001BFA                     
  3130                           ; BSR set to: 14
  3131   001BFA  0012               	return		;funcret
  3132   001BFC                     __end_of_I2C_2_Master_Stop:
  3133                           	callstack 0
  3134                           
  3135 ;; *************** function _I2C_2_Master_Start *****************
  3136 ;; Defined at:
  3137 ;;		line 27 in file "i2c.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3155 ;;Total ram usage:        0 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 4
  3158 ;; This function calls:
  3159 ;;		_I2C_2_Master_Idle
  3160 ;; This function is called by:
  3161 ;;		_color_writetoaddr
  3162 ;;		_color_read
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text24
  3167   001BFC                     __ptext24:
  3168                           	callstack 0
  3169   001BFC                     _I2C_2_Master_Start:
  3170                           	callstack 25
  3171   001BFC                     
  3172                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3173   001BFC  EC28  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3174   001C00                     
  3175                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3176   001C00  010E               	movlb	14	; () banked
  3177   001C02  81DA               	bsf	218,0,b	;volatile
  3178   001C04                     
  3179                           ; BSR set to: 14
  3180   001C04  0012               	return		;funcret
  3181   001C06                     __end_of_I2C_2_Master_Start:
  3182                           	callstack 0
  3183                           
  3184 ;; *************** function _I2C_2_Master_Idle *****************
  3185 ;; Defined at:
  3186 ;;		line 22 in file "i2c.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		wreg, status,2, status,0
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3204 ;;Total ram usage:        1 bytes
  3205 ;; Hardware stack levels used: 1
  3206 ;; Hardware stack levels required when called: 3
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_I2C_2_Master_Start
  3211 ;;		_I2C_2_Master_RepStart
  3212 ;;		_I2C_2_Master_Stop
  3213 ;;		_I2C_2_Master_Write
  3214 ;;		_I2C_2_Master_Read
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text25
  3219   001A50                     __ptext25:
  3220                           	callstack 0
  3221   001A50                     _I2C_2_Master_Idle:
  3222                           	callstack 25
  3223   001A50                     l132:
  3224   001A50  010E               	movlb	14	; () banked
  3225   001A52  B5D8               	btfsc	216,2,b	;volatile
  3226   001A54  EF2E  F00D         	goto	u681
  3227   001A58  EF30  F00D         	goto	u680
  3228   001A5C                     u681:
  3229   001A5C  EF28  F00D         	goto	l132
  3230   001A60                     u680:
  3231   001A60                     
  3232                           ; BSR set to: 14
  3233   001A60  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3234   001A64  0E1F               	movlw	31
  3235   001A66  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3236   001A68  A4D8               	btfss	status,2,c
  3237   001A6A  EF39  F00D         	goto	u691
  3238   001A6E  EF3B  F00D         	goto	u690
  3239   001A72                     u691:
  3240   001A72  EF28  F00D         	goto	l132
  3241   001A76                     u690:
  3242   001A76                     
  3243                           ; BSR set to: 14
  3244   001A76  0012               	return		;funcret
  3245   001A78                     __end_of_I2C_2_Master_Idle:
  3246                           	callstack 0
  3247                           
  3248 ;; *************** function _I2C_2_Master_Init *****************
  3249 ;; Defined at:
  3250 ;;		line 4 in file "i2c.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3268 ;;Total ram usage:        0 bytes
  3269 ;; Hardware stack levels used: 1
  3270 ;; Hardware stack levels required when called: 3
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_color_click_init
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text26
  3279   001A26                     __ptext26:
  3280                           	callstack 0
  3281   001A26                     _I2C_2_Master_Init:
  3282                           	callstack 26
  3283   001A26                     
  3284                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3285   001A26  010E               	movlb	14	; () banked
  3286   001A28  51D9               	movf	217,w,b	;volatile
  3287   001A2A  0BF0               	andlw	-16
  3288   001A2C  0908               	iorlw	8
  3289   001A2E  6FD9               	movwf	217,b	;volatile
  3290   001A30                     
  3291                           ; BSR set to: 14
  3292                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3293   001A30  8BD9               	bsf	217,5,b	;volatile
  3294                           
  3295                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3296   001A32  0E9F               	movlw	159
  3297   001A34  6FD6               	movwf	214,b	;volatile
  3298   001A36                     
  3299                           ; BSR set to: 14
  3300                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3301   001A36  8A84               	bsf	132,5,c	;volatile
  3302   001A38                     
  3303                           ; BSR set to: 14
  3304                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3305   001A38  8C84               	bsf	132,6,c	;volatile
  3306   001A3A                     
  3307                           ; BSR set to: 14
  3308                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3309   001A3A  9BA7               	bcf	167,5,b	;volatile
  3310   001A3C                     
  3311                           ; BSR set to: 14
  3312                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3313   001A3C  9DA7               	bcf	167,6,b	;volatile
  3314                           
  3315                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3316   001A3E  0E1D               	movlw	29
  3317   001A40  6F1D               	movwf	29,b	;volatile
  3318                           
  3319                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3320   001A42  0E1E               	movlw	30
  3321   001A44  6F1C               	movwf	28,b	;volatile
  3322                           
  3323                           ;i2c.c: 18:   RD5PPS=0x1C;
  3324   001A46  0E1C               	movlw	28
  3325   001A48  6F6F               	movwf	111,b	;volatile
  3326                           
  3327                           ;i2c.c: 19:   RD6PPS=0x1B;
  3328   001A4A  0E1B               	movlw	27
  3329   001A4C  6F70               	movwf	112,b	;volatile
  3330   001A4E                     
  3331                           ; BSR set to: 14
  3332   001A4E  0012               	return		;funcret
  3333   001A50                     __end_of_I2C_2_Master_Init:
  3334                           	callstack 0
  3335                           
  3336 ;; *************** function _TxBufferedString *****************
  3337 ;; Defined at:
  3338 ;;		line 66 in file "serial.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  string          2    5[COMRAM] PTR unsigned char 
  3341 ;;		 -> STR_2(1), main@buf(40), 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;		None
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1    wreg      void 
  3346 ;; Registers used:
  3347 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3357 ;;Total ram usage:        2 bytes
  3358 ;; Hardware stack levels used: 1
  3359 ;; Hardware stack levels required when called: 4
  3360 ;; This function calls:
  3361 ;;		_putCharToTxBuf
  3362 ;; This function is called by:
  3363 ;;		_main
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text27
  3368   001874                     __ptext27:
  3369                           	callstack 0
  3370   001874                     _TxBufferedString:
  3371                           	callstack 26
  3372   001874                     
  3373                           ;serial.c: 67:     while(*string != 0){
  3374   001874  EF51  F00C         	goto	l1921
  3375   001878                     l1917:
  3376                           
  3377                           ;serial.c: 68:   putCharToTxBuf(*string++);
  3378   001878  C006  FFF6         	movff	TxBufferedString@string,tblptrl
  3379   00187C  C007  FFF7         	movff	TxBufferedString@string+1,tblptrh
  3380   001880  0E00               	movlw	low (__smallconst shr (0+16))
  3381   001882  6EF8               	movwf	tblptru,c
  3382   001884  0E0D               	movlw	(high __ramtop+-1)
  3383   001886  64F7               	cpfsgt	tblptrh,c
  3384   001888  D003               	bra	u1197
  3385   00188A  0008               	tblrd		*
  3386   00188C  50F5               	movf	tablat,w,c
  3387   00188E  D005               	bra	u1190
  3388   001890                     u1197:
  3389   001890  CFF6 FFE9          	movff	tblptrl,fsr0l
  3390   001894  CFF7 FFEA          	movff	tblptrh,fsr0h
  3391   001898  50EF               	movf	indf0,w,c
  3392   00189A                     u1190:
  3393   00189A  EC50  F00D         	call	_putCharToTxBuf
  3394   00189E  4A06               	infsnz	TxBufferedString@string^0,f,c
  3395   0018A0  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  3396   0018A2                     l1921:
  3397                           
  3398                           ;serial.c: 67:     while(*string != 0){
  3399   0018A2  C006  FFF6         	movff	TxBufferedString@string,tblptrl
  3400   0018A6  C007  FFF7         	movff	TxBufferedString@string+1,tblptrh
  3401   0018AA  0E00               	movlw	low (__smallconst shr (0+16))
  3402   0018AC  6EF8               	movwf	tblptru,c
  3403   0018AE  0E0D               	movlw	(high __ramtop+-1)
  3404   0018B0  64F7               	cpfsgt	tblptrh,c
  3405   0018B2  D003               	bra	u1207
  3406   0018B4  0008               	tblrd		*
  3407   0018B6  50F5               	movf	tablat,w,c
  3408   0018B8  D005               	bra	u1200
  3409   0018BA                     u1207:
  3410   0018BA  CFF6 FFE9          	movff	tblptrl,fsr0l
  3411   0018BE  CFF7 FFEA          	movff	tblptrh,fsr0h
  3412   0018C2  50EF               	movf	indf0,w,c
  3413   0018C4                     u1200:
  3414   0018C4  0900               	iorlw	0
  3415   0018C6  A4D8               	btfss	status,2,c
  3416   0018C8  EF68  F00C         	goto	u1211
  3417   0018CC  EF6A  F00C         	goto	u1210
  3418   0018D0                     u1211:
  3419   0018D0  EF3C  F00C         	goto	l1917
  3420   0018D4                     u1210:
  3421   0018D4  0012               	return		;funcret
  3422   0018D6                     __end_of_TxBufferedString:
  3423                           	callstack 0
  3424                           
  3425 ;; *************** function _putCharToTxBuf *****************
  3426 ;; Defined at:
  3427 ;;		line 53 in file "serial.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  byte            1    wreg     unsigned char 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  byte            1    4[COMRAM] unsigned char 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;Total ram usage:        1 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 3
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_TxBufferedString
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text28
  3456   001AA0                     __ptext28:
  3457                           	callstack 0
  3458   001AA0                     _putCharToTxBuf:
  3459                           	callstack 26
  3460                           
  3461                           ;incstack = 0
  3462                           ;putCharToTxBuf@byte stored from wreg
  3463   001AA0  6E05               	movwf	putCharToTxBuf@byte^0,c
  3464   001AA2                     
  3465                           ;serial.c: 54:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  3466   001AA2  0E3B               	movlw	59
  3467   001AA4  6457               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3468   001AA6  EF57  F00D         	goto	u1011
  3469   001AAA  EF59  F00D         	goto	u1010
  3470   001AAE                     u1011:
  3471   001AAE  EF5B  F00D         	goto	l1743
  3472   001AB2                     u1010:
  3473   001AB2  0E00               	movlw	0
  3474   001AB4  6E57               	movwf	_TxBufWriteCnt^0,c	;volatile
  3475   001AB6                     l1743:
  3476                           
  3477                           ;serial.c: 55:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3478   001AB6  5057               	movf	_TxBufWriteCnt^0,w,c
  3479   001AB8  0F60               	addlw	low _EUSART4TXbuf
  3480   001ABA  6ED9               	movwf	fsr2l,c
  3481   001ABC  6ADA               	clrf	fsr2h,c
  3482   001ABE  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  3483   001AC2  2A57               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3484   001AC4  0012               	return		;funcret
  3485   001AC6                     __end_of_putCharToTxBuf:
  3486                           	callstack 0
  3487                           
  3488 ;; *************** function _Interrupts_init *****************
  3489 ;; Defined at:
  3490 ;;		line 10 in file "interrupts.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		None
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3508 ;;Total ram usage:        0 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; Hardware stack levels required when called: 3
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_main
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text29
  3519   001BBE                     __ptext29:
  3520                           	callstack 0
  3521   001BBE                     _Interrupts_init:
  3522                           	callstack 27
  3523   001BBE                     
  3524                           ;interrupts.c: 12:  TRISBbits.TRISB0=1;
  3525   001BBE  8082               	bsf	130,0,c	;volatile
  3526                           
  3527                           ;interrupts.c: 13:     ANSELBbits.ANSELB0=0;
  3528   001BC0  010E               	movlb	14	; () banked
  3529   001BC2  919A               	bcf	154,0,b	;volatile
  3530                           
  3531                           ;interrupts.c: 14:     PIE0bits.INT0IE=1;
  3532   001BC4  8129               	bsf	41,0,b	;volatile
  3533                           
  3534                           ;interrupts.c: 15:     IPR0bits.INT0IP=1;
  3535   001BC6  811F               	bsf	31,0,b	;volatile
  3536                           
  3537                           ;interrupts.c: 19:     PIE4bits.RC4IE=1;
  3538   001BC8  872D               	bsf	45,3,b	;volatile
  3539                           
  3540                           ;interrupts.c: 20:     INTCONbits.PEIE=1;
  3541   001BCA  8CF2               	bsf	242,6,c	;volatile
  3542                           
  3543                           ;interrupts.c: 21:     INTCONbits.GIE=1;
  3544   001BCC  8EF2               	bsf	242,7,c	;volatile
  3545   001BCE                     
  3546                           ; BSR set to: 14
  3547   001BCE  0012               	return		;funcret
  3548   001BD0                     __end_of_Interrupts_init:
  3549                           	callstack 0
  3550                           
  3551 ;; *************** function _Buggy_init *****************
  3552 ;; Defined at:
  3553 ;;		line 7 in file "buggysetup.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		None
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 3
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_main
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text30
  3582   001956                     __ptext30:
  3583                           	callstack 0
  3584   001956                     _Buggy_init:
  3585                           	callstack 27
  3586   001956                     
  3587                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
  3588   001956  9E7C               	bcf	124,7,c	;volatile
  3589                           
  3590                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
  3591   001958  9E84               	bcf	132,7,c	;volatile
  3592                           
  3593                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
  3594   00195A  9680               	bcf	128,3,c	;volatile
  3595                           
  3596                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
  3597   00195C  9688               	bcf	136,3,c	;volatile
  3598                           
  3599                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
  3600   00195E  8486               	bsf	134,2,c	;volatile
  3601                           
  3602                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
  3603   001960  010E               	movlb	14	; () banked
  3604   001962  95B4               	bcf	180,2,b	;volatile
  3605                           
  3606                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
  3607   001964  8686               	bsf	134,3,c	;volatile
  3608                           
  3609                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
  3610   001966  97B4               	bcf	180,3,b	;volatile
  3611                           
  3612                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
  3613   001968  9280               	bcf	128,1,c	;volatile
  3614                           
  3615                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
  3616   00196A  9288               	bcf	136,1,c	;volatile
  3617                           
  3618                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
  3619   00196C  987C               	bcf	124,4,c	;volatile
  3620                           
  3621                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
  3622   00196E  9884               	bcf	132,4,c	;volatile
  3623                           
  3624                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
  3625   001970  967C               	bcf	124,3,c	;volatile
  3626                           
  3627                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
  3628   001972  9684               	bcf	132,3,c	;volatile
  3629                           
  3630                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
  3631   001974  97A7               	bcf	167,3,b	;volatile
  3632                           
  3633                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
  3634   001976  9080               	bcf	128,0,c	;volatile
  3635                           
  3636                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
  3637   001978  9088               	bcf	136,0,c	;volatile
  3638                           
  3639                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
  3640   00197A  907E               	bcf	126,0,c	;volatile
  3641                           
  3642                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
  3643   00197C  9086               	bcf	134,0,c	;volatile
  3644                           
  3645                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
  3646   00197E  907F               	bcf	127,0,c	;volatile
  3647                           
  3648                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
  3649   001980  9087               	bcf	135,0,c	;volatile
  3650                           
  3651                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
  3652   001982  9E7D               	bcf	125,7,c	;volatile
  3653                           
  3654                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
  3655   001984  9E85               	bcf	133,7,c	;volatile
  3656                           
  3657                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
  3658   001986  9679               	bcf	121,3,c	;volatile
  3659                           
  3660                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
  3661   001988  9681               	bcf	129,3,c	;volatile
  3662   00198A                     
  3663                           ; BSR set to: 14
  3664   00198A  0012               	return		;funcret
  3665   00198C                     __end_of_Buggy_init:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _HighISR *****************
  3669 ;; Defined at:
  3670 ;;		line 29 in file "interrupts.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;Total ram usage:        2 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 2
  3691 ;; This function calls:
  3692 ;;		_getCharFromTxBuf
  3693 ;;		_putCharToRxBuf
  3694 ;;		i2_I2C_2_Master_Start
  3695 ;;		i2_I2C_2_Master_Stop
  3696 ;;		i2_I2C_2_Master_Write
  3697 ;;		i2_isDataInTxBuf
  3698 ;; This function is called by:
  3699 ;;		Interrupt level 2
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	intcode
  3704   000008                     __pintcode:
  3705                           	callstack 0
  3706   000008                     _HighISR:
  3707                           	callstack 23
  3708                           
  3709                           ; BSR set to: 14
  3710                           ;incstack = 0
  3711   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3712   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3713   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3714   000012                     
  3715                           ;interrupts.c: 33:     if(PIR0bits.INT0IF){
  3716   000012  010E               	movlb	14	; () banked
  3717   000014  A133               	btfss	51,0,b	;volatile
  3718   000016  EF0F  F000         	goto	i2u127_41
  3719   00001A  EF11  F000         	goto	i2u127_40
  3720   00001E                     i2u127_41:
  3721   00001E  EF1E  F000         	goto	i2l1983
  3722   000022                     i2u127_40:
  3723   000022                     
  3724                           ; BSR set to: 14
  3725                           ;interrupts.c: 34:  LATHbits.LATH3 = 1;
  3726   000022  8680               	bsf	128,3,c	;volatile
  3727   000024                     
  3728                           ; BSR set to: 14
  3729                           ;interrupts.c: 36:     I2C_2_Master_Start();
  3730   000024  EC08  F00E         	call	i2_I2C_2_Master_Start	;wreg free
  3731                           
  3732                           ;interrupts.c: 37:  I2C_2_Master_Write(0x52 | 0x00);
  3733   000028  0E52               	movlw	82
  3734   00002A  ECEE  F00D         	call	i2_I2C_2_Master_Write
  3735                           
  3736                           ;interrupts.c: 38:  I2C_2_Master_Write(0b11100110);
  3737   00002E  0EE6               	movlw	230
  3738   000030  ECEE  F00D         	call	i2_I2C_2_Master_Write
  3739                           
  3740                           ;interrupts.c: 39:  I2C_2_Master_Stop();
  3741   000034  EC03  F00E         	call	i2_I2C_2_Master_Stop	;wreg free
  3742   000038                     
  3743                           ;interrupts.c: 41:     PIR0bits.INT0IF = 0;
  3744   000038  010E               	movlb	14	; () banked
  3745   00003A  9133               	bcf	51,0,b	;volatile
  3746   00003C                     i2l1983:
  3747                           
  3748                           ; BSR set to: 14
  3749                           ;interrupts.c: 44:     if(PIR4bits.RC4IF){
  3750   00003C  A737               	btfss	55,3,b	;volatile
  3751   00003E  EF23  F000         	goto	i2u128_41
  3752   000042  EF25  F000         	goto	i2u128_40
  3753   000046                     i2u128_41:
  3754   000046  EF28  F000         	goto	i2l1987
  3755   00004A                     i2u128_40:
  3756   00004A                     
  3757                           ; BSR set to: 14
  3758                           ;interrupts.c: 46:     putCharToRxBuf(RC4REG);
  3759   00004A  51E3               	movf	227,w,b	;volatile
  3760   00004C  EC63  F00D         	call	_putCharToRxBuf
  3761   000050                     i2l1987:
  3762                           
  3763                           ;interrupts.c: 50:     if(PIR4bits.TX4IF){
  3764   000050  010E               	movlb	14	; () banked
  3765   000052  A537               	btfss	55,2,b	;volatile
  3766   000054  EF2E  F000         	goto	i2u129_41
  3767   000058  EF30  F000         	goto	i2u129_40
  3768   00005C                     i2u129_41:
  3769   00005C  EF40  F000         	goto	i2l239
  3770   000060                     i2u129_40:
  3771   000060                     
  3772                           ; BSR set to: 14
  3773                           ;interrupts.c: 52:     TX4REG = getCharFromTxBuf();
  3774   000060  EC76  F00D         	call	_getCharFromTxBuf	;wreg free
  3775   000064  010E               	movlb	14	; () banked
  3776   000066  6FE4               	movwf	228,b	;volatile
  3777   000068                     
  3778                           ; BSR set to: 14
  3779                           ;interrupts.c: 53:     if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
  3780   000068  ECD3  F00D         	call	i2_isDataInTxBuf	;wreg free
  3781   00006C  0900               	iorlw	0
  3782   00006E  A4D8               	btfss	status,2,c
  3783   000070  EF3C  F000         	goto	i2u130_41
  3784   000074  EF3E  F000         	goto	i2u130_40
  3785   000078                     i2u130_41:
  3786   000078  EF40  F000         	goto	i2l239
  3787   00007C                     i2u130_40:
  3788   00007C  010E               	movlb	14	; () banked
  3789   00007E  952D               	bcf	45,2,b	;volatile
  3790   000080                     i2l239:
  3791   000080  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3792   000084  C003  FFD9         	movff	??_HighISR,fsr2l
  3793   000088  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3794   00008A  0011               	retfie		f
  3795   00008C                     __end_of_HighISR:
  3796                           	callstack 0
  3797                           
  3798 ;; *************** function i2_isDataInTxBuf *****************
  3799 ;; Defined at:
  3800 ;;		line 61 in file "serial.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;		None
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      unsigned char 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3818 ;;Total ram usage:        0 bytes
  3819 ;; Hardware stack levels used: 1
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_HighISR
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text32
  3828   001BA6                     __ptext32:
  3829                           	callstack 0
  3830   001BA6                     i2_isDataInTxBuf:
  3831                           	callstack 24
  3832   001BA6                     
  3833                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  3834   001BA6  5056               	movf	_TxBufReadCnt^0,w,c	;volatile
  3835   001BA8  1857               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3836   001BAA  A4D8               	btfss	status,2,c
  3837   001BAC  EFDA  F00D         	goto	i2u57_41
  3838   001BB0  EFDD  F00D         	goto	i2u57_40
  3839   001BB4                     i2u57_41:
  3840   001BB4  0E01               	movlw	1
  3841   001BB6  EFDE  F00D         	goto	i2u58_40
  3842   001BBA                     i2u57_40:
  3843   001BBA  0E00               	movlw	0
  3844   001BBC                     i2u58_40:
  3845   001BBC  0012               	return		;funcret
  3846   001BBE                     __end_ofi2_isDataInTxBuf:
  3847                           	callstack 0
  3848                           
  3849 ;; *************** function i2_I2C_2_Master_Write *****************
  3850 ;; Defined at:
  3851 ;;		line 45 in file "i2c.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  data_byte       1    wreg     unsigned char 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  data_byte       1    1[COMRAM] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      void 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3868 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3869 ;;Total ram usage:        1 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; Hardware stack levels required when called: 1
  3872 ;; This function calls:
  3873 ;;		i2_I2C_2_Master_Idle
  3874 ;; This function is called by:
  3875 ;;		_HighISR
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text33
  3880   001BDC                     __ptext33:
  3881                           	callstack 0
  3882   001BDC                     i2_I2C_2_Master_Write:
  3883                           	callstack 23
  3884                           
  3885                           ;incstack = 0
  3886                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  3887   001BDC  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  3888   001BDE                     
  3889                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3890   001BDE  EC3C  F00D         	call	i2_I2C_2_Master_Idle	;wreg free
  3891   001BE2                     
  3892                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3893   001BE2  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  3894   001BE6  0012               	return		;funcret
  3895   001BE8                     __end_ofi2_I2C_2_Master_Write:
  3896                           	callstack 0
  3897                           
  3898 ;; *************** function i2_I2C_2_Master_Stop *****************
  3899 ;; Defined at:
  3900 ;;		line 39 in file "i2c.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;Total ram usage:        0 bytes
  3919 ;; Hardware stack levels used: 1
  3920 ;; Hardware stack levels required when called: 1
  3921 ;; This function calls:
  3922 ;;		i2_I2C_2_Master_Idle
  3923 ;; This function is called by:
  3924 ;;		_HighISR
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text34
  3929   001C06                     __ptext34:
  3930                           	callstack 0
  3931   001C06                     i2_I2C_2_Master_Stop:
  3932                           	callstack 23
  3933   001C06                     
  3934                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3935   001C06  EC3C  F00D         	call	i2_I2C_2_Master_Idle	;wreg free
  3936   001C0A                     
  3937                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3938   001C0A  010E               	movlb	14	; () banked
  3939   001C0C  85DA               	bsf	218,2,b	;volatile
  3940   001C0E                     
  3941                           ; BSR set to: 14
  3942   001C0E  0012               	return		;funcret
  3943   001C10                     __end_ofi2_I2C_2_Master_Stop:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function i2_I2C_2_Master_Start *****************
  3947 ;; Defined at:
  3948 ;;		line 27 in file "i2c.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1    wreg      void 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3966 ;;Total ram usage:        0 bytes
  3967 ;; Hardware stack levels used: 1
  3968 ;; Hardware stack levels required when called: 1
  3969 ;; This function calls:
  3970 ;;		i2_I2C_2_Master_Idle
  3971 ;; This function is called by:
  3972 ;;		_HighISR
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text35
  3977   001C10                     __ptext35:
  3978                           	callstack 0
  3979   001C10                     i2_I2C_2_Master_Start:
  3980                           	callstack 23
  3981   001C10                     
  3982                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3983   001C10  EC3C  F00D         	call	i2_I2C_2_Master_Idle	;wreg free
  3984   001C14                     
  3985                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3986   001C14  010E               	movlb	14	; () banked
  3987   001C16  81DA               	bsf	218,0,b	;volatile
  3988   001C18                     
  3989                           ; BSR set to: 14
  3990   001C18  0012               	return		;funcret
  3991   001C1A                     __end_ofi2_I2C_2_Master_Start:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function i2_I2C_2_Master_Idle *****************
  3995 ;; Defined at:
  3996 ;;		line 22 in file "i2c.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;		None
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;		None
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;Total ram usage:        1 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		i2_I2C_2_Master_Start
  4020 ;;		i2_I2C_2_Master_Stop
  4021 ;;		i2_I2C_2_Master_Write
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text36
  4026   001A78                     __ptext36:
  4027                           	callstack 0
  4028   001A78                     i2_I2C_2_Master_Idle:
  4029                           	callstack 23
  4030   001A78                     i2l132:
  4031   001A78  010E               	movlb	14	; () banked
  4032   001A7A  B5D8               	btfsc	216,2,b	;volatile
  4033   001A7C  EF42  F00D         	goto	i2u111_41
  4034   001A80  EF44  F00D         	goto	i2u111_40
  4035   001A84                     i2u111_41:
  4036   001A84  EF3C  F00D         	goto	i2l132
  4037   001A88                     i2u111_40:
  4038   001A88                     
  4039                           ; BSR set to: 14
  4040   001A88  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  4041   001A8C  0E1F               	movlw	31
  4042   001A8E  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  4043   001A90  A4D8               	btfss	status,2,c
  4044   001A92  EF4D  F00D         	goto	i2u112_41
  4045   001A96  EF4F  F00D         	goto	i2u112_40
  4046   001A9A                     i2u112_41:
  4047   001A9A  EF3C  F00D         	goto	i2l132
  4048   001A9E                     i2u112_40:
  4049   001A9E                     
  4050                           ; BSR set to: 14
  4051   001A9E  0012               	return		;funcret
  4052   001AA0                     __end_ofi2_I2C_2_Master_Idle:
  4053                           	callstack 0
  4054                           
  4055 ;; *************** function _putCharToRxBuf *****************
  4056 ;; Defined at:
  4057 ;;		line 33 in file "serial.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  byte            1    wreg     unsigned char 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  byte            1    0[COMRAM] unsigned char 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4075 ;;Total ram usage:        1 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_HighISR
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text37
  4085   001AC6                     __ptext37:
  4086                           	callstack 0
  4087   001AC6                     _putCharToRxBuf:
  4088                           	callstack 24
  4089                           
  4090                           ; BSR set to: 14
  4091                           ;incstack = 0
  4092                           ;putCharToRxBuf@byte stored from wreg
  4093   001AC6  6E01               	movwf	putCharToRxBuf@byte^0,c
  4094   001AC8                     
  4095                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  4096   001AC8  0E13               	movlw	19
  4097   001ACA  6459               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  4098   001ACC  EF6A  F00D         	goto	i2u55_41
  4099   001AD0  EF6C  F00D         	goto	i2u55_40
  4100   001AD4                     i2u55_41:
  4101   001AD4  EF6E  F00D         	goto	i2l1447
  4102   001AD8                     i2u55_40:
  4103   001AD8  0E00               	movlw	0
  4104   001ADA  6E59               	movwf	_RxBufWriteCnt^0,c	;volatile
  4105   001ADC                     i2l1447:
  4106                           
  4107                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  4108   001ADC  5059               	movf	_RxBufWriteCnt^0,w,c
  4109   001ADE  0F3D               	addlw	low _EUSART4RXbuf
  4110   001AE0  6ED9               	movwf	fsr2l,c
  4111   001AE2  6ADA               	clrf	fsr2h,c
  4112   001AE4  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  4113   001AE8  2A59               	incf	_RxBufWriteCnt^0,f,c	;volatile
  4114   001AEA  0012               	return		;funcret
  4115   001AEC                     __end_of_putCharToRxBuf:
  4116                           	callstack 0
  4117                           
  4118 ;; *************** function _getCharFromTxBuf *****************
  4119 ;; Defined at:
  4120 ;;		line 47 in file "serial.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      unsigned char 
  4127 ;; Registers used:
  4128 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4138 ;;Total ram usage:        1 bytes
  4139 ;; Hardware stack levels used: 1
  4140 ;; This function calls:
  4141 ;;		Nothing
  4142 ;; This function is called by:
  4143 ;;		_HighISR
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text38
  4148   001AEC                     __ptext38:
  4149                           	callstack 0
  4150   001AEC                     _getCharFromTxBuf:
  4151                           	callstack 24
  4152   001AEC                     
  4153                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  4154   001AEC  0E3B               	movlw	59
  4155   001AEE  6456               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  4156   001AF0  EF7C  F00D         	goto	i2u122_41
  4157   001AF4  EF7E  F00D         	goto	i2u122_40
  4158   001AF8                     i2u122_41:
  4159   001AF8  EF80  F00D         	goto	i2l1927
  4160   001AFC                     i2u122_40:
  4161   001AFC  0E00               	movlw	0
  4162   001AFE  6E56               	movwf	_TxBufReadCnt^0,c	;volatile
  4163   001B00                     i2l1927:
  4164                           
  4165                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
  4166   001B00  2A56               	incf	_TxBufReadCnt^0,f,c	;volatile
  4167   001B02  0456               	decf	_TxBufReadCnt^0,w,c	;volatile
  4168   001B04  6E01               	movwf	??_getCharFromTxBuf^0,c
  4169   001B06  5001               	movf	??_getCharFromTxBuf^0,w,c
  4170   001B08  0F60               	addlw	low _EUSART4TXbuf
  4171   001B0A  6ED9               	movwf	fsr2l,c
  4172   001B0C  6ADA               	clrf	fsr2h,c
  4173   001B0E  50DF               	movf	indf2,w,c
  4174   001B10  0012               	return		;funcret
  4175   001B12                     __end_of_getCharFromTxBuf:
  4176                           	callstack 0
  4177                           
  4178                           	psect	rparam
  4179   000000                     
  4180                           	psect	temp
  4181   00005A                     btemp:
  4182                           	callstack 0
  4183   00005A                     	ds	1
  4184   000000                     int$flags	set	btemp
  4185   000000                     wtemp8	set	btemp+1
  4186   000000                     ttemp5	set	btemp+1
  4187   000000                     ttemp6	set	btemp+4
  4188   000000                     ttemp7	set	btemp+8
  4189                           
  4190                           	psect	config
  4191                           
  4192                           ;Config register CONFIG1L @ 0x300000
  4193                           ;	External Oscillator mode Selection bits
  4194                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4195                           ;	Power-up default value for COSC bits
  4196                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4197   300000                     	org	3145728
  4198   300000  AA                 	db	170
  4199                           
  4200                           ;Config register CONFIG1H @ 0x300001
  4201                           ;	unspecified, using default values
  4202                           ;	Clock Out Enable bit
  4203                           ;	CLKOUTEN = 0x1, unprogrammed default
  4204                           ;	Clock Switch Enable bit
  4205                           ;	CSWEN = 0x1, unprogrammed default
  4206                           ;	Fail-Safe Clock Monitor Enable bit
  4207                           ;	FCMEN = 0x1, unprogrammed default
  4208   300001                     	org	3145729
  4209   300001  FF                 	db	255
  4210                           
  4211                           ;Config register CONFIG3L @ 0x300004
  4212                           ;	WDT Period Select bits
  4213                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4214                           ;	WDT operating mode
  4215                           ;	WDTE = OFF, WDT Disabled
  4216   300004                     	org	3145732
  4217   300004  9F                 	db	159
  4218                           
  4219                           ;Config register CONFIG3H @ 0x300005
  4220                           ;	unspecified, using default values
  4221                           ;	WDT Window Select bits
  4222                           ;	WDTCWS = 0x7, unprogrammed default
  4223                           ;	WDT input clock selector
  4224                           ;	WDTCCS = 0x7, unprogrammed default
  4225   300005                     	org	3145733
  4226   300005  FF                 	db	255
  4227                           tosu	equ	0xFFF
  4228                           tosh	equ	0xFFE
  4229                           tosl	equ	0xFFD
  4230                           stkptr	equ	0xFFC
  4231                           pclatu	equ	0xFFB
  4232                           pclath	equ	0xFFA
  4233                           pcl	equ	0xFF9
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           prodh	equ	0xFF4
  4239                           prodl	equ	0xFF3
  4240                           indf0	equ	0xFEF
  4241                           postinc0	equ	0xFEE
  4242                           postdec0	equ	0xFED
  4243                           preinc0	equ	0xFEC
  4244                           plusw0	equ	0xFEB
  4245                           fsr0h	equ	0xFEA
  4246                           fsr0l	equ	0xFE9
  4247                           wreg	equ	0xFE8
  4248                           indf1	equ	0xFE7
  4249                           postinc1	equ	0xFE6
  4250                           postdec1	equ	0xFE5
  4251                           preinc1	equ	0xFE4
  4252                           plusw1	equ	0xFE3
  4253                           fsr1h	equ	0xFE2
  4254                           fsr1l	equ	0xFE1
  4255                           bsr	equ	0xFE0
  4256                           indf2	equ	0xFDF
  4257                           postinc2	equ	0xFDE
  4258                           postdec2	equ	0xFDD
  4259                           preinc2	equ	0xFDC
  4260                           plusw2	equ	0xFDB
  4261                           fsr2h	equ	0xFDA
  4262                           fsr2l	equ	0xFD9
  4263                           status	equ	0xFD8

Data Sizes:
    Strings     54
    Constant    0
    Data        0
    BSS         161
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      89
    BANK0           160     59     151
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    color_normalise@RGBC_n	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_n(BANK0[8]), 

    color_read@RGBC	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC(BANK0[8]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S1856$buffer	PTR unsigned char  size(2) Largest target is 0

    S1856$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 54
		 -> STR_1(CODE[54]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK0[40]), 

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), STR_2(CODE[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 54
		 -> STR_1(CODE[54]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 54
		 -> STR_1(CODE[54]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 54
		 -> STR_1(CODE[54]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___aldiv
    ___aldiv->___lmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                59    59      0    7324
                                              0 BANK0     59    59      0
                         _Buggy_init
                    _Interrupts_init
                   _TxBufferedString
                   _color_click_init
                       _color_detect
                    _color_normalise
                         _color_read
                         _initUSART4
                          _sendTxBuf
                            _sprintf
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18    3287
                                             29 COMRAM    31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2936
                                             25 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    2586
                                             14 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                             10 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read                                           8     7      1     407
                                              8 COMRAM     8     7      1
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                     11     2      9    1965
                                             30 COMRAM    11     2      9
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             16 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_detect                                         9     1      8     193
                                              4 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     674
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     674
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     219
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0      37
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (7) i2_isDataInTxBuf                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (7) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (7) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (8) i2_I2C_2_Master_Idle                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_detect
   _color_normalise
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _color_read
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initUSART4
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_I2C_2_Master_Start
     i2_I2C_2_Master_Idle
   i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Idle
   i2_I2C_2_Master_Write
     i2_I2C_2_Master_Idle
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3B      97       5       94.4%
BITBIGSFRlllhhh     8F      0       0      37        0.0%
BITBIGSFRhhl        63      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      59       1       94.7%
BITBIGSFRllllll     2A      0       0      45        0.0%
BITBIGSFRllllll     29      0       0      43        0.0%
BITBIGSFRllllll     26      0       0      52        0.0%
BITBIGSFRlllllh     20      0       0      40        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      44        0.0%
BITBIGSFRllllll      C      0       0      42        0.0%
BITBIGSFRlllllh      C      0       0      41        0.0%
BITBIGSFRllllll      9      0       0      49        0.0%
BITBIGSFRlllhl       8      0       0      38        0.0%
BITBIGSFRllllll      6      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhlhh        5      0       0      34        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllllll      3      0       0      48        0.0%
BITBIGSFRllh         2      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRllllh       1      0       0      39        0.0%
BITBIGSFRhll         1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     118      53        0.0%
DATA                 0      0     118       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 05 16:42:30 2024

                  _white_Light 1B12                             l50 143A                             l80 1872  
                           l83 1B54                             l91 100C                             l94 1306  
                           l86 1B2E                             l88 1B34                             l98 17A0  
                 ___awdiv@sign 000A              ??_Interrupts_init 0005                            l102 17A2  
                          l132 1A50                            l141 1BF0                            l230 1BCE  
                          l150 1916                            l302 1B8C                            l135 1A76  
                          l144 1BFA                            l129 1A4E                            l138 1C04  
                          l147 1BDA                            l316 17FC                            l181 198A  
                          l317 180C                            l270 1B72                            l292 1BA4  
                          l384 1412                            l536 15D4                            l289 1AC4  
                          l298 18D4                            l549 1684                            l983 19BE  
                          u700 1524                            u701 1520                            u710 153E  
                          u711 153A                            u720 1564                            u800 1650  
                          u721 1560                            u801 164C                            u730 1582  
                          u810 1674                            u731 157E                            u811 1670  
                          u740 159E                            u820 1696                            u900 10C0  
                          u741 159A                            u821 1692                            u901 10BA  
                          u750 15C4                            u830 16A6                            u910 10C2  
                          u751 15C0                            u831 16A2                            u680 1A60  
                          u760 15E8                            u840 16CC                            u920 1122  
                          u681 1A5C                            u761 15E4                            u841 16C8  
                          u921 111E                            u690 1A76                            u770 1602  
                          u850 16FE                            u930 1132                            u691 1A72  
                          u771 15FE                            u851 16FA                            u931 112E  
                          u780 161C                            u860 19CE                            u940 1142  
                          u781 1618                            u861 19CA                            u941 113E  
                          u790 163A                            u950 1152                            u870 1030  
                          u791 1636                            u951 114E                            u871 102C  
                          u960 1192                            u880 106E                            u961 118E  
                          u881 106A                            u970 1900                            u890 108A  
                          u971 18F8                            u891 1086                            u990 1BA2  
                          u991 1B9C                            u988 1902                            _abs 19C0  
                 ___awmod@sign 000A                  ?_color_detect 0005                            wreg 0FE8  
              _color_normalise 11C6                           l1021 11C4                           l1031 19DA  
                         l2001 1420                           l1034 19F2                           l1027 1954  
                         l2011 1450                           l2003 1424                           ?_abs 000B  
                         l2021 14DC                           l2013 146A                           l2005 1430  
                         l1046 172E                           l2023 14E0                           l2015 1484  
                         l2007 1434                           l1057 1C1A                           l2025 14F0  
                         l2017 14CE                           l2009 1448                           l2019 14D2  
                         l1601 161C                           l1611 1658                           l1603 1624  
                         l1541 1A60                           l1613 165E                           l1605 162C  
                         l1711 1A3A                           l1703 1A26                           l1551 1530  
                         l1543 1512                           l1607 163A                           l1615 1664  
                         l1631 16CC                           l1623 1686                           l1713 1A3C  
                         l1705 1A30                           l1641 1BFC                           l1721 18D8  
                         l1561 1564                           l1553 153E                           l1545 1516  
                         l1617 1674                           l1609 1650                           l1633 16FE  
                         l1625 1696                           l1801 1918                           l1707 1A36  
                         l1539 1A50                           l1643 1C00                           l1651 1BF6  
                         l1715 1B38                           l1731 1914                           l1723 18DC  
                         l1571 159E                           l1563 156C                           l1555 1546  
                         l1547 1524                           l1619 167C                           l1627 16A6  
                         l1803 1920                           l1741 1AB2                           l1709 1A38  
                         l1645 1BD2                           l1821 181C                           l1725 18E4  
                         l1717 1BE8                           l1581 15C4                           l1573 15A6  
                         l1565 1574                           l1557 154A                           l1549 152C  
                         l1637 19C0                           l1629 16B0                           l1661 1048  
                         l1653 100E                           l1805 1930                           l1901 1994  
                         l1815 1956                           l1743 1AB6                           l1647 1BD6  
                         l1831 1854                           l1823 182C                           l1751 17C2  
                         l1727 18EC                           l1719 1BEC                           l1735 1B8E  
                         l1911 1B74                           l1583 15CC                           l1575 15A8  
                         l1567 1582                           l1559 1552                           l1591 15E8  
                         l1639 19CE                           l1671 10AC                           l1663 1052  
                         l1655 1030                           l1807 194C                           l1903 199C  
                         l1745 1AC2                           l1921 18A2                           l1649 1BF2  
                         l1833 185E                           l1825 1836                           l1817 180E  
                         l1761 131A                           l1753 17D2                           l1729 1912  
                         l1841 1B62                           l1913 1B88                           l1577 15AE  
                         l1569 1588                           l1593 15F0                           l1681 1132  
                         l1673 10C4                           l1665 106E                           l1657 1038  
                         l1905 19A4                           l1739 1AA2                           l1915 1874  
                         l1835 1868                           l1827 1840                           l1819 1812  
                         l1771 1350                           l1763 132A                           l1755 17DC  
                         l1747 17A4                           l1843 1B6C                           l1579 15B4  
                         l1595 15F4                           l1587 15D6                           l1683 1142  
                         l1691 1180                           l1675 10F4                           l1667 108A  
                         l1659 1044                           l1907 19B4                           l1851 1B14  
                         l1917 1878                           l1829 184A                           l1781 1398  
                         l1773 1360                           l1765 132E                           l1757 1308  
                         l1749 17B4                           l1861 0EBE                           l1845 1B6E  
                         l1837 1B56                           l1597 1602                           l1589 15DA  
                         l1685 1152                           l1677 1110                           l1669 10A2  
                         l1693 1196                           l1853 1B24                           l1919 189E  
                         l1791 13DC                           l1783 13A2                           l1775 1376  
                         l1767 133C                           l1759 130C                           l1871 0FCA  
                         l1863 0EDA                           l1855 0E38                           l1847 1B70  
                         l1839 1B60                           l1599 160A                           l1687 1164  
                         l1679 1122                           l1849 1BBE                           l1881 1730  
                         l1785 13C0                           l1777 137E                           l1793 13E2  
                         l1769 134C                           l1873 11C6                           l1865 0F36  
                         l1857 0E52                           l1689 117E                           l1697 11A2  
                         l1891 1770                           l1883 1734                           l1795 13F2  
                         l1787 13D0                           l1779 138A                           l1875 11D8  
                         l1867 0F52                           l1859 0E6A                           l1893 1786  
                         l1885 174A                           l1797 1402                           l1789 13D2  
                         l1877 123A                           l1869 0FAE                           l1895 179C  
                         l1887 1752                           l1879 12A0                           l1889 1768  
                         l1899 198C                           l1995 1414                           l1997 1418  
                         l1999 141C                           STR_1 0E01                           STR_2 0E36  
                         u1000 1BA4                           u1010 1AB2                           u1011 1AAE  
                         u1020 17C2                           u1100 194C                           u1021 17BE  
                         u1101 1948                           u1030 17FC                           u1031 17F8  
                         u1200 18C4                           u1040 131A                           u1041 1316  
                         u1210 18D4                           u1050 133C                           u1130 1B24  
                         u1211 18D0                           u1051 1338                           u1131 1B20  
                         u1140 174A                           u1060 1376                           u1141 1746  
                         u1061 1372                           u1150 1768                           u1070 1398  
                         u1207 18BA                           u1151 1764                           u1071 1394  
                         u1311 142A                           u1160 1786                           u1080 13C0  
                         u1320 1448                           u1161 1782                           u1081 13BC  
                         u1321 1444                           u1170 179C                           u1090 13F2  
                         u1171 1798                           u1091 13EE                           u1331 145A  
                         u1180 1B88                           u1181 1B84                           u1341 1474  
                         u1190 189A                   _BAUD4CONbits 0EE9                           u1197 1890  
                         u1357 14FC                           u1367 1822                           abs@a 000B  
                         _dbuf 009C                           _main 1414                           _prec 0053  
                         fsr0h 0FEA                           fsr1h 0FE2                           indf0 0FEF  
                         fsr2h 0FDA                           fsr0l 0FE9                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           btemp 005A  
                         start 008C                __end_of_HighISR 008C                   ___param_bank 0000  
                        ??_abs 000D                __end_of___aldiv 1414                          ?_main 0001  
              __end_of___awdiv 15D6                __end_of___awmod 1686                ___awdiv@divisor 0007  
                        i2l132 1A78                          i2l135 1A9E                          i2l144 1C0E  
                        i2l138 1C18                          i2l147 1BE6                          i2l239 0080  
                        i2l292 1BBC                          i2l285 1B10                          i2l278 1AEA  
              ___awdiv@counter 0009                 ??_color_detect 000D                   vfpfcnvrt@fmt 0010  
          ___lmul@multiplicand 0009     __end_of_I2C_2_Master_Start 1C06     __end_of_I2C_2_Master_Write 1BDC  
                        _flags 0055                     _Buggy_init 1956                          _fputc 1686  
                        _width 0051                          _putch 1C1A                          tablat 0FF5  
                        plusw0 0FEB                          plusw2 0FDB                          ttemp5 005B  
                        ttemp6 005E                          ttemp7 0062                          status 0FD8  
                        wtemp8 005B                __end_of_sprintf 19C0              color_detect@color 000D  
        _I2C_2_Master_RepStart 1BE8             putCharToRxBuf@byte 0001                __initialization 19F4  
                 __end_of_main 1512                i2_isDataInTxBuf 1BA6             putCharToTxBuf@byte 0005  
                       ??_main 00BC                  __activetblptr 0002        __end_of_color_normalise 1308  
                       ?_fputc 0005               ___awdiv@dividend 0005                         ?_putch 0001  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RD5PPS 0E6F  
                       _RD6PPS 0E70                         i2l1443 1AC8                         i2l1445 1AD8  
                       i2l1447 1ADC                         i2l1471 1BA6                         i2l1449 1AE8  
                       i2l1811 1A78                         i2l1813 1A88                         i2l1923 1AEC  
                       i2l1931 1C10                         i2l1925 1AFC                         i2l1933 1C14  
                       i2l1941 1BE2                         i2l1927 1B00                         i2l1935 1C06  
                       i2l1937 1C0A                         i2l1939 1BDE                         i2l1981 0038  
                       i2l1991 0068                         i2l1983 003C                         i2l1975 0012  
                       i2l1993 007C                         i2l1985 004A                         i2l1977 0022  
                       i2l1987 0050                         i2l1979 0024                         i2l1989 0060  
                vfpfcnvrt@done 0013                      ??_HighISR 0003       __end_of_color_click_init 1874  
                       _RX4PPS 0E15                         _TX4REG 0EE4                   vfprintf@cfmt 001D  
             _getCharFromTxBuf 1AEC                         ___lmul 17A4                      ??___aldiv 0019  
                    ??___awdiv 0009                      ??___awmod 0009             color_detect@RGBC_n 0005  
                       clear_0 19FA                         clear_1 1A06                         clear_2 1A12  
             ___awdiv@quotient 000B                ___awmod@divisor 0007                         isa$std 0001  
              ___awmod@counter 0009                         fputc@c 0005              ?_TxBufferedString 0006  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8             ??_TxBufferedString 0008                         putch@c 0001  
             __end_of_vfprintf 1956                    ?_Buggy_init 0001                      ??_sprintf 0030  
        __end_of_isDataInTxBuf 1BA6                     __accesstop 0060        __end_of__initialization 1A18  
       ?_I2C_2_Master_RepStart 0001        __end_ofi2_isDataInTxBuf 1BBE                  ___rparam_used 0001  
         __end_of_color_detect 17A4                _Interrupts_init 1BBE                 __pcstackCOMRAM 0001  
                 ?_white_Light 0001                  __end_of_fputc 1730                  __end_of_putch 1C1C  
             ?_color_normalise 001F                        ??_fputc 0008                        ??_putch 0005  
                   __pbssBANK0 0060                     __pbssBANK1 0100              _color_writetoaddr 1B36  
           ?_color_writetoaddr 0007                        ?___lmul 0005                 ___lmul@product 000D  
          ??_color_writetoaddr 0008                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                      i2u55_40 1AD8                        i2u55_41 1AD4                        i2u57_40 1BBA  
                      i2u57_41 1BB4                        i2u58_40 1BBC                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5                     _color_read 0E38        __end_of_Interrupts_init 1BD0  
       color_writetoaddr@value 0007                        _HighISR 0008      __end_of_color_writetoaddr 1B56  
             ?i2_isDataInTxBuf 0001             _I2C_2_Master_Start 1BFC                     _initUSART4 1B56  
          i2_I2C_2_Master_Idle 1A78             _I2C_2_Master_Write 1BD0                        __Hparam 0000  
          i2_I2C_2_Master_Stop 1C06                        __Lparam 0000                        ___aldiv 1308  
                      ___awdiv 1512                        ___awmod 15D6            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 001A                   __psmallconst 0E00  
                      __pcinit 19F4                        __ramtop 0E00                        __ptext0 1414  
                      __ptext1 1B12                        __ptext2 198C                        __ptext3 1918  
                      __ptext4 100E                        __ptext5 1686                        __ptext6 1C1A  
                      __ptext7 19C0                        __ptext8 15D6                        __ptext9 1512  
         ?i2_I2C_2_Master_Idle 0001           ?i2_I2C_2_Master_Stop 0001               ___awmod@dividend 0005  
             ___aldiv@dividend 0011                  _RxBufWriteCnt 0059       __end_of_getCharFromTxBuf 1B12  
                      main@buf 00BE                        _sprintf 198C           ??_I2C_2_Master_Start 0006  
         ??_I2C_2_Master_Write 0006          color_normalise@RGBC_n 0027           end_of_initialization 1A18  
            __end_of_sendTxBuf 1B8E                        fputc@fp 0007                  __Lmediumconst 0000  
            ?_color_click_init 0001             ??_color_click_init 0009              __end_of_vfpfcnvrt 11C6  
             ___aldiv@quotient 001B                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 0015  
                   main@F14508 0100                     ??_vfprintf 001D                      _PORTFbits 0F8E  
        ??i2_I2C_2_Master_Idle 0001          ??i2_I2C_2_Master_Stop 0002                     main@RGBC_n 00E7  
                 _color_detect 1730                      _TRISAbits 0F81                      _TRISBbits 0F82  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88               white_Light@state 0005  
                 ??_Buggy_init 0005                    ?_color_read 0009       color_writetoaddr@address 0008  
      ??_I2C_2_Master_RepStart 0006               ?_Interrupts_init 0001                   _EUSART4RXbuf 003D  
                 _EUSART4TXbuf 0060                    ?_initUSART4 0001                 color_read@RGBC 0009  
               __end_of___lmul 180E                    vfpfcnvrt@ap 0011                    vfpfcnvrt@cp 0014  
                  vfpfcnvrt@fp 000F             __end_of_Buggy_init 198C            start_initialization 19F4  
                  __end_of_abs 19F4                  _TxBufWriteCnt 0057                    vfprintf@fmt 001B  
                     ??___lmul 000D                 _putCharToRxBuf 1AC6                 _putCharToTxBuf 1AA0  
          color_normalise@RGBC 001F  i2I2C_2_Master_Write@data_byte 0002   __end_ofi2_I2C_2_Master_Start 1C1A  
 __end_ofi2_I2C_2_Master_Write 1BE8                    __pbssCOMRAM 003D                  __pcstackBANK0 00BC  
                     ?_HighISR 0001         __end_of_putCharToRxBuf 1AEC         __end_of_putCharToTxBuf 1AC6  
                    __pintcode 0008                       ?___aldiv 0011                       ?___awdiv 0005  
                     ?___awmod 0005         TxBufferedString@string 0006           I2C_2_Master_Read@ack 0007  
         I2C_2_Master_Read@tmp 0008                    __smallconst 0E00              _I2C_2_Master_Idle 1A50  
            _I2C_2_Master_Init 1A26              _I2C_2_Master_Read 18D6              _I2C_2_Master_Stop 1BF2  
                 _RxBufReadCnt 0058             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                       ?_sprintf 001E  
            ?_getCharFromTxBuf 0001             ??_getCharFromTxBuf 0001                ___aldiv@divisor 0015  
          ??_I2C_2_Master_Idle 0005                ___aldiv@counter 0019            ??_I2C_2_Master_Init 0005  
          ??_I2C_2_Master_Read 0006                       _LATAbits 0F79            ??_I2C_2_Master_Stop 0006  
                _isDataInTxBuf 1B8E                       _LATDbits 0F7C                       _LATEbits 0F7D  
                     _LATFbits 0F7E               _TxBufferedString 1874                       _LATGbits 0F7F  
                     _LATHbits 0F80                      _sendTxBuf 1B74                       _IPR0bits 0E1F  
                     _PIE0bits 0E29                       _PIE4bits 0E2D                       i2u111_40 1A88  
                     i2u111_41 1A84                       i2u112_40 1A9E                       i2u112_41 1A9A  
                     i2u122_40 1AFC                       i2u130_40 007C                       i2u122_41 1AF8  
                     i2u130_41 0078                       i2u127_40 0022                       i2u127_41 001E  
                     i2u128_40 004A                       i2u128_41 0046                       i2u129_40 0060  
                     i2u129_41 005C                       _PIR0bits 0E33                       _PIR4bits 0E37  
              ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001                       _SSP2CON2 0EDA  
                     _SSP2STAT 0ED8                      _vfpfcnvrt 100E      __end_of_I2C_2_Master_Idle 1A78  
    __end_of_I2C_2_Master_Init 1A50      __end_of_I2C_2_Master_Read 1918      __end_of_I2C_2_Master_Stop 1BFC  
  I2C_2_Master_Write@data_byte 0006                      main@color 00E6                   _TxBufReadCnt 0056  
                   vfpfcnvrt@c 0019                   ??_color_read 000A              ___lmul@multiplier 0005  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 1BF2                     ?_sendTxBuf 0001  
                 ??_initUSART4 0005           i2_I2C_2_Master_Start 1C10           i2_I2C_2_Master_Write 1BDC  
                     __Hrparam 0000              ??_color_normalise 0028                     vfprintf@ap 001C  
                     __Lrparam 0000                     vfprintf@fp 001A                  ??_white_Light 0005  
  __end_ofi2_I2C_2_Master_Idle 1AA0    __end_ofi2_I2C_2_Master_Stop 1C10                     ?_vfpfcnvrt 000F  
           __end_of_color_read 100E                     _ANSELBbits 0E9A                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                     sprintf@fmt 001F             __end_of_initUSART4 1B74  
                     __ptext10 1B74                       __ptext11 1B8E                       __ptext20 180E  
                     __ptext12 1B56                       __ptext21 1B36                       __ptext13 0E38  
                     __ptext30 1956                       __ptext22 1BD0                       __ptext14 1BE8  
                     __ptext23 1BF2                       __ptext15 18D6                       __ptext32 1BA6  
                     __ptext24 1BFC                       __ptext16 11C6                       __ptext33 1BDC  
                     __ptext25 1A50                       __ptext17 17A4                       __ptext34 1C06  
                     __ptext26 1A26                       __ptext18 1308                       __ptext35 1C10  
                     __ptext27 1874                       __ptext19 1730                       __ptext36 1A78  
                     __ptext28 1AA0                       __ptext37 1AC6                       __ptext29 1BBE  
                     __ptext38 1AEC                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
        ?i2_I2C_2_Master_Start 0001          ?i2_I2C_2_Master_Write 0001                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       main@RGBC 00EF                       int$flags 005A  
                     _vfprintf 1918            __end_of_white_Light 1B36                     _INTCONbits 0FF2  
            ??i2_isDataInTxBuf 0001                ??_isDataInTxBuf 0005                       intlevel2 0000  
                    sprintf@ap 0030                    ??_sendTxBuf 0005                    ??_vfpfcnvrt 0012  
             _color_click_init 180E       __end_of_TxBufferedString 18D6                       sprintf@f 0031  
                     sprintf@s 001E                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
                 ___aldiv@sign 001A                     _TX4STAbits 0EE8         ??i2_I2C_2_Master_Start 0002  
       ??i2_I2C_2_Master_Write 0002               ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005  
